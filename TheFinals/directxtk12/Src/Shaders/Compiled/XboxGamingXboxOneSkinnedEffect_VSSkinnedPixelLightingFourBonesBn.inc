#if 0
;
; Input signature:
;
; Name                 Index   Mask Register SysValue  Format   Used
; -------------------- ----- ------ -------- -------- ------- ------
; SV_Position              0   xyzw        0     NONE   float   xyzw
; NORMAL                   0   xyz         1     NONE   float   xyz 
; TEXCOORD                 0   xy          2     NONE   float   xy  
; BLENDINDICES             0   xyzw        3     NONE    uint   xyzw
; BLENDWEIGHT              0   xyzw        4     NONE   float   xyzw
;
;
; Output signature:
;
; Name                 Index   Mask Register SysValue  Format   Used
; -------------------- ----- ------ -------- -------- ------- ------
; TEXCOORD                 0   xy          0     NONE   float   xy  
; TEXCOORD                 1   xyzw        1     NONE   float   xyzw
; TEXCOORD                 2   xyz         2     NONE   float   xyz 
; COLOR                    0   xyzw        3     NONE   float   xyzw
; SV_Position              0   xyzw        4      POS   float   xyzw
;
; shader debug name: C:\Users\marcu\Downloads\DirectXTK12-main\DirectXTK12-main\Src/Shaders/Compiled\XboxGamingXboxOneSkinnedEffect_VSSkinnedPixelLightingFourBonesBn.pdb
; shader hash: 4c981e632ddf630e83cc0380c1ce7a6d
;
; Pipeline Runtime Information: 
;
;PSVRuntimeInfo:
; Vertex Shader
; OutputPositionPresent=1
; MinimumExpectedWaveLaneCount: 0
; MaximumExpectedWaveLaneCount: 4294967295
; UsesViewID: false
; SigInputElements: 5
; SigOutputElements: 5
; SigPatchConstOrPrimElements: 0
; SigInputVectors: 5
; SigOutputVectors[0]: 5
; SigOutputVectors[1]: 0
; SigOutputVectors[2]: 0
; SigOutputVectors[3]: 0
; EntryFunctionName: VSSkinnedPixelLightingFourBonesBn
;
;
; Input signature:
;
; Name                 Index             InterpMode DynIdx
; -------------------- ----- ---------------------- ------
; SV_Position              0                              
; NORMAL                   0                              
; TEXCOORD                 0                              
; BLENDINDICES             0                              
; BLENDWEIGHT              0                              
;
; Output signature:
;
; Name                 Index             InterpMode DynIdx
; -------------------- ----- ---------------------- ------
; TEXCOORD                 0                 linear       
; TEXCOORD                 1                 linear       
; TEXCOORD                 2                 linear       
; COLOR                    0                 linear       
; SV_Position              0          noperspective       
;
; Buffer Definitions:
;
; cbuffer 
; {
;
;   [3872 x i8] (type annotation not present)
;
; }
;
;
; Resource Bindings:
;
; Name                                 Type  Format         Dim      ID      HLSL Bind  Count
; ------------------------------ ---------- ------- ----------- ------- -------------- ------
;                                   cbuffer      NA          NA     CB0            cb0     1
;
;
; ViewId state:
;
; Number of inputs: 20, outputs: 20
; Outputs dependent on ViewId: {  }
; Inputs contributing to computation of Outputs:
;   output 0 depends on inputs: { 8 }
;   output 1 depends on inputs: { 9 }
;   output 4 depends on inputs: { 0, 1, 2, 3, 12, 13, 14, 15, 16, 17, 18, 19 }
;   output 5 depends on inputs: { 0, 1, 2, 3, 12, 13, 14, 15, 16, 17, 18, 19 }
;   output 6 depends on inputs: { 0, 1, 2, 3, 12, 13, 14, 15, 16, 17, 18, 19 }
;   output 7 depends on inputs: { 0, 1, 2, 3, 12, 13, 14, 15, 16, 17, 18, 19 }
;   output 8 depends on inputs: { 4, 5, 6, 12, 13, 14, 15, 16, 17, 18, 19 }
;   output 9 depends on inputs: { 4, 5, 6, 12, 13, 14, 15, 16, 17, 18, 19 }
;   output 10 depends on inputs: { 4, 5, 6, 12, 13, 14, 15, 16, 17, 18, 19 }
;   output 16 depends on inputs: { 0, 1, 2, 3, 12, 13, 14, 15, 16, 17, 18, 19 }
;   output 17 depends on inputs: { 0, 1, 2, 3, 12, 13, 14, 15, 16, 17, 18, 19 }
;   output 18 depends on inputs: { 0, 1, 2, 3, 12, 13, 14, 15, 16, 17, 18, 19 }
;   output 19 depends on inputs: { 0, 1, 2, 3, 12, 13, 14, 15, 16, 17, 18, 19 }
;
target datalayout = "e-m:e-p:32:32-i1:32-i8:32-i16:32-i32:32-i64:64-f16:32-f32:32-f64:64-n8:16:32:64"
target triple = "dxil-ms-xb1"

%dx.types.Handle = type { i8* }
%dx.types.CBufRet.f32 = type { float, float, float, float }
%hostlayout.Parameters = type { <4 x float>, <3 x float>, <3 x float>, float, [3 x <3 x float>], [3 x <3 x float>], [3 x <3 x float>], <3 x float>, <3 x float>, <4 x float>, [4 x <4 x float>], [3 x <3 x float>], [4 x <4 x float>], [72 x [3 x <4 x float>]] }

define void @VSSkinnedPixelLightingFourBonesBn() {
  %1 = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 2, i32 0, i32 0, i1 false)  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %2 = call float @dx.op.loadInput.f32(i32 4, i32 4, i32 0, i8 0, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %3 = call float @dx.op.loadInput.f32(i32 4, i32 4, i32 0, i8 1, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %4 = call float @dx.op.loadInput.f32(i32 4, i32 4, i32 0, i8 2, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %5 = call float @dx.op.loadInput.f32(i32 4, i32 4, i32 0, i8 3, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %6 = call i32 @dx.op.loadInput.i32(i32 4, i32 3, i32 0, i8 0, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %7 = call i32 @dx.op.loadInput.i32(i32 4, i32 3, i32 0, i8 1, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %8 = call i32 @dx.op.loadInput.i32(i32 4, i32 3, i32 0, i8 2, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %9 = call i32 @dx.op.loadInput.i32(i32 4, i32 3, i32 0, i8 3, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %10 = call float @dx.op.loadInput.f32(i32 4, i32 2, i32 0, i8 0, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %11 = call float @dx.op.loadInput.f32(i32 4, i32 2, i32 0, i8 1, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %12 = call float @dx.op.loadInput.f32(i32 4, i32 1, i32 0, i8 0, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %13 = call float @dx.op.loadInput.f32(i32 4, i32 1, i32 0, i8 1, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %14 = call float @dx.op.loadInput.f32(i32 4, i32 1, i32 0, i8 2, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %15 = call float @dx.op.loadInput.f32(i32 4, i32 0, i32 0, i8 0, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %16 = call float @dx.op.loadInput.f32(i32 4, i32 0, i32 0, i8 1, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %17 = call float @dx.op.loadInput.f32(i32 4, i32 0, i32 0, i8 2, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %18 = call float @dx.op.loadInput.f32(i32 4, i32 0, i32 0, i8 3, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %19 = fmul fast float %12, 2.000000e+00
  %20 = fmul fast float %13, 2.000000e+00
  %21 = fmul fast float %14, 2.000000e+00
  %22 = fadd fast float %19, -1.000000e+00
  %23 = fadd fast float %20, -1.000000e+00
  %24 = fadd fast float %21, -1.000000e+00
  %25 = mul i32 %6, 3
  %26 = add i32 %25, 26
  %27 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 %26)  ; CBufferLoadLegacy(handle,regIndex)
  %28 = extractvalue %dx.types.CBufRet.f32 %27, 0
  %29 = extractvalue %dx.types.CBufRet.f32 %27, 1
  %30 = extractvalue %dx.types.CBufRet.f32 %27, 2
  %31 = extractvalue %dx.types.CBufRet.f32 %27, 3
  %32 = add i32 %25, 27
  %33 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 %32)  ; CBufferLoadLegacy(handle,regIndex)
  %34 = extractvalue %dx.types.CBufRet.f32 %33, 0
  %35 = extractvalue %dx.types.CBufRet.f32 %33, 1
  %36 = extractvalue %dx.types.CBufRet.f32 %33, 2
  %37 = extractvalue %dx.types.CBufRet.f32 %33, 3
  %38 = add i32 %25, 28
  %39 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 %38)  ; CBufferLoadLegacy(handle,regIndex)
  %40 = extractvalue %dx.types.CBufRet.f32 %39, 0
  %41 = extractvalue %dx.types.CBufRet.f32 %39, 1
  %42 = extractvalue %dx.types.CBufRet.f32 %39, 2
  %43 = extractvalue %dx.types.CBufRet.f32 %39, 3
  %44 = fmul fast float %28, %2
  %45 = fmul fast float %34, %2
  %46 = fmul fast float %40, %2
  %47 = fmul fast float %29, %2
  %48 = fmul fast float %35, %2
  %49 = fmul fast float %41, %2
  %50 = fmul fast float %30, %2
  %51 = fmul fast float %36, %2
  %52 = fmul fast float %42, %2
  %53 = fmul fast float %31, %2
  %54 = fmul fast float %37, %2
  %55 = fmul fast float %43, %2
  %56 = mul i32 %7, 3
  %57 = add i32 %56, 26
  %58 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 %57)  ; CBufferLoadLegacy(handle,regIndex)
  %59 = extractvalue %dx.types.CBufRet.f32 %58, 0
  %60 = extractvalue %dx.types.CBufRet.f32 %58, 1
  %61 = extractvalue %dx.types.CBufRet.f32 %58, 2
  %62 = extractvalue %dx.types.CBufRet.f32 %58, 3
  %63 = add i32 %56, 27
  %64 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 %63)  ; CBufferLoadLegacy(handle,regIndex)
  %65 = extractvalue %dx.types.CBufRet.f32 %64, 0
  %66 = extractvalue %dx.types.CBufRet.f32 %64, 1
  %67 = extractvalue %dx.types.CBufRet.f32 %64, 2
  %68 = extractvalue %dx.types.CBufRet.f32 %64, 3
  %69 = add i32 %56, 28
  %70 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 %69)  ; CBufferLoadLegacy(handle,regIndex)
  %71 = extractvalue %dx.types.CBufRet.f32 %70, 0
  %72 = extractvalue %dx.types.CBufRet.f32 %70, 1
  %73 = extractvalue %dx.types.CBufRet.f32 %70, 2
  %74 = extractvalue %dx.types.CBufRet.f32 %70, 3
  %75 = fmul fast float %59, %3
  %76 = fmul fast float %65, %3
  %77 = fmul fast float %71, %3
  %78 = fmul fast float %60, %3
  %79 = fmul fast float %66, %3
  %80 = fmul fast float %72, %3
  %81 = fmul fast float %61, %3
  %82 = fmul fast float %67, %3
  %83 = fmul fast float %73, %3
  %84 = fmul fast float %62, %3
  %85 = fmul fast float %68, %3
  %86 = fmul fast float %74, %3
  %87 = fadd fast float %75, %44
  %88 = fadd fast float %76, %45
  %89 = fadd fast float %77, %46
  %90 = fadd fast float %78, %47
  %91 = fadd fast float %79, %48
  %92 = fadd fast float %80, %49
  %93 = fadd fast float %81, %50
  %94 = fadd fast float %82, %51
  %95 = fadd fast float %83, %52
  %96 = fadd fast float %84, %53
  %97 = fadd fast float %85, %54
  %98 = fadd fast float %86, %55
  %99 = mul i32 %8, 3
  %100 = add i32 %99, 26
  %101 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 %100)  ; CBufferLoadLegacy(handle,regIndex)
  %102 = extractvalue %dx.types.CBufRet.f32 %101, 0
  %103 = extractvalue %dx.types.CBufRet.f32 %101, 1
  %104 = extractvalue %dx.types.CBufRet.f32 %101, 2
  %105 = extractvalue %dx.types.CBufRet.f32 %101, 3
  %106 = add i32 %99, 27
  %107 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 %106)  ; CBufferLoadLegacy(handle,regIndex)
  %108 = extractvalue %dx.types.CBufRet.f32 %107, 0
  %109 = extractvalue %dx.types.CBufRet.f32 %107, 1
  %110 = extractvalue %dx.types.CBufRet.f32 %107, 2
  %111 = extractvalue %dx.types.CBufRet.f32 %107, 3
  %112 = add i32 %99, 28
  %113 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 %112)  ; CBufferLoadLegacy(handle,regIndex)
  %114 = extractvalue %dx.types.CBufRet.f32 %113, 0
  %115 = extractvalue %dx.types.CBufRet.f32 %113, 1
  %116 = extractvalue %dx.types.CBufRet.f32 %113, 2
  %117 = extractvalue %dx.types.CBufRet.f32 %113, 3
  %118 = fmul fast float %102, %4
  %119 = fmul fast float %108, %4
  %120 = fmul fast float %114, %4
  %121 = fmul fast float %103, %4
  %122 = fmul fast float %109, %4
  %123 = fmul fast float %115, %4
  %124 = fmul fast float %104, %4
  %125 = fmul fast float %110, %4
  %126 = fmul fast float %116, %4
  %127 = fmul fast float %105, %4
  %128 = fmul fast float %111, %4
  %129 = fmul fast float %117, %4
  %130 = fadd fast float %87, %118
  %131 = fadd fast float %88, %119
  %132 = fadd fast float %89, %120
  %133 = fadd fast float %90, %121
  %134 = fadd fast float %91, %122
  %135 = fadd fast float %92, %123
  %136 = fadd fast float %93, %124
  %137 = fadd fast float %94, %125
  %138 = fadd fast float %95, %126
  %139 = fadd fast float %96, %127
  %140 = fadd fast float %97, %128
  %141 = fadd fast float %98, %129
  %142 = mul i32 %9, 3
  %143 = add i32 %142, 26
  %144 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 %143)  ; CBufferLoadLegacy(handle,regIndex)
  %145 = extractvalue %dx.types.CBufRet.f32 %144, 0
  %146 = extractvalue %dx.types.CBufRet.f32 %144, 1
  %147 = extractvalue %dx.types.CBufRet.f32 %144, 2
  %148 = extractvalue %dx.types.CBufRet.f32 %144, 3
  %149 = add i32 %142, 27
  %150 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 %149)  ; CBufferLoadLegacy(handle,regIndex)
  %151 = extractvalue %dx.types.CBufRet.f32 %150, 0
  %152 = extractvalue %dx.types.CBufRet.f32 %150, 1
  %153 = extractvalue %dx.types.CBufRet.f32 %150, 2
  %154 = extractvalue %dx.types.CBufRet.f32 %150, 3
  %155 = add i32 %142, 28
  %156 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 %155)  ; CBufferLoadLegacy(handle,regIndex)
  %157 = extractvalue %dx.types.CBufRet.f32 %156, 0
  %158 = extractvalue %dx.types.CBufRet.f32 %156, 1
  %159 = extractvalue %dx.types.CBufRet.f32 %156, 2
  %160 = extractvalue %dx.types.CBufRet.f32 %156, 3
  %161 = fmul fast float %145, %5
  %162 = fmul fast float %151, %5
  %163 = fmul fast float %157, %5
  %164 = fmul fast float %146, %5
  %165 = fmul fast float %152, %5
  %166 = fmul fast float %158, %5
  %167 = fmul fast float %147, %5
  %168 = fmul fast float %153, %5
  %169 = fmul fast float %159, %5
  %170 = fmul fast float %148, %5
  %171 = fmul fast float %154, %5
  %172 = fmul fast float %160, %5
  %173 = fadd fast float %130, %161
  %174 = fadd fast float %131, %162
  %175 = fadd fast float %132, %163
  %176 = fadd fast float %133, %164
  %177 = fadd fast float %134, %165
  %178 = fadd fast float %135, %166
  %179 = fadd fast float %136, %167
  %180 = fadd fast float %137, %168
  %181 = fadd fast float %138, %169
  %182 = fadd fast float %139, %170
  %183 = fadd fast float %140, %171
  %184 = fadd fast float %141, %172
  %185 = fmul fast float %173, %15
  %186 = call float @dx.op.tertiary.f32(i32 46, float %16, float %176, float %185)  ; FMad(a,b,c)
  %187 = call float @dx.op.tertiary.f32(i32 46, float %17, float %179, float %186)  ; FMad(a,b,c)
  %188 = call float @dx.op.tertiary.f32(i32 46, float %18, float %182, float %187)  ; FMad(a,b,c)
  %189 = fmul fast float %174, %15
  %190 = call float @dx.op.tertiary.f32(i32 46, float %16, float %177, float %189)  ; FMad(a,b,c)
  %191 = call float @dx.op.tertiary.f32(i32 46, float %17, float %180, float %190)  ; FMad(a,b,c)
  %192 = call float @dx.op.tertiary.f32(i32 46, float %18, float %183, float %191)  ; FMad(a,b,c)
  %193 = fmul fast float %175, %15
  %194 = call float @dx.op.tertiary.f32(i32 46, float %16, float %178, float %193)  ; FMad(a,b,c)
  %195 = call float @dx.op.tertiary.f32(i32 46, float %17, float %181, float %194)  ; FMad(a,b,c)
  %196 = call float @dx.op.tertiary.f32(i32 46, float %18, float %184, float %195)  ; FMad(a,b,c)
  %197 = fmul fast float %173, %22
  %198 = call float @dx.op.tertiary.f32(i32 46, float %23, float %176, float %197)  ; FMad(a,b,c)
  %199 = call float @dx.op.tertiary.f32(i32 46, float %24, float %179, float %198)  ; FMad(a,b,c)
  %200 = fmul fast float %174, %22
  %201 = call float @dx.op.tertiary.f32(i32 46, float %23, float %177, float %200)  ; FMad(a,b,c)
  %202 = call float @dx.op.tertiary.f32(i32 46, float %24, float %180, float %201)  ; FMad(a,b,c)
  %203 = fmul fast float %175, %22
  %204 = call float @dx.op.tertiary.f32(i32 46, float %23, float %178, float %203)  ; FMad(a,b,c)
  %205 = call float @dx.op.tertiary.f32(i32 46, float %24, float %181, float %204)  ; FMad(a,b,c)
  %206 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 22)  ; CBufferLoadLegacy(handle,regIndex)
  %207 = extractvalue %dx.types.CBufRet.f32 %206, 0
  %208 = extractvalue %dx.types.CBufRet.f32 %206, 1
  %209 = extractvalue %dx.types.CBufRet.f32 %206, 2
  %210 = extractvalue %dx.types.CBufRet.f32 %206, 3
  %211 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 23)  ; CBufferLoadLegacy(handle,regIndex)
  %212 = extractvalue %dx.types.CBufRet.f32 %211, 0
  %213 = extractvalue %dx.types.CBufRet.f32 %211, 1
  %214 = extractvalue %dx.types.CBufRet.f32 %211, 2
  %215 = extractvalue %dx.types.CBufRet.f32 %211, 3
  %216 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 24)  ; CBufferLoadLegacy(handle,regIndex)
  %217 = extractvalue %dx.types.CBufRet.f32 %216, 0
  %218 = extractvalue %dx.types.CBufRet.f32 %216, 1
  %219 = extractvalue %dx.types.CBufRet.f32 %216, 2
  %220 = extractvalue %dx.types.CBufRet.f32 %216, 3
  %221 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 25)  ; CBufferLoadLegacy(handle,regIndex)
  %222 = extractvalue %dx.types.CBufRet.f32 %221, 0
  %223 = extractvalue %dx.types.CBufRet.f32 %221, 1
  %224 = extractvalue %dx.types.CBufRet.f32 %221, 2
  %225 = extractvalue %dx.types.CBufRet.f32 %221, 3
  %226 = fmul fast float %207, %188
  %227 = call float @dx.op.tertiary.f32(i32 46, float %192, float %208, float %226)  ; FMad(a,b,c)
  %228 = call float @dx.op.tertiary.f32(i32 46, float %196, float %209, float %227)  ; FMad(a,b,c)
  %229 = call float @dx.op.tertiary.f32(i32 46, float %18, float %210, float %228)  ; FMad(a,b,c)
  %230 = fmul fast float %212, %188
  %231 = call float @dx.op.tertiary.f32(i32 46, float %192, float %213, float %230)  ; FMad(a,b,c)
  %232 = call float @dx.op.tertiary.f32(i32 46, float %196, float %214, float %231)  ; FMad(a,b,c)
  %233 = call float @dx.op.tertiary.f32(i32 46, float %18, float %215, float %232)  ; FMad(a,b,c)
  %234 = fmul fast float %217, %188
  %235 = call float @dx.op.tertiary.f32(i32 46, float %192, float %218, float %234)  ; FMad(a,b,c)
  %236 = call float @dx.op.tertiary.f32(i32 46, float %196, float %219, float %235)  ; FMad(a,b,c)
  %237 = call float @dx.op.tertiary.f32(i32 46, float %18, float %220, float %236)  ; FMad(a,b,c)
  %238 = fmul fast float %222, %188
  %239 = call float @dx.op.tertiary.f32(i32 46, float %192, float %223, float %238)  ; FMad(a,b,c)
  %240 = call float @dx.op.tertiary.f32(i32 46, float %196, float %224, float %239)  ; FMad(a,b,c)
  %241 = call float @dx.op.tertiary.f32(i32 46, float %18, float %225, float %240)  ; FMad(a,b,c)
  %242 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 15)  ; CBufferLoadLegacy(handle,regIndex)
  %243 = extractvalue %dx.types.CBufRet.f32 %242, 0
  %244 = extractvalue %dx.types.CBufRet.f32 %242, 1
  %245 = extractvalue %dx.types.CBufRet.f32 %242, 2
  %246 = extractvalue %dx.types.CBufRet.f32 %242, 3
  %247 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 16)  ; CBufferLoadLegacy(handle,regIndex)
  %248 = extractvalue %dx.types.CBufRet.f32 %247, 0
  %249 = extractvalue %dx.types.CBufRet.f32 %247, 1
  %250 = extractvalue %dx.types.CBufRet.f32 %247, 2
  %251 = extractvalue %dx.types.CBufRet.f32 %247, 3
  %252 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 17)  ; CBufferLoadLegacy(handle,regIndex)
  %253 = extractvalue %dx.types.CBufRet.f32 %252, 0
  %254 = extractvalue %dx.types.CBufRet.f32 %252, 1
  %255 = extractvalue %dx.types.CBufRet.f32 %252, 2
  %256 = extractvalue %dx.types.CBufRet.f32 %252, 3
  %257 = fmul fast float %243, %188
  %258 = call float @dx.op.tertiary.f32(i32 46, float %192, float %244, float %257)  ; FMad(a,b,c)
  %259 = call float @dx.op.tertiary.f32(i32 46, float %196, float %245, float %258)  ; FMad(a,b,c)
  %260 = call float @dx.op.tertiary.f32(i32 46, float %18, float %246, float %259)  ; FMad(a,b,c)
  %261 = fmul fast float %248, %188
  %262 = call float @dx.op.tertiary.f32(i32 46, float %192, float %249, float %261)  ; FMad(a,b,c)
  %263 = call float @dx.op.tertiary.f32(i32 46, float %196, float %250, float %262)  ; FMad(a,b,c)
  %264 = call float @dx.op.tertiary.f32(i32 46, float %18, float %251, float %263)  ; FMad(a,b,c)
  %265 = fmul fast float %253, %188
  %266 = call float @dx.op.tertiary.f32(i32 46, float %192, float %254, float %265)  ; FMad(a,b,c)
  %267 = call float @dx.op.tertiary.f32(i32 46, float %196, float %255, float %266)  ; FMad(a,b,c)
  %268 = call float @dx.op.tertiary.f32(i32 46, float %18, float %256, float %267)  ; FMad(a,b,c)
  %269 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 19)  ; CBufferLoadLegacy(handle,regIndex)
  %270 = extractvalue %dx.types.CBufRet.f32 %269, 0
  %271 = extractvalue %dx.types.CBufRet.f32 %269, 1
  %272 = extractvalue %dx.types.CBufRet.f32 %269, 2
  %273 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 20)  ; CBufferLoadLegacy(handle,regIndex)
  %274 = extractvalue %dx.types.CBufRet.f32 %273, 0
  %275 = extractvalue %dx.types.CBufRet.f32 %273, 1
  %276 = extractvalue %dx.types.CBufRet.f32 %273, 2
  %277 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 21)  ; CBufferLoadLegacy(handle,regIndex)
  %278 = extractvalue %dx.types.CBufRet.f32 %277, 0
  %279 = extractvalue %dx.types.CBufRet.f32 %277, 1
  %280 = extractvalue %dx.types.CBufRet.f32 %277, 2
  %281 = fmul fast float %270, %199
  %282 = call float @dx.op.tertiary.f32(i32 46, float %202, float %271, float %281)  ; FMad(a,b,c)
  %283 = call float @dx.op.tertiary.f32(i32 46, float %205, float %272, float %282)  ; FMad(a,b,c)
  %284 = fmul fast float %274, %199
  %285 = call float @dx.op.tertiary.f32(i32 46, float %202, float %275, float %284)  ; FMad(a,b,c)
  %286 = call float @dx.op.tertiary.f32(i32 46, float %205, float %276, float %285)  ; FMad(a,b,c)
  %287 = fmul fast float %278, %199
  %288 = call float @dx.op.tertiary.f32(i32 46, float %202, float %279, float %287)  ; FMad(a,b,c)
  %289 = call float @dx.op.tertiary.f32(i32 46, float %205, float %280, float %288)  ; FMad(a,b,c)
  %290 = call float @dx.op.dot3.f32(i32 55, float %283, float %286, float %289, float %283, float %286, float %289)  ; Dot3(ax,ay,az,bx,by,bz)
  %291 = call float @dx.op.unary.f32(i32 25, float %290)  ; Rsqrt(value)
  %292 = fmul fast float %291, %283
  %293 = fmul fast float %291, %286
  %294 = fmul fast float %291, %289
  %295 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 14)  ; CBufferLoadLegacy(handle,regIndex)
  %296 = extractvalue %dx.types.CBufRet.f32 %295, 0
  %297 = extractvalue %dx.types.CBufRet.f32 %295, 1
  %298 = extractvalue %dx.types.CBufRet.f32 %295, 2
  %299 = extractvalue %dx.types.CBufRet.f32 %295, 3
  %300 = call float @dx.op.dot4.f32(i32 56, float %188, float %192, float %196, float %18, float %296, float %297, float %298, float %299)  ; Dot4(ax,ay,az,aw,bx,by,bz,bw)
  %301 = call float @dx.op.unary.f32(i32 7, float %300)  ; Saturate(value)
  %302 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 0)  ; CBufferLoadLegacy(handle,regIndex)
  %303 = extractvalue %dx.types.CBufRet.f32 %302, 3
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 0, float %10)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 1, float %11)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 1, i32 0, i8 0, float %260)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 1, i32 0, i8 1, float %264)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 1, i32 0, i8 2, float %268)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 1, i32 0, i8 3, float %301)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 2, i32 0, i8 0, float %292)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 2, i32 0, i8 1, float %293)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 2, i32 0, i8 2, float %294)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 3, i32 0, i8 0, float 1.000000e+00)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 3, i32 0, i8 1, float 1.000000e+00)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 3, i32 0, i8 2, float 1.000000e+00)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 3, i32 0, i8 3, float %303)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 4, i32 0, i8 0, float %229)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 4, i32 0, i8 1, float %233)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 4, i32 0, i8 2, float %237)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 4, i32 0, i8 3, float %241)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  ret void
}

; Function Attrs: nounwind readnone
declare float @dx.op.loadInput.f32(i32, i32, i32, i8, i32) #0

; Function Attrs: nounwind readnone
declare i32 @dx.op.loadInput.i32(i32, i32, i32, i8, i32) #0

; Function Attrs: nounwind
declare void @dx.op.storeOutput.f32(i32, i32, i32, i8, float) #1

; Function Attrs: nounwind readnone
declare float @dx.op.dot3.f32(i32, float, float, float, float, float, float) #0

; Function Attrs: nounwind readnone
declare float @dx.op.unary.f32(i32, float) #0

; Function Attrs: nounwind readnone
declare float @dx.op.dot4.f32(i32, float, float, float, float, float, float, float, float) #0

; Function Attrs: nounwind readonly
declare %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32, %dx.types.Handle, i32) #2

; Function Attrs: nounwind readnone
declare float @dx.op.tertiary.f32(i32, float, float, float) #0

; Function Attrs: nounwind readonly
declare %dx.types.Handle @dx.op.createHandle(i32, i8, i32, i32, i1) #2

attributes #0 = { nounwind readnone }
attributes #1 = { nounwind }
attributes #2 = { nounwind readonly }

!xbox.compiler.options = !{!0}
!llvm.ident = !{!1}
!dx.version = !{!2}
!dx.valver = !{!3}
!dx.shaderModel = !{!4}
!dx.resources = !{!5}
!dx.viewIdState = !{!8}
!dx.entryPoints = !{!9}

!0 = !{!"__XBOX_PER_THREAD_SCRATCH_SIZE_LIMIT_IN_BYTES", !"0"}
!1 = !{!"dxcxbox 2410.2410.11116.10741"}
!2 = !{i32 1, i32 0}
!3 = !{i32 1, i32 8}
!4 = !{!"vs", i32 6, i32 0}
!5 = !{null, null, !6, null}
!6 = !{!7}
!7 = !{i32 0, %hostlayout.Parameters* undef, !"", i32 0, i32 0, i32 1, i32 3872, null}
!8 = !{[22 x i32] [i32 20, i32 20, i32 983280, i32 983280, i32 983280, i32 983280, i32 1792, i32 1792, i32 1792, i32 0, i32 1, i32 2, i32 0, i32 0, i32 985072, i32 985072, i32 985072, i32 985072, i32 985072, i32 985072, i32 985072, i32 985072]}
!9 = !{void ()* @VSSkinnedPixelLightingFourBonesBn, !"VSSkinnedPixelLightingFourBonesBn", !10, !5, null}
!10 = !{!11, !21, null}
!11 = !{!12, !15, !17, !19, !20}
!12 = !{i32 0, !"SV_Position", i8 9, i8 0, !13, i8 0, i32 1, i8 4, i32 0, i8 0, !14}
!13 = !{i32 0}
!14 = !{i32 3, i32 15}
!15 = !{i32 1, !"NORMAL", i8 9, i8 0, !13, i8 0, i32 1, i8 3, i32 1, i8 0, !16}
!16 = !{i32 3, i32 7}
!17 = !{i32 2, !"TEXCOORD", i8 9, i8 0, !13, i8 0, i32 1, i8 2, i32 2, i8 0, !18}
!18 = !{i32 3, i32 3}
!19 = !{i32 3, !"BLENDINDICES", i8 5, i8 0, !13, i8 0, i32 1, i8 4, i32 3, i8 0, !14}
!20 = !{i32 4, !"BLENDWEIGHT", i8 9, i8 0, !13, i8 0, i32 1, i8 4, i32 4, i8 0, !14}
!21 = !{!22, !23, !25, !27, !28}
!22 = !{i32 0, !"TEXCOORD", i8 9, i8 0, !13, i8 2, i32 1, i8 2, i32 0, i8 0, !18}
!23 = !{i32 1, !"TEXCOORD", i8 9, i8 0, !24, i8 2, i32 1, i8 4, i32 1, i8 0, !14}
!24 = !{i32 1}
!25 = !{i32 2, !"TEXCOORD", i8 9, i8 0, !26, i8 2, i32 1, i8 3, i32 2, i8 0, !16}
!26 = !{i32 2}
!27 = !{i32 3, !"COLOR", i8 9, i8 0, !13, i8 2, i32 1, i8 4, i32 3, i8 0, !14}
!28 = !{i32 4, !"SV_Position", i8 9, i8 3, !13, i8 4, i32 1, i8 4, i32 4, i8 0, !14}

;
; DUMPING SHADER HARDWARE INSTRUCTIONS 
;
// Shader Type               : (VS)
// Shader Hw Stage           : (VS)

// Shader Instructions:
shader main
  asic(CI)
  type(VS)
  s_swappc_b64  s[0:1], s[0:1]
  s_waitcnt     vmcnt(0)
  v_mul_lo_i32  v11, v16, 3
  v_mul_lo_i32  v28, v17, 3
  s_mov_b32     s19, 0x00024fac
  s_mov_b32     s18, -1
  s_mov_b32     s16, s3
  s_or_b32      s17, s4, 0x00100000 // wrscc
  v_add_i32     v14, vcc, 26, v11
  buffer_load_dwordx4  v[14:17], v14, s[16:19], 0 idxen
  v_add_i32     v24, vcc, 26, v28
  buffer_load_dwordx4  v[24:27], v24, s[16:19], 0 idxen
  v_mul_lo_i32  v18, v18, 3
  v_mul_lo_i32  v19, v19, 3
  v_add_i32     v0, vcc, 27, v11
  buffer_load_dwordx4  v[0:3], v0, s[16:19], 0 idxen
  v_add_i32     v11, vcc, 28, v11
  v_add_i32     v32, vcc, 28, v28
  v_add_i32     v29, vcc, 27, v18
  v_add_i32     v40, vcc, 27, v28
  v_add_i32     v36, vcc, 26, v18
  v_add_i32     v44, vcc, 26, v19
  buffer_load_dwordx4  v[28:31], v29, s[16:19], 0 idxen
  buffer_load_dwordx4  v[32:35], v32, s[16:19], 0 idxen
  buffer_load_dwordx4  v[36:39], v36, s[16:19], 0 idxen
  buffer_load_dwordx4  v[40:43], v40, s[16:19], 0 idxen
  buffer_load_dwordx4  v[48:51], v11, s[16:19], 0 idxen
  v_add_i32     v18, vcc, 28, v18
  buffer_load_dwordx4  v[44:47], v44, s[16:19], 0 idxen
  buffer_load_dwordx4  v[60:63], v18, s[16:19], 0 idxen
  s_buffer_load_dwordx16  s[0:15], s[16:19], 0x4c
  v_mad_f32     v8, v8, 2.0, -1.0
  v_mad_f32     v9, v9, 2.0, -1.0
  v_mad_f32     v10, v10, 2.0, -1.0
  s_buffer_load_dwordx8  s[32:39], s[16:19], 0x5c
  s_buffer_load_dwordx4  s[40:43], s[16:19], 0x64
  s_waitcnt     vmcnt(9)
  v_mul_legacy_f32  v14, v14, v20
  v_mul_legacy_f32  v15, v15, v20
  s_waitcnt     vmcnt(8)
  v_mac_legacy_f32  v14, v24, v21
  v_add_i32     v24, vcc, 28, v19
  v_add_i32     v19, vcc, 27, v19
  buffer_load_dwordx4  v[52:55], v19, s[16:19], 0 idxen
  buffer_load_dwordx4  v[56:59], v24, s[16:19], 0 idxen
  s_waitcnt     vmcnt(9)
  v_mul_legacy_f32  v0, v0, v20
  v_mac_legacy_f32  v15, v25, v21
  v_mul_legacy_f32  v1, v1, v20
  v_mul_legacy_f32  v16, v16, v20
  v_mul_legacy_f32  v2, v2, v20
  v_mad_legacy_f32  v11, v26, v21, v16
  v_mul_legacy_f32  v17, v17, v20
  v_mul_legacy_f32  v3, v3, v20
  s_waitcnt     vmcnt(6)
  v_mac_legacy_f32  v14, v36, v22
  s_waitcnt     vmcnt(5)
  v_mac_legacy_f32  v0, v40, v21
  s_waitcnt     vmcnt(4)
  v_mul_legacy_f32  v19, v48, v20
  v_mac_legacy_f32  v1, v41, v21
  v_mac_legacy_f32  v15, v37, v22
  v_mac_legacy_f32  v0, v28, v22
  v_mac_legacy_f32  v19, v32, v21
  s_waitcnt     vmcnt(3)
  v_mac_legacy_f32  v14, v44, v23
  v_mul_legacy_f32  v25, v49, v20
  v_mac_legacy_f32  v2, v42, v21
  v_mac_legacy_f32  v1, v29, v22
  v_mac_legacy_f32  v11, v38, v22
  v_mad_legacy_f32  v18, v33, v21, v25
  s_waitcnt     vmcnt(2)
  v_mac_legacy_f32  v19, v60, v22
  v_mul_legacy_f32  v24, v50, v20
  v_mul_legacy_f32  v16, v14, v8
  v_mac_legacy_f32  v15, v45, v23
  v_mac_legacy_f32  v2, v30, v22
  v_mac_legacy_f32  v18, v61, v22
  v_mac_legacy_f32  v24, v34, v21
  v_mac_legacy_f32  v11, v46, v23
  v_mac_legacy_f32  v16, v9, v15
  v_mul_legacy_f32  v14, v14, v4
  v_mac_legacy_f32  v16, v10, v11
  v_mac_legacy_f32  v24, v62, v22
  v_mac_legacy_f32  v14, v5, v15
  v_mac_legacy_f32  v17, v27, v21
  s_waitcnt     lgkmcnt(0)
  v_mul_legacy_f32  v26, s4, v16
  v_mac_legacy_f32  v3, v43, v21
  v_mac_legacy_f32  v3, v31, v22
  s_waitcnt     vmcnt(1)
  v_mac_legacy_f32  v0, v52, v23
  v_mul_legacy_f32  v25, v0, v8
  v_mac_legacy_f32  v1, v53, v23
  s_waitcnt     vmcnt(0)
  v_mac_legacy_f32  v19, v56, v23
  v_mac_legacy_f32  v2, v54, v23
  v_mac_legacy_f32  v25, v9, v1
  v_mac_legacy_f32  v18, v57, v23
  v_mul_legacy_f32  v8, v19, v8
  v_mul_legacy_f32  v0, v0, v4
  v_mac_legacy_f32  v8, v9, v18
  v_mad_legacy_f32  v15, v58, v23, v24
  v_mac_legacy_f32  v25, v10, v2
  v_mad_legacy_f32  v9, v39, v22, v17
  v_mac_legacy_f32  v0, v5, v1
  v_mul_legacy_f32  v17, v51, v20
  v_mac_legacy_f32  v8, v10, v15
  v_mul_legacy_f32  v10, s0, v16
  s_buffer_load_dword  s0, s[16:19], 0x03
  v_mad_legacy_f32  v20, v25, s5, v26
  s_buffer_load_dwordx16  s[16:31], s[16:19], 0x38
  v_mul_legacy_f32  v4, v19, v4
  v_mad_legacy_f32  v1, v6, v11, v14
  v_mad_legacy_f32  v11, v35, v21, v17
  v_mac_legacy_f32  v9, v47, v23
  v_mac_legacy_f32  v0, v6, v2
  v_mul_legacy_f32  v2, s8, v16
  v_mac_legacy_f32  v10, s1, v25
  v_mad_legacy_f32  v14, v8, s6, v20
  v_mac_legacy_f32  v4, v5, v18
  v_mac_legacy_f32  v1, v7, v9
  v_mad_legacy_f32  v5, v63, v22, v11
  v_mac_legacy_f32  v2, s9, v25
  v_mac_legacy_f32  v3, v55, v23
  v_mad_legacy_f32  v9, v8, s2, v10
  v_mul_legacy_f32  v10, v14, v14
  v_mac_legacy_f32  v4, v6, v15
  v_mac_legacy_f32  v0, v7, v3
  v_mul_legacy_f32  v3, s12, v1
  v_mul_legacy_f32  v6, s32, v1
  v_mul_legacy_f32  v11, s36, v1
  v_mul_legacy_f32  v15, s40, v1
  v_mac_legacy_f32  v5, v59, v23
  v_mac_legacy_f32  v10, v9, v9
  v_mac_legacy_f32  v2, s10, v8
  v_mac_legacy_f32  v4, v7, v5
  v_mac_legacy_f32  v6, s33, v0
  v_mac_legacy_f32  v3, s13, v0
  v_mad_legacy_f32  v5, v2, v2, v10
  v_mac_legacy_f32  v15, s41, v0
  v_mac_legacy_f32  v11, s37, v0
  v_mad_legacy_f32  v8, v4, s38, v11
  v_mad_legacy_f32  v10, v4, s42, v15
  v_mac_legacy_f32  v3, s14, v4
  v_mac_legacy_f32  v6, s34, v4
  s_waitcnt     lgkmcnt(0)
  v_mul_legacy_f32  v11, s20, v1
  v_mul_legacy_f32  v15, s24, v1
  v_mul_legacy_f32  v16, s28, v1
  v_rsq_f32     v5, v5
  v_mul_legacy_f32  v17, s19, v7
  v_mac_legacy_f32  v16, s29, v0
  v_mac_legacy_f32  v15, s25, v0
  v_mac_legacy_f32  v11, s21, v0
  v_mul_legacy_f32  v0, s17, v0
  v_mac_legacy_f32  v10, s43, v7
  v_mac_legacy_f32  v8, s39, v7
  v_mac_legacy_f32  v6, s35, v7
  v_mac_legacy_f32  v3, s15, v7
  exp           pos0, v3, v6, v8, v10 done
  s_waitcnt     expcnt(0)
  v_mad_legacy_f32  v3, v4, s26, v15
  v_mac_legacy_f32  v0, s16, v1
  v_mad_legacy_f32  v1, v4, s22, v11
  v_mad_legacy_f32  v6, v4, s30, v16
  v_mad_legacy_f32  v4, v4, s18, v17
  v_add_f32     v0, v0, v4 clamp
  v_mov_b32     v18, 1.0
  v_mov_b32     v19, 0
  v_mad_legacy_f32  v4, v7, s31, v6
  v_mac_legacy_f32  v3, s27, v7
  v_mac_legacy_f32  v1, s23, v7
  exp           param0, v12, v13, v19, v18
  exp           param1, v1, v3, v4, v0
  s_waitcnt     expcnt(0)
  v_mul_legacy_f32  v1, v5, v2
  v_mul_legacy_f32  v0, v5, v9
  v_mul_legacy_f32  v2, v5, v14
  v_mov_b32     v3, s0
  exp           param2, v0, v2, v1, v18
  exp           param3, v18, v18, v18, v3
  s_endpgm      
end


NumVGPR=64,NumSGPR=46,LDS=0,Scratch=0,Occpancy=4

// Shader Type               : (VS)
// Shader Hw Stage           : (ES)

// Shader Instructions:
shader main
  asic(CI)
  type(VS)
  s_swappc_b64  s[0:1], s[0:1]
  s_waitcnt     vmcnt(0)
  v_mul_lo_i32  v14, v16, 3
  s_or_b32      s33, s4, 0x00100000 // wrscc
  s_mov_b32     s32, s3
  s_mov_b32     s34, -1
  s_mov_b32     s35, 0x00024fac
  v_add_i32     v0, vcc, 26, v14
  buffer_load_dwordx4  v[0:3], v0, s[32:35], 0 idxen
  v_mul_lo_i32  v15, v17, 3
  v_mad_f32     v28, v8, 2.0, -1.0
  v_add_i32     v8, vcc, 27, v14
  v_mad_f32     v29, v9, 2.0, -1.0
  v_mad_f32     v30, v10, 2.0, -1.0
  buffer_load_dwordx4  v[8:11], v8, s[32:35], 0 idxen
  v_add_i32     v14, vcc, 28, v14
  v_add_i32     v24, vcc, 26, v15
  v_add_i32     v31, vcc, 27, v15
  v_add_i32     v32, vcc, 28, v15
  buffer_load_dwordx4  v[14:17], v14, s[32:35], 0 idxen
  buffer_load_dwordx4  v[24:27], v24, s[32:35], 0 idxen
  v_mul_lo_i32  v18, v18, 3
  v_mul_lo_i32  v19, v19, 3
  s_buffer_load_dwordx16  s[8:23], s[32:35], 0x4c
  s_buffer_load_dwordx8  s[24:31], s[32:35], 0x5c
  s_buffer_load_dwordx4  s[36:39], s[32:35], 0x64
  s_mov_b32     s1, 0
  s_load_dwordx4  s[0:3], s[0:1], 0x08
  s_waitcnt     vmcnt(3)
  v_mul_legacy_f32  v33, v0, v20
  v_mul_legacy_f32  v34, v1, v20
  v_mul_legacy_f32  v35, v2, v20
  v_mul_legacy_f32  v36, v3, v20
  buffer_load_dwordx4  v[0:3], v31, s[32:35], 0 idxen
  v_add_i32     v31, vcc, 27, v18
  s_waitcnt     vmcnt(3)
  v_mul_legacy_f32  v37, v8, v20
  v_mul_legacy_f32  v8, v11, v20
  v_mul_legacy_f32  v38, v9, v20
  v_mul_legacy_f32  v39, v10, v20
  s_waitcnt     vmcnt(1)
  v_mad_legacy_f32  v26, v26, v21, v35
  v_mad_legacy_f32  v24, v24, v21, v33
  v_mad_legacy_f32  v25, v25, v21, v34
  v_mad_legacy_f32  v27, v27, v21, v36
  v_add_i32     v36, vcc, 26, v19
  s_waitcnt     vmcnt(0)
  v_mad_legacy_f32  v35, v3, v21, v8
  buffer_load_dwordx4  v[8:11], v32, s[32:35], 0 idxen
  v_mad_legacy_f32  v33, v1, v21, v38
  v_mul_legacy_f32  v1, v14, v20
  v_add_i32     v14, vcc, 26, v18
  v_mul_legacy_f32  v3, v16, v20
  v_mad_legacy_f32  v32, v0, v21, v37
  v_mad_legacy_f32  v34, v2, v21, v39
  v_mul_legacy_f32  v39, v15, v20
  v_mul_legacy_f32  v20, v17, v20
  buffer_load_dwordx4  v[14:17], v14, s[32:35], 0 idxen
  v_add_i32     v18, vcc, 28, v18
  v_add_i32     v37, vcc, 27, v19
  v_add_i32     v19, vcc, 28, v19
  s_waitcnt     vmcnt(1)
  v_mad_legacy_f32  v38, v8, v21, v1
  v_mad_legacy_f32  v40, v10, v21, v3
  buffer_load_dwordx4  v[0:3], v31, s[32:35], 0 idxen
  v_mac_legacy_f32  v39, v9, v21
  v_mac_legacy_f32  v20, v11, v21
  buffer_load_dwordx4  v[8:11], v18, s[32:35], 0 idxen
  s_waitcnt     vmcnt(2)
  v_mad_legacy_f32  v21, v14, v22, v24
  v_mad_legacy_f32  v14, v15, v22, v25
  v_mad_legacy_f32  v25, v16, v22, v26
  v_mac_legacy_f32  v27, v17, v22
  s_waitcnt     vmcnt(1)
  v_mad_legacy_f32  v24, v0, v22, v32
  v_mad_legacy_f32  v18, v1, v22, v33
  v_mad_legacy_f32  v26, v2, v22, v34
  v_mad_legacy_f32  v31, v3, v22, v35
  buffer_load_dwordx4  v[0:3], v36, s[32:35], 0 idxen
  s_waitcnt     vmcnt(1)
  v_mad_legacy_f32  v34, v10, v22, v40
  v_mad_legacy_f32  v32, v8, v22, v38
  v_mad_legacy_f32  v33, v9, v22, v39
  v_mac_legacy_f32  v20, v11, v22
  buffer_load_dwordx4  v[8:11], v19, s[32:35], 0 idxen
  s_waitcnt     vmcnt(1)
  v_mad_legacy_f32  v1, v1, v23, v14
  buffer_load_dwordx4  v[14:17], v37, s[32:35], 0 idxen
  v_mad_legacy_f32  v0, v0, v23, v21
  v_mad_legacy_f32  v2, v2, v23, v25
  v_mad_legacy_f32  v3, v3, v23, v27
  s_waitcnt     vmcnt(1)
  v_mad_legacy_f32  v8, v8, v23, v32
  v_mad_legacy_f32  v9, v9, v23, v33
  v_mad_legacy_f32  v10, v10, v23, v34
  v_mad_legacy_f32  v11, v11, v23, v20
  s_waitcnt     vmcnt(0)
  v_mad_legacy_f32  v15, v15, v23, v18
  v_mul_legacy_f32  v18, v0, v4
  v_mac_legacy_f32  v18, v5, v1
  v_mac_legacy_f32  v18, v6, v2
  v_mad_legacy_f32  v14, v14, v23, v24
  v_mad_legacy_f32  v3, v7, v3, v18
  v_mul_legacy_f32  v18, v14, v4
  v_mul_legacy_f32  v0, v0, v28
  v_mul_legacy_f32  v4, v8, v4
  v_mad_legacy_f32  v16, v16, v23, v26
  v_mac_legacy_f32  v18, v5, v15
  v_mac_legacy_f32  v4, v5, v9
  v_mac_legacy_f32  v0, v29, v1
  v_mul_legacy_f32  v1, v14, v28
  v_mad_legacy_f32  v17, v17, v23, v31
  v_mac_legacy_f32  v18, v6, v16
  v_mac_legacy_f32  v4, v6, v10
  v_mac_legacy_f32  v1, v29, v15
  v_mac_legacy_f32  v0, v30, v2
  v_mul_legacy_f32  v2, v8, v28
  v_mad_legacy_f32  v17, v7, v17, v18
  s_waitcnt     lgkmcnt(0)
  v_mul_legacy_f32  v5, s20, v3
  v_mul_legacy_f32  v6, s24, v3
  v_mul_legacy_f32  v8, s28, v3
  v_mac_legacy_f32  v2, v29, v9
  v_mac_legacy_f32  v1, v30, v16
  v_mul_legacy_f32  v16, s12, v0
  v_mac_legacy_f32  v4, v7, v11
  v_mac_legacy_f32  v5, s21, v17
  v_mac_legacy_f32  v6, s25, v17
  v_mac_legacy_f32  v8, s29, v17
  v_mul_legacy_f32  v15, s8, v0
  v_mac_legacy_f32  v5, s22, v4
  v_mac_legacy_f32  v6, s26, v4
  v_mac_legacy_f32  v8, s30, v4
  v_mac_legacy_f32  v2, v30, v10
  v_mac_legacy_f32  v16, s13, v1
  v_mac_legacy_f32  v15, s9, v1
  v_mul_legacy_f32  v0, s16, v0
  v_mac_legacy_f32  v5, s23, v7
  v_mac_legacy_f32  v6, s27, v7
  v_mac_legacy_f32  v8, s31, v7
  s_buffer_load_dword  s4, s[32:35], 0x03
  s_buffer_load_dwordx16  s[20:35], s[32:35], 0x38
  v_mac_legacy_f32  v16, s14, v2
  v_mac_legacy_f32  v0, s17, v1
  v_mac_legacy_f32  v15, s10, v2
  v_mul_legacy_f32  v1, v16, v16
  v_mac_legacy_f32  v0, s18, v2
  v_mac_legacy_f32  v1, v15, v15
  v_mac_legacy_f32  v1, v0, v0
  v_rsq_f32     v1, v1
  v_mul_legacy_f32  v9, s36, v3
  s_waitcnt     lgkmcnt(0)
  v_mul_legacy_f32  v10, s24, v3
  v_mul_legacy_f32  v11, s28, v3
  v_mul_legacy_f32  v14, s32, v3
  v_mad_legacy_f32  v2, v17, s33, v14
  v_mac_legacy_f32  v9, s37, v17
  v_mac_legacy_f32  v10, s25, v17
  v_mac_legacy_f32  v11, s29, v17
  v_mac_legacy_f32  v9, s38, v4
  v_mac_legacy_f32  v10, s26, v4
  v_mac_legacy_f32  v11, s30, v4
  v_mac_legacy_f32  v2, s34, v4
  v_mul_legacy_f32  v14, v1, v15
  v_mac_legacy_f32  v9, s39, v7
  v_mac_legacy_f32  v10, s27, v7
  v_mac_legacy_f32  v11, s31, v7
  v_mac_legacy_f32  v2, s35, v7
  v_mul_legacy_f32  v15, v1, v16
  v_mul_legacy_f32  v0, v1, v0
  v_mul_legacy_f32  v1, s21, v17
  v_mul_legacy_f32  v7, s23, v7
  v_mac_legacy_f32  v1, s20, v3
  v_mad_legacy_f32  v3, v4, s22, v7
  v_add_f32     v1, v1, v3 clamp
  buffer_store_dword  v5, v0, s[0:3], s7 offset:64 glc slc
  buffer_store_dword  v6, v0, s[0:3], s7 offset:68 glc slc
  buffer_store_dword  v8, v0, s[0:3], s7 offset:72 glc slc
  buffer_store_dword  v9, v0, s[0:3], s7 offset:76 glc slc
  buffer_store_dword  v12, v0, s[0:3], s7 glc slc
  buffer_store_dword  v13, v0, s[0:3], s7 offset:4 glc slc
  buffer_store_dword  v10, v0, s[0:3], s7 offset:16 glc slc
  buffer_store_dword  v11, v0, s[0:3], s7 offset:20 glc slc
  buffer_store_dword  v2, v0, s[0:3], s7 offset:24 glc slc
  buffer_store_dword  v1, v0, s[0:3], s7 offset:28 glc slc
  buffer_store_dword  v14, v0, s[0:3], s7 offset:32 glc slc
  buffer_store_dword  v15, v0, s[0:3], s7 offset:36 glc slc
  buffer_store_dword  v0, v0, s[0:3], s7 offset:40 glc slc
  v_mov_b32     v0, 1.0
  buffer_store_dword  v0, v0, s[0:3], s7 offset:48 glc slc
  buffer_store_dword  v0, v0, s[0:3], s7 offset:52 glc slc
  buffer_store_dword  v0, v0, s[0:3], s7 offset:56 glc slc
  v_mov_b32     v0, s4
  buffer_store_dword  v0, v0, s[0:3], s7 offset:60 glc slc
  s_endpgm      
end


NumVGPR=41,NumSGPR=42,LDS=0,Scratch=0,Occpancy=5

// Shader Type               : (VS)
// Shader Hw Stage           : (LS)

// Shader Instructions:
shader main
  asic(CI)
  type(VS)
  s_swappc_b64  s[0:1], s[0:1]
  s_waitcnt     vmcnt(0)
  v_mul_lo_i32  v0, v16, 3
  v_mul_lo_i32  v33, v17, 3
  s_or_b32      s25, s4, 0x00100000 // wrscc
  s_mov_b32     s24, s3
  s_mov_b32     s26, -1
  s_mov_b32     s27, 0x00024fac
  v_add_i32     v2, vcc, 26, v0
  buffer_load_dwordx4  v[24:27], v2, s[24:27], 0 idxen
  v_mad_f32     v2, v8, 2.0, -1.0
  v_add_i32     v8, vcc, 27, v0
  v_add_i32     v0, vcc, 28, v0
  v_add_i32     v28, vcc, 26, v33
  buffer_load_dwordx4  v[14:17], v0, s[24:27], 0 idxen
  v_mad_f32     v3, v9, 2.0, -1.0
  v_mad_f32     v32, v10, 2.0, -1.0
  buffer_load_dwordx4  v[8:11], v8, s[24:27], 0 idxen
  buffer_load_dwordx4  v[28:31], v28, s[24:27], 0 idxen
  v_mul_lo_i32  v18, v18, 3
  v_mul_lo_i32  v19, v19, 3
  s_buffer_load_dwordx16  s[0:15], s[24:27], 0x4c
  s_buffer_load_dwordx8  s[16:23], s[24:27], 0x5c
  s_buffer_load_dwordx4  s[28:31], s[24:27], 0x64
  s_mov_b32     m0, -1
  s_waitcnt     vmcnt(2)
  v_mul_legacy_f32  v0, v15, v20
  v_mul_legacy_f32  v15, v24, v20
  v_mul_legacy_f32  v24, v25, v20
  v_mul_legacy_f32  v25, v26, v20
  v_mul_legacy_f32  v26, v27, v20
  v_add_i32     v27, vcc, 27, v33
  v_mul_legacy_f32  v38, v14, v20
  v_add_i32     v14, vcc, 28, v33
  s_waitcnt     vmcnt(1)
  v_mul_legacy_f32  v34, v8, v20
  v_mul_legacy_f32  v35, v9, v20
  v_mul_legacy_f32  v36, v10, v20
  v_mul_legacy_f32  v37, v11, v20
  buffer_load_dwordx4  v[8:11], v27, s[24:27], 0 idxen
  v_mul_legacy_f32  v27, v16, v20
  v_mul_legacy_f32  v20, v17, v20
  s_waitcnt     vmcnt(1)
  v_mad_legacy_f32  v28, v28, v21, v15
  buffer_load_dwordx4  v[14:17], v14, s[24:27], 0 idxen
  v_add_i32     v33, vcc, 26, v18
  v_mac_legacy_f32  v24, v29, v21
  v_mac_legacy_f32  v25, v30, v21
  v_mac_legacy_f32  v26, v31, v21
  s_waitcnt     vmcnt(1)
  v_mad_legacy_f32  v29, v11, v21, v37
  v_mad_legacy_f32  v30, v8, v21, v34
  v_mad_legacy_f32  v31, v9, v21, v35
  v_mad_legacy_f32  v34, v10, v21, v36
  buffer_load_dwordx4  v[8:11], v33, s[24:27], 0 idxen
  v_add_i32     v33, vcc, 27, v18
  s_waitcnt     vmcnt(1)
  v_mac_legacy_f32  v38, v14, v21
  v_mac_legacy_f32  v0, v15, v21
  v_mac_legacy_f32  v27, v16, v21
  v_mad_legacy_f32  v35, v17, v21, v20
  buffer_load_dwordx4  v[14:17], v33, s[24:27], 0 idxen
  v_add_i32     v18, vcc, 28, v18
  v_add_i32     v33, vcc, 26, v19
  v_add_i32     v36, vcc, 27, v19
  v_add_i32     v37, vcc, 28, v19
  buffer_load_dwordx4  v[18:21], v18, s[24:27], 0 idxen
  s_waitcnt     vmcnt(2)
  v_mac_legacy_f32  v28, v8, v22
  v_mac_legacy_f32  v25, v10, v22
  v_mac_legacy_f32  v26, v11, v22
  s_waitcnt     vmcnt(1)
  v_mac_legacy_f32  v30, v14, v22
  v_mad_legacy_f32  v14, v9, v22, v24
  buffer_load_dwordx4  v[8:11], v33, s[24:27], 0 idxen
  v_mad_legacy_f32  v24, v15, v22, v31
  v_mad_legacy_f32  v31, v16, v22, v34
  v_mac_legacy_f32  v29, v17, v22
  s_waitcnt     vmcnt(1)
  v_mad_legacy_f32  v33, v18, v22, v38
  v_mac_legacy_f32  v0, v19, v22
  v_mac_legacy_f32  v27, v20, v22
  v_mad_legacy_f32  v22, v21, v22, v35
  buffer_load_dwordx4  v[18:21], v37, s[24:27], 0 idxen
  s_waitcnt     vmcnt(1)
  v_mad_legacy_f32  v9, v9, v23, v14
  buffer_load_dwordx4  v[14:17], v36, s[24:27], 0 idxen
  v_mad_legacy_f32  v8, v8, v23, v28
  v_mad_legacy_f32  v10, v10, v23, v25
  v_mad_legacy_f32  v11, v11, v23, v26
  s_waitcnt     vmcnt(1)
  v_mac_legacy_f32  v0, v19, v23
  v_mad_legacy_f32  v19, v20, v23, v27
  v_mad_legacy_f32  v20, v21, v23, v22
  v_mul_legacy_f32  v21, v8, v4
  v_mac_legacy_f32  v21, v5, v9
  v_mac_legacy_f32  v21, v6, v10
  v_mac_legacy_f32  v21, v7, v11
  v_mul_legacy_f32  v8, v8, v2
  s_waitcnt     vmcnt(0)
  v_mad_legacy_f32  v11, v14, v23, v30
  v_mad_legacy_f32  v15, v15, v23, v24
  v_mul_legacy_f32  v14, v11, v4
  v_mad_legacy_f32  v16, v16, v23, v31
  v_mac_legacy_f32  v14, v5, v15
  v_mad_legacy_f32  v17, v17, v23, v29
  v_mac_legacy_f32  v14, v6, v16
  v_mac_legacy_f32  v14, v7, v17
  v_mad_legacy_f32  v17, v18, v23, v33
  v_mul_legacy_f32  v4, v17, v4
  v_mac_legacy_f32  v4, v5, v0
  v_mac_legacy_f32  v4, v6, v19
  v_mad_legacy_f32  v6, v7, v20, v4
  v_mad_legacy_f32  v4, v3, v9, v8
  v_mad_legacy_f32  v10, v32, v10, v4
  v_mul_legacy_f32  v4, v11, v2
  v_mul_legacy_f32  v2, v17, v2
  v_mac_legacy_f32  v4, v3, v15
  v_mad_legacy_f32  v0, v3, v0, v2
  v_mad_legacy_f32  v11, v32, v16, v4
  s_waitcnt     lgkmcnt(0)
  v_mul_legacy_f32  v2, s12, v21
  v_mul_legacy_f32  v3, s16, v21
  v_mul_legacy_f32  v4, s20, v21
  v_mul_legacy_f32  v17, s4, v10
  v_mul_legacy_f32  v16, s0, v10
  v_mac_legacy_f32  v2, s13, v14
  v_mac_legacy_f32  v3, s17, v14
  v_mac_legacy_f32  v4, s21, v14
  v_mul_legacy_f32  v10, s8, v10
  v_mac_legacy_f32  v0, v32, v19
  v_mac_legacy_f32  v17, s5, v11
  v_mac_legacy_f32  v2, s14, v6
  v_mac_legacy_f32  v3, s18, v6
  v_mac_legacy_f32  v4, s22, v6
  v_mac_legacy_f32  v16, s1, v11
  v_mac_legacy_f32  v10, s9, v11
  v_mac_legacy_f32  v17, s6, v0
  v_mac_legacy_f32  v2, s15, v7
  v_mac_legacy_f32  v3, s19, v7
  v_mac_legacy_f32  v4, s23, v7
  s_buffer_load_dword  s3, s[24:27], 0x03
  s_buffer_load_dwordx16  s[12:27], s[24:27], 0x38
  v_mac_legacy_f32  v16, s2, v0
  v_mad_legacy_f32  v18, v0, s10, v10
  v_mul_legacy_f32  v0, v17, v17
  v_mac_legacy_f32  v0, v16, v16
  v_mac_legacy_f32  v0, v18, v18
  v_rsq_f32     v19, v0
  v_mul_legacy_f32  v5, s28, v21
  s_waitcnt     lgkmcnt(0)
  v_mul_legacy_f32  v8, s16, v21
  v_mul_legacy_f32  v9, s20, v21
  v_mul_legacy_f32  v15, s24, v21
  v_mad_legacy_f32  v0, v14, s25, v15
  v_mac_legacy_f32  v5, s29, v14
  v_mac_legacy_f32  v8, s17, v14
  v_mac_legacy_f32  v9, s21, v14
  s_movk_i32    s0, 0x0050
  v_mac_legacy_f32  v5, s30, v6
  v_mac_legacy_f32  v8, s18, v6
  v_mac_legacy_f32  v9, s22, v6
  v_mac_legacy_f32  v0, s26, v6
  v_mul_legacy_f32  v10, v19, v16
  v_mul_lo_i32  v16, v1, s0
  v_mul_legacy_f32  v14, s13, v14
  v_mac_legacy_f32  v5, s31, v7
  v_mac_legacy_f32  v8, s19, v7
  v_mac_legacy_f32  v9, s23, v7
  v_mac_legacy_f32  v0, s27, v7
  v_mul_legacy_f32  v7, s15, v7
  v_mac_legacy_f32  v14, s12, v21
  v_mad_legacy_f32  v1, v6, s14, v7
  v_add_f32     v1, v14, v1 clamp
  v_mul_legacy_f32  v11, v19, v17
  v_mul_legacy_f32  v15, v19, v18
  ds_write2_b64  v16, v[2:3], v[4:5] offset0:8 offset1:9
  ds_write2_b64  v16, v[12:13], v[0:1] offset1:3
  ds_write_b32  v16, v15 offset:40
  ds_write2_b64  v16, v[8:9], v[10:11] offset0:2 offset1:4
  v_mov_b32     v0, 1.0
  v_mov_b32     v1, 1.0
  v_mov_b32     v2, 1.0
  v_mov_b32     v3, s3
  ds_write2_b64  v16, v[0:1], v[2:3] offset0:6 offset1:7
  s_endpgm      
end


NumVGPR=39,NumSGPR=34,LDS=0,Scratch=0,Occpancy=6


#endif

const unsigned char SkinnedEffect_VSSkinnedPixelLightingFourBonesBn[] = {
  0x44, 0x58, 0x42, 0x43, 0xea, 0xac, 0x56, 0xe5, 0xa6, 0x25, 0x13, 0x22,
  0x78, 0xed, 0x4b, 0x06, 0x19, 0x7f, 0x7e, 0x68, 0x01, 0x00, 0x00, 0x00,
  0xf0, 0x23, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00,
  0x50, 0x00, 0x00, 0x00, 0x38, 0x01, 0x00, 0x00, 0x04, 0x02, 0x00, 0x00,
  0xe8, 0x03, 0x00, 0x00, 0x6c, 0x04, 0x00, 0x00, 0x10, 0x05, 0x00, 0x00,
  0x2c, 0x05, 0x00, 0x00, 0x53, 0x46, 0x49, 0x30, 0x08, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x49, 0x53, 0x47, 0x31,
  0xe0, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xa8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x0f, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xb4, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x07, 0x07, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xbb, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x03, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xc4, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x0f, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xd1, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x0f, 0x0f, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x53, 0x56, 0x5f, 0x50, 0x6f, 0x73, 0x69, 0x74,
  0x69, 0x6f, 0x6e, 0x00, 0x4e, 0x4f, 0x52, 0x4d, 0x41, 0x4c, 0x00, 0x54,
  0x45, 0x58, 0x43, 0x4f, 0x4f, 0x52, 0x44, 0x00, 0x42, 0x4c, 0x45, 0x4e,
  0x44, 0x49, 0x4e, 0x44, 0x49, 0x43, 0x45, 0x53, 0x00, 0x42, 0x4c, 0x45,
  0x4e, 0x44, 0x57, 0x45, 0x49, 0x47, 0x48, 0x54, 0x00, 0x00, 0x00, 0x00,
  0x4f, 0x53, 0x47, 0x31, 0xc4, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00,
  0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xa8, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x03, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xa8, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xa8, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x07, 0x08, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb1, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xb7, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00,
  0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x54, 0x45, 0x58, 0x43,
  0x4f, 0x4f, 0x52, 0x44, 0x00, 0x43, 0x4f, 0x4c, 0x4f, 0x52, 0x00, 0x53,
  0x56, 0x5f, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x00, 0x00,
  0x50, 0x53, 0x56, 0x30, 0xdc, 0x01, 0x00, 0x00, 0x34, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff,
  0x01, 0x00, 0x00, 0x00, 0x05, 0x05, 0x00, 0x05, 0x05, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x57, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x7c, 0x00, 0x00, 0x00, 0x00, 0x53, 0x56, 0x5f, 0x50, 0x6f, 0x73, 0x69,
  0x74, 0x69, 0x6f, 0x6e, 0x00, 0x4e, 0x4f, 0x52, 0x4d, 0x41, 0x4c, 0x00,
  0x54, 0x45, 0x58, 0x43, 0x4f, 0x4f, 0x52, 0x44, 0x00, 0x42, 0x4c, 0x45,
  0x4e, 0x44, 0x49, 0x4e, 0x44, 0x49, 0x43, 0x45, 0x53, 0x00, 0x42, 0x4c,
  0x45, 0x4e, 0x44, 0x57, 0x45, 0x49, 0x47, 0x48, 0x54, 0x00, 0x54, 0x45,
  0x58, 0x43, 0x4f, 0x4f, 0x52, 0x44, 0x00, 0x54, 0x45, 0x58, 0x43, 0x4f,
  0x4f, 0x52, 0x44, 0x00, 0x54, 0x45, 0x58, 0x43, 0x4f, 0x4f, 0x52, 0x44,
  0x00, 0x43, 0x4f, 0x4c, 0x4f, 0x52, 0x00, 0x56, 0x53, 0x53, 0x6b, 0x69,
  0x6e, 0x6e, 0x65, 0x64, 0x50, 0x69, 0x78, 0x65, 0x6c, 0x4c, 0x69, 0x67,
  0x68, 0x74, 0x69, 0x6e, 0x67, 0x46, 0x6f, 0x75, 0x72, 0x42, 0x6f, 0x6e,
  0x65, 0x73, 0x42, 0x6e, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x10, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x44, 0x00, 0x03, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x43, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x02, 0x42, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x03, 0x44, 0x00, 0x01, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x04, 0x44, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x36, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x42, 0x00,
  0x03, 0x02, 0x00, 0x00, 0x3f, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x01, 0x01, 0x44, 0x00, 0x03, 0x02, 0x00, 0x00, 0x48, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x01, 0x02, 0x43, 0x00, 0x03, 0x02, 0x00, 0x00,
  0x51, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x03, 0x44, 0x00,
  0x03, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x04, 0x44, 0x03, 0x03, 0x04, 0x00, 0x00, 0xf0, 0x00, 0x0f, 0x00,
  0xf0, 0x00, 0x0f, 0x00, 0xf0, 0x00, 0x0f, 0x00, 0xf0, 0x00, 0x0f, 0x00,
  0x00, 0x07, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0x07, 0x0f, 0x00,
  0xf0, 0x07, 0x0f, 0x00, 0xf0, 0x07, 0x0f, 0x00, 0xf0, 0x07, 0x0f, 0x00,
  0xf0, 0x07, 0x0f, 0x00, 0xf0, 0x07, 0x0f, 0x00, 0xf0, 0x07, 0x0f, 0x00,
  0xf0, 0x07, 0x0f, 0x00, 0x52, 0x54, 0x53, 0x30, 0x7c, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x7c, 0x00, 0x00, 0x00, 0x1d, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3c, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x44, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x4c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff,
  0x01, 0x00, 0x00, 0x00, 0x68, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xff, 0xff, 0xff, 0xff, 0x49, 0x4c, 0x44, 0x4e, 0x9c, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x94, 0x00, 0x43, 0x3a, 0x5c, 0x55, 0x73, 0x65, 0x72, 0x73,
  0x5c, 0x6d, 0x61, 0x72, 0x63, 0x75, 0x5c, 0x44, 0x6f, 0x77, 0x6e, 0x6c,
  0x6f, 0x61, 0x64, 0x73, 0x5c, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x58,
  0x54, 0x4b, 0x31, 0x32, 0x2d, 0x6d, 0x61, 0x69, 0x6e, 0x5c, 0x44, 0x69,
  0x72, 0x65, 0x63, 0x74, 0x58, 0x54, 0x4b, 0x31, 0x32, 0x2d, 0x6d, 0x61,
  0x69, 0x6e, 0x5c, 0x53, 0x72, 0x63, 0x2f, 0x53, 0x68, 0x61, 0x64, 0x65,
  0x72, 0x73, 0x2f, 0x43, 0x6f, 0x6d, 0x70, 0x69, 0x6c, 0x65, 0x64, 0x5c,
  0x58, 0x62, 0x6f, 0x78, 0x47, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x58, 0x62,
  0x6f, 0x78, 0x4f, 0x6e, 0x65, 0x53, 0x6b, 0x69, 0x6e, 0x6e, 0x65, 0x64,
  0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x5f, 0x56, 0x53, 0x53, 0x6b, 0x69,
  0x6e, 0x6e, 0x65, 0x64, 0x50, 0x69, 0x78, 0x65, 0x6c, 0x4c, 0x69, 0x67,
  0x68, 0x74, 0x69, 0x6e, 0x67, 0x46, 0x6f, 0x75, 0x72, 0x42, 0x6f, 0x6e,
  0x65, 0x73, 0x42, 0x6e, 0x2e, 0x70, 0x64, 0x62, 0x00, 0x00, 0x00, 0x00,
  0x48, 0x41, 0x53, 0x48, 0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x4c, 0x98, 0x1e, 0x63, 0x2d, 0xdf, 0x63, 0x0e, 0x83, 0xcc, 0x03, 0x80,
  0xc1, 0xce, 0x7a, 0x6d, 0x44, 0x58, 0x49, 0x4c, 0xbc, 0x1e, 0x00, 0x00,
  0x60, 0x00, 0x01, 0x00, 0xaf, 0x07, 0x00, 0x00, 0x44, 0x58, 0x49, 0x4c,
  0x00, 0x01, 0x00, 0x00, 0x94, 0x00, 0x00, 0x00, 0x94, 0x10, 0x00, 0x00,
  0x58, 0x44, 0x41, 0x54, 0x08, 0x00, 0x00, 0x00, 0x24, 0x00, 0x00, 0x00,
  0x07, 0x00, 0x00, 0x00, 0x84, 0x00, 0x00, 0x00, 0xac, 0x10, 0x00, 0x00,
  0x10, 0x00, 0x00, 0x00, 0x30, 0x11, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x40, 0x11, 0x00, 0x00, 0xfb, 0x03, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x3c, 0x15, 0x00, 0x00, 0x4b, 0x04, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x88, 0x19, 0x00, 0x00, 0x24, 0x04, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0xac, 0x1d, 0x00, 0x00, 0xb0, 0x00, 0x00, 0x00,
  0x06, 0x00, 0x00, 0x00, 0x5c, 0x1e, 0x00, 0x00, 0x4a, 0x00, 0x00, 0x00,
  0x08, 0x00, 0x00, 0x00, 0xa8, 0x1e, 0x00, 0x00, 0x11, 0x00, 0x00, 0x00,
  0x60, 0x00, 0x01, 0x00, 0x2b, 0x04, 0x00, 0x00, 0x44, 0x58, 0x49, 0x4c,
  0x00, 0x01, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x94, 0x10, 0x00, 0x00,
  0x42, 0x43, 0xc0, 0xde, 0x21, 0x0c, 0x00, 0x00, 0x22, 0x04, 0x00, 0x00,
  0x0b, 0x82, 0x20, 0x00, 0x02, 0x00, 0x00, 0x00, 0x13, 0x00, 0x00, 0x00,
  0x07, 0x81, 0x23, 0x91, 0x41, 0xc8, 0x04, 0x49, 0x06, 0x10, 0x32, 0x39,
  0x92, 0x01, 0x84, 0x0c, 0x25, 0x05, 0x08, 0x19, 0x1e, 0x04, 0x8b, 0x62,
  0x80, 0x18, 0x45, 0x02, 0x42, 0x92, 0x0b, 0x42, 0xc4, 0x10, 0x32, 0x14,
  0x38, 0x08, 0x18, 0x4b, 0x0a, 0x32, 0x62, 0x88, 0x48, 0x90, 0x14, 0x20,
  0x43, 0x46, 0x88, 0xa5, 0x00, 0x19, 0x32, 0x42, 0xe4, 0x48, 0x0e, 0x90,
  0x11, 0x23, 0xc4, 0x50, 0x41, 0x51, 0x81, 0x8c, 0xe1, 0x83, 0xe5, 0x8a,
  0x04, 0x31, 0x46, 0x06, 0x51, 0x18, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00,
  0x1b, 0x8c, 0xe0, 0xff, 0xff, 0xff, 0xff, 0x07, 0x40, 0x02, 0xa8, 0x0d,
  0x84, 0xf0, 0xff, 0xff, 0xff, 0xff, 0x03, 0x20, 0x6d, 0x30, 0x86, 0xff,
  0xff, 0xff, 0xff, 0x1f, 0x00, 0x09, 0xa8, 0x00, 0x49, 0x18, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x13, 0x82, 0x60, 0x42, 0x20, 0x4c, 0x08, 0x06,
  0x00, 0x00, 0x00, 0x00, 0x89, 0x20, 0x00, 0x00, 0x32, 0x00, 0x00, 0x00,
  0x32, 0x22, 0x88, 0x09, 0x20, 0x64, 0x85, 0x04, 0x13, 0x23, 0xa4, 0x84,
  0x04, 0x13, 0x23, 0xe3, 0x84, 0xa1, 0x90, 0x14, 0x12, 0x4c, 0x8c, 0x8c,
  0x0b, 0x84, 0xc4, 0x4c, 0x10, 0x98, 0xc1, 0x08, 0x40, 0x09, 0x00, 0x0a,
  0x66, 0x00, 0xe6, 0x08, 0xc0, 0x60, 0x8e, 0x00, 0x29, 0xc6, 0x40, 0x10,
  0x44, 0x41, 0x90, 0x51, 0x0c, 0x82, 0x20, 0x88, 0x82, 0x20, 0xa4, 0x18,
  0x00, 0x41, 0x10, 0xc5, 0x40, 0x4a, 0x41, 0x06, 0x62, 0x18, 0x86, 0x61,
  0x18, 0x88, 0x29, 0xc3, 0x40, 0x0c, 0xe4, 0x14, 0x65, 0x20, 0x86, 0x61,
  0x18, 0x86, 0x61, 0x18, 0x08, 0x3a, 0x6a, 0xb8, 0xfc, 0x09, 0x7b, 0x08,
  0xc9, 0xe7, 0x36, 0xaa, 0x58, 0x89, 0xc9, 0x2f, 0x6e, 0x1b, 0x11, 0xc3,
  0x30, 0x0c, 0x54, 0xdc, 0x33, 0x5c, 0xfe, 0x84, 0x3d, 0x84, 0xe4, 0x87,
  0x40, 0x33, 0x2c, 0x04, 0x0a, 0xa6, 0x42, 0x48, 0x04, 0x45, 0x50, 0x55,
  0x8a, 0x81, 0x18, 0x86, 0x81, 0xae, 0x39, 0x82, 0xa0, 0x18, 0x14, 0x51,
  0x10, 0x44, 0x46, 0xda, 0x40, 0xc0, 0x30, 0x02, 0x31, 0x0c, 0x23, 0x0c,
  0x43, 0x0e, 0x78, 0x49, 0xd0, 0xe5, 0x40, 0x97, 0x48, 0xe1, 0x55, 0x87,
  0x23, 0x4d, 0x0b, 0x80, 0x39, 0xd4, 0xe4, 0xa7, 0x40, 0x04, 0x30, 0xc4,
  0x44, 0x44, 0x12, 0x72, 0x3a, 0xcf, 0x1b, 0xbe, 0xef, 0xf3, 0xbc, 0x0e,
  0xfc, 0x40, 0x91, 0xc6, 0xb4, 0x20, 0x00, 0x00, 0x13, 0x16, 0x72, 0xc0,
  0x87, 0x74, 0x60, 0x87, 0x36, 0x68, 0x87, 0x79, 0x68, 0x03, 0x7c, 0x10,
  0x87, 0x38, 0xd8, 0xf0, 0x0a, 0xe5, 0xd0, 0x06, 0xed, 0xa0, 0x07, 0xe5,
  0xd0, 0x06, 0xf0, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x7a, 0x30, 0x07, 0x72,
  0xd0, 0x06, 0xe9, 0x10, 0x07, 0x7a, 0x30, 0x07, 0x72, 0xd0, 0x06, 0xe9,
  0x80, 0x07, 0x7a, 0x30, 0x07, 0x72, 0xd0, 0x06, 0xe9, 0x10, 0x07, 0x76,
  0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x90, 0x0e, 0x73, 0x20, 0x07, 0x7a,
  0x30, 0x07, 0x72, 0xd0, 0x06, 0xe9, 0x60, 0x07, 0x74, 0xa0, 0x07, 0x76,
  0x40, 0x07, 0x6d, 0x60, 0x0e, 0x71, 0x60, 0x07, 0x7a, 0x30, 0x07, 0x72,
  0xd0, 0x06, 0xe6, 0x30, 0x07, 0x72, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d,
  0x60, 0x0e, 0x76, 0x40, 0x07, 0x7a, 0x60, 0x07, 0x74, 0xd0, 0x06, 0xee,
  0x80, 0x07, 0x7a, 0x10, 0x07, 0x76, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x7a,
  0x60, 0x07, 0x74, 0x30, 0xe4, 0x09, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x60, 0xc8, 0x63, 0x00, 0x01, 0x10, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x90, 0x07, 0x01, 0x02, 0x20, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x21, 0x8f, 0x02, 0x04, 0x80,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x43, 0x1e, 0x06, 0x08,
  0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x86, 0x3c, 0x0e,
  0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x79,
  0x20, 0x20, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18,
  0xf2, 0x54, 0x40, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x30, 0xe4, 0xb9, 0x80, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x60, 0xc8, 0xa3, 0x01, 0x01, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x40, 0x16, 0x08, 0x00, 0x00, 0x00, 0x19, 0x00, 0x00, 0x00,
  0x32, 0x1e, 0x98, 0x14, 0x19, 0x11, 0x4c, 0x90, 0x8c, 0x09, 0x26, 0x47,
  0xc6, 0x04, 0x43, 0x22, 0x4a, 0x60, 0x04, 0xa0, 0x20, 0x8a, 0xa1, 0x80,
  0x79, 0xca, 0xa0, 0x3c, 0xca, 0xa1, 0x08, 0x0a, 0x81, 0x8a, 0x92, 0x18,
  0x01, 0x28, 0x84, 0x32, 0x28, 0x82, 0x52, 0x20, 0x72, 0x06, 0x80, 0xca,
  0xb1, 0x2c, 0x8a, 0x82, 0x4f, 0xd0, 0x83, 0x4f, 0xd0, 0x83, 0x4f, 0xd0,
  0x83, 0x4f, 0xd0, 0x03, 0xf1, 0x00, 0xc4, 0x03, 0x10, 0x0f, 0x80, 0x40,
  0x00, 0x00, 0xf8, 0x0f, 0x3d, 0xf8, 0x0f, 0x3d, 0xf8, 0x0f, 0x3d, 0xf8,
  0x0f, 0x3d, 0xf8, 0x0f, 0x3d, 0xf8, 0x0f, 0x3d, 0xf8, 0x0f, 0x3d, 0xf8,
  0x0f, 0x3d, 0x00, 0x00, 0x79, 0x18, 0x00, 0x00, 0x96, 0x00, 0x00, 0x00,
  0x1a, 0x03, 0x4c, 0x90, 0x46, 0x02, 0x13, 0xc4, 0x36, 0xf8, 0xfa, 0xc2,
  0x12, 0x7a, 0xc2, 0xfa, 0x82, 0x2a, 0x92, 0xfa, 0xa2, 0x42, 0x92, 0x2a,
  0x0a, 0x22, 0xfa, 0x9a, 0x1a, 0x92, 0x0a, 0xa2, 0x1a, 0x42, 0xfa, 0x9a,
  0x4a, 0xd2, 0x2a, 0xfa, 0x62, 0x4a, 0x6a, 0x4a, 0xa2, 0xfa, 0x4a, 0x72,
  0xfa, 0x12, 0xca, 0xa2, 0x2a, 0x9a, 0x62, 0x00, 0xb3, 0x41, 0x08, 0x04,
  0x76, 0x64, 0x78, 0x63, 0x78, 0x62, 0x6f, 0x78, 0x20, 0x32, 0x34, 0x31,
  0x30, 0x2e, 0x32, 0x34, 0x31, 0x30, 0x2e, 0x31, 0x31, 0x31, 0x31, 0x36,
  0x2e, 0x31, 0x30, 0x37, 0x34, 0x31, 0x1b, 0x02, 0x62, 0x82, 0x40, 0x28,
  0x13, 0x04, 0x62, 0xd9, 0x20, 0x18, 0xc7, 0x04, 0x81, 0x60, 0x36, 0x08,
  0x46, 0x42, 0xc1, 0x6e, 0x6e, 0x82, 0x40, 0x34, 0x1b, 0x86, 0x85, 0x39,
  0x26, 0x08, 0x64, 0xa0, 0x11, 0x98, 0x20, 0x10, 0xce, 0x06, 0xe4, 0x70,
  0x9e, 0xe3, 0x30, 0x20, 0x60, 0x43, 0x10, 0x6d, 0x20, 0x00, 0x40, 0x02,
  0x26, 0x08, 0x65, 0xb0, 0x6d, 0x08, 0xa8, 0x09, 0x82, 0x00, 0x30, 0x0c,
  0xac, 0xa6, 0xa6, 0xd6, 0xd2, 0xdc, 0xdc, 0xca, 0xc8, 0xa0, 0xd2, 0xf0,
  0xca, 0xd8, 0x98, 0xd2, 0xce, 0xd0, 0xe8, 0xd2, 0xdc, 0xce, 0x8c, 0xde,
  0xea, 0xe4, 0x84, 0xde, 0xdc, 0xca, 0xe6, 0x84, 0xdc, 0xb8, 0x4c, 0x59,
  0x7d, 0x41, 0xbd, 0xcd, 0xa5, 0xd1, 0xa5, 0xbd, 0xb9, 0x4d, 0x10, 0x0a,
  0x6a, 0x82, 0x50, 0x54, 0x1b, 0x82, 0x63, 0x82, 0x50, 0x58, 0x13, 0x04,
  0xe2, 0x99, 0x20, 0x10, 0xd0, 0x06, 0xa1, 0xf3, 0x36, 0x2c, 0x07, 0x96,
  0x69, 0x9b, 0x66, 0x70, 0x87, 0xf6, 0xd1, 0x70, 0x7a, 0x92, 0x6a, 0x0a,
  0x62, 0x9a, 0x20, 0x14, 0xd7, 0x04, 0x81, 0x88, 0x36, 0x08, 0xdd, 0x18,
  0x6c, 0x58, 0x8c, 0x30, 0xc8, 0xb4, 0x4d, 0x33, 0xc4, 0xc0, 0xd0, 0xc8,
  0x60, 0x82, 0x40, 0x48, 0x44, 0xa8, 0x8a, 0xb0, 0x86, 0x9e, 0x9e, 0xa4,
  0x88, 0x26, 0x08, 0x05, 0xb6, 0x41, 0xe8, 0xba, 0x0d, 0x8b, 0x19, 0x9c,
  0x41, 0xa6, 0x6d, 0x9a, 0x81, 0x06, 0x66, 0xa0, 0xa5, 0x01, 0x19, 0x21,
  0xa6, 0x22, 0x27, 0xa2, 0x24, 0x27, 0xa2, 0xa4, 0xa1, 0xa2, 0xa9, 0x09,
  0x42, 0x91, 0x6d, 0x58, 0xba, 0x35, 0x60, 0x03, 0x6d, 0xd3, 0x0c, 0xae,
  0xd3, 0xbe, 0x09, 0x02, 0x31, 0x71, 0x11, 0x62, 0x2a, 0x72, 0x22, 0xba,
  0x2a, 0x4a, 0x3a, 0x42, 0xa2, 0xda, 0xb0, 0xb8, 0xc1, 0x1b, 0x64, 0xda,
  0xa6, 0x19, 0x9c, 0x1b, 0x68, 0xdf, 0x86, 0x02, 0x0c, 0xca, 0x40, 0x0d,
  0xda, 0x00, 0x0e, 0x36, 0x2c, 0xc7, 0x19, 0x64, 0xda, 0x86, 0x06, 0x06,
  0x1a, 0x1c, 0x5a, 0x1a, 0x6c, 0x08, 0x8c, 0x0d, 0x8b, 0x71, 0x06, 0x99,
  0x36, 0x07, 0x68, 0x60, 0x70, 0x86, 0xf6, 0x6d, 0x08, 0xcc, 0x60, 0xc3,
  0x62, 0x06, 0x67, 0x90, 0x69, 0x75, 0x80, 0x06, 0x86, 0x18, 0x98, 0x81,
  0x46, 0x06, 0x2c, 0x86, 0x9e, 0x98, 0x9e, 0xa4, 0x36, 0x2c, 0xdd, 0x1d,
  0x64, 0xda, 0x86, 0x06, 0x06, 0xd7, 0x69, 0xdf, 0x86, 0xc5, 0x0d, 0xb0,
  0x4c, 0x0c, 0x36, 0xce, 0xe0, 0xdc, 0x40, 0xfb, 0x36, 0x14, 0x72, 0x40,
  0x07, 0x76, 0x80, 0x07, 0x79, 0xb0, 0x61, 0x88, 0x03, 0x3d, 0x00, 0x36,
  0x14, 0xd6, 0xb5, 0x07, 0x13, 0xd0, 0x0a, 0x4f, 0xec, 0x0d, 0xcf, 0x65,
  0xec, 0xad, 0x0d, 0x2e, 0x8d, 0xad, 0x4c, 0xce, 0xe5, 0x0d, 0x8e, 0x2e,
  0xed, 0xcd, 0x6d, 0x6e, 0x4a, 0x20, 0x54, 0x61, 0x63, 0xb3, 0x6b, 0x73,
  0x49, 0x23, 0x2b, 0x73, 0xa3, 0x9b, 0x12, 0x10, 0x55, 0xc8, 0xf0, 0x5c,
  0xec, 0xca, 0xe4, 0xe6, 0xd2, 0xde, 0xdc, 0xa6, 0x04, 0x47, 0x13, 0x32,
  0x3c, 0x17, 0xbb, 0x30, 0x36, 0xbb, 0x32, 0xb9, 0x29, 0x41, 0x52, 0x87,
  0x0c, 0xcf, 0x65, 0x0e, 0x2d, 0x8c, 0xac, 0x4c, 0xae, 0xe9, 0x8d, 0xac,
  0x8c, 0x6d, 0x4a, 0xc0, 0x94, 0x21, 0xc3, 0x73, 0x91, 0x2b, 0x9b, 0x7b,
  0xab, 0x93, 0x1b, 0x2b, 0x9b, 0x9b, 0x12, 0x48, 0x75, 0xc8, 0xf0, 0x5c,
  0xec, 0xd2, 0xca, 0xee, 0x92, 0xc8, 0xa6, 0xe8, 0xc2, 0xe8, 0xca, 0xa6,
  0x04, 0x54, 0x1d, 0x32, 0x3c, 0x97, 0x32, 0x37, 0x3a, 0xb9, 0x3c, 0xa8,
  0xb7, 0x34, 0x37, 0xba, 0xb9, 0x29, 0xc1, 0x1e, 0x00, 0x00, 0x00, 0x00,
  0x79, 0x18, 0x00, 0x00, 0x50, 0x00, 0x00, 0x00, 0x33, 0x08, 0x80, 0x1c,
  0xc4, 0xe1, 0x1c, 0x66, 0x14, 0x01, 0x3d, 0x88, 0x43, 0x38, 0x84, 0xc3,
  0x8c, 0x42, 0x80, 0x07, 0x79, 0x78, 0x07, 0x73, 0x98, 0x71, 0x0c, 0xe6,
  0x00, 0x0f, 0xed, 0x10, 0x0e, 0xf4, 0x80, 0x0e, 0x33, 0x0c, 0x42, 0x1e,
  0xc2, 0xc1, 0x1d, 0xce, 0xa1, 0x1c, 0x66, 0x30, 0x05, 0x3d, 0x88, 0x43,
  0x38, 0x84, 0x83, 0x1b, 0xcc, 0x03, 0x3d, 0xc8, 0x43, 0x3d, 0x8c, 0x03,
  0x3d, 0xcc, 0x78, 0x8c, 0x74, 0x70, 0x07, 0x7b, 0x08, 0x07, 0x79, 0x48,
  0x87, 0x70, 0x70, 0x07, 0x7a, 0x70, 0x03, 0x76, 0x78, 0x87, 0x70, 0x20,
  0x87, 0x19, 0xcc, 0x11, 0x0e, 0xec, 0x90, 0x0e, 0xe1, 0x30, 0x0f, 0x6e,
  0x30, 0x0f, 0xe3, 0xf0, 0x0e, 0xf0, 0x50, 0x0e, 0x33, 0x10, 0xc4, 0x1d,
  0xde, 0x21, 0x1c, 0xd8, 0x21, 0x1d, 0xc2, 0x61, 0x1e, 0x66, 0x30, 0x89,
  0x3b, 0xbc, 0x83, 0x3b, 0xd0, 0x43, 0x39, 0xb4, 0x03, 0x3c, 0xbc, 0x83,
  0x3c, 0x84, 0x03, 0x3b, 0xcc, 0xf0, 0x14, 0x76, 0x60, 0x07, 0x7b, 0x68,
  0x07, 0x37, 0x68, 0x87, 0x72, 0x68, 0x07, 0x37, 0x80, 0x87, 0x70, 0x90,
  0x87, 0x70, 0x60, 0x07, 0x76, 0x28, 0x07, 0x76, 0xf8, 0x05, 0x76, 0x78,
  0x87, 0x77, 0x80, 0x87, 0x5f, 0x08, 0x87, 0x71, 0x18, 0x87, 0x72, 0x98,
  0x87, 0x79, 0x98, 0x81, 0x2c, 0xee, 0xf0, 0x0e, 0xee, 0xe0, 0x0e, 0xf5,
  0xc0, 0x0e, 0xec, 0x30, 0x03, 0x62, 0xc8, 0xa1, 0x1c, 0xe4, 0xa1, 0x1c,
  0xcc, 0xa1, 0x1c, 0xe4, 0xa1, 0x1c, 0xdc, 0x61, 0x1c, 0xca, 0x21, 0x1c,
  0xc4, 0x81, 0x1d, 0xca, 0x61, 0x06, 0xd6, 0x90, 0x43, 0x39, 0xc8, 0x43,
  0x39, 0x98, 0x43, 0x39, 0xc8, 0x43, 0x39, 0xb8, 0xc3, 0x38, 0x94, 0x43,
  0x38, 0x88, 0x03, 0x3b, 0x94, 0xc3, 0x2f, 0xbc, 0x83, 0x3c, 0xfc, 0x82,
  0x3b, 0xd4, 0x03, 0x3b, 0xb0, 0xc3, 0x0c, 0xc4, 0x21, 0x07, 0x7c, 0x70,
  0x03, 0x7a, 0x28, 0x87, 0x76, 0x80, 0x87, 0x19, 0xca, 0xc3, 0x0e, 0xec,
  0x60, 0x0f, 0xed, 0xe0, 0x06, 0xec, 0xf0, 0x0e, 0xef, 0x00, 0x0f, 0x33,
  0x22, 0x88, 0x1c, 0xf0, 0xc1, 0x0d, 0xc8, 0x41, 0x1c, 0xce, 0xc1, 0x0d,
  0xec, 0x21, 0x1c, 0xe4, 0x81, 0x1d, 0xc2, 0x21, 0x1f, 0xde, 0xa1, 0x1e,
  0xe8, 0x01, 0x00, 0x00, 0x71, 0x20, 0x00, 0x00, 0x2c, 0x00, 0x00, 0x00,
  0x06, 0x10, 0x06, 0x2f, 0xcb, 0x2a, 0x48, 0xd3, 0x10, 0x43, 0x8a, 0x5c,
  0xc4, 0x52, 0x22, 0xc6, 0x31, 0x21, 0x8d, 0xf1, 0x39, 0x54, 0xb4, 0x39,
  0x0d, 0x21, 0x6d, 0x8d, 0x1d, 0x6c, 0xc3, 0xe5, 0x3b, 0x8f, 0x2f, 0x04,
  0x54, 0x51, 0x10, 0x51, 0xe9, 0x00, 0x43, 0x49, 0x18, 0x80, 0x80, 0xf9,
  0xc5, 0x6d, 0x5b, 0x82, 0x34, 0x5c, 0xbe, 0xf3, 0xf8, 0x42, 0x44, 0x00,
  0x13, 0x11, 0x02, 0xcd, 0xb0, 0x10, 0x46, 0xe0, 0x0c, 0x97, 0xef, 0x3c,
  0xfe, 0xe0, 0x4c, 0xb7, 0x5f, 0xdc, 0xb6, 0x19, 0x38, 0xc3, 0xe5, 0x3b,
  0x8f, 0x3f, 0x38, 0x13, 0xee, 0x17, 0xb7, 0x6d, 0x01, 0xd3, 0x70, 0xf9,
  0xce, 0xe3, 0x2f, 0x0e, 0x30, 0x88, 0xcd, 0x43, 0x4d, 0x7e, 0x71, 0xdb,
  0x26, 0x30, 0x0d, 0x97, 0xef, 0x3c, 0xfe, 0xe2, 0x00, 0x83, 0xd8, 0x3c,
  0xd4, 0xe4, 0x23, 0xb7, 0x6d, 0x03, 0xd5, 0x70, 0xf9, 0xce, 0xe3, 0x4b,
  0x93, 0x13, 0x11, 0x28, 0x35, 0x3d, 0xd4, 0xe4, 0x17, 0xb7, 0x6d, 0x08,
  0xd2, 0x70, 0xf9, 0xce, 0xe3, 0x4f, 0x44, 0x34, 0x21, 0x40, 0x84, 0xf9,
  0xc5, 0x6d, 0x5b, 0xc1, 0x33, 0x5c, 0xbe, 0xf3, 0xf8, 0x54, 0x03, 0x44,
  0x98, 0x5f, 0xdc, 0x36, 0x00, 0x00, 0x00, 0x00, 0x61, 0x20, 0x00, 0x00,
  0x4f, 0x02, 0x00, 0x00, 0x13, 0x04, 0x41, 0x2c, 0x10, 0x00, 0x00, 0x00,
  0x10, 0x00, 0x00, 0x00, 0x94, 0x8d, 0x00, 0x50, 0x51, 0x02, 0x44, 0x14,
  0x5c, 0x71, 0x95, 0xdd, 0x0c, 0x40, 0x29, 0x14, 0x4d, 0xd9, 0x14, 0x4e,
  0xc9, 0x94, 0x5c, 0xb1, 0x94, 0x4b, 0xc1, 0x14, 0x48, 0x89, 0x94, 0x49,
  0xa1, 0x94, 0x4a, 0xb9, 0x15, 0x07, 0x0d, 0x63, 0x04, 0x20, 0x08, 0x82,
  0xf8, 0x37, 0x46, 0x00, 0x82, 0x20, 0x88, 0xff, 0xc2, 0x18, 0x01, 0x08,
  0x82, 0x20, 0x08, 0x06, 0x00, 0x00, 0x00, 0x00, 0x23, 0x06, 0x09, 0x00,
  0x82, 0x60, 0xa0, 0xb1, 0x81, 0xd3, 0xa9, 0x81, 0x1a, 0x64, 0x23, 0x06,
  0x09, 0x00, 0x82, 0x60, 0x60, 0xd4, 0xc1, 0x18, 0x8c, 0xc1, 0x1a, 0x84,
  0x41, 0x35, 0x62, 0x90, 0x00, 0x20, 0x08, 0x06, 0x86, 0x1d, 0x90, 0x01,
  0x19, 0xb0, 0x81, 0x66, 0x8d, 0x18, 0x24, 0x00, 0x08, 0x82, 0x81, 0x71,
  0x07, 0x65, 0x50, 0x06, 0x6d, 0x00, 0x06, 0xd7, 0x88, 0x41, 0x02, 0x80,
  0x20, 0x18, 0x18, 0x78, 0x60, 0x06, 0x66, 0xe0, 0x06, 0x62, 0x80, 0x8d,
  0x18, 0x24, 0x00, 0x08, 0x82, 0x01, 0x82, 0x07, 0x67, 0xb0, 0x06, 0x6f,
  0x50, 0x06, 0xd9, 0x88, 0x41, 0x02, 0x80, 0x20, 0x18, 0x20, 0x79, 0x80,
  0x06, 0x6c, 0x00, 0x07, 0x9e, 0x36, 0x62, 0x90, 0x00, 0x20, 0x08, 0x06,
  0x88, 0x1e, 0xa4, 0x41, 0x1b, 0xc4, 0x01, 0x19, 0x6c, 0x23, 0x06, 0x09,
  0x00, 0x82, 0x60, 0x80, 0xec, 0x81, 0x1a, 0xb8, 0x81, 0x1c, 0x98, 0x01,
  0x37, 0x62, 0x90, 0x00, 0x20, 0x08, 0x06, 0x46, 0x1f, 0xac, 0x01, 0x1b,
  0xcc, 0x41, 0x1a, 0x74, 0x23, 0x06, 0x09, 0x00, 0x82, 0x60, 0x60, 0xf8,
  0x01, 0x1b, 0xb4, 0x01, 0x1d, 0x88, 0x81, 0x37, 0x62, 0x90, 0x00, 0x20,
  0x08, 0x06, 0xc6, 0x1f, 0xb4, 0x81, 0x1d, 0xd4, 0xc1, 0x1a, 0x7c, 0x23,
  0x06, 0x09, 0x00, 0x82, 0x60, 0x60, 0x80, 0x82, 0x1b, 0xdc, 0x81, 0x1d,
  0x90, 0x01, 0x18, 0x8c, 0x18, 0x24, 0x00, 0x08, 0x82, 0x81, 0x11, 0x0a,
  0x6f, 0x80, 0x07, 0x77, 0xa0, 0x06, 0x61, 0x30, 0x62, 0x90, 0x00, 0x20,
  0x08, 0x06, 0x86, 0x28, 0xc0, 0x01, 0x1e, 0xe0, 0x81, 0x1b, 0x88, 0xc1,
  0x88, 0x41, 0x02, 0x80, 0x20, 0x18, 0x18, 0xa3, 0x10, 0x07, 0x79, 0x90,
  0x07, 0x67, 0x30, 0x06, 0x23, 0x06, 0x09, 0x00, 0x82, 0x60, 0x60, 0x90,
  0x82, 0x1c, 0xe8, 0x81, 0x1e, 0xb4, 0x01, 0x19, 0x8c, 0x18, 0x24, 0x00,
  0x08, 0x82, 0x81, 0x51, 0x0a, 0x73, 0xb0, 0x07, 0x7b, 0xf0, 0x06, 0x65,
  0x60, 0xc7, 0x24, 0x1f, 0x3b, 0x28, 0xf9, 0xd8, 0x51, 0xc9, 0xc7, 0x86,
  0x0b, 0x3e, 0x36, 0x60, 0xf0, 0xb1, 0x21, 0x83, 0x4f, 0x4d, 0x7e, 0x20,
  0x15, 0xac, 0x01, 0x8c, 0x18, 0x1c, 0x00, 0x08, 0x82, 0x41, 0x85, 0x0a,
  0x6f, 0xa0, 0x05, 0xa3, 0x09, 0x01, 0x30, 0x9a, 0x20, 0x04, 0xa3, 0x09,
  0x83, 0x30, 0x9a, 0x40, 0x0c, 0x75, 0xc0, 0x01, 0x8c, 0x18, 0x1c, 0x00,
  0x08, 0x82, 0x41, 0xe5, 0x0a, 0x75, 0x00, 0x06, 0xc1, 0x68, 0x42, 0x00,
  0x8c, 0x26, 0x08, 0xc1, 0x68, 0xc2, 0x20, 0x8c, 0x26, 0x10, 0x43, 0x35,
  0x75, 0x00, 0x23, 0x06, 0x07, 0x00, 0x82, 0x60, 0x50, 0xd1, 0xc2, 0x1e,
  0x98, 0x41, 0x30, 0x9a, 0x10, 0x00, 0xa3, 0x09, 0x42, 0x30, 0x9a, 0x30,
  0x08, 0xa3, 0x09, 0xc4, 0x60, 0x90, 0x1a, 0xc8, 0xc7, 0x96, 0x35, 0x90,
  0x8f, 0x19, 0x6c, 0x20, 0x1f, 0x93, 0xda, 0x40, 0x3e, 0xd6, 0xb8, 0x81,
  0x7c, 0x0c, 0x79, 0x03, 0xf9, 0x18, 0x05, 0x07, 0xf2, 0xb1, 0x27, 0x0e,
  0xe4, 0x63, 0x8a, 0x1c, 0xc8, 0xc7, 0xac, 0x39, 0x90, 0x8f, 0x45, 0x74,
  0x20, 0x1f, 0x63, 0xea, 0x40, 0x3e, 0x15, 0x07, 0xbd, 0x20, 0x15, 0xa8,
  0x02, 0x8c, 0x18, 0x1c, 0x00, 0x08, 0x82, 0x41, 0x75, 0x0e, 0xae, 0x90,
  0x07, 0xc1, 0x68, 0x42, 0x00, 0x8c, 0x26, 0x08, 0xc1, 0x68, 0xc2, 0x20,
  0x8c, 0x26, 0x10, 0x43, 0x1d, 0xaf, 0x00, 0x23, 0x06, 0x07, 0x00, 0x82,
  0x60, 0x50, 0xb5, 0x03, 0x2d, 0xfc, 0x41, 0x30, 0x9a, 0x10, 0x00, 0xa3,
  0x09, 0x42, 0x30, 0x9a, 0x30, 0x08, 0xa3, 0x09, 0xc4, 0x50, 0x0d, 0x2d,
  0xc0, 0x88, 0xc1, 0x01, 0x80, 0x20, 0x18, 0x54, 0xf3, 0xa0, 0x0b, 0xa5,
  0x10, 0x8c, 0x26, 0x04, 0xc0, 0x68, 0x82, 0x10, 0x8c, 0x26, 0x0c, 0xc2,
  0x68, 0x02, 0x31, 0x18, 0x84, 0x0a, 0xf2, 0xb1, 0x25, 0x15, 0xe4, 0x63,
  0x86, 0x2a, 0xc8, 0xc7, 0xa4, 0x55, 0x90, 0x8f, 0x35, 0xac, 0x20, 0x1f,
  0x43, 0x5a, 0x41, 0x3e, 0x46, 0xb9, 0x82, 0x7c, 0xec, 0x79, 0x05, 0xf9,
  0x98, 0x02, 0x0b, 0xf2, 0x31, 0x2b, 0x16, 0xe4, 0x63, 0x91, 0x2c, 0xc8,
  0xc7, 0x98, 0x59, 0x90, 0x8f, 0x31, 0x6b, 0x00, 0x1f, 0x63, 0xd6, 0x00,
  0x3e, 0xc6, 0xac, 0x01, 0x7c, 0x8c, 0x59, 0x03, 0xf8, 0x18, 0xb3, 0x06,
  0xf0, 0x31, 0x66, 0x0d, 0xe0, 0x63, 0xcc, 0x1a, 0xc0, 0xc7, 0x98, 0x35,
  0x80, 0x8f, 0x31, 0x6b, 0x00, 0x1f, 0x63, 0xd6, 0x00, 0x3e, 0xc6, 0xac,
  0x01, 0x7c, 0x8c, 0x59, 0x03, 0xf8, 0xd4, 0x2e, 0xa0, 0x84, 0x54, 0x50,
  0x0f, 0x30, 0x62, 0x70, 0x00, 0x20, 0x08, 0x06, 0x95, 0x4c, 0xe4, 0x03,
  0x39, 0x04, 0xa3, 0x09, 0x01, 0x30, 0x9a, 0x20, 0x04, 0xa3, 0x09, 0x83,
  0x30, 0x9a, 0x40, 0x0c, 0x75, 0xe8, 0x03, 0x8c, 0x18, 0x1c, 0x00, 0x08,
  0x82, 0x41, 0x85, 0x13, 0xff, 0xa0, 0x0e, 0xc1, 0x68, 0x42, 0x00, 0x8c,
  0x26, 0x08, 0xc1, 0x68, 0xc2, 0x20, 0x8c, 0x26, 0x10, 0x43, 0x35, 0xff,
  0x00, 0x23, 0x06, 0x07, 0x00, 0x82, 0x60, 0x50, 0xf9, 0x44, 0x49, 0xc0,
  0x43, 0x30, 0x9a, 0x10, 0x00, 0xa3, 0x09, 0x42, 0x30, 0x9a, 0x30, 0x08,
  0xa3, 0x09, 0xc4, 0x60, 0x90, 0x3c, 0xc8, 0xc7, 0x96, 0x79, 0x90, 0x8f,
  0x19, 0xf4, 0x20, 0x1f, 0x93, 0xea, 0x41, 0x3e, 0xd6, 0xd8, 0x83, 0x7c,
  0x0c, 0xb9, 0x07, 0xf9, 0x18, 0x85, 0x0f, 0xf2, 0xb1, 0x27, 0x1f, 0xe4,
  0x63, 0x8a, 0x3e, 0xc8, 0xc7, 0xac, 0x7d, 0x90, 0x8f, 0x45, 0xfc, 0x20,
  0x1f, 0x63, 0xfa, 0x41, 0x3e, 0xb6, 0x06, 0x0c, 0x7c, 0x6c, 0x0d, 0x18,
  0xf8, 0xd8, 0x1a, 0x30, 0xf0, 0xb1, 0x35, 0x60, 0xe0, 0x63, 0x6b, 0xc0,
  0xc0, 0xc7, 0xd6, 0x80, 0x81, 0x8f, 0xad, 0x01, 0x03, 0x1f, 0x5b, 0x03,
  0x06, 0x3e, 0xb6, 0x06, 0x0c, 0x7c, 0x6c, 0x0d, 0x18, 0xf8, 0xd8, 0x1a,
  0x30, 0xf0, 0xb1, 0x35, 0x60, 0xe0, 0x53, 0x25, 0x31, 0x17, 0x52, 0x01,
  0x58, 0xc0, 0x88, 0xc1, 0x01, 0x80, 0x20, 0x18, 0x54, 0x7d, 0x41, 0x16,
  0x2f, 0x11, 0x8c, 0x26, 0x04, 0xc0, 0x68, 0x82, 0x10, 0x8c, 0x26, 0x0c,
  0xc2, 0x68, 0x02, 0x31, 0xd4, 0x51, 0x16, 0x30, 0x62, 0x70, 0x00, 0x20,
  0x08, 0x06, 0xd5, 0x68, 0xa8, 0x45, 0x4d, 0x04, 0xa3, 0x09, 0x01, 0x30,
  0x9a, 0x20, 0x04, 0xa3, 0x09, 0x83, 0x30, 0x9a, 0x40, 0x0c, 0xd5, 0xa8,
  0x05, 0x8c, 0x18, 0x1c, 0x00, 0x08, 0x82, 0x41, 0x95, 0x1a, 0x70, 0xb1,
  0x13, 0xc1, 0x68, 0x42, 0x00, 0x8c, 0x26, 0x08, 0xc1, 0x68, 0xc2, 0x20,
  0x8c, 0x26, 0x10, 0x83, 0x41, 0x3c, 0x21, 0x1f, 0x5b, 0x7a, 0x42, 0x3e,
  0x66, 0xf8, 0x84, 0x7c, 0x4c, 0xfa, 0x09, 0xf9, 0x58, 0x03, 0x16, 0xf2,
  0x31, 0x24, 0x2c, 0xe4, 0x63, 0x94, 0x58, 0xc8, 0xc7, 0x9e, 0xb1, 0x90,
  0x8f, 0x29, 0x64, 0x21, 0x1f, 0xb3, 0xca, 0x42, 0x3e, 0x16, 0x99, 0x85,
  0x7c, 0x8c, 0x39, 0x0b, 0xf9, 0xd8, 0x1a, 0x30, 0xf0, 0xb1, 0x35, 0x60,
  0xe0, 0x63, 0x6b, 0xc0, 0xc0, 0xc7, 0xd6, 0x80, 0x81, 0x8f, 0xad, 0x01,
  0x03, 0x1f, 0x5b, 0x03, 0x06, 0x3e, 0xb6, 0x06, 0x0c, 0x7c, 0x6c, 0x0d,
  0x18, 0xf8, 0xd8, 0x1a, 0x30, 0xf0, 0xb1, 0x35, 0x60, 0xe0, 0x63, 0x6b,
  0xc0, 0xc0, 0xc7, 0xd6, 0x80, 0x81, 0x8f, 0x31, 0x6a, 0x21, 0x9f, 0x11,
  0x03, 0x04, 0x00, 0x41, 0x30, 0xb8, 0xcc, 0xe3, 0x35, 0xd4, 0x42, 0x09,
  0x46, 0x0c, 0x10, 0x00, 0x04, 0xc1, 0xe0, 0x3a, 0x0f, 0xd8, 0x50, 0x0b,
  0x24, 0x18, 0x31, 0x40, 0x00, 0x10, 0x04, 0x83, 0x0b, 0x3d, 0x62, 0x43,
  0x2d, 0x8c, 0xc0, 0x1e, 0xb7, 0x90, 0xcf, 0x88, 0x01, 0x02, 0x80, 0x20,
  0x18, 0x5c, 0xea, 0x31, 0x1b, 0x6e, 0xd1, 0x04, 0x23, 0x06, 0x08, 0x00,
  0x82, 0x60, 0x70, 0xad, 0x07, 0x6d, 0xb8, 0xc5, 0x12, 0x8c, 0x18, 0x20,
  0x00, 0x08, 0x82, 0xc1, 0xc5, 0x1e, 0xb5, 0xe1, 0x16, 0x49, 0x60, 0x92,
  0x5c, 0xc8, 0x67, 0xc4, 0x00, 0x01, 0x40, 0x10, 0x0c, 0x2e, 0xf7, 0xb8,
  0x0d, 0xb9, 0x80, 0x82, 0x11, 0x03, 0x04, 0x00, 0x41, 0x30, 0xb8, 0xde,
  0x03, 0x37, 0xe4, 0xc2, 0x09, 0x46, 0x0c, 0x10, 0x00, 0x04, 0xc1, 0xe0,
  0x82, 0x8f, 0xdc, 0x90, 0x0b, 0x26, 0x30, 0xec, 0x2d, 0xe4, 0x33, 0x62,
  0x80, 0x00, 0x20, 0x08, 0x06, 0x97, 0x7c, 0xec, 0xc6, 0x5b, 0x58, 0xc1,
  0x88, 0x01, 0x02, 0x80, 0x20, 0x18, 0x5c, 0xf3, 0xc1, 0x1b, 0x6f, 0x41,
  0x05, 0xa6, 0xc9, 0x85, 0x7c, 0x46, 0x0c, 0x10, 0x00, 0x04, 0xc1, 0xe0,
  0xaa, 0x0f, 0xdf, 0x90, 0x0b, 0x2c, 0x18, 0x31, 0x40, 0x00, 0x10, 0x04,
  0x83, 0xcb, 0x3e, 0x7e, 0x43, 0x2e, 0xac, 0xc0, 0xb8, 0xba, 0x90, 0xcf,
  0x88, 0x01, 0x02, 0x80, 0x20, 0x18, 0x5c, 0xf8, 0x11, 0x1e, 0x75, 0xa1,
  0x05, 0x23, 0x06, 0x08, 0x00, 0x82, 0x60, 0x70, 0xe5, 0x87, 0x78, 0xd4,
  0x05, 0x16, 0x8c, 0x18, 0x1c, 0x00, 0x08, 0x82, 0x41, 0xb5, 0x1f, 0xe2,
  0xd1, 0x1a, 0xba, 0x31, 0x9a, 0x10, 0x00, 0xa3, 0x09, 0x42, 0x30, 0x9a,
  0x30, 0x08, 0xa3, 0x09, 0xc4, 0x30, 0x62, 0x70, 0x00, 0x20, 0x08, 0x06,
  0x15, 0x88, 0x9c, 0x87, 0x6c, 0xf8, 0xc6, 0x68, 0x42, 0x00, 0x8c, 0x26,
  0x08, 0xc1, 0x68, 0xc2, 0x20, 0x8c, 0x26, 0x10, 0xc3, 0x88, 0xc1, 0x01,
  0x80, 0x20, 0x18, 0x54, 0x25, 0xc2, 0x1e, 0xb7, 0x21, 0x1e, 0xa3, 0x09,
  0x01, 0x30, 0x9a, 0x20, 0x04, 0xa3, 0x09, 0x83, 0x30, 0x9a, 0x40, 0x0c,
  0x23, 0x06, 0x07, 0x00, 0x82, 0x60, 0x50, 0xa9, 0x48, 0x7c, 0xf0, 0xc6,
  0x7a, 0x8c, 0x26, 0x04, 0xc0, 0x68, 0x82, 0x10, 0x8c, 0x26, 0x0c, 0xc2,
  0x68, 0x02, 0x31, 0xd8, 0x64, 0x06, 0xf2, 0x19, 0x31, 0x40, 0x00, 0x10,
  0x04, 0x83, 0xeb, 0x45, 0xf0, 0x63, 0x0c, 0xa6, 0x60, 0xc4, 0x00, 0x01,
  0x40, 0x10, 0x0c, 0x2e, 0x18, 0xc9, 0x0f, 0x30, 0x98, 0x82, 0x11, 0x03,
  0x04, 0x00, 0x41, 0x30, 0xb8, 0x62, 0x44, 0x3f, 0x66, 0x63, 0x0a, 0x4c,
  0x52, 0x03, 0xf9, 0x8c, 0x18, 0x20, 0x00, 0x08, 0x82, 0xc1, 0x35, 0x23,
  0xfc, 0x71, 0x06, 0x52, 0x30, 0x62, 0x80, 0x00, 0x20, 0x08, 0x06, 0x17,
  0x8d, 0xf4, 0x07, 0x19, 0x48, 0xc1, 0x88, 0x01, 0x02, 0x80, 0x20, 0x18,
  0x5c, 0x35, 0xe2, 0x1f, 0xb7, 0x21, 0x05, 0x16, 0xb9, 0x81, 0x7c, 0x46,
  0x0c, 0x10, 0x00, 0x04, 0xc1, 0xe0, 0xba, 0x11, 0x10, 0x59, 0x83, 0x28,
  0x18, 0x31, 0x40, 0x00, 0x10, 0x04, 0x83, 0x0b, 0x47, 0x42, 0x04, 0x0d,
  0xa2, 0x60, 0xc4, 0x00, 0x01, 0x40, 0x10, 0x0c, 0xae, 0x1c, 0x11, 0x91,
  0xdd, 0x88, 0x02, 0x83, 0xe4, 0x40, 0x3e, 0x23, 0x06, 0x08, 0x00, 0x82,
  0x60, 0x70, 0xed, 0x08, 0x89, 0xbc, 0x01, 0x14, 0x8c, 0x18, 0x20, 0x00,
  0x08, 0x82, 0xc1, 0xc5, 0x23, 0x25, 0xc2, 0x06, 0x50, 0x30, 0x62, 0x80,
  0x00, 0x20, 0x08, 0x06, 0x57, 0x8f, 0x98, 0xc8, 0x6f, 0x40, 0xc1, 0x88,
  0xc1, 0x01, 0x80, 0x20, 0x18, 0x54, 0x3f, 0x62, 0x22, 0xf1, 0x61, 0x23,
  0xa3, 0x09, 0x01, 0x30, 0x9a, 0x20, 0x04, 0xa3, 0x09, 0x83, 0x30, 0x9a,
  0x40, 0x0c, 0x23, 0x06, 0x07, 0x00, 0x82, 0x60, 0x50, 0x91, 0xc9, 0x8a,
  0xd8, 0x07, 0x88, 0x8c, 0x26, 0x04, 0xc0, 0x68, 0x82, 0x10, 0x8c, 0x26,
  0x0c, 0xc2, 0x68, 0x02, 0x31, 0x8c, 0x18, 0x1c, 0x00, 0x08, 0x82, 0x41,
  0x95, 0x26, 0x30, 0xb2, 0x1f, 0x24, 0x32, 0x9a, 0x10, 0x00, 0xa3, 0x09,
  0x42, 0x30, 0x9a, 0x30, 0x08, 0xa3, 0x09, 0xc4, 0x60, 0x4e, 0x29, 0xc8,
  0x67, 0xc4, 0x00, 0x01, 0x40, 0x10, 0x0c, 0x2e, 0x37, 0xb9, 0x11, 0x51,
  0x70, 0x82, 0x11, 0x03, 0x04, 0x00, 0x41, 0x30, 0xb8, 0xde, 0x04, 0x47,
  0xfe, 0xc0, 0x09, 0x46, 0x0c, 0x10, 0x00, 0x04, 0xc1, 0xe0, 0x82, 0x93,
  0x1c, 0x91, 0x0f, 0x27, 0xb0, 0x26, 0x15, 0xe4, 0x33, 0x62, 0x80, 0x00,
  0x20, 0x08, 0x06, 0x97, 0x9c, 0xec, 0x88, 0x29, 0x34, 0xc1, 0x88, 0x01,
  0x02, 0x80, 0x20, 0x18, 0x5c, 0x73, 0xc2, 0x23, 0xa3, 0xd0, 0x04, 0x23,
  0x06, 0x08, 0x00, 0x82, 0x60, 0x70, 0xd1, 0x49, 0x8f, 0xd8, 0x47, 0x13,
  0x18, 0xd3, 0x0a, 0xf2, 0x19, 0x31, 0x40, 0x00, 0x10, 0x04, 0x83, 0xcb,
  0x4e, 0x7e, 0x44, 0x15, 0x98, 0x60, 0xc4, 0x00, 0x01, 0x40, 0x10, 0x0c,
  0xae, 0x3b, 0x01, 0x93, 0x53, 0x60, 0x82, 0x11, 0x03, 0x04, 0x00, 0x41,
  0x30, 0xb8, 0xf0, 0x24, 0x4c, 0xf4, 0x83, 0x09, 0x46, 0x0c, 0x0e, 0x00,
  0x04, 0xc1, 0xa0, 0xd2, 0x93, 0x30, 0x61, 0x11, 0x1a, 0x19, 0x4d, 0x08,
  0x80, 0xd1, 0x04, 0x21, 0x18, 0x4d, 0x18, 0x84, 0x11, 0x83, 0x03, 0x00,
  0x41, 0x30, 0xa8, 0xfc, 0xa4, 0x4c, 0x60, 0xe4, 0x46, 0x46, 0x13, 0x02,
  0x60, 0x34, 0x41, 0x08, 0x46, 0x13, 0x06, 0x61, 0xc4, 0xe0, 0x00, 0x40,
  0x10, 0x0c, 0x2a, 0x51, 0x49, 0x13, 0x1a, 0xd1, 0x91, 0xd1, 0x84, 0x00,
  0x18, 0x4d, 0x10, 0x82, 0xd1, 0x84, 0x41, 0xb0, 0x45, 0x16, 0xe4, 0x33,
  0x62, 0x80, 0x00, 0x20, 0x08, 0x06, 0x97, 0xa9, 0xbc, 0x09, 0x2c, 0x2c,
  0xc1, 0x88, 0x01, 0x02, 0x80, 0x20, 0x18, 0x5c, 0xa7, 0x02, 0x27, 0xae,
  0xb0, 0x04, 0xa6, 0xd4, 0x82, 0x7c, 0x46, 0x0c, 0x10, 0x00, 0x04, 0xc1,
  0xe0, 0x4a, 0x15, 0x39, 0x99, 0x05, 0x25, 0x18, 0x31, 0x40, 0x00, 0x10,
  0x04, 0x83, 0x4b, 0x55, 0xe6, 0x24, 0x16, 0x94, 0xc0, 0x12, 0x5c, 0x90,
  0xcf, 0x88, 0x01, 0x02, 0x80, 0x20, 0x18, 0x5c, 0xac, 0x52, 0x27, 0xb6,
  0x90, 0x04, 0x23, 0x06, 0x08, 0x00, 0x82, 0x60, 0x70, 0xb5, 0x8a, 0x9d,
  0xd0, 0x42, 0x12, 0x8c, 0x18, 0x2c, 0x00, 0x08, 0x82, 0x01, 0x23, 0x2b,
  0x66, 0x72, 0x10, 0xc1, 0x41, 0x04, 0x23, 0x06, 0x06, 0x00, 0x82, 0x60,
  0xe0, 0xc8, 0x4a, 0x9c, 0x04, 0x16, 0x24, 0xf2, 0x31, 0xe1, 0x90, 0x8f,
  0x0d, 0x85, 0x7c, 0x46, 0x0c, 0x0e, 0x00, 0x04, 0xc1, 0xa0, 0xa2, 0x95,
  0x3d, 0x31, 0x13, 0x35, 0x19, 0x4d, 0x08, 0x80, 0xd1, 0x04, 0x21, 0x18,
  0x4d, 0x18, 0x84, 0xd1, 0x04, 0x62, 0x18, 0x31, 0x68, 0x00, 0x10, 0x04,
  0x03, 0x48, 0x57, 0x44, 0x05, 0x1e, 0xd8, 0x01, 0x1d, 0x74, 0x84, 0x18,
  0x84, 0x60, 0xc4, 0xc0, 0x00, 0x40, 0x10, 0x0c, 0x1c, 0x5e, 0x81, 0x95,
  0x60, 0xc4, 0xe0, 0x00, 0x40, 0x10, 0x0c, 0xaa, 0x5d, 0x11, 0x95, 0x36,
  0xb9, 0x95, 0xd1, 0x84, 0x60, 0x18, 0x31, 0x48, 0x00, 0x10, 0x04, 0x03,
  0x25, 0x5c, 0x44, 0x25, 0x57, 0x72, 0xe5, 0x55, 0xcc, 0x64, 0xc4, 0x20,
  0x01, 0x40, 0x10, 0x0c, 0x94, 0x70, 0x11, 0x95, 0x5c, 0xc9, 0x95, 0x53,
  0x29, 0x93, 0x11, 0x83, 0x04, 0x00, 0x41, 0x30, 0x50, 0xc2, 0x45, 0x54,
  0x74, 0x25, 0x57, 0x5e, 0x85, 0x0d, 0x46, 0x0c, 0x12, 0x00, 0x04, 0xc1,
  0x40, 0x09, 0x17, 0x51, 0xd1, 0x95, 0x5c, 0x39, 0x15, 0x34, 0x18, 0x31,
  0x48, 0x00, 0x10, 0x04, 0x03, 0x25, 0x5c, 0x44, 0x45, 0x57, 0x72, 0x85,
  0x55, 0xc8, 0x60, 0xc4, 0x20, 0x01, 0x40, 0x10, 0x0c, 0x94, 0x70, 0x11,
  0x15, 0x5d, 0xc9, 0x95, 0x56, 0x19, 0x46, 0x0c, 0x12, 0x00, 0x04, 0xc1,
  0x40, 0x09, 0x17, 0x51, 0x91, 0x95, 0x5c, 0x79, 0x15, 0x66, 0xc4, 0x20,
  0x01, 0x40, 0x10, 0x0c, 0x94, 0x70, 0x11, 0x15, 0x59, 0xc9, 0x95, 0x53,
  0x59, 0x46, 0x0c, 0x12, 0x00, 0x04, 0xc1, 0x40, 0x09, 0x17, 0x51, 0x91,
  0x95, 0x5c, 0x61, 0x15, 0x65, 0xc4, 0x20, 0x01, 0x40, 0x10, 0x0c, 0x94,
  0x70, 0x11, 0x95, 0x5a, 0xc9, 0x95, 0x57, 0x91, 0x93, 0x11, 0x83, 0x04,
  0x00, 0x41, 0x30, 0x50, 0xc2, 0x45, 0x54, 0x6a, 0x25, 0x57, 0x4e, 0x45,
  0x4e, 0x46, 0x0c, 0x12, 0x00, 0x04, 0xc1, 0x40, 0x09, 0x17, 0x51, 0xa9,
  0x95, 0x5c, 0x61, 0x15, 0x39, 0x19, 0x31, 0x48, 0x00, 0x10, 0x04, 0x03,
  0x25, 0x5c, 0x44, 0xa5, 0x56, 0x72, 0xa5, 0x55, 0x82, 0x11, 0x83, 0x04,
  0x00, 0x41, 0x30, 0x50, 0xc2, 0x45, 0x54, 0x62, 0x25, 0x57, 0x5e, 0x65,
  0x15, 0x46, 0x0c, 0x12, 0x00, 0x04, 0xc1, 0x40, 0x09, 0x17, 0x51, 0x89,
  0x95, 0x5c, 0x39, 0x95, 0x53, 0x18, 0x31, 0x48, 0x00, 0x10, 0x04, 0x03,
  0x25, 0x5c, 0x44, 0x25, 0x56, 0x72, 0x85, 0x55, 0x46, 0x61, 0xc4, 0x20,
  0x01, 0x40, 0x10, 0x0c, 0x94, 0x70, 0x11, 0x95, 0x58, 0xc9, 0x95, 0x56,
  0xf9, 0x03, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x4c, 0x98, 0x1e, 0x63,
  0x2d, 0xdf, 0x63, 0x0e, 0x83, 0xcc, 0x03, 0x80, 0xc1, 0xce, 0x7a, 0x6d,
  0x17, 0x00, 0x01, 0x00, 0x20, 0xd0, 0x18, 0x00, 0x78, 0x01, 0xed, 0x99,
  0x4d, 0x6c, 0x1b, 0x45, 0x14, 0xc7, 0x9f, 0x67, 0x67, 0xc7, 0xbb, 0xf6,
  0xcb, 0xb3, 0xd7, 0x76, 0x1d, 0x27, 0x75, 0xec, 0x4d, 0xba, 0x71, 0xbd,
  0xdd, 0x6c, 0xd6, 0x31, 0x69, 0x31, 0x21, 0x69, 0x22, 0x54, 0x95, 0xca,
  0x2a, 0x4a, 0x2f, 0x48, 0x3d, 0xc0, 0x85, 0x02, 0xe2, 0x82, 0x54, 0x3e,
  0x55, 0x38, 0x04, 0x03, 0x07, 0x90, 0xa8, 0x44, 0x04, 0x1c, 0x50, 0x92,
  0x33, 0xa7, 0x8a, 0x0b, 0x17, 0x4e, 0x09, 0x4d, 0xae, 0x69, 0xa9, 0x72,
  0x40, 0xe2, 0x04, 0x57, 0xae, 0x9c, 0x7a, 0x41, 0xe1, 0xcd, 0xda, 0x8e,
  0x42, 0xc8, 0x19, 0x04, 0xda, 0x9f, 0xf4, 0xe6, 0x3f, 0xf3, 0xe6, 0xcd,
  0xdb, 0x9d, 0x19, 0xed, 0xe5, 0xed, 0xa3, 0x0a, 0xc4, 0xfc, 0x3c, 0xfe,
  0xec, 0x1f, 0x5a, 0x7b, 0xdf, 0x6e, 0xbf, 0x72, 0x2f, 0x0f, 0x60, 0xea,
  0x01, 0x23, 0x75, 0xc3, 0xdc, 0x2e, 0xe9, 0x16, 0xe0, 0xce, 0x20, 0x7e,
  0xe8, 0xd7, 0xac, 0xb0, 0xcd, 0xb2, 0x69, 0x74, 0x7f, 0x48, 0x8a, 0xed,
  0xc1, 0xfe, 0xfe, 0x12, 0xdb, 0x65, 0xee, 0xfe, 0x0d, 0x9d, 0xf2, 0x2e,
  0xdb, 0x67, 0x6c, 0x1a, 0x1d, 0x3f, 0x44, 0x3f, 0x1f, 0x07, 0x76, 0x9c,
  0xe1, 0x7b, 0x1d, 0x27, 0xc7, 0x96, 0x65, 0x13, 0x03, 0x3b, 0x4e, 0xf8,
  0xcd, 0x77, 0x8b, 0x2c, 0x57, 0xd8, 0x00, 0x57, 0xaf, 0x2d, 0x6b, 0xf5,
  0xbe, 0xff, 0x5c, 0xfb, 0x20, 0x7d, 0xf3, 0xd2, 0xa9, 0xef, 0xf5, 0x5f,
  0x66, 0x78, 0x4f, 0x9a, 0x75, 0x43, 0xb7, 0x7f, 0xe5, 0xe8, 0x7c, 0x4e,
  0xdc, 0x63, 0x73, 0x30, 0x1e, 0xde, 0xe5, 0x0f, 0x6c, 0xc7, 0xef, 0xe3,
  0x38, 0x87, 0x8c, 0xd6, 0xd3, 0xd0, 0xf7, 0xa3, 0x60, 0xb5, 0xa5, 0x52,
  0x9f, 0xb8, 0x4a, 0xec, 0xe5, 0x95, 0x91, 0x9b, 0x53, 0x72, 0x75, 0x8e,
  0xdd, 0xff, 0x18, 0x7a, 0x4f, 0x8a, 0x4d, 0xa3, 0x52, 0xfd, 0x5d, 0x28,
  0xd1, 0xdf, 0xb9, 0x32, 0x4e, 0x39, 0x94, 0xff, 0x21, 0xfa, 0x0c, 0x88,
  0x4d, 0xa3, 0xcf, 0x42, 0x8f, 0x87, 0xf0, 0xe7, 0x9d, 0x90, 0x90, 0x90,
  0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90,
  0xf0, 0xef, 0x33, 0xd9, 0xdb, 0xbe, 0x9d, 0xbb, 0xbb, 0x93, 0x85, 0x9f,
  0x0e, 0xf2, 0xe9, 0x14, 0x54, 0x59, 0x1d, 0xd6, 0x43, 0xe3, 0xcb, 0xed,
  0x7b, 0xab, 0x02, 0xee, 0x1b, 0x5f, 0x6c, 0x1b, 0xc6, 0xfa, 0xb6, 0x3c,
  0x74, 0x3e, 0xd5, 0x15, 0x8d, 0x8d, 0x72, 0xb5, 0x0b, 0x6e, 0xe7, 0x57,
  0x22, 0xd9, 0xdb, 0xe8, 0xb4, 0xe2, 0x7e, 0xa5, 0x22, 0x7b, 0x05, 0x5e,
  0x57, 0xe0, 0x75, 0x45, 0xd6, 0x22, 0xeb, 0x66, 0x19, 0xe2, 0x39, 0x00,
  0xd9, 0xdb, 0x2a, 0x97, 0xbb, 0x5b, 0x9d, 0x95, 0xee, 0xa6, 0xb7, 0xd0,
  0xdd, 0xec, 0xdc, 0xe8, 0x6e, 0x78, 0xd7, 0xba, 0x1b, 0x8d, 0x9b, 0xf1,
  0xfc, 0x44, 0x55, 0xf6, 0xb4, 0xba, 0x6e, 0x5f, 0x3d, 0xaf, 0xaf, 0xcd,
  0x66, 0x5f, 0xb3, 0x2d, 0x5e, 0xef, 0x79, 0x71, 0xec, 0xcc, 0x4c, 0xdf,
  0x57, 0x58, 0x94, 0xbd, 0xeb, 0x0e, 0xec, 0x59, 0xf0, 0xd1, 0x81, 0xf5,
  0xdb, 0x03, 0xc3, 0x66, 0xb5, 0x59, 0x33, 0xac, 0x19, 0xd6, 0x17, 0x9c,
  0x47, 0xbb, 0x2f, 0x3b, 0x5f, 0xed, 0xbe, 0xc7, 0xfb, 0x22, 0xbf, 0x4a,
  0x39, 0xbf, 0x46, 0x77, 0xb8, 0x5f, 0x09, 0xaa, 0xb8, 0xd5, 0x68, 0x75,
  0x37, 0x1b, 0x8d, 0x38, 0x5f, 0x71, 0xbe, 0x9f, 0xaf, 0xd2, 0x91, 0x3d,
  0x1d, 0x0b, 0x3e, 0xd0, 0x58, 0x50, 0xc3, 0x94, 0x2f, 0x28, 0xef, 0xbb,
  0x24, 0x7c, 0x49, 0x59, 0xe8, 0x1d, 0x8c, 0x07, 0xcf, 0x48, 0xc7, 0x9f,
  0x22, 0xc3, 0x57, 0xf4, 0x2e, 0xc7, 0x79, 0x61, 0x15, 0xdf, 0x61, 0x6d,
  0x06, 0x80, 0x6f, 0xb3, 0xb6, 0xfc, 0x06, 0xf9, 0x81, 0xc0, 0xe9, 0xb0,
  0x86, 0xd5, 0x10, 0xd0, 0x0d, 0x1a, 0xf8, 0x16, 0xfb, 0x67, 0xa2, 0x2a,
  0xce, 0xf9, 0x6d, 0xba, 0x10, 0x48, 0x9c, 0x08, 0x05, 0x36, 0xc2, 0x32,
  0x16, 0x38, 0xdf, 0x64, 0xf0, 0xaa, 0x7c, 0x93, 0xe7, 0x17, 0xc3, 0x06,
  0xb6, 0xfd, 0x16, 0x91, 0xe3, 0x52, 0x18, 0xd5, 0xb0, 0x16, 0x4a, 0x5c,
  0x0a, 0x3d, 0x9c, 0x0a, 0x5a, 0x38, 0x1b, 0x95, 0xd1, 0xae, 0xbb, 0x48,
  0x76, 0x95, 0x32, 0xa3, 0x2e, 0x5e, 0x0e, 0x5b, 0x68, 0xd6, 0xab, 0x78,
  0x36, 0x98, 0xc2, 0x0f, 0xe0, 0xee, 0x8e, 0x74, 0xe7, 0x29, 0x08, 0x14,
  0xd6, 0x43, 0x85, 0x6f, 0x70, 0xae, 0xf9, 0x08, 0x10, 0x9c, 0x36, 0x5d,
  0x8c, 0x04, 0xea, 0xfb, 0xec, 0x44, 0x0d, 0xbc, 0x14, 0x49, 0xb4, 0x8d,
  0x36, 0x3e, 0x15, 0x79, 0x58, 0x74, 0xf2, 0x04, 0x36, 0x90, 0x3d, 0x9d,
  0xc7, 0x1c, 0xbf, 0xc3, 0x42, 0xf4, 0x92, 0xcc, 0x98, 0x6d, 0xb4, 0xb9,
  0x7f, 0x3e, 0xbc, 0x2a, 0x4d, 0x03, 0xf0, 0x09, 0xde, 0x63, 0xa6, 0x9e,
  0x47, 0x70, 0x4b, 0x64, 0x38, 0xb0, 0x5b, 0xe2, 0xb9, 0xb1, 0xec, 0x6b,
  0xb2, 0xe3, 0x58, 0x7b, 0x45, 0xdb, 0xa2, 0x14, 0x8f, 0xd5, 0xe8, 0x82,
  0xd4, 0x67, 0x72, 0x2e, 0xb8, 0x2a, 0xa3, 0xa8, 0x80, 0xca, 0x04, 0xb4,
  0x5c, 0x49, 0xa9, 0x76, 0x09, 0x89, 0xfd, 0xd6, 0xc8, 0x0d, 0x69, 0x4e,
  0x5b, 0x98, 0x2e, 0x0a, 0x34, 0x79, 0xbc, 0x1c, 0xce, 0x4a, 0xbb, 0x2d,
  0xf1, 0xc9, 0x48, 0xc5, 0xcf, 0xb2, 0xcc, 0xa6, 0xa4, 0x89, 0x12, 0xa9,
  0x3a, 0xc7, 0xa4, 0x01, 0x51, 0x28, 0x72, 0x05, 0x92, 0x27, 0xca, 0xd4,
  0x14, 0x35, 0x7a, 0x3a, 0xca, 0xa0, 0x5d, 0x2c, 0x61, 0x26, 0x2f, 0x31,
  0x9d, 0xb5, 0x70, 0x92, 0x43, 0x46, 0x40, 0xc5, 0xb9, 0x84, 0x79, 0x41,
  0xfa, 0x50, 0xc3, 0x69, 0x28, 0xa3, 0xc5, 0x63, 0xf9, 0xdc, 0x8c, 0xcc,
  0x68, 0x7d, 0x7e, 0x51, 0x92, 0xa5, 0x70, 0xca, 0xc2, 0xf8, 0x6c, 0x4a,
  0x9c, 0xab, 0xc2, 0xb9, 0xaa, 0xc2, 0x25, 0xf3, 0xc5, 0xcc, 0x5a, 0x91,
  0xa6, 0x68, 0x02, 0x5c, 0x1c, 0xe3, 0xb5, 0x67, 0x78, 0xad, 0x03, 0x40,
  0x01, 0x95, 0xf0, 0x3c, 0xe5, 0xf1, 0x1c, 0x21, 0xe6, 0x48, 0xe1, 0x8f,
  0x16, 0x3c, 0x36, 0x94, 0x95, 0xc9, 0xf1, 0xd9, 0x19, 0x3a, 0xe7, 0xc5,
  0x45, 0x99, 0x17, 0x80, 0x7a, 0xcf, 0x32, 0x9c, 0x91, 0x4a, 0xeb, 0xd2,
  0x8a, 0x94, 0x5a, 0xa7, 0xaf, 0x48, 0xb0, 0xd4, 0x01, 0xd8, 0x02, 0x7e,
  0x17, 0xde, 0x5a, 0x4f, 0x34, 0xd6, 0xb4, 0x3f, 0xbd, 0x5c, 0x91, 0x67,
  0x39, 0xd7, 0x28, 0x09, 0xcc, 0x09, 0x78, 0x8c, 0x23, 0xc5, 0x42, 0x9d,
  0x35, 0x65, 0x48, 0xd0, 0x79, 0x4d, 0x53, 0x90, 0x59, 0x04, 0x32, 0x27,
  0x24, 0x81, 0x50, 0x6b, 0x11, 0xcf, 0x81, 0x48, 0x15, 0x96, 0x59, 0x0b,
  0x85, 0x82, 0x01, 0xf0, 0xe1, 0xce, 0x19, 0xfd, 0x4d, 0x9e, 0x28, 0x08,
  0xc7, 0x75, 0xc4, 0x13, 0xbe, 0x71, 0xdd, 0x08, 0x43, 0xcf, 0x1d, 0xfd,
  0x0a, 0xd0, 0xbe, 0x54, 0x2a, 0xae, 0xdc, 0xb7, 0x74, 0xa3, 0xd1, 0x3e,
  0x91, 0x8a, 0xab, 0xb4, 0x47, 0xbe, 0xb8, 0x42, 0x2b, 0xe3, 0xfa, 0xec,
  0xd1, 0xda, 0x21, 0xeb, 0x83, 0xfa, 0xb4, 0x16, 0x9b, 0x4d, 0x0e, 0x2a,
  0xbc, 0xd7, 0xbf, 0xae, 0xdd, 0x0a, 0x7f, 0xb9, 0x45, 0x1f, 0xef, 0x1b,
  0xbd, 0xfb, 0x0f, 0xdf, 0x7f, 0xfd, 0x4f, 0x08, 0xf1, 0xd8, 0x20, 0x00,
  0x17, 0x00, 0x01, 0x00, 0x10, 0xa0, 0x19, 0x00, 0x78, 0x01, 0xed, 0x99,
  0xc1, 0x6f, 0x1b, 0x45, 0x14, 0x87, 0xdf, 0xce, 0x8e, 0x77, 0xc7, 0xeb,
  0xe9, 0xf3, 0xda, 0x71, 0x52, 0x27, 0x71, 0xd6, 0x5e, 0xc7, 0x0d, 0xd9,
  0xae, 0x56, 0x9b, 0x4a, 0xa8, 0x4a, 0x50, 0x15, 0x16, 0x88, 0x50, 0xb4,
  0x8a, 0x1a, 0xc4, 0x81, 0x13, 0x48, 0xa8, 0x85, 0x1e, 0x2a, 0x81, 0x02,
  0xdc, 0x38, 0x04, 0x37, 0x48, 0x01, 0x85, 0xaa, 0x87, 0x22, 0x21, 0xe4,
  0x44, 0x55, 0x55, 0x2e, 0x1c, 0x2a, 0xf8, 0x0f, 0xdc, 0x36, 0xb9, 0x16,
  0x0e, 0x39, 0x70, 0xa5, 0x97, 0x1e, 0xb8, 0x72, 0x81, 0x5b, 0x78, 0x6f,
  0x63, 0x17, 0x37, 0x45, 0xe2, 0x06, 0x52, 0xb5, 0x9f, 0xf4, 0xe6, 0x37,
  0xf3, 0xe6, 0x79, 0xde, 0x9b, 0xdd, 0xf1, 0x65, 0xf6, 0xf6, 0x24, 0x64,
  0x3c, 0x3e, 0xbf, 0xf0, 0x0a, 0x6b, 0xf7, 0x87, 0xfe, 0xfb, 0x77, 0x5d,
  0x80, 0x02, 0x0f, 0x08, 0xc1, 0x0d, 0xb1, 0x51, 0xe3, 0x16, 0x60, 0x75,
  0x10, 0x3f, 0x9c, 0x67, 0x02, 0xb2, 0xb3, 0x64, 0x4c, 0xc2, 0xcd, 0x00,
  0x83, 0x1b, 0x80, 0x65, 0xb2, 0x97, 0xc9, 0x9e, 0x81, 0x97, 0xfc, 0x8a,
  0x6c, 0x87, 0x8c, 0x19, 0xc4, 0x67, 0x58, 0x64, 0x33, 0x03, 0xfb, 0x37,
  0x90, 0x4c, 0x93, 0x0d, 0x6b, 0x1d, 0xe5, 0x6b, 0xf3, 0xc7, 0x0b, 0x24,
  0x2b, 0x64, 0x30, 0xe9, 0xbc, 0xf1, 0x54, 0x1d, 0x67, 0xff, 0x08, 0xb8,
  0xb6, 0xe7, 0x8a, 0xe1, 0x7b, 0x62, 0x16, 0x25, 0xb7, 0x4f, 0x33, 0x74,
  0x7d, 0x5f, 0xe7, 0xf6, 0xef, 0xf1, 0x9f, 0x83, 0xf1, 0xf0, 0x5d, 0xde,
  0x27, 0x1b, 0x7d, 0x1f, 0xa3, 0x1c, 0x11, 0xac, 0xff, 0x04, 0x9f, 0x0b,
  0x0b, 0xd6, 0x17, 0x2c, 0xe3, 0x8b, 0x96, 0x25, 0x0e, 0x5c, 0xcb, 0x2c,
  0x9f, 0xb3, 0xe4, 0xfa, 0x39, 0x72, 0xff, 0x67, 0x1c, 0xd7, 0x70, 0x8c,
  0x65, 0x1c, 0xef, 0xc2, 0x12, 0xc7, 0xa7, 0xc3, 0x32, 0x4d, 0x16, 0xda,
  0xf8, 0x70, 0xe7, 0xcf, 0x27, 0xfc, 0x0c, 0xf8, 0x7f, 0x31, 0x64, 0x74,
  0xb7, 0x7c, 0x44, 0x46, 0x8e, 0x49, 0x4e, 0x4e, 0x4e, 0x4e, 0x4e, 0x4e,
  0x4e, 0x4e, 0x4e, 0x4e, 0x4e, 0x4e, 0x4e, 0x4e, 0x4e, 0xce, 0xff, 0x83,
  0xdf, 0xed, 0x6f, 0x94, 0xaf, 0xdf, 0x43, 0xf8, 0xe5, 0xd0, 0xb5, 0x0d,
  0x90, 0x47, 0xfe, 0x97, 0x00, 0x2e, 0x98, 0xe6, 0xed, 0xfe, 0x03, 0xf3,
  0x4e, 0xff, 0xc8, 0xfc, 0xae, 0x7f, 0x77, 0x5d, 0x40, 0xaf, 0x01, 0x29,
  0xb4, 0x16, 0x1f, 0x01, 0xa8, 0x6e, 0x99, 0x62, 0x2b, 0x14, 0xdb, 0x80,
  0xad, 0x43, 0xf5, 0xdb, 0x4f, 0xe6, 0x6e, 0xc3, 0x4d, 0x67, 0xa8, 0x5f,
  0xa4, 0xbe, 0x47, 0xea, 0x90, 0x72, 0xac, 0x52, 0xaa, 0xbb, 0xd7, 0x68,
  0xa4, 0x3d, 0x6f, 0x21, 0xdd, 0xf5, 0x96, 0xd3, 0x3d, 0x2f, 0xc9, 0xd6,
  0x40, 0x54, 0x5d, 0xd6, 0x7a, 0x5d, 0x75, 0xab, 0xb4, 0x56, 0x95, 0xd6,
  0x1a, 0x23, 0x1d, 0x23, 0x5d, 0xf3, 0xe5, 0xc1, 0xdb, 0xfe, 0xc3, 0xfd,
  0xf7, 0xfc, 0x9b, 0xfb, 0x5d, 0xf3, 0x5a, 0x5f, 0x19, 0xdd, 0xfb, 0x9f,
  0x50, 0x7d, 0x10, 0xbc, 0x8a, 0x46, 0xb0, 0x82, 0x22, 0x78, 0x1d, 0xcd,
  0x60, 0x15, 0xf9, 0xf7, 0x4d, 0xaa, 0x65, 0xb7, 0xb3, 0x9c, 0xf2, 0xbc,
  0x0a, 0x52, 0x2c, 0x05, 0x2e, 0x16, 0x83, 0x35, 0x74, 0x82, 0x8b, 0xf8,
  0x11, 0xf9, 0xa6, 0xa0, 0x7b, 0x38, 0x15, 0xde, 0x90, 0x75, 0xd2, 0x7a,
  0xb8, 0x2d, 0x27, 0x49, 0x27, 0xc3, 0x1d, 0x39, 0x4d, 0x3a, 0x1d, 0xde,
  0x94, 0xbd, 0xb9, 0xd5, 0x94, 0xf7, 0x3e, 0x4b, 0x63, 0x33, 0x6c, 0x4b,
  0x5e, 0xb3, 0x45, 0x35, 0xfb, 0x34, 0x36, 0xc2, 0x9e, 0xc4, 0x40, 0x60,
  0xaf, 0xd3, 0x48, 0xdd, 0xc0, 0xc2, 0x16, 0xf9, 0x20, 0xfc, 0x46, 0xb6,
  0x49, 0x45, 0x78, 0x4b, 0x96, 0x29, 0x47, 0x25, 0x98, 0xcf, 0xea, 0xe0,
  0xfd, 0xec, 0x75, 0x3a, 0xe9, 0xee, 0x5c, 0x9a, 0xee, 0xcd, 0xcd, 0xa5,
  0x9c, 0x7b, 0x8e, 0xe2, 0x54, 0x68, 0xc9, 0x79, 0x52, 0x27, 0xc4, 0x6c,
  0x6d, 0xae, 0xb7, 0x18, 0x5e, 0xd4, 0xa5, 0x70, 0x5e, 0xf3, 0xb8, 0x4a,
  0xb9, 0x3e, 0xa6, 0xd8, 0x71, 0x8a, 0xc1, 0xe8, 0x92, 0x44, 0xd2, 0x72,
  0x74, 0x25, 0xab, 0xd3, 0x8d, 0xae, 0xca, 0x4a, 0x74, 0x5e, 0xf3, 0x5a,
  0x5c, 0x3f, 0x44, 0x5b, 0xb2, 0x4a, 0x6a, 0x44, 0xdb, 0x92, 0xf7, 0x25,
  0xa2, 0x1d, 0xd9, 0x24, 0x35, 0xa3, 0x1b, 0xd9, 0xda, 0x1d, 0x5a, 0x9b,
  0x63, 0xb9, 0x3e, 0x27, 0xba, 0x23, 0xb9, 0x5e, 0x15, 0xf5, 0x24, 0xef,
  0xa5, 0x18, 0xdd, 0x92, 0xa5, 0xe8, 0x38, 0xe7, 0x18, 0xe5, 0xe4, 0x38,
  0x83, 0xfc, 0x46, 0xfc, 0x52, 0xf6, 0xdb, 0x33, 0xfc, 0x3e, 0x68, 0x0c,
  0xf1, 0x5b, 0x52, 0x90, 0x8a, 0xf8, 0x8a, 0x34, 0x49, 0xcd, 0xf8, 0x43,
  0xc9, 0xb1, 0x8a, 0xfa, 0x2a, 0xde, 0x92, 0x45, 0xd2, 0x62, 0xbc, 0x2d,
  0x1d, 0x52, 0x27, 0xde, 0x91, 0x25, 0xd2, 0x52, 0xfc, 0xa6, 0xe4, 0x67,
  0x58, 0xa6, 0x7e, 0x39, 0x4e, 0x25, 0x14, 0x3b, 0x58, 0x30, 0x3b, 0xda,
  0x2a, 0x74, 0x34, 0xef, 0x07, 0xe3, 0x4b, 0xd9, 0x5a, 0xb6, 0x9d, 0x4a,
  0xa4, 0x39, 0x58, 0x02, 0x54, 0x45, 0x85, 0x2e, 0xf9, 0xdc, 0xf8, 0xaa,
  0x2c, 0x34, 0x3b, 0xba, 0x30, 0xa6, 0xf4, 0x8c, 0x09, 0x1a, 0x97, 0x04,
  0x56, 0xc8, 0x5f, 0x89, 0x37, 0xa5, 0xe5, 0xd3, 0x1a, 0xe3, 0xe4, 0x6f,
  0x0a, 0xed, 0x15, 0x40, 0xab, 0x25, 0x99, 0xcd, 0xd9, 0xb3, 0xa9, 0xfc,
  0x0c, 0xae, 0xdf, 0xab, 0x59, 0x0e, 0xd6, 0x2d, 0x8d, 0x0d, 0xcb, 0xc5,
  0x99, 0x31, 0xa9, 0x3d, 0x5f, 0x68, 0xda, 0x20, 0xda, 0xa7, 0x95, 0x1e,
  0x6f, 0x3b, 0x7a, 0xb2, 0xad, 0xf5, 0x4c, 0xdb, 0xd5, 0x0a, 0x3c, 0x9c,
  0x50, 0x8e, 0x9e, 0x52, 0x5a, 0x7b, 0xca, 0xd5, 0xde, 0xb8, 0xd4, 0xa7,
  0x44, 0x4b, 0x17, 0x85, 0xa7, 0x5d, 0x00, 0x3c, 0x8d, 0x8e, 0x9e, 0x46,
  0xad, 0x9b, 0xe8, 0x6a, 0xd3, 0x17, 0xfb, 0x8b, 0xbe, 0x73, 0x80, 0xb2,
  0xa5, 0x2b, 0x02, 0xb4, 0x23, 0x29, 0xc6, 0x17, 0x58, 0x95, 0xa0, 0xcb,
  0x54, 0x07, 0x18, 0x42, 0x1b, 0xef, 0x88, 0xcd, 0x8e, 0x55, 0x45, 0xae,
  0xa1, 0x6e, 0xd5, 0x28, 0xff, 0x04, 0xb6, 0xac, 0x06, 0xf2, 0x73, 0xab,
  0xbc, 0xb6, 0x28, 0xcf, 0xb4, 0xab, 0x94, 0xbb, 0x46, 0xb9, 0x27, 0xf4,
  0x9c, 0xaa, 0x52, 0xde, 0x1a, 0xe5, 0x9d, 0xd0, 0x6d, 0x25, 0xb5, 0xd1,
  0x6c, 0xe0, 0x0b, 0x58, 0xa5, 0x7c, 0x35, 0xca, 0x37, 0xa1, 0x67, 0x91,
  0x7c, 0xbe, 0x87, 0x86, 0x01, 0x38, 0xde, 0x16, 0x54, 0x0b, 0x62, 0xcd,
  0x12, 0x9a, 0x9f, 0x97, 0x8c, 0x1a, 0xd2, 0x50, 0xd6, 0xa1, 0x61, 0x0b,
  0x48, 0x92, 0x8d, 0x47, 0x50, 0x48, 0xec, 0x15, 0x56, 0x2b, 0xb1, 0x57,
  0x59, 0x55, 0x62, 0xaf, 0xb1, 0x16, 0x13, 0x1b, 0x58, 0x75, 0x62, 0x4b,
  0xd6, 0x53, 0x89, 0xed, 0xb2, 0x3a, 0x89, 0x5d, 0x63, 0x2d, 0x25, 0x76,
  0x9d, 0x55, 0x24, 0x76, 0x83, 0xd5, 0x48, 0xec, 0x16, 0x2b, 0x26, 0x76,
  0x87, 0xb5, 0x9c, 0xd8, 0xf3, 0xac, 0x90, 0xd8, 0xbf, 0x0b, 0xd8, 0x5c,
  0x18, 0xf4, 0x5f, 0x1c, 0xe8, 0xe2, 0x40, 0xe9, 0x60, 0x6c, 0x5e, 0x18,
  0xf4, 0x01, 0xae, 0xd1, 0x99, 0x25, 0x4e, 0x5c, 0x5c, 0x67, 0x9f, 0x2c,
  0x4e, 0xf8, 0xb2, 0xeb, 0xee, 0x13, 0x3e, 0x7a, 0xee, 0xcf, 0xf8, 0xa6,
  0xb8, 0x11, 0x26, 0xcf, 0x3d, 0xf9, 0xb4, 0xc1, 0x3e, 0xc3, 0xe0, 0x1b,
  0x56, 0x58, 0xe0, 0x86, 0x61, 0x9f, 0x30, 0xb2, 0x5b, 0xe7, 0x27, 0xbe,
  0xec, 0xc6, 0x99, 0x4e, 0x19, 0x31, 0xfa, 0x59, 0x24, 0xe3, 0xdd, 0xc1,
  0x77, 0x14, 0xae, 0xa3, 0x48, 0x26, 0x07, 0x37, 0xd6, 0x6b, 0xdf, 0x7a,
  0x97, 0xa3, 0x5f, 0x2f, 0xe3, 0xe7, 0x0f, 0xcd, 0xee, 0x83, 0x9f, 0x3f,
  0xfd, 0xe0, 0x2f, 0x4b, 0x1a, 0x0c, 0xa8, 0x00, 0x17, 0x00, 0x01, 0x00,
  0x00, 0x10, 0x19, 0x00, 0x78, 0x01, 0xed, 0x99, 0x4d, 0x6c, 0xdc, 0x44,
  0x14, 0xc7, 0x9f, 0xed, 0xd9, 0x89, 0xed, 0x9d, 0xbe, 0xf5, 0x7a, 0x3f,
  0x9a, 0x4d, 0x9c, 0xcd, 0xee, 0xe6, 0xd3, 0xb6, 0x2c, 0x27, 0x21, 0x8a,
  0xa2, 0x2a, 0x4a, 0xab, 0xa8, 0x42, 0x95, 0x15, 0x29, 0x15, 0x47, 0x04,
  0x97, 0x16, 0x10, 0x42, 0x02, 0x95, 0x1c, 0x7a, 0xe8, 0x61, 0x59, 0x40,
  0x02, 0x54, 0x95, 0x1c, 0x38, 0xa0, 0x76, 0x93, 0x0b, 0x17, 0x4e, 0x2d,
  0xe2, 0xc8, 0x69, 0x43, 0x52, 0xa9, 0xe2, 0x00, 0xa8, 0x0a, 0x52, 0x45,
  0x4f, 0x70, 0x85, 0x1b, 0x3d, 0x23, 0x85, 0xf7, 0xbc, 0xbb, 0x51, 0x08,
  0x9c, 0x41, 0xaa, 0xfc, 0x93, 0xde, 0xfc, 0x3d, 0x33, 0x6f, 0xe6, 0x3d,
  0xcf, 0x78, 0x2f, 0x6f, 0x9d, 0x1a, 0xa4, 0x3c, 0x88, 0x16, 0x7f, 0x67,
  0xed, 0x7c, 0xd5, 0x7b, 0xfd, 0xbe, 0x03, 0x90, 0xe3, 0xce, 0x29, 0x6e,
  0x94, 0xb9, 0x05, 0xf8, 0x66, 0x94, 0x5b, 0x00, 0xc9, 0xcd, 0x80, 0x39,
  0xb2, 0x16, 0x19, 0x73, 0x89, 0x9b, 0x01, 0x1a, 0x59, 0xf7, 0x5e, 0x6d,
  0x9d, 0xec, 0x22, 0x3d, 0xfe, 0x83, 0x0a, 0xd9, 0x0e, 0xd9, 0xa7, 0x64,
  0x0c, 0xfb, 0x0f, 0xe1, 0xf8, 0x6a, 0x60, 0xcc, 0xd9, 0x7c, 0x4e, 0x83,
  0x64, 0xec, 0xa7, 0x93, 0x9d, 0x65, 0x7d, 0xfb, 0xc1, 0x1a, 0xc9, 0x65,
  0x32, 0x78, 0xf4, 0x45, 0x72, 0xf1, 0xe6, 0xa3, 0x2f, 0xb9, 0x9f, 0xf2,
  0xd3, 0x1f, 0xc1, 0x3a, 0xeb, 0xf3, 0xc4, 0xf0, 0x9e, 0x98, 0xc7, 0x06,
  0xb7, 0x7f, 0x67, 0x78, 0x46, 0x97, 0x06, 0xf7, 0x28, 0xb8, 0x21, 0xde,
  0x1c, 0xf4, 0x87, 0x77, 0xf9, 0x2d, 0xd9, 0xe9, 0xfb, 0x38, 0xcd, 0x31,
  0xc1, 0xfa, 0x6f, 0xf0, 0x3d, 0x49, 0xd8, 0x5a, 0x90, 0xda, 0xc7, 0x0d,
  0xa9, 0x3f, 0x74, 0xa4, 0x51, 0x58, 0x94, 0x62, 0x6b, 0x91, 0x86, 0xff,
  0x33, 0xfa, 0x39, 0xf4, 0x91, 0x5a, 0xff, 0x2d, 0xa4, 0xde, 0x7f, 0x73,
  0x69, 0x0c, 0x0e, 0x45, 0x0c, 0xdf, 0xfc, 0xf9, 0x84, 0xcf, 0x80, 0x7f,
  0x17, 0x43, 0x86, 0x6f, 0xcb, 0xa7, 0x31, 0xfc, 0x44, 0xae, 0x72, 0x93,
  0x91, 0x91, 0x91, 0x91, 0x91, 0x91, 0x91, 0x91, 0x91, 0x91, 0x91, 0x91,
  0x91, 0x91, 0x91, 0xf1, 0x7f, 0xd1, 0xec, 0xf4, 0x6e, 0x14, 0xee, 0xec,
  0x03, 0x3c, 0x39, 0x72, 0x46, 0x34, 0x68, 0x92, 0x16, 0x49, 0xc5, 0x71,
  0xed, 0x13, 0x00, 0x07, 0x0c, 0xe3, 0x6e, 0xef, 0xc0, 0xe8, 0xf6, 0x8e,
  0x8d, 0xdd, 0xde, 0xfd, 0x2d, 0x1d, 0xba, 0x20, 0x12, 0x68, 0xac, 0xfe,
  0xaa, 0x8f, 0xca, 0x8e, 0x0e, 0x1f, 0x1c, 0x99, 0xbf, 0xfd, 0x60, 0xec,
  0x82, 0x93, 0xec, 0x01, 0x24, 0xdd, 0x8d, 0xd5, 0x74, 0x0e, 0x50, 0x76,
  0x0c, 0x9a, 0xb3, 0x68, 0xae, 0x41, 0x6a, 0x93, 0xf2, 0xb8, 0x69, 0xca,
  0x0e, 0xab, 0xe7, 0xc9, 0x8e, 0x4b, 0x71, 0x5c, 0x8a, 0x53, 0x22, 0x2d,
  0x91, 0x6e, 0xd6, 0xe0, 0xe1, 0x2b, 0xb5, 0xef, 0x0e, 0x5f, 0xab, 0xed,
  0x1c, 0x1e, 0x18, 0x7f, 0xf6, 0xb6, 0x29, 0xa7, 0x82, 0x0f, 0x38, 0xea,
  0xd7, 0xb1, 0xe6, 0x2f, 0xe0, 0x98, 0xbf, 0x84, 0xe3, 0xfe, 0x32, 0xee,
  0x6e, 0xac, 0x24, 0xe8, 0x6f, 0xe2, 0xde, 0x86, 0x97, 0xbc, 0x4b, 0x3e,
  0xa6, 0x7f, 0x19, 0x2d, 0xff, 0x45, 0xb4, 0xfd, 0x2b, 0x98, 0xf7, 0x13,
  0xe4, 0xfd, 0xc7, 0x29, 0x8e, 0xe3, 0xaf, 0x60, 0xd1, 0x9f, 0x47, 0xf6,
  0xf1, 0xa0, 0x73, 0xe4, 0x85, 0xeb, 0x82, 0xe7, 0x90, 0x72, 0xeb, 0x4e,
  0x6f, 0x24, 0x13, 0xe1, 0x82, 0xaa, 0x87, 0x4b, 0x6a, 0x32, 0x5c, 0x56,
  0xec, 0x33, 0x41, 0x3e, 0xf9, 0xf0, 0x73, 0x51, 0x27, 0x35, 0xc3, 0xdb,
  0x62, 0x92, 0xd4, 0x0a, 0x77, 0x44, 0x8b, 0xd4, 0x0e, 0x3f, 0x4b, 0xd7,
  0x36, 0x69, 0xdf, 0x5d, 0x5a, 0xcb, 0xfe, 0x18, 0x6e, 0xaa, 0x42, 0x08,
  0xca, 0x09, 0x57, 0xd4, 0x14, 0xf9, 0x14, 0xc3, 0x97, 0xfa, 0x3e, 0xb4,
  0xff, 0xde, 0xf4, 0x74, 0xd2, 0x9d, 0xdd, 0x48, 0x76, 0x67, 0xaf, 0x24,
  0x7b, 0xb3, 0x49, 0x7a, 0x26, 0xae, 0x2b, 0x3b, 0xfc, 0x4e, 0x66, 0xb4,
  0xaa, 0xec, 0x68, 0x49, 0xe5, 0xa3, 0x7e, 0x5c, 0x8c, 0xd6, 0x14, 0xd2,
  0x7a, 0x2b, 0xba, 0x76, 0x12, 0x63, 0x94, 0xfa, 0x85, 0xa8, 0x9d, 0xe6,
  0xe0, 0x44, 0xb7, 0x45, 0x31, 0xba, 0x90, 0xfa, 0x36, 0xa9, 0xef, 0x46,
  0x5d, 0x51, 0x8a, 0x40, 0x95, 0xa3, 0x15, 0x55, 0xa5, 0x7e, 0x25, 0xda,
  0x49, 0xd7, 0xcd, 0xd0, 0xfe, 0xec, 0x63, 0xd1, 0x98, 0x15, 0x5f, 0x48,
  0xc7, 0xa6, 0x29, 0x17, 0x93, 0xfa, 0x66, 0xbc, 0x2d, 0x6c, 0x52, 0x3b,
  0x7e, 0x43, 0xe4, 0x49, 0xf3, 0xf1, 0x5b, 0x82, 0x7d, 0x4b, 0x31, 0xa8,
  0x12, 0xf5, 0xcb, 0xf1, 0x3b, 0xa2, 0x4c, 0x5a, 0x89, 0x5f, 0x16, 0xa6,
  0x15, 0x60, 0xae, 0x14, 0x28, 0x59, 0x09, 0xd4, 0xc8, 0xf9, 0x40, 0x99,
  0x39, 0x07, 0xf9, 0xfb, 0xe0, 0x75, 0x18, 0xdf, 0x12, 0x05, 0xd2, 0x42,
  0x7c, 0x4d, 0xe4, 0x2d, 0x0f, 0x1d, 0x7a, 0x76, 0xe2, 0xb6, 0xc8, 0x4d,
  0x7a, 0xaa, 0x48, 0xcf, 0xc5, 0xf8, 0xa6, 0x90, 0x4d, 0x4f, 0x8d, 0x4c,
  0xf5, 0xfb, 0x6e, 0xfc, 0x91, 0x28, 0x5a, 0x26, 0xe6, 0x34, 0x53, 0xc9,
  0x39, 0x32, 0x1a, 0x1b, 0xf1, 0x5d, 0x21, 0x48, 0x8d, 0x52, 0x2b, 0xcd,
  0xa9, 0x51, 0x71, 0x45, 0x3e, 0x67, 0x62, 0x31, 0x27, 0xd0, 0x98, 0x34,
  0x15, 0xf0, 0x9c, 0x66, 0xa7, 0x79, 0x36, 0x9a, 0xae, 0x78, 0x0f, 0xee,
  0xec, 0xab, 0x40, 0xa0, 0x13, 0x48, 0x2c, 0x07, 0x26, 0x8a, 0x72, 0x0b,
  0xa1, 0xdc, 0xc0, 0x73, 0x9e, 0x50, 0x45, 0x4f, 0xaa, 0x8a, 0x67, 0x2a,
  0xb3, 0x5c, 0xc6, 0xc6, 0x1c, 0xa8, 0x5c, 0xb5, 0xa5, 0x50, 0x09, 0xe5,
  0x2a, 0xa9, 0xaa, 0xca, 0x54, 0x5a, 0xb5, 0xa1, 0xac, 0x6a, 0x99, 0xe2,
  0xb6, 0x54, 0x01, 0x85, 0x2a, 0xa1, 0x54, 0xe7, 0xd1, 0x54, 0xc6, 0x3d,
  0xed, 0x70, 0xb5, 0x26, 0x1f, 0xea, 0xd0, 0x50, 0x2e, 0xc5, 0x81, 0xca,
  0xbc, 0x28, 0x4e, 0x01, 0x3a, 0x4d, 0x50, 0xee, 0x0c, 0x28, 0x78, 0x75,
  0xb6, 0xed, 0x05, 0x36, 0x72, 0x6c, 0x27, 0x70, 0x28, 0xae, 0x8b, 0xa3,
  0x41, 0x1d, 0x39, 0x37, 0x7c, 0x61, 0x4d, 0x4c, 0x78, 0x36, 0xc5, 0x76,
  0x28, 0xb6, 0xab, 0xae, 0x02, 0x7c, 0x5d, 0x57, 0x36, 0xc5, 0x74, 0x28,
  0xa6, 0xab, 0xc6, 0x14, 0x9d, 0x69, 0xb3, 0x4c, 0x67, 0xf3, 0xe4, 0x88,
  0x4b, 0xa2, 0xe7, 0x3c, 0x0f, 0x27, 0xd1, 0xa6, 0xd8, 0x0e, 0xc5, 0x76,
  0xd5, 0x38, 0x02, 0xe5, 0x82, 0xa8, 0x02, 0x4f, 0x69, 0xb4, 0x9f, 0x9c,
  0xf0, 0x84, 0x66, 0xca, 0x23, 0x34, 0x74, 0x28, 0x4d, 0x55, 0xb1, 0x34,
  0x53, 0x47, 0xd3, 0x5a, 0x7d, 0xea, 0xe8, 0x02, 0xc0, 0x20, 0xa5, 0x13,
  0x99, 0x87, 0xe5, 0x9f, 0x9d, 0x02, 0x80, 0x2e, 0xa8, 0x6f, 0xda, 0xf0,
  0x4c, 0x87, 0xf6, 0x33, 0x5d, 0x27, 0x13, 0x6d, 0x43, 0x97, 0x6d, 0x39,
  0x42, 0xe3, 0x69, 0xc5, 0xf9, 0xfd, 0x7d, 0xae, 0xf5, 0x9f, 0x2d, 0x28,
  0x3b, 0xdc, 0x9c, 0x19, 0x1b, 0xe3, 0x46, 0x37, 0x78, 0xee, 0xe4, 0xaf,
  0x04, 0x1e, 0xd3, 0x34, 0xae, 0x68, 0xc2, 0x02, 0x37, 0x0c, 0x8f, 0xe9,
  0x5a, 0x5a, 0xe5, 0x3d, 0x19, 0x4b, 0x2b, 0xbc, 0x22, 0xad, 0xef, 0x9e,
  0xfe, 0x1b, 0x22, 0xe5, 0xf1, 0xa0, 0xbe, 0xcd, 0x62, 0x91, 0x89, 0x41,
  0x85, 0x78, 0xf3, 0x6e, 0xfd, 0x7a, 0xf4, 0xcb, 0x75, 0xfc, 0xf0, 0x7b,
  0xa3, 0x73, 0xf0, 0xe3, 0xad, 0xb7, 0xff, 0x02, 0xee, 0x6a, 0xf3, 0x55,
  0x02, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x01, 0x02, 0x03, 0x00,
  0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x05, 0x03, 0x08, 0x02, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x03, 0x01, 0x06, 0x05, 0x04, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x7c, 0x00, 0x00, 0x78, 0x01, 0x63, 0x64, 0x60, 0x60, 0x60, 0x06,
  0x62, 0x09, 0x20, 0x06, 0x81, 0x1a, 0x20, 0x96, 0x05, 0x62, 0x26, 0x20,
  0x06, 0x01, 0x1b, 0x10, 0x01, 0x04, 0xac, 0x40, 0xec, 0x02, 0xc4, 0x20,
  0x00, 0x62, 0x27, 0x00, 0x31, 0x0c, 0x80, 0xcc, 0xf0, 0x01, 0x62, 0x10,
  0x00, 0xb1, 0x61, 0xe0, 0x3f, 0x10, 0x80, 0xf8, 0x19, 0x40, 0x0c, 0xb2,
  0x03, 0x55, 0xee, 0xff, 0x7f, 0x00, 0x33, 0x03, 0x0a, 0x55, 0x00, 0x00,
  0x78, 0x62, 0x6f, 0x70, 0x01, 0x00, 0x00, 0x00, 0x7e, 0x02, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00
};
