#if 0
;
; Input signature:
;
; Name                 Index   Mask Register SysValue  Format   Used
; -------------------- ----- ------ -------- -------- ------- ------
; SV_Position              0   xyzw        0     NONE   float   xyzw
; NORMAL                   0   xyz         1     NONE   float   xyz 
; TEXCOORD                 0   xy          2     NONE   float   xy  
;
;
; Output signature:
;
; Name                 Index   Mask Register SysValue  Format   Used
; -------------------- ----- ------ -------- -------- ------- ------
; TEXCOORD                 0   xy          0     NONE   float   xy  
; TEXCOORD                 1   xyzw        1     NONE   float   xyzw
; TEXCOORD                 2   xyz         2     NONE   float   xyz 
; COLOR                    0   xyzw        3     NONE   float   xyzw
; SV_Position              0   xyzw        4      POS   float   xyzw
;
; shader debug name: C:\Users\marcu\Downloads\DirectXTK12-main\DirectXTK12-main\Src/Shaders/Compiled\XboxGamingXboxOneEnvironmentMapEffect_VSEnvMapPixelLighting.pdb
; shader hash: 0c833a2be4443870e49d76211ebce23a
;
; Pipeline Runtime Information: 
;
;PSVRuntimeInfo:
; Vertex Shader
; OutputPositionPresent=1
; MinimumExpectedWaveLaneCount: 0
; MaximumExpectedWaveLaneCount: 4294967295
; UsesViewID: false
; SigInputElements: 3
; SigOutputElements: 5
; SigPatchConstOrPrimElements: 0
; SigInputVectors: 3
; SigOutputVectors[0]: 5
; SigOutputVectors[1]: 0
; SigOutputVectors[2]: 0
; SigOutputVectors[3]: 0
; EntryFunctionName: VSEnvMapPixelLighting
;
;
; Input signature:
;
; Name                 Index             InterpMode DynIdx
; -------------------- ----- ---------------------- ------
; SV_Position              0                              
; NORMAL                   0                              
; TEXCOORD                 0                              
;
; Output signature:
;
; Name                 Index             InterpMode DynIdx
; -------------------- ----- ---------------------- ------
; TEXCOORD                 0                 linear       
; TEXCOORD                 1                 linear       
; TEXCOORD                 2                 linear       
; COLOR                    0                 linear       
; SV_Position              0          noperspective       
;
; Buffer Definitions:
;
; cbuffer 
; {
;
;   [384 x i8] (type annotation not present)
;
; }
;
;
; Resource Bindings:
;
; Name                                 Type  Format         Dim      ID      HLSL Bind  Count
; ------------------------------ ---------- ------- ----------- ------- -------------- ------
;                                   cbuffer      NA          NA     CB0            cb0     1
;
;
; ViewId state:
;
; Number of inputs: 10, outputs: 20
; Outputs dependent on ViewId: {  }
; Inputs contributing to computation of Outputs:
;   output 0 depends on inputs: { 8 }
;   output 1 depends on inputs: { 9 }
;   output 4 depends on inputs: { 0, 1, 2, 3 }
;   output 5 depends on inputs: { 0, 1, 2, 3 }
;   output 6 depends on inputs: { 0, 1, 2, 3 }
;   output 7 depends on inputs: { 0, 1, 2, 3 }
;   output 8 depends on inputs: { 4, 5, 6 }
;   output 9 depends on inputs: { 4, 5, 6 }
;   output 10 depends on inputs: { 4, 5, 6 }
;   output 16 depends on inputs: { 0, 1, 2, 3 }
;   output 17 depends on inputs: { 0, 1, 2, 3 }
;   output 18 depends on inputs: { 0, 1, 2, 3 }
;   output 19 depends on inputs: { 0, 1, 2, 3 }
;
target datalayout = "e-m:e-p:32:32-i1:32-i8:32-i16:32-i32:32-i64:64-f16:32-f32:32-f64:64-n8:16:32:64"
target triple = "dxil-ms-xb1"

%dx.types.Handle = type { i8* }
%dx.types.CBufRet.f32 = type { float, float, float, float }
%hostlayout.Parameters = type { <3 x float>, float, float, <4 x float>, <3 x float>, [3 x <3 x float>], [3 x <3 x float>], <3 x float>, <3 x float>, <4 x float>, [4 x <4 x float>], [3 x <3 x float>], [4 x <4 x float>] }

define void @VSEnvMapPixelLighting() {
  %1 = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 2, i32 0, i32 0, i1 false)  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %2 = call float @dx.op.loadInput.f32(i32 4, i32 2, i32 0, i8 0, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %3 = call float @dx.op.loadInput.f32(i32 4, i32 2, i32 0, i8 1, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %4 = call float @dx.op.loadInput.f32(i32 4, i32 1, i32 0, i8 0, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %5 = call float @dx.op.loadInput.f32(i32 4, i32 1, i32 0, i8 1, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %6 = call float @dx.op.loadInput.f32(i32 4, i32 1, i32 0, i8 2, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %7 = call float @dx.op.loadInput.f32(i32 4, i32 0, i32 0, i8 0, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %8 = call float @dx.op.loadInput.f32(i32 4, i32 0, i32 0, i8 1, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %9 = call float @dx.op.loadInput.f32(i32 4, i32 0, i32 0, i8 2, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %10 = call float @dx.op.loadInput.f32(i32 4, i32 0, i32 0, i8 3, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %11 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 20)  ; CBufferLoadLegacy(handle,regIndex)
  %12 = extractvalue %dx.types.CBufRet.f32 %11, 0
  %13 = extractvalue %dx.types.CBufRet.f32 %11, 1
  %14 = extractvalue %dx.types.CBufRet.f32 %11, 2
  %15 = extractvalue %dx.types.CBufRet.f32 %11, 3
  %16 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 21)  ; CBufferLoadLegacy(handle,regIndex)
  %17 = extractvalue %dx.types.CBufRet.f32 %16, 0
  %18 = extractvalue %dx.types.CBufRet.f32 %16, 1
  %19 = extractvalue %dx.types.CBufRet.f32 %16, 2
  %20 = extractvalue %dx.types.CBufRet.f32 %16, 3
  %21 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 22)  ; CBufferLoadLegacy(handle,regIndex)
  %22 = extractvalue %dx.types.CBufRet.f32 %21, 0
  %23 = extractvalue %dx.types.CBufRet.f32 %21, 1
  %24 = extractvalue %dx.types.CBufRet.f32 %21, 2
  %25 = extractvalue %dx.types.CBufRet.f32 %21, 3
  %26 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 23)  ; CBufferLoadLegacy(handle,regIndex)
  %27 = extractvalue %dx.types.CBufRet.f32 %26, 0
  %28 = extractvalue %dx.types.CBufRet.f32 %26, 1
  %29 = extractvalue %dx.types.CBufRet.f32 %26, 2
  %30 = extractvalue %dx.types.CBufRet.f32 %26, 3
  %31 = fmul fast float %12, %7
  %32 = call float @dx.op.tertiary.f32(i32 46, float %8, float %13, float %31)  ; FMad(a,b,c)
  %33 = call float @dx.op.tertiary.f32(i32 46, float %9, float %14, float %32)  ; FMad(a,b,c)
  %34 = call float @dx.op.tertiary.f32(i32 46, float %10, float %15, float %33)  ; FMad(a,b,c)
  %35 = fmul fast float %17, %7
  %36 = call float @dx.op.tertiary.f32(i32 46, float %8, float %18, float %35)  ; FMad(a,b,c)
  %37 = call float @dx.op.tertiary.f32(i32 46, float %9, float %19, float %36)  ; FMad(a,b,c)
  %38 = call float @dx.op.tertiary.f32(i32 46, float %10, float %20, float %37)  ; FMad(a,b,c)
  %39 = fmul fast float %22, %7
  %40 = call float @dx.op.tertiary.f32(i32 46, float %8, float %23, float %39)  ; FMad(a,b,c)
  %41 = call float @dx.op.tertiary.f32(i32 46, float %9, float %24, float %40)  ; FMad(a,b,c)
  %42 = call float @dx.op.tertiary.f32(i32 46, float %10, float %25, float %41)  ; FMad(a,b,c)
  %43 = fmul fast float %27, %7
  %44 = call float @dx.op.tertiary.f32(i32 46, float %8, float %28, float %43)  ; FMad(a,b,c)
  %45 = call float @dx.op.tertiary.f32(i32 46, float %9, float %29, float %44)  ; FMad(a,b,c)
  %46 = call float @dx.op.tertiary.f32(i32 46, float %10, float %30, float %45)  ; FMad(a,b,c)
  %47 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 13)  ; CBufferLoadLegacy(handle,regIndex)
  %48 = extractvalue %dx.types.CBufRet.f32 %47, 0
  %49 = extractvalue %dx.types.CBufRet.f32 %47, 1
  %50 = extractvalue %dx.types.CBufRet.f32 %47, 2
  %51 = extractvalue %dx.types.CBufRet.f32 %47, 3
  %52 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 14)  ; CBufferLoadLegacy(handle,regIndex)
  %53 = extractvalue %dx.types.CBufRet.f32 %52, 0
  %54 = extractvalue %dx.types.CBufRet.f32 %52, 1
  %55 = extractvalue %dx.types.CBufRet.f32 %52, 2
  %56 = extractvalue %dx.types.CBufRet.f32 %52, 3
  %57 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 15)  ; CBufferLoadLegacy(handle,regIndex)
  %58 = extractvalue %dx.types.CBufRet.f32 %57, 0
  %59 = extractvalue %dx.types.CBufRet.f32 %57, 1
  %60 = extractvalue %dx.types.CBufRet.f32 %57, 2
  %61 = extractvalue %dx.types.CBufRet.f32 %57, 3
  %62 = fmul fast float %48, %7
  %63 = call float @dx.op.tertiary.f32(i32 46, float %8, float %49, float %62)  ; FMad(a,b,c)
  %64 = call float @dx.op.tertiary.f32(i32 46, float %9, float %50, float %63)  ; FMad(a,b,c)
  %65 = call float @dx.op.tertiary.f32(i32 46, float %10, float %51, float %64)  ; FMad(a,b,c)
  %66 = fmul fast float %53, %7
  %67 = call float @dx.op.tertiary.f32(i32 46, float %8, float %54, float %66)  ; FMad(a,b,c)
  %68 = call float @dx.op.tertiary.f32(i32 46, float %9, float %55, float %67)  ; FMad(a,b,c)
  %69 = call float @dx.op.tertiary.f32(i32 46, float %10, float %56, float %68)  ; FMad(a,b,c)
  %70 = fmul fast float %58, %7
  %71 = call float @dx.op.tertiary.f32(i32 46, float %8, float %59, float %70)  ; FMad(a,b,c)
  %72 = call float @dx.op.tertiary.f32(i32 46, float %9, float %60, float %71)  ; FMad(a,b,c)
  %73 = call float @dx.op.tertiary.f32(i32 46, float %10, float %61, float %72)  ; FMad(a,b,c)
  %74 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 17)  ; CBufferLoadLegacy(handle,regIndex)
  %75 = extractvalue %dx.types.CBufRet.f32 %74, 0
  %76 = extractvalue %dx.types.CBufRet.f32 %74, 1
  %77 = extractvalue %dx.types.CBufRet.f32 %74, 2
  %78 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 18)  ; CBufferLoadLegacy(handle,regIndex)
  %79 = extractvalue %dx.types.CBufRet.f32 %78, 0
  %80 = extractvalue %dx.types.CBufRet.f32 %78, 1
  %81 = extractvalue %dx.types.CBufRet.f32 %78, 2
  %82 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 19)  ; CBufferLoadLegacy(handle,regIndex)
  %83 = extractvalue %dx.types.CBufRet.f32 %82, 0
  %84 = extractvalue %dx.types.CBufRet.f32 %82, 1
  %85 = extractvalue %dx.types.CBufRet.f32 %82, 2
  %86 = fmul fast float %75, %4
  %87 = call float @dx.op.tertiary.f32(i32 46, float %5, float %76, float %86)  ; FMad(a,b,c)
  %88 = call float @dx.op.tertiary.f32(i32 46, float %6, float %77, float %87)  ; FMad(a,b,c)
  %89 = fmul fast float %79, %4
  %90 = call float @dx.op.tertiary.f32(i32 46, float %5, float %80, float %89)  ; FMad(a,b,c)
  %91 = call float @dx.op.tertiary.f32(i32 46, float %6, float %81, float %90)  ; FMad(a,b,c)
  %92 = fmul fast float %83, %4
  %93 = call float @dx.op.tertiary.f32(i32 46, float %5, float %84, float %92)  ; FMad(a,b,c)
  %94 = call float @dx.op.tertiary.f32(i32 46, float %6, float %85, float %93)  ; FMad(a,b,c)
  %95 = call float @dx.op.dot3.f32(i32 55, float %88, float %91, float %94, float %88, float %91, float %94)  ; Dot3(ax,ay,az,bx,by,bz)
  %96 = call float @dx.op.unary.f32(i32 25, float %95)  ; Rsqrt(value)
  %97 = fmul fast float %96, %88
  %98 = fmul fast float %96, %91
  %99 = fmul fast float %96, %94
  %100 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 12)  ; CBufferLoadLegacy(handle,regIndex)
  %101 = extractvalue %dx.types.CBufRet.f32 %100, 0
  %102 = extractvalue %dx.types.CBufRet.f32 %100, 1
  %103 = extractvalue %dx.types.CBufRet.f32 %100, 2
  %104 = extractvalue %dx.types.CBufRet.f32 %100, 3
  %105 = call float @dx.op.dot4.f32(i32 56, float %7, float %8, float %9, float %10, float %101, float %102, float %103, float %104)  ; Dot4(ax,ay,az,aw,bx,by,bz,bw)
  %106 = call float @dx.op.unary.f32(i32 7, float %105)  ; Saturate(value)
  %107 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 2)  ; CBufferLoadLegacy(handle,regIndex)
  %108 = extractvalue %dx.types.CBufRet.f32 %107, 3
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 0, float %2)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 1, float %3)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 1, i32 0, i8 0, float %65)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 1, i32 0, i8 1, float %69)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 1, i32 0, i8 2, float %73)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 1, i32 0, i8 3, float %106)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 2, i32 0, i8 0, float %97)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 2, i32 0, i8 1, float %98)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 2, i32 0, i8 2, float %99)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 3, i32 0, i8 0, float 1.000000e+00)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 3, i32 0, i8 1, float 1.000000e+00)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 3, i32 0, i8 2, float 1.000000e+00)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 3, i32 0, i8 3, float %108)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 4, i32 0, i8 0, float %34)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 4, i32 0, i8 1, float %38)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 4, i32 0, i8 2, float %42)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 4, i32 0, i8 3, float %46)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  ret void
}

; Function Attrs: nounwind readnone
declare float @dx.op.loadInput.f32(i32, i32, i32, i8, i32) #0

; Function Attrs: nounwind
declare void @dx.op.storeOutput.f32(i32, i32, i32, i8, float) #1

; Function Attrs: nounwind readnone
declare float @dx.op.dot3.f32(i32, float, float, float, float, float, float) #0

; Function Attrs: nounwind readnone
declare float @dx.op.unary.f32(i32, float) #0

; Function Attrs: nounwind readnone
declare float @dx.op.dot4.f32(i32, float, float, float, float, float, float, float, float) #0

; Function Attrs: nounwind readonly
declare %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32, %dx.types.Handle, i32) #2

; Function Attrs: nounwind readnone
declare float @dx.op.tertiary.f32(i32, float, float, float) #0

; Function Attrs: nounwind readonly
declare %dx.types.Handle @dx.op.createHandle(i32, i8, i32, i32, i1) #2

attributes #0 = { nounwind readnone }
attributes #1 = { nounwind }
attributes #2 = { nounwind readonly }

!xbox.compiler.options = !{!0}
!llvm.ident = !{!1}
!dx.version = !{!2}
!dx.valver = !{!3}
!dx.shaderModel = !{!4}
!dx.resources = !{!5}
!dx.viewIdState = !{!8}
!dx.entryPoints = !{!9}

!0 = !{!"__XBOX_PER_THREAD_SCRATCH_SIZE_LIMIT_IN_BYTES", !"0"}
!1 = !{!"dxcxbox 2410.2410.11116.10741"}
!2 = !{i32 1, i32 0}
!3 = !{i32 1, i32 8}
!4 = !{!"vs", i32 6, i32 0}
!5 = !{null, null, !6, null}
!6 = !{!7}
!7 = !{i32 0, %hostlayout.Parameters* undef, !"", i32 0, i32 0, i32 1, i32 384, null}
!8 = !{[12 x i32] [i32 10, i32 20, i32 983280, i32 983280, i32 983280, i32 983280, i32 1792, i32 1792, i32 1792, i32 0, i32 1, i32 2]}
!9 = !{void ()* @VSEnvMapPixelLighting, !"VSEnvMapPixelLighting", !10, !5, null}
!10 = !{!11, !19, null}
!11 = !{!12, !15, !17}
!12 = !{i32 0, !"SV_Position", i8 9, i8 0, !13, i8 0, i32 1, i8 4, i32 0, i8 0, !14}
!13 = !{i32 0}
!14 = !{i32 3, i32 15}
!15 = !{i32 1, !"NORMAL", i8 9, i8 0, !13, i8 0, i32 1, i8 3, i32 1, i8 0, !16}
!16 = !{i32 3, i32 7}
!17 = !{i32 2, !"TEXCOORD", i8 9, i8 0, !13, i8 0, i32 1, i8 2, i32 2, i8 0, !18}
!18 = !{i32 3, i32 3}
!19 = !{!20, !21, !23, !25, !26}
!20 = !{i32 0, !"TEXCOORD", i8 9, i8 0, !13, i8 2, i32 1, i8 2, i32 0, i8 0, !18}
!21 = !{i32 1, !"TEXCOORD", i8 9, i8 0, !22, i8 2, i32 1, i8 4, i32 1, i8 0, !14}
!22 = !{i32 1}
!23 = !{i32 2, !"TEXCOORD", i8 9, i8 0, !24, i8 2, i32 1, i8 3, i32 2, i8 0, !16}
!24 = !{i32 2}
!25 = !{i32 3, !"COLOR", i8 9, i8 0, !13, i8 2, i32 1, i8 4, i32 3, i8 0, !14}
!26 = !{i32 4, !"SV_Position", i8 9, i8 3, !13, i8 4, i32 1, i8 4, i32 4, i8 0, !14}

;
; DUMPING SHADER HARDWARE INSTRUCTIONS 
;
// Shader Type               : (VS)
// Shader Hw Stage           : (VS)

// Shader Instructions:
shader main
  asic(CI)
  type(VS)
  s_swappc_b64  s[0:1], s[0:1]
  s_or_b32      s17, s8, 0x00100000 // wrscc
  s_mov_b32     s16, s7
  s_mov_b32     s18, -1
  s_mov_b32     s19, 0x00024fac
  s_buffer_load_dword  s20, s[16:19], 0x0b
  s_buffer_load_dwordx4  s[0:3], s[16:19], 0x5c
  v_mov_b32     v0, 0
  v_mov_b32     v1, 1.0
  s_waitcnt     vmcnt(0) & lgkmcnt(0)
  v_mul_legacy_f32  v2, s0, v4
  v_mac_legacy_f32  v2, s1, v5
  v_mac_legacy_f32  v2, s2, v6
  v_mac_legacy_f32  v2, s3, v7
  s_buffer_load_dwordx8  s[0:7], s[16:19], 0x54
  s_waitcnt     lgkmcnt(0)
  v_mul_legacy_f32  v3, s0, v4
  v_mul_legacy_f32  v11, s4, v4
  v_mac_legacy_f32  v3, s1, v5
  v_mac_legacy_f32  v11, s5, v5
  v_mac_legacy_f32  v3, s2, v6
  v_mac_legacy_f32  v11, s6, v6
  v_mac_legacy_f32  v3, s3, v7
  v_mac_legacy_f32  v11, s7, v7
  s_buffer_load_dwordx16  s[0:15], s[16:19], 0x44
  s_waitcnt     lgkmcnt(0)
  v_mul_legacy_f32  v14, s12, v4
  v_mac_legacy_f32  v14, s13, v5
  v_mac_legacy_f32  v14, s14, v6
  v_mac_legacy_f32  v14, s15, v7
  exp           pos0, v14, v3, v11, v2 done
  s_waitcnt     expcnt(0)
  v_mul_legacy_f32  v2, s4, v8
  v_mac_legacy_f32  v2, s5, v9
  exp           param0, v12, v13, v0, v1
  s_waitcnt     expcnt(0)
  v_mul_legacy_f32  v0, s0, v8
  v_mac_legacy_f32  v0, s1, v9
  v_mul_legacy_f32  v8, s8, v8
  v_mac_legacy_f32  v2, s6, v10
  v_mac_legacy_f32  v8, s9, v9
  v_mac_legacy_f32  v0, s2, v10
  v_mul_legacy_f32  v3, v2, v2
  v_mac_legacy_f32  v8, s10, v10
  v_mac_legacy_f32  v3, v0, v0
  v_mac_legacy_f32  v3, v8, v8
  s_buffer_load_dwordx16  s[0:15], s[16:19], 0x30
  v_rsq_f32     v3, v3
  s_waitcnt     lgkmcnt(0)
  v_mul_legacy_f32  v9, s8, v4
  v_mul_legacy_f32  v10, s12, v4
  v_mul_legacy_f32  v0, v3, v0
  v_mul_legacy_f32  v2, v3, v2
  v_mul_legacy_f32  v3, v3, v8
  v_mul_legacy_f32  v8, s4, v4
  v_mac_legacy_f32  v8, s5, v5
  v_mac_legacy_f32  v9, s9, v5
  v_mac_legacy_f32  v10, s13, v5
  v_mul_legacy_f32  v5, s1, v5
  v_mad_legacy_f32  v4, v4, s0, v5
  v_mul_legacy_f32  v5, s3, v7
  v_mac_legacy_f32  v8, s6, v6
  v_mac_legacy_f32  v9, s10, v6
  v_mac_legacy_f32  v10, s14, v6
  v_mac_legacy_f32  v5, s2, v6
  v_mac_legacy_f32  v8, s7, v7
  v_mac_legacy_f32  v9, s11, v7
  v_mac_legacy_f32  v10, s15, v7
  v_add_f32     v4, v4, v5 clamp
  exp           param1, v8, v9, v10, v4
  exp           param2, v0, v2, v3, v1
  s_waitcnt     expcnt(0)
  v_mov_b32     v0, s20
  exp           param3, v1, v1, v1, v0
  s_endpgm      
end


NumVGPR=15,NumSGPR=23,LDS=0,Scratch=0,Occpancy=10

// Shader Type               : (VS)
// Shader Hw Stage           : (ES)

// Shader Instructions:
shader main
  asic(CI)
  type(VS)
  s_swappc_b64  s[0:1], s[0:1]
  s_mov_b32     s4, s7
  s_or_b32      s5, s8, 0x00100000 // wrscc
  s_mov_b32     s6, -1
  s_mov_b32     s7, 0x00024fac
  s_buffer_load_dwordx4  s[12:15], s[4:7], 0x5c
  s_buffer_load_dwordx8  s[36:43], s[4:7], 0x54
  s_mov_b32     s1, 0
  s_load_dwordx4  s[0:3], s[0:1], 0x08
  v_mov_b32     v0, 1.0
  s_waitcnt     vmcnt(0) & lgkmcnt(0)
  v_mul_legacy_f32  v1, s12, v4
  v_mac_legacy_f32  v1, s13, v5
  v_mac_legacy_f32  v1, s14, v6
  v_mac_legacy_f32  v1, s15, v7
  s_buffer_load_dwordx16  s[12:27], s[4:7], 0x44
  v_mul_legacy_f32  v2, s36, v4
  v_mac_legacy_f32  v2, s37, v5
  v_mac_legacy_f32  v2, s38, v6
  v_mac_legacy_f32  v2, s39, v7
  s_waitcnt     lgkmcnt(0)
  v_mul_legacy_f32  v3, s24, v4
  v_mac_legacy_f32  v3, s25, v5
  v_mac_legacy_f32  v3, s26, v6
  v_mac_legacy_f32  v3, s27, v7
  s_buffer_load_dword  s8, s[4:7], 0x0b
  s_buffer_load_dwordx16  s[24:39], s[4:7], 0x30
  v_mul_legacy_f32  v14, s40, v4
  v_mac_legacy_f32  v14, s41, v5
  v_mac_legacy_f32  v14, s42, v6
  v_mac_legacy_f32  v14, s43, v7
  s_waitcnt     lgkmcnt(0)
  v_mul_legacy_f32  v11, s28, v4
  v_mac_legacy_f32  v11, s29, v5
  v_mac_legacy_f32  v11, s30, v6
  v_mac_legacy_f32  v11, s31, v7
  buffer_store_dword  v3, v0, s[0:3], s9 offset:64 glc slc
  buffer_store_dword  v2, v0, s[0:3], s9 offset:68 glc slc
  buffer_store_dword  v14, v0, s[0:3], s9 offset:72 glc slc
  buffer_store_dword  v1, v0, s[0:3], s9 offset:76 glc slc
  buffer_store_dword  v12, v0, s[0:3], s9 glc slc
  buffer_store_dword  v13, v0, s[0:3], s9 offset:4 glc slc
  buffer_store_dword  v11, v0, s[0:3], s9 offset:16 glc slc
  v_mul_legacy_f32  v1, s32, v4
  v_mac_legacy_f32  v1, s33, v5
  v_mac_legacy_f32  v1, s34, v6
  v_mac_legacy_f32  v1, s35, v7
  buffer_store_dword  v1, v0, s[0:3], s9 offset:20 glc slc
  v_mul_legacy_f32  v1, s36, v4
  v_mac_legacy_f32  v1, s37, v5
  v_mac_legacy_f32  v1, s38, v6
  v_mac_legacy_f32  v1, s39, v7
  v_mul_legacy_f32  v2, s27, v7
  buffer_store_dword  v1, v0, s[0:3], s9 offset:24 glc slc
  v_mul_legacy_f32  v1, s25, v5
  v_mul_legacy_f32  v3, s16, v8
  v_mac_legacy_f32  v1, s24, v4
  v_mac_legacy_f32  v2, s26, v6
  v_add_f32     v1, v1, v2 clamp
  v_mul_legacy_f32  v2, s12, v8
  v_mac_legacy_f32  v3, s17, v9
  v_mac_legacy_f32  v2, s13, v9
  v_mul_legacy_f32  v5, s20, v8
  v_mac_legacy_f32  v3, s18, v10
  v_mac_legacy_f32  v5, s21, v9
  v_mac_legacy_f32  v2, s14, v10
  v_mul_legacy_f32  v4, v3, v3
  v_mac_legacy_f32  v4, v2, v2
  v_mac_legacy_f32  v5, s22, v10
  v_mac_legacy_f32  v4, v5, v5
  v_rsq_f32     v4, v4
  buffer_store_dword  v1, v0, s[0:3], s9 offset:28 glc slc
  v_mov_b32     v1, s8
  v_mul_legacy_f32  v2, v4, v2
  buffer_store_dword  v2, v0, s[0:3], s9 offset:32 glc slc
  v_mul_legacy_f32  v2, v4, v3
  buffer_store_dword  v2, v0, s[0:3], s9 offset:36 glc slc
  v_mul_legacy_f32  v2, v4, v5
  buffer_store_dword  v2, v0, s[0:3], s9 offset:40 glc slc
  buffer_store_dword  v0, v0, s[0:3], s9 offset:48 glc slc
  buffer_store_dword  v0, v0, s[0:3], s9 offset:52 glc slc
  buffer_store_dword  v0, v0, s[0:3], s9 offset:56 glc slc
  buffer_store_dword  v1, v0, s[0:3], s9 offset:60 glc slc
  s_endpgm      
end


NumVGPR=15,NumSGPR=46,LDS=0,Scratch=0,Occpancy=10

// Shader Type               : (VS)
// Shader Hw Stage           : (LS)

// Shader Instructions:
shader main
  asic(CI)
  type(VS)
  s_swappc_b64  s[0:1], s[0:1]
  s_or_b32      s41, s8, 0x00100000 // wrscc
  s_mov_b32     s40, s7
  s_mov_b32     s42, -1
  s_mov_b32     s43, 0x00024fac
  s_buffer_load_dword  s44, s[40:43], 0x0b
  s_buffer_load_dwordx16  s[0:15], s[40:43], 0x30
  s_buffer_load_dwordx16  s[16:31], s[40:43], 0x44
  s_buffer_load_dwordx8  s[32:39], s[40:43], 0x54
  s_buffer_load_dwordx4  s[40:43], s[40:43], 0x5c
  s_mov_b32     m0, -1
  s_waitcnt     vmcnt(0) & lgkmcnt(0)
  v_mul_legacy_f32  v0, s28, v4
  v_mac_legacy_f32  v0, s29, v5
  v_mac_legacy_f32  v0, s30, v6
  v_mad_legacy_f32  v2, v7, s31, v0
  v_mul_legacy_f32  v0, s32, v4
  v_mac_legacy_f32  v0, s33, v5
  v_mac_legacy_f32  v0, s34, v6
  v_mad_legacy_f32  v3, v7, s35, v0
  v_mul_legacy_f32  v0, s36, v4
  v_mac_legacy_f32  v0, s37, v5
  v_mac_legacy_f32  v0, s38, v6
  v_mad_legacy_f32  v14, v7, s39, v0
  v_mul_legacy_f32  v0, s40, v4
  v_mac_legacy_f32  v0, s41, v5
  v_mac_legacy_f32  v0, s42, v6
  v_mad_legacy_f32  v15, v7, s43, v0
  v_mul_legacy_f32  v0, s4, v4
  v_mac_legacy_f32  v0, s5, v5
  v_mac_legacy_f32  v0, s6, v6
  v_mad_legacy_f32  v16, v7, s7, v0
  v_mul_legacy_f32  v0, s8, v4
  v_mac_legacy_f32  v0, s9, v5
  v_mac_legacy_f32  v0, s10, v6
  v_mad_legacy_f32  v17, v7, s11, v0
  v_mul_legacy_f32  v0, s12, v4
  v_mac_legacy_f32  v0, s13, v5
  v_mul_legacy_f32  v11, s20, v8
  v_mac_legacy_f32  v0, s14, v6
  v_mad_legacy_f32  v18, v7, s15, v0
  v_mul_legacy_f32  v0, s16, v8
  v_mac_legacy_f32  v11, s21, v9
  v_mul_legacy_f32  v8, s24, v8
  v_mac_legacy_f32  v0, s17, v9
  v_mac_legacy_f32  v11, s22, v10
  v_mac_legacy_f32  v8, s25, v9
  v_mac_legacy_f32  v0, s18, v10
  v_mad_legacy_f32  v10, v10, s26, v8
  v_mul_legacy_f32  v8, v11, v11
  v_mac_legacy_f32  v8, v0, v0
  v_mac_legacy_f32  v8, v10, v10
  v_rsq_f32     v19, v8
  v_mul_legacy_f32  v5, s1, v5
  v_mul_legacy_f32  v7, s3, v7
  v_mad_legacy_f32  v4, v4, s0, v5
  v_mad_legacy_f32  v5, v6, s2, v7
  s_movk_i32    s0, 0x0050
  v_mul_legacy_f32  v8, v19, v0
  v_mul_legacy_f32  v9, v19, v11
  v_mul_legacy_f32  v0, v19, v10
  v_add_f32     v19, v4, v5 clamp
  v_mul_lo_i32  v4, v1, s0
  v_mov_b32     v1, 1.0
  ds_write2_b64  v4, v[2:3], v[14:15] offset0:8 offset1:9
  ds_write2_b64  v4, v[12:13], v[18:19] offset1:3
  ds_write_b32  v4, v0 offset:40
  ds_write2_b64  v4, v[16:17], v[8:9] offset0:2 offset1:4
  v_mov_b32     v0, 1.0
  v_mov_b32     v2, 1.0
  v_mov_b32     v3, s44
  ds_write2_b64  v4, v[0:1], v[2:3] offset0:6 offset1:7
  s_endpgm      
end


NumVGPR=20,NumSGPR=47,LDS=0,Scratch=0,Occpancy=10


#endif

const unsigned char EnvironmentMapEffect_VSEnvMapPixelLighting[] = {
  0x44, 0x58, 0x42, 0x43, 0x50, 0x31, 0xd7, 0x4d, 0x37, 0x28, 0x64, 0x59,
  0x42, 0xfa, 0xb8, 0xec, 0xdb, 0x3c, 0x37, 0xbe, 0x01, 0x00, 0x00, 0x00,
  0xc8, 0x19, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00,
  0x50, 0x00, 0x00, 0x00, 0xdc, 0x00, 0x00, 0x00, 0xa8, 0x01, 0x00, 0x00,
  0x24, 0x03, 0x00, 0x00, 0xf8, 0x03, 0x00, 0x00, 0x94, 0x04, 0x00, 0x00,
  0xb0, 0x04, 0x00, 0x00, 0x53, 0x46, 0x49, 0x30, 0x08, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x49, 0x53, 0x47, 0x31,
  0x84, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x68, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x0f, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x74, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x07, 0x07, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7b, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x03, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x53, 0x56, 0x5f, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x00,
  0x4e, 0x4f, 0x52, 0x4d, 0x41, 0x4c, 0x00, 0x54, 0x45, 0x58, 0x43, 0x4f,
  0x4f, 0x52, 0x44, 0x00, 0x4f, 0x53, 0x47, 0x31, 0xc4, 0x00, 0x00, 0x00,
  0x05, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xa8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x0c, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xa8, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xa8, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x07, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xb1, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb7, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x04, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x54, 0x45, 0x58, 0x43, 0x4f, 0x4f, 0x52, 0x44, 0x00, 0x43, 0x4f, 0x4c,
  0x4f, 0x52, 0x00, 0x53, 0x56, 0x5f, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69,
  0x6f, 0x6e, 0x00, 0x00, 0x50, 0x53, 0x56, 0x30, 0x74, 0x01, 0x00, 0x00,
  0x34, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xff, 0xff, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x03, 0x05, 0x00, 0x03,
  0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x3e, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x18, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x54, 0x00, 0x00, 0x00, 0x00, 0x53, 0x56, 0x5f,
  0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x00, 0x4e, 0x4f, 0x52,
  0x4d, 0x41, 0x4c, 0x00, 0x54, 0x45, 0x58, 0x43, 0x4f, 0x4f, 0x52, 0x44,
  0x00, 0x54, 0x45, 0x58, 0x43, 0x4f, 0x4f, 0x52, 0x44, 0x00, 0x54, 0x45,
  0x58, 0x43, 0x4f, 0x4f, 0x52, 0x44, 0x00, 0x54, 0x45, 0x58, 0x43, 0x4f,
  0x4f, 0x52, 0x44, 0x00, 0x43, 0x4f, 0x4c, 0x4f, 0x52, 0x00, 0x56, 0x53,
  0x45, 0x6e, 0x76, 0x4d, 0x61, 0x70, 0x50, 0x69, 0x78, 0x65, 0x6c, 0x4c,
  0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x10, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x44, 0x00, 0x03, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x43, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x02, 0x42, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x42, 0x00, 0x03, 0x02, 0x00, 0x00, 0x26, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x01, 0x01, 0x44, 0x00, 0x03, 0x02, 0x00, 0x00,
  0x2f, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x02, 0x43, 0x00,
  0x03, 0x02, 0x00, 0x00, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x03, 0x44, 0x00, 0x03, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x04, 0x44, 0x03, 0x03, 0x04, 0x00, 0x00,
  0xf0, 0x00, 0x0f, 0x00, 0xf0, 0x00, 0x0f, 0x00, 0xf0, 0x00, 0x0f, 0x00,
  0xf0, 0x00, 0x0f, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00,
  0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x52, 0x54, 0x53, 0x30, 0xcc, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x05, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xcc, 0x00, 0x00, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x05, 0x00, 0x00, 0x00, 0x54, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x05, 0x00, 0x00, 0x00, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x05, 0x00, 0x00, 0x00, 0x8c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x05, 0x00, 0x00, 0x00, 0xa8, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xc4, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x5c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff,
  0x01, 0x00, 0x00, 0x00, 0x78, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xff, 0xff, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x94, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00,
  0xb0, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x49, 0x4c, 0x44, 0x4e,
  0x94, 0x00, 0x00, 0x00, 0x00, 0x00, 0x8f, 0x00, 0x43, 0x3a, 0x5c, 0x55,
  0x73, 0x65, 0x72, 0x73, 0x5c, 0x6d, 0x61, 0x72, 0x63, 0x75, 0x5c, 0x44,
  0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x73, 0x5c, 0x44, 0x69, 0x72,
  0x65, 0x63, 0x74, 0x58, 0x54, 0x4b, 0x31, 0x32, 0x2d, 0x6d, 0x61, 0x69,
  0x6e, 0x5c, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x58, 0x54, 0x4b, 0x31,
  0x32, 0x2d, 0x6d, 0x61, 0x69, 0x6e, 0x5c, 0x53, 0x72, 0x63, 0x2f, 0x53,
  0x68, 0x61, 0x64, 0x65, 0x72, 0x73, 0x2f, 0x43, 0x6f, 0x6d, 0x70, 0x69,
  0x6c, 0x65, 0x64, 0x5c, 0x58, 0x62, 0x6f, 0x78, 0x47, 0x61, 0x6d, 0x69,
  0x6e, 0x67, 0x58, 0x62, 0x6f, 0x78, 0x4f, 0x6e, 0x65, 0x45, 0x6e, 0x76,
  0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x61, 0x70, 0x45,
  0x66, 0x66, 0x65, 0x63, 0x74, 0x5f, 0x56, 0x53, 0x45, 0x6e, 0x76, 0x4d,
  0x61, 0x70, 0x50, 0x69, 0x78, 0x65, 0x6c, 0x4c, 0x69, 0x67, 0x68, 0x74,
  0x69, 0x6e, 0x67, 0x2e, 0x70, 0x64, 0x62, 0x00, 0x48, 0x41, 0x53, 0x48,
  0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x83, 0x3a, 0x2b,
  0xe4, 0x44, 0x38, 0x70, 0xe4, 0x9d, 0x76, 0x21, 0x1e, 0xbc, 0xe2, 0x3a,
  0x44, 0x58, 0x49, 0x4c, 0x10, 0x15, 0x00, 0x00, 0x60, 0x00, 0x01, 0x00,
  0x44, 0x05, 0x00, 0x00, 0x44, 0x58, 0x49, 0x4c, 0x00, 0x01, 0x00, 0x00,
  0x94, 0x00, 0x00, 0x00, 0x88, 0x0b, 0x00, 0x00, 0x58, 0x44, 0x41, 0x54,
  0x08, 0x00, 0x00, 0x00, 0x24, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00,
  0x84, 0x00, 0x00, 0x00, 0xa0, 0x0b, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00,
  0x24, 0x0c, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x34, 0x0c, 0x00, 0x00, 0x51, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x88, 0x0e, 0x00, 0x00, 0x86, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x10, 0x11, 0x00, 0x00, 0x6a, 0x02, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x7c, 0x13, 0x00, 0x00, 0x20, 0x01, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00,
  0x9c, 0x14, 0x00, 0x00, 0x5f, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00,
  0xfc, 0x14, 0x00, 0x00, 0x11, 0x00, 0x00, 0x00, 0x60, 0x00, 0x01, 0x00,
  0xe8, 0x02, 0x00, 0x00, 0x44, 0x58, 0x49, 0x4c, 0x00, 0x01, 0x00, 0x00,
  0x10, 0x00, 0x00, 0x00, 0x88, 0x0b, 0x00, 0x00, 0x42, 0x43, 0xc0, 0xde,
  0x21, 0x0c, 0x00, 0x00, 0xdf, 0x02, 0x00, 0x00, 0x0b, 0x82, 0x20, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x13, 0x00, 0x00, 0x00, 0x07, 0x81, 0x23, 0x91,
  0x41, 0xc8, 0x04, 0x49, 0x06, 0x10, 0x32, 0x39, 0x92, 0x01, 0x84, 0x0c,
  0x25, 0x05, 0x08, 0x19, 0x1e, 0x04, 0x8b, 0x62, 0x80, 0x18, 0x45, 0x02,
  0x42, 0x92, 0x0b, 0x42, 0xc4, 0x10, 0x32, 0x14, 0x38, 0x08, 0x18, 0x4b,
  0x0a, 0x32, 0x62, 0x88, 0x48, 0x90, 0x14, 0x20, 0x43, 0x46, 0x88, 0xa5,
  0x00, 0x19, 0x32, 0x42, 0xe4, 0x48, 0x0e, 0x90, 0x11, 0x23, 0xc4, 0x50,
  0x41, 0x51, 0x81, 0x8c, 0xe1, 0x83, 0xe5, 0x8a, 0x04, 0x31, 0x46, 0x06,
  0x51, 0x18, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x1b, 0x8c, 0xe0, 0xff,
  0xff, 0xff, 0xff, 0x07, 0x40, 0x02, 0xa8, 0x0d, 0x84, 0xf0, 0xff, 0xff,
  0xff, 0xff, 0x03, 0x20, 0x6d, 0x30, 0x86, 0xff, 0xff, 0xff, 0xff, 0x1f,
  0x00, 0x09, 0xa8, 0x00, 0x49, 0x18, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x13, 0x82, 0x60, 0x42, 0x20, 0x4c, 0x08, 0x06, 0x00, 0x00, 0x00, 0x00,
  0x89, 0x20, 0x00, 0x00, 0x2f, 0x00, 0x00, 0x00, 0x32, 0x22, 0x88, 0x09,
  0x20, 0x64, 0x85, 0x04, 0x13, 0x23, 0xa4, 0x84, 0x04, 0x13, 0x23, 0xe3,
  0x84, 0xa1, 0x90, 0x14, 0x12, 0x4c, 0x8c, 0x8c, 0x0b, 0x84, 0xc4, 0x4c,
  0x10, 0x88, 0xc1, 0x08, 0x40, 0x09, 0x00, 0x0a, 0x66, 0x00, 0xe6, 0x08,
  0xc0, 0x60, 0x8e, 0x00, 0x29, 0xc6, 0x40, 0x10, 0x44, 0x41, 0x90, 0x51,
  0x0c, 0x80, 0x20, 0x88, 0x62, 0x20, 0xa4, 0x20, 0x03, 0x31, 0x0c, 0xc3,
  0x30, 0x0c, 0xa4, 0x94, 0x61, 0x20, 0x06, 0x62, 0x8a, 0x32, 0x10, 0xc3,
  0x30, 0x0c, 0xc3, 0x30, 0x0c, 0xe4, 0x1c, 0x35, 0x5c, 0xfe, 0x84, 0x3d,
  0x84, 0xe4, 0x73, 0x1b, 0x55, 0xac, 0xc4, 0xe4, 0x17, 0xb7, 0x8d, 0x88,
  0x61, 0x18, 0x06, 0x2a, 0xee, 0x19, 0x2e, 0x7f, 0xc2, 0x1e, 0x42, 0xf2,
  0x43, 0xa0, 0x19, 0x16, 0x02, 0x05, 0x51, 0x21, 0x20, 0x42, 0x22, 0x68,
  0x2a, 0xc5, 0x40, 0x0c, 0xc3, 0x40, 0xd5, 0x1c, 0x41, 0x50, 0x0c, 0x89,
  0x28, 0x08, 0xe2, 0x22, 0x6c, 0x20, 0x60, 0x18, 0x61, 0x18, 0x86, 0x11,
  0x88, 0x21, 0x07, 0xb6, 0x24, 0xe0, 0xae, 0x3a, 0x1c, 0x69, 0x5a, 0x00,
  0xcc, 0xa1, 0x26, 0x3f, 0x05, 0x22, 0x80, 0x21, 0x26, 0x22, 0x92, 0x50,
  0xb3, 0x0d, 0x03, 0xb7, 0x75, 0xdd, 0xb6, 0x71, 0x5e, 0xe7, 0xd1, 0x97,
  0x0c, 0x04, 0x00, 0x00, 0x13, 0x16, 0x72, 0xc0, 0x87, 0x74, 0x60, 0x87,
  0x36, 0x68, 0x87, 0x79, 0x68, 0x03, 0x7c, 0x10, 0x87, 0x38, 0xd8, 0xf0,
  0x0a, 0xe5, 0xd0, 0x06, 0xed, 0xa0, 0x07, 0xe5, 0xd0, 0x06, 0xf0, 0xa0,
  0x07, 0x73, 0x20, 0x07, 0x7a, 0x30, 0x07, 0x72, 0xd0, 0x06, 0xe9, 0x10,
  0x07, 0x7a, 0x30, 0x07, 0x72, 0xd0, 0x06, 0xe9, 0x80, 0x07, 0x7a, 0x30,
  0x07, 0x72, 0xd0, 0x06, 0xe9, 0x10, 0x07, 0x76, 0xa0, 0x07, 0x73, 0x20,
  0x07, 0x6d, 0x90, 0x0e, 0x73, 0x20, 0x07, 0x7a, 0x30, 0x07, 0x72, 0xd0,
  0x06, 0xe9, 0x60, 0x07, 0x74, 0xa0, 0x07, 0x76, 0x40, 0x07, 0x6d, 0x60,
  0x0e, 0x71, 0x60, 0x07, 0x7a, 0x30, 0x07, 0x72, 0xd0, 0x06, 0xe6, 0x30,
  0x07, 0x72, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x60, 0x0e, 0x76, 0x40,
  0x07, 0x7a, 0x60, 0x07, 0x74, 0xd0, 0x06, 0xee, 0x80, 0x07, 0x7a, 0x10,
  0x07, 0x76, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x7a, 0x60, 0x07, 0x74, 0x30,
  0xe4, 0x09, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x60, 0xc8, 0x63, 0x00, 0x01, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0xc0, 0x90, 0x07, 0x01, 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x80, 0x21, 0x8f, 0x02, 0x04, 0x40, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x43, 0x1e, 0x06, 0x08, 0x80, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x86, 0x3c, 0x0e, 0x10, 0x00, 0x01, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x79, 0x26, 0x20, 0x00, 0x06,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0xf2, 0x54, 0x40, 0x00,
  0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0xe4, 0xc1, 0x80,
  0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x0b, 0x04,
  0x12, 0x00, 0x00, 0x00, 0x32, 0x1e, 0x98, 0x14, 0x19, 0x11, 0x4c, 0x90,
  0x8c, 0x09, 0x26, 0x47, 0xc6, 0x04, 0x43, 0x22, 0x4a, 0x60, 0x04, 0xa0,
  0x20, 0x8a, 0xa1, 0x00, 0x0d, 0xca, 0xa0, 0x3c, 0xca, 0xa1, 0x08, 0x0a,
  0x81, 0x8a, 0x92, 0x18, 0x01, 0x28, 0x84, 0x32, 0x28, 0x02, 0x02, 0x67,
  0x00, 0x28, 0x1c, 0x8b, 0x51, 0x28, 0xf8, 0x04, 0x3d, 0xf8, 0x04, 0x3d,
  0xf8, 0x04, 0x3d, 0xf8, 0x04, 0x3d, 0x10, 0x0f, 0x40, 0x3c, 0x00, 0xf1,
  0x00, 0x08, 0x04, 0x00, 0x79, 0x18, 0x00, 0x00, 0x85, 0x00, 0x00, 0x00,
  0x1a, 0x03, 0x4c, 0x90, 0x46, 0x02, 0x13, 0xc4, 0x36, 0xf8, 0xfa, 0xc2,
  0x12, 0x7a, 0xc2, 0xfa, 0x82, 0x2a, 0x92, 0xfa, 0xa2, 0x42, 0x92, 0x2a,
  0x0a, 0x22, 0xfa, 0x9a, 0x1a, 0x92, 0x0a, 0xa2, 0x1a, 0x42, 0xfa, 0x9a,
  0x4a, 0xd2, 0x2a, 0xfa, 0x62, 0x4a, 0x6a, 0x4a, 0xa2, 0xfa, 0x4a, 0x72,
  0xfa, 0x12, 0xca, 0xa2, 0x2a, 0x9a, 0x62, 0x00, 0xb3, 0x41, 0x08, 0x04,
  0x76, 0x64, 0x78, 0x63, 0x78, 0x62, 0x6f, 0x78, 0x20, 0x32, 0x34, 0x31,
  0x30, 0x2e, 0x32, 0x34, 0x31, 0x30, 0x2e, 0x31, 0x31, 0x31, 0x31, 0x36,
  0x2e, 0x31, 0x30, 0x37, 0x34, 0x31, 0x1b, 0x02, 0x62, 0x82, 0x40, 0x24,
  0x13, 0x04, 0x42, 0xd9, 0x20, 0x18, 0xc7, 0x04, 0x81, 0x58, 0x36, 0x08,
  0x46, 0x42, 0xc1, 0x6e, 0x6e, 0x82, 0x40, 0x30, 0x1b, 0x86, 0x85, 0x39,
  0x26, 0x08, 0x60, 0x80, 0x11, 0x98, 0x20, 0x10, 0xcd, 0x06, 0xe4, 0x70,
  0x9e, 0xe3, 0x30, 0x20, 0x60, 0x43, 0x10, 0x6d, 0x20, 0x00, 0x40, 0x02,
  0x26, 0x08, 0x61, 0x90, 0x6d, 0x08, 0xa8, 0x09, 0x82, 0x00, 0xb0, 0xb2,
  0x9a, 0x2a, 0x72, 0xb3, 0x6b, 0x0a, 0x83, 0x83, 0x4a, 0xc3, 0x2b, 0x63,
  0x63, 0x4a, 0x3b, 0x43, 0xa3, 0x4b, 0x73, 0x3b, 0xe3, 0x32, 0x65, 0xf5,
  0x05, 0xf5, 0x36, 0x97, 0x46, 0x97, 0xf6, 0xe6, 0x36, 0x41, 0x28, 0xa6,
  0x09, 0x42, 0x41, 0x6d, 0x08, 0x8e, 0x09, 0x42, 0x51, 0x4d, 0x10, 0x08,
  0x67, 0x82, 0x40, 0x3c, 0x1b, 0x84, 0xce, 0xdb, 0xb0, 0x1c, 0x58, 0xa6,
  0x6d, 0x9a, 0xc1, 0x1d, 0xda, 0x47, 0xc3, 0xe9, 0x49, 0xaa, 0x29, 0x88,
  0x69, 0x82, 0x50, 0x58, 0x13, 0x04, 0x02, 0xda, 0x20, 0x74, 0x63, 0xb0,
  0x61, 0x31, 0xc2, 0x20, 0xd3, 0x36, 0xcd, 0x10, 0x03, 0x43, 0x23, 0x83,
  0x09, 0x02, 0x11, 0x11, 0xa1, 0x2a, 0xc2, 0x1a, 0x7a, 0x7a, 0x92, 0x22,
  0x9a, 0x20, 0x14, 0xd7, 0x06, 0xa1, 0xeb, 0x36, 0x2c, 0x66, 0x70, 0x06,
  0x99, 0xb6, 0x69, 0x06, 0x1a, 0x98, 0x81, 0x96, 0x06, 0x1b, 0x06, 0x30,
  0x28, 0x03, 0x35, 0xd8, 0xb0, 0x1c, 0x67, 0x90, 0x69, 0x1b, 0x1a, 0x18,
  0x68, 0x70, 0x68, 0x69, 0xb0, 0x21, 0x30, 0x36, 0x2c, 0xc6, 0x19, 0x64,
  0x5a, 0x1b, 0xa0, 0x81, 0xc1, 0x19, 0xda, 0xb7, 0x21, 0x30, 0x83, 0x0d,
  0x8b, 0x19, 0x9c, 0x41, 0xa6, 0xbd, 0x01, 0x1a, 0x18, 0x62, 0x60, 0x06,
  0x1a, 0x19, 0xb0, 0x18, 0x7a, 0x62, 0x7a, 0x92, 0xda, 0xb0, 0x74, 0x71,
  0x90, 0x69, 0x1b, 0x1a, 0x18, 0x5c, 0xa7, 0x7d, 0x13, 0x04, 0x42, 0xda,
  0xb0, 0xcc, 0x01, 0x96, 0x89, 0xc1, 0xc6, 0x19, 0xdc, 0x1c, 0x68, 0xdf,
  0x86, 0x82, 0x0d, 0xdc, 0x00, 0x0e, 0xe4, 0x80, 0x0e, 0x36, 0x0c, 0x6b,
  0x50, 0x07, 0xc0, 0x86, 0xc2, 0xba, 0xec, 0x60, 0x02, 0x5a, 0xe1, 0x89,
  0xbd, 0xe1, 0xb9, 0x8c, 0xbd, 0xb5, 0xc1, 0xa5, 0xb1, 0x95, 0xc9, 0xb9,
  0xbc, 0xc1, 0xd1, 0xa5, 0xbd, 0xb9, 0xcd, 0x4d, 0x09, 0x84, 0x2a, 0x6c,
  0x6c, 0x76, 0x6d, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x53, 0x02, 0xa2,
  0x0a, 0x19, 0x9e, 0x8b, 0x5d, 0x99, 0xdc, 0x5c, 0xda, 0x9b, 0xdb, 0x94,
  0xe0, 0x68, 0x42, 0x86, 0xe7, 0x62, 0x17, 0xc6, 0x66, 0x57, 0x26, 0x37,
  0x25, 0x48, 0xea, 0x90, 0xe1, 0xb9, 0xcc, 0xa1, 0x85, 0x91, 0x95, 0xc9,
  0x35, 0xbd, 0x91, 0x95, 0xb1, 0x4d, 0x09, 0x98, 0x32, 0x64, 0x78, 0x2e,
  0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x53, 0x02, 0xa9,
  0x0e, 0x19, 0x9e, 0x8b, 0x5d, 0x5a, 0xd9, 0x5d, 0x12, 0xd9, 0x14, 0x5d,
  0x18, 0x5d, 0xd9, 0x94, 0x80, 0xaa, 0x43, 0x86, 0xe7, 0x52, 0xe6, 0x46,
  0x27, 0x97, 0x07, 0xf5, 0x96, 0xe6, 0x46, 0x37, 0x37, 0x25, 0xb0, 0x03,
  0x00, 0x00, 0x00, 0x00, 0x79, 0x18, 0x00, 0x00, 0x4c, 0x00, 0x00, 0x00,
  0x33, 0x08, 0x80, 0x1c, 0xc4, 0xe1, 0x1c, 0x66, 0x14, 0x01, 0x3d, 0x88,
  0x43, 0x38, 0x84, 0xc3, 0x8c, 0x42, 0x80, 0x07, 0x79, 0x78, 0x07, 0x73,
  0x98, 0x71, 0x0c, 0xe6, 0x00, 0x0f, 0xed, 0x10, 0x0e, 0xf4, 0x80, 0x0e,
  0x33, 0x0c, 0x42, 0x1e, 0xc2, 0xc1, 0x1d, 0xce, 0xa1, 0x1c, 0x66, 0x30,
  0x05, 0x3d, 0x88, 0x43, 0x38, 0x84, 0x83, 0x1b, 0xcc, 0x03, 0x3d, 0xc8,
  0x43, 0x3d, 0x8c, 0x03, 0x3d, 0xcc, 0x78, 0x8c, 0x74, 0x70, 0x07, 0x7b,
  0x08, 0x07, 0x79, 0x48, 0x87, 0x70, 0x70, 0x07, 0x7a, 0x70, 0x03, 0x76,
  0x78, 0x87, 0x70, 0x20, 0x87, 0x19, 0xcc, 0x11, 0x0e, 0xec, 0x90, 0x0e,
  0xe1, 0x30, 0x0f, 0x6e, 0x30, 0x0f, 0xe3, 0xf0, 0x0e, 0xf0, 0x50, 0x0e,
  0x33, 0x10, 0xc4, 0x1d, 0xde, 0x21, 0x1c, 0xd8, 0x21, 0x1d, 0xc2, 0x61,
  0x1e, 0x66, 0x30, 0x89, 0x3b, 0xbc, 0x83, 0x3b, 0xd0, 0x43, 0x39, 0xb4,
  0x03, 0x3c, 0xbc, 0x83, 0x3c, 0x84, 0x03, 0x3b, 0xcc, 0xf0, 0x14, 0x76,
  0x60, 0x07, 0x7b, 0x68, 0x07, 0x37, 0x68, 0x87, 0x72, 0x68, 0x07, 0x37,
  0x80, 0x87, 0x70, 0x90, 0x87, 0x70, 0x60, 0x07, 0x76, 0x28, 0x07, 0x76,
  0xf8, 0x05, 0x76, 0x78, 0x87, 0x77, 0x80, 0x87, 0x5f, 0x08, 0x87, 0x71,
  0x18, 0x87, 0x72, 0x98, 0x87, 0x79, 0x98, 0x81, 0x2c, 0xee, 0xf0, 0x0e,
  0xee, 0xe0, 0x0e, 0xf5, 0xc0, 0x0e, 0xec, 0x30, 0x03, 0x62, 0xc8, 0xa1,
  0x1c, 0xe4, 0xa1, 0x1c, 0xcc, 0xa1, 0x1c, 0xe4, 0xa1, 0x1c, 0xdc, 0x61,
  0x1c, 0xca, 0x21, 0x1c, 0xc4, 0x81, 0x1d, 0xca, 0x61, 0x06, 0xd6, 0x90,
  0x43, 0x39, 0xc8, 0x43, 0x39, 0x98, 0x43, 0x39, 0xc8, 0x43, 0x39, 0xb8,
  0xc3, 0x38, 0x94, 0x43, 0x38, 0x88, 0x03, 0x3b, 0x94, 0xc3, 0x2f, 0xbc,
  0x83, 0x3c, 0xfc, 0x82, 0x3b, 0xd4, 0x03, 0x3b, 0xb0, 0xc3, 0x0c, 0xc4,
  0x21, 0x07, 0x7c, 0x70, 0x03, 0x7a, 0x28, 0x87, 0x76, 0x80, 0x87, 0x19,
  0xd1, 0x43, 0x0e, 0xf8, 0xe0, 0x06, 0xe4, 0x20, 0x0e, 0xe7, 0xe0, 0x06,
  0xf6, 0x10, 0x0e, 0xf2, 0xc0, 0x0e, 0xe1, 0x90, 0x0f, 0xef, 0x50, 0x0f,
  0xf4, 0x00, 0x00, 0x00, 0x71, 0x20, 0x00, 0x00, 0x25, 0x00, 0x00, 0x00,
  0x06, 0x50, 0xbd, 0xac, 0xd7, 0x54, 0x26, 0xf0, 0xa4, 0xc8, 0x45, 0x2c,
  0x25, 0x62, 0x1c, 0x13, 0xd2, 0x18, 0x66, 0xb0, 0x0d, 0x97, 0xef, 0x3c,
  0xbe, 0x10, 0x50, 0x45, 0x41, 0x44, 0xa5, 0x03, 0x0c, 0x25, 0x61, 0x00,
  0x02, 0xe6, 0x17, 0xb7, 0x6d, 0x08, 0xd2, 0x70, 0xf9, 0xce, 0xe3, 0x0b,
  0x11, 0x01, 0x4c, 0x44, 0x08, 0x34, 0xc3, 0x42, 0xd8, 0x80, 0x33, 0x5c,
  0xbe, 0xf3, 0xf8, 0x83, 0x33, 0xdd, 0x7e, 0x71, 0xdb, 0x56, 0xe0, 0x0c,
  0x97, 0xef, 0x3c, 0xfe, 0xe0, 0x4c, 0xb8, 0x5f, 0xdc, 0xb6, 0x05, 0x4c,
  0xc3, 0xe5, 0x3b, 0x8f, 0xbf, 0x38, 0xc0, 0x20, 0x36, 0x0f, 0x35, 0xf9,
  0xc5, 0x6d, 0x9b, 0x40, 0x35, 0x5c, 0xbe, 0xf3, 0xf8, 0xd2, 0xe4, 0x44,
  0x04, 0x4a, 0x4d, 0x0f, 0x35, 0xf9, 0xc5, 0x6d, 0xdb, 0x81, 0x34, 0x5c,
  0xbe, 0xf3, 0xf8, 0x13, 0x11, 0x4d, 0x08, 0x10, 0x61, 0x7e, 0x71, 0xdb,
  0x46, 0xf0, 0x0c, 0x97, 0xef, 0x3c, 0x3e, 0xd5, 0x00, 0x11, 0xe6, 0x17,
  0xb7, 0x0d, 0x00, 0x00, 0x61, 0x20, 0x00, 0x00, 0x36, 0x01, 0x00, 0x00,
  0x13, 0x04, 0x41, 0x2c, 0x10, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x00,
  0x74, 0x8d, 0x00, 0x10, 0x51, 0x5c, 0xa5, 0x50, 0x76, 0x33, 0x00, 0x25,
  0x57, 0x28, 0xa5, 0x52, 0x2c, 0xe5, 0x52, 0x1a, 0xc5, 0x51, 0x22, 0x45,
  0x52, 0x26, 0xe5, 0x56, 0x32, 0x85, 0x51, 0x70, 0x54, 0x94, 0x00, 0x0d,
  0x63, 0x04, 0x20, 0x08, 0x82, 0xf8, 0x07, 0x00, 0x23, 0x06, 0x09, 0x00,
  0x82, 0x60, 0x80, 0x9d, 0x01, 0x84, 0x95, 0x41, 0x19, 0x54, 0x23, 0x06,
  0x09, 0x00, 0x82, 0x60, 0x60, 0xbc, 0x81, 0xf7, 0x99, 0x01, 0x27, 0x8d,
  0x18, 0x24, 0x00, 0x08, 0x82, 0x81, 0x01, 0x07, 0x1f, 0x18, 0x9c, 0x01,
  0x31, 0x8d, 0x18, 0x24, 0x00, 0x08, 0x82, 0x81, 0x11, 0x07, 0x60, 0x90,
  0x06, 0x68, 0xe0, 0x51, 0x23, 0x06, 0x09, 0x00, 0x82, 0x60, 0x60, 0xc8,
  0x41, 0x18, 0xa8, 0x41, 0x1a, 0x18, 0xd5, 0x88, 0x41, 0x02, 0x80, 0x20,
  0x18, 0x18, 0x73, 0x20, 0x06, 0x6b, 0xa0, 0x06, 0x9d, 0x35, 0x62, 0x90,
  0x00, 0x20, 0x08, 0x06, 0x06, 0x1d, 0x8c, 0xc1, 0x1a, 0xac, 0x41, 0x18,
  0x5c, 0x23, 0x06, 0x09, 0x00, 0x82, 0x60, 0x60, 0xd4, 0x01, 0x19, 0xb0,
  0x01, 0x1b, 0x24, 0xd8, 0x88, 0x41, 0x02, 0x80, 0x20, 0x18, 0x18, 0x76,
  0x50, 0x06, 0x6d, 0xd0, 0x06, 0x60, 0x90, 0x8d, 0x18, 0x24, 0x00, 0x08,
  0x82, 0x81, 0x71, 0x07, 0x66, 0xe0, 0x06, 0x6e, 0x20, 0x06, 0xda, 0x88,
  0xc1, 0x01, 0x80, 0x20, 0x18, 0x4c, 0x73, 0xc0, 0x29, 0xd9, 0x68, 0x42,
  0x00, 0x8c, 0x26, 0x08, 0xc1, 0x68, 0xc2, 0x20, 0x8c, 0x26, 0x10, 0xc3,
  0x88, 0xc1, 0x01, 0x80, 0x20, 0x18, 0x4c, 0x78, 0x10, 0x06, 0x4f, 0x37,
  0x9a, 0x10, 0x00, 0xa3, 0x09, 0x42, 0x30, 0x9a, 0x30, 0x08, 0xa3, 0x09,
  0xc4, 0x30, 0x62, 0x70, 0x00, 0x20, 0x08, 0x06, 0x53, 0x1f, 0x98, 0x01,
  0x15, 0x06, 0xa3, 0x09, 0x01, 0x30, 0x9a, 0x20, 0x04, 0xa3, 0x09, 0x83,
  0x30, 0x9a, 0x40, 0x0c, 0x23, 0x06, 0x07, 0x00, 0x82, 0x60, 0x30, 0x89,
  0xc2, 0x1a, 0x64, 0x65, 0x30, 0x9a, 0x10, 0x00, 0xa3, 0x09, 0x42, 0x30,
  0x9a, 0x30, 0x08, 0xa3, 0x09, 0xc4, 0x60, 0x13, 0x26, 0x9f, 0x11, 0x03,
  0x04, 0x00, 0x41, 0x30, 0xa8, 0x4e, 0x61, 0x0e, 0xb0, 0x29, 0x18, 0x31,
  0x40, 0x00, 0x10, 0x04, 0x83, 0x0a, 0x15, 0xe8, 0x00, 0x9b, 0x82, 0x11,
  0x03, 0x04, 0x00, 0x41, 0x30, 0xa8, 0x52, 0xa1, 0x0e, 0xb0, 0x29, 0x30,
  0x89, 0x93, 0xcf, 0x88, 0x01, 0x02, 0x80, 0x20, 0x18, 0x54, 0xab, 0x70,
  0x07, 0x9c, 0x14, 0x8c, 0x18, 0x20, 0x00, 0x08, 0x82, 0x41, 0xc5, 0x0a,
  0x78, 0xc0, 0x49, 0xc1, 0x88, 0x01, 0x02, 0x80, 0x20, 0x18, 0x54, 0xad,
  0x90, 0x07, 0x9c, 0x14, 0x58, 0x04, 0x06, 0xf2, 0x19, 0x31, 0x40, 0x00,
  0x10, 0x04, 0x83, 0xea, 0x15, 0xf6, 0x00, 0x0c, 0xa2, 0x60, 0xc4, 0x00,
  0x01, 0x40, 0x10, 0x0c, 0x2a, 0x58, 0xe0, 0x03, 0x30, 0x88, 0x82, 0x11,
  0x03, 0x04, 0x00, 0x41, 0x30, 0xa8, 0x62, 0xa1, 0x0f, 0xc0, 0x20, 0x0a,
  0x0c, 0x22, 0x03, 0xf9, 0x8c, 0x18, 0x20, 0x00, 0x08, 0x82, 0x41, 0x35,
  0x0b, 0x7f, 0x40, 0x06, 0x50, 0x30, 0x62, 0x80, 0x00, 0x20, 0x08, 0x06,
  0x15, 0x2d, 0x80, 0x02, 0x19, 0x40, 0xc1, 0x88, 0x01, 0x02, 0x80, 0x20,
  0x18, 0x54, 0xb5, 0x10, 0x0a, 0x64, 0x00, 0x05, 0x23, 0x06, 0x07, 0x00,
  0x82, 0x60, 0x30, 0xdd, 0x02, 0x28, 0xb8, 0x41, 0x1e, 0x8c, 0x26, 0x04,
  0xc0, 0x68, 0x82, 0x10, 0x8c, 0x26, 0x0c, 0xc2, 0x68, 0x02, 0x31, 0x8c,
  0x18, 0x1c, 0x00, 0x08, 0x82, 0xc1, 0xc4, 0x0b, 0xa5, 0x30, 0x07, 0x7d,
  0x30, 0x9a, 0x10, 0x00, 0xa3, 0x09, 0x42, 0x30, 0x9a, 0x30, 0x08, 0xa3,
  0x09, 0xc4, 0x30, 0x62, 0x70, 0x00, 0x20, 0x08, 0x06, 0x53, 0x38, 0xa8,
  0x02, 0x1e, 0xe0, 0xc2, 0x68, 0x42, 0x00, 0x8c, 0x26, 0x08, 0xc1, 0x68,
  0xc2, 0x20, 0x8c, 0x26, 0x10, 0x83, 0x39, 0x77, 0x20, 0x9f, 0x11, 0x03,
  0x04, 0x00, 0x41, 0x30, 0xa8, 0xcc, 0x41, 0x16, 0xee, 0xc0, 0x09, 0x46,
  0x0c, 0x10, 0x00, 0x04, 0xc1, 0xa0, 0x3a, 0x87, 0x59, 0xb8, 0x03, 0x27,
  0x18, 0x31, 0x40, 0x00, 0x10, 0x04, 0x83, 0x0a, 0x1d, 0x68, 0xe1, 0x0e,
  0x9c, 0xc0, 0x9a, 0x3d, 0x90, 0xcf, 0x88, 0x01, 0x02, 0x80, 0x20, 0x18,
  0x54, 0xea, 0x60, 0x0b, 0x7b, 0xd0, 0x04, 0x23, 0x06, 0x08, 0x00, 0x82,
  0x60, 0x50, 0xad, 0xc3, 0x2d, 0xec, 0x41, 0x13, 0x8c, 0x18, 0x20, 0x00,
  0x08, 0x82, 0x41, 0xc5, 0x0e, 0xb8, 0xb0, 0x07, 0x4d, 0x60, 0xcc, 0x1f,
  0xc8, 0x67, 0xc4, 0x00, 0x01, 0x40, 0x10, 0x0c, 0x2a, 0x77, 0xd0, 0x85,
  0x3f, 0x60, 0x82, 0x11, 0x03, 0x04, 0x00, 0x41, 0x30, 0xa8, 0xde, 0x61,
  0x17, 0xfe, 0x80, 0x09, 0x46, 0x0c, 0x10, 0x00, 0x04, 0xc1, 0xa0, 0x82,
  0x07, 0x5e, 0xf8, 0x03, 0x26, 0x18, 0x31, 0x38, 0x00, 0x10, 0x04, 0x83,
  0x49, 0x1e, 0x76, 0x21, 0x15, 0x64, 0x61, 0x34, 0x21, 0x00, 0x46, 0x13,
  0x84, 0x60, 0x34, 0x61, 0x10, 0x46, 0x0c, 0x0e, 0x00, 0x04, 0xc1, 0x60,
  0xb2, 0x87, 0x5f, 0x68, 0x85, 0x5a, 0x18, 0x4d, 0x08, 0x80, 0xd1, 0x04,
  0x21, 0x18, 0x4d, 0x18, 0x84, 0x11, 0x83, 0x03, 0x00, 0x41, 0x30, 0x98,
  0xf4, 0x61, 0x1c, 0x62, 0x01, 0x17, 0x46, 0x13, 0x02, 0x60, 0x34, 0x41,
  0x08, 0x46, 0x13, 0x06, 0xc1, 0x16, 0x59, 0x90, 0xcf, 0x88, 0x01, 0x02,
  0x80, 0x20, 0x18, 0x54, 0xfe, 0xa0, 0x0e, 0xb2, 0xb0, 0x04, 0x23, 0x06,
  0x08, 0x00, 0x82, 0x60, 0x50, 0xfd, 0xc3, 0x3a, 0xc8, 0xc2, 0x12, 0x98,
  0x52, 0x0b, 0xf2, 0x19, 0x31, 0x40, 0x00, 0x10, 0x04, 0x83, 0x2a, 0x24,
  0xda, 0xa1, 0x16, 0x94, 0x60, 0xc4, 0x00, 0x01, 0x40, 0x10, 0x0c, 0x2a,
  0x91, 0x70, 0x87, 0x5a, 0x50, 0x02, 0x4b, 0x70, 0x41, 0x3e, 0x23, 0x06,
  0x08, 0x00, 0x82, 0x60, 0x50, 0x91, 0x04, 0x3c, 0xe0, 0x42, 0x12, 0x8c,
  0x18, 0x20, 0x00, 0x08, 0x82, 0x41, 0x55, 0x12, 0xf1, 0x80, 0x0b, 0x49,
  0x30, 0x62, 0xb0, 0x00, 0x20, 0x08, 0x06, 0x8a, 0x4a, 0x90, 0xc3, 0x41,
  0x04, 0x07, 0x11, 0x8c, 0x18, 0x18, 0x00, 0x08, 0x82, 0x01, 0xa3, 0x12,
  0xe4, 0x10, 0x58, 0x90, 0xc8, 0xc7, 0x84, 0x43, 0x3e, 0x36, 0x14, 0xf2,
  0x19, 0x31, 0x38, 0x00, 0x10, 0x04, 0x83, 0x89, 0x25, 0xea, 0x61, 0x1c,
  0xce, 0x61, 0x34, 0x21, 0x00, 0x46, 0x13, 0x84, 0x60, 0x34, 0x61, 0x10,
  0x46, 0x13, 0x88, 0x61, 0xc4, 0xa0, 0x01, 0x40, 0x10, 0x0c, 0x1c, 0x99,
  0x58, 0x07, 0x71, 0x08, 0x07, 0x70, 0xf8, 0x05, 0x62, 0x10, 0x82, 0x11,
  0x03, 0x03, 0x00, 0x41, 0x30, 0x60, 0x68, 0x02, 0x25, 0x82, 0x11, 0x83,
  0x03, 0x00, 0x41, 0x30, 0x98, 0x66, 0x82, 0x1f, 0xd4, 0x01, 0x25, 0x46,
  0x13, 0x82, 0x61, 0xc4, 0x20, 0x01, 0x40, 0x10, 0x0c, 0x90, 0x9c, 0xf8,
  0x87, 0x98, 0x88, 0x89, 0x93, 0x58, 0x87, 0x11, 0x83, 0x04, 0x00, 0x41,
  0x30, 0x40, 0x72, 0xe2, 0x1f, 0x62, 0x22, 0x26, 0xdc, 0x41, 0x1d, 0x46,
  0x0c, 0x12, 0x00, 0x04, 0xc1, 0x00, 0xc9, 0x89, 0x7f, 0x90, 0x89, 0x98,
  0x38, 0x09, 0x36, 0x18, 0x31, 0x48, 0x00, 0x10, 0x04, 0x03, 0x24, 0x27,
  0xfe, 0x41, 0x26, 0x62, 0xc2, 0x1d, 0xd0, 0x60, 0xc4, 0x20, 0x01, 0x40,
  0x10, 0x0c, 0x90, 0x9c, 0xf8, 0x07, 0x99, 0x88, 0x09, 0x92, 0x20, 0x83,
  0x11, 0x83, 0x04, 0x00, 0x41, 0x30, 0x40, 0x72, 0xe2, 0x1f, 0x64, 0x22,
  0x26, 0x4a, 0x62, 0x18, 0x31, 0x48, 0x00, 0x10, 0x04, 0x03, 0x24, 0x27,
  0xfe, 0x41, 0x25, 0x62, 0xe2, 0x24, 0x98, 0x11, 0x83, 0x04, 0x00, 0x41,
  0x30, 0x40, 0x72, 0xe2, 0x1f, 0x54, 0x22, 0x26, 0xdc, 0x61, 0x19, 0x31,
  0x48, 0x00, 0x10, 0x04, 0x03, 0x24, 0x27, 0xfe, 0x41, 0x25, 0x62, 0x82,
  0x24, 0x94, 0x11, 0x83, 0x04, 0x00, 0x41, 0x30, 0x40, 0x72, 0xe2, 0x1f,
  0x5a, 0x22, 0x26, 0x4e, 0xa2, 0x1d, 0x46, 0x0c, 0x12, 0x00, 0x04, 0xc1,
  0x00, 0xc9, 0x89, 0x7f, 0x68, 0x89, 0x98, 0x70, 0x87, 0x76, 0x18, 0x31,
  0x48, 0x00, 0x10, 0x04, 0x03, 0x24, 0x27, 0xfe, 0xa1, 0x25, 0x62, 0x82,
  0x24, 0xda, 0x61, 0xc4, 0x20, 0x01, 0x40, 0x10, 0x0c, 0x90, 0x9c, 0xf8,
  0x87, 0x96, 0x88, 0x89, 0x92, 0x08, 0x46, 0x0c, 0x12, 0x00, 0x04, 0xc1,
  0x00, 0xc9, 0x89, 0x7f, 0x48, 0x89, 0x98, 0x38, 0x89, 0x55, 0x18, 0x31,
  0x48, 0x00, 0x10, 0x04, 0x03, 0x24, 0x27, 0xfe, 0x21, 0x25, 0x62, 0xc2,
  0x1d, 0x4e, 0x61, 0xc4, 0x20, 0x01, 0x40, 0x10, 0x0c, 0x90, 0x9c, 0xf8,
  0x87, 0x94, 0x88, 0x09, 0x92, 0x18, 0x85, 0x11, 0x83, 0x04, 0x00, 0x41,
  0x30, 0x40, 0x72, 0xe2, 0x1f, 0x52, 0x22, 0x26, 0x4a, 0xe2, 0x0f, 0x10,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x83, 0x3a, 0x2b,
  0xe4, 0x44, 0x38, 0x70, 0xe4, 0x9d, 0x76, 0x21, 0x1e, 0xbc, 0xe2, 0x3a,
  0x17, 0x00, 0x01, 0x00, 0x20, 0xc4, 0x16, 0x00, 0x78, 0x01, 0xed, 0x98,
  0x3d, 0x8b, 0x53, 0x41, 0x14, 0x86, 0xcf, 0x7c, 0xdc, 0xc9, 0x64, 0x72,
  0x76, 0x32, 0xf7, 0x72, 0x8d, 0x22, 0x41, 0x5d, 0xb0, 0xb3, 0x30, 0xa0,
  0x85, 0x2c, 0xb8, 0x6b, 0x91, 0xda, 0x58, 0x58, 0x2a, 0xf8, 0x13, 0x52,
  0x89, 0x55, 0x8c, 0x28, 0x68, 0xb1, 0xc2, 0xa2, 0x60, 0x27, 0x58, 0x5a,
  0x58, 0xf8, 0x03, 0x24, 0x89, 0x59, 0x3b, 0x0b, 0x61, 0x7f, 0x81, 0xc8,
  0x16, 0xd6, 0x16, 0xb2, 0x8d, 0xc4, 0x73, 0x26, 0x37, 0xfb, 0x11, 0x52,
  0x2b, 0x2c, 0xf3, 0x5c, 0xde, 0x33, 0x99, 0x73, 0x67, 0x32, 0x67, 0x66,
  0x6e, 0xf5, 0x7e, 0x69, 0x41, 0x24, 0xd4, 0x7a, 0xdf, 0xb9, 0x1d, 0xdf,
  0x7e, 0xf6, 0xfb, 0x5d, 0x03, 0x20, 0xe3, 0x0e, 0xa1, 0x39, 0x10, 0xfd,
  0x92, 0x23, 0xc0, 0x83, 0x6a, 0xbc, 0xe3, 0x50, 0xd1, 0x24, 0x9d, 0x25,
  0x31, 0xb7, 0x38, 0x54, 0x08, 0x0e, 0x30, 0xdc, 0x24, 0x6d, 0xf1, 0xaf,
  0x65, 0x90, 0x74, 0x9d, 0x74, 0x8d, 0xc4, 0xcc, 0xc7, 0xcf, 0x59, 0xac,
  0xbf, 0xcc, 0xaa, 0x7c, 0x8d, 0xc4, 0x73, 0xb9, 0x56, 0x45, 0x3a, 0xce,
  0xfb, 0xfc, 0xcd, 0x4d, 0x6a, 0xba, 0x24, 0xd8, 0x7c, 0xf9, 0x91, 0x6a,
  0x89, 0x2d, 0xe7, 0xa0, 0xfe, 0xf5, 0x4f, 0xec, 0x9f, 0x26, 0x16, 0xf7,
  0xc4, 0xdc, 0x39, 0x7e, 0xa0, 0x15, 0x92, 0x03, 0x31, 0x39, 0xc3, 0x11,
  0xc0, 0x70, 0x20, 0x7e, 0x56, 0xfd, 0xc5, 0x5d, 0x4e, 0x48, 0x2b, 0xa6,
  0x47, 0x66, 0x04, 0xb7, 0xab, 0xe0, 0xf3, 0x37, 0xd0, 0xeb, 0x18, 0xf1,
  0xfc, 0x92, 0x91, 0xbb, 0x81, 0xba, 0xff, 0x1c, 0xfe, 0x0e, 0x16, 0xfb,
  0x32, 0x62, 0xbe, 0x0b, 0x23, 0xe7, 0x3b, 0x37, 0x6a, 0xf9, 0x0b, 0x39,
  0x9d, 0xf0, 0x19, 0x14, 0x24, 0x86, 0xcf, 0x82, 0xfb, 0x0b, 0xfe, 0xcb,
  0xa5, 0x24, 0x12, 0x89, 0x44, 0x22, 0x91, 0x48, 0x24, 0x12, 0x89, 0x44,
  0x22, 0x91, 0x48, 0x2c, 0xb3, 0x3e, 0x1c, 0xd9, 0x59, 0xfe, 0x82, 0xdd,
  0x8a, 0x9a, 0xda, 0x19, 0x7d, 0x56, 0xaf, 0x46, 0x33, 0xf5, 0x7a, 0xf4,
  0xa1, 0x27, 0xa1, 0x91, 0xbb, 0xe9, 0xbd, 0x7c, 0x38, 0x1d, 0x4a, 0x18,
  0xfc, 0x92, 0x72, 0xd0, 0x87, 0xed, 0x31, 0x58, 0xed, 0x85, 0xd3, 0x28,
  0x51, 0xa3, 0xf2, 0x1a, 0xef, 0xe6, 0x93, 0xe9, 0xe3, 0x98, 0x37, 0x5e,
  0xdb, 0x16, 0xbd, 0x33, 0x98, 0xb9, 0x16, 0xbd, 0x37, 0xf4, 0xb4, 0x68,
  0x8c, 0xc1, 0x9a, 0x6f, 0x61, 0x37, 0x87, 0x5d, 0x1e, 0x87, 0xb6, 0xed,
  0xd7, 0x5c, 0x1b, 0x3d, 0xb6, 0xb1, 0xe9, 0xdb, 0xf8, 0xcd, 0xc2, 0x81,
  0x57, 0x0d, 0xd9, 0x6c, 0x6e, 0x8f, 0x75, 0xd0, 0x3e, 0x2b, 0x34, 0x36,
  0x25, 0x1c, 0xe0, 0x1a, 0x08, 0xce, 0x51, 0x59, 0x5e, 0x14, 0x80, 0x36,
  0x04, 0x6f, 0x4a, 0x8d, 0xf5, 0x22, 0xa0, 0x2c, 0x01, 0x65, 0x66, 0xbc,
  0x2b, 0x03, 0x82, 0x30, 0x68, 0x73, 0x83, 0x1d, 0xfa, 0x7f, 0x75, 0xdf,
  0x0c, 0x78, 0x0d, 0x6b, 0x0b, 0x8f, 0xb6, 0xf4, 0x4a, 0x80, 0x57, 0x99,
  0xf6, 0x2a, 0xe7, 0xda, 0x82, 0xcf, 0x5c, 0xc0, 0xba, 0x2b, 0x70, 0xcd,
  0x95, 0x28, 0x9c, 0xf3, 0x1a, 0x86, 0x7b, 0x5a, 0x94, 0x5a, 0x79, 0x47,
  0x55, 0x06, 0x74, 0x58, 0x50, 0x5d, 0x25, 0xd5, 0xee, 0xa8, 0xe6, 0x80,
  0x0d, 0x5f, 0x50, 0x8d, 0x25, 0x6a, 0x6b, 0xf6, 0x74, 0x43, 0xc2, 0x45,
  0xaa, 0xcb, 0xd6, 0x9d, 0xbe, 0x4a, 0x2d, 0x48, 0x15, 0xeb, 0x2b, 0xe9,
  0x6c, 0xb6, 0xa8, 0x2f, 0xa2, 0xff, 0xf5, 0x64, 0x1c, 0xed, 0xbd, 0xb9,
  0x15, 0x76, 0x48, 0xf4, 0x81, 0x96, 0x72, 0xe7, 0x39, 0x88, 0xe8, 0x91,
  0x75, 0x38, 0x30, 0x9c, 0x13, 0x22, 0x3a, 0x48, 0x47, 0x39, 0x9a, 0x27,
  0x45, 0x74, 0x63, 0x4f, 0xe4, 0x94, 0x88, 0xce, 0xdb, 0x51, 0x8e, 0xa4,
  0x65, 0x8d, 0xd7, 0x3a, 0xb4, 0x86, 0xd9, 0x89, 0xd3, 0x9a, 0x5d, 0xdb,
  0x13, 0x76, 0x71, 0xe4, 0x51, 0xe5, 0x2f, 0x5f, 0x26, 0xd5, 0x49, 0xa2,
  0x72, 0x74, 0xcf, 0x91, 0x74, 0xe5, 0xea, 0xe1, 0xd3, 0x8d, 0x2b, 0xfb,
  0xdd, 0x1b, 0xfd, 0xfd, 0xb7, 0x0f, 0xd7, 0x2f, 0x7c, 0xfa, 0xb1, 0xf1,
  0x17, 0x26, 0xdf, 0x55, 0xc2, 0x00, 0x00, 0x00, 0x17, 0x00, 0x01, 0x00,
  0x10, 0x3c, 0x17, 0x00, 0x78, 0x01, 0xed, 0x98, 0xbf, 0x6e, 0x13, 0x41,
  0x10, 0xc6, 0x77, 0xf7, 0xf6, 0xd6, 0x7b, 0xe7, 0xf1, 0xe6, 0x62, 0x39,
  0xc6, 0x4e, 0x4c, 0xb0, 0xc1, 0xf9, 0x03, 0x91, 0x90, 0x05, 0x14, 0x51,
  0x14, 0xe0, 0x0a, 0x17, 0x14, 0x88, 0x08, 0x89, 0x12, 0x24, 0x1e, 0xc1,
  0x15, 0xa5, 0x71, 0x44, 0x14, 0x53, 0xd0, 0xf0, 0x00, 0x48, 0x79, 0x00,
  0x1e, 0x01, 0x9d, 0x8d, 0xfd, 0x06, 0xa9, 0x90, 0x68, 0x22, 0x94, 0x16,
  0x09, 0xa5, 0xa0, 0xa1, 0x30, 0x33, 0xe7, 0x35, 0x71, 0x2c, 0x4b, 0x74,
  0x20, 0xd0, 0xfe, 0xa4, 0x6f, 0xbe, 0xdb, 0xf1, 0xee, 0x79, 0x6e, 0x77,
  0xab, 0xd9, 0xbd, 0xc4, 0x52, 0x92, 0xb3, 0xc7, 0x09, 0x79, 0xef, 0xd1,
  0xc1, 0xf7, 0xa3, 0x2c, 0x63, 0x3e, 0x0d, 0x10, 0x41, 0x01, 0x69, 0x15,
  0x28, 0x32, 0xf6, 0xa9, 0x48, 0x91, 0xb1, 0x90, 0x82, 0x65, 0x01, 0x75,
  0x13, 0x45, 0xc4, 0x14, 0x2c, 0x9c, 0x02, 0xeb, 0xdc, 0x43, 0xdd, 0xa7,
  0xa7, 0x59, 0x02, 0xd4, 0x6d, 0xd4, 0x2d, 0x14, 0x31, 0x9e, 0x3f, 0x46,
  0xa1, 0x16, 0xad, 0x7e, 0x87, 0x87, 0xa2, 0xb5, 0xe4, 0xb3, 0x9c, 0x7c,
  0xed, 0xde, 0x45, 0x6b, 0xa2, 0xd8, 0xdb, 0xfe, 0x67, 0xac, 0xe5, 0x9c,
  0x1f, 0x35, 0x3e, 0xb7, 0xae, 0x7f, 0x99, 0xc9, 0x39, 0x11, 0x47, 0xd3,
  0x1b, 0x6a, 0x91, 0x14, 0x90, 0xc8, 0x9e, 0x23, 0xed, 0x33, 0xf1, 0xdc,
  0x8e, 0x27, 0x67, 0xd9, 0x47, 0xcd, 0x59, 0x9e, 0x32, 0x42, 0xc8, 0xe7,
  0x41, 0x67, 0xa0, 0xd8, 0x5e, 0x43, 0xf1, 0x6e, 0x55, 0x89, 0x61, 0x84,
  0xc3, 0x3f, 0x0e, 0xdd, 0xdd, 0xc9, 0x77, 0x29, 0x3e, 0xfe, 0x0a, 0x25,
  0xc6, 0x37, 0x59, 0x79, 0xf6, 0x96, 0xc8, 0xc9, 0x4e, 0xfc, 0x9f, 0xd0,
  0x1e, 0xe4, 0x51, 0x13, 0xa6, 0xbf, 0x96, 0xae, 0xc8, 0xd4, 0x35, 0x71,
  0x38, 0x1c, 0x0e, 0x87, 0xc3, 0xe1, 0x70, 0x38, 0x1c, 0x0e, 0x87, 0xc3,
  0xe1, 0xf8, 0x3b, 0xd4, 0x3a, 0x49, 0xc6, 0x3b, 0x48, 0xf4, 0xc8, 0x7f,
  0xcd, 0x58, 0xc4, 0x3e, 0x7a, 0x87, 0xc9, 0xc8, 0xeb, 0x26, 0xef, 0xf7,
  0x04, 0x7b, 0xea, 0x1f, 0x0e, 0x9e, 0xf8, 0xc7, 0x83, 0x8e, 0xb7, 0x9f,
  0x68, 0xde, 0xe9, 0x9f, 0x09, 0xd6, 0x6e, 0xb1, 0x37, 0x3d, 0xd0, 0xc2,
  0xe4, 0x42, 0x01, 0x06, 0x04, 0x2c, 0x18, 0x01, 0x4d, 0x5f, 0x0d, 0xeb,
  0x5a, 0x9a, 0xb5, 0x50, 0xc2, 0x3a, 0x48, 0xd8, 0x30, 0x12, 0x5e, 0xe2,
  0xbc, 0x92, 0x56, 0xa6, 0x1c, 0x2a, 0x58, 0x06, 0x05, 0x2b, 0x46, 0x41,
  0xd6, 0x97, 0x83, 0x86, 0x0f, 0xc3, 0x4d, 0x5d, 0x31, 0xd7, 0xc3, 0x0a,
  0xdc, 0x80, 0x0a, 0x6c, 0x99, 0x4a, 0x3a, 0xb7, 0xa2, 0x8b, 0xe6, 0x72,
  0x58, 0x84, 0x55, 0x28, 0xc2, 0x15, 0x53, 0x84, 0x38, 0x6e, 0x9d, 0x30,
  0x2f, 0x0e, 0x9a, 0xe4, 0x22, 0x0e, 0x1e, 0x90, 0x9b, 0x38, 0x78, 0x48,
  0xce, 0xe3, 0x80, 0x91, 0x43, 0x1c, 0x48, 0xf2, 0x5c, 0x1c, 0x44, 0xe4,
  0xd9, 0x38, 0xa8, 0x62, 0x6d, 0x35, 0xac, 0xed, 0x2a, 0xd6, 0x76, 0x0d,
  0x6b, 0x2b, 0x50, 0x1e, 0xe7, 0xd7, 0x31, 0xbf, 0x86, 0xf9, 0x75, 0xcc,
  0x6f, 0x60, 0x7e, 0xc5, 0x48, 0x53, 0xb2, 0xbf, 0x95, 0x43, 0x61, 0xa2,
  0x48, 0x99, 0x92, 0x16, 0x58, 0xab, 0x04, 0xae, 0xd5, 0x31, 0xf7, 0x05,
  0x83, 0x48, 0x9a, 0xc5, 0xbc, 0x82, 0x5c, 0x5e, 0x42, 0x21, 0x0a, 0x4d,
  0xbe, 0xa0, 0x60, 0x29, 0x1f, 0x82, 0x29, 0x48, 0xf0, 0x32, 0xda, 0x08,
  0x5f, 0x43, 0xb1, 0x10, 0x82, 0x9f, 0xd5, 0x20, 0x9f, 0xe9, 0x76, 0xc5,
  0xbe, 0x4f, 0x0b, 0xd1, 0x96, 0xbe, 0x34, 0x55, 0x1a, 0x63, 0xed, 0x32,
  0x23, 0x4d, 0x7d, 0xf2, 0x9c, 0x95, 0x66, 0xd3, 0x3e, 0x37, 0xc8, 0x59,
  0x1c, 0xdc, 0xb1, 0xbe, 0x6d, 0x7d, 0x97, 0x1c, 0xdf, 0xc3, 0xd8, 0x7e,
  0x6f, 0x89, 0xce, 0x68, 0xa6, 0x41, 0x58, 0xa6, 0x30, 0x93, 0x2b, 0x51,
  0x98, 0xc9, 0xa5, 0x4d, 0xc1, 0x99, 0xdc, 0x32, 0x05, 0x9e, 0xf6, 0xe6,
  0x1a, 0x14, 0x08, 0xca, 0x71, 0x9e, 0x76, 0xae, 0xce, 0x73, 0xb8, 0x4e,
  0x70, 0xea, 0x6e, 0x5d, 0xcc, 0x79, 0x3c, 0xed, 0xf8, 0x9d, 0xe7, 0x50,
  0x52, 0x64, 0xe8, 0xbf, 0x7e, 0xb5, 0xa4, 0xa9, 0x03, 0x28, 0x65, 0x06,
  0xe3, 0x85, 0x36, 0x75, 0xca, 0x37, 0xdb, 0xff, 0xac, 0xa3, 0xa8, 0x2f,
  0xcd, 0x6d, 0x37, 0x99, 0xea, 0x97, 0xb6, 0x9b, 0x08, 0xaf, 0x76, 0xb6,
  0x4e, 0x9b, 0xdb, 0xad, 0xd3, 0x77, 0x2f, 0x6a, 0xab, 0x1f, 0xbe, 0xec,
  0xfc, 0x04, 0x69, 0x3e, 0x6f, 0x36, 0x00, 0x00, 0x17, 0x00, 0x01, 0x00,
  0x00, 0xe4, 0x16, 0x00, 0x78, 0x01, 0xed, 0x98, 0x4f, 0x6b, 0x13, 0x41,
  0x18, 0x87, 0xdf, 0x99, 0x9d, 0x6c, 0xb6, 0x9b, 0x75, 0x3a, 0xdd, 0xfc,
  0xab, 0x52, 0x6b, 0x22, 0xb5, 0x74, 0x55, 0xb0, 0x07, 0x2b, 0x25, 0x60,
  0xab, 0x10, 0xf0, 0xa2, 0xb6, 0x88, 0xe2, 0x45, 0x2f, 0x7e, 0x82, 0x9c,
  0x3c, 0x86, 0x88, 0x82, 0x1e, 0x3c, 0x8a, 0x7a, 0x11, 0x3c, 0x8a, 0x8a,
  0xf8, 0x01, 0x24, 0xb1, 0xc9, 0x17, 0x90, 0x1c, 0xc4, 0x9e, 0x14, 0xe9,
  0xc5, 0x6b, 0x0f, 0x9e, 0xc4, 0xf8, 0x7b, 0x37, 0xbb, 0x36, 0x0d, 0x39,
  0x2b, 0x94, 0x79, 0xe0, 0x7d, 0x27, 0xf3, 0xec, 0x2c, 0x99, 0xd9, 0xdd,
  0xd3, 0x6f, 0xa7, 0x44, 0x31, 0xee, 0xb3, 0x2b, 0x35, 0x1e, 0x3b, 0x57,
  0x1f, 0xfc, 0x7c, 0x99, 0x23, 0xca, 0xf0, 0x64, 0x84, 0x46, 0x81, 0x3b,
  0x51, 0x2b, 0x59, 0xef, 0x73, 0x4b, 0xe0, 0x4b, 0x67, 0x50, 0xcc, 0x05,
  0x6e, 0x09, 0x82, 0x1b, 0xb5, 0xd6, 0x50, 0xeb, 0xfc, 0x6b, 0x1c, 0x0f,
  0x75, 0x0e, 0xb5, 0x82, 0x62, 0x86, 0xeb, 0x87, 0x8c, 0xff, 0xff, 0xf8,
  0x7c, 0x14, 0xbe, 0x2f, 0xad, 0x71, 0x6e, 0x3c, 0xbd, 0x73, 0x1e, 0x43,
  0x1d, 0x45, 0x17, 0x2f, 0xbf, 0x5b, 0xbb, 0xf6, 0x75, 0x9b, 0xe7, 0x31,
  0x95, 0x1f, 0xbf, 0xb1, 0xb7, 0x83, 0x45, 0xfa, 0x9e, 0x98, 0xc6, 0x84,
  0x07, 0x22, 0xb9, 0x81, 0x6f, 0x45, 0xee, 0x78, 0xef, 0xdc, 0x80, 0x97,
  0xbc, 0xd7, 0xf4, 0x5d, 0x7e, 0x44, 0x4d, 0x7a, 0x9e, 0xcc, 0x00, 0xf0,
  0x38, 0x09, 0x07, 0xe5, 0xd2, 0xc6, 0xb2, 0x2b, 0x1e, 0x56, 0x5c, 0xd9,
  0x33, 0x98, 0xfe, 0x73, 0xf8, 0x5b, 0x49, 0xcf, 0xe5, 0x8a, 0xe1, 0x29,
  0x5c, 0x39, 0x3c, 0xb9, 0xeb, 0xf0, 0x0e, 0x81, 0x52, 0xdc, 0x0f, 0x2c,
  0xfc, 0x0c, 0x42, 0x54, 0x4a, 0x7a, 0x5a, 0x7e, 0x1a, 0xe9, 0x27, 0xb2,
  0xc9, 0xcd, 0x62, 0xb1, 0x58, 0x2c, 0x16, 0x8b, 0xc5, 0x62, 0xb1, 0x58,
  0x2c, 0x16, 0x8b, 0xe5, 0x7f, 0x51, 0x6d, 0xb5, 0xbd, 0x41, 0xf4, 0x88,
  0xc8, 0x50, 0xd6, 0x79, 0xd5, 0xde, 0x72, 0x5e, 0xb7, 0x07, 0xce, 0x9b,
  0xf6, 0xdb, 0x0d, 0x49, 0xb9, 0xa8, 0xd4, 0x5d, 0x8e, 0xa8, 0x57, 0x8f,
  0xbc, 0xde, 0xf5, 0xe8, 0x53, 0xf7, 0x56, 0xf4, 0xa4, 0xbb, 0xe5, 0xfc,
  0x6a, 0x37, 0xe8, 0x71, 0x67, 0xce, 0x23, 0x7d, 0xd4, 0xa7, 0x60, 0x3e,
  0xa0, 0x40, 0x52, 0xab, 0x9f, 0x5d, 0x27, 0x55, 0x81, 0xab, 0xc2, 0x1d,
  0x87, 0x73, 0xd8, 0x5d, 0x22, 0xb5, 0x00, 0x77, 0x02, 0x6e, 0x11, 0x4e,
  0xb3, 0xdb, 0x20, 0xb5, 0x04, 0x17, 0xc1, 0x9d, 0x84, 0x9b, 0x66, 0x77,
  0x93, 0x94, 0x82, 0xcb, 0xc0, 0xb9, 0x70, 0x86, 0xdd, 0x34, 0x29, 0x0f,
  0x6e, 0x0a, 0xce, 0x87, 0x9b, 0x61, 0x57, 0x26, 0x15, 0xc0, 0x1d, 0x82,
  0x2b, 0x98, 0x92, 0xd6, 0xf0, 0x21, 0xfb, 0x63, 0xa4, 0x8c, 0x21, 0x5d,
  0x0c, 0x4b, 0xc1, 0xac, 0x31, 0x7a, 0x26, 0xa4, 0xa0, 0x54, 0x28, 0x05,
  0x87, 0x43, 0x13, 0x84, 0x05, 0xdc, 0x8f, 0x35, 0xfe, 0x4a, 0x45, 0xe5,
  0xca, 0x46, 0x93, 0x30, 0x81, 0x5f, 0x34, 0x81, 0x77, 0x7b, 0xb1, 0x29,
  0x7c, 0x5f, 0x3b, 0x5a, 0x6b, 0x85, 0xeb, 0x4a, 0x14, 0x54, 0x06, 0xa3,
  0x9b, 0x99, 0x53, 0x9b, 0x44, 0xef, 0xf3, 0xc2, 0xe8, 0x7c, 0x39, 0xd4,
  0xf9, 0x22, 0xe9, 0xbc, 0xe7, 0xf6, 0x55, 0x4e, 0x92, 0xa2, 0xcf, 0x7d,
  0x8e, 0xb9, 0x76, 0xa5, 0x6c, 0x7a, 0x53, 0xab, 0xdb, 0x4a, 0x6a, 0x22,
  0x07, 0x23, 0x76, 0xb1, 0x44, 0x67, 0xbf, 0x70, 0xf6, 0x23, 0x15, 0xe6,
  0xc6, 0xc3, 0x1a, 0x6a, 0xee, 0x4a, 0xd5, 0x3c, 0x2d, 0xdd, 0xa6, 0x9b,
  0x85, 0x8b, 0x13, 0xc1, 0x7b, 0x9d, 0x38, 0x0e, 0xe4, 0x70, 0x68, 0x84,
  0x38, 0xbc, 0x1b, 0x73, 0x47, 0xb8, 0x89, 0x38, 0x43, 0x5b, 0xe6, 0xc6,
  0xb0, 0x13, 0x22, 0x4e, 0x98, 0xf6, 0x1c, 0xee, 0x93, 0x82, 0x53, 0xa8,
  0xfd, 0xce, 0x11, 0x71, 0x32, 0xb7, 0xe7, 0x50, 0x4a, 0x66, 0xf9, 0xbf,
  0xfe, 0x46, 0xc7, 0xbc, 0x23, 0xa5, 0xb2, 0xe8, 0xfb, 0xe2, 0xe4, 0x98,
  0xe7, 0x49, 0x4e, 0xb9, 0x80, 0x9a, 0x42, 0x89, 0x38, 0x71, 0x24, 0x9a,
  0x45, 0xa9, 0x24, 0xf5, 0x0b, 0xee, 0xd7, 0x4e, 0xed, 0xd4, 0x57, 0x1b,
  0x3b, 0x2f, 0xee, 0x56, 0xe7, 0x3f, 0x7c, 0xaf, 0xfd, 0x01, 0x59, 0x31,
  0x62, 0xc4, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x03, 0x01, 0x08, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x01, 0x04, 0x03,
  0x04, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x05, 0x05, 0x08, 0x02, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x03, 0x01, 0x06, 0x07, 0x04, 0x02, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x02, 0x07, 0x08,
  0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xcc, 0x00, 0x00,
  0x78, 0x01, 0x6d, 0xcc, 0xb1, 0x11, 0x40, 0x40, 0x10, 0x46, 0xe1, 0x1f,
  0xa3, 0x07, 0x89, 0xae, 0x2e, 0x54, 0x84, 0x50, 0x11, 0x42, 0x45, 0x08,
  0x15, 0x21, 0xd4, 0x13, 0xef, 0x05, 0x9b, 0x79, 0x33, 0xdf, 0xdc, 0xba,
  0x9d, 0xd3, 0x25, 0x19, 0x31, 0xc1, 0x1e, 0xcc, 0x30, 0xef, 0x1b, 0xcc,
  0x79, 0x85, 0x39, 0xef, 0x30, 0xe7, 0x13, 0x3d, 0xec, 0x86, 0xff, 0x5c,
  0x60, 0xce, 0xd5, 0x4b, 0x7e, 0x6f, 0x18, 0xf0, 0xb7, 0x3b, 0x60, 0xce,
  0xb2, 0xda, 0x5d, 0xa8, 0x77, 0x32, 0x77, 0x9e, 0x49, 0xf2, 0x01, 0x2b,
  0xfe, 0x15, 0xf2, 0x00, 0x78, 0x62, 0x6f, 0x70, 0x01, 0x00, 0x00, 0x00,
  0x7e, 0x02, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00
};
