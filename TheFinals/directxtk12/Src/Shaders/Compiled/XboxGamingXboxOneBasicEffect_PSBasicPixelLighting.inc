#if 0
;
; Input signature:
;
; Name                 Index   Mask Register SysValue  Format   Used
; -------------------- ----- ------ -------- -------- ------- ------
; TEXCOORD                 0   xyzw        0     NONE   float   xyzw
; TEXCOORD                 1   xyz         1     NONE   float   xyz 
; COLOR                    0   xyzw        2     NONE   float   xyzw
;
;
; Output signature:
;
; Name                 Index   Mask Register SysValue  Format   Used
; -------------------- ----- ------ -------- -------- ------- ------
; SV_Target                0   xyzw        0   TARGET   float   xyzw
;
; shader debug name: C:\Users\marcu\Downloads\DirectXTK12-main\DirectXTK12-main\Src/Shaders/Compiled\XboxGamingXboxOneBasicEffect_PSBasicPixelLighting.pdb
; shader hash: be77ed0964925583e2056ff720d03153
;
; Pipeline Runtime Information: 
;
;PSVRuntimeInfo:
; Pixel Shader
; DepthOutput=0
; SampleFrequency=0
; MinimumExpectedWaveLaneCount: 0
; MaximumExpectedWaveLaneCount: 4294967295
; UsesViewID: false
; SigInputElements: 3
; SigOutputElements: 1
; SigPatchConstOrPrimElements: 0
; SigInputVectors: 3
; SigOutputVectors[0]: 1
; SigOutputVectors[1]: 0
; SigOutputVectors[2]: 0
; SigOutputVectors[3]: 0
; EntryFunctionName: PSBasicPixelLighting
;
;
; Input signature:
;
; Name                 Index             InterpMode DynIdx
; -------------------- ----- ---------------------- ------
; TEXCOORD                 0                 linear       
; TEXCOORD                 1                 linear       
; COLOR                    0                 linear       
;
; Output signature:
;
; Name                 Index             InterpMode DynIdx
; -------------------- ----- ---------------------- ------
; SV_Target                0                              
;
; Buffer Definitions:
;
; cbuffer 
; {
;
;   [416 x i8] (type annotation not present)
;
; }
;
;
; Resource Bindings:
;
; Name                                 Type  Format         Dim      ID      HLSL Bind  Count
; ------------------------------ ---------- ------- ----------- ------- -------------- ------
;                                   cbuffer      NA          NA     CB0            cb0     1
;
;
; ViewId state:
;
; Number of inputs: 12, outputs: 4
; Outputs dependent on ViewId: {  }
; Inputs contributing to computation of Outputs:
;   output 0 depends on inputs: { 0, 1, 2, 3, 4, 5, 6, 8, 11 }
;   output 1 depends on inputs: { 0, 1, 2, 3, 4, 5, 6, 9, 11 }
;   output 2 depends on inputs: { 0, 1, 2, 3, 4, 5, 6, 10, 11 }
;   output 3 depends on inputs: { 11 }
;
target datalayout = "e-m:e-p:32:32-i1:32-i8:32-i16:32-i32:32-i64:64-f16:32-f32:32-f64:64-n8:16:32:64"
target triple = "dxil-ms-xb1"

%dx.types.Handle = type { i8* }
%dx.types.CBufRet.f32 = type { float, float, float, float }
%hostlayout.Parameters = type { <4 x float>, <3 x float>, <3 x float>, float, [3 x <3 x float>], [3 x <3 x float>], [3 x <3 x float>], <3 x float>, <3 x float>, <4 x float>, [4 x <4 x float>], [3 x <3 x float>], [4 x <4 x float>] }

define void @PSBasicPixelLighting() {
  %1 = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 2, i32 0, i32 0, i1 false)  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %2 = call float @dx.op.loadInput.f32(i32 4, i32 2, i32 0, i8 0, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %3 = call float @dx.op.loadInput.f32(i32 4, i32 2, i32 0, i8 1, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %4 = call float @dx.op.loadInput.f32(i32 4, i32 2, i32 0, i8 2, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %5 = call float @dx.op.loadInput.f32(i32 4, i32 2, i32 0, i8 3, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %6 = call float @dx.op.loadInput.f32(i32 4, i32 1, i32 0, i8 0, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %7 = call float @dx.op.loadInput.f32(i32 4, i32 1, i32 0, i8 1, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %8 = call float @dx.op.loadInput.f32(i32 4, i32 1, i32 0, i8 2, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %9 = call float @dx.op.loadInput.f32(i32 4, i32 0, i32 0, i8 0, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %10 = call float @dx.op.loadInput.f32(i32 4, i32 0, i32 0, i8 1, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %11 = call float @dx.op.loadInput.f32(i32 4, i32 0, i32 0, i8 2, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %12 = call float @dx.op.loadInput.f32(i32 4, i32 0, i32 0, i8 3, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %13 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 12)  ; CBufferLoadLegacy(handle,regIndex)
  %14 = extractvalue %dx.types.CBufRet.f32 %13, 0
  %15 = extractvalue %dx.types.CBufRet.f32 %13, 1
  %16 = extractvalue %dx.types.CBufRet.f32 %13, 2
  %17 = fsub fast float %14, %9
  %18 = fsub fast float %15, %10
  %19 = fsub fast float %16, %11
  %20 = call float @dx.op.dot3.f32(i32 55, float %17, float %18, float %19, float %17, float %18, float %19)  ; Dot3(ax,ay,az,bx,by,bz)
  %21 = call float @dx.op.unary.f32(i32 25, float %20)  ; Rsqrt(value)
  %22 = fmul fast float %17, %21
  %23 = fmul fast float %18, %21
  %24 = fmul fast float %19, %21
  %25 = call float @dx.op.dot3.f32(i32 55, float %6, float %7, float %8, float %6, float %7, float %8)  ; Dot3(ax,ay,az,bx,by,bz)
  %26 = call float @dx.op.unary.f32(i32 25, float %25)  ; Rsqrt(value)
  %27 = fmul fast float %26, %6
  %28 = fmul fast float %26, %7
  %29 = fmul fast float %26, %8
  %30 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 3)  ; CBufferLoadLegacy(handle,regIndex)
  %31 = extractvalue %dx.types.CBufRet.f32 %30, 0
  %32 = extractvalue %dx.types.CBufRet.f32 %30, 1
  %33 = extractvalue %dx.types.CBufRet.f32 %30, 2
  %34 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 6)  ; CBufferLoadLegacy(handle,regIndex)
  %35 = extractvalue %dx.types.CBufRet.f32 %34, 0
  %36 = extractvalue %dx.types.CBufRet.f32 %34, 1
  %37 = extractvalue %dx.types.CBufRet.f32 %34, 2
  %38 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 9)  ; CBufferLoadLegacy(handle,regIndex)
  %39 = extractvalue %dx.types.CBufRet.f32 %38, 0
  %40 = extractvalue %dx.types.CBufRet.f32 %38, 1
  %41 = extractvalue %dx.types.CBufRet.f32 %38, 2
  %42 = fsub fast float %22, %31
  %43 = fsub fast float %23, %32
  %44 = fsub fast float %24, %33
  %45 = call float @dx.op.dot3.f32(i32 55, float %42, float %43, float %44, float %42, float %43, float %44)  ; Dot3(ax,ay,az,bx,by,bz)
  %46 = call float @dx.op.unary.f32(i32 25, float %45)  ; Rsqrt(value)
  %47 = fmul fast float %46, %43
  %48 = fmul fast float %46, %44
  %49 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 4)  ; CBufferLoadLegacy(handle,regIndex)
  %50 = extractvalue %dx.types.CBufRet.f32 %49, 0
  %51 = extractvalue %dx.types.CBufRet.f32 %49, 1
  %52 = extractvalue %dx.types.CBufRet.f32 %49, 2
  %53 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 7)  ; CBufferLoadLegacy(handle,regIndex)
  %54 = extractvalue %dx.types.CBufRet.f32 %53, 0
  %55 = extractvalue %dx.types.CBufRet.f32 %53, 1
  %56 = extractvalue %dx.types.CBufRet.f32 %53, 2
  %57 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 10)  ; CBufferLoadLegacy(handle,regIndex)
  %58 = extractvalue %dx.types.CBufRet.f32 %57, 0
  %59 = extractvalue %dx.types.CBufRet.f32 %57, 1
  %60 = extractvalue %dx.types.CBufRet.f32 %57, 2
  %61 = fsub fast float %22, %50
  %62 = fsub fast float %23, %51
  %63 = fsub fast float %24, %52
  %64 = call float @dx.op.dot3.f32(i32 55, float %61, float %62, float %63, float %61, float %62, float %63)  ; Dot3(ax,ay,az,bx,by,bz)
  %65 = call float @dx.op.unary.f32(i32 25, float %64)  ; Rsqrt(value)
  %66 = fmul fast float %65, %62
  %67 = fmul fast float %65, %63
  %68 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 5)  ; CBufferLoadLegacy(handle,regIndex)
  %69 = extractvalue %dx.types.CBufRet.f32 %68, 0
  %70 = extractvalue %dx.types.CBufRet.f32 %68, 1
  %71 = extractvalue %dx.types.CBufRet.f32 %68, 2
  %72 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 8)  ; CBufferLoadLegacy(handle,regIndex)
  %73 = extractvalue %dx.types.CBufRet.f32 %72, 0
  %74 = extractvalue %dx.types.CBufRet.f32 %72, 1
  %75 = extractvalue %dx.types.CBufRet.f32 %72, 2
  %76 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 11)  ; CBufferLoadLegacy(handle,regIndex)
  %77 = extractvalue %dx.types.CBufRet.f32 %76, 0
  %78 = extractvalue %dx.types.CBufRet.f32 %76, 1
  %79 = extractvalue %dx.types.CBufRet.f32 %76, 2
  %80 = fsub fast float %22, %69
  %81 = fsub fast float %23, %70
  %82 = fsub fast float %24, %71
  %83 = call float @dx.op.dot3.f32(i32 55, float %80, float %81, float %82, float %80, float %81, float %82)  ; Dot3(ax,ay,az,bx,by,bz)
  %84 = call float @dx.op.unary.f32(i32 25, float %83)  ; Rsqrt(value)
  %85 = fmul fast float %84, %81
  %86 = fmul fast float %84, %82
  %87 = fsub fast float -0.000000e+00, %32
  %88 = fsub fast float -0.000000e+00, %33
  %89 = fsub fast float -0.000000e+00, %51
  %90 = fsub fast float -0.000000e+00, %52
  %91 = fsub fast float -0.000000e+00, %70
  %92 = fsub fast float -0.000000e+00, %71
  %93 = fmul fast float %27, %31
  %94 = fsub fast float -0.000000e+00, %93
  %95 = call float @dx.op.tertiary.f32(i32 46, float %87, float %28, float %94)  ; FMad(a,b,c)
  %96 = call float @dx.op.tertiary.f32(i32 46, float %88, float %29, float %95)  ; FMad(a,b,c)
  %97 = fmul fast float %27, %50
  %98 = fsub fast float -0.000000e+00, %97
  %99 = call float @dx.op.tertiary.f32(i32 46, float %89, float %28, float %98)  ; FMad(a,b,c)
  %100 = call float @dx.op.tertiary.f32(i32 46, float %90, float %29, float %99)  ; FMad(a,b,c)
  %101 = fmul fast float %27, %69
  %102 = fsub fast float -0.000000e+00, %101
  %103 = call float @dx.op.tertiary.f32(i32 46, float %91, float %28, float %102)  ; FMad(a,b,c)
  %104 = call float @dx.op.tertiary.f32(i32 46, float %92, float %29, float %103)  ; FMad(a,b,c)
  %105 = fmul fast float %42, %27
  %106 = fmul fast float %105, %46
  %107 = call float @dx.op.tertiary.f32(i32 46, float %47, float %28, float %106)  ; FMad(a,b,c)
  %108 = call float @dx.op.tertiary.f32(i32 46, float %48, float %29, float %107)  ; FMad(a,b,c)
  %109 = fmul fast float %61, %27
  %110 = fmul fast float %109, %65
  %111 = call float @dx.op.tertiary.f32(i32 46, float %66, float %28, float %110)  ; FMad(a,b,c)
  %112 = call float @dx.op.tertiary.f32(i32 46, float %67, float %29, float %111)  ; FMad(a,b,c)
  %113 = fmul fast float %80, %27
  %114 = fmul fast float %113, %84
  %115 = call float @dx.op.tertiary.f32(i32 46, float %85, float %28, float %114)  ; FMad(a,b,c)
  %116 = call float @dx.op.tertiary.f32(i32 46, float %86, float %29, float %115)  ; FMad(a,b,c)
  %117 = fcmp fast olt float %96, 0.000000e+00
  %118 = fcmp fast olt float %100, 0.000000e+00
  %119 = fcmp fast olt float %104, 0.000000e+00
  %120 = select i1 %117, float 0.000000e+00, float 1.000000e+00
  %121 = select i1 %118, float 0.000000e+00, float 1.000000e+00
  %122 = select i1 %119, float 0.000000e+00, float 1.000000e+00
  %123 = fmul fast float %120, %96
  %124 = fmul fast float %121, %100
  %125 = fmul fast float %122, %104
  %126 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 2)  ; CBufferLoadLegacy(handle,regIndex)
  %127 = extractvalue %dx.types.CBufRet.f32 %126, 3
  %128 = call float @dx.op.binary.f32(i32 35, float %108, float 0.000000e+00)  ; FMax(a,b)
  %129 = call float @dx.op.binary.f32(i32 35, float %112, float 0.000000e+00)  ; FMax(a,b)
  %130 = call float @dx.op.binary.f32(i32 35, float %116, float 0.000000e+00)  ; FMax(a,b)
  %131 = fmul fast float %128, %120
  %132 = fmul fast float %129, %121
  %133 = fmul fast float %130, %122
  %134 = call float @dx.op.unary.f32(i32 23, float %131)  ; Log(value)
  %135 = call float @dx.op.unary.f32(i32 23, float %132)  ; Log(value)
  %136 = call float @dx.op.unary.f32(i32 23, float %133)  ; Log(value)
  %137 = fmul fast float %134, %127
  %138 = fmul fast float %135, %127
  %139 = fmul fast float %136, %127
  %140 = call float @dx.op.unary.f32(i32 21, float %137)  ; Exp(value)
  %141 = call float @dx.op.unary.f32(i32 21, float %138)  ; Exp(value)
  %142 = call float @dx.op.unary.f32(i32 21, float %139)  ; Exp(value)
  %143 = fmul fast float %140, %96
  %144 = fmul fast float %141, %100
  %145 = fmul fast float %142, %104
  %146 = fmul fast float %123, %35
  %147 = call float @dx.op.tertiary.f32(i32 46, float %124, float %54, float %146)  ; FMad(a,b,c)
  %148 = call float @dx.op.tertiary.f32(i32 46, float %125, float %73, float %147)  ; FMad(a,b,c)
  %149 = fmul fast float %123, %36
  %150 = call float @dx.op.tertiary.f32(i32 46, float %124, float %55, float %149)  ; FMad(a,b,c)
  %151 = call float @dx.op.tertiary.f32(i32 46, float %125, float %74, float %150)  ; FMad(a,b,c)
  %152 = fmul fast float %123, %37
  %153 = call float @dx.op.tertiary.f32(i32 46, float %124, float %56, float %152)  ; FMad(a,b,c)
  %154 = call float @dx.op.tertiary.f32(i32 46, float %125, float %75, float %153)  ; FMad(a,b,c)
  %155 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 0)  ; CBufferLoadLegacy(handle,regIndex)
  %156 = extractvalue %dx.types.CBufRet.f32 %155, 0
  %157 = extractvalue %dx.types.CBufRet.f32 %155, 1
  %158 = extractvalue %dx.types.CBufRet.f32 %155, 2
  %159 = fmul fast float %156, %148
  %160 = fmul fast float %157, %151
  %161 = fmul fast float %158, %154
  %162 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 1)  ; CBufferLoadLegacy(handle,regIndex)
  %163 = extractvalue %dx.types.CBufRet.f32 %162, 0
  %164 = extractvalue %dx.types.CBufRet.f32 %162, 1
  %165 = extractvalue %dx.types.CBufRet.f32 %162, 2
  %166 = fadd fast float %159, %163
  %167 = fadd fast float %160, %164
  %168 = fadd fast float %161, %165
  %169 = fmul fast float %143, %39
  %170 = call float @dx.op.tertiary.f32(i32 46, float %144, float %58, float %169)  ; FMad(a,b,c)
  %171 = call float @dx.op.tertiary.f32(i32 46, float %145, float %77, float %170)  ; FMad(a,b,c)
  %172 = fmul fast float %143, %40
  %173 = call float @dx.op.tertiary.f32(i32 46, float %144, float %59, float %172)  ; FMad(a,b,c)
  %174 = call float @dx.op.tertiary.f32(i32 46, float %145, float %78, float %173)  ; FMad(a,b,c)
  %175 = fmul fast float %143, %41
  %176 = call float @dx.op.tertiary.f32(i32 46, float %144, float %60, float %175)  ; FMad(a,b,c)
  %177 = call float @dx.op.tertiary.f32(i32 46, float %145, float %79, float %176)  ; FMad(a,b,c)
  %178 = extractvalue %dx.types.CBufRet.f32 %126, 0
  %179 = extractvalue %dx.types.CBufRet.f32 %126, 1
  %180 = extractvalue %dx.types.CBufRet.f32 %126, 2
  %181 = fmul fast float %166, %2
  %182 = fmul fast float %167, %3
  %183 = fmul fast float %168, %4
  %184 = fmul fast float %171, %5
  %185 = fmul fast float %184, %178
  %186 = fmul fast float %174, %5
  %187 = fmul fast float %186, %179
  %188 = fmul fast float %177, %5
  %189 = fmul fast float %188, %180
  %190 = fadd fast float %185, %181
  %191 = fadd fast float %187, %182
  %192 = fadd fast float %189, %183
  %193 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 13)  ; CBufferLoadLegacy(handle,regIndex)
  %194 = extractvalue %dx.types.CBufRet.f32 %193, 0
  %195 = extractvalue %dx.types.CBufRet.f32 %193, 1
  %196 = extractvalue %dx.types.CBufRet.f32 %193, 2
  %197 = fmul fast float %194, %5
  %198 = fmul fast float %195, %5
  %199 = fmul fast float %196, %5
  %200 = fsub fast float %197, %190
  %201 = fsub fast float %198, %191
  %202 = fsub fast float %199, %192
  %203 = fmul fast float %200, %12
  %204 = fmul fast float %201, %12
  %205 = fmul fast float %202, %12
  %206 = fadd fast float %203, %190
  %207 = fadd fast float %204, %191
  %208 = fadd fast float %205, %192
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 0, float %206)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 1, float %207)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 2, float %208)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 3, float %5)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  ret void
}

; Function Attrs: nounwind readnone
declare float @dx.op.loadInput.f32(i32, i32, i32, i8, i32) #0

; Function Attrs: nounwind
declare void @dx.op.storeOutput.f32(i32, i32, i32, i8, float) #1

; Function Attrs: nounwind readnone
declare float @dx.op.dot3.f32(i32, float, float, float, float, float, float) #0

; Function Attrs: nounwind readnone
declare float @dx.op.unary.f32(i32, float) #0

; Function Attrs: nounwind readnone
declare float @dx.op.binary.f32(i32, float, float) #0

; Function Attrs: nounwind readonly
declare %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32, %dx.types.Handle, i32) #2

; Function Attrs: nounwind readnone
declare float @dx.op.tertiary.f32(i32, float, float, float) #0

; Function Attrs: nounwind readonly
declare %dx.types.Handle @dx.op.createHandle(i32, i8, i32, i32, i1) #2

attributes #0 = { nounwind readnone }
attributes #1 = { nounwind }
attributes #2 = { nounwind readonly }

!xbox.compiler.options = !{!0}
!llvm.ident = !{!1}
!dx.version = !{!2}
!dx.valver = !{!3}
!dx.shaderModel = !{!4}
!dx.resources = !{!5}
!dx.viewIdState = !{!8}
!dx.entryPoints = !{!9}

!0 = !{!"__XBOX_PER_THREAD_SCRATCH_SIZE_LIMIT_IN_BYTES", !"0"}
!1 = !{!"dxcxbox 2410.2410.11116.10741"}
!2 = !{i32 1, i32 0}
!3 = !{i32 1, i32 8}
!4 = !{!"ps", i32 6, i32 0}
!5 = !{null, null, !6, null}
!6 = !{!7}
!7 = !{i32 0, %hostlayout.Parameters* undef, !"", i32 0, i32 0, i32 1, i32 416, null}
!8 = !{[14 x i32] [i32 12, i32 4, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 0, i32 1, i32 2, i32 4, i32 15]}
!9 = !{void ()* @PSBasicPixelLighting, !"PSBasicPixelLighting", !10, !5, null}
!10 = !{!11, !19, null}
!11 = !{!12, !15, !18}
!12 = !{i32 0, !"TEXCOORD", i8 9, i8 0, !13, i8 2, i32 1, i8 4, i32 0, i8 0, !14}
!13 = !{i32 0}
!14 = !{i32 3, i32 15}
!15 = !{i32 1, !"TEXCOORD", i8 9, i8 0, !16, i8 2, i32 1, i8 3, i32 1, i8 0, !17}
!16 = !{i32 1}
!17 = !{i32 3, i32 7}
!18 = !{i32 2, !"COLOR", i8 9, i8 0, !13, i8 2, i32 1, i8 4, i32 2, i8 0, !14}
!19 = !{!20}
!20 = !{i32 0, !"SV_Target", i8 9, i8 16, !13, i8 0, i32 1, i8 4, i32 0, i8 0, !14}

;
; DUMPING SHADER HARDWARE INSTRUCTIONS 
;
// Shader Type               : (PS)
// Shader Hw Stage           : (PS)

// Shader Instructions:
shader main
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  s_mov_b32     s0, s3
  s_or_b32      s1, s4, 0x00100000 // wrscc
  s_mov_b32     s2, -1
  s_mov_b32     s3, 0x00024fac
  s_mov_b32     m0, s5
  s_buffer_load_dwordx16  s[4:19], s[0:3], 0x00
  s_buffer_load_dwordx16  s[36:51], s[0:3], 0x10
  s_buffer_load_dwordx16  s[20:35], s[0:3], 0x20
  s_buffer_load_dwordx8  s[52:59], s[0:3], 0x30
  v_interp_p1_f32  v9, v0, attr0.x
  v_interp_p1_f32  v10, v0, attr0.y
  v_interp_p1_f32  v2, v0, attr2.x
  v_interp_p1_f32  v3, v0, attr2.y
  v_interp_p1_f32  v4, v0, attr2.z
  v_interp_p1_f32  v5, v0, attr2.w
  v_interp_p1_f32  v6, v0, attr1.x
  v_interp_p1_f32  v7, v0, attr1.y
  v_interp_p1_f32  v8, v0, attr1.z
  v_interp_p1_f32  v11, v0, attr0.z
  v_interp_p1_f32  v0, v0, attr0.w
  v_interp_p2_f32  v9, v1, attr0.x
  v_interp_p2_f32  v10, v1, attr0.y
  v_interp_p2_f32  v5, v1, attr2.w
  v_interp_p2_f32  v7, v1, attr1.y
  v_interp_p2_f32  v2, v1, attr2.x
  v_interp_p2_f32  v3, v1, attr2.y
  v_interp_p2_f32  v4, v1, attr2.z
  v_interp_p2_f32  v6, v1, attr1.x
  v_interp_p2_f32  v8, v1, attr1.z
  v_interp_p2_f32  v11, v1, attr0.z
  v_interp_p2_f32  v0, v1, attr0.w
  s_waitcnt     lgkmcnt(0)
  v_sub_f32     v1, s52, v9
  v_sub_f32     v9, s53, v10
  v_sub_f32     v10, s54, v11
  v_mul_legacy_f32  v11, v9, v9
  v_mac_legacy_f32  v11, v1, v1
  v_mul_legacy_f32  v12, v7, v7
  v_mac_legacy_f32  v11, v10, v10
  v_mac_legacy_f32  v12, v6, v6
  v_rsq_f32     v11, v11
  v_mac_legacy_f32  v12, v8, v8
  v_rsq_f32     v12, v12
  v_mad_legacy_f32  v13, v9, v11, -s17
  v_mul_legacy_f32  v15, v13, v13
  v_mul_legacy_f32  v6, v12, v6
  v_mul_legacy_f32  v7, v12, v7
  v_mul_legacy_f32  v8, v12, v8
  v_mad_legacy_f32  v12, v1, v11, -s16
  v_mad_legacy_f32  v17, v9, v11, -s37
  v_mac_legacy_f32  v15, v12, v12
  v_mad_legacy_f32  v14, v10, v11, -s18
  v_mac_legacy_f32  v15, v14, v14
  v_mad_legacy_f32  v16, v1, v11, -s36
  v_mul_legacy_f32  v19, v17, v17
  v_mad_legacy_f32  v9, v9, v11, -s41
  v_rsq_f32     v15, v15
  v_mad_legacy_f32  v18, v10, v11, -s38
  v_mac_legacy_f32  v19, v16, v16
  v_mad_legacy_f32  v1, v1, v11, -s40
  v_mad_legacy_f32  v10, v10, v11, -s42
  v_mul_legacy_f32  v11, v9, v9
  v_mac_legacy_f32  v11, v1, v1
  v_mac_legacy_f32  v19, v18, v18
  v_rsq_f32     v19, v19
  v_mac_legacy_f32  v11, v10, v10
  v_rsq_f32     v11, v11
  v_mul_legacy_f32  v12, v12, v6
  v_mul_legacy_f32  v20, s16, v6
  v_mul_legacy_f32  v13, v15, v13
  v_mul_legacy_f32  v12, v12, v15
  v_mad_legacy_f32  v20, -s17, v7, -v20
  v_mul_legacy_f32  v21, s36, v6
  v_mac_legacy_f32  v12, v13, v7
  v_mul_legacy_f32  v13, v16, v6
  v_mad_legacy_f32  v21, -s37, v7, -v21
  v_mul_legacy_f32  v22, s40, v6
  v_mul_legacy_f32  v1, v1, v6
  v_mul_legacy_f32  v14, v15, v14
  v_mac_legacy_f32  v20, v8, -s18
  v_mul_legacy_f32  v17, v19, v17
  v_mul_legacy_f32  v13, v13, v19
  v_mad_legacy_f32  v22, -s41, v7, -v22
  v_mac_legacy_f32  v12, v14, v8
  v_mac_legacy_f32  v21, v8, -s38
  v_cmp_gt_f32  vcc, 0, v20
  v_mul_legacy_f32  v18, v19, v18
  v_mac_legacy_f32  v13, v17, v7
  v_mul_legacy_f32  v9, v11, v9
  v_mul_legacy_f32  v1, v1, v11
  v_mac_legacy_f32  v13, v18, v8
  v_mac_legacy_f32  v22, v8, -s42
  v_mul_legacy_f32  v10, v11, v10
  v_mac_legacy_f32  v1, v9, v7
  v_cmp_gt_f32  s[0:1], 0, v21
  v_cndmask_b32  v6, 1.0, 0, vcc
  v_max_f32     v12, 0, v12
  v_mac_legacy_f32  v1, v10, v8
  v_cmp_gt_f32  s[2:3], 0, v22
  v_cndmask_b32  v7, 1.0, 0, s[0:1]
  v_mul_legacy_f32  v9, v6, v20
  v_mul_legacy_f32  v6, v12, v6
  v_max_f32     v13, 0, v13
  v_log_f32     v6, v6
  v_cndmask_b32  v8, 1.0, 0, s[2:3]
  v_max_f32     v1, 0, v1
  v_mul_legacy_f32  v10, v7, v21
  v_mul_legacy_f32  v7, v13, v7
  v_mul_legacy_f32  v1, v1, v8
  v_log_f32     v7, v7
  v_log_f32     v1, v1
  v_mul_legacy_f32  v6, s15, v6
  v_exp_f32     v6, v6
  v_mul_legacy_f32  v7, s15, v7
  v_mul_legacy_f32  v1, s15, v1
  v_exp_f32     v7, v7
  v_exp_f32     v1, v1
  v_mul_legacy_f32  v12, s45, v9
  v_mul_legacy_f32  v11, v8, v22
  v_mul_legacy_f32  v8, s44, v9
  v_mac_legacy_f32  v12, s49, v10
  v_mul_legacy_f32  v9, s46, v9
  v_mac_legacy_f32  v8, s48, v10
  v_mac_legacy_f32  v9, s50, v10
  v_mac_legacy_f32  v12, s21, v11
  v_mul_legacy_f32  v6, v6, v20
  v_mul_legacy_f32  v10, s5, v12
  v_mac_legacy_f32  v8, s20, v11
  v_mac_legacy_f32  v9, s22, v11
  v_mul_legacy_f32  v7, v7, v21
  v_mul_legacy_f32  v11, s24, v6
  v_mul_legacy_f32  v12, s25, v6
  v_mul_legacy_f32  v6, s26, v6
  v_mul_legacy_f32  v8, s4, v8
  v_mul_legacy_f32  v9, s6, v9
  v_mul_legacy_f32  v1, v1, v22
  v_mac_legacy_f32  v11, s28, v7
  v_mac_legacy_f32  v12, s29, v7
  v_mac_legacy_f32  v6, s30, v7
  v_add_f32     v8, s8, v8
  v_add_f32     v10, s9, v10
  v_add_f32     v9, s10, v9
  v_mac_legacy_f32  v12, s33, v1
  v_mac_legacy_f32  v11, s32, v1
  v_mad_legacy_f32  v1, v1, s34, v6
  v_mul_legacy_f32  v2, v8, v2
  v_mul_legacy_f32  v6, v11, v5
  v_mul_legacy_f32  v3, v10, v3
  v_mul_legacy_f32  v7, v12, v5
  v_mul_legacy_f32  v4, v9, v4
  v_mul_legacy_f32  v1, v1, v5
  v_mac_legacy_f32  v2, s12, v6
  v_mac_legacy_f32  v3, s13, v7
  v_mad_legacy_f32  v1, v1, s14, v4
  v_mad_legacy_f32  v4, s56, v5, -v2
  v_mad_legacy_f32  v6, s57, v5, -v3
  v_mad_legacy_f32  v7, s58, v5, -v1
  v_mac_legacy_f32  v2, v4, v0
  v_mac_legacy_f32  v3, v6, v0
  v_mad_legacy_f32  v4, v7, v0, v1
  v_cvt_pkrtz_f16_f32  v0, v2, v3
  v_cvt_pkrtz_f16_f32  v1, v4, v5
  exp           mrt0, v0, v0, v1, v1 done compr vm
  s_endpgm      
end


NumVGPR=23,NumSGPR=62,LDS=0,Scratch=0,Occpancy=8


#endif

const unsigned char BasicEffect_PSBasicPixelLighting[] = {
  0x44, 0x58, 0x42, 0x43, 0x3f, 0x8f, 0x51, 0xf8, 0xff, 0x4b, 0xa4, 0x12,
  0x39, 0x7f, 0x3d, 0xcd, 0x22, 0xc9, 0xf8, 0x69, 0x01, 0x00, 0x00, 0x00,
  0x64, 0x14, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00,
  0x50, 0x00, 0x00, 0x00, 0xd0, 0x00, 0x00, 0x00, 0x0c, 0x01, 0x00, 0x00,
  0x20, 0x02, 0x00, 0x00, 0x54, 0x02, 0x00, 0x00, 0xe8, 0x02, 0x00, 0x00,
  0x04, 0x03, 0x00, 0x00, 0x53, 0x46, 0x49, 0x30, 0x08, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x49, 0x53, 0x47, 0x31,
  0x78, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x68, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x0f, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x68, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x07, 0x07, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x71, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x0f, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x54, 0x45, 0x58, 0x43, 0x4f, 0x4f, 0x52, 0x44, 0x00, 0x43, 0x4f, 0x4c,
  0x4f, 0x52, 0x00, 0x00, 0x4f, 0x53, 0x47, 0x31, 0x34, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x28, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x53, 0x56, 0x5f, 0x54, 0x61, 0x72, 0x67, 0x65,
  0x74, 0x00, 0x00, 0x00, 0x50, 0x53, 0x56, 0x30, 0x0c, 0x01, 0x00, 0x00,
  0x34, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x03, 0x01, 0x00, 0x03,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x19, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x18, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x00, 0x54, 0x45, 0x58,
  0x43, 0x4f, 0x4f, 0x52, 0x44, 0x00, 0x54, 0x45, 0x58, 0x43, 0x4f, 0x4f,
  0x52, 0x44, 0x00, 0x43, 0x4f, 0x4c, 0x4f, 0x52, 0x00, 0x50, 0x53, 0x42,
  0x61, 0x73, 0x69, 0x63, 0x50, 0x69, 0x78, 0x65, 0x6c, 0x4c, 0x69, 0x67,
  0x68, 0x74, 0x69, 0x6e, 0x67, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x44, 0x00,
  0x03, 0x02, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x01, 0x01, 0x43, 0x00, 0x03, 0x02, 0x00, 0x00, 0x13, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x02, 0x44, 0x00, 0x03, 0x02, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x44, 0x10,
  0x03, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00,
  0x07, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00,
  0x07, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00,
  0x0f, 0x00, 0x00, 0x00, 0x52, 0x54, 0x53, 0x30, 0x2c, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x2c, 0x00, 0x00, 0x00, 0x1d, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x24, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x49, 0x4c, 0x44, 0x4e,
  0x8c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x85, 0x00, 0x43, 0x3a, 0x5c, 0x55,
  0x73, 0x65, 0x72, 0x73, 0x5c, 0x6d, 0x61, 0x72, 0x63, 0x75, 0x5c, 0x44,
  0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x73, 0x5c, 0x44, 0x69, 0x72,
  0x65, 0x63, 0x74, 0x58, 0x54, 0x4b, 0x31, 0x32, 0x2d, 0x6d, 0x61, 0x69,
  0x6e, 0x5c, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x58, 0x54, 0x4b, 0x31,
  0x32, 0x2d, 0x6d, 0x61, 0x69, 0x6e, 0x5c, 0x53, 0x72, 0x63, 0x2f, 0x53,
  0x68, 0x61, 0x64, 0x65, 0x72, 0x73, 0x2f, 0x43, 0x6f, 0x6d, 0x70, 0x69,
  0x6c, 0x65, 0x64, 0x5c, 0x58, 0x62, 0x6f, 0x78, 0x47, 0x61, 0x6d, 0x69,
  0x6e, 0x67, 0x58, 0x62, 0x6f, 0x78, 0x4f, 0x6e, 0x65, 0x42, 0x61, 0x73,
  0x69, 0x63, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x5f, 0x50, 0x53, 0x42,
  0x61, 0x73, 0x69, 0x63, 0x50, 0x69, 0x78, 0x65, 0x6c, 0x4c, 0x69, 0x67,
  0x68, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x64, 0x62, 0x00, 0x00, 0x00,
  0x48, 0x41, 0x53, 0x48, 0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xbe, 0x77, 0xed, 0x09, 0x64, 0x92, 0x55, 0x83, 0xe2, 0x05, 0x6f, 0xf7,
  0x20, 0xd0, 0x31, 0x53, 0x44, 0x58, 0x49, 0x4c, 0x58, 0x11, 0x00, 0x00,
  0x60, 0x00, 0x00, 0x00, 0x56, 0x04, 0x00, 0x00, 0x44, 0x58, 0x49, 0x4c,
  0x00, 0x01, 0x00, 0x00, 0x7c, 0x00, 0x00, 0x00, 0x88, 0x0c, 0x00, 0x00,
  0x58, 0x44, 0x41, 0x54, 0x06, 0x00, 0x00, 0x00, 0x24, 0x00, 0x00, 0x00,
  0x07, 0x00, 0x00, 0x00, 0x6c, 0x00, 0x00, 0x00, 0xa0, 0x0c, 0x00, 0x00,
  0x10, 0x00, 0x00, 0x00, 0x0c, 0x0d, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x1c, 0x0d, 0x00, 0x00, 0xbf, 0x03, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0xdc, 0x10, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00,
  0x06, 0x00, 0x00, 0x00, 0x1c, 0x11, 0x00, 0x00, 0x28, 0x00, 0x00, 0x00,
  0x08, 0x00, 0x00, 0x00, 0x44, 0x11, 0x00, 0x00, 0x11, 0x00, 0x00, 0x00,
  0x60, 0x00, 0x00, 0x00, 0x28, 0x03, 0x00, 0x00, 0x44, 0x58, 0x49, 0x4c,
  0x00, 0x01, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x88, 0x0c, 0x00, 0x00,
  0x42, 0x43, 0xc0, 0xde, 0x21, 0x0c, 0x00, 0x00, 0x1f, 0x03, 0x00, 0x00,
  0x0b, 0x82, 0x20, 0x00, 0x02, 0x00, 0x00, 0x00, 0x13, 0x00, 0x00, 0x00,
  0x07, 0x81, 0x23, 0x91, 0x41, 0xc8, 0x04, 0x49, 0x06, 0x10, 0x32, 0x39,
  0x92, 0x01, 0x84, 0x0c, 0x25, 0x05, 0x08, 0x19, 0x1e, 0x04, 0x8b, 0x62,
  0x80, 0x18, 0x45, 0x02, 0x42, 0x92, 0x0b, 0x42, 0xc4, 0x10, 0x32, 0x14,
  0x38, 0x08, 0x18, 0x4b, 0x0a, 0x32, 0x62, 0x88, 0x48, 0x90, 0x14, 0x20,
  0x43, 0x46, 0x88, 0xa5, 0x00, 0x19, 0x32, 0x42, 0xe4, 0x48, 0x0e, 0x90,
  0x11, 0x23, 0xc4, 0x50, 0x41, 0x51, 0x81, 0x8c, 0xe1, 0x83, 0xe5, 0x8a,
  0x04, 0x31, 0x46, 0x06, 0x51, 0x18, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00,
  0x1b, 0x8c, 0xe0, 0xff, 0xff, 0xff, 0xff, 0x07, 0x40, 0x02, 0xa8, 0x0d,
  0x84, 0xf0, 0xff, 0xff, 0xff, 0xff, 0x03, 0x20, 0x6d, 0x30, 0x86, 0xff,
  0xff, 0xff, 0xff, 0x1f, 0x00, 0x09, 0xa8, 0x00, 0x49, 0x18, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x13, 0x82, 0x60, 0x42, 0x20, 0x4c, 0x08, 0x06,
  0x00, 0x00, 0x00, 0x00, 0x89, 0x20, 0x00, 0x00, 0x2e, 0x00, 0x00, 0x00,
  0x32, 0x22, 0x88, 0x09, 0x20, 0x64, 0x85, 0x04, 0x13, 0x23, 0xa4, 0x84,
  0x04, 0x13, 0x23, 0xe3, 0x84, 0xa1, 0x90, 0x14, 0x12, 0x4c, 0x8c, 0x8c,
  0x0b, 0x84, 0xc4, 0x4c, 0x10, 0x88, 0xc1, 0x08, 0x40, 0x09, 0x00, 0x0a,
  0x66, 0x00, 0xe6, 0x08, 0xc0, 0x60, 0x8e, 0x00, 0x29, 0xc6, 0x40, 0x10,
  0x44, 0x41, 0x90, 0x51, 0x0c, 0x80, 0x20, 0x88, 0x62, 0x20, 0xa4, 0x20,
  0x03, 0x31, 0x0c, 0xc3, 0x30, 0x0c, 0xa4, 0x94, 0x61, 0x20, 0x06, 0x62,
  0x0a, 0x31, 0x10, 0xc3, 0x40, 0xce, 0x51, 0xc3, 0xe5, 0x4f, 0xd8, 0x43,
  0x48, 0x3e, 0xb7, 0x51, 0xc5, 0x4a, 0x4c, 0x7e, 0x71, 0xdb, 0x88, 0x18,
  0x86, 0x61, 0xa0, 0xe2, 0x9e, 0xe1, 0xf2, 0x27, 0xec, 0x21, 0x24, 0x3f,
  0x04, 0x9a, 0x61, 0x21, 0x50, 0x10, 0x15, 0x02, 0x22, 0x24, 0x82, 0xa6,
  0x52, 0x0c, 0xc4, 0x30, 0x0c, 0x54, 0xcd, 0x11, 0x04, 0xc5, 0x90, 0x88,
  0x82, 0x20, 0x2e, 0xc2, 0x06, 0x02, 0x86, 0x11, 0x88, 0x61, 0x18, 0x61,
  0x18, 0x72, 0x80, 0x4b, 0x82, 0xed, 0xaa, 0xc3, 0x91, 0xa6, 0x05, 0xc0,
  0x1c, 0x6a, 0xf2, 0x53, 0x20, 0x02, 0x18, 0x62, 0x22, 0x22, 0x09, 0x35,
  0x1b, 0xc7, 0x0d, 0x5d, 0xd7, 0x71, 0xdc, 0xe6, 0x75, 0x1e, 0x7d, 0xe9,
  0x40, 0x00, 0x00, 0x00, 0x13, 0x16, 0x72, 0xc0, 0x87, 0x74, 0x60, 0x87,
  0x36, 0x68, 0x87, 0x79, 0x68, 0x03, 0x7c, 0x10, 0x87, 0x38, 0xd8, 0xf0,
  0x0a, 0xe5, 0xd0, 0x06, 0xed, 0xa0, 0x07, 0xe5, 0xd0, 0x06, 0xf0, 0xa0,
  0x07, 0x73, 0x20, 0x07, 0x7a, 0x30, 0x07, 0x72, 0xd0, 0x06, 0xe9, 0x10,
  0x07, 0x7a, 0x30, 0x07, 0x72, 0xd0, 0x06, 0xe9, 0x80, 0x07, 0x7a, 0x30,
  0x07, 0x72, 0xd0, 0x06, 0xe9, 0x10, 0x07, 0x76, 0xa0, 0x07, 0x73, 0x20,
  0x07, 0x6d, 0x90, 0x0e, 0x73, 0x20, 0x07, 0x7a, 0x30, 0x07, 0x72, 0xd0,
  0x06, 0xe9, 0x60, 0x07, 0x74, 0xa0, 0x07, 0x76, 0x40, 0x07, 0x6d, 0x60,
  0x0e, 0x71, 0x60, 0x07, 0x7a, 0x30, 0x07, 0x72, 0xd0, 0x06, 0xe6, 0x30,
  0x07, 0x72, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x60, 0x0e, 0x76, 0x40,
  0x07, 0x7a, 0x60, 0x07, 0x74, 0xd0, 0x06, 0xee, 0x80, 0x07, 0x7a, 0x10,
  0x07, 0x76, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x7a, 0x60, 0x07, 0x74, 0x30,
  0xe4, 0x09, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x60, 0xc8, 0x63, 0x00, 0x01, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0xc0, 0x90, 0x07, 0x01, 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x80, 0x21, 0x8f, 0x02, 0x04, 0x40, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x43, 0x1e, 0x06, 0x08, 0x80, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x86, 0x3c, 0x0e, 0x10, 0x00, 0x01, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x79, 0x26, 0x20, 0x00, 0x06,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0xf2, 0x54, 0x40, 0x00,
  0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0xe4, 0xc1, 0x80,
  0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x0b, 0x04,
  0x0f, 0x00, 0x00, 0x00, 0x32, 0x1e, 0x98, 0x14, 0x19, 0x11, 0x4c, 0x90,
  0x8c, 0x09, 0x26, 0x47, 0xc6, 0x04, 0x43, 0x22, 0x4a, 0x60, 0x04, 0xa0,
  0x20, 0x8a, 0xa1, 0x80, 0x0d, 0xca, 0xa0, 0x3c, 0xca, 0xa1, 0x08, 0xa8,
  0x28, 0x89, 0x11, 0x80, 0x22, 0x28, 0x84, 0x32, 0x28, 0x10, 0x02, 0x67,
  0x00, 0x28, 0x1c, 0xcb, 0x61, 0x88, 0xe3, 0x38, 0x8e, 0xe3, 0x38, 0x80,
  0x40, 0x20, 0x1e, 0x00, 0x79, 0x18, 0x00, 0x00, 0x72, 0x00, 0x00, 0x00,
  0x1a, 0x03, 0x4c, 0x90, 0x46, 0x02, 0x13, 0xc4, 0x36, 0xf8, 0xfa, 0xc2,
  0x12, 0x7a, 0xc2, 0xfa, 0x82, 0x2a, 0x92, 0xfa, 0xa2, 0x42, 0x92, 0x2a,
  0x0a, 0x22, 0xfa, 0x9a, 0x1a, 0x92, 0x0a, 0xa2, 0x1a, 0x42, 0xfa, 0x9a,
  0x4a, 0xd2, 0x2a, 0xfa, 0x62, 0x4a, 0x6a, 0x4a, 0xa2, 0xfa, 0x4a, 0x72,
  0xfa, 0x12, 0xca, 0xa2, 0x2a, 0x9a, 0x62, 0x00, 0xb3, 0x41, 0x08, 0x04,
  0x76, 0x64, 0x78, 0x63, 0x78, 0x62, 0x6f, 0x78, 0x20, 0x32, 0x34, 0x31,
  0x30, 0x2e, 0x32, 0x34, 0x31, 0x30, 0x2e, 0x31, 0x31, 0x31, 0x31, 0x36,
  0x2e, 0x31, 0x30, 0x37, 0x34, 0x31, 0x1b, 0x02, 0x62, 0x82, 0x40, 0x24,
  0x13, 0x04, 0x42, 0xd9, 0x20, 0x18, 0xc7, 0x04, 0x81, 0x58, 0x36, 0x08,
  0x46, 0x42, 0x01, 0x6e, 0x6e, 0x82, 0x40, 0x30, 0x1b, 0x86, 0x85, 0x39,
  0x26, 0x08, 0x60, 0x80, 0x11, 0x98, 0x20, 0x10, 0xcd, 0x06, 0xe4, 0x70,
  0x9e, 0xe3, 0x30, 0x20, 0x60, 0x43, 0x10, 0x6d, 0x20, 0x00, 0x40, 0x02,
  0x26, 0x08, 0x61, 0x90, 0x6d, 0x08, 0xa8, 0x09, 0x82, 0x00, 0x90, 0x82,
  0x9a, 0x12, 0x0a, 0x9b, 0x4b, 0x1b, 0x83, 0x4a, 0xc3, 0x2b, 0x63, 0x63,
  0x4a, 0x3b, 0x43, 0xa3, 0x4b, 0x73, 0x3b, 0x23, 0x42, 0x55, 0x84, 0x35,
  0xf4, 0xf4, 0x24, 0x45, 0x34, 0x41, 0x28, 0xa4, 0x09, 0x42, 0x31, 0x6d,
  0x08, 0x8e, 0x09, 0x42, 0x41, 0x4d, 0x10, 0x8a, 0x6a, 0x82, 0x40, 0x38,
  0x13, 0x04, 0xe2, 0xd9, 0x20, 0x78, 0xdf, 0x86, 0xe5, 0xc0, 0x32, 0x6d,
  0xe3, 0x8c, 0xee, 0xd0, 0xc0, 0x60, 0x43, 0x60, 0x4c, 0x10, 0x0a, 0x6b,
  0x82, 0x40, 0x40, 0x1b, 0x04, 0x8f, 0x0c, 0x36, 0x2c, 0x06, 0x96, 0x69,
  0x62, 0xc0, 0x19, 0x63, 0x60, 0x68, 0x65, 0x30, 0x41, 0x20, 0x22, 0x16,
  0x43, 0x4f, 0x4c, 0x4f, 0x52, 0x1b, 0x96, 0x33, 0x40, 0x83, 0x4c, 0xdb,
  0x38, 0xa3, 0x3b, 0x03, 0x0d, 0x0c, 0x36, 0x0c, 0x61, 0x60, 0x06, 0x69,
  0xc0, 0x64, 0xca, 0xea, 0x8b, 0x2a, 0x4c, 0xee, 0xac, 0x8c, 0x6e, 0x82,
  0x50, 0x5c, 0x1b, 0x96, 0x63, 0x0d, 0x32, 0x36, 0xd8, 0x34, 0xa3, 0x3b,
  0x34, 0x30, 0xd8, 0x10, 0xb4, 0xc1, 0x86, 0x41, 0x0d, 0xdc, 0x00, 0xd8,
  0x50, 0x58, 0xd7, 0x1b, 0x4c, 0x40, 0x2b, 0x3c, 0xb1, 0x37, 0x3c, 0x97,
  0xb1, 0xb7, 0x36, 0xb8, 0x34, 0xb6, 0x32, 0x39, 0x97, 0x37, 0x38, 0xba,
  0xb4, 0x37, 0xb7, 0xb9, 0x29, 0x81, 0x50, 0x85, 0x8d, 0xcd, 0xae, 0xcd,
  0x25, 0x8d, 0xac, 0xcc, 0x8d, 0x6e, 0x4a, 0x40, 0x54, 0x21, 0xc3, 0x73,
  0xb1, 0x2b, 0x93, 0x9b, 0x4b, 0x7b, 0x73, 0x9b, 0x12, 0x1c, 0x4d, 0xc8,
  0xf0, 0x5c, 0xec, 0xc2, 0xd8, 0xec, 0xca, 0xe4, 0xa6, 0x04, 0x49, 0x1d,
  0x32, 0x3c, 0x97, 0x39, 0xb4, 0x30, 0xb2, 0x32, 0xb9, 0xa6, 0x37, 0xb2,
  0x32, 0xb6, 0x29, 0x01, 0x53, 0x86, 0x0c, 0xcf, 0x45, 0xae, 0x6c, 0xee,
  0xad, 0x4e, 0x6e, 0xac, 0x6c, 0x6e, 0x4a, 0x20, 0xd5, 0x21, 0xc3, 0x73,
  0xb1, 0x4b, 0x2b, 0xbb, 0x4b, 0x22, 0x9b, 0xa2, 0x0b, 0xa3, 0x2b, 0x9b,
  0x12, 0x50, 0x75, 0xc8, 0xf0, 0x5c, 0xca, 0xdc, 0xe8, 0xe4, 0xf2, 0xa0,
  0xde, 0xd2, 0xdc, 0xe8, 0xe6, 0xa6, 0x04, 0x6f, 0x00, 0x00, 0x00, 0x00,
  0x79, 0x18, 0x00, 0x00, 0x50, 0x00, 0x00, 0x00, 0x33, 0x08, 0x80, 0x1c,
  0xc4, 0xe1, 0x1c, 0x66, 0x14, 0x01, 0x3d, 0x88, 0x43, 0x38, 0x84, 0xc3,
  0x8c, 0x42, 0x80, 0x07, 0x79, 0x78, 0x07, 0x73, 0x98, 0x71, 0x0c, 0xe6,
  0x00, 0x0f, 0xed, 0x10, 0x0e, 0xf4, 0x80, 0x0e, 0x33, 0x0c, 0x42, 0x1e,
  0xc2, 0xc1, 0x1d, 0xce, 0xa1, 0x1c, 0x66, 0x30, 0x05, 0x3d, 0x88, 0x43,
  0x38, 0x84, 0x83, 0x1b, 0xcc, 0x03, 0x3d, 0xc8, 0x43, 0x3d, 0x8c, 0x03,
  0x3d, 0xcc, 0x78, 0x8c, 0x74, 0x70, 0x07, 0x7b, 0x08, 0x07, 0x79, 0x48,
  0x87, 0x70, 0x70, 0x07, 0x7a, 0x70, 0x03, 0x76, 0x78, 0x87, 0x70, 0x20,
  0x87, 0x19, 0xcc, 0x11, 0x0e, 0xec, 0x90, 0x0e, 0xe1, 0x30, 0x0f, 0x6e,
  0x30, 0x0f, 0xe3, 0xf0, 0x0e, 0xf0, 0x50, 0x0e, 0x33, 0x10, 0xc4, 0x1d,
  0xde, 0x21, 0x1c, 0xd8, 0x21, 0x1d, 0xc2, 0x61, 0x1e, 0x66, 0x30, 0x89,
  0x3b, 0xbc, 0x83, 0x3b, 0xd0, 0x43, 0x39, 0xb4, 0x03, 0x3c, 0xbc, 0x83,
  0x3c, 0x84, 0x03, 0x3b, 0xcc, 0xf0, 0x14, 0x76, 0x60, 0x07, 0x7b, 0x68,
  0x07, 0x37, 0x68, 0x87, 0x72, 0x68, 0x07, 0x37, 0x80, 0x87, 0x70, 0x90,
  0x87, 0x70, 0x60, 0x07, 0x76, 0x28, 0x07, 0x76, 0xf8, 0x05, 0x76, 0x78,
  0x87, 0x77, 0x80, 0x87, 0x5f, 0x08, 0x87, 0x71, 0x18, 0x87, 0x72, 0x98,
  0x87, 0x79, 0x98, 0x81, 0x2c, 0xee, 0xf0, 0x0e, 0xee, 0xe0, 0x0e, 0xf5,
  0xc0, 0x0e, 0xec, 0x30, 0x03, 0x62, 0xc8, 0xa1, 0x1c, 0xe4, 0xa1, 0x1c,
  0xcc, 0xa1, 0x1c, 0xe4, 0xa1, 0x1c, 0xdc, 0x61, 0x1c, 0xca, 0x21, 0x1c,
  0xc4, 0x81, 0x1d, 0xca, 0x61, 0x06, 0xd6, 0x90, 0x43, 0x39, 0xc8, 0x43,
  0x39, 0x98, 0x43, 0x39, 0xc8, 0x43, 0x39, 0xb8, 0xc3, 0x38, 0x94, 0x43,
  0x38, 0x88, 0x03, 0x3b, 0x94, 0xc3, 0x2f, 0xbc, 0x83, 0x3c, 0xfc, 0x82,
  0x3b, 0xd4, 0x03, 0x3b, 0xb0, 0xc3, 0x0c, 0xc4, 0x21, 0x07, 0x7c, 0x70,
  0x03, 0x7a, 0x28, 0x87, 0x76, 0x80, 0x87, 0x19, 0xca, 0xc3, 0x0e, 0xec,
  0x60, 0x0f, 0xed, 0xe0, 0x06, 0xec, 0xf0, 0x0e, 0xef, 0x00, 0x0f, 0x33,
  0x22, 0x88, 0x1c, 0xf0, 0xc1, 0x0d, 0xc8, 0x41, 0x1c, 0xce, 0xc1, 0x0d,
  0xec, 0x21, 0x1c, 0xe4, 0x81, 0x1d, 0xc2, 0x21, 0x1f, 0xde, 0xa1, 0x1e,
  0xe8, 0x01, 0x00, 0x00, 0x71, 0x20, 0x00, 0x00, 0x25, 0x00, 0x00, 0x00,
  0x06, 0x40, 0xa5, 0xec, 0x06, 0x48, 0x88, 0x90, 0x22, 0x17, 0xb1, 0x94,
  0x88, 0x71, 0x4c, 0x48, 0x63, 0x58, 0x01, 0x34, 0x5c, 0xbe, 0xf3, 0xf8,
  0x01, 0xd2, 0x00, 0x11, 0xe6, 0x17, 0xb7, 0x6d, 0x06, 0xdb, 0x70, 0xf9,
  0xce, 0xe3, 0x0b, 0x01, 0x55, 0x14, 0x44, 0x54, 0x3a, 0xc0, 0x50, 0x12,
  0x06, 0x20, 0x60, 0x7e, 0x71, 0xdb, 0x86, 0x20, 0x0d, 0x97, 0xef, 0x3c,
  0xbe, 0x10, 0x11, 0xc0, 0x44, 0x84, 0x40, 0x33, 0x2c, 0x84, 0x0d, 0x38,
  0xc3, 0xe5, 0x3b, 0x8f, 0x3f, 0x38, 0xd3, 0xed, 0x17, 0xb7, 0x6d, 0x01,
  0xd3, 0x70, 0xf9, 0xce, 0xe3, 0x2f, 0x0e, 0x30, 0x88, 0xcd, 0x43, 0x4d,
  0x7e, 0x71, 0xdb, 0x26, 0x50, 0x0d, 0x97, 0xef, 0x3c, 0xbe, 0x34, 0x39,
  0x11, 0x81, 0x52, 0xd3, 0x43, 0x4d, 0x7e, 0x71, 0xdb, 0x76, 0x20, 0x0d,
  0x97, 0xef, 0x3c, 0xfe, 0x44, 0x44, 0x13, 0x02, 0x44, 0x98, 0x5f, 0xdc,
  0xb6, 0x11, 0x3c, 0xc3, 0xe5, 0x3b, 0x8f, 0x4f, 0x35, 0x40, 0x84, 0xf9,
  0xc5, 0x6d, 0x03, 0x00, 0x61, 0x20, 0x00, 0x00, 0x89, 0x01, 0x00, 0x00,
  0x13, 0x04, 0x41, 0x2c, 0x10, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00,
  0x74, 0x8d, 0x00, 0x50, 0x51, 0x02, 0x44, 0x94, 0x46, 0x71, 0x95, 0x5d,
  0x21, 0xcc, 0x00, 0x94, 0x5b, 0xc9, 0x94, 0x42, 0x19, 0x95, 0x4b, 0xa9,
  0x94, 0x5c, 0x61, 0x94, 0x44, 0x51, 0x94, 0x05, 0x0d, 0x63, 0x04, 0x20,
  0x08, 0x82, 0xf8, 0x37, 0x02, 0x30, 0x46, 0x00, 0x82, 0x20, 0x08, 0x82,
  0x02, 0x00, 0x00, 0x00, 0x23, 0x06, 0x09, 0x00, 0x82, 0x60, 0x80, 0x9d,
  0x01, 0xb2, 0x95, 0x41, 0x19, 0x54, 0x23, 0x06, 0x09, 0x00, 0x82, 0x60,
  0x60, 0xbc, 0x41, 0xf4, 0x99, 0x41, 0x07, 0x8d, 0x18, 0x24, 0x00, 0x08,
  0x82, 0x81, 0x01, 0x07, 0x12, 0x18, 0x9c, 0x81, 0x15, 0x8d, 0x18, 0x24,
  0x00, 0x08, 0x82, 0x81, 0x11, 0x07, 0x53, 0x18, 0xa0, 0x81, 0x27, 0x8d,
  0x18, 0x24, 0x00, 0x08, 0x82, 0x81, 0x21, 0x07, 0x94, 0x18, 0xa4, 0x41,
  0x37, 0x8d, 0x18, 0x24, 0x00, 0x08, 0x82, 0x81, 0x31, 0x07, 0xd5, 0x1a,
  0xa8, 0x41, 0x18, 0x50, 0x23, 0x06, 0x09, 0x00, 0x82, 0x60, 0x60, 0xd0,
  0x81, 0xc5, 0x06, 0x6b, 0xa0, 0x55, 0x23, 0x06, 0x09, 0x00, 0x82, 0x60,
  0x60, 0xd4, 0xc1, 0xd5, 0x06, 0x6c, 0x20, 0x06, 0xd6, 0x88, 0x41, 0x02,
  0x80, 0x20, 0x18, 0x18, 0x76, 0x80, 0xb5, 0x41, 0x1b, 0x90, 0xc1, 0x35,
  0x62, 0x90, 0x00, 0x20, 0x08, 0x06, 0xc6, 0x1d, 0x64, 0x6e, 0xe0, 0x06,
  0x1d, 0x36, 0x62, 0x90, 0x00, 0x20, 0x08, 0x06, 0x06, 0x1e, 0x68, 0x6f,
  0xf0, 0x06, 0x65, 0x90, 0x8d, 0x18, 0x24, 0x00, 0x08, 0x82, 0x81, 0x91,
  0x07, 0x1b, 0x1c, 0xc0, 0x01, 0x19, 0x68, 0x23, 0x06, 0x07, 0x00, 0x82,
  0x60, 0x30, 0xd5, 0x41, 0xc7, 0x4c, 0xa3, 0x09, 0x01, 0x30, 0x9a, 0x20,
  0x04, 0xa3, 0x09, 0x83, 0x60, 0x03, 0x12, 0x1f, 0x1b, 0x90, 0xf8, 0xd8,
  0x80, 0xc4, 0x67, 0xc4, 0x60, 0x01, 0x40, 0x10, 0x0c, 0x94, 0x3f, 0x08,
  0x83, 0x41, 0x08, 0x06, 0x21, 0x18, 0x31, 0x30, 0x00, 0x10, 0x04, 0x03,
  0xe6, 0x0f, 0xc2, 0x20, 0xb0, 0x22, 0x90, 0x8f, 0x15, 0x82, 0x7c, 0xac,
  0x18, 0xe4, 0x33, 0x62, 0xb0, 0x00, 0x20, 0x08, 0x06, 0x0a, 0x29, 0x98,
  0xc1, 0x24, 0x45, 0x93, 0x14, 0x8d, 0x18, 0x18, 0x00, 0x08, 0x82, 0x01,
  0x43, 0x0a, 0x66, 0x10, 0x58, 0x50, 0xc9, 0xc7, 0x84, 0x4a, 0x3e, 0x36,
  0x54, 0xf2, 0x19, 0x31, 0x38, 0x00, 0x10, 0x04, 0x83, 0xc9, 0x14, 0xdc,
  0xa0, 0xf3, 0x83, 0xd1, 0x84, 0x00, 0x18, 0x4d, 0x10, 0x82, 0xd1, 0x84,
  0x41, 0x18, 0x31, 0x38, 0x00, 0x10, 0x04, 0x83, 0x49, 0x15, 0xe4, 0x20,
  0x0c, 0x48, 0x61, 0x34, 0x21, 0x00, 0x46, 0x13, 0x84, 0x60, 0x34, 0x61,
  0x10, 0x46, 0x0c, 0x0e, 0x00, 0x04, 0xc1, 0x60, 0x72, 0x05, 0x3b, 0x28,
  0x83, 0x35, 0x18, 0x4d, 0x08, 0x80, 0xd1, 0x04, 0x21, 0x18, 0x4d, 0x18,
  0x04, 0xa3, 0x96, 0xf8, 0x18, 0xb5, 0xc4, 0xc7, 0xa8, 0x25, 0x3e, 0x23,
  0x06, 0x0b, 0x00, 0x82, 0x60, 0xa0, 0xe0, 0x82, 0x1e, 0x0c, 0x42, 0x30,
  0x08, 0xc1, 0x88, 0x81, 0x01, 0x80, 0x20, 0x18, 0x30, 0xb8, 0xa0, 0x07,
  0x81, 0x05, 0x84, 0x7c, 0x4c, 0x20, 0xe4, 0x33, 0x62, 0x70, 0x00, 0x20,
  0x08, 0x06, 0x53, 0x2e, 0x84, 0x02, 0x1c, 0x80, 0xc2, 0x68, 0x42, 0x00,
  0x8c, 0x26, 0x08, 0xc1, 0x68, 0xc2, 0x20, 0x8c, 0x18, 0x1c, 0x00, 0x08,
  0x82, 0xc1, 0xd4, 0x0b, 0xa5, 0x40, 0x07, 0xb3, 0x30, 0x9a, 0x10, 0x00,
  0xa3, 0x09, 0x42, 0x30, 0x9a, 0x30, 0x08, 0x23, 0x06, 0x07, 0x00, 0x82,
  0x60, 0x30, 0x85, 0x43, 0x2a, 0xe0, 0x41, 0x1f, 0x8c, 0x26, 0x04, 0xc0,
  0x68, 0x82, 0x10, 0x8c, 0x26, 0x0c, 0x82, 0x9d, 0xc1, 0x12, 0x1f, 0x3b,
  0x83, 0x25, 0x3e, 0x76, 0x06, 0x4b, 0x7c, 0x46, 0x0c, 0x16, 0x00, 0x04,
  0xc1, 0x40, 0x59, 0x87, 0x56, 0x18, 0x84, 0x60, 0x10, 0x82, 0x11, 0x03,
  0x03, 0x00, 0x41, 0x30, 0x60, 0xd6, 0xa1, 0x15, 0x02, 0x0b, 0x08, 0xf9,
  0x98, 0x40, 0xc8, 0x67, 0xc4, 0xe0, 0x00, 0x40, 0x10, 0x0c, 0x26, 0x76,
  0xa0, 0x85, 0x51, 0x78, 0x85, 0xd1, 0x84, 0x00, 0x18, 0x4d, 0x10, 0x82,
  0xd1, 0x84, 0x41, 0x18, 0x31, 0x38, 0x00, 0x10, 0x04, 0x83, 0x09, 0x1e,
  0x70, 0xe1, 0x14, 0xd6, 0x61, 0x34, 0x21, 0x00, 0x46, 0x13, 0x84, 0x60,
  0x34, 0x61, 0x10, 0x46, 0x0c, 0x0e, 0x00, 0x04, 0xc1, 0x60, 0xa2, 0x07,
  0x5e, 0x58, 0x85, 0x57, 0x18, 0x4d, 0x08, 0x80, 0xd1, 0x04, 0x21, 0x18,
  0x4d, 0x18, 0x04, 0xd3, 0x83, 0x25, 0x3e, 0xa6, 0x07, 0x4b, 0x7c, 0x4c,
  0x0f, 0x96, 0xf8, 0x8c, 0x18, 0x2c, 0x00, 0x08, 0x82, 0x81, 0xe2, 0x0f,
  0xe0, 0x30, 0x08, 0xc1, 0x20, 0x04, 0x23, 0x06, 0x06, 0x00, 0x82, 0x60,
  0xc0, 0xf8, 0x03, 0x38, 0x04, 0x16, 0x10, 0xf2, 0x31, 0x81, 0x90, 0x8f,
  0xdd, 0xc2, 0x1d, 0xc4, 0xc7, 0x70, 0xe1, 0x0e, 0xe2, 0x63, 0xb9, 0x60,
  0x06, 0xf1, 0x31, 0x5d, 0x30, 0x83, 0xf8, 0xd8, 0x2e, 0x54, 0xf1, 0x31,
  0x5e, 0xa8, 0xe2, 0x63, 0xa2, 0xe0, 0x07, 0xf2, 0x31, 0x5f, 0x08, 0xe2,
  0x33, 0x62, 0x80, 0x00, 0x20, 0x08, 0x06, 0x95, 0x49, 0xc0, 0x03, 0x32,
  0x0a, 0xc1, 0x88, 0x01, 0x02, 0x80, 0x20, 0x18, 0x54, 0x27, 0x11, 0x0f,
  0xc8, 0x28, 0x04, 0x66, 0x0a, 0x6f, 0x20, 0x1f, 0x13, 0x87, 0x20, 0x3e,
  0x23, 0x06, 0x08, 0x00, 0x82, 0x60, 0x50, 0xa9, 0x04, 0x3d, 0x28, 0xa7,
  0x10, 0x8c, 0x18, 0x20, 0x00, 0x08, 0x82, 0x41, 0xb5, 0x12, 0xf5, 0xa0,
  0x9c, 0x42, 0x60, 0xaa, 0x00, 0x06, 0xf2, 0x31, 0x73, 0x08, 0xe2, 0x33,
  0x62, 0x80, 0x00, 0x20, 0x08, 0x06, 0x95, 0x4b, 0xe0, 0x03, 0xb3, 0x0a,
  0xc1, 0x88, 0x01, 0x02, 0x80, 0x20, 0x18, 0x54, 0x2f, 0x91, 0x0f, 0xcc,
  0x2a, 0x04, 0xf6, 0x07, 0xae, 0x20, 0x1f, 0x0b, 0xf8, 0x40, 0x3e, 0x23,
  0x06, 0x08, 0x00, 0x82, 0x60, 0x50, 0xc9, 0x04, 0x3f, 0xf0, 0xc1, 0x2b,
  0x04, 0x23, 0x06, 0x08, 0x00, 0x82, 0x60, 0x50, 0xcd, 0x44, 0x3f, 0xf0,
  0xc1, 0x2b, 0x04, 0x06, 0x07, 0xb2, 0x20, 0x1f, 0x0b, 0xda, 0x40, 0x3e,
  0x23, 0x06, 0x08, 0x00, 0x82, 0x60, 0x50, 0xd9, 0x04, 0x48, 0xb4, 0xc1,
  0x2c, 0x04, 0x23, 0x06, 0x08, 0x00, 0x82, 0x60, 0x50, 0xdd, 0x44, 0x48,
  0xb4, 0xc1, 0x2c, 0x04, 0x16, 0x06, 0xb6, 0x20, 0x1f, 0x0b, 0x3c, 0xf9,
  0x8c, 0x18, 0x20, 0x00, 0x08, 0x82, 0x41, 0xa5, 0x13, 0x24, 0xe1, 0xdd,
  0x42, 0x30, 0x62, 0x80, 0x00, 0x20, 0x08, 0x06, 0xd5, 0x4e, 0x94, 0x84,
  0x77, 0x0b, 0xc1, 0x70, 0x44, 0x65, 0x0f, 0xc4, 0x37, 0x1c, 0x21, 0xdd,
  0x03, 0xf1, 0x0d, 0x47, 0x3c, 0xf8, 0x40, 0x7c, 0xd3, 0x0d, 0xf9, 0xa0,
  0x0f, 0xc3, 0x74, 0x83, 0x3e, 0xec, 0xc3, 0x30, 0xdd, 0xb0, 0x0f, 0xfc,
  0x30, 0xd8, 0xb0, 0xc9, 0xc7, 0x06, 0x4c, 0x3e, 0x36, 0x54, 0xf2, 0x19,
  0x31, 0x38, 0x00, 0x10, 0x04, 0x83, 0xc9, 0x2c, 0x5c, 0xa2, 0x1f, 0x76,
  0x62, 0x34, 0x21, 0x18, 0x46, 0x0c, 0x0e, 0x00, 0x04, 0xc1, 0xc0, 0x49,
  0x0b, 0x95, 0xa0, 0x42, 0x62, 0xc4, 0xe0, 0x00, 0x40, 0x10, 0x0c, 0x1c,
  0xb5, 0x58, 0x89, 0x48, 0x24, 0x46, 0x0c, 0x0e, 0x00, 0x04, 0xc1, 0xc0,
  0x59, 0x0b, 0x96, 0x70, 0x46, 0xc2, 0x86, 0x45, 0x3e, 0x36, 0x2c, 0xf2,
  0xb1, 0x61, 0x91, 0xcf, 0x88, 0x81, 0x01, 0x80, 0x20, 0x18, 0x30, 0x70,
  0xf1, 0x12, 0xc3, 0x88, 0x81, 0x01, 0x80, 0x20, 0x18, 0x30, 0x71, 0x01,
  0x13, 0xc3, 0x88, 0x81, 0x01, 0x80, 0x20, 0x18, 0x30, 0x72, 0x11, 0x13,
  0x83, 0x0d, 0x8a, 0x7c, 0x6c, 0x58, 0xe4, 0x63, 0x03, 0x23, 0x9f, 0x11,
  0x03, 0x03, 0x00, 0x41, 0x30, 0x60, 0xec, 0x82, 0x26, 0x86, 0x11, 0x03,
  0x03, 0x00, 0x41, 0x30, 0x60, 0xee, 0xa2, 0x26, 0x86, 0x11, 0x03, 0x03,
  0x00, 0x41, 0x30, 0x60, 0xf0, 0xc2, 0x26, 0x06, 0x1b, 0xde, 0x40, 0x3e,
  0x36, 0xb0, 0x81, 0x7c, 0x6c, 0x48, 0x03, 0xf9, 0xd8, 0xf5, 0x0e, 0xf2,
  0x19, 0x31, 0x40, 0x00, 0x10, 0x04, 0x83, 0x4a, 0x2f, 0xc8, 0xe2, 0xea,
  0x85, 0x60, 0xc4, 0x00, 0x01, 0x40, 0x10, 0x0c, 0xaa, 0xbd, 0x28, 0x8b,
  0x6b, 0x15, 0x02, 0xd3, 0xe2, 0x41, 0x3e, 0x23, 0x06, 0x08, 0x00, 0x82,
  0x60, 0x50, 0xf5, 0xc5, 0x59, 0x68, 0xbf, 0x10, 0x8c, 0x18, 0x20, 0x00,
  0x08, 0x82, 0x41, 0xe5, 0x17, 0x68, 0xa1, 0xb5, 0x42, 0x60, 0xdd, 0x3c,
  0xc8, 0x67, 0xc4, 0x00, 0x01, 0x40, 0x10, 0x0c, 0x2a, 0xd0, 0x50, 0x8b,
  0x2e, 0x1c, 0x82, 0x11, 0x03, 0x04, 0x00, 0x41, 0x30, 0xa8, 0x42, 0x63,
  0x2d, 0xba, 0x57, 0x08, 0x46, 0x0c, 0x0e, 0x00, 0x04, 0xc1, 0x60, 0x1a,
  0x8d, 0xb5, 0xd0, 0x89, 0xbf, 0x18, 0x4d, 0x08, 0x80, 0xd1, 0x04, 0x21,
  0x18, 0x4d, 0x18, 0x04, 0x1b, 0x16, 0xf9, 0xd8, 0x90, 0xc8, 0xc7, 0x86,
  0x43, 0x3e, 0x23, 0x06, 0x07, 0x00, 0x82, 0x60, 0x30, 0xa9, 0x86, 0x5c,
  0x84, 0xc5, 0x69, 0x8c, 0x26, 0x04, 0xc0, 0x68, 0x82, 0x10, 0x8c, 0x26,
  0x0c, 0x82, 0x1d, 0x03, 0x7c, 0xec, 0x18, 0xe0, 0x63, 0xc7, 0x00, 0x1f,
  0xd3, 0x44, 0x42, 0x3e, 0x23, 0x06, 0x08, 0x00, 0x82, 0x60, 0x50, 0xc5,
  0xc6, 0x5e, 0x68, 0xf0, 0x10, 0x8c, 0x18, 0x20, 0x00, 0x08, 0x82, 0x41,
  0x25, 0x1b, 0x7c, 0xa1, 0xf9, 0x42, 0x60, 0x1d, 0x49, 0xc8, 0x67, 0xc4,
  0x00, 0x01, 0x40, 0x10, 0x0c, 0x2a, 0xda, 0xf0, 0x8b, 0x4e, 0x1e, 0x82,
  0x11, 0x03, 0x04, 0x00, 0x41, 0x30, 0xa8, 0x6a, 0xe3, 0x2f, 0x3a, 0x70,
  0x08, 0x0c, 0x0c, 0x4c, 0x42, 0x3e, 0x23, 0x06, 0x08, 0x00, 0x82, 0x60,
  0x50, 0xdd, 0x46, 0x68, 0x80, 0x01, 0x3d, 0x04, 0x23, 0x06, 0x08, 0x00,
  0x82, 0x60, 0x50, 0xe1, 0x86, 0x68, 0x80, 0x81, 0x38, 0x04, 0xa3, 0x09,
  0x74, 0x00, 0x8c, 0x26, 0xd4, 0x41, 0x30, 0x9a, 0x60, 0x07, 0x82, 0x3d,
  0x73, 0x21, 0x1f, 0x7b, 0xe6, 0x42, 0x3e, 0xf6, 0xcc, 0x85, 0x7c, 0xac,
  0x99, 0x0b, 0xf9, 0x58, 0x70, 0xc8, 0xc7, 0x98, 0xba, 0x90, 0x8f, 0x05,
  0x88, 0x7c, 0x6c, 0xb9, 0x0b, 0xf9, 0x58, 0x90, 0xc8, 0xc7, 0x8a, 0x04,
  0x3e, 0x46, 0x24, 0xf0, 0xb1, 0x21, 0x81, 0xcf, 0x88, 0xc1, 0x01, 0x80,
  0x20, 0x18, 0x4c, 0xe9, 0x11, 0x1b, 0xa0, 0x31, 0x1b, 0xa3, 0x09, 0x01,
  0x30, 0x9a, 0x20, 0x04, 0xa3, 0x09, 0x83, 0x60, 0x03, 0x68, 0xc8, 0xc7,
  0x86, 0xd0, 0x90, 0x8f, 0x0d, 0xa2, 0x21, 0x1f, 0x1b, 0x94, 0xf8, 0xd8,
  0xa0, 0xc4, 0xc7, 0x06, 0x25, 0x3e, 0x36, 0xfc, 0x85, 0x7c, 0x6c, 0x00,
  0x0d, 0xf9, 0xd8, 0x10, 0x1a, 0xf2, 0xb1, 0x01, 0x82, 0x8f, 0x0d, 0x10,
  0x7c, 0x6c, 0x80, 0xe0, 0x33, 0x62, 0x90, 0x00, 0x20, 0x08, 0x06, 0x48,
  0x7f, 0xf0, 0x46, 0x7d, 0xd4, 0x07, 0x7b, 0x0c, 0x23, 0x06, 0x09, 0x00,
  0x82, 0x60, 0x80, 0xf4, 0x07, 0x6f, 0xd4, 0x47, 0x7d, 0x90, 0x87, 0x30,
  0x62, 0x90, 0x00, 0x20, 0x08, 0x06, 0x48, 0x7f, 0xf0, 0x46, 0x7d, 0xd4,
  0xc7, 0x7a, 0x04, 0x23, 0x06, 0x09, 0x00, 0x82, 0x60, 0x80, 0xf4, 0x07,
  0x6f, 0xd4, 0x47, 0x7d, 0xa4, 0x07, 0x6b, 0x20, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xbe, 0x77, 0xed, 0x09, 0x64, 0x92, 0x55, 0x83,
  0xe2, 0x05, 0x6f, 0xf7, 0x20, 0xd0, 0x31, 0x53, 0x17, 0x00, 0x01, 0x00,
  0x29, 0x28, 0x11, 0x00, 0x78, 0x01, 0xed, 0x98, 0xcd, 0x8b, 0x1c, 0x55,
  0x10, 0xc0, 0xdf, 0x7b, 0xdd, 0xf3, 0xa6, 0x3f, 0xaa, 0xab, 0x3f, 0xa6,
  0xa7, 0xbb, 0x77, 0xb2, 0xb3, 0xce, 0x9a, 0x9d, 0x75, 0x36, 0xbb, 0xab,
  0x89, 0xa8, 0xa8, 0x91, 0x64, 0x91, 0xe8, 0xc1, 0x8d, 0x2c, 0x44, 0xe2,
  0x61, 0xc9, 0x86, 0x10, 0xbc, 0x8b, 0xa7, 0x1c, 0x94, 0xb1, 0x35, 0x8b,
  0x08, 0x7a, 0x90, 0x1c, 0x42, 0x10, 0x11, 0x91, 0x45, 0x50, 0xfc, 0x0b,
  0x54, 0x66, 0xd5, 0xf5, 0xf0, 0x0e, 0x11, 0xc2, 0x1e, 0x25, 0x27, 0xef,
  0x5e, 0xbc, 0xe8, 0x41, 0xd8, 0x54, 0xcd, 0x4c, 0x87, 0x51, 0x97, 0x9c,
  0x22, 0x28, 0xce, 0x0f, 0xaa, 0xea, 0x55, 0xbd, 0x8f, 0xae, 0xee, 0xea,
  0x43, 0x57, 0xf7, 0x62, 0x31, 0xe4, 0xe6, 0x57, 0x57, 0x5e, 0x63, 0x7b,
  0x7a, 0xf9, 0xe4, 0xc7, 0x9f, 0x80, 0x10, 0x35, 0x1a, 0x4b, 0x12, 0xb6,
  0xcc, 0x8d, 0x80, 0xb5, 0x10, 0x3f, 0x44, 0xac, 0x85, 0x70, 0x58, 0x8d,
  0xc9, 0x49, 0x4e, 0x91, 0x30, 0x6b, 0xac, 0xc6, 0xf0, 0xfe, 0x1f, 0x6f,
  0x9e, 0x3d, 0x45, 0x72, 0x9a, 0x86, 0x7f, 0xa3, 0x4e, 0x72, 0x9d, 0xe4,
  0x3d, 0x12, 0xc6, 0x67, 0x35, 0xc6, 0x66, 0x75, 0x08, 0x7c, 0xe6, 0x5f,
  0xa9, 0x62, 0x93, 0x73, 0x55, 0xde, 0xf3, 0xc1, 0xb9, 0x67, 0xc8, 0x9c,
  0x21, 0xb9, 0xcb, 0xd7, 0x7b, 0x37, 0x4e, 0xb2, 0x3d, 0xf3, 0xce, 0xeb,
  0x87, 0xe6, 0xf5, 0x5f, 0x61, 0xf2, 0x7e, 0x2b, 0xaa, 0x3a, 0x31, 0xb6,
  0xc5, 0xfa, 0xde, 0x28, 0x56, 0xc4, 0x47, 0xe3, 0xba, 0x56, 0xb5, 0xfc,
  0x96, 0xe4, 0xb0, 0xf3, 0x99, 0x03, 0x82, 0xed, 0x61, 0xf0, 0x25, 0xb5,
  0x08, 0x4b, 0x32, 0x42, 0xcb, 0xbc, 0xe4, 0x17, 0x45, 0xab, 0x47, 0x4a,
  0x31, 0x3e, 0xff, 0xff, 0x80, 0xc7, 0x8a, 0xe0, 0x67, 0xc1, 0xcf, 0x97,
  0x6f, 0x3d, 0x24, 0xa9, 0xa8, 0xde, 0xed, 0x6f, 0x58, 0x89, 0x72, 0x97,
  0xe5, 0x83, 0x42, 0xfc, 0xce, 0x5e, 0xe5, 0x4b, 0xf2, 0x47, 0xb5, 0x19,
  0xf9, 0x16, 0xfb, 0x7c, 0xe0, 0xa4, 0x4f, 0x2f, 0xb9, 0xaa, 0x8b, 0x8b,
  0xb6, 0xaf, 0x2e, 0x86, 0xb3, 0xb4, 0x9f, 0x0a, 0x46, 0xfe, 0x05, 0xf2,
  0x2f, 0x4c, 0xf8, 0x9b, 0xe4, 0x6f, 0x4e, 0xf8, 0x97, 0xc8, 0xbf, 0x34,
  0xe1, 0x5f, 0x26, 0xff, 0x72, 0xe5, 0x57, 0xe7, 0x87, 0xc3, 0xeb, 0xd9,
  0xb5, 0x7b, 0xd5, 0xfa, 0xdf, 0xc2, 0x34, 0xc7, 0xfb, 0xc3, 0x34, 0xc7,
  0xfb, 0xc3, 0x34, 0xc7, 0x29, 0x53, 0xa6, 0x4c, 0x99, 0xf2, 0x4f, 0x63,
  0x59, 0xe5, 0xc0, 0x3e, 0x90, 0xef, 0xf2, 0x57, 0xe6, 0x77, 0xd6, 0xdb,
  0x83, 0x03, 0xeb, 0xea, 0xe0, 0xcb, 0x0d, 0x25, 0x6a, 0xd6, 0x1f, 0x03,
  0x21, 0xd5, 0x5e, 0x24, 0x93, 0xbd, 0x8e, 0xf4, 0xf6, 0x8e, 0xcb, 0x9f,
  0xbe, 0x17, 0x62, 0xc1, 0x08, 0xd9, 0x33, 0xc2, 0x71, 0x8c, 0x70, 0xc1,
  0x08, 0x2f, 0x32, 0xc2, 0x4f, 0x8d, 0xb0, 0x0b, 0x23, 0x6a, 0xb3, 0x46,
  0xe8, 0x8e, 0x11, 0x6a, 0xc5, 0xd0, 0x87, 0xab, 0x91, 0xa2, 0x6b, 0xa4,
  0x5c, 0x32, 0xd2, 0x6f, 0x1a, 0x59, 0x6b, 0x1b, 0xe9, 0xb8, 0x46, 0xba,
  0x81, 0x91, 0x5e, 0x6c, 0xa4, 0x3d, 0x63, 0xa4, 0x9e, 0x37, 0x52, 0xad,
  0x1a, 0x69, 0x49, 0xf3, 0xa6, 0x78, 0x7f, 0xf7, 0xb1, 0x44, 0x39, 0x8f,
  0xa7, 0x89, 0xf3, 0x44, 0x96, 0x3a, 0x6e, 0x23, 0x43, 0x69, 0x65, 0x50,
  0x0f, 0x0b, 0xf4, 0x9a, 0x19, 0xe8, 0xa0, 0x00, 0x7f, 0x2b, 0xeb, 0x3b,
  0x71, 0x01, 0xb0, 0x55, 0xf4, 0x03, 0x51, 0xee, 0xbb, 0xf9, 0xf3, 0x65,
  0x70, 0x64, 0x0e, 0x21, 0x00, 0x84, 0x10, 0x11, 0xe2, 0x08, 0x81, 0xe2,
  0x32, 0x7f, 0xb6, 0x8c, 0x87, 0xf3, 0xd7, 0x4b, 0x98, 0x99, 0x03, 0xa4,
  0xb1, 0x97, 0xbf, 0x50, 0x62, 0x7b, 0x0e, 0x22, 0x1a, 0xcb, 0xfc, 0x5a,
  0x19, 0x1f, 0x5d, 0x44, 0x97, 0xc6, 0x6e, 0xfe, 0x59, 0x19, 0x6e, 0xcd,
  0xf5, 0x13, 0x1a, 0x7b, 0xf9, 0x87, 0x65, 0x34, 0xbf, 0x08, 0x92, 0xc6,
  0x32, 0xff, 0xb4, 0xf4, 0x86, 0xb1, 0x2f, 0xca, 0x2a, 0x97, 0xa4, 0xbb,
  0x08, 0x8d, 0xad, 0xc5, 0x3e, 0xe7, 0xc3, 0xb9, 0x40, 0x50, 0x60, 0x04,
  0x3d, 0x0c, 0x8f, 0xb4, 0x10, 0x1e, 0x28, 0x30, 0xa5, 0xf5, 0x31, 0x9e,
  0xdb, 0x59, 0x80, 0x63, 0x18, 0x84, 0x05, 0x44, 0x41, 0x0b, 0x9b, 0x14,
  0xeb, 0xe2, 0xcb, 0x3b, 0x3d, 0x58, 0x41, 0x19, 0x28, 0x0c, 0xdb, 0xb3,
  0xb4, 0x0e, 0xf6, 0x9d, 0xae, 0x58, 0x6b, 0x1c, 0x7d, 0x10, 0x83, 0x87,
  0x5a, 0x98, 0xd1, 0x9a, 0x25, 0xdc, 0xdc, 0x41, 0xba, 0xb7, 0x26, 0xcf,
  0xbd, 0x28, 0xd6, 0xca, 0x9e, 0xf3, 0x46, 0xa3, 0xbb, 0x80, 0x71, 0xd8,
  0x02, 0xbf, 0x91, 0xa0, 0xcc, 0x15, 0x26, 0x71, 0x0b, 0x32, 0x9e, 0x3f,
  0x2f, 0xd6, 0xfc, 0x66, 0x8a, 0x6e, 0xa8, 0xa8, 0xcb, 0x76, 0x6e, 0x95,
  0xc7, 0x14, 0xf5, 0x4b, 0x62, 0xff, 0x57, 0xf1, 0xb9, 0x2c, 0x8b, 0xa2,
  0xe3, 0xc5, 0x0a, 0x14, 0xc7, 0x57, 0x14, 0xf7, 0xc7, 0x14, 0x97, 0x42,
  0x2f, 0x25, 0xc3, 0xe7, 0x54, 0xb6, 0x5a, 0x1d, 0xbd, 0x01, 0x7d, 0x6a,
  0xa9, 0x28, 0x4e, 0x4f, 0x40, 0xa9, 0x4e, 0x7d, 0x39, 0xa5, 0x7c, 0x11,
  0x65, 0xac, 0xb0, 0xbe, 0x81, 0x7d, 0xb9, 0xa1, 0xfa, 0x21, 0x00, 0xea,
  0x75, 0xe8, 0x53, 0x18, 0x43, 0x45, 0xf1, 0x75, 0x8a, 0xaf, 0xab, 0xfe,
  0x6a, 0x52, 0xa0, 0xb3, 0x9a, 0xe1, 0x4a, 0x12, 0xe1, 0x89, 0xb4, 0x80,
  0x87, 0x93, 0x04, 0x8f, 0xa7, 0x11, 0x3c, 0x9a, 0x26, 0xd0, 0xcc, 0x0a,
  0xd0, 0x4b, 0x80, 0xb5, 0x22, 0xc5, 0x34, 0x8b, 0x20, 0xcb, 0x12, 0xa8,
  0x2f, 0x23, 0x16, 0x90, 0xe1, 0x0c, 0x14, 0xd8, 0xa2, 0x33, 0xed, 0x28,
  0x42, 0x4d, 0x7b, 0xe4, 0xaa, 0xc2, 0x59, 0xcc, 0xa0, 0x4d, 0xb3, 0x54,
  0x41, 0x70, 0xa2, 0x48, 0xbb, 0x69, 0xaa, 0xbd, 0x24, 0xd1, 0xf3, 0xaa,
  0x80, 0x8e, 0xca, 0x46, 0x75, 0x78, 0xae, 0xb0, 0x9d, 0x9a, 0x8d, 0xbe,
  0x0f, 0xe8, 0xd5, 0x35, 0x82, 0x8f, 0xe8, 0xba, 0x0e, 0x4a, 0x5f, 0xd1,
  0x2e, 0x1b, 0x02, 0xd4, 0xa3, 0x75, 0xed, 0xc8, 0xb6, 0xc9, 0x3e, 0xe9,
  0x79, 0xdb, 0x9a, 0xec, 0x53, 0x1e, 0x6e, 0xd7, 0xc9, 0x3e, 0xed, 0xe9,
  0x6d, 0x5b, 0xda, 0xa0, 0xa5, 0x06, 0x9e, 0xaf, 0x4b, 0x6d, 0x53, 0xbf,
  0xf2, 0xa7, 0x7e, 0x47, 0x88, 0xb7, 0x76, 0x5b, 0x6c, 0xa8, 0x39, 0xa2,
  0x3e, 0xeb, 0xee, 0xef, 0x87, 0x61, 0xef, 0x34, 0x6a, 0x80, 0x27, 0x7f,
  0x49, 0x0c, 0xb9, 0xcd, 0x0d, 0x19, 0xb1, 0x40, 0xe2, 0x92, 0xc8, 0x61,
  0xa7, 0x26, 0x04, 0x9f, 0x63, 0x73, 0x35, 0x88, 0xc1, 0x95, 0x5f, 0xdc,
  0x57, 0xae, 0x9d, 0xbf, 0xfa, 0x73, 0xed, 0xd5, 0xdf, 0x3a, 0xb7, 0x4e,
  0xbc, 0x74, 0x07, 0x1a, 0xe0, 0xde, 0xd2, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x01, 0x02, 0x03, 0x00, 0x00, 0x04, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x2c, 0x00, 0x00, 0x78, 0x01, 0x63, 0x64,
  0x60, 0x60, 0x00, 0x61, 0x09, 0x20, 0x06, 0x01, 0x1d, 0x20, 0x96, 0x05,
  0x62, 0x26, 0x20, 0x06, 0x01, 0x15, 0x10, 0x01, 0x06, 0x0c, 0x0c, 0x00,
  0x0d, 0x40, 0x00, 0x8a, 0x78, 0x62, 0x6f, 0x70, 0x01, 0x00, 0x00, 0x00,
  0x7e, 0x02, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00
};
