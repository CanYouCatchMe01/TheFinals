#if 0
;
; Input signature:
;
; Name                 Index   Mask Register SysValue  Format   Used
; -------------------- ----- ------ -------- -------- ------- ------
; COLOR                    0   xyzw        0     NONE   float   xyzw
; COLOR                    1   xyzw        1     NONE   float      w
; TEXCOORD                 0   xy          2     NONE   float   xy  
; TEXCOORD                 1     zw        2     NONE   float     zw
;
;
; Output signature:
;
; Name                 Index   Mask Register SysValue  Format   Used
; -------------------- ----- ------ -------- -------- ------- ------
; SV_Target                0   xyzw        0   TARGET   float   xyzw
;
; shader debug name: C:\Users\marcu\Downloads\DirectXTK12-main\DirectXTK12-main\Src/Shaders/Compiled\XboxGamingXboxOneDualTextureEffect_PSDualTexture.pdb
; shader hash: 5f14be8f3a06eb25fac32c8272eb63ea
;
; Pipeline Runtime Information: 
;
;PSVRuntimeInfo:
; Pixel Shader
; DepthOutput=0
; SampleFrequency=0
; MinimumExpectedWaveLaneCount: 0
; MaximumExpectedWaveLaneCount: 4294967295
; UsesViewID: false
; SigInputElements: 4
; SigOutputElements: 1
; SigPatchConstOrPrimElements: 0
; SigInputVectors: 3
; SigOutputVectors[0]: 1
; SigOutputVectors[1]: 0
; SigOutputVectors[2]: 0
; SigOutputVectors[3]: 0
; EntryFunctionName: PSDualTexture
;
;
; Input signature:
;
; Name                 Index             InterpMode DynIdx
; -------------------- ----- ---------------------- ------
; COLOR                    0                 linear       
; COLOR                    1                 linear       
; TEXCOORD                 0                 linear       
; TEXCOORD                 1                 linear       
;
; Output signature:
;
; Name                 Index             InterpMode DynIdx
; -------------------- ----- ---------------------- ------
; SV_Target                0                              
;
; Buffer Definitions:
;
; cbuffer 
; {
;
;   [112 x i8] (type annotation not present)
;
; }
;
;
; Resource Bindings:
;
; Name                                 Type  Format         Dim      ID      HLSL Bind  Count
; ------------------------------ ---------- ------- ----------- ------- -------------- ------
;                                   cbuffer      NA          NA     CB0            cb0     1
;                                   sampler      NA          NA      S0             s0     1
;                                   sampler      NA          NA      S1             s1     1
;                                   texture     f32          2d      T0             t0     1
;                                   texture     f32          2d      T1             t1     1
;
;
; ViewId state:
;
; Number of inputs: 12, outputs: 4
; Outputs dependent on ViewId: {  }
; Inputs contributing to computation of Outputs:
;   output 0 depends on inputs: { 0, 3, 7, 8, 9, 10, 11 }
;   output 1 depends on inputs: { 1, 3, 7, 8, 9, 10, 11 }
;   output 2 depends on inputs: { 2, 3, 7, 8, 9, 10, 11 }
;   output 3 depends on inputs: { 3, 8, 9, 10, 11 }
;
target datalayout = "e-m:e-p:32:32-i1:32-i8:32-i16:32-i32:32-i64:64-f16:32-f32:32-f64:64-n8:16:32:64"
target triple = "dxil-ms-xb1"

%dx.types.Handle = type { i8* }
%dx.types.ResRet.f32 = type { float, float, float, float, i32 }
%dx.types.CBufRet.f32 = type { float, float, float, float }
%"class.Texture2D<vector<float, 4> >" = type { <4 x float>, %"class.Texture2D<vector<float, 4> >::mips_type" }
%"class.Texture2D<vector<float, 4> >::mips_type" = type { i32 }
%hostlayout.Parameters = type { <4 x float>, <3 x float>, <4 x float>, [4 x <4 x float>] }
%struct.SamplerState = type { i32 }

define void @PSDualTexture() {
  %1 = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 0, i32 1, i32 1, i1 false)  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %2 = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 0, i32 0, i32 0, i1 false)  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %3 = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 3, i32 1, i32 1, i1 false)  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %4 = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 3, i32 0, i32 0, i1 false)  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %5 = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 2, i32 0, i32 0, i1 false)  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %6 = call float @dx.op.loadInput.f32(i32 4, i32 3, i32 0, i8 0, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %7 = call float @dx.op.loadInput.f32(i32 4, i32 3, i32 0, i8 1, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %8 = call float @dx.op.loadInput.f32(i32 4, i32 2, i32 0, i8 0, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %9 = call float @dx.op.loadInput.f32(i32 4, i32 2, i32 0, i8 1, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %10 = call float @dx.op.loadInput.f32(i32 4, i32 1, i32 0, i8 3, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %11 = call float @dx.op.loadInput.f32(i32 4, i32 0, i32 0, i8 0, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %12 = call float @dx.op.loadInput.f32(i32 4, i32 0, i32 0, i8 1, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %13 = call float @dx.op.loadInput.f32(i32 4, i32 0, i32 0, i8 2, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %14 = call float @dx.op.loadInput.f32(i32 4, i32 0, i32 0, i8 3, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %15 = call %dx.types.ResRet.f32 @dx.op.sample.f32(i32 60, %dx.types.Handle %2, %dx.types.Handle %4, float %8, float %9, float undef, float undef, i32 0, i32 0, i32 undef, float undef)  ; Sample(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,clamp)
  %16 = extractvalue %dx.types.ResRet.f32 %15, 0
  %17 = extractvalue %dx.types.ResRet.f32 %15, 1
  %18 = extractvalue %dx.types.ResRet.f32 %15, 2
  %19 = extractvalue %dx.types.ResRet.f32 %15, 3
  %20 = call %dx.types.ResRet.f32 @dx.op.sample.f32(i32 60, %dx.types.Handle %1, %dx.types.Handle %3, float %6, float %7, float undef, float undef, i32 0, i32 0, i32 undef, float undef)  ; Sample(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,clamp)
  %21 = extractvalue %dx.types.ResRet.f32 %20, 0
  %22 = extractvalue %dx.types.ResRet.f32 %20, 1
  %23 = extractvalue %dx.types.ResRet.f32 %20, 2
  %24 = extractvalue %dx.types.ResRet.f32 %20, 3
  %25 = fmul fast float %11, 2.000000e+00
  %26 = fmul fast float %25, %16
  %27 = fmul fast float %26, %21
  %28 = fmul fast float %12, 2.000000e+00
  %29 = fmul fast float %28, %17
  %30 = fmul fast float %29, %22
  %31 = fmul fast float %13, 2.000000e+00
  %32 = fmul fast float %31, %18
  %33 = fmul fast float %32, %23
  %34 = fmul fast float %19, %14
  %35 = fmul fast float %34, %24
  %36 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %5, i32 1)  ; CBufferLoadLegacy(handle,regIndex)
  %37 = extractvalue %dx.types.CBufRet.f32 %36, 0
  %38 = extractvalue %dx.types.CBufRet.f32 %36, 1
  %39 = extractvalue %dx.types.CBufRet.f32 %36, 2
  %40 = fmul fast float %35, %37
  %41 = fmul fast float %35, %38
  %42 = fmul fast float %35, %39
  %43 = fsub fast float %40, %27
  %44 = fsub fast float %41, %30
  %45 = fsub fast float %42, %33
  %46 = fmul fast float %43, %10
  %47 = fmul fast float %44, %10
  %48 = fmul fast float %45, %10
  %49 = fadd fast float %46, %27
  %50 = fadd fast float %47, %30
  %51 = fadd fast float %48, %33
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 0, float %49)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 1, float %50)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 2, float %51)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 3, float %35)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  ret void
}

; Function Attrs: nounwind readnone
declare float @dx.op.loadInput.f32(i32, i32, i32, i8, i32) #0

; Function Attrs: nounwind
declare void @dx.op.storeOutput.f32(i32, i32, i32, i8, float) #1

; Function Attrs: nounwind readonly
declare %dx.types.ResRet.f32 @dx.op.sample.f32(i32, %dx.types.Handle, %dx.types.Handle, float, float, float, float, i32, i32, i32, float) #2

; Function Attrs: nounwind readonly
declare %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32, %dx.types.Handle, i32) #2

; Function Attrs: nounwind readonly
declare %dx.types.Handle @dx.op.createHandle(i32, i8, i32, i32, i1) #2

attributes #0 = { nounwind readnone }
attributes #1 = { nounwind }
attributes #2 = { nounwind readonly }

!xbox.compiler.options = !{!0}
!llvm.ident = !{!1}
!dx.version = !{!2}
!dx.valver = !{!3}
!dx.shaderModel = !{!4}
!dx.resources = !{!5}
!dx.viewIdState = !{!15}
!dx.entryPoints = !{!16}

!0 = !{!"__XBOX_PER_THREAD_SCRATCH_SIZE_LIMIT_IN_BYTES", !"0"}
!1 = !{!"dxcxbox 2410.2410.11116.10741"}
!2 = !{i32 1, i32 0}
!3 = !{i32 1, i32 8}
!4 = !{!"ps", i32 6, i32 0}
!5 = !{!6, null, !10, !12}
!6 = !{!7, !9}
!7 = !{i32 0, %"class.Texture2D<vector<float, 4> >"* undef, !"", i32 0, i32 0, i32 1, i32 2, i32 0, !8}
!8 = !{i32 0, i32 9}
!9 = !{i32 1, %"class.Texture2D<vector<float, 4> >"* undef, !"", i32 0, i32 1, i32 1, i32 2, i32 0, !8}
!10 = !{!11}
!11 = !{i32 0, %hostlayout.Parameters* undef, !"", i32 0, i32 0, i32 1, i32 112, null}
!12 = !{!13, !14}
!13 = !{i32 0, %struct.SamplerState* undef, !"", i32 0, i32 0, i32 1, i32 0, null}
!14 = !{i32 1, %struct.SamplerState* undef, !"", i32 0, i32 1, i32 1, i32 0, null}
!15 = !{[14 x i32] [i32 12, i32 4, i32 1, i32 2, i32 4, i32 15, i32 0, i32 0, i32 0, i32 7, i32 15, i32 15, i32 15, i32 15]}
!16 = !{void ()* @PSDualTexture, !"PSDualTexture", !17, !5, null}
!17 = !{!18, !28, null}
!18 = !{!19, !22, !25, !27}
!19 = !{i32 0, !"COLOR", i8 9, i8 0, !20, i8 2, i32 1, i8 4, i32 0, i8 0, !21}
!20 = !{i32 0}
!21 = !{i32 3, i32 15}
!22 = !{i32 1, !"COLOR", i8 9, i8 0, !23, i8 2, i32 1, i8 4, i32 1, i8 0, !24}
!23 = !{i32 1}
!24 = !{i32 3, i32 8}
!25 = !{i32 2, !"TEXCOORD", i8 9, i8 0, !20, i8 2, i32 1, i8 2, i32 2, i8 0, !26}
!26 = !{i32 3, i32 3}
!27 = !{i32 3, !"TEXCOORD", i8 9, i8 0, !23, i8 2, i32 1, i8 2, i32 2, i8 2, !26}
!28 = !{!29}
!29 = !{i32 0, !"SV_Target", i8 9, i8 16, !20, i8 0, i32 1, i8 4, i32 0, i8 0, !21}

;
; DUMPING SHADER HARDWARE INSTRUCTIONS 
;
// Shader Type               : (PS)
// Shader Hw Stage           : (PS)

// Shader Instructions:
shader main
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  s_mov_b64     s[10:11], exec
  s_wqm_b64     exec, exec // wrscc
  s_mov_b32     s2, s5
  s_mov_b32     s12, s3
  s_mov_b32     s13, 0
  s_mov_b32     s5, 0
  s_mov_b32     s3, 0
  s_load_dwordx8  s[20:27], s[12:13], 0x00
  s_load_dwordx4  s[28:31], s[4:5], 0x00
  s_mov_b32     m0, s9
  v_interp_p1_f32  v2, v0, attr2.x
  v_interp_p1_f32  v3, v0, attr2.y
  s_mov_b32     s32, s7
  s_mov_b32     s7, 0
  v_interp_p2_f32  v2, v1, attr2.x
  v_interp_p2_f32  v3, v1, attr2.y
  s_load_dwordx8  s[12:19], s[2:3], 0x00
  s_load_dwordx4  s[4:7], s[6:7], 0x00
  s_waitcnt     lgkmcnt(0)
  image_sample  v[2:5], v[2:3], s[20:27], s[28:31] dmask:0xf
  v_interp_p1_f32  v6, v0, attr2.z
  v_interp_p1_f32  v7, v0, attr2.w
  v_interp_p1_f32  v10, v0, attr1.w
  v_interp_p1_f32  v11, v0, attr0.x
  v_interp_p1_f32  v12, v0, attr0.y
  v_interp_p1_f32  v13, v0, attr0.z
  v_interp_p1_f32  v0, v0, attr0.w
  s_or_b32      s1, s8, 0x00100000 // wrscc
  s_mov_b32     s0, s32
  s_mov_b32     s2, -1
  s_mov_b32     s3, 0x00024fac
  v_interp_p2_f32  v6, v1, attr2.z
  v_interp_p2_f32  v7, v1, attr2.w
  v_interp_p2_f32  v10, v1, attr1.w
  v_interp_p2_f32  v11, v1, attr0.x
  v_interp_p2_f32  v12, v1, attr0.y
  v_interp_p2_f32  v13, v1, attr0.z
  v_interp_p2_f32  v0, v1, attr0.w
  s_and_b64     exec, exec, s[10:11] // wrscc
  image_sample  v[6:9], v[6:7], s[12:19], s[4:7] dmask:0xf
  s_buffer_load_dwordx4  s[0:3], s[0:3], 0x04
  s_waitcnt     vmcnt(1)
  v_add_f32     v1, v2, v2
  v_add_f32     v2, v3, v3
  v_mul_legacy_f32  v2, v12, v2
  v_mul_legacy_f32  v0, v5, v0
  v_add_f32     v3, v4, v4
  v_mul_legacy_f32  v3, v13, v3
  v_mul_legacy_f32  v1, v11, v1
  s_waitcnt     vmcnt(0)
  v_mul_legacy_f32  v4, v0, v9
  v_mul_legacy_f32  v2, v2, v7
  s_waitcnt     lgkmcnt(0)
  v_mad_legacy_f32  v0, v4, s1, -v2
  v_mac_legacy_f32  v2, v0, v10
  v_mul_legacy_f32  v0, v1, v6
  v_mul_legacy_f32  v3, v3, v8
  v_mad_legacy_f32  v5, v4, s2, -v3
  v_mad_legacy_f32  v1, v4, s0, -v0
  v_mac_legacy_f32  v3, v5, v10
  v_mad_legacy_f32  v5, v1, v10, v0
  v_cvt_pkrtz_f16_f32  v0, v5, v2
  v_cvt_pkrtz_f16_f32  v1, v3, v4
  exp           mrt0, v0, v0, v1, v1 done compr vm
  s_endpgm      
end


NumVGPR=14,NumSGPR=35,LDS=0,Scratch=0,Occpancy=10


#endif

const unsigned char DualTextureEffect_PSDualTexture[] = {
  0x44, 0x58, 0x42, 0x43, 0x88, 0x04, 0xc5, 0x5e, 0x82, 0x7c, 0x0f, 0xbf,
  0x4f, 0xa5, 0x52, 0x5d, 0xad, 0xc4, 0x22, 0xbb, 0x01, 0x00, 0x00, 0x00,
  0xc0, 0x11, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00,
  0x50, 0x00, 0x00, 0x00, 0xf0, 0x00, 0x00, 0x00, 0x2c, 0x01, 0x00, 0x00,
  0xb0, 0x02, 0x00, 0x00, 0x84, 0x03, 0x00, 0x00, 0x18, 0x04, 0x00, 0x00,
  0x34, 0x04, 0x00, 0x00, 0x53, 0x46, 0x49, 0x30, 0x08, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x49, 0x53, 0x47, 0x31,
  0x98, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x88, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x0f, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x88, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0f, 0x08, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x8e, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x03, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x8e, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x0c, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x43, 0x4f, 0x4c, 0x4f,
  0x52, 0x00, 0x54, 0x45, 0x58, 0x43, 0x4f, 0x4f, 0x52, 0x44, 0x00, 0x00,
  0x4f, 0x53, 0x47, 0x31, 0x34, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x28, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x53, 0x56, 0x5f, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x00, 0x00, 0x00,
  0x50, 0x53, 0x56, 0x30, 0x7c, 0x01, 0x00, 0x00, 0x34, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff,
  0x00, 0x00, 0x00, 0x00, 0x04, 0x01, 0x00, 0x03, 0x01, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x1f, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x30, 0x00, 0x00, 0x00, 0x00, 0x43, 0x4f, 0x4c, 0x4f, 0x52, 0x00, 0x43,
  0x4f, 0x4c, 0x4f, 0x52, 0x00, 0x54, 0x45, 0x58, 0x43, 0x4f, 0x4f, 0x52,
  0x44, 0x00, 0x54, 0x45, 0x58, 0x43, 0x4f, 0x4f, 0x52, 0x44, 0x00, 0x50,
  0x53, 0x44, 0x75, 0x61, 0x6c, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65,
  0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x44, 0x00, 0x03, 0x02, 0x00, 0x00,
  0x07, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x01, 0x44, 0x00,
  0x03, 0x02, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x02, 0x42, 0x00, 0x03, 0x02, 0x00, 0x00, 0x16, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x01, 0x02, 0x62, 0x00, 0x03, 0x02, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x44, 0x10,
  0x03, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x04, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00,
  0x0f, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00,
  0x0f, 0x00, 0x00, 0x00, 0x52, 0x54, 0x53, 0x30, 0xcc, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xcc, 0x00, 0x00, 0x00, 0x1d, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x54, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x70, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x8c, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0xa8, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc4, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x5c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xff, 0xff, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x78, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00,
  0x94, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff,
  0x01, 0x00, 0x00, 0x00, 0xb0, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x49, 0x4c, 0x44, 0x4e, 0x8c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x84, 0x00,
  0x43, 0x3a, 0x5c, 0x55, 0x73, 0x65, 0x72, 0x73, 0x5c, 0x6d, 0x61, 0x72,
  0x63, 0x75, 0x5c, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x73,
  0x5c, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x58, 0x54, 0x4b, 0x31, 0x32,
  0x2d, 0x6d, 0x61, 0x69, 0x6e, 0x5c, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74,
  0x58, 0x54, 0x4b, 0x31, 0x32, 0x2d, 0x6d, 0x61, 0x69, 0x6e, 0x5c, 0x53,
  0x72, 0x63, 0x2f, 0x53, 0x68, 0x61, 0x64, 0x65, 0x72, 0x73, 0x2f, 0x43,
  0x6f, 0x6d, 0x70, 0x69, 0x6c, 0x65, 0x64, 0x5c, 0x58, 0x62, 0x6f, 0x78,
  0x47, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x58, 0x62, 0x6f, 0x78, 0x4f, 0x6e,
  0x65, 0x44, 0x75, 0x61, 0x6c, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65,
  0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x5f, 0x50, 0x53, 0x44, 0x75, 0x61,
  0x6c, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x70, 0x64, 0x62,
  0x00, 0x00, 0x00, 0x00, 0x48, 0x41, 0x53, 0x48, 0x14, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x5f, 0x14, 0xbe, 0x8f, 0x3a, 0x06, 0xeb, 0x25,
  0xfa, 0xc3, 0x2c, 0x82, 0x72, 0xeb, 0x63, 0xea, 0x44, 0x58, 0x49, 0x4c,
  0x84, 0x0d, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x61, 0x03, 0x00, 0x00,
  0x44, 0x58, 0x49, 0x4c, 0x00, 0x01, 0x00, 0x00, 0x7c, 0x00, 0x00, 0x00,
  0xbc, 0x08, 0x00, 0x00, 0x58, 0x44, 0x41, 0x54, 0x06, 0x00, 0x00, 0x00,
  0x24, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x6c, 0x00, 0x00, 0x00,
  0xd4, 0x08, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x40, 0x09, 0x00, 0x00,
  0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x50, 0x09, 0x00, 0x00,
  0x9e, 0x02, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0xf0, 0x0b, 0x00, 0x00,
  0x20, 0x01, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x10, 0x0d, 0x00, 0x00,
  0x5f, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x70, 0x0d, 0x00, 0x00,
  0x11, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x35, 0x02, 0x00, 0x00,
  0x44, 0x58, 0x49, 0x4c, 0x00, 0x01, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00,
  0xbc, 0x08, 0x00, 0x00, 0x42, 0x43, 0xc0, 0xde, 0x21, 0x0c, 0x00, 0x00,
  0x2c, 0x02, 0x00, 0x00, 0x0b, 0x82, 0x20, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x13, 0x00, 0x00, 0x00, 0x07, 0x81, 0x23, 0x91, 0x41, 0xc8, 0x04, 0x49,
  0x06, 0x10, 0x32, 0x39, 0x92, 0x01, 0x84, 0x0c, 0x25, 0x05, 0x08, 0x19,
  0x1e, 0x04, 0x8b, 0x62, 0x80, 0x18, 0x45, 0x02, 0x42, 0x92, 0x0b, 0x42,
  0xc4, 0x10, 0x32, 0x14, 0x38, 0x08, 0x18, 0x4b, 0x0a, 0x32, 0x62, 0x88,
  0x48, 0x90, 0x14, 0x20, 0x43, 0x46, 0x88, 0xa5, 0x00, 0x19, 0x32, 0x42,
  0xe4, 0x48, 0x0e, 0x90, 0x11, 0x23, 0xc4, 0x50, 0x41, 0x51, 0x81, 0x8c,
  0xe1, 0x83, 0xe5, 0x8a, 0x04, 0x31, 0x46, 0x06, 0x51, 0x18, 0x00, 0x00,
  0x08, 0x00, 0x00, 0x00, 0x1b, 0x8c, 0xe0, 0xff, 0xff, 0xff, 0xff, 0x07,
  0x40, 0x02, 0xa8, 0x0d, 0x84, 0xf0, 0xff, 0xff, 0xff, 0xff, 0x03, 0x20,
  0x6d, 0x30, 0x86, 0xff, 0xff, 0xff, 0xff, 0x1f, 0x00, 0x09, 0xa8, 0x00,
  0x49, 0x18, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x13, 0x82, 0x60, 0x42,
  0x20, 0x4c, 0x08, 0x06, 0x00, 0x00, 0x00, 0x00, 0x89, 0x20, 0x00, 0x00,
  0x53, 0x00, 0x00, 0x00, 0x32, 0x22, 0x88, 0x09, 0x20, 0x64, 0x85, 0x04,
  0x13, 0x23, 0xa4, 0x84, 0x04, 0x13, 0x23, 0xe3, 0x84, 0xa1, 0x90, 0x14,
  0x12, 0x4c, 0x8c, 0x8c, 0x0b, 0x84, 0xc4, 0x4c, 0x10, 0x84, 0xc1, 0x08,
  0x40, 0x09, 0x00, 0x0a, 0x66, 0x00, 0xe6, 0x08, 0xc0, 0x60, 0x8e, 0x00,
  0x29, 0xc6, 0x40, 0x10, 0x44, 0x41, 0x90, 0x51, 0x0c, 0x80, 0x20, 0x88,
  0x62, 0x20, 0xe4, 0xa6, 0xe1, 0xf2, 0x27, 0xec, 0x21, 0x24, 0x7f, 0x25,
  0xa4, 0x95, 0x98, 0xfc, 0xe2, 0xb6, 0x51, 0x31, 0x0c, 0xc3, 0x40, 0x50,
  0x71, 0xcf, 0x70, 0xf9, 0x13, 0xf6, 0x10, 0x92, 0x1f, 0x02, 0xcd, 0xb0,
  0x10, 0x28, 0x58, 0x0a, 0xa3, 0x10, 0x0c, 0x33, 0x0c, 0xc3, 0x40, 0x10,
  0xc4, 0x40, 0xcd, 0x51, 0xc3, 0xe5, 0x4f, 0xd8, 0x43, 0x48, 0x3e, 0xb7,
  0x51, 0xc5, 0x4a, 0x4c, 0x7e, 0x71, 0xdb, 0x88, 0x18, 0x86, 0x61, 0x28,
  0xc4, 0x43, 0x30, 0x04, 0x41, 0x73, 0x04, 0x41, 0x31, 0x18, 0xa2, 0x20,
  0x08, 0x89, 0xa6, 0x81, 0x80, 0x61, 0x04, 0x62, 0x98, 0xa9, 0x0d, 0xc6,
  0x81, 0x1d, 0xc2, 0x61, 0x1e, 0xe6, 0xc1, 0x0d, 0x68, 0xa1, 0x1c, 0xf0,
  0x81, 0x1e, 0xea, 0x41, 0x1e, 0xca, 0x41, 0x0e, 0x48, 0x81, 0x0f, 0xec,
  0xa1, 0x1c, 0xc6, 0x81, 0x1e, 0xde, 0x41, 0x1e, 0xf8, 0xc0, 0x1c, 0xd8,
  0xe1, 0x1d, 0xc2, 0x81, 0x1e, 0xd8, 0x00, 0x0c, 0xe8, 0xc0, 0x0f, 0xc0,
  0xc0, 0x0f, 0xf4, 0x40, 0x0f, 0xda, 0x21, 0x1d, 0xe0, 0x61, 0x1e, 0x7e,
  0x81, 0x1e, 0xf2, 0x01, 0x1e, 0xca, 0x01, 0x05, 0xc4, 0x4c, 0x62, 0x30,
  0x0e, 0xec, 0x10, 0x0e, 0xf3, 0x30, 0x0f, 0x6e, 0x40, 0x0b, 0xe5, 0x80,
  0x0f, 0xf4, 0x50, 0x0f, 0xf2, 0x50, 0x0e, 0x72, 0x40, 0x0a, 0x7c, 0x60,
  0x0f, 0xe5, 0x30, 0x0e, 0xf4, 0xf0, 0x0e, 0xf2, 0xc0, 0x07, 0xe6, 0xc0,
  0x0e, 0xef, 0x10, 0x0e, 0xf4, 0xc0, 0x06, 0x60, 0x40, 0x07, 0x7e, 0x00,
  0x06, 0x7e, 0x80, 0x04, 0xeb, 0x22, 0x6c, 0x18, 0x61, 0x18, 0x92, 0xc0,
  0xba, 0xea, 0x70, 0xa4, 0x69, 0x01, 0x30, 0x87, 0x9a, 0xfc, 0x14, 0x88,
  0x00, 0x86, 0x98, 0x88, 0x48, 0x42, 0x84, 0xa5, 0x59, 0x1b, 0x71, 0x37,
  0x49, 0x53, 0x44, 0x09, 0x93, 0xcf, 0x02, 0xcc, 0xb3, 0x10, 0x11, 0x3b,
  0x01, 0x13, 0x81, 0x02, 0x82, 0xbc, 0x74, 0x20, 0x00, 0x00, 0x00, 0x00,
  0x13, 0x16, 0x72, 0xc0, 0x87, 0x74, 0x60, 0x87, 0x36, 0x68, 0x87, 0x79,
  0x68, 0x03, 0x7c, 0x10, 0x87, 0x38, 0xd8, 0xf0, 0x0a, 0xe5, 0xd0, 0x06,
  0xed, 0xa0, 0x07, 0xe5, 0xd0, 0x06, 0xf0, 0xa0, 0x07, 0x73, 0x20, 0x07,
  0x7a, 0x30, 0x07, 0x72, 0xd0, 0x06, 0xe9, 0x10, 0x07, 0x7a, 0x30, 0x07,
  0x72, 0xd0, 0x06, 0xe9, 0x80, 0x07, 0x7a, 0x30, 0x07, 0x72, 0xd0, 0x06,
  0xe9, 0x10, 0x07, 0x76, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x90, 0x0e,
  0x73, 0x20, 0x07, 0x7a, 0x30, 0x07, 0x72, 0xd0, 0x06, 0xe9, 0x60, 0x07,
  0x74, 0xa0, 0x07, 0x76, 0x40, 0x07, 0x6d, 0x60, 0x0e, 0x71, 0x60, 0x07,
  0x7a, 0x30, 0x07, 0x72, 0xd0, 0x06, 0xe6, 0x30, 0x07, 0x72, 0xa0, 0x07,
  0x73, 0x20, 0x07, 0x6d, 0x60, 0x0e, 0x76, 0x40, 0x07, 0x7a, 0x60, 0x07,
  0x74, 0xd0, 0x06, 0xee, 0x80, 0x07, 0x7a, 0x10, 0x07, 0x76, 0xa0, 0x07,
  0x73, 0x20, 0x07, 0x7a, 0x60, 0x07, 0x74, 0x30, 0xe4, 0x09, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0xc8, 0x63, 0x00,
  0x01, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x90, 0x07,
  0x01, 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x21,
  0x4f, 0x03, 0x04, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x43, 0x1e, 0x08, 0x08, 0x80, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x86, 0x3c, 0x13, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x64, 0x81, 0x00, 0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0x00,
  0x32, 0x1e, 0x98, 0x14, 0x19, 0x11, 0x4c, 0x90, 0x8c, 0x09, 0x26, 0x47,
  0xc6, 0x04, 0x43, 0x22, 0x4a, 0x60, 0x04, 0xa0, 0x20, 0x8a, 0xa1, 0x08,
  0x4a, 0xa2, 0xc0, 0x03, 0xca, 0xa0, 0x3c, 0xa8, 0x28, 0x89, 0x11, 0x80,
  0x22, 0x28, 0x84, 0x02, 0xa1, 0x6c, 0x06, 0x80, 0xba, 0x19, 0x00, 0xfa,
  0x66, 0x00, 0x08, 0x1c, 0xcb, 0x61, 0x88, 0x40, 0x20, 0x1e, 0x00, 0x00,
  0x8e, 0xe7, 0x79, 0x1e, 0x00, 0x00, 0x00, 0x00, 0x79, 0x18, 0x00, 0x00,
  0x86, 0x00, 0x00, 0x00, 0x1a, 0x03, 0x4c, 0x90, 0x46, 0x02, 0x13, 0xc4,
  0x36, 0xf8, 0xfa, 0xc2, 0x12, 0x7a, 0xc2, 0xfa, 0x82, 0x2a, 0x92, 0xfa,
  0xa2, 0x42, 0x92, 0x2a, 0x0a, 0x22, 0xfa, 0x9a, 0x1a, 0x92, 0x0a, 0xa2,
  0x1a, 0x42, 0xfa, 0x9a, 0x4a, 0xd2, 0x2a, 0xfa, 0x62, 0x4a, 0x6a, 0x4a,
  0xa2, 0xfa, 0x4a, 0x72, 0xfa, 0x12, 0xca, 0xa2, 0x2a, 0x9a, 0x62, 0x00,
  0xb3, 0x41, 0x08, 0x04, 0x76, 0x64, 0x78, 0x63, 0x78, 0x62, 0x6f, 0x78,
  0x20, 0x32, 0x34, 0x31, 0x30, 0x2e, 0x32, 0x34, 0x31, 0x30, 0x2e, 0x31,
  0x31, 0x31, 0x31, 0x36, 0x2e, 0x31, 0x30, 0x37, 0x34, 0x31, 0x1b, 0x02,
  0x62, 0x82, 0x40, 0x18, 0x13, 0x04, 0xe2, 0xd8, 0x20, 0x18, 0xc7, 0x04,
  0x81, 0x40, 0x36, 0x08, 0x46, 0x42, 0x01, 0x6e, 0x6e, 0x82, 0x40, 0x24,
  0x1b, 0x86, 0x85, 0x39, 0x26, 0x08, 0x19, 0x45, 0x60, 0x82, 0x40, 0x28,
  0x13, 0x04, 0x62, 0xd9, 0x20, 0x1c, 0xd1, 0x86, 0xe4, 0x70, 0x9e, 0xe3,
  0x30, 0xa0, 0x43, 0xda, 0x90, 0x18, 0xce, 0x73, 0x18, 0x06, 0x74, 0x48,
  0x1b, 0x84, 0x89, 0x9a, 0x20, 0x74, 0xd5, 0x04, 0x81, 0x60, 0x36, 0x20,
  0x87, 0xf5, 0x1c, 0x87, 0x71, 0x01, 0x1b, 0x02, 0x6c, 0x82, 0xf0, 0x59,
  0x1b, 0x90, 0x43, 0x7b, 0x8e, 0xc3, 0x38, 0x80, 0x0d, 0x88, 0xa1, 0x3d,
  0x87, 0x61, 0x1c, 0xc0, 0x06, 0x61, 0xe3, 0x36, 0x10, 0x15, 0x90, 0x75,
  0x13, 0x04, 0x30, 0xb8, 0x36, 0x04, 0xdf, 0x04, 0x41, 0x00, 0xd8, 0x40,
  0x4d, 0x11, 0xd5, 0x85, 0xb1, 0x51, 0x95, 0xe1, 0xd1, 0xd5, 0xc9, 0x95,
  0xb1, 0x18, 0x7a, 0x62, 0x7a, 0x92, 0x9a, 0x20, 0x14, 0xcf, 0x04, 0xa1,
  0x80, 0x36, 0x04, 0xc7, 0x04, 0xa1, 0x88, 0x26, 0x08, 0x85, 0x34, 0x41,
  0x20, 0x9a, 0x09, 0x02, 0xe1, 0x6c, 0x10, 0xd2, 0x40, 0x0d, 0x36, 0x2c,
  0xc7, 0x18, 0x90, 0x41, 0x19, 0x98, 0xc1, 0x19, 0x18, 0x68, 0x70, 0x94,
  0xc1, 0x1a, 0x6c, 0x08, 0x8c, 0x0d, 0x42, 0x1a, 0x24, 0x1b, 0x16, 0x63,
  0x0c, 0xc8, 0xa0, 0x0c, 0xda, 0xe0, 0x0c, 0x0c, 0x34, 0x30, 0xca, 0xc0,
  0x0d, 0x88, 0x50, 0x15, 0x61, 0x0d, 0x3d, 0x3d, 0x49, 0x11, 0x6d, 0x10,
  0xd2, 0x20, 0x0d, 0x36, 0x2c, 0x10, 0x1c, 0x90, 0x41, 0x19, 0x98, 0xc1,
  0x19, 0x18, 0x67, 0x00, 0x95, 0x41, 0x1c, 0x6c, 0x58, 0xd2, 0x00, 0x0e,
  0xc8, 0xa0, 0x0c, 0xda, 0xe0, 0x0c, 0x8c, 0x33, 0x80, 0xce, 0x20, 0x0e,
  0x36, 0x10, 0x6c, 0xf0, 0x06, 0x72, 0x30, 0x07, 0x4c, 0xa6, 0xac, 0xbe,
  0xa8, 0xc2, 0xe4, 0xce, 0xca, 0xe8, 0x26, 0x08, 0xc5, 0xb4, 0x61, 0x39,
  0xea, 0x80, 0x0c, 0xec, 0xc0, 0x0c, 0xca, 0xc0, 0x40, 0x83, 0xa3, 0x0c,
  0xd6, 0x60, 0x43, 0x70, 0x07, 0x1b, 0x06, 0x3a, 0xc0, 0x03, 0x60, 0x43,
  0x11, 0x06, 0x62, 0x90, 0x07, 0x1e, 0xd0, 0x0a, 0x4f, 0xec, 0x0d, 0xcf,
  0x65, 0xec, 0xad, 0x0d, 0x2e, 0x8d, 0xad, 0x4c, 0xce, 0xe5, 0x0d, 0x8e,
  0x2e, 0xed, 0xcd, 0x6d, 0x6e, 0x4a, 0x20, 0x54, 0x61, 0x63, 0xb3, 0x6b,
  0x73, 0x49, 0x23, 0x2b, 0x73, 0xa3, 0x9b, 0x12, 0x10, 0x55, 0xc8, 0xf0,
  0x5c, 0xec, 0xca, 0xe4, 0xe6, 0xd2, 0xde, 0xdc, 0xa6, 0x04, 0x47, 0x13,
  0x32, 0x3c, 0x17, 0xbb, 0x30, 0x36, 0xbb, 0x32, 0xb9, 0x29, 0x41, 0x52,
  0x87, 0x0c, 0xcf, 0x65, 0x0e, 0x2d, 0x8c, 0xac, 0x4c, 0xae, 0xe9, 0x8d,
  0xac, 0x8c, 0x6d, 0x4a, 0xc0, 0x94, 0x21, 0xc3, 0x73, 0x91, 0x2b, 0x9b,
  0x7b, 0xab, 0x93, 0x1b, 0x2b, 0x9b, 0x9b, 0x12, 0x74, 0x75, 0xc8, 0xf0,
  0x5c, 0xec, 0xd2, 0xca, 0xee, 0x92, 0xc8, 0xa6, 0xe8, 0xc2, 0xe8, 0xca,
  0xa6, 0x04, 0x5f, 0x1d, 0x32, 0x3c, 0x97, 0x32, 0x37, 0x3a, 0xb9, 0x3c,
  0xa8, 0xb7, 0x34, 0x37, 0xba, 0xb9, 0x29, 0x41, 0x1e, 0x00, 0x00, 0x00,
  0x79, 0x18, 0x00, 0x00, 0x4c, 0x00, 0x00, 0x00, 0x33, 0x08, 0x80, 0x1c,
  0xc4, 0xe1, 0x1c, 0x66, 0x14, 0x01, 0x3d, 0x88, 0x43, 0x38, 0x84, 0xc3,
  0x8c, 0x42, 0x80, 0x07, 0x79, 0x78, 0x07, 0x73, 0x98, 0x71, 0x0c, 0xe6,
  0x00, 0x0f, 0xed, 0x10, 0x0e, 0xf4, 0x80, 0x0e, 0x33, 0x0c, 0x42, 0x1e,
  0xc2, 0xc1, 0x1d, 0xce, 0xa1, 0x1c, 0x66, 0x30, 0x05, 0x3d, 0x88, 0x43,
  0x38, 0x84, 0x83, 0x1b, 0xcc, 0x03, 0x3d, 0xc8, 0x43, 0x3d, 0x8c, 0x03,
  0x3d, 0xcc, 0x78, 0x8c, 0x74, 0x70, 0x07, 0x7b, 0x08, 0x07, 0x79, 0x48,
  0x87, 0x70, 0x70, 0x07, 0x7a, 0x70, 0x03, 0x76, 0x78, 0x87, 0x70, 0x20,
  0x87, 0x19, 0xcc, 0x11, 0x0e, 0xec, 0x90, 0x0e, 0xe1, 0x30, 0x0f, 0x6e,
  0x30, 0x0f, 0xe3, 0xf0, 0x0e, 0xf0, 0x50, 0x0e, 0x33, 0x10, 0xc4, 0x1d,
  0xde, 0x21, 0x1c, 0xd8, 0x21, 0x1d, 0xc2, 0x61, 0x1e, 0x66, 0x30, 0x89,
  0x3b, 0xbc, 0x83, 0x3b, 0xd0, 0x43, 0x39, 0xb4, 0x03, 0x3c, 0xbc, 0x83,
  0x3c, 0x84, 0x03, 0x3b, 0xcc, 0xf0, 0x14, 0x76, 0x60, 0x07, 0x7b, 0x68,
  0x07, 0x37, 0x68, 0x87, 0x72, 0x68, 0x07, 0x37, 0x80, 0x87, 0x70, 0x90,
  0x87, 0x70, 0x60, 0x07, 0x76, 0x28, 0x07, 0x76, 0xf8, 0x05, 0x76, 0x78,
  0x87, 0x77, 0x80, 0x87, 0x5f, 0x08, 0x87, 0x71, 0x18, 0x87, 0x72, 0x98,
  0x87, 0x79, 0x98, 0x81, 0x2c, 0xee, 0xf0, 0x0e, 0xee, 0xe0, 0x0e, 0xf5,
  0xc0, 0x0e, 0xec, 0x30, 0x03, 0x62, 0xc8, 0xa1, 0x1c, 0xe4, 0xa1, 0x1c,
  0xcc, 0xa1, 0x1c, 0xe4, 0xa1, 0x1c, 0xdc, 0x61, 0x1c, 0xca, 0x21, 0x1c,
  0xc4, 0x81, 0x1d, 0xca, 0x61, 0x06, 0xd6, 0x90, 0x43, 0x39, 0xc8, 0x43,
  0x39, 0x98, 0x43, 0x39, 0xc8, 0x43, 0x39, 0xb8, 0xc3, 0x38, 0x94, 0x43,
  0x38, 0x88, 0x03, 0x3b, 0x94, 0xc3, 0x2f, 0xbc, 0x83, 0x3c, 0xfc, 0x82,
  0x3b, 0xd4, 0x03, 0x3b, 0xb0, 0xc3, 0x0c, 0xc4, 0x21, 0x07, 0x7c, 0x70,
  0x03, 0x7a, 0x28, 0x87, 0x76, 0x80, 0x87, 0x19, 0xd1, 0x43, 0x0e, 0xf8,
  0xe0, 0x06, 0xe4, 0x20, 0x0e, 0xe7, 0xe0, 0x06, 0xf6, 0x10, 0x0e, 0xf2,
  0xc0, 0x0e, 0xe1, 0x90, 0x0f, 0xef, 0x50, 0x0f, 0xf4, 0x00, 0x00, 0x00,
  0x71, 0x20, 0x00, 0x00, 0x19, 0x00, 0x00, 0x00, 0x06, 0xd0, 0xa4, 0x6c,
  0x47, 0x01, 0x4b, 0x4b, 0x5c, 0x13, 0x15, 0x11, 0x46, 0xb0, 0x0d, 0x97,
  0xef, 0x3c, 0xbe, 0x10, 0x50, 0x45, 0x41, 0x44, 0xa5, 0x03, 0x0c, 0x25,
  0x61, 0x00, 0x02, 0xe6, 0x17, 0xb7, 0x6d, 0x05, 0xd2, 0x70, 0xf9, 0xce,
  0xe3, 0x0b, 0x11, 0x01, 0x4c, 0x44, 0x08, 0x34, 0xc3, 0x42, 0x58, 0xc0,
  0x34, 0x5c, 0xbe, 0xf3, 0xf8, 0x8b, 0x03, 0x0c, 0x62, 0xf3, 0x50, 0x93,
  0x5f, 0xdc, 0xb6, 0x0d, 0x40, 0xc3, 0xe5, 0x3b, 0x8f, 0x2f, 0x01, 0xcc,
  0xb3, 0x10, 0x7e, 0x71, 0xdb, 0x26, 0x50, 0x0d, 0x97, 0xef, 0x3c, 0xbe,
  0x34, 0x39, 0x11, 0x81, 0x52, 0xd3, 0x43, 0x4d, 0x7e, 0x71, 0xdb, 0x00,
  0x61, 0x20, 0x00, 0x00, 0x74, 0x00, 0x00, 0x00, 0x13, 0x04, 0x41, 0x2c,
  0x10, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x24, 0x8d, 0x00, 0x50,
  0x51, 0x02, 0x44, 0xcc, 0x00, 0x14, 0x42, 0xc9, 0x95, 0x42, 0xe1, 0x95,
  0x1d, 0x15, 0x65, 0x40, 0xc3, 0x18, 0x01, 0x08, 0x82, 0x20, 0x08, 0x06,
  0x33, 0x00, 0x00, 0x00, 0x23, 0x06, 0x09, 0x00, 0x82, 0x60, 0x30, 0x79,
  0xc7, 0xd4, 0x75, 0xcb, 0x88, 0x41, 0x02, 0x80, 0x20, 0x18, 0x4c, 0x1f,
  0x42, 0x75, 0x1d, 0x33, 0x62, 0x90, 0x00, 0x20, 0x08, 0x06, 0x13, 0x18,
  0x24, 0xc5, 0xf7, 0x35, 0x23, 0x06, 0x09, 0x00, 0x82, 0x60, 0x30, 0x85,
  0x81, 0x62, 0x7c, 0x9f, 0x33, 0x62, 0x90, 0x00, 0x20, 0x08, 0x06, 0x93,
  0x18, 0x2c, 0x16, 0x18, 0x80, 0xc1, 0x33, 0x62, 0x90, 0x00, 0x20, 0x08,
  0x06, 0xc6, 0x19, 0x34, 0x5b, 0x18, 0x60, 0xce, 0x88, 0x41, 0x02, 0x80,
  0x20, 0x18, 0x18, 0x68, 0xe0, 0x70, 0x62, 0x00, 0x3d, 0x23, 0x06, 0x09,
  0x00, 0x82, 0x60, 0x60, 0xa4, 0xc1, 0x03, 0x06, 0x63, 0xa0, 0x41, 0x23,
  0x06, 0x09, 0x00, 0x82, 0x60, 0x60, 0xa8, 0x01, 0x14, 0x06, 0x64, 0x20,
  0x45, 0x23, 0x06, 0x09, 0x00, 0x82, 0x60, 0x60, 0xac, 0x41, 0x64, 0x06,
  0x65, 0xc0, 0x48, 0x23, 0x06, 0x09, 0x00, 0x82, 0x60, 0x60, 0xb0, 0x81,
  0x64, 0x06, 0x66, 0xd0, 0x4d, 0x23, 0x06, 0x09, 0x00, 0x82, 0x60, 0x60,
  0xb4, 0xc1, 0x74, 0x06, 0x67, 0x50, 0x51, 0x23, 0x06, 0x09, 0x00, 0x82,
  0x60, 0x60, 0xb8, 0x01, 0x85, 0x06, 0x68, 0xe0, 0x55, 0x23, 0x06, 0x09,
  0x00, 0x82, 0x60, 0x60, 0xbc, 0x41, 0x95, 0x06, 0x69, 0x00, 0x59, 0x23,
  0x06, 0x0f, 0x00, 0x82, 0x60, 0xd0, 0xb8, 0xc1, 0xd4, 0x2c, 0x87, 0xf1,
  0x3c, 0x6a, 0xa0, 0x06, 0xd7, 0x33, 0x9a, 0x10, 0x00, 0xa3, 0x09, 0x42,
  0x30, 0x9a, 0x30, 0x08, 0xa3, 0x09, 0xc4, 0x30, 0x62, 0xf0, 0x00, 0x20,
  0x08, 0x06, 0xcd, 0x1c, 0x60, 0x53, 0xe4, 0x34, 0x14, 0xf5, 0x06, 0x6f,
  0xc0, 0x51, 0xa3, 0x09, 0x01, 0x30, 0x9a, 0x20, 0x04, 0xa3, 0x09, 0x83,
  0x30, 0x9a, 0x40, 0x0c, 0xe6, 0x68, 0xf2, 0xb1, 0x40, 0x91, 0x8f, 0x05,
  0x86, 0x7c, 0x0c, 0xea, 0xe4, 0x63, 0x01, 0x23, 0x1f, 0x0b, 0x10, 0xf9,
  0x98, 0x04, 0x06, 0xf2, 0xb1, 0xc0, 0x91, 0x8f, 0x05, 0x8a, 0x7c, 0xec,
  0xa1, 0xe4, 0x63, 0xc1, 0x22, 0x9f, 0x11, 0x83, 0x03, 0x00, 0x41, 0x30,
  0x80, 0x44, 0xe1, 0x0c, 0x3e, 0x50, 0x18, 0x4d, 0x08, 0x80, 0xd1, 0x04,
  0x21, 0x18, 0x4d, 0x18, 0x04, 0x2b, 0x06, 0xf9, 0x98, 0x31, 0xc8, 0xc7,
  0x8e, 0x41, 0x3e, 0x36, 0x40, 0xf1, 0xb1, 0xc1, 0x89, 0x8f, 0x0d, 0x4c,
  0x7c, 0x6c, 0x20, 0x03, 0xf9, 0xd8, 0x50, 0x06, 0xf2, 0xb1, 0xc1, 0x0c,
  0xe4, 0x63, 0x83, 0x05, 0x1f, 0x1b, 0x28, 0xf8, 0xd8, 0x20, 0xc1, 0x67,
  0xc4, 0x20, 0x01, 0x40, 0x10, 0x0c, 0x10, 0x5a, 0xc8, 0x83, 0x57, 0x78,
  0x05, 0x53, 0x18, 0x46, 0x0c, 0x12, 0x00, 0x04, 0xc1, 0x00, 0xa1, 0x85,
  0x3c, 0x78, 0x85, 0x57, 0xe8, 0x03, 0x61, 0xc4, 0x20, 0x01, 0x40, 0x10,
  0x0c, 0x10, 0x5a, 0xc8, 0x83, 0x57, 0x78, 0x85, 0x52, 0x08, 0x46, 0x0c,
  0x12, 0x00, 0x04, 0xc1, 0x00, 0xa1, 0x85, 0x3c, 0x78, 0x85, 0x57, 0xb0,
  0x83, 0x08, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5f, 0x14, 0xbe, 0x8f,
  0x3a, 0x06, 0xeb, 0x25, 0xfa, 0xc3, 0x2c, 0x82, 0x72, 0xeb, 0x63, 0xea,
  0x17, 0x00, 0x01, 0x00, 0x29, 0x30, 0x10, 0x00, 0x78, 0x01, 0xed, 0x97,
  0xcd, 0x6a, 0x14, 0x41, 0x10, 0xc7, 0xab, 0xba, 0x7b, 0x7a, 0x66, 0x92,
  0xdd, 0x59, 0xa3, 0x2e, 0x44, 0xd9, 0x60, 0x20, 0x08, 0x11, 0x22, 0x89,
  0xa0, 0x22, 0xe2, 0xd7, 0x41, 0xcf, 0xde, 0x97, 0x10, 0x43, 0x3c, 0xe8,
  0xd1, 0xe4, 0x01, 0x92, 0x31, 0x89, 0x24, 0xc8, 0xaa, 0xc1, 0x93, 0x07,
  0x0f, 0x79, 0x00, 0xf1, 0xe0, 0x03, 0xcc, 0xae, 0x0a, 0xa1, 0xf1, 0x28,
  0x3e, 0x81, 0xe0, 0x25, 0xb9, 0x78, 0x12, 0x11, 0x31, 0xfe, 0x6b, 0x76,
  0x87, 0xcc, 0x84, 0xd5, 0x53, 0x04, 0xc5, 0xf9, 0xc1, 0xbf, 0xab, 0xab,
  0xbf, 0xaa, 0x77, 0xba, 0x17, 0xaa, 0xa7, 0x0e, 0x51, 0xca, 0xfc, 0xd6,
  0xca, 0x1d, 0xb1, 0x5b, 0x0b, 0x5f, 0x46, 0x3e, 0x04, 0x44, 0x1e, 0xea,
  0x0c, 0x89, 0x15, 0x9e, 0x55, 0xa5, 0x24, 0x5a, 0xaf, 0x49, 0x49, 0x34,
  0x20, 0x45, 0x8f, 0x08, 0x1a, 0x83, 0x84, 0x6b, 0x52, 0xf4, 0x90, 0xf9,
  0x44, 0xf1, 0x15, 0xe8, 0xaa, 0xd4, 0xf6, 0x53, 0x87, 0x64, 0x5e, 0x36,
  0x37, 0x8f, 0xc4, 0x55, 0x90, 0x90, 0x59, 0xa1, 0xbb, 0x66, 0x11, 0x03,
  0xc9, 0x98, 0xfc, 0xb8, 0x6c, 0xdf, 0xcf, 0x9f, 0x6e, 0x5f, 0x86, 0xb9,
  0x0e, 0xd1, 0xe4, 0xab, 0xf3, 0xe9, 0x3e, 0x2e, 0x34, 0x37, 0x2e, 0x89,
  0x7d, 0xf9, 0x71, 0x04, 0x7b, 0xfb, 0x77, 0xe9, 0xf7, 0x2d, 0xb2, 0x73,
  0x12, 0xc6, 0xfb, 0x0d, 0xd8, 0x47, 0x76, 0x8e, 0x1d, 0x39, 0x44, 0x90,
  0x9d, 0x65, 0x07, 0xfa, 0xd5, 0xf4, 0x5d, 0x20, 0xb6, 0x1f, 0x1a, 0xb2,
  0x54, 0x8b, 0x61, 0xc8, 0xf2, 0x89, 0x98, 0x70, 0x97, 0xac, 0x9a, 0x8c,
  0xa9, 0x77, 0xcf, 0xfe, 0x07, 0x0e, 0x4b, 0x01, 0xe4, 0x5b, 0xc8, 0x9d,
  0x94, 0x9f, 0xde, 0xfb, 0xdb, 0xa4, 0xc8, 0x7d, 0x15, 0x6e, 0x48, 0x41,
  0x71, 0x5b, 0xb4, 0x31, 0x4c, 0x5f, 0xc5, 0xcb, 0x7c, 0x86, 0xdf, 0xbd,
  0xc3, 0x5d, 0x5f, 0x8b, 0x9f, 0x5e, 0xf0, 0x9c, 0x8f, 0x85, 0x3c, 0x8f,
  0x66, 0x74, 0xa8, 0x66, 0x6a, 0x0d, 0xcc, 0xc7, 0x81, 0xc1, 0x9f, 0x86,
  0x3f, 0x9d, 0xf3, 0x9b, 0xf0, 0x9b, 0x39, 0x7f, 0x16, 0xfe, 0x6c, 0xce,
  0x9f, 0x83, 0x3f, 0x97, 0xf9, 0xd9, 0xfa, 0xb5, 0x34, 0x9e, 0x36, 0xbf,
  0x3b, 0xeb, 0xbf, 0x85, 0x72, 0x8f, 0x07, 0x43, 0xb9, 0xc7, 0x83, 0xa1,
  0xdc, 0x63, 0x49, 0x49, 0x49, 0x49, 0xc9, 0x9f, 0x66, 0xd1, 0x3c, 0x4c,
  0x16, 0x07, 0x7e, 0x24, 0x9e, 0x5e, 0x4e, 0xb4, 0x6e, 0x25, 0xb1, 0x7e,
  0x04, 0x3d, 0x80, 0x56, 0x12, 0xaa, 0xbe, 0xeb, 0x90, 0xf7, 0xb8, 0x13,
  0xea, 0xef, 0x09, 0x05, 0x81, 0xa3, 0xb0, 0xe2, 0x7c, 0xbd, 0x89, 0xbe,
  0xb5, 0x84, 0x83, 0xd0, 0x71, 0x58, 0x75, 0xa4, 0xb7, 0x3a, 0xe4, 0x2f,
  0x77, 0x96, 0xa8, 0xd5, 0x46, 0xda, 0xfe, 0x59, 0xa9, 0x4f, 0x78, 0x14,
  0x0c, 0x3b, 0x1a, 0x6c, 0x38, 0xf2, 0xc7, 0x1d, 0xd1, 0x84, 0x23, 0x9e,
  0x72, 0xa4, 0xce, 0x62, 0x2c, 0xb9, 0x60, 0x97, 0xd7, 0x25, 0xa3, 0x1d,
  0xd5, 0x71, 0xf2, 0x1a, 0x31, 0x77, 0x11, 0xe7, 0xc5, 0x4d, 0x45, 0x3c,
  0x70, 0xcc, 0xf1, 0xe0, 0x88, 0x63, 0xff, 0x94, 0x63, 0x3a, 0xed, 0x98,
  0xcf, 0x38, 0x56, 0xe7, 0x1c, 0x6b, 0x76, 0xd8, 0xdf, 0x9a, 0xac, 0x6d,
  0xed, 0x18, 0x19, 0x8e, 0xdf, 0xcc, 0xd7, 0x5a, 0x6d, 0xe5, 0x29, 0xab,
  0x7d, 0x63, 0x2b, 0x9e, 0x89, 0x3c, 0xa6, 0xc8, 0x84, 0xd6, 0x56, 0x7d,
  0x1b, 0x0d, 0x6a, 0x15, 0xdd, 0x43, 0x3f, 0x1d, 0x09, 0x22, 0x55, 0x33,
  0x51, 0xba, 0x2f, 0x8a, 0xdf, 0x1b, 0x1d, 0xac, 0x52, 0xdd, 0x54, 0xb8,
  0x4a, 0x91, 0x1e, 0xb2, 0x91, 0x27, 0x6d, 0x5e, 0x65, 0x95, 0xc5, 0x32,
  0xad, 0x7a, 0x75, 0x2c, 0x85, 0x3a, 0xd7, 0x95, 0x41, 0x4e, 0x5b, 0xc8,
  0x89, 0x89, 0xee, 0xb7, 0x8f, 0x8b, 0x61, 0xc9, 0xc8, 0x69, 0x4a, 0x0a,
  0x41, 0xda, 0x98, 0xd3, 0x6c, 0x7c, 0xaf, 0x0d, 0xe3, 0x15, 0xa7, 0x99,
  0x77, 0xa1, 0x4d, 0xb3, 0x95, 0xea, 0x5e, 0x1b, 0x64, 0x94, 0x2f, 0xb9,
  0x7d, 0xfe, 0xc9, 0x4b, 0x14, 0x14, 0x63, 0x60, 0x2a, 0xb1, 0x29, 0xc6,
  0x90, 0x46, 0x15, 0x14, 0x63, 0x30, 0xda, 0xb4, 0x29, 0xc6, 0x90, 0x74,
  0xdf, 0x18, 0x1f, 0xe5, 0xbe, 0x18, 0x60, 0xb3, 0xf7, 0xa0, 0xb8, 0x0b,
  0x85, 0x10, 0xa7, 0xaf, 0x0d, 0x22, 0x19, 0x6d, 0x69, 0x88, 0x1a, 0xb0,
  0x9c, 0xae, 0xd0, 0x65, 0x14, 0x62, 0xdd, 0x7b, 0xe4, 0x01, 0x59, 0x50,
  0xfa, 0x11, 0x36, 0x45, 0x1e, 0xc8, 0xd2, 0x9f, 0xf9, 0x06, 0xab, 0x08,
  0xb7, 0x8e, 0x26, 0x4f, 0x2e, 0xda, 0x9d, 0x93, 0xdf, 0xde, 0x4e, 0x2c,
  0x2f, 0xec, 0xdc, 0xde, 0xfe, 0x09, 0x0e, 0xe8, 0xa9, 0x44, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x03, 0x00, 0x03, 0x00,
  0x08, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x03, 0x01, 0x04, 0x02, 0x04, 0x02, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x05, 0x04, 0x08, 0x02, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x01, 0x06, 0x06,
  0x04, 0x02, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x02, 0x07, 0x08, 0x00, 0x04, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0xcc, 0x00, 0x00, 0x78, 0x01, 0x6d, 0xcc,
  0xb1, 0x11, 0x40, 0x40, 0x10, 0x46, 0xe1, 0x1f, 0xa3, 0x07, 0x89, 0xae,
  0x2e, 0x54, 0x84, 0x50, 0x11, 0x42, 0x45, 0x08, 0x15, 0x21, 0xd4, 0x13,
  0xef, 0x05, 0x9b, 0x79, 0x33, 0xdf, 0xdc, 0xba, 0x9d, 0xd3, 0x25, 0x19,
  0x31, 0xc1, 0x1e, 0xcc, 0x30, 0xef, 0x1b, 0xcc, 0x79, 0x85, 0x39, 0xef,
  0x30, 0xe7, 0x13, 0x3d, 0xec, 0x86, 0xff, 0x5c, 0x60, 0xce, 0xd5, 0x4b,
  0x7e, 0x6f, 0x18, 0xf0, 0xb7, 0x3b, 0x60, 0xce, 0xb2, 0xda, 0x5d, 0xa8,
  0x77, 0x32, 0x77, 0x9e, 0x49, 0xf2, 0x01, 0x2b, 0xfe, 0x15, 0xf2, 0x00,
  0x78, 0x62, 0x6f, 0x70, 0x01, 0x00, 0x00, 0x00, 0x7e, 0x02, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00
};
