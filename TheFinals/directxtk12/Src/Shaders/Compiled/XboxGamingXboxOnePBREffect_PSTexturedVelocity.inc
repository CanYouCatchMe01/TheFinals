#if 0
;
; Input signature:
;
; Name                 Index   Mask Register SysValue  Format   Used
; -------------------- ----- ------ -------- -------- ------- ------
; TEXCOORD                 0   xy          0     NONE   float   xy  
; TEXCOORD                 1   xyzw        1     NONE   float   xyz 
; TEXCOORD                 2   xyz         2     NONE   float   xyz 
; COLOR                    0   xyzw        3     NONE   float       
; SV_Position              0   xyzw        4      POS   float   xyz 
; TEXCOORD                 4   xyzw        5     NONE   float   xyzw
;
;
; Output signature:
;
; Name                 Index   Mask Register SysValue  Format   Used
; -------------------- ----- ------ -------- -------- ------- ------
; SV_Target                0   xyzw        0   TARGET   float   xyzw
; SV_Target                1   x           1   TARGET    uint   x   
;
; shader debug name: C:\Users\marcu\Downloads\DirectXTK12-main\DirectXTK12-main\Src/Shaders/Compiled\XboxGamingXboxOnePBREffect_PSTexturedVelocity.pdb
; shader hash: f471c2f7e51e82cca36cd4098efa0eaf
;
; Pipeline Runtime Information: 
;
;PSVRuntimeInfo:
; Pixel Shader
; DepthOutput=0
; SampleFrequency=0
; MinimumExpectedWaveLaneCount: 0
; MaximumExpectedWaveLaneCount: 4294967295
; UsesViewID: false
; SigInputElements: 6
; SigOutputElements: 2
; SigPatchConstOrPrimElements: 0
; SigInputVectors: 6
; SigOutputVectors[0]: 2
; SigOutputVectors[1]: 0
; SigOutputVectors[2]: 0
; SigOutputVectors[3]: 0
; EntryFunctionName: PSTexturedVelocity
;
;
; Input signature:
;
; Name                 Index             InterpMode DynIdx
; -------------------- ----- ---------------------- ------
; TEXCOORD                 0                 linear       
; TEXCOORD                 1                 linear       
; TEXCOORD                 2                 linear       
; COLOR                    0                 linear       
; SV_Position              0          noperspective       
; TEXCOORD                 4                 linear       
;
; Output signature:
;
; Name                 Index             InterpMode DynIdx
; -------------------- ----- ---------------------- ------
; SV_Target                0                              
; SV_Target                1                              
;
; Buffer Definitions:
;
; cbuffer 
; {
;
;   [388 x i8] (type annotation not present)
;
; }
;
;
; Resource Bindings:
;
; Name                                 Type  Format         Dim      ID      HLSL Bind  Count
; ------------------------------ ---------- ------- ----------- ------- -------------- ------
;                                   cbuffer      NA          NA     CB0            cb0     1
;                                   sampler      NA          NA      S0             s0     1
;                                   sampler      NA          NA      S1             s1     1
;                                   texture     f32          2d      T0             t0     1
;                                   texture     f32          2d      T1             t1     1
;                                   texture     f32          2d      T2             t2     1
;                                   texture     f32        cube      T3             t4     1
;                                   texture     f32        cube      T4             t5     1
;
;
; ViewId state:
;
; Number of inputs: 24, outputs: 5
; Outputs dependent on ViewId: {  }
; Inputs contributing to computation of Outputs:
;   output 0 depends on inputs: { 0, 1, 4, 5, 6, 8, 9, 10 }
;   output 1 depends on inputs: { 0, 1, 4, 5, 6, 8, 9, 10 }
;   output 2 depends on inputs: { 0, 1, 4, 5, 6, 8, 9, 10 }
;   output 3 depends on inputs: { 0, 1 }
;   output 4 depends on inputs: { 16, 17, 18, 20, 21, 22, 23 }
;
target datalayout = "e-m:e-p:32:32-i1:32-i8:32-i16:32-i32:32-i64:64-f16:32-f32:32-f64:64-n8:16:32:64"
target triple = "dxil-ms-xb1"

%dx.types.Handle = type { i8* }
%dx.types.CBufRet.f32 = type { float, float, float, float }
%dx.types.ResRet.f32 = type { float, float, float, float, i32 }
%dx.types.CBufRet.i32 = type { i32, i32, i32, i32 }
%"class.Texture2D<vector<float, 4> >" = type { <4 x float>, %"class.Texture2D<vector<float, 4> >::mips_type" }
%"class.Texture2D<vector<float, 4> >::mips_type" = type { i32 }
%"class.Texture2D<vector<float, 3> >" = type { <3 x float>, %"class.Texture2D<vector<float, 3> >::mips_type" }
%"class.Texture2D<vector<float, 3> >::mips_type" = type { i32 }
%"class.TextureCube<vector<float, 3> >" = type { <3 x float> }
%hostlayout.Constants = type { <3 x float>, [4 x <4 x float>], [3 x <3 x float>], [4 x <4 x float>], [4 x <4 x float>], [3 x <3 x float>], [3 x <3 x float>], <3 x float>, float, float, float, i32, float, float }
%struct.SamplerState = type { i32 }

define void @PSTexturedVelocity() {
  %1 = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 0, i32 4, i32 5, i1 false)  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %2 = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 0, i32 3, i32 4, i1 false)  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %3 = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 0, i32 2, i32 2, i1 false)  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %4 = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 0, i32 1, i32 1, i1 false)  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %5 = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 0, i32 0, i32 0, i1 false)  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %6 = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 3, i32 1, i32 1, i1 false)  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %7 = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 3, i32 0, i32 0, i1 false)  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %8 = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 2, i32 0, i32 0, i1 false)  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %9 = call float @dx.op.loadInput.f32(i32 4, i32 5, i32 0, i8 1, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %10 = call float @dx.op.loadInput.f32(i32 4, i32 5, i32 0, i8 3, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %11 = call float @dx.op.loadInput.f32(i32 4, i32 4, i32 0, i8 1, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %12 = call float @dx.op.loadInput.f32(i32 4, i32 2, i32 0, i8 0, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %13 = call float @dx.op.loadInput.f32(i32 4, i32 2, i32 0, i8 1, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %14 = call float @dx.op.loadInput.f32(i32 4, i32 2, i32 0, i8 2, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %15 = call float @dx.op.loadInput.f32(i32 4, i32 1, i32 0, i8 0, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %16 = call float @dx.op.loadInput.f32(i32 4, i32 1, i32 0, i8 1, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %17 = call float @dx.op.loadInput.f32(i32 4, i32 1, i32 0, i8 2, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %18 = call float @dx.op.loadInput.f32(i32 4, i32 0, i32 0, i8 0, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %19 = call float @dx.op.loadInput.f32(i32 4, i32 0, i32 0, i8 1, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %20 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %8, i32 0)  ; CBufferLoadLegacy(handle,regIndex)
  %21 = extractvalue %dx.types.CBufRet.f32 %20, 0
  %22 = extractvalue %dx.types.CBufRet.f32 %20, 1
  %23 = extractvalue %dx.types.CBufRet.f32 %20, 2
  %24 = fsub fast float %21, %15
  %25 = fsub fast float %22, %16
  %26 = fsub fast float %23, %17
  %27 = call float @dx.op.dot3.f32(i32 55, float %24, float %25, float %26, float %24, float %25, float %26)  ; Dot3(ax,ay,az,bx,by,bz)
  %28 = call float @dx.op.unary.f32(i32 25, float %27)  ; Rsqrt(value)
  %29 = fmul fast float %24, %28
  %30 = fmul fast float %25, %28
  %31 = fmul fast float %26, %28
  %32 = call %dx.types.ResRet.f32 @dx.op.sample.f32(i32 60, %dx.types.Handle %4, %dx.types.Handle %7, float %18, float %19, float undef, float undef, i32 0, i32 0, i32 undef, float undef)  ; Sample(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,clamp)
  %33 = extractvalue %dx.types.ResRet.f32 %32, 0
  %34 = extractvalue %dx.types.ResRet.f32 %32, 1
  %35 = fmul fast float %33, 2.000000e+00
  %36 = fmul fast float %34, 2.000000e+00
  %37 = fadd fast float %35, -1.000000e+00
  %38 = fadd fast float %36, -1.000000e+00
  %39 = call float @dx.op.dot2.f32(i32 54, float %37, float %38, float %37, float %38)  ; Dot2(ax,ay,bx,by)
  %40 = fsub fast float 1.000000e+00, %39
  %41 = call float @dx.op.unary.f32(i32 24, float %40)  ; Sqrt(value)
  %42 = call float @dx.op.unary.f32(i32 83, float %15)  ; DerivCoarseX(value)
  %43 = call float @dx.op.unary.f32(i32 83, float %16)  ; DerivCoarseX(value)
  %44 = call float @dx.op.unary.f32(i32 83, float %17)  ; DerivCoarseX(value)
  %45 = call float @dx.op.unary.f32(i32 84, float %15)  ; DerivCoarseY(value)
  %46 = call float @dx.op.unary.f32(i32 84, float %16)  ; DerivCoarseY(value)
  %47 = call float @dx.op.unary.f32(i32 84, float %17)  ; DerivCoarseY(value)
  %48 = call float @dx.op.unary.f32(i32 83, float %18)  ; DerivCoarseX(value)
  %49 = call float @dx.op.unary.f32(i32 83, float %19)  ; DerivCoarseX(value)
  %50 = call float @dx.op.unary.f32(i32 84, float %18)  ; DerivCoarseY(value)
  %51 = call float @dx.op.unary.f32(i32 84, float %19)  ; DerivCoarseY(value)
  %52 = fmul fast float %47, %43
  %53 = fmul fast float %46, %44
  %54 = fsub fast float %52, %53
  %55 = fmul fast float %45, %44
  %56 = fmul fast float %47, %42
  %57 = fsub fast float %55, %56
  %58 = fmul fast float %46, %42
  %59 = fmul fast float %45, %43
  %60 = fsub fast float %58, %59
  %61 = fmul fast float %60, %46
  %62 = fmul fast float %57, %47
  %63 = fsub fast float %61, %62
  %64 = fmul fast float %54, %47
  %65 = fmul fast float %60, %45
  %66 = fsub fast float %64, %65
  %67 = fmul fast float %57, %45
  %68 = fmul fast float %54, %46
  %69 = fsub fast float %67, %68
  %70 = fmul fast float %57, %44
  %71 = fmul fast float %60, %43
  %72 = fsub fast float %70, %71
  %73 = fmul fast float %60, %42
  %74 = fmul fast float %54, %44
  %75 = fsub fast float %73, %74
  %76 = fmul fast float %54, %43
  %77 = fmul fast float %57, %42
  %78 = fsub fast float %76, %77
  %79 = fmul fast float %63, %48
  %80 = call float @dx.op.tertiary.f32(i32 46, float %50, float %72, float %79)  ; FMad(a,b,c)
  %81 = fmul fast float %66, %48
  %82 = call float @dx.op.tertiary.f32(i32 46, float %50, float %75, float %81)  ; FMad(a,b,c)
  %83 = fmul fast float %69, %48
  %84 = call float @dx.op.tertiary.f32(i32 46, float %50, float %78, float %83)  ; FMad(a,b,c)
  %85 = call float @dx.op.dot3.f32(i32 55, float %80, float %82, float %84, float %80, float %82, float %84)  ; Dot3(ax,ay,az,bx,by,bz)
  %86 = call float @dx.op.unary.f32(i32 25, float %85)  ; Rsqrt(value)
  %87 = fmul fast float %63, %49
  %88 = call float @dx.op.tertiary.f32(i32 46, float %51, float %72, float %87)  ; FMad(a,b,c)
  %89 = fmul fast float %66, %49
  %90 = call float @dx.op.tertiary.f32(i32 46, float %51, float %75, float %89)  ; FMad(a,b,c)
  %91 = fmul fast float %69, %49
  %92 = call float @dx.op.tertiary.f32(i32 46, float %51, float %78, float %91)  ; FMad(a,b,c)
  %93 = call float @dx.op.dot3.f32(i32 55, float %88, float %90, float %92, float %88, float %90, float %92)  ; Dot3(ax,ay,az,bx,by,bz)
  %94 = call float @dx.op.unary.f32(i32 25, float %93)  ; Rsqrt(value)
  %95 = fmul fast float %94, %88
  %96 = fmul fast float %94, %90
  %97 = fmul fast float %94, %92
  %98 = fmul fast float %80, %37
  %99 = fmul fast float %98, %86
  %100 = call float @dx.op.tertiary.f32(i32 46, float %38, float %95, float %99)  ; FMad(a,b,c)
  %101 = call float @dx.op.tertiary.f32(i32 46, float %41, float %12, float %100)  ; FMad(a,b,c)
  %102 = fmul fast float %82, %37
  %103 = fmul fast float %102, %86
  %104 = call float @dx.op.tertiary.f32(i32 46, float %38, float %96, float %103)  ; FMad(a,b,c)
  %105 = call float @dx.op.tertiary.f32(i32 46, float %41, float %13, float %104)  ; FMad(a,b,c)
  %106 = fmul fast float %84, %37
  %107 = fmul fast float %106, %86
  %108 = call float @dx.op.tertiary.f32(i32 46, float %38, float %97, float %107)  ; FMad(a,b,c)
  %109 = call float @dx.op.tertiary.f32(i32 46, float %41, float %14, float %108)  ; FMad(a,b,c)
  %110 = call float @dx.op.dot3.f32(i32 55, float %101, float %105, float %109, float %101, float %105, float %109)  ; Dot3(ax,ay,az,bx,by,bz)
  %111 = call float @dx.op.unary.f32(i32 25, float %110)  ; Rsqrt(value)
  %112 = fmul fast float %111, %101
  %113 = fmul fast float %111, %105
  %114 = fmul fast float %111, %109
  %115 = call %dx.types.ResRet.f32 @dx.op.sample.f32(i32 60, %dx.types.Handle %5, %dx.types.Handle %7, float %18, float %19, float undef, float undef, i32 0, i32 0, i32 undef, float undef)  ; Sample(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,clamp)
  %116 = extractvalue %dx.types.ResRet.f32 %115, 0
  %117 = extractvalue %dx.types.ResRet.f32 %115, 1
  %118 = extractvalue %dx.types.ResRet.f32 %115, 2
  %119 = call %dx.types.ResRet.f32 @dx.op.sample.f32(i32 60, %dx.types.Handle %3, %dx.types.Handle %7, float %18, float %19, float undef, float undef, i32 0, i32 0, i32 undef, float undef)  ; Sample(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,clamp)
  %120 = extractvalue %dx.types.ResRet.f32 %119, 0
  %121 = extractvalue %dx.types.ResRet.f32 %119, 1
  %122 = extractvalue %dx.types.ResRet.f32 %119, 2
  %123 = call float @dx.op.dot3.f32(i32 55, float %112, float %113, float %114, float %29, float %30, float %31)  ; Dot3(ax,ay,az,bx,by,bz)
  %124 = call float @dx.op.unary.f32(i32 7, float %123)  ; Saturate(value)
  %125 = fmul fast float %121, %121
  %126 = fmul fast float %122, %116
  %127 = fmul fast float %122, %117
  %128 = fmul fast float %122, %118
  %129 = fsub fast float %116, %126
  %130 = fsub fast float %117, %127
  %131 = fsub fast float %118, %128
  %132 = fmul fast float %129, %120
  %133 = fmul fast float %130, %120
  %134 = fmul fast float %131, %120
  %135 = fadd fast float %116, 0xBFA47AE140000000
  %136 = fadd fast float %117, 0xBFA47AE140000000
  %137 = fadd fast float %118, 0xBFA47AE140000000
  %138 = fmul fast float %122, %135
  %139 = fmul fast float %122, %136
  %140 = fmul fast float %122, %137
  %141 = fadd fast float %138, 0x3FA47AE140000000
  %142 = fadd fast float %139, 0x3FA47AE140000000
  %143 = fadd fast float %140, 0x3FA47AE140000000
  %144 = fmul fast float %141, %120
  %145 = fmul fast float %142, %120
  %146 = fmul fast float %143, %120
  br label %147

; <label>:147                                     ; preds = %147, %0
  %148 = phi float [ 0.000000e+00, %0 ], [ %244, %147 ]
  %149 = phi float [ 0.000000e+00, %0 ], [ %245, %147 ]
  %150 = phi float [ 0.000000e+00, %0 ], [ %246, %147 ]
  %151 = phi i32 [ 0, %0 ], [ %247, %147 ]
  %152 = add nuw nsw i32 %151, 16
  %153 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %8, i32 %152)  ; CBufferLoadLegacy(handle,regIndex)
  %154 = extractvalue %dx.types.CBufRet.f32 %153, 0
  %155 = extractvalue %dx.types.CBufRet.f32 %153, 1
  %156 = extractvalue %dx.types.CBufRet.f32 %153, 2
  %157 = fsub fast float -0.000000e+00, %154
  %158 = fsub fast float -0.000000e+00, %155
  %159 = fsub fast float -0.000000e+00, %156
  %160 = call float @dx.op.dot3.f32(i32 55, float %157, float %158, float %159, float %157, float %158, float %159)  ; Dot3(ax,ay,az,bx,by,bz)
  %161 = call float @dx.op.unary.f32(i32 25, float %160)  ; Rsqrt(value)
  %162 = fmul fast float %161, %157
  %163 = fmul fast float %161, %158
  %164 = fmul fast float %161, %159
  %165 = fadd fast float %162, %29
  %166 = fadd fast float %163, %30
  %167 = fadd fast float %164, %31
  %168 = call float @dx.op.dot3.f32(i32 55, float %165, float %166, float %167, float %165, float %166, float %167)  ; Dot3(ax,ay,az,bx,by,bz)
  %169 = call float @dx.op.unary.f32(i32 25, float %168)  ; Rsqrt(value)
  %170 = fmul fast float %165, %169
  %171 = fmul fast float %166, %169
  %172 = fmul fast float %167, %169
  %173 = call float @dx.op.dot3.f32(i32 55, float %112, float %113, float %114, float %162, float %163, float %164)  ; Dot3(ax,ay,az,bx,by,bz)
  %174 = call float @dx.op.unary.f32(i32 7, float %173)  ; Saturate(value)
  %175 = call float @dx.op.dot3.f32(i32 55, float %162, float %163, float %164, float %170, float %171, float %172)  ; Dot3(ax,ay,az,bx,by,bz)
  %176 = call float @dx.op.unary.f32(i32 7, float %175)  ; Saturate(value)
  %177 = call float @dx.op.dot3.f32(i32 55, float %112, float %113, float %114, float %170, float %171, float %172)  ; Dot3(ax,ay,az,bx,by,bz)
  %178 = call float @dx.op.unary.f32(i32 7, float %177)  ; Saturate(value)
  %179 = fmul fast float %121, 2.000000e+00
  %180 = fmul fast float %176, %176
  %181 = fmul fast float %180, %179
  %182 = fadd fast float %181, -5.000000e-01
  %183 = fsub fast float 1.000000e+00, %174
  %184 = fmul fast float %183, %183
  %185 = fmul fast float %184, %184
  %186 = fmul fast float %185, %183
  %187 = fmul fast float %186, %182
  %188 = fadd fast float %187, 1.000000e+00
  %189 = fsub fast float 1.000000e+00, %124
  %190 = fmul fast float %189, %189
  %191 = fmul fast float %190, %190
  %192 = fmul fast float %191, %189
  %193 = fmul fast float %192, %182
  %194 = fadd fast float %193, 1.000000e+00
  %195 = fmul fast float %188, %194
  %196 = fmul fast float %125, %125
  %197 = fadd fast float %196, -1.000000e+00
  %198 = fmul fast float %178, %178
  %199 = fmul fast float %198, %197
  %200 = fadd fast float %199, 1.000000e+00
  %201 = fmul fast float %200, %200
  %202 = fmul fast float %201, 0x400921FB60000000
  %203 = call float @dx.op.binary.f32(i32 35, float 0x3EB0C6F7A0000000, float %202)  ; FMax(a,b)
  %204 = fdiv fast float %196, %203
  %205 = fsub fast float 1.000000e+00, %144
  %206 = fsub fast float 1.000000e+00, %145
  %207 = fsub fast float 1.000000e+00, %146
  %208 = fsub fast float 1.000000e+00, %176
  %209 = fmul fast float %208, %208
  %210 = fmul fast float %209, %209
  %211 = fmul fast float %210, %208
  %212 = fmul fast float %211, %205
  %213 = fmul fast float %211, %206
  %214 = fmul fast float %211, %207
  %215 = fadd fast float %212, %144
  %216 = fadd fast float %213, %145
  %217 = fadd fast float %214, %146
  %218 = fsub fast float 1.000000e+00, %180
  %219 = fmul fast float %196, 2.500000e-01
  %220 = fmul fast float %219, %218
  %221 = fadd fast float %220, %180
  %222 = fdiv fast float 1.000000e+00, %221
  %223 = fmul fast float %222, %204
  %224 = fmul fast float %223, %215
  %225 = fmul fast float %223, %216
  %226 = fmul fast float %223, %217
  %227 = add nuw nsw i32 %151, 19
  %228 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %8, i32 %227)  ; CBufferLoadLegacy(handle,regIndex)
  %229 = extractvalue %dx.types.CBufRet.f32 %228, 0
  %230 = extractvalue %dx.types.CBufRet.f32 %228, 1
  %231 = extractvalue %dx.types.CBufRet.f32 %228, 2
  %232 = fmul fast float %229, %174
  %233 = fmul fast float %230, %174
  %234 = fmul fast float %231, %174
  %235 = fmul fast float %195, %132
  %236 = fmul fast float %195, %133
  %237 = fmul fast float %195, %134
  %238 = fadd fast float %224, %235
  %239 = fadd fast float %225, %236
  %240 = fadd fast float %226, %237
  %241 = fmul fast float %232, %238
  %242 = fmul fast float %233, %239
  %243 = fmul fast float %234, %240
  %244 = fadd fast float %241, %148
  %245 = fadd fast float %242, %149
  %246 = fadd fast float %243, %150
  %247 = add nuw nsw i32 %151, 1
  %248 = icmp eq i32 %247, 3
  br i1 %248, label %249, label %147

; <label>:249                                     ; preds = %147
  %250 = call float @dx.op.loadInput.f32(i32 4, i32 5, i32 0, i8 0, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %251 = call float @dx.op.loadInput.f32(i32 4, i32 5, i32 0, i8 2, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %252 = call float @dx.op.loadInput.f32(i32 4, i32 4, i32 0, i8 0, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %253 = call float @dx.op.loadInput.f32(i32 4, i32 4, i32 0, i8 2, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %254 = extractvalue %dx.types.ResRet.f32 %115, 3
  %255 = call %dx.types.ResRet.f32 @dx.op.sample.f32(i32 60, %dx.types.Handle %1, %dx.types.Handle %6, float %112, float %113, float %114, float undef, i32 undef, i32 undef, i32 undef, float undef)  ; Sample(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,clamp)
  %256 = extractvalue %dx.types.ResRet.f32 %255, 0
  %257 = extractvalue %dx.types.ResRet.f32 %255, 1
  %258 = extractvalue %dx.types.ResRet.f32 %255, 2
  %259 = fmul fast float %256, %132
  %260 = fmul fast float %257, %133
  %261 = fmul fast float %258, %134
  %262 = fadd fast float %259, %244
  %263 = fadd fast float %260, %245
  %264 = fadd fast float %261, %246
  %265 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %8, i32 23)  ; CBufferLoadLegacy(handle,regIndex)
  %266 = extractvalue %dx.types.CBufRet.i32 %265, 2
  %267 = sitofp i32 %266 to float
  %268 = fmul fast float %267, %121
  %269 = fsub fast float -0.000000e+00, %29
  %270 = fsub fast float -0.000000e+00, %30
  %271 = fsub fast float -0.000000e+00, %31
  %272 = call float @dx.op.dot3.f32(i32 55, float %269, float %270, float %271, float %112, float %113, float %114)  ; Dot3(ax,ay,az,bx,by,bz)
  %273 = fmul fast float %272, 2.000000e+00
  %274 = fmul fast float %273, %112
  %275 = fmul fast float %273, %113
  %276 = fmul fast float %273, %114
  %277 = fsub fast float %269, %274
  %278 = fsub fast float %270, %275
  %279 = fsub fast float %271, %276
  %280 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %2, %dx.types.Handle %6, float %277, float %278, float %279, float undef, i32 undef, i32 undef, i32 undef, float %268)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %281 = extractvalue %dx.types.ResRet.f32 %280, 0
  %282 = extractvalue %dx.types.ResRet.f32 %280, 1
  %283 = extractvalue %dx.types.ResRet.f32 %280, 2
  %284 = fmul fast float %281, %144
  %285 = fmul fast float %282, %145
  %286 = fmul fast float %283, %146
  %287 = fadd fast float %262, %284
  %288 = fadd fast float %263, %285
  %289 = fadd fast float %264, %286
  %290 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %8, i32 22)  ; CBufferLoadLegacy(handle,regIndex)
  %291 = extractvalue %dx.types.CBufRet.f32 %290, 3
  %292 = fmul fast float %291, %254
  %293 = fdiv fast float %250, %10
  %294 = fdiv fast float %9, %10
  %295 = fdiv fast float %251, %10
  %296 = fmul fast float %293, 5.000000e-01
  %297 = fmul fast float %294, 5.000000e-01
  %298 = fadd fast float %296, 5.000000e-01
  %299 = fsub fast float 5.000000e-01, %297
  %300 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %8, i32 23)  ; CBufferLoadLegacy(handle,regIndex)
  %301 = extractvalue %dx.types.CBufRet.f32 %300, 3
  %302 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %8, i32 24)  ; CBufferLoadLegacy(handle,regIndex)
  %303 = extractvalue %dx.types.CBufRet.f32 %302, 0
  %304 = fmul fast float %301, %298
  %305 = fmul fast float %303, %299
  %306 = fsub fast float %304, %252
  %307 = fsub fast float %305, %11
  %308 = fsub fast float %295, %253
  %309 = bitcast float %306 to i32
  %310 = lshr i32 %309, 31
  %311 = fmul fast float %306, 0x3F00000000000000
  %312 = call float @dx.op.unary.f32(i32 6, float %311)  ; FAbs(value)
  %313 = call float @xbox.Med3_F32(i32 10, float %312, float 0.000000e+00, float 0x3F7FFC0000000000)
  %314 = call i32 @dx.op.legacyF32ToF16(i32 130, float %313)  ; LegacyF32ToF16(value)
  %315 = add i32 %314, 8
  %316 = lshr i32 %315, 4
  %317 = shl nuw nsw i32 %310, 9
  %318 = or i32 %316, %317
  %319 = bitcast float %307 to i32
  %320 = lshr i32 %319, 31
  %321 = fmul fast float %307, 0x3F00000000000000
  %322 = call float @dx.op.unary.f32(i32 6, float %321)  ; FAbs(value)
  %323 = call float @xbox.Med3_F32(i32 10, float %322, float 0.000000e+00, float 0x3F7FFC0000000000)
  %324 = call i32 @dx.op.legacyF32ToF16(i32 130, float %323)  ; LegacyF32ToF16(value)
  %325 = add i32 %324, 8
  %326 = lshr i32 %325, 4
  %327 = shl nuw nsw i32 %320, 9
  %328 = or i32 %326, %327
  %329 = shl i32 %328, 10
  %330 = or i32 %318, %329
  %331 = bitcast float %308 to i32
  %332 = lshr i32 %331, 31
  %333 = fmul fast float %308, 7.812500e-03
  %334 = call float @dx.op.unary.f32(i32 6, float %333)  ; FAbs(value)
  %335 = call float @xbox.Med3_F32(i32 10, float %334, float 0.000000e+00, float 0x3F7FFC0000000000)
  %336 = call i32 @dx.op.legacyF32ToF16(i32 130, float %335)  ; LegacyF32ToF16(value)
  %337 = add i32 %336, 2
  %338 = lshr i32 %337, 2
  %339 = shl nuw nsw i32 %332, 11
  %340 = or i32 %338, %339
  %341 = shl i32 %340, 20
  %342 = or i32 %330, %341
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 0, float %287)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 1, float %288)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 2, float %289)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 3, float %292)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.i32(i32 5, i32 1, i32 0, i8 0, i32 %342)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  ret void
}

; Function Attrs: nounwind readnone
declare float @dx.op.loadInput.f32(i32, i32, i32, i8, i32) #0

; Function Attrs: nounwind
declare void @dx.op.storeOutput.f32(i32, i32, i32, i8, float) #1

; Function Attrs: nounwind
declare void @dx.op.storeOutput.i32(i32, i32, i32, i8, i32) #1

; Function Attrs: nounwind readnone
declare float @dx.op.dot3.f32(i32, float, float, float, float, float, float) #0

; Function Attrs: nounwind readnone
declare float @dx.op.unary.f32(i32, float) #0

; Function Attrs: nounwind readonly
declare %dx.types.ResRet.f32 @dx.op.sample.f32(i32, %dx.types.Handle, %dx.types.Handle, float, float, float, float, i32, i32, i32, float) #2

; Function Attrs: nounwind readnone
declare float @dx.op.dot2.f32(i32, float, float, float, float) #0

; Function Attrs: nounwind readnone
declare float @dx.op.binary.f32(i32, float, float) #0

; Function Attrs: nounwind readnone
declare float @xbox.Med3_F32(i32, float, float, float) #0

; Function Attrs: nounwind readonly
declare %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32, %dx.types.Handle, %dx.types.Handle, float, float, float, float, i32, i32, i32, float) #2

; Function Attrs: nounwind readnone
declare i32 @dx.op.legacyF32ToF16(i32, float) #0

; Function Attrs: nounwind readonly
declare %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32, %dx.types.Handle, i32) #2

; Function Attrs: nounwind readonly
declare %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32, %dx.types.Handle, i32) #2

; Function Attrs: nounwind readnone
declare float @dx.op.tertiary.f32(i32, float, float, float) #0

; Function Attrs: nounwind readonly
declare %dx.types.Handle @dx.op.createHandle(i32, i8, i32, i32, i1) #2

attributes #0 = { nounwind readnone }
attributes #1 = { nounwind }
attributes #2 = { nounwind readonly }

!xbox.compiler.options = !{!0}
!llvm.ident = !{!1}
!dx.version = !{!2}
!dx.valver = !{!3}
!dx.shaderModel = !{!4}
!dx.resources = !{!5}
!dx.viewIdState = !{!18}
!dx.entryPoints = !{!19}

!0 = !{!"__XBOX_PER_THREAD_SCRATCH_SIZE_LIMIT_IN_BYTES", !"0"}
!1 = !{!"dxcxbox 2410.2410.11116.10741"}
!2 = !{i32 1, i32 0}
!3 = !{i32 1, i32 8}
!4 = !{!"ps", i32 6, i32 0}
!5 = !{!6, null, !13, !15}
!6 = !{!7, !9, !10, !11, !12}
!7 = !{i32 0, %"class.Texture2D<vector<float, 4> >"* undef, !"", i32 0, i32 0, i32 1, i32 2, i32 0, !8}
!8 = !{i32 0, i32 9}
!9 = !{i32 1, %"class.Texture2D<vector<float, 3> >"* undef, !"", i32 0, i32 1, i32 1, i32 2, i32 0, !8}
!10 = !{i32 2, %"class.Texture2D<vector<float, 3> >"* undef, !"", i32 0, i32 2, i32 1, i32 2, i32 0, !8}
!11 = !{i32 3, %"class.TextureCube<vector<float, 3> >"* undef, !"", i32 0, i32 4, i32 1, i32 5, i32 0, !8}
!12 = !{i32 4, %"class.TextureCube<vector<float, 3> >"* undef, !"", i32 0, i32 5, i32 1, i32 5, i32 0, !8}
!13 = !{!14}
!14 = !{i32 0, %hostlayout.Constants* undef, !"", i32 0, i32 0, i32 1, i32 388, null}
!15 = !{!16, !17}
!16 = !{i32 0, %struct.SamplerState* undef, !"", i32 0, i32 0, i32 1, i32 0, null}
!17 = !{i32 1, %struct.SamplerState* undef, !"", i32 0, i32 1, i32 1, i32 0, null}
!18 = !{[26 x i32] [i32 24, i32 5, i32 15, i32 15, i32 0, i32 0, i32 7, i32 7, i32 7, i32 0, i32 7, i32 7, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0, i32 16, i32 16, i32 16, i32 0, i32 16, i32 16, i32 16, i32 16]}
!19 = !{void ()* @PSTexturedVelocity, !"PSTexturedVelocity", !20, !5, null}
!20 = !{!21, !35, null}
!21 = !{!22, !25, !28, !30, !31, !32}
!22 = !{i32 0, !"TEXCOORD", i8 9, i8 0, !23, i8 2, i32 1, i8 2, i32 0, i8 0, !24}
!23 = !{i32 0}
!24 = !{i32 3, i32 3}
!25 = !{i32 1, !"TEXCOORD", i8 9, i8 0, !26, i8 2, i32 1, i8 4, i32 1, i8 0, !27}
!26 = !{i32 1}
!27 = !{i32 3, i32 7}
!28 = !{i32 2, !"TEXCOORD", i8 9, i8 0, !29, i8 2, i32 1, i8 3, i32 2, i8 0, !27}
!29 = !{i32 2}
!30 = !{i32 3, !"COLOR", i8 9, i8 0, !23, i8 2, i32 1, i8 4, i32 3, i8 0, null}
!31 = !{i32 4, !"SV_Position", i8 9, i8 3, !23, i8 4, i32 1, i8 4, i32 4, i8 0, !27}
!32 = !{i32 5, !"TEXCOORD", i8 9, i8 0, !33, i8 2, i32 1, i8 4, i32 5, i8 0, !34}
!33 = !{i32 4}
!34 = !{i32 3, i32 15}
!35 = !{!36, !37}
!36 = !{i32 0, !"SV_Target", i8 9, i8 16, !23, i8 0, i32 1, i8 4, i32 0, i8 0, !34}
!37 = !{i32 1, !"SV_Target", i8 5, i8 16, !26, i8 0, i32 1, i8 1, i32 1, i8 0, !38}
!38 = !{i32 3, i32 1}

;
; DUMPING SHADER HARDWARE INSTRUCTIONS 
;
// Shader Type               : (PS)
// Shader Hw Stage           : (PS)

// Shader Instructions:
shader main
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  s_mov_b64     s[48:49], exec
  s_wqm_b64     exec, exec // wrscc
  s_mov_b32     s40, s9
  s_mov_b32     s6, s7
  s_mov_b32     s2, s5
  s_mov_b32     s50, s3
  s_mov_b32     s5, 0
  s_mov_b32     s3, 0
  s_mov_b32     s7, 0
  s_mov_b32     s9, 0
  s_mov_b32     s41, 0
  s_mov_b32     s13, s12
  s_mov_b32     s12, s11
  s_load_dwordx8  s[16:23], s[8:9], 0x00
  s_load_dwordx8  s[24:31], s[6:7], 0x00
  s_load_dwordx8  s[32:39], s[2:3], 0x00
  s_mov_b32     s11, 0
  s_load_dwordx8  s[0:7], s[4:5], 0x00
  s_load_dwordx4  s[44:47], s[40:41], 0x00
  s_mov_b32     m0, s15
  v_interp_p1_f32  v5, v0, attr0.x
  v_interp_p1_f32  v6, v0, attr0.y
  v_interp_p2_f32  v5, v1, attr0.x
  v_interp_p2_f32  v6, v1, attr0.y
  s_load_dwordx4  s[40:43], s[10:11], 0x00
  s_waitcnt     lgkmcnt(0)
  image_sample  v[9:12], v[5:6], s[0:7], s[44:47] dmask:0x3
  v_interp_p1_f32  v14, v0, attr1.x
  v_interp_p2_f32  v14, v1, attr1.x
  ds_swizzle_b32  v7, v14 offset:32768
  ds_swizzle_b32  v8, v14 offset:32853
  ds_swizzle_b32  v18, v14 offset:32938
  v_interp_p1_f32  v15, v0, attr1.y
  v_interp_p2_f32  v15, v1, attr1.y
  ds_swizzle_b32  v11, v15 offset:32768
  ds_swizzle_b32  v12, v15 offset:32853
  s_waitcnt     lgkmcnt(3)
  v_sub_f32     v8, v8, v7
  s_waitcnt     lgkmcnt(2)
  v_sub_f32     v7, v18, v7
  ds_swizzle_b32  v18, v15 offset:32938
  v_interp_p1_f32  v16, v0, attr1.z
  v_interp_p2_f32  v16, v1, attr1.z
  s_waitcnt     lgkmcnt(1)
  v_sub_f32     v12, v12, v11
  ds_swizzle_b32  v13, v16 offset:32768
  ds_swizzle_b32  v17, v16 offset:32853
  s_waitcnt     lgkmcnt(2)
  v_sub_f32     v11, v18, v11
  ds_swizzle_b32  v18, v16 offset:32938
  v_mul_legacy_f32  v21, v7, v12
  v_mad_legacy_f32  v21, v11, v8, -v21
  s_waitcnt     lgkmcnt(1)
  v_sub_f32     v17, v17, v13
  v_mul_legacy_f32  v19, v11, v17
  s_waitcnt     lgkmcnt(0)
  v_sub_f32     v13, v18, v13
  v_mul_legacy_f32  v20, v13, v8
  v_mad_legacy_f32  v19, v13, v12, -v19
  v_mul_legacy_f32  v22, v21, v7
  v_mad_legacy_f32  v20, v7, v17, -v20
  v_mad_legacy_f32  v22, v19, v13, -v22
  v_mul_legacy_f32  v13, v20, v13
  v_mad_legacy_f32  v23, v21, v11, -v13
  v_mul_legacy_f32  v11, v19, v11
  v_mad_legacy_f32  v24, v20, v7, -v11
  v_mul_legacy_f32  v7, v21, v12
  v_mul_legacy_f32  v11, v19, v17
  v_mad_legacy_f32  v7, v20, v17, -v7
  v_mad_legacy_f32  v17, v21, v8, -v11
  ds_swizzle_b32  v18, v5 offset:32768
  ds_swizzle_b32  v11, v5 offset:32853
  v_mul_legacy_f32  v8, v20, v8
  v_mad_legacy_f32  v19, v19, v12, -v8
  ds_swizzle_b32  v8, v6 offset:32853
  ds_swizzle_b32  v12, v6 offset:32938
  s_waitcnt     lgkmcnt(2)
  v_sub_f32     v21, v11, v18
  ds_swizzle_b32  v11, v6 offset:32768
  s_mov_b32     s51, 0
  s_load_dwordx8  s[0:7], s[50:51], 0x00
  v_mul_legacy_f32  v25, v23, v21
  v_mul_legacy_f32  v26, v22, v21
  s_waitcnt     lgkmcnt(0)
  v_sub_f32     v20, v8, v11
  ds_swizzle_b32  v8, v5 offset:32938
  v_mul_legacy_f32  v21, v24, v21
  s_mov_b32     s52, 0x3d23d70a
  s_waitcnt     lgkmcnt(0)
  v_sub_f32     v8, v8, v18
  v_sub_f32     v18, v12, v11
  image_sample  v[11:14], v[5:6], s[32:39], s[44:47] dmask:0x7
  v_mac_legacy_f32  v25, v8, v7
  v_mac_legacy_f32  v26, v8, v17
  v_mac_legacy_f32  v21, v8, v19
  v_mul_legacy_f32  v8, v23, v20
  v_mad_legacy_f32  v23, v18, v7, v8
  v_mul_legacy_f32  v7, v22, v20
  s_or_b32      s33, s13, 0x00100000 // wrscc
  s_mov_b32     s34, -1
  s_mov_b32     s35, 0x00024fac
  s_mov_b32     s32, s12
  v_mad_legacy_f32  v17, v18, v17, v7
  image_sample  v[5:8], v[5:6], s[0:7], s[44:47] dmask:0xf
  s_buffer_load_dwordx4  s[36:39], s[32:35], 0x00
  s_buffer_load_dwordx16  s[0:15], s[32:35], 0x40
  v_mul_legacy_f32  v20, v24, v20
  v_mad_legacy_f32  v18, v18, v19, v20
  s_waitcnt     lgkmcnt(0)
  v_sub_f32     v15, s37, v15
  v_sub_f32     v14, s36, v14
  v_mul_legacy_f32  v19, v15, v15
  v_sub_f32     v16, s38, v16
  v_mac_legacy_f32  v19, v14, v14
  v_mac_legacy_f32  v19, v16, v16
  v_rsq_f32     v19, v19
  s_waitcnt     vmcnt(2)
  v_mad_f32     v9, v9, 2.0, -1.0
  v_mul_legacy_f32  v22, v25, v9
  v_mad_f32     v10, v10, 2.0, -1.0
  v_mul_legacy_f32  v14, v14, v19
  v_mul_legacy_f32  v15, v15, v19
  v_mul_legacy_f32  v16, v16, v19
  v_mul_legacy_f32  v19, v17, v17
  v_mac_legacy_f32  v19, v23, v23
  v_mac_legacy_f32  v19, v18, v18
  v_rsq_f32     v19, v19
  v_mul_legacy_f32  v20, v19, v23
  v_mul_legacy_f32  v17, v19, v17
  v_mul_legacy_f32  v18, v19, v18
  v_mul_legacy_f32  v19, v26, v26
  v_mac_legacy_f32  v19, v25, v25
  v_mac_legacy_f32  v19, v21, v21
  v_rsq_f32     v19, v19
  v_interp_p1_f32  v23, v0, attr2.x
  v_interp_p2_f32  v23, v1, attr2.x
  v_mul_legacy_f32  v22, v22, v19
  v_mad_legacy_f32  v20, v10, v20, v22
  v_mul_legacy_f32  v22, v10, v10
  v_mac_legacy_f32  v22, v9, v9
  v_sub_f32     v22, 1.0, v22
  v_sqrt_f32    v22, v22
  v_mac_legacy_f32  v20, v22, v23
  v_mul_legacy_f32  v23, v26, v9
  v_mul_legacy_f32  v23, v23, v19
  v_mad_legacy_f32  v17, v10, v17, v23
  v_interp_p1_f32  v23, v0, attr2.y
  v_mul_legacy_f32  v9, v21, v9
  v_interp_p2_f32  v23, v1, attr2.y
  v_interp_p1_f32  v21, v0, attr2.z
  v_mul_legacy_f32  v9, v9, v19
  v_mac_legacy_f32  v17, v22, v23
  v_mac_legacy_f32  v9, v10, v18
  v_mul_legacy_f32  v10, v17, v17
  v_mul_legacy_f32  v18, s0, s0
  v_interp_p2_f32  v21, v1, attr2.z
  v_mac_legacy_f32  v18, s1, s1
  v_mac_legacy_f32  v9, v22, v21
  v_mac_legacy_f32  v10, v20, v20
  v_mac_legacy_f32  v10, v9, v9
  v_mac_legacy_f32  v18, s2, s2
  v_rsq_f32     v10, v10
  v_rsq_f32     v18, v18
  v_mul_legacy_f32  v19, v10, v20
  v_mad_legacy_f32  v20, v18, -s1, v15
  v_mul_legacy_f32  v17, v10, v17
  v_mul_legacy_f32  v9, v10, v9
  v_mad_legacy_f32  v10, v18, -s0, v14
  v_mul_legacy_f32  v22, v20, v20
  v_mad_legacy_f32  v21, v18, -s2, v16
  v_mac_legacy_f32  v22, v10, v10
  v_mac_legacy_f32  v22, v21, v21
  v_rsq_f32     v22, v22
  v_mul_legacy_f32  v23, v18, -s1
  v_mul_legacy_f32  v24, v17, v23
  s_waitcnt     vmcnt(0)
  v_mad_legacy_f32  v31, -v13, v6, v6
  v_mul_legacy_f32  v20, v20, v22
  v_mul_legacy_f32  v10, v10, v22
  v_mul_legacy_f32  v21, v21, v22
  v_mul_legacy_f32  v22, v18, -s0
  v_mul_legacy_f32  v23, v23, v20
  v_mac_legacy_f32  v24, v19, v22
  v_mul_legacy_f32  v18, v18, -s2
  v_mad_legacy_f32  v22, v22, v10, v23
  v_mad_legacy_f32  v23, v9, v18, v24
  v_mul_legacy_f32  v20, v17, v20
  v_mad_legacy_f32  v10, v19, v10, v20
  v_sub_f32     v20, 1.0, v23 clamp
  v_mac_legacy_f32  v10, v21, v9 clamp
  v_mad_legacy_f32  v18, v18, v21, v22
  v_mul_legacy_f32  v21, v20, v20
  v_mul_legacy_f32  v21, v21, v21
  v_mul_legacy_f32  v20, v21, v20
  v_mul_legacy_f32  v21, v17, v15
  v_mad_legacy_f32  v22, v19, v14, v21
  v_mac_legacy_f32  v22, v9, v16
  v_sub_f32     v22, 1.0, v22 clamp
  v_mul_legacy_f32  v24, v22, v22
  v_mul_legacy_f32  v24, v24, v24
  v_mul_legacy_f32  v22, v24, v22
  v_max_f32     v24, v18, v18 clamp
  v_sub_f32     v18, 1.0, v18 clamp
  v_mul_legacy_f32  v26, v18, v18
  v_mul_legacy_f32  v26, v26, v26
  v_mul_legacy_f32  v25, v24, v24
  v_mul_legacy_f32  v18, v26, v18
  v_add_f32     v26, v12, v12
  v_mad_legacy_f32  v27, v25, v26, -0.5
  v_mad_legacy_f32  v20, v20, v27, 1.0
  v_mad_legacy_f32  v27, v22, v27, 1.0
  v_mul_legacy_f32  v20, v20, v27
  v_mul_legacy_f32  v27, v12, v12
  v_mul_legacy_f32  v28, v27, v27
  v_mad_legacy_f32  v24, -v24, v24, 1.0
  v_mul_legacy_f32  v29, 0x3e800000, v28
  v_mad_legacy_f32  v24, v29, v24, v25
  v_mad_legacy_f32  v25, v27, v27, -1.0
  v_mul_legacy_f32  v10, v10, v10
  v_mad_legacy_f32  v10, v10, v25, 1.0
  v_mul_legacy_f32  v10, v10, v10
  v_mul_legacy_f32  v10, 0x40490fdb, v10
  v_max_f32     v10, 0x358637bd, v10
  v_rcp_f32     v10, v10
  v_rcp_f32     v24, v24
  v_add_f32     v6, 0xbd23d70a, v6
  v_mad_legacy_f32  v6, v13, v6, s52
  v_mul_legacy_f32  v10, v28, v10
  v_mul_legacy_f32  v10, v24, v10
  v_add_f32     v24, 0xbd23d70a, v5
  v_mad_legacy_f32  v24, v13, v24, s52
  v_mac_legacy_f32  v5, v5, -v13
  v_mul_legacy_f32  v32, v5, v11
  v_mul_legacy_f32  v27, v24, v11
  v_mad_legacy_f32  v24, -v24, v11, 1.0
  v_mad_legacy_f32  v30, v18, v24, v27
  v_mul_legacy_f32  v5, v20, v32
  v_mac_legacy_f32  v5, v10, v30
  v_mul_legacy_f32  v30, v31, v11
  v_mul_legacy_f32  v31, v6, v11
  v_mad_legacy_f32  v6, -v6, v11, 1.0
  v_mad_legacy_f32  v33, v18, v6, v31
  v_mul_legacy_f32  v34, v20, v30
  v_mad_legacy_f32  v33, v10, v33, v34
  v_mad_legacy_f32  v34, -v13, v7, v7
  v_add_f32     v7, 0xbd23d70a, v7
  v_mad_legacy_f32  v7, v13, v7, s52
  v_mul_legacy_f32  v13, v7, v11
  v_mul_legacy_f32  v34, v34, v11
  v_mad_legacy_f32  v7, -v7, v11, 1.0
  v_mad_legacy_f32  v11, v18, v7, v13
  v_mul_legacy_f32  v18, v20, v34
  v_mad_legacy_f32  v10, v10, v11, v18
  v_mul_legacy_f32  v11, s4, s4
  v_mac_legacy_f32  v11, s5, s5
  v_mac_legacy_f32  v11, s6, s6
  v_rsq_f32     v11, v11
  v_mad_legacy_f32  v20, v11, -s5, v15
  v_mad_legacy_f32  v18, v11, -s4, v14
  v_mul_legacy_f32  v35, v20, v20
  v_mac_legacy_f32  v35, v18, v18
  v_mad_legacy_f32  v36, v11, -s6, v16
  v_mac_legacy_f32  v35, v36, v36
  v_rsq_f32     v35, v35
  v_mul_legacy_f32  v37, v11, -s5
  v_mul_legacy_f32  v38, v17, v37
  v_mul_legacy_f32  v20, v20, v35
  v_mul_legacy_f32  v18, v18, v35
  v_mul_legacy_f32  v35, v36, v35
  v_mul_legacy_f32  v36, v11, -s4
  v_mul_legacy_f32  v37, v37, v20
  v_mul_legacy_f32  v20, v17, v20
  v_mac_legacy_f32  v38, v19, v36
  v_mad_legacy_f32  v36, v36, v18, v37
  v_mad_legacy_f32  v18, v19, v18, v20
  v_mac_legacy_f32  v18, v35, v9 clamp
  v_mul_legacy_f32  v11, v11, -s6
  v_mul_legacy_f32  v18, v18, v18
  v_mad_legacy_f32  v18, v18, v25, 1.0
  v_mad_legacy_f32  v37, v9, v11, v38
  v_mad_legacy_f32  v11, v11, v35, v36
  v_max_f32     v20, v11, v11 clamp
  v_mul_legacy_f32  v18, v18, v18
  v_mul_legacy_f32  v35, v20, v20
  v_mad_legacy_f32  v20, -v20, v20, 1.0
  v_mul_legacy_f32  v18, 0x40490fdb, v18
  v_mad_legacy_f32  v20, v29, v20, v35
  v_max_f32     v18, 0x358637bd, v18
  v_sub_f32     v29, 1.0, v37 clamp
  v_rcp_f32     v18, v18
  v_mad_legacy_f32  v26, v35, v26, -0.5
  v_mul_legacy_f32  v35, v29, v29
  v_mul_legacy_f32  v35, v35, v35
  v_sub_f32     v11, 1.0, v11 clamp
  v_rcp_f32     v20, v20
  v_mul_legacy_f32  v29, v35, v29
  v_mul_legacy_f32  v25, v11, v11
  v_mad_legacy_f32  v29, v29, v26, 1.0
  v_mad_legacy_f32  v26, v22, v26, 1.0
  v_mul_legacy_f32  v25, v25, v25
  v_mul_legacy_f32  v18, v28, v18
  v_mul_legacy_f32  v26, v29, v26
  v_mul_legacy_f32  v11, v25, v11
  v_mul_legacy_f32  v18, v20, v18
  v_mad_legacy_f32  v20, v11, v24, v27
  v_mul_legacy_f32  v25, v26, v32
  s_buffer_load_dwordx8  s[0:7], s[32:35], 0x50
  v_mad_legacy_f32  v20, v18, v20, v25
  v_mad_legacy_f32  v25, v11, v6, v31
  v_mul_legacy_f32  v28, v26, v30
  v_mad_legacy_f32  v11, v11, v7, v13
  v_mul_legacy_f32  v26, v26, v34
  v_mad_legacy_f32  v25, v18, v25, v28
  v_mad_legacy_f32  v11, v18, v11, v26
  v_max_f32     v18, v23, v23 clamp
  v_mul_legacy_f32  v23, s12, v18
  v_mul_legacy_f32  v5, v23, v5
  v_max_f32     v23, v37, v37 clamp
  s_waitcnt     lgkmcnt(0)
  v_mul_legacy_f32  v26, s0, v23
  v_mac_legacy_f32  v5, v26, v20
  v_mul_legacy_f32  v20, s13, v18
  v_mul_legacy_f32  v18, s14, v18
  v_mul_legacy_f32  v10, v18, v10
  v_mul_legacy_f32  v18, s2, v23
  v_mac_legacy_f32  v10, v18, v11
  v_mul_legacy_f32  v11, s8, s8
  v_mac_legacy_f32  v11, s9, s9
  v_mac_legacy_f32  v11, s10, s10
  v_rsq_f32     v11, v11
  v_mul_legacy_f32  v26, s1, v23
  v_mul_legacy_f32  v20, v20, v33
  v_mac_legacy_f32  v20, v26, v25
  v_mad_legacy_f32  v23, v11, -s9, v15
  v_mad_legacy_f32  v18, v11, -s8, v14
  v_mul_legacy_f32  v25, v23, v23
  v_mac_legacy_f32  v25, v18, v18
  v_mad_legacy_f32  v26, v11, -s10, v16
  v_mac_legacy_f32  v25, v26, v26
  v_rsq_f32     v25, v25
  v_mul_legacy_f32  v28, v11, -s9
  v_mul_legacy_f32  v29, v17, v28
  v_mul_legacy_f32  v23, v23, v25
  v_mul_legacy_f32  v18, v18, v25
  v_mul_legacy_f32  v25, v26, v25
  v_mul_legacy_f32  v26, v11, -s8
  v_mul_legacy_f32  v28, v28, v23
  v_mac_legacy_f32  v29, v19, v26
  v_mad_legacy_f32  v26, v26, v18, v28
  v_mul_legacy_f32  v11, v11, -s10
  v_mad_legacy_f32  v28, v9, v11, v29
  v_mad_legacy_f32  v11, v11, v25, v26
  v_mul_legacy_f32  v26, v12, v12
  v_mul_legacy_f32  v23, v17, v23
  v_mad_legacy_f32  v18, v19, v18, v23
  v_mul_legacy_f32  v26, v26, v26
  v_max_f32     v23, v11, v11 clamp
  v_mac_legacy_f32  v18, v25, v9 clamp
  v_mul_legacy_f32  v25, v23, v23
  v_mad_legacy_f32  v23, -v23, v23, 1.0
  v_mul_legacy_f32  v26, 0x3e800000, v26
  v_mad_legacy_f32  v23, v26, v23, v25
  v_add_f32     v26, v12, v12
  v_mad_legacy_f32  v25, v25, v26, -0.5
  v_sub_f32     v26, 1.0, v28 clamp
  v_mul_legacy_f32  v29, v26, v26
  v_mul_legacy_f32  v29, v29, v29
  v_mul_legacy_f32  v26, v29, v26
  v_mad_legacy_f32  v26, v26, v25, 1.0
  v_mad_legacy_f32  v22, v22, v25, 1.0
  v_mul_legacy_f32  v25, v12, v12
  v_mul_legacy_f32  v18, v18, v18
  v_mad_legacy_f32  v25, v25, v25, -1.0
  v_mad_legacy_f32  v18, v18, v25, 1.0
  v_mul_legacy_f32  v18, v18, v18
  v_mul_legacy_f32  v18, 0x40490fdb, v18
  v_max_f32     v18, 0x358637bd, v18
  v_rcp_f32     v18, v18
  v_mul_legacy_f32  v25, v12, v12
  v_mul_legacy_f32  v25, v25, v25
  v_sub_f32     v11, 1.0, v11 clamp
  v_mul_legacy_f32  v18, v25, v18
  v_mul_legacy_f32  v25, v11, v11
  v_mul_legacy_f32  v25, v25, v25
  v_mul_legacy_f32  v11, v25, v11
  v_mad_legacy_f32  v24, v11, v24, v27
  v_mad_legacy_f32  v6, v11, v6, v31
  v_mad_legacy_f32  v7, v11, v7, v13
  v_rcp_f32     v11, v23
  v_mul_legacy_f32  v22, v26, v22
  v_mul_legacy_f32  v23, v22, v30
  v_interp_p1_f32  v25, v0, attr3.z
  v_mul_legacy_f32  v11, v11, v18
  v_mul_legacy_f32  v18, v22, v32
  v_mul_legacy_f32  v22, v22, v34
  v_mac_legacy_f32  v18, v11, v24
  v_mad_legacy_f32  v6, v11, v6, v23
  v_mad_legacy_f32  v7, v11, v7, v22
  v_max_f32     v11, v28, v28 clamp
  v_mul_legacy_f32  v22, s4, v11
  v_mad_legacy_f32  v18, v22, v18, v5
  v_mul_legacy_f32  v5, s5, v11
  v_mac_legacy_f32  v20, v5, v6
  v_mul_legacy_f32  v5, s6, v11
  v_mad_legacy_f32  v22, v5, v7, v10
  v_cubema_f32  v5, v19, v17, v9
  v_rcp_f32     v6, abs(v5)
  v_cubesc_f32  v5, v19, v17, v9
  v_cubetc_f32  v7, v19, v17, v9
  v_interp_p1_f32  v23, v0, attr3.y
  v_madak_f32   v5, v5, v6, 0x3fc00000
  v_madak_f32   v6, v7, v6, 0x3fc00000
  v_interp_p1_f32  v7, v0, attr3.w
  v_interp_p1_f32  v24, v0, attr3.x
  v_interp_p2_f32  v7, v1, attr3.w
  v_rcp_f32     v26, v7
  v_interp_p2_f32  v23, v1, attr3.y
  v_interp_p2_f32  v24, v1, attr3.x
  v_interp_p2_f32  v25, v1, attr3.z
  v_cubeid_f32  v7, v19, v17, v9
  v_mov_b32     v10, 0x3fc00000
  s_and_b64     exec, exec, s[48:49] // wrscc
  s_buffer_load_dwordx4  s[0:3], s[32:35], 0x5e
  v_mad_legacy_f32  v0, -v14, v19, -v21
  v_mac_legacy_f32  v0, v16, -v9 mul:2
  v_mad_legacy_f32  v1, -v0, v19, -v14
  v_mad_legacy_f32  v11, -v0, v17, -v15
  v_mad_legacy_f32  v0, -v0, v9, -v16
  v_cubema_f32  v9, v1, v11, v0
  v_rcp_f32     v14, abs(v9)
  v_cubesc_f32  v9, v1, v11, v0
  v_cubetc_f32  v15, v1, v11, v0
  v_cubeid_f32  v11, v1, v11, v0
  s_waitcnt     lgkmcnt(0)
  v_cvt_f32_i32  v0, s0
  image_sample  v[5:8], v[5:6], s[16:23], s[40:43] dmask:0x7 da
  v_madak_f32   v9, v9, v14, 0x3fc00000
  v_mac_f32     v10, v15, v14
  v_mul_legacy_f32  v12, v0, v12
  image_sample_l  v[9:12], v[9:10], s[24:31], s[40:43] dmask:0x7 da
  s_buffer_load_dword  s0, s[32:35], 0x5b
  s_waitcnt     lgkmcnt(0)
  v_mul_legacy_f32  v8, s0, v8
  s_brev_b32    s0, 28
  s_waitcnt     vmcnt(1)
  v_mad_legacy_f32  v0, v6, v30, v20
  v_mad_legacy_f32  v1, v5, v32, v18
  v_mov_b32     v5, 0x3bffe000
  s_waitcnt     vmcnt(0)
  v_mad_legacy_f32  v6, v10, v31, v0
  v_mad_legacy_f32  v0, v7, v34, v22
  v_mad_legacy_f32  v7, v11, v13, v0
  v_mul_legacy_f32  v0, v24, v26
  v_mad_legacy_f32  v0, v0, 0.5, 0.5
  v_mad_legacy_f32  v0, s1, v0, -v2
  v_lshrrev_b32  v2, 22, v0
  v_mul_legacy_f32  v0, abs(v0), s0
  v_med3_f32    v0, v0, 0, v5
  v_cvt_f16_f32  v10, v0
  v_and_b32     v2, 0x00000200, v2
  v_mad_legacy_f32  v9, v9, v27, v1
  v_cvt_pkrtz_f16_f32  v0, v9, v6
  v_cvt_pkrtz_f16_f32  v1, v7, v8
  exp           mrt0, v0, v0, v1, v1 compr
  v_add_i32     v10, vcc, 8, v10
  v_lshrrev_b32  v10, 4, v10
  v_or_b32      v2, v10, v2
  v_mul_legacy_f32  v10, v23, v26
  v_mad_legacy_f32  v10, -v10, 0.5, 0.5
  v_mad_legacy_f32  v3, s2, v10, -v3
  v_lshrrev_b32  v10, 22, v3
  v_mul_legacy_f32  v3, abs(v3), s0
  v_med3_f32    v3, v3, 0, v5
  v_cvt_f16_f32  v3, v3
  v_and_b32     v10, 0x00000200, v10
  s_brev_b32    s0, 60
  v_add_i32     v3, vcc, 8, v3
  v_lshrrev_b32  v3, 4, v3
  v_or_b32      v3, v3, v10
  v_lshlrev_b32  v3, 10, v3
  v_or_b32      v2, v2, v3
  v_mad_legacy_f32  v3, v25, v26, -v4
  v_lshrrev_b32  v4, 20, v3
  v_mul_legacy_f32  v3, abs(v3), s0
  v_med3_f32    v3, v3, 0, v5
  v_cvt_f16_f32  v3, v3
  v_and_b32     v4, 0x00000800, v4
  v_add_i32     v3, vcc, 2, v3
  v_lshrrev_b32  v3, 2, v3
  v_or_b32      v3, v3, v4
  v_lshlrev_b32  v3, 20, v3
  v_or_b32      v4, v2, v3
  v_cvt_pkrtz_f16_f32  v2, v4, v4
  s_nop         0x0000
  exp           mrt1, v2, v2, off, off done compr vm
  s_endpgm      
end


NumVGPR=39,NumSGPR=55,LDS=0,Scratch=0,Occpancy=6


#endif

const unsigned char PBREffect_PSTexturedVelocity[] = {
  0x44, 0x58, 0x42, 0x43, 0xfc, 0xaa, 0x19, 0x27, 0x0c, 0x8a, 0x5e, 0x40,
  0x05, 0x26, 0x5f, 0x59, 0x9e, 0x82, 0x1a, 0x56, 0x01, 0x00, 0x00, 0x00,
  0xec, 0x26, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00,
  0x50, 0x00, 0x00, 0x00, 0x3c, 0x01, 0x00, 0x00, 0x98, 0x01, 0x00, 0x00,
  0xdc, 0x03, 0x00, 0x00, 0x64, 0x05, 0x00, 0x00, 0xf4, 0x05, 0x00, 0x00,
  0x10, 0x06, 0x00, 0x00, 0x53, 0x46, 0x49, 0x30, 0x08, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x49, 0x53, 0x47, 0x31,
  0xe4, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xc8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x03, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xc8, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0f, 0x07, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc8, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x07, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xd1, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xd7, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x0f, 0x07, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc8, 0x00, 0x00, 0x00,
  0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x05, 0x00, 0x00, 0x00, 0x0f, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x54, 0x45, 0x58, 0x43, 0x4f, 0x4f, 0x52, 0x44, 0x00, 0x43, 0x4f, 0x4c,
  0x4f, 0x52, 0x00, 0x53, 0x56, 0x5f, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69,
  0x6f, 0x6e, 0x00, 0x00, 0x4f, 0x53, 0x47, 0x31, 0x54, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x48, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x48, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x01, 0x0e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x53, 0x56, 0x5f, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x00, 0x00, 0x00,
  0x50, 0x53, 0x56, 0x30, 0x3c, 0x02, 0x00, 0x00, 0x34, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff,
  0x00, 0x00, 0x00, 0x00, 0x06, 0x02, 0x00, 0x06, 0x02, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x2b, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00,
  0x04, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00,
  0x05, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x40, 0x00, 0x00, 0x00, 0x00, 0x54, 0x45, 0x58, 0x43, 0x4f, 0x4f, 0x52,
  0x44, 0x00, 0x54, 0x45, 0x58, 0x43, 0x4f, 0x4f, 0x52, 0x44, 0x00, 0x54,
  0x45, 0x58, 0x43, 0x4f, 0x4f, 0x52, 0x44, 0x00, 0x43, 0x4f, 0x4c, 0x4f,
  0x52, 0x00, 0x54, 0x45, 0x58, 0x43, 0x4f, 0x4f, 0x52, 0x44, 0x00, 0x50,
  0x53, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x64, 0x56, 0x65, 0x6c,
  0x6f, 0x63, 0x69, 0x74, 0x79, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x04, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x42, 0x00, 0x03, 0x02, 0x00, 0x00,
  0x0a, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x01, 0x44, 0x00,
  0x03, 0x02, 0x00, 0x00, 0x13, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x01, 0x02, 0x43, 0x00, 0x03, 0x02, 0x00, 0x00, 0x1c, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x03, 0x44, 0x00, 0x03, 0x02, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x04, 0x44, 0x03,
  0x03, 0x04, 0x00, 0x00, 0x22, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x01, 0x05, 0x44, 0x00, 0x03, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x44, 0x10, 0x03, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x01, 0x41, 0x10,
  0x01, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00,
  0x07, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x07, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00,
  0x10, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x10, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00,
  0x10, 0x00, 0x00, 0x00, 0x52, 0x54, 0x53, 0x30, 0x80, 0x01, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x80, 0x01, 0x00, 0x00, 0x1d, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x90, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xac, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc8, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe4, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1c, 0x01, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x01, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x54, 0x01, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x01, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x78, 0x01, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x98, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xff, 0xff, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0xb4, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00,
  0xd0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff,
  0x01, 0x00, 0x00, 0x00, 0xec, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xff, 0xff, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x08, 0x01, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00,
  0x24, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff,
  0x01, 0x00, 0x00, 0x00, 0x40, 0x01, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xff, 0xff, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x5c, 0x01, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x49, 0x4c, 0x44, 0x4e, 0x88, 0x00, 0x00, 0x00, 0x00, 0x00, 0x81, 0x00,
  0x43, 0x3a, 0x5c, 0x55, 0x73, 0x65, 0x72, 0x73, 0x5c, 0x6d, 0x61, 0x72,
  0x63, 0x75, 0x5c, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x73,
  0x5c, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x58, 0x54, 0x4b, 0x31, 0x32,
  0x2d, 0x6d, 0x61, 0x69, 0x6e, 0x5c, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74,
  0x58, 0x54, 0x4b, 0x31, 0x32, 0x2d, 0x6d, 0x61, 0x69, 0x6e, 0x5c, 0x53,
  0x72, 0x63, 0x2f, 0x53, 0x68, 0x61, 0x64, 0x65, 0x72, 0x73, 0x2f, 0x43,
  0x6f, 0x6d, 0x70, 0x69, 0x6c, 0x65, 0x64, 0x5c, 0x58, 0x62, 0x6f, 0x78,
  0x47, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x58, 0x62, 0x6f, 0x78, 0x4f, 0x6e,
  0x65, 0x50, 0x42, 0x52, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x5f, 0x50,
  0x53, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x64, 0x56, 0x65, 0x6c,
  0x6f, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x70, 0x64, 0x62, 0x00, 0x00, 0x00,
  0x48, 0x41, 0x53, 0x48, 0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xf4, 0x71, 0xc2, 0xf7, 0xe5, 0x1e, 0x82, 0xcc, 0xa3, 0x6c, 0xd4, 0x09,
  0x8e, 0xfa, 0x0e, 0xaf, 0x44, 0x58, 0x49, 0x4c, 0xd4, 0x20, 0x00, 0x00,
  0x60, 0x00, 0x00, 0x00, 0x35, 0x08, 0x00, 0x00, 0x44, 0x58, 0x49, 0x4c,
  0x00, 0x01, 0x00, 0x00, 0x7c, 0x00, 0x00, 0x00, 0x88, 0x13, 0x00, 0x00,
  0x58, 0x44, 0x41, 0x54, 0x06, 0x00, 0x00, 0x00, 0x24, 0x00, 0x00, 0x00,
  0x07, 0x00, 0x00, 0x00, 0x6c, 0x00, 0x00, 0x00, 0xa0, 0x13, 0x00, 0x00,
  0x10, 0x00, 0x00, 0x00, 0x0c, 0x14, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x1c, 0x14, 0x00, 0x00, 0xd7, 0x09, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0xf4, 0x1d, 0x00, 0x00, 0x38, 0x02, 0x00, 0x00,
  0x06, 0x00, 0x00, 0x00, 0x2c, 0x20, 0x00, 0x00, 0x91, 0x00, 0x00, 0x00,
  0x08, 0x00, 0x00, 0x00, 0xc0, 0x20, 0x00, 0x00, 0x11, 0x00, 0x00, 0x00,
  0x60, 0x00, 0x00, 0x00, 0xe8, 0x04, 0x00, 0x00, 0x44, 0x58, 0x49, 0x4c,
  0x00, 0x01, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x88, 0x13, 0x00, 0x00,
  0x42, 0x43, 0xc0, 0xde, 0x21, 0x0c, 0x00, 0x00, 0xdf, 0x04, 0x00, 0x00,
  0x0b, 0x82, 0x20, 0x00, 0x02, 0x00, 0x00, 0x00, 0x13, 0x00, 0x00, 0x00,
  0x07, 0x81, 0x23, 0x91, 0x41, 0xc8, 0x04, 0x49, 0x06, 0x10, 0x32, 0x39,
  0x92, 0x01, 0x84, 0x0c, 0x25, 0x05, 0x08, 0x19, 0x1e, 0x04, 0x8b, 0x62,
  0x80, 0x18, 0x45, 0x02, 0x42, 0x92, 0x0b, 0x42, 0xc4, 0x10, 0x32, 0x14,
  0x38, 0x08, 0x18, 0x4b, 0x0a, 0x32, 0x62, 0x88, 0x48, 0x90, 0x14, 0x20,
  0x43, 0x46, 0x88, 0xa5, 0x00, 0x19, 0x32, 0x42, 0xe4, 0x48, 0x0e, 0x90,
  0x11, 0x23, 0xc4, 0x50, 0x41, 0x51, 0x81, 0x8c, 0xe1, 0x83, 0xe5, 0x8a,
  0x04, 0x31, 0x46, 0x06, 0x51, 0x18, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00,
  0x1b, 0x8c, 0xe0, 0xff, 0xff, 0xff, 0xff, 0x07, 0x40, 0x02, 0xa8, 0x0d,
  0x84, 0xf0, 0xff, 0xff, 0xff, 0xff, 0x03, 0x20, 0x6d, 0x30, 0x86, 0xff,
  0xff, 0xff, 0xff, 0x1f, 0x00, 0x09, 0xa8, 0x00, 0x49, 0x18, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x13, 0x82, 0x60, 0x42, 0x20, 0x4c, 0x08, 0x06,
  0x00, 0x00, 0x00, 0x00, 0x89, 0x20, 0x00, 0x00, 0x97, 0x00, 0x00, 0x00,
  0x32, 0x22, 0x88, 0x09, 0x20, 0x64, 0x85, 0x04, 0x13, 0x23, 0xa4, 0x84,
  0x04, 0x13, 0x23, 0xe3, 0x84, 0xa1, 0x90, 0x14, 0x12, 0x4c, 0x8c, 0x8c,
  0x0b, 0x84, 0xc4, 0x4c, 0x10, 0xe4, 0xc1, 0x08, 0x40, 0x09, 0x00, 0x0a,
  0x66, 0x00, 0xe6, 0x08, 0xc0, 0x60, 0x8e, 0x00, 0x29, 0xc6, 0x40, 0x10,
  0x44, 0x41, 0x90, 0x51, 0x0c, 0x80, 0x20, 0x88, 0x62, 0x20, 0xa4, 0x18,
  0x00, 0x41, 0x10, 0x05, 0x41, 0x4a, 0x41, 0x06, 0x62, 0x18, 0x86, 0x61,
  0x18, 0x88, 0x29, 0xc3, 0x40, 0x0c, 0xe4, 0xdc, 0x34, 0x5c, 0xfe, 0x84,
  0x3d, 0x84, 0xe4, 0xaf, 0x84, 0xb4, 0x12, 0x93, 0x5f, 0xdc, 0x36, 0x2a,
  0x86, 0x61, 0x18, 0x08, 0x2a, 0xee, 0x19, 0x2e, 0x7f, 0xc2, 0x1e, 0x42,
  0xf2, 0x43, 0xa0, 0x19, 0x16, 0x02, 0x05, 0x51, 0x61, 0x20, 0x42, 0x92,
  0x86, 0x61, 0x18, 0x08, 0x82, 0x18, 0x68, 0x2a, 0xc6, 0x40, 0x0c, 0xc3,
  0x30, 0x50, 0x55, 0x88, 0x81, 0x18, 0x06, 0xba, 0x4a, 0x31, 0x10, 0xc3,
  0x30, 0x50, 0x56, 0x06, 0x82, 0x18, 0x68, 0x3b, 0x6a, 0xb8, 0xfc, 0x09,
  0x7b, 0x08, 0xc9, 0xe7, 0x36, 0xaa, 0x58, 0x89, 0xc9, 0x47, 0x6e, 0x1b,
  0x11, 0x04, 0x41, 0x10, 0x85, 0xe8, 0x08, 0x89, 0x20, 0xef, 0xa8, 0xe1,
  0xf2, 0x27, 0xec, 0x21, 0x24, 0x9f, 0xdb, 0xa8, 0x62, 0x25, 0x26, 0xbf,
  0xb8, 0x6d, 0x44, 0x0c, 0xc3, 0x30, 0x14, 0x02, 0x24, 0x24, 0x82, 0xc2,
  0x39, 0x82, 0xa0, 0x18, 0x12, 0x51, 0x10, 0xc4, 0x48, 0xe4, 0x40, 0xc0,
  0x30, 0x02, 0x31, 0xcc, 0xd4, 0x06, 0xe3, 0xc0, 0x0e, 0xe1, 0x30, 0x0f,
  0xf3, 0xe0, 0x06, 0xb4, 0x50, 0x0e, 0xf8, 0x40, 0x0f, 0xf5, 0x20, 0x0f,
  0xe5, 0x20, 0x07, 0xa4, 0xc0, 0x07, 0xf6, 0x50, 0x0e, 0xe3, 0x40, 0x0f,
  0xef, 0x20, 0x0f, 0x7c, 0x60, 0x0e, 0xec, 0xf0, 0x0e, 0xe1, 0x40, 0x0f,
  0x6c, 0x00, 0x06, 0x74, 0xe0, 0x07, 0x60, 0xe0, 0x07, 0x7a, 0xa0, 0x07,
  0xed, 0x90, 0x0e, 0xf0, 0x30, 0x0f, 0xbf, 0x40, 0x0f, 0xf9, 0x00, 0x0f,
  0xe5, 0x80, 0x02, 0x62, 0x26, 0x31, 0x18, 0x07, 0x76, 0x08, 0x87, 0x79,
  0x98, 0x07, 0x37, 0xa0, 0x85, 0x72, 0xc0, 0x07, 0x7a, 0xa8, 0x07, 0x79,
  0x28, 0x07, 0x39, 0x20, 0x05, 0x3e, 0xb0, 0x87, 0x72, 0x18, 0x07, 0x7a,
  0x78, 0x07, 0x79, 0xe0, 0x03, 0x73, 0x60, 0x87, 0x77, 0x08, 0x07, 0x7a,
  0x60, 0x03, 0x30, 0xa0, 0x03, 0x3f, 0x00, 0x03, 0x3f, 0x40, 0xc2, 0x89,
  0x52, 0x3a, 0x8c, 0x30, 0x0c, 0x33, 0xb5, 0xc1, 0x38, 0xb0, 0x43, 0x38,
  0xcc, 0xc3, 0x3c, 0xb8, 0x01, 0x2d, 0x94, 0x03, 0x3e, 0xd0, 0x43, 0x3d,
  0xc8, 0x43, 0x39, 0xc8, 0x01, 0x29, 0xf0, 0x81, 0x3d, 0x94, 0xc3, 0x38,
  0xd0, 0xc3, 0x3b, 0xc8, 0x03, 0x1f, 0x98, 0x03, 0x3b, 0xbc, 0x43, 0x38,
  0xd0, 0x03, 0x1b, 0x80, 0xc1, 0x1c, 0xf8, 0x01, 0x18, 0xf8, 0x81, 0x1e,
  0xe8, 0x41, 0x3b, 0xa4, 0x03, 0x3c, 0xcc, 0xc3, 0x2f, 0xd0, 0x43, 0x3e,
  0xc0, 0x43, 0x39, 0xa0, 0x80, 0x98, 0x49, 0x0c, 0xc6, 0x81, 0x1d, 0xc2,
  0x61, 0x1e, 0xe6, 0xc1, 0x0d, 0x68, 0xa1, 0x1c, 0xf0, 0x81, 0x1e, 0xea,
  0x41, 0x1e, 0xca, 0x41, 0x0e, 0x48, 0x81, 0x0f, 0xec, 0xa1, 0x1c, 0xc6,
  0x81, 0x1e, 0xde, 0x41, 0x1e, 0xf8, 0xc0, 0x1c, 0xd8, 0xe1, 0x1d, 0xc2,
  0x81, 0x1e, 0xd8, 0x00, 0x0c, 0xe6, 0xc0, 0x0f, 0xc0, 0xc0, 0x0f, 0x90,
  0xb0, 0xb2, 0xd4, 0xce, 0x44, 0x06, 0xe3, 0xc0, 0x0e, 0xe1, 0x30, 0x0f,
  0xf3, 0xe0, 0x06, 0xb4, 0x50, 0x0e, 0xf8, 0x40, 0x0f, 0xf5, 0x20, 0x0f,
  0xe5, 0x30, 0x0a, 0xf5, 0x20, 0x0e, 0xe5, 0xc0, 0x07, 0xf6, 0x50, 0x0e,
  0xe3, 0x40, 0x0f, 0xef, 0x20, 0x0f, 0x7c, 0x60, 0x0e, 0xec, 0xf0, 0x0e,
  0xe1, 0x40, 0x0f, 0x6c, 0x00, 0x06, 0x73, 0xe0, 0x07, 0x60, 0xe0, 0x07,
  0x28, 0x58, 0xe9, 0x4d, 0x82, 0x33, 0x07, 0xd6, 0xa3, 0x0e, 0x47, 0x9a,
  0x16, 0x00, 0x73, 0xa8, 0xc9, 0xe7, 0x9c, 0x46, 0x9a, 0x80, 0x66, 0x92,
  0x90, 0xb3, 0xc6, 0x72, 0x1c, 0xcb, 0xf2, 0x3a, 0x0c, 0x03, 0x31, 0x0c,
  0x34, 0xdf, 0x24, 0x4d, 0x11, 0x25, 0x4c, 0x3e, 0x0b, 0x30, 0xcf, 0x42,
  0x44, 0xec, 0x04, 0x4c, 0x04, 0x0a, 0x08, 0xaa, 0x53, 0x83, 0x98, 0x02,
  0x00, 0x00, 0x00, 0x00, 0x13, 0x16, 0x72, 0xc0, 0x87, 0x74, 0x60, 0x87,
  0x36, 0x68, 0x87, 0x79, 0x68, 0x03, 0x7c, 0x10, 0x87, 0x38, 0xd8, 0xf0,
  0x0a, 0xe5, 0xd0, 0x06, 0xed, 0xa0, 0x07, 0xe5, 0xd0, 0x06, 0xf0, 0xa0,
  0x07, 0x73, 0x20, 0x07, 0x7a, 0x30, 0x07, 0x72, 0xd0, 0x06, 0xe9, 0x10,
  0x07, 0x7a, 0x30, 0x07, 0x72, 0xd0, 0x06, 0xe9, 0x80, 0x07, 0x7a, 0x30,
  0x07, 0x72, 0xd0, 0x06, 0xe9, 0x10, 0x07, 0x76, 0xa0, 0x07, 0x73, 0x20,
  0x07, 0x6d, 0x90, 0x0e, 0x73, 0x20, 0x07, 0x7a, 0x30, 0x07, 0x72, 0xd0,
  0x06, 0xe9, 0x60, 0x07, 0x74, 0xa0, 0x07, 0x76, 0x40, 0x07, 0x6d, 0x60,
  0x0e, 0x71, 0x60, 0x07, 0x7a, 0x30, 0x07, 0x72, 0xd0, 0x06, 0xe6, 0x30,
  0x07, 0x72, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x60, 0x0e, 0x76, 0x40,
  0x07, 0x7a, 0x60, 0x07, 0x74, 0xd0, 0x06, 0xee, 0x80, 0x07, 0x7a, 0x10,
  0x07, 0x76, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x7a, 0x60, 0x07, 0x74, 0x30,
  0xe4, 0x09, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x60, 0xc8, 0x63, 0x00, 0x01, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0xc0, 0x90, 0x07, 0x01, 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x80, 0x21, 0x8f, 0x02, 0x04, 0x80, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x43, 0x1e, 0x06, 0x08, 0x80, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x86, 0x3c, 0x0e, 0x10, 0x00, 0x01, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x79, 0x26, 0x20, 0x00, 0x06,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0xf2, 0x54, 0x40, 0x00,
  0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0xe4, 0xb9, 0x80,
  0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0xc8, 0x93,
  0x01, 0x01, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x90,
  0x67, 0x02, 0x02, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80,
  0x21, 0xcf, 0x06, 0x04, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x43, 0x1e, 0x0f, 0x08, 0x80, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x86, 0x3c, 0x61, 0x00, 0x04, 0xc0, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x43, 0x9e, 0x0c, 0x08, 0x80, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x86, 0x3c, 0x64, 0x00, 0x04, 0xc0, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x59, 0x20, 0x00, 0x00, 0x00,
  0x17, 0x00, 0x00, 0x00, 0x32, 0x1e, 0x98, 0x18, 0x19, 0x11, 0x4c, 0x90,
  0x8c, 0x09, 0x26, 0x47, 0xc6, 0x04, 0x43, 0x22, 0x4a, 0x60, 0x04, 0xa0,
  0x20, 0x8a, 0xa1, 0x08, 0x4a, 0xa2, 0x0c, 0x0a, 0xa1, 0x14, 0x0a, 0xd1,
  0xa0, 0x1c, 0xca, 0x83, 0x8a, 0x92, 0x18, 0x01, 0x28, 0x82, 0x42, 0x28,
  0x83, 0x02, 0x29, 0x85, 0x12, 0x20, 0x75, 0x06, 0x80, 0xdc, 0x19, 0x00,
  0x82, 0x67, 0x00, 0x88, 0x9e, 0x01, 0x20, 0x7b, 0x06, 0x80, 0xee, 0xb1,
  0x34, 0xac, 0x78, 0x1e, 0x00, 0x38, 0x8e, 0x03, 0x38, 0x8e, 0x03, 0x00,
  0x00, 0x00, 0x80, 0x20, 0x08, 0x80, 0x20, 0x08, 0x02, 0x00, 0x00, 0x00,
  0x79, 0x18, 0x00, 0x00, 0xab, 0x00, 0x00, 0x00, 0x1a, 0x03, 0x4c, 0x90,
  0x46, 0x02, 0x13, 0xc4, 0x36, 0xf8, 0xfa, 0xc2, 0x12, 0x7a, 0xc2, 0xfa,
  0x82, 0x2a, 0x92, 0xfa, 0xa2, 0x42, 0x92, 0x2a, 0x0a, 0x22, 0xfa, 0x9a,
  0x1a, 0x92, 0x0a, 0xa2, 0x1a, 0x42, 0xfa, 0x9a, 0x4a, 0xd2, 0x2a, 0xfa,
  0x62, 0x4a, 0x6a, 0x4a, 0xa2, 0xfa, 0x4a, 0x72, 0xfa, 0x12, 0xca, 0xa2,
  0x2a, 0x9a, 0x62, 0x00, 0xb3, 0x41, 0x08, 0x04, 0x76, 0x64, 0x78, 0x63,
  0x78, 0x62, 0x6f, 0x78, 0x20, 0x32, 0x34, 0x31, 0x30, 0x2e, 0x32, 0x34,
  0x31, 0x30, 0x2e, 0x31, 0x31, 0x31, 0x31, 0x36, 0x2e, 0x31, 0x30, 0x37,
  0x34, 0x31, 0x1b, 0x02, 0x62, 0x82, 0x40, 0x40, 0x13, 0x04, 0x22, 0xda,
  0x20, 0x18, 0xc7, 0x04, 0x81, 0x90, 0x36, 0x08, 0x46, 0x42, 0x01, 0x6e,
  0x6e, 0x82, 0x40, 0x4c, 0x1b, 0x86, 0x85, 0x39, 0x26, 0x08, 0x6a, 0x40,
  0x06, 0x04, 0x26, 0x08, 0x04, 0x35, 0x41, 0x20, 0xaa, 0x0d, 0xc2, 0x11,
  0x6d, 0x48, 0x0e, 0xe7, 0x39, 0x0e, 0x03, 0x3a, 0xa4, 0x09, 0x82, 0x1b,
  0x94, 0xc1, 0x86, 0xc4, 0xa0, 0x9e, 0xc3, 0x30, 0xa0, 0x43, 0xda, 0x90,
  0x40, 0xd4, 0x73, 0x40, 0x06, 0x74, 0x48, 0x13, 0x04, 0xc2, 0x9a, 0x20,
  0xc0, 0x81, 0x19, 0x4c, 0x10, 0x88, 0x6b, 0x82, 0x40, 0x60, 0x1b, 0x92,
  0x0b, 0x7b, 0x8e, 0xcc, 0xd0, 0x0e, 0x69, 0x43, 0x92, 0x61, 0xcf, 0xa1,
  0x19, 0xda, 0x21, 0x6d, 0x28, 0xa6, 0xca, 0xda, 0xb8, 0x09, 0x02, 0x1d,
  0x9c, 0xc1, 0x04, 0x81, 0xc8, 0x36, 0x20, 0x87, 0xf7, 0x1c, 0x87, 0xf1,
  0x01, 0x1b, 0x02, 0x30, 0x98, 0x20, 0xd8, 0x01, 0x1a, 0x6c, 0x40, 0x0e,
  0x31, 0x78, 0x8e, 0xc3, 0x38, 0x80, 0x0d, 0x88, 0x21, 0x06, 0xcf, 0x61,
  0x18, 0x07, 0xb0, 0x41, 0x18, 0x03, 0x32, 0xd8, 0x40, 0x74, 0x40, 0x18,
  0x94, 0xc1, 0x04, 0xe1, 0x0e, 0xd2, 0x60, 0x43, 0x70, 0x06, 0x13, 0x04,
  0x01, 0xa0, 0x04, 0x35, 0x45, 0x55, 0x86, 0x47, 0x57, 0x27, 0x57, 0x46,
  0x66, 0x55, 0xc6, 0xf6, 0x36, 0x96, 0x46, 0x97, 0x47, 0x84, 0xaa, 0x08,
  0x6b, 0xe8, 0xe9, 0x49, 0x8a, 0x68, 0x82, 0x50, 0x70, 0x13, 0x84, 0xa2,
  0xdb, 0x10, 0x1c, 0x13, 0x84, 0xc2, 0xdb, 0x20, 0x5c, 0xd7, 0x86, 0xe5,
  0x58, 0x03, 0x36, 0x68, 0x03, 0x37, 0x78, 0x03, 0xe3, 0x0d, 0x8e, 0x36,
  0x80, 0x83, 0x0d, 0x81, 0x31, 0x41, 0x28, 0xbe, 0x09, 0x02, 0xa1, 0x6d,
  0x10, 0x2e, 0x3a, 0xd8, 0xb0, 0x18, 0x6b, 0xc0, 0x06, 0x6d, 0x20, 0x07,
  0x6f, 0x60, 0xcc, 0x81, 0xd1, 0x06, 0x75, 0xb0, 0x21, 0x80, 0x26, 0x08,
  0x05, 0x18, 0x6c, 0x58, 0xa0, 0x35, 0x60, 0x83, 0x36, 0xb8, 0x83, 0x37,
  0x30, 0xf0, 0x00, 0x6a, 0x83, 0x3a, 0x60, 0x31, 0xf4, 0xc4, 0xf4, 0x24,
  0xb5, 0x61, 0xb9, 0xf4, 0x80, 0x0d, 0xda, 0xc0, 0x0d, 0xde, 0xc0, 0x98,
  0x83, 0xab, 0x0d, 0x00, 0x2e, 0x53, 0x56, 0x5f, 0x50, 0x6f, 0x73, 0x69,
  0x74, 0x69, 0x6f, 0x6e, 0x1b, 0x96, 0x8c, 0x0f, 0xd8, 0x00, 0x0f, 0xdc,
  0x60, 0x0e, 0x8c, 0x39, 0xc8, 0xda, 0xa0, 0x0e, 0x36, 0x04, 0xd9, 0x04,
  0x81, 0xd8, 0x36, 0x08, 0xd7, 0x1f, 0x6c, 0x58, 0xb4, 0x35, 0x60, 0x83,
  0x36, 0xf0, 0x83, 0x37, 0x30, 0xe6, 0x40, 0x6b, 0x03, 0x50, 0xd8, 0x60,
  0xc4, 0x81, 0x1d, 0xe4, 0xc1, 0x1e, 0xf4, 0x41, 0x28, 0x30, 0x99, 0xb2,
  0xfa, 0xa2, 0x0a, 0x93, 0x3b, 0x2b, 0xa3, 0x9b, 0x20, 0x14, 0x61, 0xb0,
  0x61, 0x39, 0x46, 0x81, 0x0d, 0x48, 0xc1, 0x0d, 0xda, 0xc0, 0x98, 0x83,
  0xa3, 0x0d, 0x40, 0x61, 0x82, 0x50, 0x88, 0xc1, 0x04, 0xa1, 0x18, 0x83,
  0x0d, 0xc2, 0x65, 0x6c, 0x58, 0x8c, 0x51, 0x30, 0x05, 0x52, 0x90, 0x83,
  0x36, 0x30, 0x4e, 0xc1, 0x68, 0x03, 0x54, 0xd8, 0x20, 0x94, 0x42, 0x2a,
  0x6c, 0x18, 0x44, 0x41, 0x15, 0x80, 0x0d, 0x45, 0x1a, 0xa8, 0xc1, 0x2a,
  0x98, 0x01, 0xd0, 0x0a, 0x4f, 0xec, 0x0d, 0xcf, 0x65, 0xec, 0xad, 0x0d,
  0x2e, 0x8d, 0xad, 0x4c, 0xce, 0xe5, 0x0d, 0x8e, 0x2e, 0xed, 0xcd, 0x6d,
  0x6e, 0x4a, 0x20, 0x54, 0x61, 0x63, 0xb3, 0x6b, 0x73, 0x49, 0x23, 0x2b,
  0x73, 0xa3, 0x9b, 0x12, 0x10, 0x55, 0xc8, 0xf0, 0x5c, 0xec, 0xca, 0xe4,
  0xe6, 0xd2, 0xde, 0xdc, 0xa6, 0x04, 0x47, 0x13, 0x32, 0x3c, 0x17, 0xbb,
  0x30, 0x36, 0xbb, 0x32, 0xb9, 0x29, 0x41, 0x52, 0x87, 0x0c, 0xcf, 0x65,
  0x0e, 0x2d, 0x8c, 0xac, 0x4c, 0xae, 0xe9, 0x8d, 0xac, 0x8c, 0x6d, 0x4a,
  0xc0, 0x94, 0x21, 0xc3, 0x73, 0x91, 0x2b, 0x9b, 0x7b, 0xab, 0x93, 0x1b,
  0x2b, 0x9b, 0x9b, 0x12, 0x94, 0x41, 0x1d, 0x32, 0x3c, 0x17, 0xbb, 0xb4,
  0xb2, 0xbb, 0x24, 0xb2, 0x29, 0xba, 0x30, 0xba, 0xb2, 0x29, 0xc1, 0x19,
  0xd4, 0x21, 0xc3, 0x73, 0x29, 0x73, 0xa3, 0x93, 0xcb, 0x83, 0x7a, 0x4b,
  0x73, 0xa3, 0x9b, 0x9b, 0x12, 0xac, 0x02, 0x00, 0x79, 0x18, 0x00, 0x00,
  0x51, 0x00, 0x00, 0x00, 0x33, 0x08, 0x80, 0x1c, 0xc4, 0xe1, 0x1c, 0x66,
  0x14, 0x01, 0x3d, 0x88, 0x43, 0x38, 0x84, 0xc3, 0x8c, 0x42, 0x80, 0x07,
  0x79, 0x78, 0x07, 0x73, 0x98, 0x71, 0x0c, 0xe6, 0x00, 0x0f, 0xed, 0x10,
  0x0e, 0xf4, 0x80, 0x0e, 0x33, 0x0c, 0x42, 0x1e, 0xc2, 0xc1, 0x1d, 0xce,
  0xa1, 0x1c, 0x66, 0x30, 0x05, 0x3d, 0x88, 0x43, 0x38, 0x84, 0x83, 0x1b,
  0xcc, 0x03, 0x3d, 0xc8, 0x43, 0x3d, 0x8c, 0x03, 0x3d, 0xcc, 0x78, 0x8c,
  0x74, 0x70, 0x07, 0x7b, 0x08, 0x07, 0x79, 0x48, 0x87, 0x70, 0x70, 0x07,
  0x7a, 0x70, 0x03, 0x76, 0x78, 0x87, 0x70, 0x20, 0x87, 0x19, 0xcc, 0x11,
  0x0e, 0xec, 0x90, 0x0e, 0xe1, 0x30, 0x0f, 0x6e, 0x30, 0x0f, 0xe3, 0xf0,
  0x0e, 0xf0, 0x50, 0x0e, 0x33, 0x10, 0xc4, 0x1d, 0xde, 0x21, 0x1c, 0xd8,
  0x21, 0x1d, 0xc2, 0x61, 0x1e, 0x66, 0x30, 0x89, 0x3b, 0xbc, 0x83, 0x3b,
  0xd0, 0x43, 0x39, 0xb4, 0x03, 0x3c, 0xbc, 0x83, 0x3c, 0x84, 0x03, 0x3b,
  0xcc, 0xf0, 0x14, 0x76, 0x60, 0x07, 0x7b, 0x68, 0x07, 0x37, 0x68, 0x87,
  0x72, 0x68, 0x07, 0x37, 0x80, 0x87, 0x70, 0x90, 0x87, 0x70, 0x60, 0x07,
  0x76, 0x28, 0x07, 0x76, 0xf8, 0x05, 0x76, 0x78, 0x87, 0x77, 0x80, 0x87,
  0x5f, 0x08, 0x87, 0x71, 0x18, 0x87, 0x72, 0x98, 0x87, 0x79, 0x98, 0x81,
  0x2c, 0xee, 0xf0, 0x0e, 0xee, 0xe0, 0x0e, 0xf5, 0xc0, 0x0e, 0xec, 0x30,
  0x03, 0x62, 0xc8, 0xa1, 0x1c, 0xe4, 0xa1, 0x1c, 0xcc, 0xa1, 0x1c, 0xe4,
  0xa1, 0x1c, 0xdc, 0x61, 0x1c, 0xca, 0x21, 0x1c, 0xc4, 0x81, 0x1d, 0xca,
  0x61, 0x06, 0xd6, 0x90, 0x43, 0x39, 0xc8, 0x43, 0x39, 0x98, 0x43, 0x39,
  0xc8, 0x43, 0x39, 0xb8, 0xc3, 0x38, 0x94, 0x43, 0x38, 0x88, 0x03, 0x3b,
  0x94, 0xc3, 0x2f, 0xbc, 0x83, 0x3c, 0xfc, 0x82, 0x3b, 0xd4, 0x03, 0x3b,
  0xb0, 0xc3, 0x0c, 0xc4, 0x21, 0x07, 0x7c, 0x70, 0x03, 0x7a, 0x28, 0x87,
  0x76, 0x80, 0x87, 0x19, 0xd1, 0x43, 0x0e, 0xf8, 0xe0, 0x06, 0xe4, 0x20,
  0x0e, 0xe7, 0xe0, 0x06, 0xf6, 0x10, 0x0e, 0xf2, 0xc0, 0x0e, 0xe1, 0x90,
  0x0f, 0xef, 0x50, 0x0f, 0xf4, 0x30, 0x83, 0x81, 0xc8, 0x01, 0x1f, 0xdc,
  0x40, 0x1c, 0xe4, 0xa1, 0x1c, 0xc2, 0x61, 0x1d, 0xdc, 0x40, 0x1c, 0xe4,
  0x01, 0x00, 0x00, 0x00, 0x71, 0x20, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00,
  0x06, 0x20, 0xa5, 0x6c, 0x4b, 0x5c, 0x13, 0x15, 0x11, 0xc3, 0x4b, 0x2c,
  0x8e, 0x80, 0x4c, 0x98, 0x21, 0x40, 0xc3, 0xe5, 0x3b, 0x8f, 0x1f, 0x20,
  0x0d, 0x10, 0x61, 0x7e, 0x71, 0xdb, 0xd6, 0xb0, 0x0d, 0x97, 0xef, 0x3c,
  0xbe, 0x10, 0x50, 0x45, 0x41, 0x44, 0xa5, 0x03, 0x0c, 0x25, 0x61, 0x00,
  0x02, 0xe6, 0x17, 0xb7, 0x6d, 0x0c, 0xdb, 0x70, 0xf9, 0xce, 0xe3, 0x0b,
  0x01, 0x55, 0x14, 0x44, 0x54, 0x3a, 0xc0, 0x50, 0x12, 0x06, 0x20, 0x60,
  0x3e, 0x72, 0xdb, 0xf6, 0x20, 0x0d, 0x97, 0xef, 0x3c, 0xbe, 0x10, 0x11,
  0xc0, 0x44, 0x84, 0x40, 0x33, 0x2c, 0x84, 0x1d, 0x38, 0xc3, 0xe5, 0x3b,
  0x8f, 0x3f, 0x38, 0x93, 0xed, 0x17, 0xb7, 0x6d, 0x04, 0xce, 0x70, 0xf9,
  0xce, 0xe3, 0x0f, 0xce, 0x74, 0xfb, 0xc5, 0x6d, 0xdb, 0x02, 0x35, 0x5c,
  0xbe, 0xf3, 0xf8, 0x0b, 0x61, 0x00, 0x02, 0xf6, 0xdd, 0x76, 0xeb, 0x7c,
  0xb5, 0x6e, 0x01, 0xd3, 0x70, 0xf9, 0xce, 0xe3, 0x2f, 0x0e, 0x30, 0x88,
  0xcd, 0x43, 0x4d, 0x7e, 0x71, 0xdb, 0x66, 0x00, 0x0d, 0x97, 0xef, 0x3c,
  0xbe, 0x04, 0x30, 0xcf, 0x42, 0xf8, 0xc5, 0x6d, 0x9b, 0x42, 0x35, 0x5c,
  0xbe, 0xf3, 0xf8, 0x12, 0xc0, 0x3c, 0x0b, 0x51, 0x12, 0x15, 0xb1, 0xf8,
  0xc5, 0x6d, 0x9b, 0x40, 0x35, 0x5c, 0xbe, 0xf3, 0xf8, 0xd2, 0xe4, 0x44,
  0x04, 0x4a, 0x4d, 0x0f, 0x35, 0xf9, 0xc5, 0x6d, 0xdb, 0x40, 0x35, 0x5c,
  0xbe, 0xf3, 0xf8, 0xd2, 0xe4, 0x44, 0x04, 0x4a, 0x4d, 0x0f, 0x35, 0xf9,
  0xc8, 0x6d, 0x9b, 0x83, 0x34, 0x5c, 0xbe, 0xf3, 0xf8, 0x13, 0x11, 0x4d,
  0x08, 0x10, 0x61, 0x7e, 0x71, 0xdb, 0x56, 0xf0, 0x0c, 0x97, 0xef, 0x3c,
  0x3e, 0xd5, 0x00, 0x11, 0xe6, 0x17, 0xb7, 0x6d, 0x09, 0xcd, 0x15, 0x38,
  0x97, 0x6f, 0x12, 0xc3, 0xfd, 0x7f, 0xb7, 0x0d, 0x61, 0x20, 0x00, 0x00,
  0x6a, 0x02, 0x00, 0x00, 0x13, 0x04, 0x43, 0x2c, 0x10, 0x00, 0x00, 0x00,
  0x24, 0x00, 0x00, 0x00, 0x34, 0x8e, 0x00, 0x10, 0x51, 0x28, 0x65, 0x51,
  0x2c, 0xc5, 0x57, 0x26, 0x65, 0x54, 0x20, 0xc5, 0x56, 0x2e, 0x05, 0x53,
  0x84, 0x02, 0xe5, 0x53, 0x14, 0x85, 0x57, 0xa8, 0x01, 0x33, 0x00, 0xc5,
  0x55, 0x6e, 0x25, 0x57, 0x76, 0x25, 0x53, 0xa6, 0x01, 0x34, 0x8c, 0x11,
  0x80, 0x20, 0x08, 0x82, 0xde, 0x18, 0x01, 0x08, 0x82, 0x20, 0xfa, 0x8d,
  0x11, 0xf4, 0x7d, 0xcb, 0xe2, 0xda, 0x18, 0xc1, 0xee, 0x8f, 0x32, 0x09,
  0x06, 0x63, 0x04, 0x20, 0x08, 0x82, 0xf0, 0x2f, 0x8c, 0x11, 0x80, 0x20,
  0x08, 0x82, 0xdc, 0x18, 0x01, 0x08, 0xe2, 0xff, 0xdf, 0x8d, 0x11, 0xa8,
  0x78, 0x7d, 0xca, 0xde, 0x18, 0x81, 0x8a, 0xd7, 0xa7, 0xec, 0x0b, 0x63,
  0x04, 0x20, 0x08, 0x82, 0xf8, 0x2f, 0x8c, 0x11, 0x80, 0x20, 0x08, 0xc2,
  0xdf, 0x18, 0x01, 0x08, 0x82, 0x20, 0x08, 0x06, 0x63, 0x04, 0x20, 0x08,
  0x82, 0x20, 0x28, 0x8c, 0x00, 0x8c, 0x11, 0x80, 0x20, 0x08, 0xe2, 0xdf,
  0x0c, 0x00, 0x00, 0x00, 0x23, 0x06, 0x09, 0x00, 0x82, 0x60, 0x40, 0x06,
  0xa2, 0x40, 0xd1, 0x81, 0x1e, 0xe4, 0xc1, 0x19, 0x8c, 0x18, 0x24, 0x00,
  0x08, 0x82, 0x01, 0x19, 0x8c, 0x42, 0x55, 0x07, 0x7c, 0xb0, 0x07, 0x68,
  0x30, 0x62, 0x90, 0x00, 0x20, 0x08, 0x06, 0x64, 0x40, 0x0a, 0x96, 0x1d,
  0xfc, 0xc1, 0x1f, 0xa4, 0xc1, 0x88, 0x41, 0x02, 0x80, 0x20, 0x18, 0x90,
  0x41, 0x29, 0x5c, 0x77, 0x40, 0x0a, 0xa4, 0xa0, 0x06, 0x23, 0x06, 0x09,
  0x00, 0x82, 0x60, 0x40, 0x06, 0xa6, 0x80, 0xe1, 0x01, 0x29, 0x90, 0xc2,
  0x1a, 0x8c, 0x18, 0x24, 0x00, 0x08, 0x82, 0x01, 0x19, 0x9c, 0x42, 0x66,
  0x07, 0xa6, 0x60, 0x0a, 0x6c, 0x30, 0x62, 0x90, 0x00, 0x20, 0x08, 0x06,
  0x64, 0x80, 0x0a, 0xda, 0x1d, 0x98, 0x82, 0x29, 0xb4, 0xc1, 0x88, 0x41,
  0x02, 0x80, 0x20, 0x18, 0x90, 0x41, 0x2a, 0x6c, 0x7a, 0x70, 0x0a, 0xa7,
  0xe0, 0x06, 0x23, 0x06, 0x09, 0x00, 0x82, 0x60, 0x60, 0xe0, 0x82, 0x28,
  0x84, 0x02, 0x2a, 0xd8, 0xc1, 0x37, 0x62, 0x90, 0x00, 0x20, 0x08, 0x06,
  0x46, 0x2e, 0x8c, 0x82, 0x28, 0xa4, 0x82, 0x1e, 0x80, 0xc1, 0x88, 0x41,
  0x02, 0x80, 0x20, 0x18, 0x18, 0xba, 0x40, 0x0a, 0xa4, 0xa0, 0x0a, 0x78,
  0x10, 0x06, 0x23, 0x06, 0x09, 0x00, 0x82, 0x60, 0x60, 0xec, 0x42, 0x29,
  0xa0, 0xc2, 0x2a, 0xfc, 0x81, 0x18, 0x8c, 0x18, 0x24, 0x00, 0x08, 0x82,
  0x81, 0xc1, 0x0b, 0xa6, 0x90, 0x0a, 0xac, 0xa0, 0x07, 0x63, 0x30, 0x62,
  0x90, 0x00, 0x20, 0x08, 0x06, 0x46, 0x2f, 0x9c, 0x82, 0x2a, 0xb4, 0x02,
  0x28, 0x90, 0xc1, 0x88, 0x41, 0x02, 0x80, 0x20, 0x18, 0x18, 0xbe, 0x80,
  0x0a, 0xaf, 0xe0, 0x0a, 0xa2, 0x50, 0x06, 0x23, 0x06, 0x09, 0x00, 0x82,
  0x60, 0x60, 0xfc, 0x42, 0x2a, 0xc0, 0xc2, 0x2b, 0xf4, 0x81, 0x19, 0x8c,
  0x18, 0x24, 0x00, 0x08, 0x82, 0x81, 0x01, 0x0e, 0xaa, 0x10, 0x0b, 0xb0,
  0x30, 0x0a, 0x67, 0x30, 0x62, 0x90, 0x00, 0x20, 0x08, 0x06, 0x46, 0x38,
  0xac, 0x42, 0x2c, 0xc4, 0x42, 0x29, 0xa0, 0xc1, 0x88, 0x41, 0x02, 0x80,
  0x20, 0x18, 0x18, 0xe2, 0xc0, 0x0a, 0xb2, 0x20, 0x0b, 0xa0, 0x90, 0x06,
  0x23, 0x06, 0x07, 0x00, 0x82, 0x60, 0x10, 0x06, 0xb7, 0x60, 0x06, 0xcc,
  0x2c, 0x8c, 0x26, 0x04, 0xc0, 0x68, 0x82, 0x10, 0x8c, 0x26, 0x0c, 0x82,
  0x0d, 0x49, 0x7c, 0x6c, 0x48, 0xe2, 0x63, 0x43, 0x12, 0x9f, 0x11, 0x83,
  0x05, 0x00, 0x41, 0x30, 0x60, 0xce, 0xe1, 0x0d, 0x06, 0x21, 0x18, 0x84,
  0x60, 0xc4, 0xc0, 0x00, 0x40, 0x10, 0x0c, 0x9c, 0x73, 0x68, 0x83, 0xc0,
  0x8a, 0x40, 0x3e, 0x56, 0x08, 0xf2, 0xb1, 0x62, 0x90, 0xcf, 0x88, 0xc1,
  0x03, 0x80, 0x20, 0x18, 0x4c, 0xea, 0x80, 0x07, 0x5c, 0xe6, 0x34, 0x60,
  0x00, 0x06, 0xbf, 0xf0, 0x0b, 0x76, 0x00, 0x06, 0xa3, 0x09, 0x01, 0x30,
  0x9a, 0x20, 0x04, 0x26, 0x9c, 0x81, 0x7c, 0x4c, 0x40, 0x03, 0xf9, 0x98,
  0xb0, 0x06, 0xf0, 0x31, 0x81, 0x0d, 0xe0, 0x33, 0x62, 0x90, 0x00, 0x20,
  0x08, 0x06, 0x15, 0x3c, 0x94, 0x82, 0x10, 0x08, 0x81, 0xa5, 0x41, 0x10,
  0x9f, 0x11, 0x03, 0x03, 0x00, 0x41, 0x30, 0x70, 0xe8, 0xa1, 0x14, 0x82,
  0x11, 0x03, 0x03, 0x00, 0x41, 0x30, 0x70, 0xea, 0x41, 0x0f, 0xb6, 0x11,
  0x03, 0x03, 0x00, 0x41, 0x30, 0x70, 0xec, 0x61, 0x0f, 0xb6, 0x11, 0x03,
  0x03, 0x00, 0x41, 0x30, 0x70, 0xee, 0x81, 0x0f, 0xb6, 0x11, 0x03, 0x03,
  0x00, 0x41, 0x30, 0x70, 0xf0, 0x81, 0x14, 0xbc, 0x11, 0x03, 0x03, 0x00,
  0x41, 0x30, 0x70, 0xf2, 0xa1, 0x14, 0xbc, 0x11, 0x03, 0x03, 0x00, 0x41,
  0x30, 0x70, 0xf4, 0xc1, 0x14, 0xbc, 0x11, 0x03, 0x03, 0x00, 0x41, 0x30,
  0x70, 0xf6, 0x01, 0x14, 0xbc, 0x11, 0x03, 0x03, 0x00, 0x41, 0x30, 0x70,
  0xf8, 0x21, 0x14, 0xbc, 0x11, 0x03, 0x03, 0x00, 0x41, 0x30, 0x70, 0xfa,
  0x21, 0x15, 0xc0, 0x60, 0xc4, 0xc0, 0x00, 0x40, 0x10, 0x0c, 0x1c, 0x7f,
  0x50, 0x05, 0x30, 0xb0, 0x22, 0x91, 0x8f, 0x1d, 0x89, 0x7c, 0x4c, 0x08,
  0xe2, 0x63, 0xca, 0x22, 0x1f, 0x4b, 0x1c, 0xf9, 0x98, 0x10, 0xc4, 0xc7,
  0x18, 0x48, 0x3e, 0xe6, 0x40, 0xf2, 0x31, 0x21, 0x88, 0x8f, 0x05, 0x8f,
  0x7c, 0xac, 0x78, 0xe4, 0x63, 0x42, 0x10, 0x1f, 0x53, 0x22, 0xf9, 0x58,
  0x41, 0xc9, 0xc7, 0x84, 0x20, 0x3e, 0xa6, 0x58, 0xf2, 0x31, 0xc7, 0x92,
  0x8f, 0x09, 0x41, 0x7c, 0xac, 0xd1, 0xe4, 0x63, 0x0b, 0x27, 0x1f, 0x13,
  0x82, 0xf8, 0x58, 0xf3, 0xc9, 0xc7, 0x28, 0x4f, 0x3e, 0x26, 0x04, 0xf1,
  0x31, 0x2b, 0x0c, 0xe4, 0x63, 0xd4, 0x18, 0xc8, 0xc7, 0x84, 0x20, 0x3e,
  0x06, 0x7d, 0xf2, 0x19, 0x31, 0x40, 0x00, 0x10, 0x04, 0x83, 0x4c, 0x26,
  0xca, 0xc1, 0x43, 0x02, 0x7b, 0xc2, 0x40, 0x3e, 0x23, 0x06, 0x08, 0x00,
  0x82, 0x60, 0x90, 0xd1, 0xc4, 0x39, 0x80, 0xc1, 0x11, 0x98, 0x33, 0x06,
  0xf2, 0x19, 0x31, 0x40, 0x00, 0x10, 0x04, 0x83, 0xcc, 0x26, 0xd2, 0x41,
  0x0c, 0x8c, 0x60, 0xc4, 0x60, 0x01, 0x40, 0x10, 0x0c, 0x98, 0xb0, 0x48,
  0x87, 0x62, 0x08, 0x8a, 0x21, 0x18, 0x31, 0x30, 0x00, 0x10, 0x04, 0x03,
  0x27, 0x2c, 0xce, 0x21, 0x30, 0xcc, 0x0c, 0xe4, 0x33, 0x62, 0x80, 0x00,
  0x20, 0x08, 0x06, 0x99, 0x4e, 0xb4, 0x43, 0x19, 0x40, 0x81, 0x5d, 0x68,
  0x20, 0x9f, 0x11, 0x03, 0x04, 0x00, 0x41, 0x30, 0xc8, 0x78, 0xe2, 0x1d,
  0xce, 0xe0, 0x09, 0xcc, 0x52, 0x03, 0xf9, 0x8c, 0x18, 0x20, 0x00, 0x08,
  0x82, 0x41, 0xe6, 0x13, 0xf1, 0x90, 0x06, 0x4e, 0x30, 0x62, 0xb0, 0x00,
  0x20, 0x08, 0x06, 0x4c, 0x5a, 0xc4, 0x43, 0x31, 0x04, 0xc5, 0x10, 0x8c,
  0x18, 0x18, 0x00, 0x08, 0x82, 0x81, 0x93, 0x16, 0xef, 0x10, 0x58, 0x70,
  0xc8, 0xc7, 0x04, 0x43, 0x3e, 0x36, 0x14, 0xf2, 0x31, 0xa9, 0x0f, 0xe4,
  0x63, 0x41, 0x23, 0x9f, 0x11, 0x03, 0x04, 0x00, 0x41, 0x30, 0xc8, 0xcc,
  0x22, 0x1f, 0xfc, 0xa0, 0x08, 0x46, 0x0c, 0x10, 0x00, 0x04, 0xc1, 0x20,
  0x3b, 0x0b, 0x7d, 0xe0, 0x83, 0x5c, 0x08, 0x8c, 0x0a, 0x05, 0xf9, 0x58,
  0x10, 0xc9, 0x67, 0xc4, 0x00, 0x01, 0x40, 0x10, 0x0c, 0x32, 0xb5, 0xe8,
  0x07, 0x51, 0x40, 0x82, 0x11, 0x03, 0x04, 0x00, 0x41, 0x30, 0xc8, 0xd6,
  0xc2, 0x1f, 0x40, 0x81, 0x17, 0x02, 0xb3, 0x4a, 0x41, 0x3e, 0x16, 0x54,
  0xf2, 0x19, 0x31, 0x40, 0x00, 0x10, 0x04, 0x83, 0xcc, 0x2d, 0x42, 0xc2,
  0x14, 0x96, 0x60, 0xc4, 0x00, 0x01, 0x40, 0x10, 0x0c, 0xb2, 0xb7, 0x10,
  0x09, 0x52, 0xf8, 0x85, 0x60, 0xc4, 0x60, 0x01, 0x40, 0x10, 0x0c, 0x18,
  0xbd, 0x10, 0x89, 0xa4, 0x08, 0x92, 0x22, 0x18, 0x31, 0x30, 0x00, 0x10,
  0x04, 0x03, 0x47, 0x2f, 0x40, 0x22, 0xb0, 0x60, 0x91, 0x8f, 0x09, 0x88,
  0x7c, 0x6c, 0x28, 0xe4, 0x33, 0x62, 0xf0, 0x00, 0x20, 0x08, 0x06, 0x53,
  0x5f, 0xac, 0x84, 0x3b, 0xb0, 0x43, 0x38, 0x80, 0xc3, 0x3c, 0xcc, 0x83,
  0x5c, 0xc8, 0x45, 0x4a, 0xcc, 0xc3, 0x68, 0x42, 0x00, 0x8c, 0x26, 0x08,
  0xc1, 0x68, 0xc2, 0x20, 0x8c, 0x18, 0x3c, 0x00, 0x08, 0x82, 0xc1, 0x14,
  0x1a, 0x2f, 0x41, 0x0f, 0xf0, 0x50, 0x0e, 0xe4, 0x70, 0x0f, 0xf7, 0x60,
  0x17, 0x76, 0xd1, 0x12, 0xf7, 0x30, 0x9a, 0x10, 0x00, 0xa3, 0x09, 0x42,
  0x30, 0x9a, 0x30, 0x08, 0x23, 0x06, 0x0b, 0x00, 0x82, 0x60, 0xc0, 0x9c,
  0xc6, 0x4b, 0x2c, 0x4a, 0xe2, 0x0b, 0xbd, 0xc0, 0x0b, 0x23, 0x06, 0x06,
  0x00, 0x82, 0x60, 0xe0, 0x9c, 0x86, 0x5c, 0x04, 0x46, 0x10, 0xf2, 0x31,
  0x42, 0x91, 0x8f, 0x15, 0x8a, 0x7c, 0xcc, 0x50, 0xe4, 0x63, 0xcd, 0x10,
  0x1f, 0x6b, 0x86, 0xf8, 0x58, 0x33, 0xc4, 0xc7, 0x06, 0x46, 0x3e, 0x36,
  0x34, 0xf2, 0xb1, 0xc1, 0x91, 0x8f, 0x4d, 0x2e, 0x01, 0x1f, 0x9b, 0x5e,
  0x02, 0x3e, 0x36, 0xc1, 0x04, 0x7c, 0x0c, 0x1a, 0xe4, 0x63, 0xd1, 0x20,
  0x1f, 0x93, 0x06, 0xf9, 0xd8, 0x50, 0x13, 0xf0, 0xb1, 0xc1, 0x26, 0xe0,
  0x63, 0xc3, 0x4d, 0xc0, 0xc7, 0x06, 0x4c, 0x3e, 0x36, 0x64, 0xf2, 0xb1,
  0x41, 0x93, 0xcf, 0x2c, 0x41, 0x30, 0x50, 0x31, 0xa8, 0x09, 0x10, 0x1a,
  0xc1, 0x40, 0xc5, 0xc0, 0x26, 0x40, 0x68, 0x04, 0x03, 0x15, 0x83, 0x9b,
  0x00, 0xa1, 0x11, 0x0c, 0x54, 0x10, 0x6a, 0x03, 0x84, 0x46, 0x60, 0x81,
  0x5d, 0xc0, 0x60, 0xc4, 0xe0, 0x00, 0x40, 0x10, 0x0c, 0xc2, 0x60, 0x37,
  0xd4, 0x02, 0x26, 0x82, 0xd1, 0x84, 0x00, 0x18, 0x4d, 0x10, 0x82, 0xd1,
  0x84, 0x41, 0xb0, 0x9f, 0x18, 0xe2, 0x63, 0x60, 0x31, 0xc4, 0xc7, 0xc2,
  0x62, 0x88, 0xcf, 0x88, 0xc1, 0x02, 0x80, 0x20, 0x18, 0x30, 0xeb, 0x31,
  0x17, 0x83, 0x10, 0x0c, 0x42, 0x30, 0x62, 0x60, 0x00, 0x20, 0x08, 0x06,
  0xce, 0x7a, 0xc4, 0x45, 0x60, 0x41, 0x21, 0x1f, 0x13, 0x0a, 0xf9, 0xd8,
  0x50, 0xc8, 0xc7, 0x86, 0x93, 0x80, 0x8f, 0x0d, 0x27, 0x01, 0x1f, 0x1b,
  0x4e, 0x02, 0x3e, 0x23, 0x06, 0x0b, 0x00, 0x82, 0x60, 0xc0, 0xcc, 0xc7,
  0x5e, 0x0c, 0x42, 0x30, 0x08, 0xc1, 0x88, 0x81, 0x01, 0x80, 0x20, 0x18,
  0x38, 0xf3, 0x91, 0x17, 0x81, 0x15, 0x81, 0x7c, 0xac, 0x10, 0xe4, 0x63,
  0xc5, 0x20, 0x9f, 0x11, 0x83, 0x05, 0x00, 0x41, 0x30, 0x60, 0xf0, 0x03,
  0x34, 0xf8, 0x60, 0x0f, 0xf4, 0x60, 0x51, 0x92, 0x11, 0x03, 0x03, 0x00,
  0x41, 0x30, 0x70, 0xf0, 0x63, 0x3c, 0x82, 0x11, 0x83, 0x05, 0x00, 0x41,
  0x30, 0x60, 0xf4, 0x43, 0x34, 0x1a, 0x66, 0x29, 0x88, 0x61, 0xc4, 0xc0,
  0x00, 0x40, 0x10, 0x0c, 0x1c, 0xfd, 0x28, 0x8f, 0x60, 0xc4, 0x60, 0x01,
  0x40, 0x10, 0x0c, 0x18, 0xfe, 0x20, 0x0d, 0x50, 0xf8, 0x03, 0x3f, 0x38,
  0x8c, 0x62, 0xc4, 0xc0, 0x00, 0x40, 0x10, 0x0c, 0x1c, 0xfe, 0x38, 0x8f,
  0xc0, 0xf2, 0xc0, 0x2e, 0xe4, 0x63, 0x04, 0x21, 0x1f, 0x0b, 0x04, 0xf9,
  0x58, 0x00, 0x1a, 0xf0, 0xb1, 0xbb, 0x48, 0xe2, 0x63, 0x41, 0x20, 0x1f,
  0x0b, 0x02, 0xf9, 0x58, 0x30, 0xc8, 0xc7, 0x82, 0x42, 0x3e, 0x16, 0xf0,
  0x05, 0x7c, 0xac, 0x2f, 0x40, 0x21, 0x3e, 0x16, 0x04, 0xf2, 0xb1, 0x20,
  0x90, 0x8f, 0x05, 0x83, 0x7c, 0x2c, 0x58, 0xe4, 0x63, 0x81, 0x68, 0xc0,
  0xc7, 0x8e, 0x40, 0x3e, 0x66, 0x0a, 0xa6, 0x20, 0x1f, 0x0b, 0x54, 0x03,
  0x3e, 0x46, 0x51, 0xf2, 0xb1, 0x40, 0x90, 0x8f, 0x05, 0xa8, 0x01, 0x1f,
  0x0b, 0x02, 0xf9, 0x58, 0x50, 0x1b, 0xf2, 0x19, 0x31, 0x38, 0x00, 0x10,
  0x04, 0x83, 0x4b, 0x46, 0xd4, 0xe3, 0x36, 0x02, 0x43, 0x02, 0xfa, 0x58,
  0x6b, 0xf0, 0x41, 0x7c, 0xcc, 0x35, 0xf8, 0x20, 0x3e, 0xf6, 0x1a, 0x7c,
  0x10, 0x1f, 0x83, 0x0d, 0x30, 0x88, 0x8f, 0x05, 0x81, 0x7c, 0x2c, 0x08,
  0xe4, 0x63, 0xc1, 0x20, 0x1f, 0x0b, 0x0e, 0xf9, 0x98, 0x70, 0xc8, 0xc7,
  0x86, 0x43, 0x3e, 0x36, 0x98, 0x02, 0x7c, 0x6c, 0x30, 0x05, 0xf8, 0xd8,
  0x60, 0x0a, 0xf0, 0x31, 0xdd, 0x30, 0x83, 0xf8, 0xd8, 0x85, 0x1e, 0xf2,
  0xb1, 0x40, 0x90, 0x8f, 0x05, 0x69, 0x00, 0x1f, 0xf3, 0x8d, 0x80, 0x3e,
  0x16, 0x4c, 0xf2, 0xb1, 0x20, 0x91, 0x8f, 0x09, 0x89, 0x7c, 0x6c, 0x48,
  0xe4, 0x63, 0xac, 0x30, 0x22, 0x30, 0x18, 0x31, 0x38, 0x00, 0x10, 0x04,
  0x83, 0x30, 0x30, 0x93, 0xfa, 0xd8, 0x8d, 0x60, 0x34, 0x21, 0x00, 0x46,
  0x13, 0x84, 0x60, 0x34, 0x61, 0x10, 0x6c, 0xd0, 0x03, 0xf9, 0xd8, 0xb0,
  0x07, 0xf2, 0xb1, 0x81, 0x0f, 0xe4, 0x63, 0x68, 0x60, 0x0e, 0xf2, 0xb1,
  0x34, 0x30, 0x07, 0xf9, 0x98, 0x1a, 0x98, 0x83, 0x7c, 0xcc, 0x19, 0xe0,
  0x63, 0xce, 0x00, 0x1f, 0x73, 0x06, 0xf8, 0x58, 0x32, 0xc8, 0xc7, 0x92,
  0x41, 0x3e, 0x96, 0x0c, 0xf2, 0xb1, 0x01, 0x1c, 0xe0, 0x63, 0x03, 0x38,
  0xc0, 0xc7, 0x06, 0x70, 0x80, 0x8f, 0x81, 0x83, 0x9d, 0xc0, 0x60, 0xb8,
  0x21, 0x88, 0x13, 0x30, 0x98, 0x65, 0x10, 0x82, 0x60, 0xc4, 0x20, 0x01,
  0x40, 0x10, 0x0c, 0x8c, 0x53, 0x89, 0x13, 0x38, 0xb9, 0x93, 0x35, 0x71,
  0x91, 0x11, 0x83, 0x04, 0x00, 0x41, 0x30, 0x30, 0x50, 0x45, 0x4e, 0xe2,
  0x04, 0x4f, 0xd6, 0xe4, 0x45, 0x46, 0x0c, 0x12, 0x00, 0x04, 0xc1, 0xc0,
  0x48, 0x95, 0x39, 0x99, 0x93, 0x3c, 0x69, 0x13, 0x18, 0x19, 0x31, 0x48,
  0x00, 0x10, 0x04, 0x03, 0x43, 0x55, 0xe8, 0x84, 0x4e, 0xf4, 0xa4, 0x4d,
  0x62, 0x64, 0x34, 0x21, 0x25, 0x86, 0x11, 0x83, 0x07, 0x00, 0x41, 0x30,
  0x98, 0x4e, 0xa5, 0x46, 0xf8, 0xe3, 0x3e, 0x5a, 0x82, 0x25, 0x56, 0xa2,
  0x3f, 0x66, 0x64, 0x46, 0x66, 0xa4, 0x3f, 0x46, 0x13, 0x02, 0x60, 0x34,
  0x41, 0x08, 0x46, 0x13, 0x06, 0xc1, 0x86, 0x7e, 0x90, 0x8f, 0x0d, 0xfd,
  0x20, 0x1f, 0x1b, 0xfa, 0x41, 0x3e, 0x36, 0x44, 0xf0, 0xb1, 0x21, 0x82,
  0x8f, 0x0d, 0x11, 0x7c, 0x46, 0x0c, 0x0e, 0x00, 0x04, 0xc1, 0xc0, 0x5b,
  0x95, 0x1c, 0xf9, 0x0f, 0x32, 0x19, 0x4d, 0x08, 0x84, 0x0b, 0x06, 0xb3,
  0x20, 0x26, 0xe4, 0x63, 0x2e, 0xe2, 0x1e, 0xf1, 0xb1, 0x17, 0x71, 0x8f,
  0xf8, 0x18, 0x8c, 0xb8, 0x47, 0x7c, 0x46, 0x0c, 0x16, 0x00, 0x04, 0xc1,
  0x80, 0xd1, 0x15, 0x31, 0x19, 0x84, 0xc0, 0x27, 0x7a, 0x82, 0x27, 0x2c,
  0x98, 0x11, 0xf9, 0x58, 0x00, 0x16, 0xf2, 0x31, 0x01, 0x2c, 0xe4, 0x63,
  0x03, 0x58, 0xc8, 0xc7, 0x90, 0x21, 0x3e, 0x86, 0x0c, 0xf1, 0x31, 0x64,
  0x88, 0xcf, 0x88, 0xc1, 0x03, 0x80, 0x20, 0x18, 0x4c, 0xbc, 0x82, 0x27,
  0x34, 0x02, 0x23, 0x83, 0x10, 0xd8, 0x08, 0x9b, 0xb0, 0x09, 0x9b, 0x30,
  0xa3, 0x09, 0x01, 0x30, 0x9a, 0x20, 0x04, 0xa3, 0x09, 0x83, 0x60, 0x83,
  0x4a, 0xc8, 0xc7, 0x06, 0x95, 0x90, 0x8f, 0x0d, 0x2a, 0x21, 0x1f, 0xcb,
  0x06, 0xf8, 0x58, 0x36, 0xc0, 0xc7, 0xb2, 0x01, 0x3e, 0x23, 0x06, 0x07,
  0x00, 0x82, 0x60, 0x10, 0x06, 0xe3, 0x22, 0x27, 0x38, 0x32, 0x2a, 0xa3,
  0x09, 0xc1, 0x60, 0x81, 0x19, 0xc8, 0xc7, 0xd6, 0x20, 0x47, 0xe8, 0x63,
  0x3b, 0xa2, 0x23, 0xf4, 0x31, 0x36, 0xd8, 0x11, 0xfa, 0xd8, 0xb0, 0x26,
  0xf2, 0xb1, 0x81, 0x4d, 0xe4, 0x63, 0x42, 0x9b, 0xc0, 0xc7, 0xdc, 0x44,
  0x88, 0xcf, 0x88, 0xc1, 0x01, 0x80, 0x20, 0x18, 0x84, 0x41, 0xbb, 0xf0,
  0x89, 0x98, 0x9c, 0xca, 0x68, 0x42, 0x30, 0x8c, 0x18, 0x1c, 0x00, 0x08,
  0x82, 0x41, 0x18, 0xbc, 0x8b, 0x9f, 0x90, 0x09, 0xaa, 0x8c, 0x26, 0x04,
  0x80, 0x0d, 0x86, 0x7c, 0x4c, 0x30, 0xe4, 0x63, 0x82, 0x1d, 0xc4, 0xc7,
  0x04, 0x33, 0x89, 0x8f, 0x35, 0x77, 0x10, 0x9f, 0x1b, 0x88, 0xad, 0xc0,
  0x55, 0xd0, 0x8a, 0x3f, 0x91, 0xcf, 0x88, 0x81, 0x01, 0x80, 0x20, 0x18,
  0x38, 0x21, 0x33, 0x2f, 0xc1, 0x88, 0x01, 0x02, 0x80, 0x20, 0x18, 0x64,
  0xfe, 0x02, 0x2b, 0x41, 0x9e, 0x80, 0xca, 0x88, 0x81, 0x01, 0x80, 0x20,
  0x18, 0x6c, 0xfd, 0x32, 0x2b, 0x41, 0x05, 0xf7, 0x02, 0x15, 0xcc, 0x0b,
  0xda, 0x61, 0x2f, 0x37, 0x28, 0x21, 0xd8, 0x63, 0x88, 0xad, 0x00, 0x57,
  0xd0, 0x9c, 0x54, 0x91, 0xcf, 0x88, 0x81, 0x01, 0x80, 0x20, 0x18, 0x38,
  0x2b, 0xd3, 0x2f, 0xc1, 0x88, 0x01, 0x02, 0x80, 0x20, 0x18, 0x64, 0x28,
  0xa3, 0x2b, 0xc1, 0xa8, 0xa8, 0xca, 0x88, 0x81, 0x01, 0x80, 0x20, 0x18,
  0x6c, 0x27, 0xd3, 0x2b, 0x41, 0x05, 0x21, 0x03, 0x15, 0xf4, 0x0b, 0xda,
  0x01, 0x32, 0x37, 0x28, 0x21, 0xd8, 0x0a, 0xc0, 0xe5, 0x8a, 0x09, 0xf6,
  0x2e, 0x62, 0x2b, 0x20, 0x17, 0xb4, 0x4c, 0x57, 0xe4, 0x33, 0x62, 0x60,
  0x00, 0x20, 0x08, 0x06, 0xce, 0xcd, 0xa4, 0x4c, 0x30, 0x62, 0x80, 0x00,
  0x20, 0x08, 0x06, 0x19, 0xcd, 0x98, 0x4b, 0xf0, 0x2a, 0xb6, 0x32, 0x62,
  0x60, 0x00, 0x20, 0x08, 0x06, 0xdb, 0xcc, 0xa4, 0x4b, 0x50, 0xc1, 0xca,
  0x40, 0x05, 0x2c, 0x83, 0x76, 0xd4, 0xcb, 0x0d, 0x4a, 0x08, 0xb6, 0x02,
  0x7c, 0xb9, 0x62, 0x82, 0x1d, 0x31, 0x48, 0x00, 0x10, 0x04, 0x03, 0x64,
  0x6c, 0x5a, 0x86, 0x66, 0x68, 0x06, 0x65, 0xf0, 0x60, 0xc4, 0x20, 0x01,
  0x40, 0x10, 0x0c, 0x90, 0xb1, 0x69, 0x19, 0x9a, 0xa1, 0x19, 0x91, 0xb9,
  0x83, 0x11, 0x83, 0x04, 0x00, 0x41, 0x30, 0x40, 0xc6, 0xa6, 0x65, 0x68,
  0x86, 0x66, 0x4e, 0xc6, 0x0e, 0x46, 0x0c, 0x12, 0x00, 0x04, 0xc1, 0x00,
  0x19, 0x9b, 0x96, 0xa1, 0x19, 0x9a, 0x29, 0x99, 0x39, 0x18, 0x31, 0x48,
  0x00, 0x10, 0x04, 0x03, 0x45, 0x6c, 0x5a, 0xa6, 0x66, 0x68, 0x06, 0x65,
  0x02, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf4, 0x71, 0xc2, 0xf7,
  0xe5, 0x1e, 0x82, 0xcc, 0xa3, 0x6c, 0xd4, 0x09, 0x8e, 0xfa, 0x0e, 0xaf,
  0x17, 0x00, 0x01, 0x00, 0x29, 0x98, 0x1a, 0x00, 0x78, 0x01, 0xed, 0x59,
  0x5d, 0x6c, 0x5c, 0x57, 0x11, 0x3e, 0xf7, 0xde, 0xb3, 0x77, 0xef, 0xdf,
  0x9e, 0xf5, 0xde, 0x7b, 0xf7, 0xde, 0xdd, 0xb5, 0xd7, 0xb1, 0xbd, 0xbb,
  0xb6, 0x37, 0xde, 0xd8, 0x8e, 0x7f, 0xe2, 0xcd, 0x8f, 0x93, 0x4d, 0xeb,
  0xd8, 0x49, 0x5a, 0x01, 0x8a, 0xea, 0x20, 0x19, 0xdb, 0x32, 0x51, 0x09,
  0xa8, 0x42, 0x40, 0x2b, 0x51, 0x78, 0xda, 0x2c, 0x61, 0xdb, 0x86, 0xd4,
  0x54, 0x55, 0x15, 0x45, 0xa5, 0x42, 0x10, 0xd1, 0x3c, 0x00, 0x42, 0x2d,
  0x02, 0x1e, 0xc9, 0xda, 0x09, 0x12, 0x5a, 0x45, 0x21, 0x42, 0x4b, 0x05,
  0x48, 0xbc, 0x50, 0x01, 0x0f, 0xbc, 0x55, 0x15, 0x12, 0x11, 0x42, 0x35,
  0xdf, 0x9c, 0xb5, 0x89, 0x1d, 0x42, 0x9e, 0xfa, 0x40, 0x91, 0x47, 0x9a,
  0x33, 0x67, 0xce, 0x99, 0x99, 0x33, 0x67, 0x66, 0xce, 0xfd, 0x7d, 0x3d,
  0xc3, 0x24, 0xdc, 0x98, 0x59, 0xd9, 0x20, 0xfa, 0xc5, 0x4b, 0xcf, 0xdf,
  0xbd, 0xe6, 0x31, 0x16, 0x41, 0x5f, 0x01, 0x12, 0x25, 0x78, 0x3d, 0x46,
  0x2d, 0x63, 0x77, 0xd2, 0xd4, 0x32, 0xa6, 0x53, 0xb3, 0x09, 0x03, 0xc0,
  0x29, 0x20, 0x41, 0x85, 0x9a, 0x4d, 0x20, 0xfd, 0x37, 0xbe, 0x95, 0x3e,
  0x0a, 0x3c, 0x86, 0xee, 0x7f, 0x40, 0x09, 0xf8, 0x5d, 0x08, 0xbd, 0x4c,
  0x82, 0x00, 0x9f, 0x9a, 0x4d, 0x70, 0x80, 0x5b, 0x6b, 0x13, 0x8d, 0x03,
  0x09, 0x54, 0x6a, 0x1e, 0x00, 0x17, 0xc8, 0x81, 0x02, 0xb8, 0x05, 0x51,
  0x6a, 0x00, 0xe7, 0xbf, 0xfa, 0xdb, 0x23, 0x20, 0x33, 0x40, 0x36, 0x7e,
  0xb5, 0xf3, 0xe8, 0x27, 0xbf, 0x13, 0x9f, 0xfe, 0x53, 0xe7, 0x97, 0x0f,
  0x13, 0xff, 0xf6, 0x57, 0x4e, 0x3e, 0xd4, 0xaf, 0x8f, 0x0a, 0x6c, 0x86,
  0x6d, 0x07, 0x6c, 0xe5, 0x89, 0xe0, 0x8e, 0x45, 0xed, 0xa3, 0x81, 0x62,
  0x47, 0xf0, 0x74, 0x8a, 0xda, 0xfb, 0xb9, 0x5c, 0x07, 0x3e, 0xcc, 0x3e,
  0xc1, 0x06, 0x80, 0xe8, 0xc3, 0x80, 0xf2, 0xa0, 0x33, 0xad, 0x06, 0xc2,
  0x74, 0x65, 0x4f, 0x8d, 0x19, 0xa0, 0xea, 0x40, 0x8d, 0x75, 0x80, 0x46,
  0x8e, 0xd5, 0xd8, 0x20, 0xcd, 0xfc, 0x7f, 0x43, 0x37, 0x35, 0x00, 0x8a,
  0x85, 0x8a, 0x42, 0xc4, 0xd6, 0xd9, 0xf6, 0x80, 0xd1, 0x38, 0xc1, 0x0b,
  0xb2, 0x98, 0x6b, 0x6b, 0x84, 0xaf, 0x76, 0xb0, 0x7b, 0xc4, 0x6d, 0xf1,
  0x88, 0xfd, 0x3d, 0x93, 0xd8, 0x4d, 0x5e, 0x23, 0x5e, 0x1e, 0xba, 0x6d,
  0x3c, 0x62, 0x6b, 0xc6, 0xd8, 0x72, 0x34, 0xa1, 0x2e, 0xc7, 0x39, 0xf4,
  0xa1, 0x04, 0x7e, 0x11, 0xfc, 0xe2, 0x36, 0x7e, 0x01, 0xfc, 0xc2, 0x36,
  0x7e, 0x05, 0xfc, 0xca, 0x36, 0xfe, 0x1c, 0xf8, 0x73, 0x5b, 0xfc, 0x96,
  0x7d, 0x9c, 0x37, 0xac, 0x17, 0x35, 0xde, 0xda, 0xee, 0x63, 0x0a, 0x32,
  0x12, 0xda, 0x7c, 0x02, 0x7c, 0x7b, 0x2f, 0x8f, 0xe6, 0xb9, 0xc9, 0x97,
  0x89, 0xf7, 0xba, 0xd8, 0x3d, 0x32, 0x07, 0x7e, 0xf1, 0x01, 0x7e, 0xe1,
  0x01, 0x7e, 0xe5, 0x01, 0xfe, 0xdc, 0x76, 0x9e, 0xfa, 0x84, 0x5b, 0xf6,
  0x1f, 0x55, 0x8f, 0xff, 0x2b, 0xb0, 0xeb, 0xe3, 0x87, 0x03, 0xbb, 0x3e,
  0x7e, 0x38, 0xf0, 0x51, 0xf0, 0x71, 0x17, 0x76, 0x61, 0x17, 0x76, 0x61,
  0x17, 0xfe, 0x3b, 0x54, 0xf9, 0x8f, 0x1b, 0x55, 0xeb, 0x83, 0x86, 0xa9,
  0x7d, 0xbf, 0x11, 0xd5, 0x5e, 0x6c, 0x44, 0xb4, 0x8b, 0x0d, 0x4d, 0xfb,
  0x49, 0xa3, 0xa6, 0xbd, 0x00, 0xfc, 0x3a, 0xf0, 0x25, 0xe0, 0x37, 0x80,
  0x3f, 0x68, 0x38, 0xda, 0x37, 0x1b, 0xb6, 0xb6, 0xda, 0x60, 0x66, 0x73,
  0x9d, 0x45, 0xef, 0xac, 0x33, 0xed, 0xd7, 0xeb, 0x35, 0xed, 0xe5, 0x06,
  0x8b, 0xac, 0xaf, 0xb3, 0xe2, 0xd5, 0xf5, 0xb8, 0xf6, 0xcf, 0x06, 0xde,
  0xc2, 0x9a, 0x4c, 0x49, 0x35, 0x15, 0x96, 0x6c, 0x2a, 0x4a, 0xba, 0xc9,
  0xec, 0x2b, 0xeb, 0x17, 0xd8, 0xea, 0x1a, 0x1e, 0xe9, 0xdf, 0x8b, 0x98,
  0x2b, 0x0a, 0xe3, 0xe5, 0xa6, 0xc2, 0x0f, 0x36, 0x59, 0xed, 0x9d, 0xdf,
  0xe3, 0x7d, 0x2b, 0x3a, 0xdf, 0xa6, 0xc6, 0x0f, 0xdb, 0xd4, 0x65, 0x91,
  0x23, 0x4d, 0x25, 0x32, 0x2d, 0xe7, 0xf1, 0x0c, 0x69, 0xd3, 0x3c, 0xa8,
  0x73, 0x41, 0x5b, 0x5d, 0x33, 0xe2, 0x1d, 0xc6, 0x05, 0x75, 0x75, 0xcd,
  0x8d, 0x0b, 0x29, 0x8f, 0x71, 0x97, 0xe9, 0x95, 0xa6, 0xa2, 0x1f, 0x6f,
  0x5e, 0x50, 0x56, 0xd7, 0x9c, 0x30, 0x65, 0x90, 0x1e, 0x9e, 0x97, 0x63,
  0xa4, 0x07, 0x9a, 0x90, 0xf2, 0x61, 0x20, 0xe5, 0xc1, 0xbb, 0xd1, 0xf4,
  0x5e, 0x91, 0x64, 0xb5, 0x96, 0x9d, 0x38, 0x5b, 0x27, 0x9d, 0x44, 0x67,
  0x9f, 0x61, 0xe7, 0xfa, 0x05, 0xf9, 0xe8, 0x76, 0x66, 0x8c, 0x58, 0x62,
  0x50, 0x78, 0x98, 0x8f, 0xa5, 0x3f, 0x56, 0x4f, 0xc6, 0x4b, 0xc2, 0x47,
  0x3f, 0x9a, 0x3b, 0x53, 0x0f, 0x40, 0xbd, 0xce, 0x85, 0xba, 0xdf, 0x99,
  0x11, 0x21, 0xfa, 0xc9, 0xf0, 0x40, 0xdd, 0x0b, 0x03, 0x91, 0x42, 0xdf,
  0x8f, 0x0f, 0xd7, 0x93, 0x69, 0x21, 0xbc, 0x5c, 0x20, 0xa2, 0xc4, 0xe7,
  0xba, 0xeb, 0x09, 0xd0, 0x64, 0x62, 0xb8, 0x4e, 0xfe, 0xe0, 0xfd, 0xd3,
  0x25, 0x7f, 0x40, 0x6d, 0x3f, 0xd1, 0x21, 0xed, 0x7b, 0xe9, 0xbe, 0x3a,
  0x8d, 0xe1, 0x91, 0x5c, 0xfa, 0x06, 0xea, 0x90, 0xaf, 0x76, 0x61, 0xaf,
  0xdc, 0x03, 0x78, 0xbb, 0xa6, 0xfd, 0xb4, 0xc1, 0xc6, 0xd7, 0xd7, 0xc3,
  0xa1, 0x31, 0x11, 0x0c, 0x4d, 0x48, 0x1f, 0x8d, 0x70, 0x50, 0xca, 0xc3,
  0x96, 0x91, 0x1a, 0xda, 0x2b, 0x36, 0xb4, 0x9f, 0x35, 0xac, 0xdf, 0xe5,
  0xa6, 0xe5, 0x5c, 0xa1, 0xc3, 0x70, 0xc2, 0xbc, 0xc1, 0xa2, 0x88, 0xb5,
  0xfd, 0x39, 0xc5, 0x88, 0x8f, 0x39, 0x46, 0x6e, 0xc2, 0x31, 0x06, 0xf6,
  0x3a, 0x61, 0xb1, 0x43, 0xfa, 0xed, 0xc6, 0xfb, 0x78, 0x50, 0x14, 0x22,
  0xb6, 0xd1, 0x7b, 0x89, 0xde, 0x2c, 0x6e, 0x6a, 0xdf, 0x6b, 0x6c, 0x68,
  0x6f, 0x36, 0x7e, 0xf4, 0x71, 0x95, 0x39, 0xda, 0xb5, 0x06, 0xf9, 0xed,
  0xe6, 0xba, 0x39, 0x8b, 0xc3, 0x46, 0x04, 0xf9, 0xea, 0x7d, 0xed, 0x56,
  0xa5, 0x97, 0xfd, 0x22, 0x55, 0x1c, 0x14, 0x2e, 0xcd, 0x0d, 0x9c, 0xe1,
  0xb4, 0x56, 0xa1, 0xbb, 0xdb, 0xc8, 0x77, 0x75, 0x19, 0xf1, 0x3d, 0xfd,
  0xa2, 0xbf, 0xa7, 0xc7, 0x10, 0xd9, 0x7e, 0xa7, 0xa3, 0xb7, 0xdf, 0xf1,
  0x96, 0xfa, 0xab, 0xcf, 0xc5, 0x57, 0xd7, 0x4c, 0x76, 0xb1, 0x65, 0xfe,
  0xf5, 0x57, 0x5a, 0xda, 0x2b, 0x09, 0x0b, 0x7d, 0x0b, 0x7d, 0x31, 0xd0,
  0x25, 0xe2, 0x03, 0xdd, 0xa2, 0x63, 0xa0, 0x47, 0x24, 0x10, 0xf3, 0x70,
  0xa4, 0xdf, 0x71, 0x0b, 0x6d, 0x1d, 0x6f, 0x04, 0x71, 0xcf, 0xf5, 0x09,
  0xaf, 0x90, 0x17, 0x99, 0xc9, 0x7e, 0x91, 0x1e, 0xef, 0x77, 0x92, 0x43,
  0xed, 0x39, 0x66, 0x2c, 0x36, 0x15, 0x63, 0xa9, 0x19, 0x0c, 0xb4, 0xf3,
  0x61, 0x15, 0x17, 0xb8, 0x95, 0x2c, 0x09, 0xd3, 0x2b, 0x39, 0xef, 0x97,
  0x4a, 0x46, 0xf0, 0xd9, 0x52, 0x35, 0x18, 0x19, 0x74, 0x32, 0xde, 0xb0,
  0x08, 0x07, 0x86, 0x05, 0xed, 0xc1, 0xca, 0x2d, 0x73, 0x66, 0x2e, 0x36,
  0x93, 0x9e, 0x2b, 0x14, 0x73, 0xa9, 0xc9, 0xac, 0xa7, 0x9a, 0xe6, 0x80,
  0x2b, 0x82, 0x91, 0x3e, 0xc7, 0x2a, 0xb8, 0x4e, 0x22, 0xe7, 0x63, 0x3f,
  0xa2, 0x45, 0x67, 0x40, 0xb1, 0xe6, 0x9b, 0x2e, 0x73, 0x5a, 0x0a, 0x5e,
  0x0e, 0x82, 0x21, 0xd7, 0xf1, 0x8b, 0xbe, 0x63, 0x7a, 0xbe, 0x43, 0x63,
  0x2a, 0x5e, 0x10, 0xac, 0x25, 0xbf, 0xea, 0x2e, 0xe5, 0xab, 0x56, 0xb1,
  0x5f, 0xae, 0xef, 0x6a, 0x47, 0x66, 0x2c, 0xf8, 0x6a, 0xc1, 0xb6, 0x45,
  0xbc, 0x52, 0x9e, 0xf1, 0x8b, 0x25, 0x59, 0x57, 0x6e, 0xa4, 0x32, 0x03,
  0xdf, 0xe0, 0x7b, 0xc9, 0x09, 0x96, 0x4a, 0xd5, 0x10, 0x6b, 0xb8, 0x1a,
  0xab, 0x24, 0x46, 0x46, 0xc5, 0x97, 0x10, 0x97, 0x3d, 0x90, 0x89, 0xc5,
  0x32, 0x79, 0x7f, 0xdf, 0xa0, 0xb0, 0xf6, 0xf9, 0x22, 0xb9, 0x6f, 0xaf,
  0x08, 0x48, 0x46, 0x61, 0x95, 0xb0, 0x38, 0x2c, 0xbc, 0x7d, 0xa3, 0x58,
  0x17, 0x7c, 0x84, 0x55, 0xa8, 0xe6, 0x82, 0xe4, 0x32, 0xa7, 0xbc, 0x99,
  0x85, 0x73, 0x3c, 0x81, 0x1c, 0xd0, 0x7a, 0x5e, 0xf2, 0x0c, 0xf7, 0x0d,
  0xa3, 0xf5, 0xfe, 0xb0, 0xca, 0x2c, 0xc3, 0x69, 0x25, 0x3d, 0x15, 0x07,
  0x01, 0x6b, 0x0f, 0x2d, 0x70, 0xbf, 0x88, 0xfa, 0x46, 0x5d, 0x24, 0x21,
  0x9b, 0xd8, 0x43, 0xb6, 0x21, 0x9f, 0x3d, 0xcb, 0xcd, 0x5e, 0xf8, 0x43,
  0x3a, 0x25, 0x95, 0x05, 0xfb, 0x46, 0x45, 0x6a, 0x3f, 0x70, 0x5f, 0x49,
  0xa4, 0x8c, 0x9e, 0x96, 0x5b, 0x80, 0x3e, 0xcd, 0xe5, 0x41, 0x0b, 0x13,
  0x88, 0xff, 0x04, 0xe6, 0xc7, 0x44, 0x06, 0xb9, 0x70, 0xd2, 0x13, 0x7a,
  0x27, 0x6c, 0xa4, 0x27, 0x7f, 0xa9, 0xd1, 0xde, 0xfd, 0xa9, 0xdb, 0x1a,
  0xf1, 0x01, 0xa8, 0x3f, 0x35, 0x88, 0xf9, 0x03, 0xa2, 0x73, 0xaa, 0x2c,
  0xcf, 0x41, 0x6a, 0xff, 0xed, 0xdc, 0x46, 0xf9, 0x10, 0x8e, 0x71, 0xed,
  0x28, 0xf1, 0xd9, 0xfd, 0xe7, 0x79, 0x1a, 0xb4, 0x73, 0xea, 0xae, 0x66,
  0x25, 0x7d, 0xe9, 0xbb, 0x35, 0x7e, 0x5b, 0xf6, 0x37, 0x7c, 0x5f, 0xfc,
  0x21, 0x7e, 0xaa, 0x02, 0xda, 0x73, 0x63, 0xea, 0xc5, 0x49, 0x6b, 0xde,
  0xaf, 0xa6, 0xe6, 0x47, 0xab, 0x1b, 0x8e, 0xa3, 0xa3, 0x9e, 0x6f, 0xe8,
  0x90, 0x8d, 0xc5, 0x5a, 0xac, 0x0b, 0xb2, 0x29, 0x92, 0xb7, 0x46, 0xe5,
  0x38, 0xd9, 0x8d, 0xed, 0x6f, 0xb1, 0x08, 0x72, 0x13, 0xe9, 0x54, 0x2b,
  0x91, 0xb0, 0x22, 0x52, 0xe1, 0x81, 0xf6, 0xfa, 0xe1, 0xed, 0x5c, 0x37,
  0xa8, 0xbb, 0xff, 0x0b, 0xdc, 0x3f, 0x6e, 0x09, 0x6b, 0xda, 0x72, 0xf6,
  0x84, 0x47, 0x84, 0x1e, 0x1e, 0x15, 0x64, 0x4f, 0xc7, 0x7c, 0x2f, 0xcd,
  0xc7, 0xaa, 0xdc, 0x9f, 0x9e, 0x11, 0xd4, 0xb7, 0x1e, 0xbf, 0xcc, 0xfb,
  0x40, 0x63, 0xf1, 0xee, 0xfc, 0x86, 0x10, 0x72, 0x0d, 0x3a, 0xc3, 0xb1,
  0x78, 0x8b, 0x45, 0xc3, 0x8c, 0xe8, 0x0b, 0x67, 0xe4, 0x99, 0x8e, 0x42,
  0xd7, 0x06, 0x75, 0xe3, 0x07, 0xb8, 0x7f, 0x22, 0xdf, 0xde, 0x4b, 0x78,
  0x9a, 0xdb, 0xc8, 0x15, 0xc7, 0x7b, 0xb4, 0x4d, 0xfe, 0x58, 0x6d, 0xaa,
  0x3b, 0xa0, 0x4b, 0x41, 0x95, 0xe2, 0x65, 0xdb, 0x47, 0x66, 0x28, 0x37,
  0xb6, 0x49, 0x35, 0x32, 0x2b, 0xdc, 0xc2, 0xac, 0x93, 0x27, 0x3e, 0x56,
  0x99, 0xc9, 0x9f, 0x9a, 0x75, 0x72, 0x4b, 0xb3, 0xd5, 0x02, 0x6c, 0xd8,
  0x36, 0x6a, 0xe4, 0x89, 0x27, 0x85, 0x3f, 0x87, 0x73, 0x36, 0x97, 0x17,
  0xf9, 0xb9, 0x59, 0x91, 0xa7, 0x71, 0x93, 0x55, 0x0a, 0xc5, 0xd3, 0x82,
  0x72, 0xef, 0x9d, 0x7a, 0x52, 0xea, 0xe6, 0x0b, 0x57, 0x39, 0xd9, 0xf4,
  0x0a, 0x67, 0xb8, 0x8b, 0xfc, 0xe7, 0x90, 0x7f, 0xf2, 0xc3, 0x8e, 0xb1,
  0x8a, 0x8b, 0x9c, 0xd1, 0x9c, 0x8b, 0x38, 0x17, 0x40, 0xcd, 0xf0, 0x0d,
  0xf8, 0x88, 0xf5, 0xe6, 0x5e, 0x43, 0xcd, 0xf4, 0xb4, 0xec, 0x90, 0x72,
  0x9c, 0x17, 0xe4, 0x8b, 0xcc, 0x67, 0x11, 0x39, 0xcb, 0xe7, 0x65, 0x2e,
  0x88, 0xcf, 0x16, 0x5f, 0xe1, 0xe0, 0x65, 0x4e, 0xb2, 0x54, 0x13, 0xa7,
  0x21, 0x3f, 0x9f, 0xaf, 0x66, 0x30, 0x97, 0x43, 0x0d, 0x64, 0x0f, 0xcf,
  0x8a, 0x1c, 0x7c, 0xb3, 0x69, 0x2e, 0x50, 0x99, 0x3f, 0x3f, 0x58, 0xcd,
  0x1d, 0x3e, 0x24, 0xec, 0x70, 0x4c, 0x64, 0x49, 0x7f, 0xf2, 0xb6, 0x46,
  0xb2, 0x01, 0x68, 0x7a, 0x7c, 0x4c, 0x74, 0x61, 0xad, 0x2c, 0xea, 0x29,
  0x8d, 0x6b, 0xa5, 0x4f, 0xeb, 0x62, 0xce, 0x46, 0x7e, 0x32, 0xc7, 0xc7,
  0xc4, 0x27, 0x7a, 0xd7, 0x6f, 0x11, 0xef, 0x16, 0xdb, 0x75, 0x62, 0x23,
  0x2f, 0x99, 0xe9, 0xb2, 0x90, 0xfe, 0x22, 0xce, 0x99, 0x13, 0xd0, 0x43,
  0xdf, 0x1d, 0x7f, 0x4e, 0xee, 0xc1, 0x0d, 0x9f, 0xc1, 0x7e, 0x7b, 0x5a,
  0xe1, 0x08, 0xae, 0x55, 0x79, 0x9c, 0x75, 0xdb, 0x12, 0x21, 0xf8, 0xc2,
  0x13, 0x2a, 0xa3, 0x6b, 0x12, 0x1b, 0x46, 0xed, 0x16, 0x2d, 0x27, 0x96,
  0x1f, 0x14, 0x02, 0x7b, 0x72, 0x51, 0x37, 0xea, 0x30, 0x68, 0xe8, 0x3b,
  0x14, 0x1f, 0x03, 0x37, 0x00, 0xca, 0x8f, 0xe9, 0xb6, 0xa9, 0xe5, 0x83,
  0x22, 0x4f, 0x0a, 0xf4, 0xfc, 0xc7, 0x07, 0x45, 0x66, 0x7c, 0xd0, 0xa1,
  0xb3, 0x66, 0x7b, 0x9b, 0x39, 0x4b, 0x94, 0x67, 0xc2, 0x91, 0x31, 0xe4,
  0x6c, 0xcc, 0xa1, 0x3d, 0xd9, 0xc9, 0xca, 0x4c, 0x66, 0x72, 0xcc, 0x49,
  0x2f, 0x8d, 0x55, 0xbb, 0x28, 0xde, 0x1e, 0x72, 0x76, 0xf0, 0x90, 0x08,
  0xc7, 0x87, 0x85, 0x3b, 0x8e, 0xeb, 0x16, 0xf6, 0x9b, 0xa1, 0xf1, 0x04,
  0xab, 0x74, 0x8d, 0x94, 0x85, 0x37, 0x79, 0x48, 0xea, 0x65, 0x0a, 0xe4,
  0x3f, 0xc6, 0x93, 0x18, 0x07, 0x6f, 0x86, 0xcf, 0xcb, 0xfd, 0xd8, 0xe3,
  0xcf, 0x70, 0x9c, 0x2f, 0x91, 0x18, 0x81, 0x3e, 0x78, 0xaf, 0xb0, 0xcc,
  0xe9, 0xec, 0xd1, 0x9e, 0x64, 0x9e, 0x90, 0xdb, 0x34, 0x72, 0x4b, 0x3e,
  0x90, 0x5f, 0xe1, 0x08, 0x72, 0x35, 0x31, 0x21, 0xcf, 0x17, 0xf1, 0x99,
  0x91, 0xf3, 0xa4, 0xaf, 0x53, 0x8c, 0xe8, 0x7c, 0x66, 0x28, 0x27, 0x65,
  0x95, 0x65, 0x26, 0x0f, 0x89, 0x2c, 0x72, 0x42, 0x71, 0x97, 0xeb, 0xa3,
  0x16, 0xe4, 0xb5, 0x04, 0xd4, 0x49, 0xd3, 0x7e, 0xf2, 0x32, 0xae, 0xe9,
  0xf1, 0xbb, 0x1a, 0xad, 0x4b, 0xb5, 0x42, 0x63, 0x5b, 0x75, 0xb0, 0x95,
  0x7f, 0xca, 0x3b, 0xc9, 0x53, 0x1e, 0xb7, 0xf2, 0x9d, 0x86, 0x1c, 0xe5,
  0x9a, 0xc6, 0x28, 0xa7, 0x74, 0xee, 0x28, 0x9f, 0x74, 0xbe, 0x28, 0x7f,
  0x74, 0x56, 0x28, 0x77, 0xe1, 0x7c, 0x50, 0xcd, 0xe0, 0xfa, 0x12, 0x4c,
  0x0f, 0x0b, 0x26, 0x9e, 0x6e, 0xda, 0x85, 0x40, 0x04, 0xc7, 0xf3, 0x22,
  0x38, 0x51, 0x12, 0xf6, 0xfe, 0xbc, 0xd3, 0x96, 0x5f, 0xde, 0x94, 0x5f,
  0xe0, 0x36, 0xf6, 0xdc, 0x75, 0x50, 0x65, 0x3c, 0x28, 0xc9, 0x58, 0x04,
  0x85, 0x80, 0x47, 0x02, 0x4b, 0x44, 0x62, 0x83, 0x8e, 0x0e, 0x4a, 0xfe,
  0x47, 0xe2, 0x7b, 0x79, 0x84, 0xbd, 0xd2, 0xf2, 0x72, 0xfd, 0x5c, 0x57,
  0x9e, 0xfa, 0x4d, 0x44, 0xa1, 0x6f, 0xbb, 0x97, 0x25, 0x1f, 0x65, 0xab,
  0x92, 0xb2, 0xd8, 0x62, 0x33, 0x12, 0xb3, 0x1e, 0x63, 0x6c, 0xfd, 0x58,
  0x34, 0xe6, 0x48, 0xca, 0xe2, 0x5d, 0x4d, 0xe6, 0xac, 0x34, 0x95, 0x78,
  0xb6, 0x19, 0x9d, 0x9f, 0xa8, 0x2a, 0xb1, 0xa5, 0xa6, 0xe2, 0x7c, 0xba,
  0xa9, 0x88, 0xcf, 0x34, 0xa3, 0xec, 0x92, 0xd4, 0xdb, 0x50, 0xfd, 0x2a,
  0xc9, 0x56, 0x47, 0x3f, 0x78, 0x69, 0xb9, 0xb7, 0x76, 0x0b, 0x31, 0x6e,
  0x89, 0x81, 0xb3, 0xd7, 0x71, 0x5b, 0x6e, 0x75, 0x78, 0xea, 0x49, 0x05,
  0x3c, 0x1b, 0x38, 0x74, 0x9d, 0xf2, 0xc6, 0x72, 0x47, 0x31, 0x0e, 0xea,
  0x3d, 0x76, 0xdd, 0x84, 0x3f, 0x4a, 0xa8, 0x72, 0x01, 0x7f, 0x4c, 0xf8,
  0x63, 0xc2, 0x1f, 0xe2, 0xe3, 0xf0, 0x87, 0xa8, 0x0d, 0xfb, 0x44, 0x65,
  0x7d, 0x5a, 0xac, 0xca, 0xe6, 0xe8, 0xbe, 0x3a, 0xa3, 0x98, 0x59, 0x57,
  0xfa, 0x16, 0xcf, 0xfa, 0x47, 0x59, 0x3a, 0x25, 0xd8, 0xdc, 0xab, 0xef,
  0x99, 0xe6, 0xac, 0xf2, 0xa9, 0x5e, 0x76, 0x4b, 0xca, 0x76, 0x74, 0x88,
  0x6f, 0xdb, 0xb5, 0xc6, 0xb3, 0xb8, 0x67, 0xd0, 0x5a, 0xfa, 0xf4, 0x19,
  0x4e, 0x3e, 0x44, 0x8e, 0x9f, 0x86, 0xaf, 0x56, 0x95, 0xfd, 0x71, 0xe3,
  0x30, 0xdd, 0x4f, 0x28, 0x8e, 0xd6, 0x31, 0x15, 0x77, 0x29, 0x5c, 0xa3,
  0x4e, 0x2c, 0xb4, 0xe3, 0xd9, 0xa9, 0xf2, 0xd4, 0x24, 0x7d, 0xce, 0x86,
  0x8f, 0xef, 0xde, 0xd4, 0x88, 0x2a, 0xcc, 0xaa, 0x5f, 0x65, 0xbc, 0xc4,
  0x14, 0xdc, 0xf3, 0xe0, 0x27, 0x63, 0x6f, 0x81, 0x26, 0x39, 0x4b, 0xfa,
  0xd5, 0x0d, 0xce, 0x0f, 0xd0, 0x87, 0x71, 0x13, 0x72, 0xe6, 0x94, 0xce,
  0xcd, 0x07, 0xbe, 0x09, 0x5e, 0xf2, 0xfd, 0xd3, 0x75, 0xdf, 0x2f, 0x59,
  0x11, 0x5e, 0x0e, 0x27, 0x37, 0xaf, 0xe3, 0xef, 0xde, 0xcc, 0x69, 0xa0,
  0xaa, 0x2f, 0xea, 0x57, 0x75, 0xbf, 0xa4, 0xc1, 0xae, 0x06, 0x59, 0x0d,
  0x76, 0x35, 0xd8, 0xd5, 0x92, 0x7a, 0x15, 0xd7, 0x76, 0x69, 0xf7, 0xe7,
  0xd8, 0xc7, 0x25, 0x5d, 0x3f, 0x5d, 0xd7, 0xf5, 0x12, 0xc6, 0xcb, 0x97,
  0x75, 0x7d, 0x42, 0x8d, 0xf2, 0x32, 0xe9, 0xa7, 0x27, 0xdd, 0xfa, 0x15,
  0xdd, 0x78, 0xb8, 0xbe, 0x61, 0x1c, 0x60, 0xb8, 0xb6, 0x5e, 0x84, 0x2e,
  0xb0, 0xa4, 0x99, 0x7a, 0xf9, 0x8a, 0xd4, 0x35, 0xca, 0xfc, 0x81, 0x6f,
  0x82, 0x8c, 0x7d, 0x6d, 0x4d, 0xfe, 0x8a, 0x50, 0xb0, 0x5d, 0xc6, 0x46,
  0xa9, 0x21, 0xc8, 0xc0, 0xa6, 0xa2, 0x20, 0x3c, 0xdb, 0xc7, 0xa0, 0xa0,
  0x2a, 0x78, 0x82, 0xda, 0x3e, 0x06, 0x35, 0x4d, 0xc1, 0x53, 0xd7, 0xf6,
  0x31, 0xa8, 0x71, 0x45, 0xfe, 0x09, 0xb8, 0x3f, 0x06, 0xb5, 0x88, 0x02,
  0xa7, 0xb6, 0x8f, 0x01, 0x75, 0x45, 0x7e, 0x6d, 0xbd, 0x3f, 0x86, 0x75,
  0xa3, 0x8a, 0xfc, 0x80, 0xbe, 0x43, 0xce, 0x50, 0x6d, 0xfa, 0x9e, 0xfb,
  0xef, 0xdf, 0x1c, 0x24, 0x67, 0xaa, 0xb1, 0x1d, 0x63, 0x12, 0x8c, 0x9d,
  0xfb, 0xa0, 0x3c, 0x28, 0xc6, 0xce, 0x7d, 0x50, 0x6c, 0x55, 0x63, 0xe7,
  0x3e, 0xe8, 0xe3, 0x30, 0x37, 0x76, 0xfa, 0x8c, 0x43, 0xc2, 0x22, 0xc6,
  0x4e, 0x9f, 0x61, 0x8e, 0x21, 0xd3, 0x68, 0xb7, 0x8d, 0x61, 0x30, 0xca,
  0x77, 0xfa, 0x8c, 0x25, 0x98, 0x81, 0x2a, 0x06, 0xec, 0xf4, 0x0f, 0xf0,
  0xe7, 0xcd, 0x7f, 0x39, 0xab, 0x40, 0xb2, 0xa4, 0xb3, 0x2c, 0x9b, 0x00,
  0x55, 0xb0, 0xa0, 0xf4, 0x0a, 0x50, 0x06, 0x12, 0x2f, 0x3d, 0x07, 0xd0,
  0xcf, 0x14, 0x05, 0x56, 0xc9, 0x2e, 0x01, 0xfd, 0x58, 0x21, 0x9e, 0xfc,
  0x21, 0x38, 0x09, 0x54, 0x34, 0x94, 0xee, 0x26, 0xac, 0x00, 0x89, 0xdf,
  0x9a, 0xbf, 0x86, 0x0e, 0xc9, 0x6f, 0x01, 0xc7, 0xaa, 0x04, 0x7f, 0x7b,
  0xf6, 0xd6, 0xdf, 0xff, 0xd2, 0x7d, 0xf1, 0xce, 0x9b, 0x9f, 0x7f, 0xc7,
  0x7c, 0xe5, 0x1f, 0xe2, 0xed, 0x7f, 0x01, 0x65, 0x25, 0xf7, 0xd0, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x03, 0x00, 0x03, 0x00,
  0x08, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x04, 0x02, 0x08, 0x02, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x05, 0x04, 0x08, 0x02, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x06, 0x06,
  0x08, 0x02, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x07, 0x08, 0x08, 0x02, 0x00, 0x00,
  0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x08, 0x0a, 0x08, 0x02, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x01, 0x09, 0x0c,
  0x04, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x03, 0x01, 0x0a, 0x0e, 0x04, 0x02, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x02, 0x0b, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x02, 0x0d, 0x13,
  0x00, 0x04, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x01, 0x00,
  0x78, 0x01, 0x4d, 0x8c, 0xbb, 0x09, 0x42, 0x51, 0x10, 0x05, 0xd7, 0x1f,
  0x88, 0x15, 0x18, 0x68, 0x66, 0x11, 0x86, 0x16, 0x61, 0xf8, 0x8a, 0x30,
  0x34, 0xb4, 0x04, 0x43, 0x8b, 0x30, 0xb4, 0x08, 0x43, 0x8b, 0x30, 0xb4,
  0x07, 0x9d, 0xc1, 0x3d, 0xf0, 0x06, 0xce, 0xe7, 0xde, 0x03, 0x3b, 0xa9,
  0xaa, 0x15, 0x5a, 0x23, 0xb9, 0xf0, 0xb1, 0xb5, 0x34, 0x57, 0xad, 0xb9,
  0x6b, 0xcd, 0x53, 0x6b, 0xde, 0x5a, 0xf0, 0x60, 0xb3, 0x19, 0xf5, 0xfd,
  0xa8, 0x1f, 0xe9, 0x53, 0x0b, 0x9c, 0xba, 0x13, 0x75, 0xc6, 0xcc, 0x1b,
  0x12, 0x7b, 0xf8, 0x82, 0xef, 0x07, 0x12, 0xbb, 0x92, 0x6c, 0x2f, 0x24,
  0xf6, 0xdc, 0xcf, 0xf6, 0x41, 0x62, 0x9f, 0x21, 0xc9, 0xb6, 0xd4, 0xc0,
  0x98, 0x23, 0xc9, 0xb6, 0xd3, 0xc0, 0x58, 0x20, 0xc9, 0x76, 0xc0, 0xbc,
  0x65, 0x0f, 0xd9, 0x06, 0x2c, 0x9b, 0x12, 0x37, 0x53, 0xfe, 0x7f, 0x55,
  0x3f, 0x81, 0x42, 0x29, 0x20, 0x00, 0x00, 0x00, 0x78, 0x62, 0x6f, 0x70,
  0x01, 0x00, 0x00, 0x00, 0x7e, 0x02, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x30, 0x00, 0x00, 0x00
};
