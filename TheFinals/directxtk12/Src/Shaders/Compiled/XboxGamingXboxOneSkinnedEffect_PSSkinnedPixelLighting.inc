#if 0
;
; Input signature:
;
; Name                 Index   Mask Register SysValue  Format   Used
; -------------------- ----- ------ -------- -------- ------- ------
; TEXCOORD                 0   xy          0     NONE   float   xy  
; TEXCOORD                 1   xyzw        1     NONE   float   xyzw
; TEXCOORD                 2   xyz         2     NONE   float   xyz 
; COLOR                    0   xyzw        3     NONE   float   xyzw
;
;
; Output signature:
;
; Name                 Index   Mask Register SysValue  Format   Used
; -------------------- ----- ------ -------- -------- ------- ------
; SV_Target                0   xyzw        0   TARGET   float   xyzw
;
; shader debug name: C:\Users\marcu\Downloads\DirectXTK12-main\DirectXTK12-main\Src/Shaders/Compiled\XboxGamingXboxOneSkinnedEffect_PSSkinnedPixelLighting.pdb
; shader hash: 7be41d940bc1cfb03f51718dfe812766
;
; Pipeline Runtime Information: 
;
;PSVRuntimeInfo:
; Pixel Shader
; DepthOutput=0
; SampleFrequency=0
; MinimumExpectedWaveLaneCount: 0
; MaximumExpectedWaveLaneCount: 4294967295
; UsesViewID: false
; SigInputElements: 4
; SigOutputElements: 1
; SigPatchConstOrPrimElements: 0
; SigInputVectors: 4
; SigOutputVectors[0]: 1
; SigOutputVectors[1]: 0
; SigOutputVectors[2]: 0
; SigOutputVectors[3]: 0
; EntryFunctionName: PSSkinnedPixelLighting
;
;
; Input signature:
;
; Name                 Index             InterpMode DynIdx
; -------------------- ----- ---------------------- ------
; TEXCOORD                 0                 linear       
; TEXCOORD                 1                 linear       
; TEXCOORD                 2                 linear       
; COLOR                    0                 linear       
;
; Output signature:
;
; Name                 Index             InterpMode DynIdx
; -------------------- ----- ---------------------- ------
; SV_Target                0                              
;
; Buffer Definitions:
;
; cbuffer 
; {
;
;   [3872 x i8] (type annotation not present)
;
; }
;
;
; Resource Bindings:
;
; Name                                 Type  Format         Dim      ID      HLSL Bind  Count
; ------------------------------ ---------- ------- ----------- ------- -------------- ------
;                                   cbuffer      NA          NA     CB0            cb0     1
;                                   sampler      NA          NA      S0             s0     1
;                                   texture     f32          2d      T0             t0     1
;
;
; ViewId state:
;
; Number of inputs: 16, outputs: 4
; Outputs dependent on ViewId: {  }
; Inputs contributing to computation of Outputs:
;   output 0 depends on inputs: { 0, 1, 4, 5, 6, 7, 8, 9, 10, 12, 15 }
;   output 1 depends on inputs: { 0, 1, 4, 5, 6, 7, 8, 9, 10, 13, 15 }
;   output 2 depends on inputs: { 0, 1, 4, 5, 6, 7, 8, 9, 10, 14, 15 }
;   output 3 depends on inputs: { 0, 1, 15 }
;
target datalayout = "e-m:e-p:32:32-i1:32-i8:32-i16:32-i32:32-i64:64-f16:32-f32:32-f64:64-n8:16:32:64"
target triple = "dxil-ms-xb1"

%dx.types.Handle = type { i8* }
%dx.types.ResRet.f32 = type { float, float, float, float, i32 }
%dx.types.CBufRet.f32 = type { float, float, float, float }
%"class.Texture2D<vector<float, 4> >" = type { <4 x float>, %"class.Texture2D<vector<float, 4> >::mips_type" }
%"class.Texture2D<vector<float, 4> >::mips_type" = type { i32 }
%hostlayout.Parameters = type { <4 x float>, <3 x float>, <3 x float>, float, [3 x <3 x float>], [3 x <3 x float>], [3 x <3 x float>], <3 x float>, <3 x float>, <4 x float>, [4 x <4 x float>], [3 x <3 x float>], [4 x <4 x float>], [72 x [3 x <4 x float>]] }
%struct.SamplerState = type { i32 }

define void @PSSkinnedPixelLighting() {
  %1 = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 0, i32 0, i32 0, i1 false)  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %2 = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 3, i32 0, i32 0, i1 false)  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %3 = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 2, i32 0, i32 0, i1 false)  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %4 = call float @dx.op.loadInput.f32(i32 4, i32 3, i32 0, i8 0, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %5 = call float @dx.op.loadInput.f32(i32 4, i32 3, i32 0, i8 1, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %6 = call float @dx.op.loadInput.f32(i32 4, i32 3, i32 0, i8 2, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %7 = call float @dx.op.loadInput.f32(i32 4, i32 3, i32 0, i8 3, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %8 = call float @dx.op.loadInput.f32(i32 4, i32 2, i32 0, i8 0, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %9 = call float @dx.op.loadInput.f32(i32 4, i32 2, i32 0, i8 1, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %10 = call float @dx.op.loadInput.f32(i32 4, i32 2, i32 0, i8 2, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %11 = call float @dx.op.loadInput.f32(i32 4, i32 1, i32 0, i8 0, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %12 = call float @dx.op.loadInput.f32(i32 4, i32 1, i32 0, i8 1, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %13 = call float @dx.op.loadInput.f32(i32 4, i32 1, i32 0, i8 2, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %14 = call float @dx.op.loadInput.f32(i32 4, i32 1, i32 0, i8 3, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %15 = call float @dx.op.loadInput.f32(i32 4, i32 0, i32 0, i8 0, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %16 = call float @dx.op.loadInput.f32(i32 4, i32 0, i32 0, i8 1, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %17 = call %dx.types.ResRet.f32 @dx.op.sample.f32(i32 60, %dx.types.Handle %1, %dx.types.Handle %2, float %15, float %16, float undef, float undef, i32 0, i32 0, i32 undef, float undef)  ; Sample(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,clamp)
  %18 = extractvalue %dx.types.ResRet.f32 %17, 0
  %19 = extractvalue %dx.types.ResRet.f32 %17, 1
  %20 = extractvalue %dx.types.ResRet.f32 %17, 2
  %21 = extractvalue %dx.types.ResRet.f32 %17, 3
  %22 = fmul fast float %18, %4
  %23 = fmul fast float %19, %5
  %24 = fmul fast float %20, %6
  %25 = fmul fast float %21, %7
  %26 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %3, i32 12)  ; CBufferLoadLegacy(handle,regIndex)
  %27 = extractvalue %dx.types.CBufRet.f32 %26, 0
  %28 = extractvalue %dx.types.CBufRet.f32 %26, 1
  %29 = extractvalue %dx.types.CBufRet.f32 %26, 2
  %30 = fsub fast float %27, %11
  %31 = fsub fast float %28, %12
  %32 = fsub fast float %29, %13
  %33 = call float @dx.op.dot3.f32(i32 55, float %30, float %31, float %32, float %30, float %31, float %32)  ; Dot3(ax,ay,az,bx,by,bz)
  %34 = call float @dx.op.unary.f32(i32 25, float %33)  ; Rsqrt(value)
  %35 = fmul fast float %30, %34
  %36 = fmul fast float %31, %34
  %37 = fmul fast float %32, %34
  %38 = call float @dx.op.dot3.f32(i32 55, float %8, float %9, float %10, float %8, float %9, float %10)  ; Dot3(ax,ay,az,bx,by,bz)
  %39 = call float @dx.op.unary.f32(i32 25, float %38)  ; Rsqrt(value)
  %40 = fmul fast float %39, %8
  %41 = fmul fast float %39, %9
  %42 = fmul fast float %39, %10
  %43 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %3, i32 3)  ; CBufferLoadLegacy(handle,regIndex)
  %44 = extractvalue %dx.types.CBufRet.f32 %43, 0
  %45 = extractvalue %dx.types.CBufRet.f32 %43, 1
  %46 = extractvalue %dx.types.CBufRet.f32 %43, 2
  %47 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %3, i32 6)  ; CBufferLoadLegacy(handle,regIndex)
  %48 = extractvalue %dx.types.CBufRet.f32 %47, 0
  %49 = extractvalue %dx.types.CBufRet.f32 %47, 1
  %50 = extractvalue %dx.types.CBufRet.f32 %47, 2
  %51 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %3, i32 9)  ; CBufferLoadLegacy(handle,regIndex)
  %52 = extractvalue %dx.types.CBufRet.f32 %51, 0
  %53 = extractvalue %dx.types.CBufRet.f32 %51, 1
  %54 = extractvalue %dx.types.CBufRet.f32 %51, 2
  %55 = fsub fast float %35, %44
  %56 = fsub fast float %36, %45
  %57 = fsub fast float %37, %46
  %58 = call float @dx.op.dot3.f32(i32 55, float %55, float %56, float %57, float %55, float %56, float %57)  ; Dot3(ax,ay,az,bx,by,bz)
  %59 = call float @dx.op.unary.f32(i32 25, float %58)  ; Rsqrt(value)
  %60 = fmul fast float %59, %56
  %61 = fmul fast float %59, %57
  %62 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %3, i32 4)  ; CBufferLoadLegacy(handle,regIndex)
  %63 = extractvalue %dx.types.CBufRet.f32 %62, 0
  %64 = extractvalue %dx.types.CBufRet.f32 %62, 1
  %65 = extractvalue %dx.types.CBufRet.f32 %62, 2
  %66 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %3, i32 7)  ; CBufferLoadLegacy(handle,regIndex)
  %67 = extractvalue %dx.types.CBufRet.f32 %66, 0
  %68 = extractvalue %dx.types.CBufRet.f32 %66, 1
  %69 = extractvalue %dx.types.CBufRet.f32 %66, 2
  %70 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %3, i32 10)  ; CBufferLoadLegacy(handle,regIndex)
  %71 = extractvalue %dx.types.CBufRet.f32 %70, 0
  %72 = extractvalue %dx.types.CBufRet.f32 %70, 1
  %73 = extractvalue %dx.types.CBufRet.f32 %70, 2
  %74 = fsub fast float %35, %63
  %75 = fsub fast float %36, %64
  %76 = fsub fast float %37, %65
  %77 = call float @dx.op.dot3.f32(i32 55, float %74, float %75, float %76, float %74, float %75, float %76)  ; Dot3(ax,ay,az,bx,by,bz)
  %78 = call float @dx.op.unary.f32(i32 25, float %77)  ; Rsqrt(value)
  %79 = fmul fast float %78, %75
  %80 = fmul fast float %78, %76
  %81 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %3, i32 5)  ; CBufferLoadLegacy(handle,regIndex)
  %82 = extractvalue %dx.types.CBufRet.f32 %81, 0
  %83 = extractvalue %dx.types.CBufRet.f32 %81, 1
  %84 = extractvalue %dx.types.CBufRet.f32 %81, 2
  %85 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %3, i32 8)  ; CBufferLoadLegacy(handle,regIndex)
  %86 = extractvalue %dx.types.CBufRet.f32 %85, 0
  %87 = extractvalue %dx.types.CBufRet.f32 %85, 1
  %88 = extractvalue %dx.types.CBufRet.f32 %85, 2
  %89 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %3, i32 11)  ; CBufferLoadLegacy(handle,regIndex)
  %90 = extractvalue %dx.types.CBufRet.f32 %89, 0
  %91 = extractvalue %dx.types.CBufRet.f32 %89, 1
  %92 = extractvalue %dx.types.CBufRet.f32 %89, 2
  %93 = fsub fast float %35, %82
  %94 = fsub fast float %36, %83
  %95 = fsub fast float %37, %84
  %96 = call float @dx.op.dot3.f32(i32 55, float %93, float %94, float %95, float %93, float %94, float %95)  ; Dot3(ax,ay,az,bx,by,bz)
  %97 = call float @dx.op.unary.f32(i32 25, float %96)  ; Rsqrt(value)
  %98 = fmul fast float %97, %94
  %99 = fmul fast float %97, %95
  %100 = fsub fast float -0.000000e+00, %45
  %101 = fsub fast float -0.000000e+00, %46
  %102 = fsub fast float -0.000000e+00, %64
  %103 = fsub fast float -0.000000e+00, %65
  %104 = fsub fast float -0.000000e+00, %83
  %105 = fsub fast float -0.000000e+00, %84
  %106 = fmul fast float %40, %44
  %107 = fsub fast float -0.000000e+00, %106
  %108 = call float @dx.op.tertiary.f32(i32 46, float %100, float %41, float %107)  ; FMad(a,b,c)
  %109 = call float @dx.op.tertiary.f32(i32 46, float %101, float %42, float %108)  ; FMad(a,b,c)
  %110 = fmul fast float %40, %63
  %111 = fsub fast float -0.000000e+00, %110
  %112 = call float @dx.op.tertiary.f32(i32 46, float %102, float %41, float %111)  ; FMad(a,b,c)
  %113 = call float @dx.op.tertiary.f32(i32 46, float %103, float %42, float %112)  ; FMad(a,b,c)
  %114 = fmul fast float %40, %82
  %115 = fsub fast float -0.000000e+00, %114
  %116 = call float @dx.op.tertiary.f32(i32 46, float %104, float %41, float %115)  ; FMad(a,b,c)
  %117 = call float @dx.op.tertiary.f32(i32 46, float %105, float %42, float %116)  ; FMad(a,b,c)
  %118 = fmul fast float %55, %40
  %119 = fmul fast float %118, %59
  %120 = call float @dx.op.tertiary.f32(i32 46, float %60, float %41, float %119)  ; FMad(a,b,c)
  %121 = call float @dx.op.tertiary.f32(i32 46, float %61, float %42, float %120)  ; FMad(a,b,c)
  %122 = fmul fast float %74, %40
  %123 = fmul fast float %122, %78
  %124 = call float @dx.op.tertiary.f32(i32 46, float %79, float %41, float %123)  ; FMad(a,b,c)
  %125 = call float @dx.op.tertiary.f32(i32 46, float %80, float %42, float %124)  ; FMad(a,b,c)
  %126 = fmul fast float %93, %40
  %127 = fmul fast float %126, %97
  %128 = call float @dx.op.tertiary.f32(i32 46, float %98, float %41, float %127)  ; FMad(a,b,c)
  %129 = call float @dx.op.tertiary.f32(i32 46, float %99, float %42, float %128)  ; FMad(a,b,c)
  %130 = fcmp fast olt float %109, 0.000000e+00
  %131 = fcmp fast olt float %113, 0.000000e+00
  %132 = fcmp fast olt float %117, 0.000000e+00
  %133 = select i1 %130, float 0.000000e+00, float 1.000000e+00
  %134 = select i1 %131, float 0.000000e+00, float 1.000000e+00
  %135 = select i1 %132, float 0.000000e+00, float 1.000000e+00
  %136 = fmul fast float %133, %109
  %137 = fmul fast float %134, %113
  %138 = fmul fast float %135, %117
  %139 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %3, i32 2)  ; CBufferLoadLegacy(handle,regIndex)
  %140 = extractvalue %dx.types.CBufRet.f32 %139, 3
  %141 = call float @dx.op.binary.f32(i32 35, float %121, float 0.000000e+00)  ; FMax(a,b)
  %142 = call float @dx.op.binary.f32(i32 35, float %125, float 0.000000e+00)  ; FMax(a,b)
  %143 = call float @dx.op.binary.f32(i32 35, float %129, float 0.000000e+00)  ; FMax(a,b)
  %144 = fmul fast float %141, %133
  %145 = fmul fast float %142, %134
  %146 = fmul fast float %143, %135
  %147 = call float @dx.op.unary.f32(i32 23, float %144)  ; Log(value)
  %148 = call float @dx.op.unary.f32(i32 23, float %145)  ; Log(value)
  %149 = call float @dx.op.unary.f32(i32 23, float %146)  ; Log(value)
  %150 = fmul fast float %147, %140
  %151 = fmul fast float %148, %140
  %152 = fmul fast float %149, %140
  %153 = call float @dx.op.unary.f32(i32 21, float %150)  ; Exp(value)
  %154 = call float @dx.op.unary.f32(i32 21, float %151)  ; Exp(value)
  %155 = call float @dx.op.unary.f32(i32 21, float %152)  ; Exp(value)
  %156 = fmul fast float %153, %109
  %157 = fmul fast float %154, %113
  %158 = fmul fast float %155, %117
  %159 = fmul fast float %136, %48
  %160 = call float @dx.op.tertiary.f32(i32 46, float %137, float %67, float %159)  ; FMad(a,b,c)
  %161 = call float @dx.op.tertiary.f32(i32 46, float %138, float %86, float %160)  ; FMad(a,b,c)
  %162 = fmul fast float %136, %49
  %163 = call float @dx.op.tertiary.f32(i32 46, float %137, float %68, float %162)  ; FMad(a,b,c)
  %164 = call float @dx.op.tertiary.f32(i32 46, float %138, float %87, float %163)  ; FMad(a,b,c)
  %165 = fmul fast float %136, %50
  %166 = call float @dx.op.tertiary.f32(i32 46, float %137, float %69, float %165)  ; FMad(a,b,c)
  %167 = call float @dx.op.tertiary.f32(i32 46, float %138, float %88, float %166)  ; FMad(a,b,c)
  %168 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %3, i32 0)  ; CBufferLoadLegacy(handle,regIndex)
  %169 = extractvalue %dx.types.CBufRet.f32 %168, 0
  %170 = extractvalue %dx.types.CBufRet.f32 %168, 1
  %171 = extractvalue %dx.types.CBufRet.f32 %168, 2
  %172 = fmul fast float %169, %161
  %173 = fmul fast float %170, %164
  %174 = fmul fast float %171, %167
  %175 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %3, i32 1)  ; CBufferLoadLegacy(handle,regIndex)
  %176 = extractvalue %dx.types.CBufRet.f32 %175, 0
  %177 = extractvalue %dx.types.CBufRet.f32 %175, 1
  %178 = extractvalue %dx.types.CBufRet.f32 %175, 2
  %179 = fadd fast float %172, %176
  %180 = fadd fast float %173, %177
  %181 = fadd fast float %174, %178
  %182 = fmul fast float %156, %52
  %183 = call float @dx.op.tertiary.f32(i32 46, float %157, float %71, float %182)  ; FMad(a,b,c)
  %184 = call float @dx.op.tertiary.f32(i32 46, float %158, float %90, float %183)  ; FMad(a,b,c)
  %185 = fmul fast float %156, %53
  %186 = call float @dx.op.tertiary.f32(i32 46, float %157, float %72, float %185)  ; FMad(a,b,c)
  %187 = call float @dx.op.tertiary.f32(i32 46, float %158, float %91, float %186)  ; FMad(a,b,c)
  %188 = fmul fast float %156, %54
  %189 = call float @dx.op.tertiary.f32(i32 46, float %157, float %73, float %188)  ; FMad(a,b,c)
  %190 = call float @dx.op.tertiary.f32(i32 46, float %158, float %92, float %189)  ; FMad(a,b,c)
  %191 = extractvalue %dx.types.CBufRet.f32 %139, 0
  %192 = extractvalue %dx.types.CBufRet.f32 %139, 1
  %193 = extractvalue %dx.types.CBufRet.f32 %139, 2
  %194 = fmul fast float %22, %179
  %195 = fmul fast float %23, %180
  %196 = fmul fast float %24, %181
  %197 = fmul fast float %184, %25
  %198 = fmul fast float %197, %191
  %199 = fmul fast float %187, %25
  %200 = fmul fast float %199, %192
  %201 = fmul fast float %190, %25
  %202 = fmul fast float %201, %193
  %203 = fadd fast float %198, %194
  %204 = fadd fast float %200, %195
  %205 = fadd fast float %202, %196
  %206 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %3, i32 13)  ; CBufferLoadLegacy(handle,regIndex)
  %207 = extractvalue %dx.types.CBufRet.f32 %206, 0
  %208 = extractvalue %dx.types.CBufRet.f32 %206, 1
  %209 = extractvalue %dx.types.CBufRet.f32 %206, 2
  %210 = fmul fast float %207, %25
  %211 = fmul fast float %208, %25
  %212 = fmul fast float %209, %25
  %213 = fsub fast float %210, %203
  %214 = fsub fast float %211, %204
  %215 = fsub fast float %212, %205
  %216 = fmul fast float %213, %14
  %217 = fmul fast float %214, %14
  %218 = fmul fast float %215, %14
  %219 = fadd fast float %216, %203
  %220 = fadd fast float %217, %204
  %221 = fadd fast float %218, %205
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 0, float %219)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 1, float %220)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 2, float %221)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 3, float %25)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  ret void
}

; Function Attrs: nounwind readnone
declare float @dx.op.loadInput.f32(i32, i32, i32, i8, i32) #0

; Function Attrs: nounwind
declare void @dx.op.storeOutput.f32(i32, i32, i32, i8, float) #1

; Function Attrs: nounwind readonly
declare %dx.types.ResRet.f32 @dx.op.sample.f32(i32, %dx.types.Handle, %dx.types.Handle, float, float, float, float, i32, i32, i32, float) #2

; Function Attrs: nounwind readnone
declare float @dx.op.dot3.f32(i32, float, float, float, float, float, float) #0

; Function Attrs: nounwind readnone
declare float @dx.op.unary.f32(i32, float) #0

; Function Attrs: nounwind readnone
declare float @dx.op.binary.f32(i32, float, float) #0

; Function Attrs: nounwind readonly
declare %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32, %dx.types.Handle, i32) #2

; Function Attrs: nounwind readnone
declare float @dx.op.tertiary.f32(i32, float, float, float) #0

; Function Attrs: nounwind readonly
declare %dx.types.Handle @dx.op.createHandle(i32, i8, i32, i32, i1) #2

attributes #0 = { nounwind readnone }
attributes #1 = { nounwind }
attributes #2 = { nounwind readonly }

!xbox.compiler.options = !{!0}
!llvm.ident = !{!1}
!dx.version = !{!2}
!dx.valver = !{!3}
!dx.shaderModel = !{!4}
!dx.resources = !{!5}
!dx.viewIdState = !{!13}
!dx.entryPoints = !{!14}

!0 = !{!"__XBOX_PER_THREAD_SCRATCH_SIZE_LIMIT_IN_BYTES", !"0"}
!1 = !{!"dxcxbox 2410.2410.11116.10741"}
!2 = !{i32 1, i32 0}
!3 = !{i32 1, i32 8}
!4 = !{!"ps", i32 6, i32 0}
!5 = !{!6, null, !9, !11}
!6 = !{!7}
!7 = !{i32 0, %"class.Texture2D<vector<float, 4> >"* undef, !"", i32 0, i32 0, i32 1, i32 2, i32 0, !8}
!8 = !{i32 0, i32 9}
!9 = !{!10}
!10 = !{i32 0, %hostlayout.Parameters* undef, !"", i32 0, i32 0, i32 1, i32 3872, null}
!11 = !{!12}
!12 = !{i32 0, %struct.SamplerState* undef, !"", i32 0, i32 0, i32 1, i32 0, null}
!13 = !{[18 x i32] [i32 16, i32 4, i32 15, i32 15, i32 0, i32 0, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 0, i32 1, i32 2, i32 4, i32 15]}
!14 = !{void ()* @PSSkinnedPixelLighting, !"PSSkinnedPixelLighting", !15, !5, null}
!15 = !{!16, !27, null}
!16 = !{!17, !20, !23, !26}
!17 = !{i32 0, !"TEXCOORD", i8 9, i8 0, !18, i8 2, i32 1, i8 2, i32 0, i8 0, !19}
!18 = !{i32 0}
!19 = !{i32 3, i32 3}
!20 = !{i32 1, !"TEXCOORD", i8 9, i8 0, !21, i8 2, i32 1, i8 4, i32 1, i8 0, !22}
!21 = !{i32 1}
!22 = !{i32 3, i32 15}
!23 = !{i32 2, !"TEXCOORD", i8 9, i8 0, !24, i8 2, i32 1, i8 3, i32 2, i8 0, !25}
!24 = !{i32 2}
!25 = !{i32 3, i32 7}
!26 = !{i32 3, !"COLOR", i8 9, i8 0, !18, i8 2, i32 1, i8 4, i32 3, i8 0, !22}
!27 = !{!28}
!28 = !{i32 0, !"SV_Target", i8 9, i8 16, !18, i8 0, i32 1, i8 4, i32 0, i8 0, !22}

;
; DUMPING SHADER HARDWARE INSTRUCTIONS 
;
// Shader Type               : (PS)
// Shader Hw Stage           : (PS)

// Shader Instructions:
shader main
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  s_mov_b64     s[16:17], exec
  s_wqm_b64     exec, exec // wrscc
  s_mov_b32     s1, s7
  s_mov_b32     s18, s3
  s_mov_b32     s2, s5
  s_mov_b32     s3, 0
  s_mov_b32     s7, 0
  s_mov_b32     s19, s4
  s_load_dwordx8  s[8:15], s[2:3], 0x00
  s_load_dwordx4  s[4:7], s[6:7], 0x00
  s_mov_b32     m0, s1
  v_interp_p1_f32  v4, v0, attr3.x
  v_interp_p1_f32  v5, v0, attr3.y
  v_interp_p1_f32  v6, v0, attr3.z
  v_interp_p1_f32  v7, v0, attr3.w
  v_interp_p1_f32  v8, v0, attr2.x
  v_interp_p1_f32  v9, v0, attr2.y
  v_interp_p1_f32  v10, v0, attr2.z
  v_interp_p1_f32  v11, v0, attr1.x
  v_interp_p1_f32  v12, v0, attr1.y
  v_interp_p1_f32  v13, v0, attr1.z
  v_interp_p1_f32  v14, v0, attr1.w
  v_interp_p1_f32  v2, v0, attr0.x
  v_interp_p1_f32  v3, v0, attr0.y
  s_or_b32      s53, s19, 0x00100000 // wrscc
  s_mov_b32     s52, s18
  s_mov_b32     s54, -1
  s_mov_b32     s55, 0x00024fac
  v_interp_p2_f32  v4, v1, attr3.x
  v_interp_p2_f32  v5, v1, attr3.y
  v_interp_p2_f32  v6, v1, attr3.z
  v_interp_p2_f32  v7, v1, attr3.w
  v_interp_p2_f32  v8, v1, attr2.x
  v_interp_p2_f32  v9, v1, attr2.y
  v_interp_p2_f32  v10, v1, attr2.z
  v_interp_p2_f32  v11, v1, attr1.x
  v_interp_p2_f32  v12, v1, attr1.y
  v_interp_p2_f32  v13, v1, attr1.z
  v_interp_p2_f32  v14, v1, attr1.w
  v_interp_p2_f32  v2, v1, attr0.x
  v_interp_p2_f32  v3, v1, attr0.y
  s_and_b64     exec, exec, s[16:17] // wrscc
  s_waitcnt     lgkmcnt(0)
  image_sample  v[0:3], v[2:3], s[8:15], s[4:7] dmask:0xf
  s_buffer_load_dwordx16  s[4:19], s[52:55], 0x00
  s_buffer_load_dwordx16  s[36:51], s[52:55], 0x10
  s_buffer_load_dwordx16  s[20:35], s[52:55], 0x20
  s_buffer_load_dwordx8  s[52:59], s[52:55], 0x30
  s_waitcnt     vmcnt(0)
  v_mul_legacy_f32  v1, v1, v5
  s_waitcnt     lgkmcnt(0)
  v_sub_f32     v5, s53, v12
  v_mul_legacy_f32  v3, v3, v7
  v_mul_legacy_f32  v0, v0, v4
  v_sub_f32     v4, s52, v11
  v_mul_legacy_f32  v7, v5, v5
  v_mul_legacy_f32  v11, v9, v9
  v_mul_legacy_f32  v2, v2, v6
  v_sub_f32     v6, s54, v13
  v_mac_legacy_f32  v7, v4, v4
  v_mac_legacy_f32  v7, v6, v6
  v_mac_legacy_f32  v11, v8, v8
  v_rsq_f32     v7, v7
  v_mac_legacy_f32  v11, v10, v10
  v_rsq_f32     v11, v11
  v_mad_legacy_f32  v12, v5, v7, -s17
  v_mul_legacy_f32  v15, v12, v12
  v_mul_legacy_f32  v8, v11, v8
  v_mul_legacy_f32  v9, v11, v9
  v_mul_legacy_f32  v10, v11, v10
  v_mad_legacy_f32  v11, v4, v7, -s16
  v_mad_legacy_f32  v17, v5, v7, -s37
  v_mac_legacy_f32  v15, v11, v11
  v_mad_legacy_f32  v13, v6, v7, -s18
  v_mac_legacy_f32  v15, v13, v13
  v_mad_legacy_f32  v16, v4, v7, -s36
  v_mul_legacy_f32  v19, v17, v17
  v_mad_legacy_f32  v5, v5, v7, -s41
  v_rsq_f32     v15, v15
  v_mad_legacy_f32  v18, v6, v7, -s38
  v_mac_legacy_f32  v19, v16, v16
  v_mad_legacy_f32  v4, v4, v7, -s40
  v_mad_legacy_f32  v6, v6, v7, -s42
  v_mul_legacy_f32  v7, v5, v5
  v_mac_legacy_f32  v7, v4, v4
  v_mac_legacy_f32  v19, v18, v18
  v_rsq_f32     v19, v19
  v_mac_legacy_f32  v7, v6, v6
  v_rsq_f32     v7, v7
  v_mul_legacy_f32  v11, v11, v8
  v_mul_legacy_f32  v20, s16, v8
  v_mul_legacy_f32  v12, v15, v12
  v_mul_legacy_f32  v11, v11, v15
  v_mad_legacy_f32  v20, -s17, v9, -v20
  v_mul_legacy_f32  v21, s36, v8
  v_mac_legacy_f32  v11, v12, v9
  v_mul_legacy_f32  v12, v16, v8
  v_mad_legacy_f32  v21, -s37, v9, -v21
  v_mul_legacy_f32  v22, s40, v8
  v_mul_legacy_f32  v4, v4, v8
  v_mul_legacy_f32  v13, v15, v13
  v_mac_legacy_f32  v20, v10, -s18
  v_mul_legacy_f32  v17, v19, v17
  v_mul_legacy_f32  v12, v12, v19
  v_mad_legacy_f32  v22, -s41, v9, -v22
  v_mac_legacy_f32  v11, v13, v10
  v_mac_legacy_f32  v21, v10, -s38
  v_mul_legacy_f32  v18, v19, v18
  v_mac_legacy_f32  v12, v17, v9
  v_mul_legacy_f32  v5, v7, v5
  v_mul_legacy_f32  v4, v4, v7
  v_cmp_gt_f32  vcc, 0, v20
  v_mac_legacy_f32  v12, v18, v10
  v_mac_legacy_f32  v22, v10, -s42
  v_mac_legacy_f32  v4, v5, v9
  v_mul_legacy_f32  v6, v7, v6
  v_cndmask_b32  v5, 1.0, 0, vcc
  v_cmp_gt_f32  s[0:1], 0, v21
  v_max_f32     v11, 0, v11
  v_mac_legacy_f32  v4, v6, v10
  v_cmp_gt_f32  s[2:3], 0, v22
  v_cndmask_b32  v6, 1.0, 0, s[0:1]
  v_mul_legacy_f32  v8, v5, v20
  v_mul_legacy_f32  v5, v11, v5
  v_max_f32     v12, 0, v12
  v_log_f32     v5, v5
  v_cndmask_b32  v7, 1.0, 0, s[2:3]
  v_max_f32     v4, 0, v4
  v_mul_legacy_f32  v9, v6, v21
  v_mul_legacy_f32  v6, v12, v6
  v_mul_legacy_f32  v4, v4, v7
  v_log_f32     v6, v6
  v_log_f32     v4, v4
  v_mul_legacy_f32  v5, s15, v5
  v_exp_f32     v5, v5
  v_mul_legacy_f32  v6, s15, v6
  v_mul_legacy_f32  v4, s15, v4
  v_exp_f32     v6, v6
  v_exp_f32     v4, v4
  v_mul_legacy_f32  v11, s45, v8
  v_mul_legacy_f32  v10, v7, v22
  v_mul_legacy_f32  v7, s44, v8
  v_mac_legacy_f32  v11, s49, v9
  v_mul_legacy_f32  v8, s46, v8
  v_mac_legacy_f32  v7, s48, v9
  v_mac_legacy_f32  v8, s50, v9
  v_mac_legacy_f32  v11, s21, v10
  v_mul_legacy_f32  v5, v5, v20
  v_mul_legacy_f32  v9, s5, v11
  v_mac_legacy_f32  v7, s20, v10
  v_mac_legacy_f32  v8, s22, v10
  v_mul_legacy_f32  v6, v6, v21
  v_mul_legacy_f32  v10, s24, v5
  v_mul_legacy_f32  v11, s25, v5
  v_mul_legacy_f32  v5, s26, v5
  v_mul_legacy_f32  v7, s4, v7
  v_mul_legacy_f32  v8, s6, v8
  v_mul_legacy_f32  v4, v4, v22
  v_mac_legacy_f32  v10, s28, v6
  v_mac_legacy_f32  v11, s29, v6
  v_mac_legacy_f32  v5, s30, v6
  v_add_f32     v7, s8, v7
  v_add_f32     v9, s9, v9
  v_add_f32     v8, s10, v8
  v_mac_legacy_f32  v11, s33, v4
  v_mac_legacy_f32  v10, s32, v4
  v_mad_legacy_f32  v4, v4, s34, v5
  v_mul_legacy_f32  v0, v0, v7
  v_mul_legacy_f32  v5, v10, v3
  v_mul_legacy_f32  v1, v1, v9
  v_mul_legacy_f32  v6, v11, v3
  v_mul_legacy_f32  v2, v2, v8
  v_mul_legacy_f32  v4, v4, v3
  v_mac_legacy_f32  v0, s12, v5
  v_mac_legacy_f32  v1, s13, v6
  v_mac_legacy_f32  v2, s14, v4
  v_mad_legacy_f32  v4, s56, v3, -v0
  v_mad_legacy_f32  v5, s57, v3, -v1
  v_mad_legacy_f32  v6, s58, v3, -v2
  v_mad_legacy_f32  v4, v4, v14, v0
  v_mad_legacy_f32  v5, v5, v14, v1
  v_mac_legacy_f32  v2, v6, v14
  v_cvt_pkrtz_f16_f32  v0, v4, v5
  v_cvt_pkrtz_f16_f32  v1, v2, v3
  exp           mrt0, v0, v0, v1, v1 done compr vm
  s_endpgm      
end


NumVGPR=23,NumSGPR=62,LDS=0,Scratch=0,Occpancy=8


#endif

const unsigned char SkinnedEffect_PSSkinnedPixelLighting[] = {
  0x44, 0x58, 0x42, 0x43, 0x4b, 0x25, 0xcd, 0x49, 0xca, 0x57, 0x12, 0xbf,
  0x91, 0x81, 0xce, 0xb7, 0x36, 0x84, 0x34, 0x12, 0x01, 0x00, 0x00, 0x00,
  0x04, 0x18, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00,
  0x50, 0x00, 0x00, 0x00, 0xf0, 0x00, 0x00, 0x00, 0x2c, 0x01, 0x00, 0x00,
  0xa0, 0x02, 0x00, 0x00, 0x24, 0x03, 0x00, 0x00, 0xbc, 0x03, 0x00, 0x00,
  0xd8, 0x03, 0x00, 0x00, 0x53, 0x46, 0x49, 0x30, 0x08, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x49, 0x53, 0x47, 0x31,
  0x98, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x88, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x03, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x88, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0f, 0x0f, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x88, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x07, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x91, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x0f, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x54, 0x45, 0x58, 0x43,
  0x4f, 0x4f, 0x52, 0x44, 0x00, 0x43, 0x4f, 0x4c, 0x4f, 0x52, 0x00, 0x00,
  0x4f, 0x53, 0x47, 0x31, 0x34, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x28, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x53, 0x56, 0x5f, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x00, 0x00, 0x00,
  0x50, 0x53, 0x56, 0x30, 0x6c, 0x01, 0x00, 0x00, 0x34, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff,
  0x00, 0x00, 0x00, 0x00, 0x04, 0x01, 0x00, 0x04, 0x01, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x22, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x3c, 0x00, 0x00, 0x00, 0x00, 0x54, 0x45, 0x58, 0x43, 0x4f, 0x4f, 0x52,
  0x44, 0x00, 0x54, 0x45, 0x58, 0x43, 0x4f, 0x4f, 0x52, 0x44, 0x00, 0x54,
  0x45, 0x58, 0x43, 0x4f, 0x4f, 0x52, 0x44, 0x00, 0x43, 0x4f, 0x4c, 0x4f,
  0x52, 0x00, 0x50, 0x53, 0x53, 0x6b, 0x69, 0x6e, 0x6e, 0x65, 0x64, 0x50,
  0x69, 0x78, 0x65, 0x6c, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67,
  0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x42, 0x00,
  0x03, 0x02, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x01, 0x01, 0x44, 0x00, 0x03, 0x02, 0x00, 0x00, 0x13, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x01, 0x02, 0x43, 0x00, 0x03, 0x02, 0x00, 0x00,
  0x1c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x03, 0x44, 0x00,
  0x03, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x44, 0x10, 0x03, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00,
  0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x07, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00,
  0x07, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00,
  0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00,
  0x52, 0x54, 0x53, 0x30, 0x7c, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x7c, 0x00, 0x00, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x05, 0x00, 0x00, 0x00, 0x44, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x05, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x4c, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00,
  0x68, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff,
  0x49, 0x4c, 0x44, 0x4e, 0x90, 0x00, 0x00, 0x00, 0x00, 0x00, 0x89, 0x00,
  0x43, 0x3a, 0x5c, 0x55, 0x73, 0x65, 0x72, 0x73, 0x5c, 0x6d, 0x61, 0x72,
  0x63, 0x75, 0x5c, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x73,
  0x5c, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x58, 0x54, 0x4b, 0x31, 0x32,
  0x2d, 0x6d, 0x61, 0x69, 0x6e, 0x5c, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74,
  0x58, 0x54, 0x4b, 0x31, 0x32, 0x2d, 0x6d, 0x61, 0x69, 0x6e, 0x5c, 0x53,
  0x72, 0x63, 0x2f, 0x53, 0x68, 0x61, 0x64, 0x65, 0x72, 0x73, 0x2f, 0x43,
  0x6f, 0x6d, 0x70, 0x69, 0x6c, 0x65, 0x64, 0x5c, 0x58, 0x62, 0x6f, 0x78,
  0x47, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x58, 0x62, 0x6f, 0x78, 0x4f, 0x6e,
  0x65, 0x53, 0x6b, 0x69, 0x6e, 0x6e, 0x65, 0x64, 0x45, 0x66, 0x66, 0x65,
  0x63, 0x74, 0x5f, 0x50, 0x53, 0x53, 0x6b, 0x69, 0x6e, 0x6e, 0x65, 0x64,
  0x50, 0x69, 0x78, 0x65, 0x6c, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e,
  0x67, 0x2e, 0x70, 0x64, 0x62, 0x00, 0x00, 0x00, 0x48, 0x41, 0x53, 0x48,
  0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7b, 0xe4, 0x1d, 0x94,
  0x0b, 0xc1, 0xcf, 0xb0, 0x3f, 0x51, 0x71, 0x8d, 0xfe, 0x81, 0x27, 0x66,
  0x44, 0x58, 0x49, 0x4c, 0x24, 0x14, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00,
  0x09, 0x05, 0x00, 0x00, 0x44, 0x58, 0x49, 0x4c, 0x00, 0x01, 0x00, 0x00,
  0x7c, 0x00, 0x00, 0x00, 0x34, 0x0e, 0x00, 0x00, 0x58, 0x44, 0x41, 0x54,
  0x06, 0x00, 0x00, 0x00, 0x24, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00,
  0x6c, 0x00, 0x00, 0x00, 0x4c, 0x0e, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00,
  0xb8, 0x0e, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xc8, 0x0e, 0x00, 0x00, 0x4a, 0x04, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x14, 0x13, 0x00, 0x00, 0xb0, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00,
  0xc4, 0x13, 0x00, 0x00, 0x4a, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00,
  0x10, 0x14, 0x00, 0x00, 0x11, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00,
  0x93, 0x03, 0x00, 0x00, 0x44, 0x58, 0x49, 0x4c, 0x00, 0x01, 0x00, 0x00,
  0x10, 0x00, 0x00, 0x00, 0x34, 0x0e, 0x00, 0x00, 0x42, 0x43, 0xc0, 0xde,
  0x21, 0x0c, 0x00, 0x00, 0x8a, 0x03, 0x00, 0x00, 0x0b, 0x82, 0x20, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x13, 0x00, 0x00, 0x00, 0x07, 0x81, 0x23, 0x91,
  0x41, 0xc8, 0x04, 0x49, 0x06, 0x10, 0x32, 0x39, 0x92, 0x01, 0x84, 0x0c,
  0x25, 0x05, 0x08, 0x19, 0x1e, 0x04, 0x8b, 0x62, 0x80, 0x18, 0x45, 0x02,
  0x42, 0x92, 0x0b, 0x42, 0xc4, 0x10, 0x32, 0x14, 0x38, 0x08, 0x18, 0x4b,
  0x0a, 0x32, 0x62, 0x88, 0x48, 0x90, 0x14, 0x20, 0x43, 0x46, 0x88, 0xa5,
  0x00, 0x19, 0x32, 0x42, 0xe4, 0x48, 0x0e, 0x90, 0x11, 0x23, 0xc4, 0x50,
  0x41, 0x51, 0x81, 0x8c, 0xe1, 0x83, 0xe5, 0x8a, 0x04, 0x31, 0x46, 0x06,
  0x51, 0x18, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x1b, 0x8c, 0xe0, 0xff,
  0xff, 0xff, 0xff, 0x07, 0x40, 0x02, 0xa8, 0x0d, 0x84, 0xf0, 0xff, 0xff,
  0xff, 0xff, 0x03, 0x20, 0x6d, 0x30, 0x86, 0xff, 0xff, 0xff, 0xff, 0x1f,
  0x00, 0x09, 0xa8, 0x00, 0x49, 0x18, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x13, 0x82, 0x60, 0x42, 0x20, 0x4c, 0x08, 0x06, 0x00, 0x00, 0x00, 0x00,
  0x89, 0x20, 0x00, 0x00, 0x5d, 0x00, 0x00, 0x00, 0x32, 0x22, 0x88, 0x09,
  0x20, 0x64, 0x85, 0x04, 0x13, 0x23, 0xa4, 0x84, 0x04, 0x13, 0x23, 0xe3,
  0x84, 0xa1, 0x90, 0x14, 0x12, 0x4c, 0x8c, 0x8c, 0x0b, 0x84, 0xc4, 0x4c,
  0x10, 0xb0, 0xc1, 0x08, 0x40, 0x09, 0x00, 0x0a, 0x66, 0x00, 0xe6, 0x08,
  0xc0, 0x60, 0x8e, 0x00, 0x29, 0xc6, 0x40, 0x10, 0x44, 0x41, 0x90, 0x51,
  0x0c, 0x80, 0x20, 0x88, 0x62, 0x20, 0xe4, 0xa6, 0xe1, 0xf2, 0x27, 0xec,
  0x21, 0x24, 0x7f, 0x25, 0xa4, 0x95, 0x98, 0xfc, 0xe2, 0xb6, 0x51, 0x31,
  0x0c, 0xc3, 0x40, 0x50, 0x71, 0xcf, 0x70, 0xf9, 0x13, 0xf6, 0x10, 0x92,
  0x1f, 0x02, 0xcd, 0xb0, 0x10, 0x28, 0x58, 0x0a, 0xa3, 0x10, 0x0c, 0x33,
  0x0c, 0xc3, 0x40, 0x10, 0xc4, 0x40, 0x4d, 0x41, 0x06, 0x62, 0x18, 0x86,
  0x61, 0x18, 0xe8, 0x29, 0xc3, 0x40, 0x0c, 0x14, 0x15, 0x62, 0x20, 0x86,
  0x81, 0xa6, 0xa3, 0x86, 0xcb, 0x9f, 0xb0, 0x87, 0x90, 0x7c, 0x6e, 0xa3,
  0x8a, 0x95, 0x98, 0xfc, 0xe2, 0xb6, 0x11, 0x31, 0x0c, 0xc3, 0x50, 0x88,
  0x8a, 0x60, 0x08, 0xb2, 0x4a, 0x31, 0x10, 0xc3, 0x30, 0x10, 0x36, 0x47,
  0x10, 0x14, 0x83, 0x21, 0x0a, 0x82, 0xd0, 0x68, 0x1b, 0x08, 0x18, 0x46,
  0x20, 0x86, 0x99, 0xda, 0x60, 0x1c, 0xd8, 0x21, 0x1c, 0xe6, 0x61, 0x1e,
  0xdc, 0x80, 0x16, 0xca, 0x01, 0x1f, 0xe8, 0xa1, 0x1e, 0xe4, 0xa1, 0x1c,
  0xe4, 0x80, 0x14, 0xf8, 0xc0, 0x1e, 0xca, 0x61, 0x1c, 0xe8, 0xe1, 0x1d,
  0xe4, 0x81, 0x0f, 0xcc, 0x81, 0x1d, 0xde, 0x21, 0x1c, 0xe8, 0x81, 0x0d,
  0xc0, 0x80, 0x0e, 0xfc, 0x00, 0x0c, 0xfc, 0x40, 0x0f, 0xf4, 0xa0, 0x1d,
  0xd2, 0x01, 0x1e, 0xe6, 0xe1, 0x17, 0xe8, 0x21, 0x1f, 0xe0, 0xa1, 0x1c,
  0x50, 0x40, 0xcc, 0x24, 0x06, 0xe3, 0xc0, 0x0e, 0xe1, 0x30, 0x0f, 0xf3,
  0xe0, 0x06, 0xb4, 0x50, 0x0e, 0xf8, 0x40, 0x0f, 0xf5, 0x20, 0x0f, 0xe5,
  0x20, 0x07, 0xa4, 0xc0, 0x07, 0xf6, 0x50, 0x0e, 0xe3, 0x40, 0x0f, 0xef,
  0x20, 0x0f, 0x7c, 0x60, 0x0e, 0xec, 0xf0, 0x0e, 0xe1, 0x40, 0x0f, 0x6c,
  0x00, 0x06, 0x74, 0xe0, 0x07, 0x60, 0xe0, 0x07, 0x48, 0xf0, 0x3e, 0x02,
  0x87, 0x11, 0x86, 0x21, 0x07, 0xc4, 0x24, 0xf0, 0x72, 0xc0, 0x4b, 0xa4,
  0xf2, 0xaa, 0xc3, 0x91, 0xa6, 0x05, 0xc0, 0x1c, 0x6a, 0xf2, 0x53, 0x20,
  0x02, 0x18, 0x62, 0x22, 0x22, 0x09, 0x39, 0x9e, 0x28, 0x0e, 0xe3, 0x38,
  0x8a, 0xa2, 0x47, 0x8e, 0xa4, 0x49, 0xe7, 0x4d, 0xd2, 0x14, 0x51, 0xc2,
  0xe4, 0xb3, 0x00, 0xf3, 0x2c, 0x44, 0xc4, 0x4e, 0xc0, 0x44, 0xa0, 0x80,
  0xa0, 0x34, 0x25, 0x08, 0x00, 0x00, 0x00, 0x00, 0x13, 0x16, 0x72, 0xc0,
  0x87, 0x74, 0x60, 0x87, 0x36, 0x68, 0x87, 0x79, 0x68, 0x03, 0x7c, 0x10,
  0x87, 0x38, 0xd8, 0xf0, 0x0a, 0xe5, 0xd0, 0x06, 0xed, 0xa0, 0x07, 0xe5,
  0xd0, 0x06, 0xf0, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x7a, 0x30, 0x07, 0x72,
  0xd0, 0x06, 0xe9, 0x10, 0x07, 0x7a, 0x30, 0x07, 0x72, 0xd0, 0x06, 0xe9,
  0x80, 0x07, 0x7a, 0x30, 0x07, 0x72, 0xd0, 0x06, 0xe9, 0x10, 0x07, 0x76,
  0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x90, 0x0e, 0x73, 0x20, 0x07, 0x7a,
  0x30, 0x07, 0x72, 0xd0, 0x06, 0xe9, 0x60, 0x07, 0x74, 0xa0, 0x07, 0x76,
  0x40, 0x07, 0x6d, 0x60, 0x0e, 0x71, 0x60, 0x07, 0x7a, 0x30, 0x07, 0x72,
  0xd0, 0x06, 0xe6, 0x30, 0x07, 0x72, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d,
  0x60, 0x0e, 0x76, 0x40, 0x07, 0x7a, 0x60, 0x07, 0x74, 0xd0, 0x06, 0xee,
  0x80, 0x07, 0x7a, 0x10, 0x07, 0x76, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x7a,
  0x60, 0x07, 0x74, 0x30, 0xe4, 0x09, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x60, 0xc8, 0x63, 0x00, 0x01, 0x10, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x90, 0x07, 0x01, 0x02, 0x40, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x21, 0x4f, 0x03, 0x04, 0xc0,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x43, 0x9e, 0x07, 0x08,
  0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x86, 0x3c, 0x11,
  0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x79,
  0x26, 0x20, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18,
  0xf2, 0x58, 0x40, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x30, 0xe4, 0xc1, 0x80, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x60, 0xc8, 0xb3, 0x01, 0x01, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x40, 0x16, 0x08, 0x00, 0x00, 0x00, 0x12, 0x00, 0x00, 0x00,
  0x32, 0x1e, 0x98, 0x14, 0x19, 0x11, 0x4c, 0x90, 0x8c, 0x09, 0x26, 0x47,
  0xc6, 0x04, 0x43, 0x22, 0x4a, 0x60, 0x04, 0xa0, 0x20, 0x8a, 0xa1, 0x08,
  0x4a, 0xa2, 0x80, 0x79, 0xca, 0xa0, 0x3c, 0xca, 0x81, 0x8a, 0x92, 0x18,
  0x01, 0x28, 0x82, 0x42, 0x28, 0x83, 0x02, 0xa1, 0x70, 0x06, 0x80, 0xd0,
  0x19, 0x00, 0x52, 0x67, 0x00, 0x68, 0x1d, 0x4b, 0x82, 0x88, 0xe7, 0x01,
  0x80, 0xe3, 0x38, 0x8e, 0xe3, 0x38, 0x80, 0x40, 0x20, 0x1e, 0x00, 0x00,
  0x79, 0x18, 0x00, 0x00, 0x87, 0x00, 0x00, 0x00, 0x1a, 0x03, 0x4c, 0x90,
  0x46, 0x02, 0x13, 0xc4, 0x36, 0xf8, 0xfa, 0xc2, 0x12, 0x7a, 0xc2, 0xfa,
  0x82, 0x2a, 0x92, 0xfa, 0xa2, 0x42, 0x92, 0x2a, 0x0a, 0x22, 0xfa, 0x9a,
  0x1a, 0x92, 0x0a, 0xa2, 0x1a, 0x42, 0xfa, 0x9a, 0x4a, 0xd2, 0x2a, 0xfa,
  0x62, 0x4a, 0x6a, 0x4a, 0xa2, 0xfa, 0x4a, 0x72, 0xfa, 0x12, 0xca, 0xa2,
  0x2a, 0x9a, 0x62, 0x00, 0xb3, 0x41, 0x08, 0x04, 0x76, 0x64, 0x78, 0x63,
  0x78, 0x62, 0x6f, 0x78, 0x20, 0x32, 0x34, 0x31, 0x30, 0x2e, 0x32, 0x34,
  0x31, 0x30, 0x2e, 0x31, 0x31, 0x31, 0x31, 0x36, 0x2e, 0x31, 0x30, 0x37,
  0x34, 0x31, 0x1b, 0x02, 0x62, 0x82, 0x40, 0x28, 0x13, 0x04, 0x62, 0xd9,
  0x20, 0x18, 0xc7, 0x04, 0x81, 0x60, 0x36, 0x08, 0x46, 0x42, 0x01, 0x6e,
  0x6e, 0x82, 0x40, 0x34, 0x1b, 0x86, 0x85, 0x39, 0x26, 0x08, 0x61, 0xa0,
  0x11, 0x98, 0x20, 0x10, 0xce, 0x04, 0x81, 0x78, 0x36, 0x08, 0x47, 0xb4,
  0x21, 0x39, 0x9c, 0xe7, 0x38, 0x0c, 0xe8, 0x90, 0x36, 0x04, 0xd3, 0x04,
  0x01, 0x0d, 0xb6, 0x09, 0x02, 0x01, 0x6d, 0x40, 0x8e, 0xea, 0x39, 0x0e,
  0xc3, 0x02, 0x36, 0x04, 0xd7, 0x04, 0x41, 0x0d, 0xb8, 0x0d, 0xc8, 0x91,
  0x3d, 0xc7, 0x61, 0x1c, 0xc0, 0x86, 0x40, 0xdb, 0x40, 0x50, 0x00, 0xb6,
  0x4d, 0x10, 0xd6, 0xa0, 0xdb, 0x10, 0x74, 0x13, 0x04, 0x01, 0xa0, 0x05,
  0x35, 0x35, 0xb5, 0x96, 0xe6, 0xe6, 0x56, 0x46, 0x06, 0x95, 0x86, 0x57,
  0xc6, 0xc6, 0x94, 0x76, 0x86, 0x46, 0x97, 0xe6, 0x76, 0x46, 0x84, 0xaa,
  0x08, 0x6b, 0xe8, 0xe9, 0x49, 0x8a, 0x68, 0x82, 0x50, 0x50, 0x13, 0x84,
  0xa2, 0xda, 0x10, 0x1c, 0x13, 0x84, 0xc2, 0x9a, 0x20, 0x10, 0xd1, 0x06,
  0xc1, 0x0c, 0xcc, 0x60, 0xc3, 0x72, 0x84, 0x81, 0x18, 0x8c, 0x01, 0x19,
  0x94, 0x81, 0x51, 0x06, 0xc7, 0x18, 0x9c, 0xc1, 0x86, 0xc0, 0x98, 0x20,
  0x14, 0xd7, 0x04, 0x81, 0x90, 0x36, 0x08, 0x66, 0xb0, 0x06, 0x1b, 0x16,
  0x23, 0x0c, 0xc4, 0x60, 0x0c, 0xd2, 0xa0, 0x0c, 0x0c, 0x35, 0x30, 0xc6,
  0x80, 0x0d, 0x36, 0x04, 0xd0, 0x04, 0xa1, 0xc0, 0x26, 0x08, 0xc4, 0xb4,
  0x41, 0x30, 0x03, 0x38, 0xd8, 0xb0, 0x40, 0x61, 0x20, 0x06, 0x63, 0xe0,
  0x06, 0x65, 0x60, 0xbc, 0x01, 0x34, 0x06, 0x71, 0xc0, 0x62, 0xe8, 0x89,
  0xe9, 0x49, 0x6a, 0xc3, 0x62, 0x06, 0x73, 0x20, 0x06, 0x63, 0x40, 0x06,
  0x65, 0x60, 0xa8, 0x81, 0x19, 0x8c, 0x01, 0x1b, 0x6c, 0x20, 0xd0, 0xa0,
  0x0d, 0xe4, 0x80, 0x0e, 0x98, 0x4c, 0x59, 0x7d, 0x51, 0x85, 0xc9, 0x9d,
  0x95, 0xd1, 0x4d, 0x10, 0x8a, 0x6c, 0xc3, 0x72, 0xd8, 0x81, 0x18, 0xdc,
  0x01, 0x19, 0x8c, 0x81, 0xa1, 0x06, 0xc7, 0x18, 0xb0, 0xc1, 0x86, 0x00,
  0x0f, 0x36, 0x0c, 0x75, 0x90, 0x07, 0xc0, 0x86, 0xe2, 0x03, 0x03, 0x3d,
  0xe0, 0x80, 0x56, 0x78, 0x62, 0x6f, 0x78, 0x2e, 0x63, 0x6f, 0x6d, 0x70,
  0x69, 0x6c, 0x65, 0x72, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
  0x53, 0x02, 0xa1, 0x0a, 0x1b, 0x9b, 0x5d, 0x9b, 0x4b, 0x1a, 0x59, 0x99,
  0x1b, 0xdd, 0x94, 0x80, 0xa8, 0x42, 0x86, 0xe7, 0x62, 0x57, 0x26, 0x37,
  0x97, 0xf6, 0xe6, 0x36, 0x25, 0x38, 0x9a, 0x90, 0xe1, 0xb9, 0xd8, 0x85,
  0xb1, 0xd9, 0x95, 0xc9, 0x4d, 0x09, 0x92, 0x3a, 0x64, 0x78, 0x2e, 0x73,
  0x68, 0x61, 0x64, 0x65, 0x72, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x53, 0x02,
  0xa6, 0x0c, 0x19, 0x9e, 0x8b, 0x5c, 0xd9, 0xdc, 0x5b, 0x9d, 0xdc, 0x58,
  0xd9, 0xdc, 0x94, 0x60, 0xab, 0x43, 0x86, 0xe7, 0x62, 0x97, 0x56, 0x76,
  0x97, 0x44, 0x36, 0x45, 0x17, 0x46, 0x57, 0x36, 0x25, 0xe8, 0xea, 0x90,
  0xe1, 0xb9, 0x94, 0xb9, 0xd1, 0xc9, 0xe5, 0x41, 0xbd, 0xa5, 0xb9, 0xd1,
  0xcd, 0x4d, 0x09, 0xf4, 0x00, 0x00, 0x00, 0x00, 0x79, 0x18, 0x00, 0x00,
  0x50, 0x00, 0x00, 0x00, 0x33, 0x08, 0x80, 0x1c, 0xc4, 0xe1, 0x1c, 0x66,
  0x14, 0x01, 0x3d, 0x88, 0x43, 0x38, 0x84, 0xc3, 0x8c, 0x42, 0x80, 0x07,
  0x79, 0x78, 0x07, 0x73, 0x98, 0x71, 0x0c, 0xe6, 0x00, 0x0f, 0xed, 0x10,
  0x0e, 0xf4, 0x80, 0x0e, 0x33, 0x0c, 0x42, 0x1e, 0xc2, 0xc1, 0x1d, 0xce,
  0xa1, 0x1c, 0x66, 0x30, 0x05, 0x3d, 0x88, 0x43, 0x38, 0x84, 0x83, 0x1b,
  0xcc, 0x03, 0x3d, 0xc8, 0x43, 0x3d, 0x8c, 0x03, 0x3d, 0xcc, 0x78, 0x8c,
  0x74, 0x70, 0x07, 0x7b, 0x08, 0x07, 0x79, 0x48, 0x87, 0x70, 0x70, 0x07,
  0x7a, 0x70, 0x03, 0x76, 0x78, 0x87, 0x70, 0x20, 0x87, 0x19, 0xcc, 0x11,
  0x0e, 0xec, 0x90, 0x0e, 0xe1, 0x30, 0x0f, 0x6e, 0x30, 0x0f, 0xe3, 0xf0,
  0x0e, 0xf0, 0x50, 0x0e, 0x33, 0x10, 0xc4, 0x1d, 0xde, 0x21, 0x1c, 0xd8,
  0x21, 0x1d, 0xc2, 0x61, 0x1e, 0x66, 0x30, 0x89, 0x3b, 0xbc, 0x83, 0x3b,
  0xd0, 0x43, 0x39, 0xb4, 0x03, 0x3c, 0xbc, 0x83, 0x3c, 0x84, 0x03, 0x3b,
  0xcc, 0xf0, 0x14, 0x76, 0x60, 0x07, 0x7b, 0x68, 0x07, 0x37, 0x68, 0x87,
  0x72, 0x68, 0x07, 0x37, 0x80, 0x87, 0x70, 0x90, 0x87, 0x70, 0x60, 0x07,
  0x76, 0x28, 0x07, 0x76, 0xf8, 0x05, 0x76, 0x78, 0x87, 0x77, 0x80, 0x87,
  0x5f, 0x08, 0x87, 0x71, 0x18, 0x87, 0x72, 0x98, 0x87, 0x79, 0x98, 0x81,
  0x2c, 0xee, 0xf0, 0x0e, 0xee, 0xe0, 0x0e, 0xf5, 0xc0, 0x0e, 0xec, 0x30,
  0x03, 0x62, 0xc8, 0xa1, 0x1c, 0xe4, 0xa1, 0x1c, 0xcc, 0xa1, 0x1c, 0xe4,
  0xa1, 0x1c, 0xdc, 0x61, 0x1c, 0xca, 0x21, 0x1c, 0xc4, 0x81, 0x1d, 0xca,
  0x61, 0x06, 0xd6, 0x90, 0x43, 0x39, 0xc8, 0x43, 0x39, 0x98, 0x43, 0x39,
  0xc8, 0x43, 0x39, 0xb8, 0xc3, 0x38, 0x94, 0x43, 0x38, 0x88, 0x03, 0x3b,
  0x94, 0xc3, 0x2f, 0xbc, 0x83, 0x3c, 0xfc, 0x82, 0x3b, 0xd4, 0x03, 0x3b,
  0xb0, 0xc3, 0x0c, 0xc4, 0x21, 0x07, 0x7c, 0x70, 0x03, 0x7a, 0x28, 0x87,
  0x76, 0x80, 0x87, 0x19, 0xca, 0xc3, 0x0e, 0xec, 0x60, 0x0f, 0xed, 0xe0,
  0x06, 0xec, 0xf0, 0x0e, 0xef, 0x00, 0x0f, 0x33, 0x22, 0x88, 0x1c, 0xf0,
  0xc1, 0x0d, 0xc8, 0x41, 0x1c, 0xce, 0xc1, 0x0d, 0xec, 0x21, 0x1c, 0xe4,
  0x81, 0x1d, 0xc2, 0x21, 0x1f, 0xde, 0xa1, 0x1e, 0xe8, 0x01, 0x00, 0x00,
  0x71, 0x20, 0x00, 0x00, 0x29, 0x00, 0x00, 0x00, 0x06, 0x60, 0xa5, 0x2c,
  0xab, 0x20, 0x4d, 0x43, 0x0c, 0x29, 0x72, 0x11, 0x4b, 0x89, 0x18, 0xc7,
  0x84, 0x34, 0x86, 0x19, 0x40, 0xc3, 0xe5, 0x3b, 0x8f, 0x1f, 0x20, 0x0d,
  0x10, 0x61, 0x7e, 0x71, 0xdb, 0x76, 0xb0, 0x0d, 0x97, 0xef, 0x3c, 0xbe,
  0x10, 0x50, 0x45, 0x41, 0x44, 0xa5, 0x03, 0x0c, 0x25, 0x61, 0x00, 0x02,
  0xe6, 0x17, 0xb7, 0x6d, 0x09, 0xd2, 0x70, 0xf9, 0xce, 0xe3, 0x0b, 0x11,
  0x01, 0x4c, 0x44, 0x08, 0x34, 0xc3, 0x42, 0x18, 0x81, 0x33, 0x5c, 0xbe,
  0xf3, 0xf8, 0x83, 0x33, 0xdd, 0x7e, 0x71, 0xdb, 0x16, 0x30, 0x0d, 0x97,
  0xef, 0x3c, 0xfe, 0xe2, 0x00, 0x83, 0xd8, 0x3c, 0xd4, 0xe4, 0x17, 0xb7,
  0x6d, 0x03, 0xd0, 0x70, 0xf9, 0xce, 0xe3, 0x4b, 0x00, 0xf3, 0x2c, 0x84,
  0x5f, 0xdc, 0xb6, 0x09, 0x54, 0xc3, 0xe5, 0x3b, 0x8f, 0x2f, 0x4d, 0x4e,
  0x44, 0xa0, 0xd4, 0xf4, 0x50, 0x93, 0x5f, 0xdc, 0xb6, 0x21, 0x48, 0xc3,
  0xe5, 0x3b, 0x8f, 0x3f, 0x11, 0xd1, 0x84, 0x00, 0x11, 0xe6, 0x17, 0xb7,
  0x6d, 0x05, 0xcf, 0x70, 0xf9, 0xce, 0xe3, 0x53, 0x0d, 0x10, 0x61, 0x7e,
  0x71, 0xdb, 0x00, 0x00, 0x61, 0x20, 0x00, 0x00, 0xa5, 0x01, 0x00, 0x00,
  0x13, 0x04, 0x41, 0x2c, 0x10, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00,
  0xa4, 0x8d, 0x00, 0x50, 0x51, 0x02, 0x44, 0x94, 0x46, 0x59, 0x14, 0x57,
  0x21, 0xcc, 0x00, 0x94, 0x5d, 0xb9, 0x95, 0x4c, 0x29, 0x94, 0x5c, 0x19,
  0x95, 0x4b, 0xa9, 0x14, 0x5e, 0x61, 0x14, 0x05, 0x0d, 0x63, 0x04, 0x20,
  0x08, 0x82, 0xf8, 0x37, 0x03, 0x30, 0x02, 0x30, 0x46, 0x00, 0x82, 0x20,
  0x08, 0x82, 0x02, 0x00, 0x23, 0x06, 0x09, 0x00, 0x82, 0x60, 0xb0, 0xad,
  0xc1, 0xf2, 0xa5, 0x41, 0x1a, 0x58, 0x23, 0x06, 0x09, 0x00, 0x82, 0x60,
  0xb0, 0xb1, 0x01, 0xd3, 0xa9, 0x81, 0x1a, 0x5c, 0x23, 0x06, 0x09, 0x00,
  0x82, 0x60, 0xb0, 0xb5, 0x41, 0x03, 0x06, 0x6b, 0xb0, 0x06, 0xd8, 0x88,
  0x41, 0x02, 0x80, 0x20, 0x18, 0x18, 0x76, 0x40, 0x99, 0x01, 0x1b, 0x88,
  0xc1, 0x34, 0x62, 0x90, 0x00, 0x20, 0x08, 0x06, 0xc6, 0x1d, 0x54, 0x67,
  0xd0, 0x06, 0x19, 0x35, 0x62, 0x90, 0x00, 0x20, 0x08, 0x06, 0x06, 0x1e,
  0x58, 0x68, 0xe0, 0x06, 0x63, 0x50, 0x8d, 0x18, 0x24, 0x00, 0x08, 0x82,
  0x81, 0x91, 0x07, 0x57, 0x1a, 0xbc, 0x81, 0x18, 0x58, 0x23, 0x06, 0x09,
  0x00, 0x82, 0x60, 0x60, 0xe8, 0x01, 0xd6, 0x06, 0x70, 0x60, 0x06, 0xd7,
  0x88, 0x41, 0x02, 0x80, 0x20, 0x18, 0x18, 0x7b, 0x90, 0xb9, 0x41, 0x1c,
  0x74, 0xd8, 0x88, 0x41, 0x02, 0x80, 0x20, 0x18, 0x18, 0x7c, 0xa0, 0xbd,
  0x81, 0x1c, 0x9c, 0x41, 0x36, 0x62, 0x90, 0x00, 0x20, 0x08, 0x06, 0x46,
  0x1f, 0x6c, 0x74, 0x30, 0x07, 0x69, 0xa0, 0x8d, 0x18, 0x24, 0x00, 0x08,
  0x82, 0x81, 0xe1, 0x07, 0x5c, 0x1d, 0xd0, 0x01, 0x18, 0x6c, 0x23, 0x06,
  0x09, 0x00, 0x82, 0x60, 0x60, 0xfc, 0x41, 0x67, 0x07, 0x75, 0xa0, 0x06,
  0xdc, 0x88, 0x41, 0x02, 0x80, 0x20, 0x18, 0x18, 0xa0, 0xe0, 0xdd, 0x81,
  0x1d, 0xa4, 0x41, 0x37, 0x62, 0x90, 0x00, 0x20, 0x08, 0x06, 0x46, 0x28,
  0x7c, 0x77, 0x70, 0x07, 0x6d, 0xe0, 0x8d, 0x18, 0x24, 0x00, 0x08, 0x82,
  0x81, 0x21, 0x0a, 0x60, 0x80, 0x07, 0x78, 0x40, 0x06, 0xdf, 0x88, 0xc1,
  0x03, 0x80, 0x20, 0x18, 0x34, 0xa1, 0x70, 0x41, 0x8f, 0x10, 0x4c, 0x53,
  0x1e, 0xe4, 0x01, 0x18, 0x4c, 0xa3, 0x09, 0x01, 0x30, 0x9a, 0x20, 0x04,
  0xa3, 0x09, 0x83, 0x30, 0x9a, 0x40, 0x0c, 0x46, 0x48, 0xf2, 0x31, 0x42,
  0x92, 0x8f, 0x11, 0x92, 0x7c, 0x8c, 0x90, 0xe4, 0x33, 0x62, 0x70, 0x00,
  0x20, 0x08, 0x06, 0x96, 0x29, 0xa0, 0xc1, 0xf5, 0x8d, 0x26, 0x04, 0xc0,
  0x68, 0x82, 0x10, 0x8c, 0x26, 0x0c, 0x82, 0x0d, 0x53, 0x7c, 0x6c, 0x98,
  0xe2, 0x63, 0xc3, 0x14, 0x9f, 0x11, 0x83, 0x05, 0x00, 0x41, 0x30, 0x78,
  0x60, 0xc1, 0x0d, 0x06, 0x21, 0x18, 0x84, 0x60, 0xc4, 0xc0, 0x00, 0x40,
  0x10, 0x0c, 0x22, 0x58, 0x70, 0x83, 0xc0, 0x8a, 0x40, 0x3e, 0x56, 0x08,
  0xf2, 0xb1, 0x62, 0x90, 0xcf, 0x88, 0xc1, 0x02, 0x80, 0x20, 0x18, 0x3c,
  0xb5, 0x30, 0x07, 0x5e, 0xc7, 0x79, 0x1d, 0x37, 0x62, 0x60, 0x00, 0x20,
  0x08, 0x06, 0x51, 0x2d, 0xcc, 0x41, 0x60, 0x01, 0x18, 0xc8, 0xc7, 0x04,
  0x30, 0x90, 0x8f, 0x0d, 0x60, 0x20, 0x9f, 0x11, 0x83, 0x03, 0x00, 0x41,
  0x30, 0xb0, 0x6e, 0x21, 0x0f, 0xd0, 0xa0, 0x15, 0x46, 0x13, 0x02, 0x60,
  0x34, 0x41, 0x08, 0x46, 0x13, 0x06, 0x61, 0xc4, 0xe0, 0x00, 0x40, 0x10,
  0x0c, 0xac, 0x5d, 0xe8, 0x03, 0x36, 0xa8, 0x85, 0xd1, 0x84, 0x00, 0x18,
  0x4d, 0x10, 0x82, 0xd1, 0x84, 0x41, 0x18, 0x31, 0x38, 0x00, 0x10, 0x04,
  0x03, 0xeb, 0x17, 0x42, 0x01, 0x0e, 0x6e, 0x61, 0x34, 0x21, 0x00, 0x46,
  0x13, 0x84, 0x60, 0x34, 0x61, 0x10, 0x8c, 0x5a, 0xe2, 0x63, 0xd4, 0x12,
  0x1f, 0xa3, 0x96, 0xf8, 0x8c, 0x18, 0x2c, 0x00, 0x08, 0x82, 0xc1, 0x93,
  0x0e, 0xa7, 0x30, 0x08, 0xc1, 0x20, 0x04, 0x23, 0x06, 0x06, 0x00, 0x82,
  0x60, 0x10, 0xa5, 0xc3, 0x29, 0x04, 0x16, 0x10, 0xf2, 0x31, 0x81, 0x90,
  0xcf, 0x88, 0xc1, 0x01, 0x80, 0x20, 0x18, 0x58, 0xea, 0xc0, 0x0a, 0x7b,
  0xe0, 0x0a, 0xa3, 0x09, 0x01, 0x30, 0x9a, 0x20, 0x04, 0xa3, 0x09, 0x83,
  0x30, 0x62, 0x70, 0x00, 0x20, 0x08, 0x06, 0x96, 0x3b, 0xc0, 0xc2, 0x1f,
  0x88, 0xc3, 0x68, 0x42, 0x00, 0x8c, 0x26, 0x08, 0xc1, 0x68, 0xc2, 0x20,
  0x8c, 0x18, 0x1c, 0x00, 0x08, 0x82, 0x81, 0x25, 0x0f, 0xb4, 0x30, 0x0a,
  0xaa, 0x30, 0x9a, 0x10, 0x00, 0xa3, 0x09, 0x42, 0x30, 0x9a, 0x30, 0x08,
  0x76, 0x06, 0x4b, 0x7c, 0xec, 0x0c, 0x96, 0xf8, 0xd8, 0x19, 0x2c, 0xf1,
  0x19, 0x31, 0x58, 0x00, 0x10, 0x04, 0x83, 0x87, 0x1f, 0x74, 0x61, 0x10,
  0x82, 0x41, 0x08, 0x46, 0x0c, 0x0c, 0x00, 0x04, 0xc1, 0x20, 0xe2, 0x07,
  0x5d, 0x08, 0x2c, 0x20, 0xe4, 0x63, 0x02, 0x21, 0x9f, 0x11, 0x83, 0x03,
  0x00, 0x41, 0x30, 0xb0, 0xfa, 0xe1, 0x17, 0x5c, 0x81, 0x17, 0x46, 0x13,
  0x02, 0x60, 0x34, 0x41, 0x08, 0x46, 0x13, 0x06, 0x61, 0xc4, 0xe0, 0x00,
  0x40, 0x10, 0x0c, 0xac, 0x90, 0x18, 0x07, 0x59, 0xe0, 0x87, 0xd1, 0x84,
  0x00, 0x18, 0x4d, 0x10, 0x82, 0xd1, 0x84, 0x41, 0x18, 0x31, 0x38, 0x00,
  0x10, 0x04, 0x03, 0xab, 0x24, 0xce, 0xc1, 0x16, 0xd6, 0x61, 0x34, 0x21,
  0x00, 0x46, 0x13, 0x84, 0x60, 0x34, 0x61, 0x10, 0x4c, 0x0f, 0x96, 0xf8,
  0x98, 0x1e, 0x2c, 0xf1, 0x31, 0x3d, 0x58, 0xe2, 0x33, 0x62, 0xb0, 0x00,
  0x20, 0x08, 0x06, 0xcf, 0x4b, 0xb4, 0xc3, 0x20, 0x04, 0x83, 0x10, 0x8c,
  0x18, 0x18, 0x00, 0x08, 0x82, 0x41, 0xf4, 0x12, 0xed, 0x10, 0x58, 0x40,
  0xc8, 0xc7, 0x04, 0x42, 0x3e, 0x46, 0x0e, 0x77, 0x10, 0x1f, 0x2b, 0x87,
  0x3b, 0x88, 0x8f, 0x99, 0x83, 0x19, 0xc4, 0xc7, 0xce, 0xc1, 0x0c, 0xe2,
  0x63, 0xe8, 0x50, 0xc5, 0xc7, 0xd2, 0xa1, 0x8a, 0x8f, 0x89, 0x82, 0x1f,
  0xc8, 0xc7, 0xd6, 0x21, 0x88, 0xcf, 0x88, 0x01, 0x02, 0x80, 0x20, 0x18,
  0x60, 0x37, 0xd1, 0x0f, 0xc8, 0x28, 0x04, 0x23, 0x06, 0x08, 0x00, 0x82,
  0x60, 0x80, 0xe1, 0x84, 0x3f, 0x20, 0xa3, 0x10, 0x98, 0x29, 0xbc, 0x81,
  0x7c, 0xec, 0x1d, 0x82, 0xf8, 0x8c, 0x18, 0x20, 0x00, 0x08, 0x82, 0x01,
  0xb6, 0x13, 0x21, 0xa1, 0x9c, 0x42, 0x30, 0x62, 0x80, 0x00, 0x20, 0x08,
  0x06, 0x18, 0x4f, 0x88, 0x84, 0x72, 0x0a, 0x81, 0xa9, 0x02, 0x18, 0xc8,
  0xc7, 0xe6, 0x21, 0x88, 0xcf, 0x88, 0x01, 0x02, 0x80, 0x20, 0x18, 0x60,
  0x3f, 0x51, 0x12, 0xcc, 0x2a, 0x04, 0x23, 0x06, 0x08, 0x00, 0x82, 0x60,
  0x80, 0x81, 0x85, 0x49, 0x30, 0xab, 0x10, 0xd8, 0x1f, 0xb8, 0x82, 0x7c,
  0x2c, 0xe0, 0x03, 0xf9, 0x8c, 0x18, 0x20, 0x00, 0x08, 0x82, 0x01, 0x36,
  0x16, 0x29, 0xc1, 0x07, 0xaf, 0x10, 0x8c, 0x18, 0x20, 0x00, 0x08, 0x82,
  0x01, 0x46, 0x16, 0x2a, 0xc1, 0x07, 0xaf, 0x10, 0x18, 0x1c, 0xc8, 0x82,
  0x7c, 0x2c, 0x68, 0x03, 0xf9, 0x8c, 0x18, 0x20, 0x00, 0x08, 0x82, 0x01,
  0x76, 0x16, 0x2d, 0xd1, 0x06, 0xb3, 0x10, 0x8c, 0x18, 0x20, 0x00, 0x08,
  0x82, 0x01, 0x86, 0x16, 0x2e, 0xd1, 0x06, 0xb3, 0x10, 0x58, 0x18, 0xd8,
  0x82, 0x7c, 0x2c, 0xf0, 0xe4, 0x33, 0x62, 0x80, 0x00, 0x20, 0x08, 0x06,
  0xd8, 0x5a, 0xc4, 0x84, 0x77, 0x0b, 0xc1, 0x88, 0x01, 0x02, 0x80, 0x20,
  0x18, 0x60, 0x6c, 0x21, 0x13, 0xde, 0x2d, 0x04, 0xc3, 0x11, 0xd5, 0x48,
  0x10, 0xdf, 0x70, 0x84, 0x44, 0x12, 0xc4, 0x37, 0x1c, 0xf1, 0x94, 0x04,
  0xf1, 0x4d, 0x37, 0x98, 0x04, 0x4a, 0x0c, 0xd3, 0x0d, 0x27, 0x91, 0x12,
  0xc3, 0x74, 0x03, 0x4a, 0xa8, 0xc4, 0x60, 0xc3, 0x26, 0x1f, 0x1b, 0x30,
  0xf9, 0xd8, 0x50, 0xc9, 0x67, 0xc4, 0xe0, 0x00, 0x40, 0x10, 0x0c, 0xac,
  0xbb, 0xc8, 0x09, 0x94, 0x80, 0x8b, 0xd1, 0x84, 0x60, 0x18, 0x31, 0x38,
  0x00, 0x10, 0x04, 0x83, 0x49, 0x2f, 0x6c, 0x82, 0x72, 0x89, 0x11, 0x83,
  0x03, 0x00, 0x41, 0x30, 0x98, 0xf6, 0xe2, 0x26, 0xa2, 0x97, 0x18, 0x31,
  0x38, 0x00, 0x10, 0x04, 0x83, 0x89, 0x2f, 0x70, 0xc2, 0x81, 0x09, 0x1b,
  0x16, 0xf9, 0xd8, 0xb0, 0xc8, 0xc7, 0x86, 0x45, 0x3e, 0x23, 0x06, 0x06,
  0x00, 0x82, 0x60, 0x10, 0x85, 0xc6, 0x4e, 0x0c, 0x23, 0x06, 0x06, 0x00,
  0x82, 0x60, 0x10, 0x89, 0x06, 0x4f, 0x0c, 0x23, 0x06, 0x06, 0x00, 0x82,
  0x60, 0x10, 0x8d, 0x46, 0x4f, 0x0c, 0x36, 0x28, 0xf2, 0xb1, 0x61, 0x91,
  0x8f, 0x0d, 0x8c, 0x7c, 0x46, 0x0c, 0x0c, 0x00, 0x04, 0xc1, 0x20, 0x3a,
  0x0d, 0xb0, 0x18, 0x46, 0x0c, 0x0c, 0x00, 0x04, 0xc1, 0x20, 0x42, 0x8d,
  0xb0, 0x18, 0x46, 0x0c, 0x0c, 0x00, 0x04, 0xc1, 0x20, 0x4a, 0x0d, 0xb1,
  0x18, 0x6c, 0x78, 0x03, 0xf9, 0xd8, 0xc0, 0x06, 0xf2, 0xb1, 0x21, 0x0d,
  0xe4, 0x63, 0xd7, 0x3b, 0xc8, 0x67, 0xc4, 0x00, 0x01, 0x40, 0x10, 0x0c,
  0xb0, 0xd5, 0x88, 0x8b, 0xab, 0x17, 0x82, 0x11, 0x03, 0x04, 0x00, 0x41,
  0x30, 0xc0, 0x58, 0x43, 0x2e, 0xae, 0x55, 0x08, 0x4c, 0x8b, 0x07, 0xf9,
  0x8c, 0x18, 0x20, 0x00, 0x08, 0x82, 0x01, 0xe6, 0x1a, 0x74, 0xa1, 0xfd,
  0x42, 0x30, 0x62, 0x80, 0x00, 0x20, 0x08, 0x06, 0xd8, 0x6b, 0xd4, 0x85,
  0xd6, 0x0a, 0x81, 0x75, 0xf3, 0x20, 0x9f, 0x11, 0x03, 0x04, 0x00, 0x41,
  0x30, 0xc0, 0x62, 0xe3, 0x2e, 0xba, 0x70, 0x08, 0x46, 0x0c, 0x10, 0x00,
  0x04, 0xc1, 0x00, 0x93, 0x0d, 0xbc, 0xe8, 0x5e, 0x21, 0x18, 0x31, 0x38,
  0x00, 0x10, 0x04, 0x03, 0x8b, 0x36, 0xec, 0xa2, 0x2c, 0x60, 0x63, 0x34,
  0x21, 0x00, 0x46, 0x13, 0x84, 0x60, 0x34, 0x61, 0x10, 0x6c, 0x58, 0xe4,
  0x63, 0x43, 0x22, 0x1f, 0x1b, 0x0e, 0xf9, 0x8c, 0x18, 0x1c, 0x00, 0x08,
  0x82, 0x81, 0xb5, 0x1b, 0x7d, 0xc1, 0x16, 0xb8, 0x31, 0x9a, 0x10, 0x00,
  0xa3, 0x09, 0x42, 0x30, 0x9a, 0x30, 0x08, 0x76, 0x0c, 0xf0, 0xb1, 0x63,
  0x80, 0x8f, 0x1d, 0x03, 0x7c, 0x4c, 0x13, 0x09, 0xf9, 0x8c, 0x18, 0x20,
  0x00, 0x08, 0x82, 0x01, 0x26, 0x1e, 0xa8, 0xa1, 0xc1, 0x43, 0x30, 0x62,
  0x80, 0x00, 0x20, 0x08, 0x06, 0xd8, 0x78, 0xa4, 0x86, 0xe6, 0x0b, 0x81,
  0x75, 0x24, 0x21, 0x9f, 0x11, 0x03, 0x04, 0x00, 0x41, 0x30, 0xc0, 0xca,
  0x63, 0x35, 0x3a, 0x79, 0x08, 0x46, 0x0c, 0x10, 0x00, 0x04, 0xc1, 0x00,
  0x33, 0x0f, 0xd6, 0xe8, 0xc0, 0x21, 0x30, 0x30, 0x30, 0x09, 0xf9, 0x8c,
  0x18, 0x20, 0x00, 0x08, 0x82, 0x01, 0x86, 0x1e, 0xae, 0x01, 0x06, 0xf4,
  0x10, 0x8c, 0x18, 0x20, 0x00, 0x08, 0x82, 0x01, 0x96, 0x1e, 0xaf, 0x01,
  0x06, 0xe2, 0x10, 0x8c, 0x26, 0xd0, 0x01, 0x30, 0x9a, 0x50, 0x07, 0xc1,
  0x68, 0x82, 0x1d, 0x08, 0xc6, 0x16, 0x8f, 0x7c, 0x8c, 0x2d, 0x1e, 0xf9,
  0x18, 0x5b, 0x3c, 0xf2, 0xb1, 0x86, 0x2d, 0xe4, 0x63, 0xc1, 0x21, 0x1f,
  0x63, 0xdc, 0x42, 0x3e, 0x16, 0x20, 0xf2, 0xb1, 0x05, 0x2e, 0xe4, 0x63,
  0x41, 0x22, 0x1f, 0x2b, 0x12, 0xf8, 0x18, 0x91, 0xc0, 0xc7, 0x86, 0x04,
  0x3e, 0x23, 0x06, 0x07, 0x00, 0x82, 0x60, 0x60, 0xe9, 0x07, 0x6f, 0xac,
  0x46, 0x78, 0x8c, 0x26, 0x04, 0xc0, 0x68, 0x82, 0x10, 0x8c, 0x26, 0x0c,
  0x82, 0x0d, 0x79, 0x21, 0x1f, 0x1b, 0xf4, 0x42, 0x3e, 0x36, 0xec, 0x85,
  0x7c, 0x6c, 0x50, 0xe2, 0x63, 0x83, 0x12, 0x1f, 0x1b, 0x94, 0xf8, 0xd8,
  0xa0, 0x1a, 0xf2, 0xb1, 0x61, 0x35, 0xe4, 0x63, 0x03, 0x6b, 0xc8, 0xc7,
  0x06, 0x08, 0x3e, 0x36, 0x40, 0xf0, 0xb1, 0x01, 0x82, 0xcf, 0x88, 0x41,
  0x02, 0x80, 0x20, 0x18, 0x20, 0x2f, 0x92, 0x1e, 0x26, 0x62, 0x22, 0xfc,
  0x31, 0x8c, 0x18, 0x24, 0x00, 0x08, 0x82, 0x01, 0xf2, 0x22, 0xe9, 0x61,
  0x22, 0x26, 0x22, 0x1f, 0xc2, 0x88, 0x41, 0x02, 0x80, 0x20, 0x18, 0x20,
  0x2f, 0x92, 0x1e, 0x26, 0x62, 0x22, 0xfb, 0x11, 0x8c, 0x18, 0x24, 0x00,
  0x08, 0x82, 0x01, 0xf2, 0x22, 0xe9, 0x61, 0x22, 0x26, 0x92, 0x1f, 0xa5,
  0x81, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7b, 0xe4, 0x1d, 0x94,
  0x0b, 0xc1, 0xcf, 0xb0, 0x3f, 0x51, 0x71, 0x8d, 0xfe, 0x81, 0x27, 0x66,
  0x17, 0x00, 0x01, 0x00, 0x29, 0xf8, 0x11, 0x00, 0x78, 0x01, 0xed, 0x58,
  0xdd, 0x6b, 0x1d, 0x45, 0x14, 0x3f, 0xb3, 0x1f, 0xb3, 0x73, 0x77, 0xe7,
  0x9e, 0xdd, 0xbb, 0xf7, 0xde, 0xed, 0x26, 0xcd, 0x4d, 0x6f, 0xda, 0x7c,
  0x37, 0x91, 0x54, 0x72, 0xa5, 0xf5, 0xa3, 0x09, 0xa2, 0x52, 0x4c, 0x25,
  0x28, 0xea, 0x43, 0x68, 0x4a, 0x08, 0xe2, 0x73, 0x7d, 0xae, 0x5c, 0x37,
  0x35, 0xd0, 0x3c, 0x54, 0x28, 0xad, 0x14, 0xf1, 0xa1, 0x88, 0x04, 0x41,
  0xe9, 0x83, 0x88, 0xe8, 0xdb, 0x4d, 0x6a, 0x14, 0xe6, 0x41, 0x51, 0x52,
  0x7c, 0xf1, 0xd9, 0x3f, 0x40, 0x8a, 0x0f, 0x41, 0xa4, 0xf1, 0x9c, 0x4d,
  0x6e, 0x4d, 0x34, 0xe8, 0x4b, 0x05, 0x95, 0xfb, 0x83, 0xdf, 0x9c, 0x39,
  0x67, 0xce, 0xcc, 0x9c, 0x9d, 0xb3, 0x0b, 0x7b, 0x66, 0xab, 0x04, 0x39,
  0xde, 0x7b, 0xf1, 0xcc, 0x0d, 0x96, 0xbf, 0x4c, 0xfe, 0x7c, 0xe7, 0x2c,
  0x02, 0xb8, 0xd4, 0x17, 0x44, 0x96, 0x8c, 0x77, 0x8a, 0xdc, 0x02, 0x5c,
  0xd8, 0xf5, 0x57, 0xdc, 0xec, 0xe2, 0x10, 0xf1, 0x34, 0x91, 0x31, 0xcd,
  0xcd, 0x2e, 0x78, 0xfe, 0x37, 0x5f, 0x9f, 0x3d, 0x4d, 0x9c, 0xa2, 0xee,
  0x9f, 0x50, 0x26, 0xde, 0x24, 0x5e, 0x27, 0x32, 0x02, 0x6e, 0x76, 0x21,
  0x89, 0x3c, 0x9f, 0xd1, 0x96, 0x8c, 0xbd, 0xfd, 0x36, 0x6c, 0x22, 0xdb,
  0x2d, 0x62, 0x1b, 0xed, 0xb8, 0x97, 0x7a, 0xbe, 0x7f, 0x9c, 0xc4, 0x53,
  0x44, 0xf8, 0xea, 0xe6, 0xad, 0x27, 0x58, 0x8e, 0xbe, 0xb2, 0xf2, 0x18,
  0xcb, 0x8b, 0x9f, 0x2c, 0x1e, 0x18, 0xd7, 0x7f, 0x05, 0x07, 0x9d, 0x45,
  0x3b, 0x4f, 0x8c, 0x05, 0x3e, 0x98, 0xbf, 0x01, 0x9f, 0x33, 0x63, 0x2b,
  0xe2, 0xf6, 0xf7, 0x5c, 0xae, 0x13, 0x0f, 0x5a, 0x9f, 0xb1, 0x4d, 0x60,
  0x79, 0x10, 0x1c, 0xa2, 0x04, 0x3b, 0x23, 0x01, 0x52, 0x1c, 0xc9, 0xf8,
  0x45, 0x91, 0xd6, 0x50, 0x06, 0xb4, 0xbe, 0xb4, 0xa7, 0x32, 0x48, 0x79,
  0xe4, 0xff, 0x0d, 0xfa, 0x7c, 0x72, 0xf0, 0x59, 0xf0, 0x3b, 0xc9, 0x47,
  0x1b, 0x12, 0xdb, 0x60, 0x3b, 0xe3, 0x0e, 0x37, 0x90, 0xad, 0x31, 0xaf,
  0xa6, 0xb0, 0xc5, 0x5a, 0x5b, 0x17, 0xa4, 0xef, 0xf8, 0xed, 0xe8, 0x36,
  0xeb, 0xf9, 0x4b, 0xbd, 0x47, 0xa7, 0xfc, 0x3a, 0x01, 0x9c, 0xb7, 0x3c,
  0xeb, 0x7c, 0xd8, 0x43, 0xf3, 0x29, 0x61, 0xa4, 0x9f, 0x23, 0xfd, 0xdc,
  0x1e, 0x7d, 0x8e, 0xf4, 0xb9, 0x3d, 0xfa, 0x02, 0xe9, 0x0b, 0x7b, 0xf4,
  0x45, 0xd2, 0x17, 0xdb, 0x7a, 0x7b, 0xfd, 0x30, 0xdf, 0xcf, 0xb2, 0xff,
  0x2a, 0xd7, 0xff, 0x16, 0x74, 0x62, 0x7c, 0x30, 0xe8, 0xc4, 0xf8, 0x60,
  0xd0, 0x89, 0xb1, 0x83, 0x0e, 0x3a, 0xe8, 0xa0, 0x83, 0x7f, 0x1a, 0x4d,
  0xe7, 0x6a, 0xab, 0xe9, 0xdf, 0x6b, 0x79, 0xf6, 0x52, 0xcb, 0xb6, 0xaf,
  0xb5, 0x5c, 0xfb, 0x52, 0x2b, 0xb3, 0xdf, 0x24, 0x5e, 0x6e, 0x39, 0xf6,
  0xf5, 0x16, 0xd8, 0x5f, 0xae, 0x83, 0x77, 0x69, 0x5d, 0xd8, 0xbf, 0xb6,
  0x40, 0x47, 0x06, 0x8a, 0x15, 0x03, 0x98, 0x1a, 0x08, 0x7b, 0x0c, 0xa8,
  0xba, 0x81, 0x42, 0xbf, 0x01, 0x7f, 0xd8, 0x80, 0x33, 0x66, 0xc0, 0x9d,
  0x30, 0x20, 0x27, 0x0d, 0x78, 0x27, 0x0d, 0x55, 0x78, 0x06, 0x84, 0x36,
  0xe5, 0xed, 0xc6, 0x0a, 0xff, 0xc1, 0xc6, 0xf6, 0xa7, 0xad, 0xdb, 0xf6,
  0x67, 0xad, 0x6d, 0xfb, 0xf3, 0xd6, 0xad, 0x59, 0x8b, 0x86, 0x4a, 0x46,
  0x14, 0xab, 0x46, 0x60, 0x97, 0x11, 0x61, 0xcd, 0x08, 0xd5, 0x67, 0x44,
  0x61, 0xc0, 0x08, 0x7f, 0xc4, 0x08, 0x67, 0xdc, 0x08, 0xf7, 0x84, 0x11,
  0xb2, 0x61, 0x84, 0x77, 0xca, 0x08, 0x28, 0x18, 0x21, 0x8a, 0xa6, 0x19,
  0xdd, 0xbb, 0xfc, 0x06, 0x5c, 0x59, 0x83, 0x30, 0xfb, 0xc9, 0x82, 0xa3,
  0x00, 0x0d, 0x6b, 0x23, 0x6a, 0xc4, 0x1b, 0xf5, 0x86, 0xbf, 0x31, 0xd1,
  0xf8, 0xe1, 0x8b, 0x0b, 0xe1, 0x95, 0x35, 0x11, 0x58, 0xc8, 0x3e, 0x8d,
  0xd4, 0x57, 0x76, 0x28, 0x11, 0x0a, 0x80, 0x93, 0x89, 0x52, 0x6e, 0x80,
  0x58, 0x28, 0x27, 0x68, 0x15, 0x1d, 0x7c, 0xa4, 0x5b, 0x2b, 0xa7, 0x80,
  0x5a, 0x16, 0x51, 0xab, 0x52, 0xa2, 0xbd, 0x79, 0x6c, 0xfa, 0xd5, 0x44,
  0x07, 0xf3, 0x49, 0x53, 0x43, 0xb6, 0xe9, 0x86, 0xcf, 0x64, 0xba, 0xab,
  0x17, 0x83, 0x52, 0x84, 0x41, 0x39, 0xc6, 0xa0, 0x5a, 0xc1, 0x80, 0xec,
  0x4e, 0xf8, 0x64, 0x56, 0xca, 0xc7, 0x6f, 0x64, 0xc1, 0xa1, 0x5e, 0x5d,
  0xa4, 0xbe, 0x0c, 0x9f, 0xcd, 0x8a, 0x87, 0x7b, 0x75, 0x44, 0x7d, 0x27,
  0xbc, 0x96, 0x95, 0x8e, 0x0d, 0xa2, 0x4b, 0x7d, 0x37, 0xfc, 0x20, 0x0b,
  0xe7, 0x7b, 0x9b, 0x31, 0xf5, 0x65, 0xf8, 0x6e, 0x16, 0xf5, 0x0d, 0x6a,
  0x87, 0xfa, 0x4e, 0xf8, 0x7e, 0x26, 0x73, 0xdb, 0x47, 0x19, 0xc7, 0xc4,
  0x71, 0xc4, 0x03, 0x83, 0xba, 0x3c, 0x3f, 0xd8, 0xe4, 0x78, 0x38, 0x96,
  0xa0, 0x94, 0x60, 0x14, 0x0d, 0x63, 0xd8, 0x95, 0x62, 0x70, 0x24, 0xc1,
  0x0a, 0xf9, 0x97, 0xe2, 0x17, 0x56, 0xfb, 0xa3, 0x51, 0xd4, 0xe5, 0x44,
  0x47, 0xa5, 0x14, 0xab, 0x64, 0x1b, 0x88, 0x5f, 0x5e, 0x1d, 0x8e, 0xc6,
  0xd0, 0x29, 0x29, 0x0c, 0x0f, 0x77, 0x93, 0x9f, 0xde, 0xf4, 0x07, 0x60,
  0xba, 0x7c, 0xec, 0x28, 0xea, 0xa1, 0x14, 0x13, 0xf2, 0x19, 0x89, 0xe7,
  0x56, 0x8b, 0xf4, 0x6c, 0x55, 0x1e, 0x7b, 0x8e, 0xc6, 0x06, 0xfa, 0xb1,
  0x54, 0x4e, 0xb5, 0x17, 0xf8, 0xe8, 0x84, 0x0a, 0xb3, 0x61, 0xf5, 0x7a,
  0x5c, 0x4d, 0x75, 0xc2, 0xe3, 0x2f, 0xc1, 0xb4, 0x5b, 0x56, 0xda, 0x2b,
  0x6a, 0x7a, 0x06, 0xd8, 0xbc, 0x0b, 0x1f, 0xd2, 0x1f, 0xbd, 0xfa, 0x2e,
  0x1b, 0xb5, 0x20, 0x4b, 0x92, 0xba, 0xac, 0x2a, 0x6d, 0xb1, 0x3e, 0x66,
  0x71, 0xdd, 0x47, 0xe3, 0x02, 0xdc, 0x11, 0x3a, 0x23, 0x5a, 0x2b, 0x4b,
  0xd3, 0xba, 0x3b, 0xeb, 0x37, 0xbd, 0xdc, 0x5e, 0x80, 0x4c, 0xa9, 0xba,
  0x3c, 0x1e, 0xa3, 0xa6, 0xb5, 0x78, 0x1f, 0x39, 0xab, 0x9b, 0xce, 0xac,
  0x6a, 0x86, 0xbe, 0x8f, 0xee, 0x8c, 0xdf, 0x0c, 0xb5, 0xc6, 0x50, 0x91,
  0x7d, 0x86, 0xec, 0x33, 0xaa, 0x39, 0x1e, 0x25, 0xe8, 0x8d, 0x57, 0x70,
  0x2c, 0x42, 0x3c, 0x11, 0x27, 0xfa, 0xa1, 0x28, 0xc2, 0x09, 0x9a, 0xfe,
  0x70, 0x1c, 0xe9, 0x6a, 0x25, 0xd1, 0xee, 0x08, 0xcd, 0x4b, 0x62, 0xac,
  0x54, 0x50, 0x27, 0x95, 0x48, 0xcb, 0xe3, 0x1a, 0x53, 0xbf, 0x82, 0x5d,
  0x7e, 0x82, 0xdd, 0xb4, 0xa6, 0x83, 0x88, 0x92, 0xe6, 0x38, 0xe3, 0x0a,
  0x7b, 0x74, 0x45, 0xd7, 0x74, 0xa2, 0x7b, 0xb5, 0xaf, 0x15, 0x99, 0x0b,
  0x71, 0x2c, 0xfd, 0x28, 0x92, 0x7d, 0x2a, 0xd1, 0x75, 0x55, 0xd9, 0xc9,
  0xc3, 0xd3, 0x15, 0x87, 0x8a, 0x2a, 0xf4, 0x3d, 0x1f, 0x45, 0xd9, 0xc2,
  0xc0, 0xd3, 0x68, 0x95, 0x1c, 0x74, 0x3c, 0x85, 0xda, 0x07, 0x0a, 0xdb,
  0xd2, 0xa8, 0x9c, 0xdc, 0xf7, 0xa4, 0xb4, 0x96, 0x39, 0xa7, 0xa7, 0xa4,
  0x5c, 0xe6, 0xdc, 0x3d, 0x2a, 0xfd, 0xe5, 0x7c, 0x8d, 0x9a, 0x45, 0x25,
  0x15, 0xe5, 0xba, 0x26, 0x1d, 0x59, 0x23, 0xdf, 0x3f, 0xd4, 0x52, 0x00,
  0x4b, 0x6b, 0xdd, 0x2c, 0x2c, 0x9b, 0x6b, 0xb8, 0xfb, 0x57, 0x1b, 0x6c,
  0x13, 0x22, 0x2f, 0xc6, 0x26, 0xb8, 0x61, 0xb0, 0xcd, 0x12, 0x79, 0x35,
  0x7d, 0xdf, 0x96, 0xdf, 0x47, 0x70, 0x91, 0xb6, 0xff, 0x5a, 0x04, 0x84,
  0xda, 0x3f, 0x97, 0xb7, 0xb2, 0x9c, 0xfd, 0x73, 0xdb, 0x58, 0xd9, 0xbd,
  0x6f, 0x39, 0x43, 0x2c, 0x10, 0x45, 0x7e, 0xdb, 0x01, 0x70, 0x97, 0x28,
  0xc9, 0x52, 0x27, 0x29, 0x76, 0x76, 0xca, 0xd1, 0x4f, 0x14, 0x76, 0xbb,
  0x02, 0xa5, 0xed, 0x39, 0xd3, 0x84, 0x8b, 0x3f, 0xd6, 0xde, 0x0e, 0x6e,
  0x7f, 0xfb, 0xf1, 0xd4, 0xf3, 0xaf, 0xbd, 0x75, 0x6f, 0x69, 0xe8, 0xd5,
  0xdf, 0x00, 0x59, 0x79, 0x03, 0xed, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x01, 0x02, 0x03, 0x00, 0x00, 0x04, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x05, 0x02, 0x08, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x01, 0x06, 0x04,
  0x04, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7c, 0x00, 0x00,
  0x78, 0x01, 0x63, 0x64, 0x60, 0x60, 0x60, 0x06, 0x62, 0x09, 0x20, 0x06,
  0x81, 0x1a, 0x20, 0x96, 0x05, 0x62, 0x26, 0x20, 0x06, 0x01, 0x1b, 0x10,
  0x01, 0x04, 0xac, 0x40, 0xec, 0x02, 0xc4, 0x20, 0x00, 0x62, 0x27, 0x00,
  0x31, 0x0c, 0x80, 0xcc, 0xf0, 0x01, 0x62, 0x10, 0x00, 0xb1, 0x61, 0xe0,
  0x3f, 0x10, 0x80, 0xf8, 0x19, 0x40, 0x0c, 0xb2, 0x03, 0x55, 0xee, 0xff,
  0x7f, 0x00, 0x33, 0x03, 0x0a, 0x55, 0x00, 0x00, 0x78, 0x62, 0x6f, 0x70,
  0x01, 0x00, 0x00, 0x00, 0x7e, 0x02, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x30, 0x00, 0x00, 0x00
};
