#if 0
;
; Input signature:
;
; Name                 Index   Mask Register SysValue  Format   Used
; -------------------- ----- ------ -------- -------- ------- ------
; SV_Position              0   xyzw        0     NONE   float   xyzw
; NORMAL                   0   xyz         1     NONE   float   xyz 
; TEXCOORD                 0   xy          2     NONE   float   xy  
; COLOR                    0   xyzw        3     NONE   float   xyzw
; InstMatrix               0   xyzw        4     NONE   float   xyzw
; InstMatrix               1   xyzw        5     NONE   float   xyzw
; InstMatrix               2   xyzw        6     NONE   float   xyzw
;
;
; Output signature:
;
; Name                 Index   Mask Register SysValue  Format   Used
; -------------------- ----- ------ -------- -------- ------- ------
; TEXCOORD                 0   xy          0     NONE   float   xy  
; TEXCOORD                 1   xyzw        1     NONE   float   xyzw
; TEXCOORD                 2   xyz         2     NONE   float   xyz 
; COLOR                    0   xyzw        3     NONE   float   xyzw
; SV_Position              0   xyzw        4      POS   float   xyzw
;
; shader debug name: C:\Users\marcu\Downloads\DirectXTK12-main\DirectXTK12-main\Src/Shaders/Compiled\XboxGamingXboxOneDebugEffect_VSDebugVcInst.pdb
; shader hash: 0f8ee55309ada2200fab6b2f9855249e
;
; Pipeline Runtime Information: 
;
;PSVRuntimeInfo:
; Vertex Shader
; OutputPositionPresent=1
; MinimumExpectedWaveLaneCount: 0
; MaximumExpectedWaveLaneCount: 4294967295
; UsesViewID: false
; SigInputElements: 5
; SigOutputElements: 5
; SigPatchConstOrPrimElements: 0
; SigInputVectors: 7
; SigOutputVectors[0]: 5
; SigOutputVectors[1]: 0
; SigOutputVectors[2]: 0
; SigOutputVectors[3]: 0
; EntryFunctionName: VSDebugVcInst
;
;
; Input signature:
;
; Name                 Index             InterpMode DynIdx
; -------------------- ----- ---------------------- ------
; SV_Position              0                              
; NORMAL                   0                              
; TEXCOORD                 0                              
; COLOR                    0                              
; InstMatrix               0                              
;
; Output signature:
;
; Name                 Index             InterpMode DynIdx
; -------------------- ----- ---------------------- ------
; TEXCOORD                 0                 linear       
; TEXCOORD                 1                 linear       
; TEXCOORD                 2                 linear       
; COLOR                    0                 linear       
; SV_Position              0          noperspective       
;
; Buffer Definitions:
;
; cbuffer 
; {
;
;   [208 x i8] (type annotation not present)
;
; }
;
;
; Resource Bindings:
;
; Name                                 Type  Format         Dim      ID      HLSL Bind  Count
; ------------------------------ ---------- ------- ----------- ------- -------------- ------
;                                   cbuffer      NA          NA     CB0            cb0     1
;
;
; ViewId state:
;
; Number of inputs: 28, outputs: 20
; Outputs dependent on ViewId: {  }
; Inputs contributing to computation of Outputs:
;   output 0 depends on inputs: { 8 }
;   output 1 depends on inputs: { 9 }
;   output 4 depends on inputs: { 0, 1, 2, 3, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27 }
;   output 5 depends on inputs: { 0, 1, 2, 3, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27 }
;   output 6 depends on inputs: { 0, 1, 2, 3, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27 }
;   output 8 depends on inputs: { 4, 5, 6, 16, 17, 18, 20, 21, 22, 24, 25, 26 }
;   output 9 depends on inputs: { 4, 5, 6, 16, 17, 18, 20, 21, 22, 24, 25, 26 }
;   output 10 depends on inputs: { 4, 5, 6, 16, 17, 18, 20, 21, 22, 24, 25, 26 }
;   output 12 depends on inputs: { 12 }
;   output 13 depends on inputs: { 13 }
;   output 14 depends on inputs: { 14 }
;   output 15 depends on inputs: { 15 }
;   output 16 depends on inputs: { 0, 1, 2, 3, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27 }
;   output 17 depends on inputs: { 0, 1, 2, 3, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27 }
;   output 18 depends on inputs: { 0, 1, 2, 3, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27 }
;   output 19 depends on inputs: { 0, 1, 2, 3, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27 }
;
target datalayout = "e-m:e-p:32:32-i1:32-i8:32-i16:32-i32:32-i64:64-f16:32-f32:32-f64:64-n8:16:32:64"
target triple = "dxil-ms-xb1"

%dx.types.Handle = type { i8* }
%dx.types.CBufRet.f32 = type { float, float, float, float }
%hostlayout.Parameters = type { <3 x float>, float, <3 x float>, [4 x <4 x float>], [3 x <3 x float>], [4 x <4 x float>] }

define void @VSDebugVcInst() {
  %1 = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 2, i32 0, i32 0, i1 false)  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %2 = call float @dx.op.loadInput.f32(i32 4, i32 3, i32 0, i8 0, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %3 = call float @dx.op.loadInput.f32(i32 4, i32 3, i32 0, i8 1, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %4 = call float @dx.op.loadInput.f32(i32 4, i32 3, i32 0, i8 2, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %5 = call float @dx.op.loadInput.f32(i32 4, i32 3, i32 0, i8 3, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %6 = call float @dx.op.loadInput.f32(i32 4, i32 2, i32 0, i8 0, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %7 = call float @dx.op.loadInput.f32(i32 4, i32 2, i32 0, i8 1, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %8 = call float @dx.op.loadInput.f32(i32 4, i32 1, i32 0, i8 0, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %9 = call float @dx.op.loadInput.f32(i32 4, i32 1, i32 0, i8 1, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %10 = call float @dx.op.loadInput.f32(i32 4, i32 1, i32 0, i8 2, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %11 = call float @dx.op.loadInput.f32(i32 4, i32 0, i32 0, i8 0, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %12 = call float @dx.op.loadInput.f32(i32 4, i32 0, i32 0, i8 1, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %13 = call float @dx.op.loadInput.f32(i32 4, i32 0, i32 0, i8 2, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %14 = call float @dx.op.loadInput.f32(i32 4, i32 0, i32 0, i8 3, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %15 = call float @dx.op.loadInput.f32(i32 4, i32 4, i32 0, i8 0, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %16 = call float @dx.op.loadInput.f32(i32 4, i32 4, i32 0, i8 1, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %17 = call float @dx.op.loadInput.f32(i32 4, i32 4, i32 0, i8 2, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %18 = call float @dx.op.loadInput.f32(i32 4, i32 4, i32 0, i8 3, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %19 = call float @dx.op.loadInput.f32(i32 4, i32 4, i32 1, i8 0, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %20 = call float @dx.op.loadInput.f32(i32 4, i32 4, i32 1, i8 1, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %21 = call float @dx.op.loadInput.f32(i32 4, i32 4, i32 1, i8 2, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %22 = call float @dx.op.loadInput.f32(i32 4, i32 4, i32 1, i8 3, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %23 = call float @dx.op.loadInput.f32(i32 4, i32 4, i32 2, i8 0, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %24 = call float @dx.op.loadInput.f32(i32 4, i32 4, i32 2, i8 1, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %25 = call float @dx.op.loadInput.f32(i32 4, i32 4, i32 2, i8 2, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %26 = call float @dx.op.loadInput.f32(i32 4, i32 4, i32 2, i8 3, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %27 = fmul fast float %15, %11
  %28 = call float @dx.op.tertiary.f32(i32 46, float %12, float %16, float %27)  ; FMad(a,b,c)
  %29 = call float @dx.op.tertiary.f32(i32 46, float %13, float %17, float %28)  ; FMad(a,b,c)
  %30 = call float @dx.op.tertiary.f32(i32 46, float %14, float %18, float %29)  ; FMad(a,b,c)
  %31 = fmul fast float %19, %11
  %32 = call float @dx.op.tertiary.f32(i32 46, float %12, float %20, float %31)  ; FMad(a,b,c)
  %33 = call float @dx.op.tertiary.f32(i32 46, float %13, float %21, float %32)  ; FMad(a,b,c)
  %34 = call float @dx.op.tertiary.f32(i32 46, float %14, float %22, float %33)  ; FMad(a,b,c)
  %35 = fmul fast float %23, %11
  %36 = call float @dx.op.tertiary.f32(i32 46, float %12, float %24, float %35)  ; FMad(a,b,c)
  %37 = call float @dx.op.tertiary.f32(i32 46, float %13, float %25, float %36)  ; FMad(a,b,c)
  %38 = call float @dx.op.tertiary.f32(i32 46, float %14, float %26, float %37)  ; FMad(a,b,c)
  %39 = fmul fast float %15, %8
  %40 = call float @dx.op.tertiary.f32(i32 46, float %9, float %16, float %39)  ; FMad(a,b,c)
  %41 = call float @dx.op.tertiary.f32(i32 46, float %10, float %17, float %40)  ; FMad(a,b,c)
  %42 = fmul fast float %19, %8
  %43 = call float @dx.op.tertiary.f32(i32 46, float %9, float %20, float %42)  ; FMad(a,b,c)
  %44 = call float @dx.op.tertiary.f32(i32 46, float %10, float %21, float %43)  ; FMad(a,b,c)
  %45 = fmul fast float %23, %8
  %46 = call float @dx.op.tertiary.f32(i32 46, float %9, float %24, float %45)  ; FMad(a,b,c)
  %47 = call float @dx.op.tertiary.f32(i32 46, float %10, float %25, float %46)  ; FMad(a,b,c)
  %48 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 9)  ; CBufferLoadLegacy(handle,regIndex)
  %49 = extractvalue %dx.types.CBufRet.f32 %48, 0
  %50 = extractvalue %dx.types.CBufRet.f32 %48, 1
  %51 = extractvalue %dx.types.CBufRet.f32 %48, 2
  %52 = extractvalue %dx.types.CBufRet.f32 %48, 3
  %53 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 10)  ; CBufferLoadLegacy(handle,regIndex)
  %54 = extractvalue %dx.types.CBufRet.f32 %53, 0
  %55 = extractvalue %dx.types.CBufRet.f32 %53, 1
  %56 = extractvalue %dx.types.CBufRet.f32 %53, 2
  %57 = extractvalue %dx.types.CBufRet.f32 %53, 3
  %58 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 11)  ; CBufferLoadLegacy(handle,regIndex)
  %59 = extractvalue %dx.types.CBufRet.f32 %58, 0
  %60 = extractvalue %dx.types.CBufRet.f32 %58, 1
  %61 = extractvalue %dx.types.CBufRet.f32 %58, 2
  %62 = extractvalue %dx.types.CBufRet.f32 %58, 3
  %63 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 12)  ; CBufferLoadLegacy(handle,regIndex)
  %64 = extractvalue %dx.types.CBufRet.f32 %63, 0
  %65 = extractvalue %dx.types.CBufRet.f32 %63, 1
  %66 = extractvalue %dx.types.CBufRet.f32 %63, 2
  %67 = extractvalue %dx.types.CBufRet.f32 %63, 3
  %68 = fmul fast float %49, %30
  %69 = call float @dx.op.tertiary.f32(i32 46, float %34, float %50, float %68)  ; FMad(a,b,c)
  %70 = call float @dx.op.tertiary.f32(i32 46, float %38, float %51, float %69)  ; FMad(a,b,c)
  %71 = call float @dx.op.tertiary.f32(i32 46, float %14, float %52, float %70)  ; FMad(a,b,c)
  %72 = fmul fast float %54, %30
  %73 = call float @dx.op.tertiary.f32(i32 46, float %34, float %55, float %72)  ; FMad(a,b,c)
  %74 = call float @dx.op.tertiary.f32(i32 46, float %38, float %56, float %73)  ; FMad(a,b,c)
  %75 = call float @dx.op.tertiary.f32(i32 46, float %14, float %57, float %74)  ; FMad(a,b,c)
  %76 = fmul fast float %59, %30
  %77 = call float @dx.op.tertiary.f32(i32 46, float %34, float %60, float %76)  ; FMad(a,b,c)
  %78 = call float @dx.op.tertiary.f32(i32 46, float %38, float %61, float %77)  ; FMad(a,b,c)
  %79 = call float @dx.op.tertiary.f32(i32 46, float %14, float %62, float %78)  ; FMad(a,b,c)
  %80 = fmul fast float %64, %30
  %81 = call float @dx.op.tertiary.f32(i32 46, float %34, float %65, float %80)  ; FMad(a,b,c)
  %82 = call float @dx.op.tertiary.f32(i32 46, float %38, float %66, float %81)  ; FMad(a,b,c)
  %83 = call float @dx.op.tertiary.f32(i32 46, float %14, float %67, float %82)  ; FMad(a,b,c)
  %84 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 2)  ; CBufferLoadLegacy(handle,regIndex)
  %85 = extractvalue %dx.types.CBufRet.f32 %84, 0
  %86 = extractvalue %dx.types.CBufRet.f32 %84, 1
  %87 = extractvalue %dx.types.CBufRet.f32 %84, 2
  %88 = extractvalue %dx.types.CBufRet.f32 %84, 3
  %89 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 3)  ; CBufferLoadLegacy(handle,regIndex)
  %90 = extractvalue %dx.types.CBufRet.f32 %89, 0
  %91 = extractvalue %dx.types.CBufRet.f32 %89, 1
  %92 = extractvalue %dx.types.CBufRet.f32 %89, 2
  %93 = extractvalue %dx.types.CBufRet.f32 %89, 3
  %94 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 4)  ; CBufferLoadLegacy(handle,regIndex)
  %95 = extractvalue %dx.types.CBufRet.f32 %94, 0
  %96 = extractvalue %dx.types.CBufRet.f32 %94, 1
  %97 = extractvalue %dx.types.CBufRet.f32 %94, 2
  %98 = extractvalue %dx.types.CBufRet.f32 %94, 3
  %99 = fmul fast float %85, %30
  %100 = call float @dx.op.tertiary.f32(i32 46, float %34, float %86, float %99)  ; FMad(a,b,c)
  %101 = call float @dx.op.tertiary.f32(i32 46, float %38, float %87, float %100)  ; FMad(a,b,c)
  %102 = call float @dx.op.tertiary.f32(i32 46, float %14, float %88, float %101)  ; FMad(a,b,c)
  %103 = fmul fast float %90, %30
  %104 = call float @dx.op.tertiary.f32(i32 46, float %34, float %91, float %103)  ; FMad(a,b,c)
  %105 = call float @dx.op.tertiary.f32(i32 46, float %38, float %92, float %104)  ; FMad(a,b,c)
  %106 = call float @dx.op.tertiary.f32(i32 46, float %14, float %93, float %105)  ; FMad(a,b,c)
  %107 = fmul fast float %95, %30
  %108 = call float @dx.op.tertiary.f32(i32 46, float %34, float %96, float %107)  ; FMad(a,b,c)
  %109 = call float @dx.op.tertiary.f32(i32 46, float %38, float %97, float %108)  ; FMad(a,b,c)
  %110 = call float @dx.op.tertiary.f32(i32 46, float %14, float %98, float %109)  ; FMad(a,b,c)
  %111 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 6)  ; CBufferLoadLegacy(handle,regIndex)
  %112 = extractvalue %dx.types.CBufRet.f32 %111, 0
  %113 = extractvalue %dx.types.CBufRet.f32 %111, 1
  %114 = extractvalue %dx.types.CBufRet.f32 %111, 2
  %115 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 7)  ; CBufferLoadLegacy(handle,regIndex)
  %116 = extractvalue %dx.types.CBufRet.f32 %115, 0
  %117 = extractvalue %dx.types.CBufRet.f32 %115, 1
  %118 = extractvalue %dx.types.CBufRet.f32 %115, 2
  %119 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 8)  ; CBufferLoadLegacy(handle,regIndex)
  %120 = extractvalue %dx.types.CBufRet.f32 %119, 0
  %121 = extractvalue %dx.types.CBufRet.f32 %119, 1
  %122 = extractvalue %dx.types.CBufRet.f32 %119, 2
  %123 = fmul fast float %112, %41
  %124 = call float @dx.op.tertiary.f32(i32 46, float %44, float %113, float %123)  ; FMad(a,b,c)
  %125 = call float @dx.op.tertiary.f32(i32 46, float %47, float %114, float %124)  ; FMad(a,b,c)
  %126 = fmul fast float %116, %41
  %127 = call float @dx.op.tertiary.f32(i32 46, float %44, float %117, float %126)  ; FMad(a,b,c)
  %128 = call float @dx.op.tertiary.f32(i32 46, float %47, float %118, float %127)  ; FMad(a,b,c)
  %129 = fmul fast float %120, %41
  %130 = call float @dx.op.tertiary.f32(i32 46, float %44, float %121, float %129)  ; FMad(a,b,c)
  %131 = call float @dx.op.tertiary.f32(i32 46, float %47, float %122, float %130)  ; FMad(a,b,c)
  %132 = call float @dx.op.dot3.f32(i32 55, float %125, float %128, float %131, float %125, float %128, float %131)  ; Dot3(ax,ay,az,bx,by,bz)
  %133 = call float @dx.op.unary.f32(i32 25, float %132)  ; Rsqrt(value)
  %134 = fmul fast float %133, %125
  %135 = fmul fast float %133, %128
  %136 = fmul fast float %133, %131
  %137 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 0)  ; CBufferLoadLegacy(handle,regIndex)
  %138 = extractvalue %dx.types.CBufRet.f32 %137, 3
  %139 = fmul fast float %138, %5
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 0, float %6)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 1, float %7)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 1, i32 0, i8 0, float %102)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 1, i32 0, i8 1, float %106)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 1, i32 0, i8 2, float %110)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 1, i32 0, i8 3, float 1.000000e+00)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 2, i32 0, i8 0, float %134)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 2, i32 0, i8 1, float %135)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 2, i32 0, i8 2, float %136)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 3, i32 0, i8 0, float %2)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 3, i32 0, i8 1, float %3)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 3, i32 0, i8 2, float %4)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 3, i32 0, i8 3, float %139)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 4, i32 0, i8 0, float %71)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 4, i32 0, i8 1, float %75)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 4, i32 0, i8 2, float %79)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 4, i32 0, i8 3, float %83)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  ret void
}

; Function Attrs: nounwind readnone
declare float @dx.op.loadInput.f32(i32, i32, i32, i8, i32) #0

; Function Attrs: nounwind
declare void @dx.op.storeOutput.f32(i32, i32, i32, i8, float) #1

; Function Attrs: nounwind readnone
declare float @dx.op.dot3.f32(i32, float, float, float, float, float, float) #0

; Function Attrs: nounwind readnone
declare float @dx.op.unary.f32(i32, float) #0

; Function Attrs: nounwind readonly
declare %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32, %dx.types.Handle, i32) #2

; Function Attrs: nounwind readnone
declare float @dx.op.tertiary.f32(i32, float, float, float) #0

; Function Attrs: nounwind readonly
declare %dx.types.Handle @dx.op.createHandle(i32, i8, i32, i32, i1) #2

attributes #0 = { nounwind readnone }
attributes #1 = { nounwind }
attributes #2 = { nounwind readonly }

!xbox.compiler.options = !{!0}
!llvm.ident = !{!1}
!dx.version = !{!2}
!dx.valver = !{!3}
!dx.shaderModel = !{!4}
!dx.resources = !{!5}
!dx.viewIdState = !{!8}
!dx.entryPoints = !{!9}

!0 = !{!"__XBOX_PER_THREAD_SCRATCH_SIZE_LIMIT_IN_BYTES", !"0"}
!1 = !{!"dxcxbox 2410.2410.11116.10741"}
!2 = !{i32 1, i32 0}
!3 = !{i32 1, i32 8}
!4 = !{!"vs", i32 6, i32 0}
!5 = !{null, null, !6, null}
!6 = !{!7}
!7 = !{i32 0, %hostlayout.Parameters* undef, !"", i32 0, i32 0, i32 1, i32 208, null}
!8 = !{[30 x i32] [i32 28, i32 20, i32 983152, i32 983152, i32 983152, i32 983152, i32 1792, i32 1792, i32 1792, i32 0, i32 1, i32 2, i32 0, i32 0, i32 4096, i32 8192, i32 16384, i32 32768, i32 984944, i32 984944, i32 984944, i32 983152, i32 984944, i32 984944, i32 984944, i32 983152, i32 984944, i32 984944, i32 984944, i32 983152]}
!9 = !{void ()* @VSDebugVcInst, !"VSDebugVcInst", !10, !5, null}
!10 = !{!11, !22, null}
!11 = !{!12, !15, !17, !19, !20}
!12 = !{i32 0, !"SV_Position", i8 9, i8 0, !13, i8 0, i32 1, i8 4, i32 0, i8 0, !14}
!13 = !{i32 0}
!14 = !{i32 3, i32 15}
!15 = !{i32 1, !"NORMAL", i8 9, i8 0, !13, i8 0, i32 1, i8 3, i32 1, i8 0, !16}
!16 = !{i32 3, i32 7}
!17 = !{i32 2, !"TEXCOORD", i8 9, i8 0, !13, i8 0, i32 1, i8 2, i32 2, i8 0, !18}
!18 = !{i32 3, i32 3}
!19 = !{i32 3, !"COLOR", i8 9, i8 0, !13, i8 0, i32 1, i8 4, i32 3, i8 0, !14}
!20 = !{i32 4, !"InstMatrix", i8 9, i8 0, !21, i8 0, i32 3, i8 4, i32 4, i8 0, !14}
!21 = !{i32 0, i32 1, i32 2}
!22 = !{!23, !24, !26, !28, !29}
!23 = !{i32 0, !"TEXCOORD", i8 9, i8 0, !13, i8 2, i32 1, i8 2, i32 0, i8 0, !18}
!24 = !{i32 1, !"TEXCOORD", i8 9, i8 0, !25, i8 2, i32 1, i8 4, i32 1, i8 0, !14}
!25 = !{i32 1}
!26 = !{i32 2, !"TEXCOORD", i8 9, i8 0, !27, i8 2, i32 1, i8 3, i32 2, i8 0, !16}
!27 = !{i32 2}
!28 = !{i32 3, !"COLOR", i8 9, i8 0, !13, i8 2, i32 1, i8 4, i32 3, i8 0, !14}
!29 = !{i32 4, !"SV_Position", i8 9, i8 3, !13, i8 4, i32 1, i8 4, i32 4, i8 0, !14}

;
; DUMPING SHADER HARDWARE INSTRUCTIONS 
;
// Shader Type               : (VS)
// Shader Hw Stage           : (VS)

// Shader Instructions:
shader main
  asic(CI)
  type(VS)
  s_swappc_b64  s[0:1], s[0:1]
  s_or_b32      s37, s4, 0x00100000 // wrscc
  s_mov_b32     s36, s3
  s_mov_b32     s38, -1
  s_mov_b32     s39, 0x00024fac
  s_buffer_load_dword  s40, s[36:39], 0x03
  s_buffer_load_dwordx8  s[16:23], s[36:39], 0x08
  s_buffer_load_dwordx4  s[32:35], s[36:39], 0x10
  s_buffer_load_dwordx16  s[0:15], s[36:39], 0x18
  s_waitcnt     vmcnt(0)
  v_mul_legacy_f32  v3, v20, v8
  v_mul_legacy_f32  v0, v20, v4
  v_mul_legacy_f32  v1, v24, v4
  v_mul_legacy_f32  v2, v28, v4
  v_mac_legacy_f32  v3, v9, v21
  v_mul_legacy_f32  v4, v24, v8
  s_buffer_load_dwordx8  s[24:31], s[36:39], 0x28
  v_mac_legacy_f32  v0, v5, v21
  v_mac_legacy_f32  v1, v5, v25
  v_mac_legacy_f32  v2, v5, v29
  v_mac_legacy_f32  v4, v9, v25
  v_mul_legacy_f32  v5, v28, v8
  v_mac_legacy_f32  v3, v10, v22
  s_buffer_load_dwordx4  s[36:39], s[36:39], 0x30
  v_mac_legacy_f32  v5, v9, v29
  v_mac_legacy_f32  v4, v10, v26
  s_waitcnt     lgkmcnt(0)
  v_mul_legacy_f32  v20, s4, v3
  v_mul_legacy_f32  v15, s0, v3
  v_mac_legacy_f32  v5, v10, v30
  v_mac_legacy_f32  v20, s5, v4
  v_mac_legacy_f32  v0, v6, v22
  v_mac_legacy_f32  v15, s1, v4
  v_mul_legacy_f32  v3, s8, v3
  v_mac_legacy_f32  v20, s6, v5
  v_mac_legacy_f32  v0, v7, v23
  v_mac_legacy_f32  v3, s9, v4
  v_mac_legacy_f32  v1, v6, v26
  v_mac_legacy_f32  v15, s2, v5
  v_mul_legacy_f32  v4, v20, v20
  v_mac_legacy_f32  v2, v6, v30
  v_mac_legacy_f32  v3, s10, v5
  v_mac_legacy_f32  v4, v15, v15
  v_mac_legacy_f32  v1, v7, v27
  v_mul_legacy_f32  v6, s12, v0
  v_mul_legacy_f32  v8, s24, v0
  v_mul_legacy_f32  v9, s28, v0
  v_mul_legacy_f32  v10, s36, v0
  v_mac_legacy_f32  v4, v3, v3
  v_mac_legacy_f32  v2, v7, v31
  v_mac_legacy_f32  v6, s13, v1
  v_mac_legacy_f32  v8, s25, v1
  v_mac_legacy_f32  v9, s29, v1
  v_mac_legacy_f32  v10, s37, v1
  v_mac_legacy_f32  v6, s14, v2
  v_mac_legacy_f32  v8, s26, v2
  v_mac_legacy_f32  v9, s30, v2
  v_mac_legacy_f32  v10, s38, v2
  v_rsq_f32     v4, v4
  v_mul_legacy_f32  v11, s16, v0
  v_mul_legacy_f32  v14, s20, v0
  v_mul_legacy_f32  v0, s32, v0
  v_mac_legacy_f32  v6, s15, v7
  v_mac_legacy_f32  v8, s27, v7
  v_mac_legacy_f32  v9, s31, v7
  v_mac_legacy_f32  v10, s39, v7
  v_mac_legacy_f32  v11, s17, v1
  v_mac_legacy_f32  v14, s21, v1
  v_mac_legacy_f32  v0, s33, v1
  exp           pos0, v6, v8, v9, v10 done
  v_mac_legacy_f32  v11, s18, v2
  v_mac_legacy_f32  v14, s22, v2
  v_mac_legacy_f32  v0, s34, v2
  v_mac_legacy_f32  v11, s19, v7
  v_mac_legacy_f32  v14, s23, v7
  v_mac_legacy_f32  v0, s35, v7
  v_mul_legacy_f32  v1, v4, v15
  v_mul_legacy_f32  v2, v4, v20
  v_mul_legacy_f32  v3, v4, v3
  v_mul_legacy_f32  v4, s40, v19
  v_mov_b32     v5, 0
  s_waitcnt     expcnt(0)
  v_mov_b32     v6, 1.0
  exp           param0, v12, v13, v5, v6
  exp           param1, v11, v14, v0, v6
  exp           param2, v1, v2, v3, v6
  exp           param3, v16, v17, v18, v4
  s_endpgm      
end


NumVGPR=32,NumSGPR=43,LDS=0,Scratch=0,Occpancy=8

// Shader Type               : (VS)
// Shader Hw Stage           : (ES)

// Shader Instructions:
shader main
  asic(CI)
  type(VS)
  s_swappc_b64  s[0:1], s[0:1]
  s_or_b32      s25, s4, 0x00100000 // wrscc
  s_mov_b32     s24, s3
  s_mov_b32     s26, -1
  s_mov_b32     s27, 0x00024fac
  s_buffer_load_dwordx4  s[40:43], s[24:27], 0x10
  s_buffer_load_dwordx16  s[8:23], s[24:27], 0x18
  s_mov_b32     s1, 0
  s_buffer_load_dwordx8  s[32:39], s[24:27], 0x28
  s_buffer_load_dwordx4  s[44:47], s[24:27], 0x30
  s_load_dwordx4  s[0:3], s[0:1], 0x08
  s_buffer_load_dword  s4, s[24:27], 0x03
  s_waitcnt     vmcnt(0)
  v_mul_legacy_f32  v1, v20, v4
  v_mul_legacy_f32  v2, v24, v4
  v_mul_legacy_f32  v3, v28, v4
  v_mul_legacy_f32  v4, v20, v8
  v_mac_legacy_f32  v1, v5, v21
  v_mac_legacy_f32  v2, v5, v25
  v_mac_legacy_f32  v3, v5, v29
  v_mac_legacy_f32  v4, v9, v21
  v_mul_legacy_f32  v5, v24, v8
  v_mac_legacy_f32  v1, v6, v22
  v_mac_legacy_f32  v2, v6, v26
  v_mac_legacy_f32  v3, v6, v30
  v_mac_legacy_f32  v5, v9, v25
  v_mul_legacy_f32  v6, v28, v8
  v_mac_legacy_f32  v4, v10, v22
  s_buffer_load_dwordx8  s[24:31], s[24:27], 0x08
  v_mac_legacy_f32  v6, v9, v29
  v_mac_legacy_f32  v5, v10, v26
  s_waitcnt     lgkmcnt(0)
  v_mul_legacy_f32  v20, s12, v4
  v_mul_legacy_f32  v0, s4, v19
  v_mul_legacy_f32  v19, s8, v4
  v_mac_legacy_f32  v6, v10, v30
  v_mac_legacy_f32  v20, s13, v5
  v_mac_legacy_f32  v19, s9, v5
  v_mul_legacy_f32  v4, s16, v4
  v_mac_legacy_f32  v20, s14, v6
  v_mac_legacy_f32  v4, s17, v5
  v_mac_legacy_f32  v19, s10, v6
  v_mul_legacy_f32  v5, v20, v20
  v_mac_legacy_f32  v4, s18, v6
  v_mac_legacy_f32  v5, v19, v19
  v_mac_legacy_f32  v1, v7, v23
  v_mac_legacy_f32  v5, v4, v4
  v_rsq_f32     v5, v5
  v_mac_legacy_f32  v2, v7, v27
  v_mul_legacy_f32  v8, s20, v1
  v_mul_legacy_f32  v9, s32, v1
  v_mul_legacy_f32  v10, s36, v1
  v_mul_legacy_f32  v11, s44, v1
  v_mul_legacy_f32  v14, s24, v1
  v_mul_legacy_f32  v15, s28, v1
  v_mul_legacy_f32  v1, s40, v1
  v_mac_legacy_f32  v3, v7, v31
  v_mac_legacy_f32  v8, s21, v2
  v_mac_legacy_f32  v9, s33, v2
  v_mac_legacy_f32  v10, s37, v2
  v_mac_legacy_f32  v11, s45, v2
  v_mac_legacy_f32  v14, s25, v2
  v_mac_legacy_f32  v15, s29, v2
  v_mac_legacy_f32  v1, s41, v2
  v_mac_legacy_f32  v8, s22, v3
  v_mac_legacy_f32  v9, s34, v3
  v_mac_legacy_f32  v10, s38, v3
  v_mac_legacy_f32  v11, s46, v3
  v_mac_legacy_f32  v14, s26, v3
  v_mac_legacy_f32  v15, s30, v3
  v_mac_legacy_f32  v1, s42, v3
  v_mac_legacy_f32  v8, s23, v7
  v_mac_legacy_f32  v9, s35, v7
  v_mac_legacy_f32  v10, s39, v7
  v_mac_legacy_f32  v11, s47, v7
  v_mac_legacy_f32  v14, s27, v7
  v_mac_legacy_f32  v15, s31, v7
  v_mac_legacy_f32  v1, s43, v7
  buffer_store_dword  v8, v0, s[0:3], s5 offset:64 glc slc
  buffer_store_dword  v9, v0, s[0:3], s5 offset:68 glc slc
  buffer_store_dword  v10, v0, s[0:3], s5 offset:72 glc slc
  buffer_store_dword  v11, v0, s[0:3], s5 offset:76 glc slc
  buffer_store_dword  v12, v0, s[0:3], s5 glc slc
  buffer_store_dword  v13, v0, s[0:3], s5 offset:4 glc slc
  buffer_store_dword  v14, v0, s[0:3], s5 offset:16 glc slc
  buffer_store_dword  v15, v0, s[0:3], s5 offset:20 glc slc
  buffer_store_dword  v1, v0, s[0:3], s5 offset:24 glc slc
  v_mul_legacy_f32  v2, v5, v19
  v_mov_b32     v1, 1.0
  v_mul_legacy_f32  v3, v5, v20
  v_mul_legacy_f32  v4, v5, v4
  buffer_store_dword  v1, v0, s[0:3], s5 offset:28 glc slc
  buffer_store_dword  v2, v0, s[0:3], s5 offset:32 glc slc
  buffer_store_dword  v3, v0, s[0:3], s5 offset:36 glc slc
  buffer_store_dword  v4, v0, s[0:3], s5 offset:40 glc slc
  buffer_store_dword  v16, v0, s[0:3], s5 offset:48 glc slc
  buffer_store_dword  v17, v0, s[0:3], s5 offset:52 glc slc
  buffer_store_dword  v18, v0, s[0:3], s5 offset:56 glc slc
  buffer_store_dword  v0, v0, s[0:3], s5 offset:60 glc slc
  s_endpgm      
end


NumVGPR=32,NumSGPR=50,LDS=0,Scratch=0,Occpancy=8

// Shader Type               : (VS)
// Shader Hw Stage           : (LS)

// Shader Instructions:
shader main
  asic(CI)
  type(VS)
  s_swappc_b64  s[0:1], s[0:1]
  s_waitcnt     vmcnt(0)
  v_mul_legacy_f32  v2, v24, v4
  v_mac_legacy_f32  v2, v5, v25
  v_mac_legacy_f32  v2, v6, v26
  v_mad_legacy_f32  v11, v7, v27, v2
  v_mul_legacy_f32  v2, v28, v4
  v_mul_legacy_f32  v0, v20, v4
  v_mac_legacy_f32  v2, v5, v29
  v_mac_legacy_f32  v0, v5, v21
  s_or_b32      s37, s4, 0x00100000 // wrscc
  s_mov_b32     s36, s3
  s_mov_b32     s38, -1
  s_mov_b32     s39, 0x00024fac
  v_mac_legacy_f32  v2, v6, v30
  v_mac_legacy_f32  v0, v6, v22
  v_mad_legacy_f32  v6, v7, v31, v2
  v_mul_legacy_f32  v2, v20, v8
  s_buffer_load_dword  s40, s[36:39], 0x03
  s_buffer_load_dwordx8  s[16:23], s[36:39], 0x08
  s_buffer_load_dwordx4  s[32:35], s[36:39], 0x10
  s_buffer_load_dwordx16  s[0:15], s[36:39], 0x18
  v_mac_legacy_f32  v2, v9, v21
  v_mad_legacy_f32  v14, v10, v22, v2
  v_mul_legacy_f32  v2, v24, v8
  v_mac_legacy_f32  v2, v9, v25
  v_mad_legacy_f32  v15, v10, v26, v2
  v_mul_legacy_f32  v2, v28, v8
  s_buffer_load_dwordx8  s[24:31], s[36:39], 0x28
  s_buffer_load_dwordx4  s[36:39], s[36:39], 0x30
  s_waitcnt     lgkmcnt(0)
  v_mul_legacy_f32  v21, s4, v14
  v_mac_legacy_f32  v2, v9, v29
  v_mul_legacy_f32  v20, s0, v14
  v_mul_legacy_f32  v14, s8, v14
  v_mad_legacy_f32  v10, v10, v30, v2
  v_mac_legacy_f32  v21, s5, v15
  v_mac_legacy_f32  v20, s1, v15
  v_mac_legacy_f32  v21, s6, v10
  v_mac_legacy_f32  v14, s9, v15
  v_mac_legacy_f32  v20, s2, v10
  v_mad_legacy_f32  v10, v10, s10, v14
  v_mul_legacy_f32  v14, v21, v21
  v_mac_legacy_f32  v14, v20, v20
  v_mac_legacy_f32  v0, v7, v23
  v_mac_legacy_f32  v14, v10, v10
  v_mul_legacy_f32  v2, s12, v0
  v_mul_legacy_f32  v3, s24, v0
  v_mul_legacy_f32  v4, s28, v0
  v_mul_legacy_f32  v5, s36, v0
  v_mul_legacy_f32  v8, s16, v0
  v_mul_legacy_f32  v9, s20, v0
  v_mul_legacy_f32  v0, s32, v0
  v_rsq_f32     v14, v14
  s_movk_i32    s0, 0x0050
  v_mac_legacy_f32  v2, s13, v11
  v_mac_legacy_f32  v3, s25, v11
  v_mac_legacy_f32  v4, s29, v11
  v_mac_legacy_f32  v5, s37, v11
  v_mac_legacy_f32  v8, s17, v11
  v_mac_legacy_f32  v9, s21, v11
  v_mac_legacy_f32  v0, s33, v11
  v_mul_lo_i32  v11, v1, s0
  v_mac_legacy_f32  v2, s14, v6
  v_mac_legacy_f32  v3, s26, v6
  v_mac_legacy_f32  v4, s30, v6
  v_mac_legacy_f32  v5, s38, v6
  v_mac_legacy_f32  v8, s18, v6
  v_mac_legacy_f32  v9, s22, v6
  v_mac_legacy_f32  v0, s34, v6
  v_mac_legacy_f32  v2, s15, v7
  v_mac_legacy_f32  v3, s27, v7
  v_mac_legacy_f32  v4, s31, v7
  v_mac_legacy_f32  v5, s39, v7
  s_mov_b32     m0, -1
  v_mac_legacy_f32  v8, s19, v7
  v_mac_legacy_f32  v9, s23, v7
  v_mac_legacy_f32  v0, s35, v7
  v_mul_legacy_f32  v6, v14, v20
  v_mul_legacy_f32  v7, v14, v21
  v_mul_legacy_f32  v10, v14, v10
  v_mul_legacy_f32  v19, s40, v19
  v_mov_b32     v1, 1.0
  ds_write2_b64  v11, v[2:3], v[4:5] offset0:8 offset1:9
  ds_write2_b64  v11, v[12:13], v[0:1] offset1:3
  ds_write_b32  v11, v10 offset:40
  ds_write2_b64  v11, v[8:9], v[6:7] offset0:2 offset1:4
  ds_write2_b64  v11, v[16:17], v[18:19] offset0:6 offset1:7
  s_endpgm      
end


NumVGPR=32,NumSGPR=43,LDS=0,Scratch=0,Occpancy=8


#endif

const unsigned char DebugEffect_VSDebugVcInst[] = {
  0x44, 0x58, 0x42, 0x43, 0xe7, 0xe5, 0xea, 0x7f, 0x08, 0xc6, 0x0f, 0xa2,
  0x38, 0xd2, 0x48, 0x0f, 0x2f, 0x46, 0x94, 0x0b, 0x01, 0x00, 0x00, 0x00,
  0x30, 0x1b, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00,
  0x50, 0x00, 0x00, 0x00, 0x70, 0x01, 0x00, 0x00, 0x3c, 0x02, 0x00, 0x00,
  0x28, 0x04, 0x00, 0x00, 0x5c, 0x04, 0x00, 0x00, 0xe8, 0x04, 0x00, 0x00,
  0x04, 0x05, 0x00, 0x00, 0x53, 0x46, 0x49, 0x30, 0x08, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x49, 0x53, 0x47, 0x31,
  0x18, 0x01, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xe8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x0f, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xf4, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x07, 0x07, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfb, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x03, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x04, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x0f, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x0a, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x0f, 0x0f, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x01, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x05, 0x00, 0x00, 0x00, 0x0f, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x0a, 0x01, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00,
  0x0f, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x53, 0x56, 0x5f, 0x50,
  0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x00, 0x4e, 0x4f, 0x52, 0x4d,
  0x41, 0x4c, 0x00, 0x54, 0x45, 0x58, 0x43, 0x4f, 0x4f, 0x52, 0x44, 0x00,
  0x43, 0x4f, 0x4c, 0x4f, 0x52, 0x00, 0x49, 0x6e, 0x73, 0x74, 0x4d, 0x61,
  0x74, 0x72, 0x69, 0x78, 0x00, 0x00, 0x00, 0x00, 0x4f, 0x53, 0x47, 0x31,
  0xc4, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xa8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x03, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xa8, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xa8, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x07, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xb1, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xb7, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x54, 0x45, 0x58, 0x43, 0x4f, 0x4f, 0x52, 0x44,
  0x00, 0x43, 0x4f, 0x4c, 0x4f, 0x52, 0x00, 0x53, 0x56, 0x5f, 0x50, 0x6f,
  0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x00, 0x00, 0x50, 0x53, 0x56, 0x30,
  0xe4, 0x01, 0x00, 0x00, 0x34, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00,
  0x05, 0x05, 0x00, 0x07, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x4f, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x0d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00,
  0x00, 0x53, 0x56, 0x5f, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
  0x00, 0x4e, 0x4f, 0x52, 0x4d, 0x41, 0x4c, 0x00, 0x54, 0x45, 0x58, 0x43,
  0x4f, 0x4f, 0x52, 0x44, 0x00, 0x43, 0x4f, 0x4c, 0x4f, 0x52, 0x00, 0x49,
  0x6e, 0x73, 0x74, 0x4d, 0x61, 0x74, 0x72, 0x69, 0x78, 0x00, 0x54, 0x45,
  0x58, 0x43, 0x4f, 0x4f, 0x52, 0x44, 0x00, 0x54, 0x45, 0x58, 0x43, 0x4f,
  0x4f, 0x52, 0x44, 0x00, 0x54, 0x45, 0x58, 0x43, 0x4f, 0x4f, 0x52, 0x44,
  0x00, 0x43, 0x4f, 0x4c, 0x4f, 0x52, 0x00, 0x56, 0x53, 0x44, 0x65, 0x62,
  0x75, 0x67, 0x56, 0x63, 0x49, 0x6e, 0x73, 0x74, 0x00, 0x00, 0x00, 0x00,
  0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x44, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x01, 0x43, 0x00, 0x03, 0x00, 0x00, 0x00, 0x14, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x02, 0x42, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x1d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x03, 0x44, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x03, 0x04, 0x44, 0x00, 0x03, 0x00, 0x00, 0x00, 0x2e, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x42, 0x00, 0x03, 0x02, 0x00, 0x00,
  0x37, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x01, 0x44, 0x00,
  0x03, 0x02, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x01, 0x02, 0x43, 0x00, 0x03, 0x02, 0x00, 0x00, 0x49, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x03, 0x44, 0x00, 0x03, 0x02, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x04, 0x44, 0x03,
  0x03, 0x04, 0x00, 0x00, 0x70, 0x00, 0x0f, 0x00, 0x70, 0x00, 0x0f, 0x00,
  0x70, 0x00, 0x0f, 0x00, 0x70, 0x00, 0x0f, 0x00, 0x00, 0x07, 0x00, 0x00,
  0x00, 0x07, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00,
  0x00, 0x40, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x70, 0x07, 0x0f, 0x00,
  0x70, 0x07, 0x0f, 0x00, 0x70, 0x07, 0x0f, 0x00, 0x70, 0x00, 0x0f, 0x00,
  0x70, 0x07, 0x0f, 0x00, 0x70, 0x07, 0x0f, 0x00, 0x70, 0x07, 0x0f, 0x00,
  0x70, 0x00, 0x0f, 0x00, 0x70, 0x07, 0x0f, 0x00, 0x70, 0x07, 0x0f, 0x00,
  0x70, 0x07, 0x0f, 0x00, 0x70, 0x00, 0x0f, 0x00, 0x52, 0x54, 0x53, 0x30,
  0x2c, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2c, 0x00, 0x00, 0x00,
  0x1d, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x24, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x49, 0x4c, 0x44, 0x4e, 0x84, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7e, 0x00,
  0x43, 0x3a, 0x5c, 0x55, 0x73, 0x65, 0x72, 0x73, 0x5c, 0x6d, 0x61, 0x72,
  0x63, 0x75, 0x5c, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x73,
  0x5c, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x58, 0x54, 0x4b, 0x31, 0x32,
  0x2d, 0x6d, 0x61, 0x69, 0x6e, 0x5c, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74,
  0x58, 0x54, 0x4b, 0x31, 0x32, 0x2d, 0x6d, 0x61, 0x69, 0x6e, 0x5c, 0x53,
  0x72, 0x63, 0x2f, 0x53, 0x68, 0x61, 0x64, 0x65, 0x72, 0x73, 0x2f, 0x43,
  0x6f, 0x6d, 0x70, 0x69, 0x6c, 0x65, 0x64, 0x5c, 0x58, 0x62, 0x6f, 0x78,
  0x47, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x58, 0x62, 0x6f, 0x78, 0x4f, 0x6e,
  0x65, 0x44, 0x65, 0x62, 0x75, 0x67, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74,
  0x5f, 0x56, 0x53, 0x44, 0x65, 0x62, 0x75, 0x67, 0x56, 0x63, 0x49, 0x6e,
  0x73, 0x74, 0x2e, 0x70, 0x64, 0x62, 0x00, 0x00, 0x48, 0x41, 0x53, 0x48,
  0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x8e, 0xe5, 0x53,
  0x09, 0xad, 0xa2, 0x20, 0x0f, 0xab, 0x6b, 0x2f, 0x98, 0x55, 0x24, 0x9e,
  0x44, 0x58, 0x49, 0x4c, 0x24, 0x16, 0x00, 0x00, 0x60, 0x00, 0x01, 0x00,
  0x89, 0x05, 0x00, 0x00, 0x44, 0x58, 0x49, 0x4c, 0x00, 0x01, 0x00, 0x00,
  0x94, 0x00, 0x00, 0x00, 0x30, 0x0d, 0x00, 0x00, 0x58, 0x44, 0x41, 0x54,
  0x08, 0x00, 0x00, 0x00, 0x24, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00,
  0x84, 0x00, 0x00, 0x00, 0x48, 0x0d, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00,
  0xcc, 0x0d, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xdc, 0x0d, 0x00, 0x00, 0x77, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x54, 0x10, 0x00, 0x00, 0xbb, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x10, 0x13, 0x00, 0x00, 0x96, 0x02, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0xa8, 0x15, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00,
  0xe8, 0x15, 0x00, 0x00, 0x28, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00,
  0x10, 0x16, 0x00, 0x00, 0x11, 0x00, 0x00, 0x00, 0x60, 0x00, 0x01, 0x00,
  0x52, 0x03, 0x00, 0x00, 0x44, 0x58, 0x49, 0x4c, 0x00, 0x01, 0x00, 0x00,
  0x10, 0x00, 0x00, 0x00, 0x30, 0x0d, 0x00, 0x00, 0x42, 0x43, 0xc0, 0xde,
  0x21, 0x0c, 0x00, 0x00, 0x49, 0x03, 0x00, 0x00, 0x0b, 0x82, 0x20, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x13, 0x00, 0x00, 0x00, 0x07, 0x81, 0x23, 0x91,
  0x41, 0xc8, 0x04, 0x49, 0x06, 0x10, 0x32, 0x39, 0x92, 0x01, 0x84, 0x0c,
  0x25, 0x05, 0x08, 0x19, 0x1e, 0x04, 0x8b, 0x62, 0x80, 0x18, 0x45, 0x02,
  0x42, 0x92, 0x0b, 0x42, 0xc4, 0x10, 0x32, 0x14, 0x38, 0x08, 0x18, 0x4b,
  0x0a, 0x32, 0x62, 0x88, 0x48, 0x90, 0x14, 0x20, 0x43, 0x46, 0x88, 0xa5,
  0x00, 0x19, 0x32, 0x42, 0xe4, 0x48, 0x0e, 0x90, 0x11, 0x23, 0xc4, 0x50,
  0x41, 0x51, 0x81, 0x8c, 0xe1, 0x83, 0xe5, 0x8a, 0x04, 0x31, 0x46, 0x06,
  0x51, 0x18, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x1b, 0x8c, 0xe0, 0xff,
  0xff, 0xff, 0xff, 0x07, 0x40, 0x02, 0xa8, 0x0d, 0x84, 0xf0, 0xff, 0xff,
  0xff, 0xff, 0x03, 0x20, 0x6d, 0x30, 0x86, 0xff, 0xff, 0xff, 0xff, 0x1f,
  0x00, 0x09, 0xa8, 0x00, 0x49, 0x18, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x13, 0x82, 0x60, 0x42, 0x20, 0x4c, 0x08, 0x06, 0x00, 0x00, 0x00, 0x00,
  0x89, 0x20, 0x00, 0x00, 0x2b, 0x00, 0x00, 0x00, 0x32, 0x22, 0x88, 0x09,
  0x20, 0x64, 0x85, 0x04, 0x13, 0x23, 0xa4, 0x84, 0x04, 0x13, 0x23, 0xe3,
  0x84, 0xa1, 0x90, 0x14, 0x12, 0x4c, 0x8c, 0x8c, 0x0b, 0x84, 0xc4, 0x4c,
  0x10, 0x80, 0xc1, 0x08, 0x40, 0x09, 0x00, 0x0a, 0x66, 0x00, 0xe6, 0x08,
  0xc0, 0x60, 0x8e, 0x00, 0x29, 0xc6, 0x40, 0x10, 0x44, 0x41, 0x90, 0x51,
  0x0c, 0x80, 0x20, 0x88, 0x62, 0x20, 0xa4, 0x20, 0x03, 0x31, 0x0c, 0xc3,
  0x30, 0x0c, 0xa4, 0x94, 0x61, 0x20, 0x06, 0x62, 0x8e, 0x1a, 0x2e, 0x7f,
  0xc2, 0x1e, 0x42, 0xf2, 0xb9, 0x8d, 0x2a, 0x56, 0x62, 0xf2, 0x8b, 0xdb,
  0x46, 0xc4, 0x30, 0x0c, 0x03, 0x15, 0xf7, 0x0c, 0x97, 0x3f, 0x61, 0x0f,
  0x21, 0xf9, 0x21, 0xd0, 0x0c, 0x0b, 0x81, 0x82, 0xa7, 0x10, 0x0e, 0x01,
  0x11, 0x14, 0x95, 0x62, 0x20, 0x86, 0x61, 0xa0, 0x69, 0x8e, 0x20, 0x28,
  0x06, 0x44, 0x14, 0x04, 0x51, 0x91, 0x35, 0x10, 0x30, 0x8c, 0x30, 0x0c,
  0xc3, 0x08, 0xc4, 0x90, 0x04, 0x5a, 0x0e, 0x64, 0x57, 0x1d, 0x8e, 0x34,
  0x2d, 0x00, 0xe6, 0x50, 0x93, 0x9f, 0x02, 0x11, 0xc0, 0x10, 0x13, 0x11,
  0x49, 0xc8, 0xc8, 0x86, 0x6c, 0xe3, 0x36, 0xea, 0xd2, 0x83, 0x00, 0x00,
  0x13, 0x16, 0x72, 0xc0, 0x87, 0x74, 0x60, 0x87, 0x36, 0x68, 0x87, 0x79,
  0x68, 0x03, 0x7c, 0x10, 0x87, 0x38, 0xd8, 0xf0, 0x0a, 0xe5, 0xd0, 0x06,
  0xed, 0xa0, 0x07, 0xe5, 0xd0, 0x06, 0xf0, 0xa0, 0x07, 0x73, 0x20, 0x07,
  0x7a, 0x30, 0x07, 0x72, 0xd0, 0x06, 0xe9, 0x10, 0x07, 0x7a, 0x30, 0x07,
  0x72, 0xd0, 0x06, 0xe9, 0x80, 0x07, 0x7a, 0x30, 0x07, 0x72, 0xd0, 0x06,
  0xe9, 0x10, 0x07, 0x76, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x90, 0x0e,
  0x73, 0x20, 0x07, 0x7a, 0x30, 0x07, 0x72, 0xd0, 0x06, 0xe9, 0x60, 0x07,
  0x74, 0xa0, 0x07, 0x76, 0x40, 0x07, 0x6d, 0x60, 0x0e, 0x71, 0x60, 0x07,
  0x7a, 0x30, 0x07, 0x72, 0xd0, 0x06, 0xe6, 0x30, 0x07, 0x72, 0xa0, 0x07,
  0x73, 0x20, 0x07, 0x6d, 0x60, 0x0e, 0x76, 0x40, 0x07, 0x7a, 0x60, 0x07,
  0x74, 0xd0, 0x06, 0xee, 0x80, 0x07, 0x7a, 0x10, 0x07, 0x76, 0xa0, 0x07,
  0x73, 0x20, 0x07, 0x7a, 0x60, 0x07, 0x74, 0x30, 0xe4, 0x09, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0xc8, 0x63, 0x00,
  0x01, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x90, 0x07,
  0x01, 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x21,
  0x8f, 0x02, 0x04, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x43, 0x1e, 0x06, 0x08, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x86, 0x3c, 0x11, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x0c, 0x79, 0x26, 0x20, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x18, 0xf2, 0x58, 0x40, 0x00, 0x0c, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x90, 0x05, 0x02, 0x00, 0x1e, 0x00, 0x00, 0x00,
  0x32, 0x1e, 0x98, 0x14, 0x19, 0x11, 0x4c, 0x90, 0x8c, 0x09, 0x26, 0x47,
  0xc6, 0x04, 0x43, 0x22, 0x4a, 0x60, 0x04, 0xa0, 0x20, 0x8a, 0xa1, 0x40,
  0x07, 0xca, 0xa0, 0x3c, 0xca, 0xa1, 0x08, 0x0a, 0x81, 0x8a, 0x92, 0x18,
  0x01, 0x28, 0x84, 0x32, 0x28, 0x02, 0xf2, 0x66, 0x00, 0xe8, 0x1b, 0xcb,
  0xe3, 0x28, 0x78, 0x04, 0x3d, 0x78, 0x04, 0x3d, 0x78, 0x04, 0x3d, 0x78,
  0x04, 0x3d, 0x10, 0x0f, 0x40, 0x3c, 0x00, 0xf1, 0x00, 0x08, 0x04, 0x00,
  0x00, 0x41, 0x02, 0x04, 0x11, 0x10, 0x84, 0x40, 0x10, 0x0c, 0xe0, 0x3d,
  0xf4, 0xe0, 0x3d, 0xf4, 0xe0, 0x3d, 0xf4, 0xe0, 0x11, 0xf4, 0xe0, 0x3d,
  0xf4, 0xe0, 0x3d, 0xf4, 0xe0, 0x3d, 0xf4, 0xe0, 0x11, 0xf4, 0xe0, 0x3d,
  0xf4, 0xe0, 0x3d, 0xf4, 0xe0, 0x3d, 0xf4, 0xe0, 0x11, 0xf4, 0x00, 0x00,
  0x79, 0x18, 0x00, 0x00, 0x8d, 0x00, 0x00, 0x00, 0x1a, 0x03, 0x4c, 0x90,
  0x46, 0x02, 0x13, 0xc4, 0x36, 0xf8, 0xfa, 0xc2, 0x12, 0x7a, 0xc2, 0xfa,
  0x82, 0x2a, 0x92, 0xfa, 0xa2, 0x42, 0x92, 0x2a, 0x0a, 0x22, 0xfa, 0x9a,
  0x1a, 0x92, 0x0a, 0xa2, 0x1a, 0x42, 0xfa, 0x9a, 0x4a, 0xd2, 0x2a, 0xfa,
  0x62, 0x4a, 0x6a, 0x4a, 0xa2, 0xfa, 0x4a, 0x72, 0xfa, 0x12, 0xca, 0xa2,
  0x2a, 0x9a, 0x62, 0x00, 0xb3, 0x41, 0x08, 0x04, 0x76, 0x64, 0x78, 0x63,
  0x78, 0x62, 0x6f, 0x78, 0x20, 0x32, 0x34, 0x31, 0x30, 0x2e, 0x32, 0x34,
  0x31, 0x30, 0x2e, 0x31, 0x31, 0x31, 0x31, 0x36, 0x2e, 0x31, 0x30, 0x37,
  0x34, 0x31, 0x1b, 0x02, 0x62, 0x82, 0x40, 0x20, 0x13, 0x04, 0x22, 0xd9,
  0x20, 0x18, 0xc7, 0x04, 0x81, 0x50, 0x36, 0x08, 0x46, 0x42, 0xc1, 0x6e,
  0x6e, 0x82, 0x40, 0x2c, 0x1b, 0x86, 0x85, 0x39, 0x26, 0x08, 0xde, 0x45,
  0x60, 0x82, 0x40, 0x30, 0x1b, 0x90, 0xc3, 0x79, 0x8e, 0xc3, 0x80, 0x80,
  0x0d, 0x41, 0xb4, 0x81, 0x00, 0x00, 0x09, 0x98, 0x20, 0x7c, 0xd8, 0x86,
  0x80, 0x9a, 0x20, 0x08, 0x00, 0x1b, 0xab, 0x29, 0xa2, 0x32, 0xb1, 0xba,
  0x33, 0xab, 0xb1, 0x24, 0xb7, 0x39, 0x3a, 0x2e, 0x53, 0x56, 0x5f, 0x50,
  0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x13, 0x84, 0x42, 0x9a, 0x20,
  0x14, 0xd3, 0x86, 0xe0, 0x98, 0x20, 0x14, 0xd4, 0x04, 0x81, 0x68, 0x26,
  0x08, 0x84, 0xb3, 0x41, 0xe8, 0xbc, 0x0d, 0xcb, 0x81, 0x65, 0xda, 0xa6,
  0x19, 0xdc, 0xa1, 0x7d, 0x34, 0x9c, 0x9e, 0xa4, 0x9a, 0x82, 0x98, 0x26,
  0x08, 0x45, 0x35, 0x41, 0x20, 0x9e, 0x0d, 0x42, 0x37, 0x06, 0x1b, 0x16,
  0x23, 0x0c, 0x32, 0x6d, 0xd3, 0x0c, 0x31, 0x30, 0x34, 0x32, 0x98, 0x20,
  0x10, 0x10, 0x11, 0xaa, 0x22, 0xac, 0xa1, 0xa7, 0x27, 0x29, 0xa2, 0x09,
  0x42, 0x61, 0x6d, 0x10, 0xba, 0x6e, 0xc3, 0x62, 0x06, 0x67, 0x90, 0x69,
  0x9b, 0x66, 0xa0, 0x81, 0x19, 0x68, 0x69, 0xc0, 0x62, 0xe8, 0x89, 0xe9,
  0x49, 0x6a, 0xc3, 0xd2, 0xad, 0x41, 0xa6, 0x6d, 0x9a, 0xc1, 0x75, 0xda,
  0x37, 0x41, 0x20, 0x22, 0x2a, 0x49, 0x6e, 0x73, 0x74, 0x4d, 0x61, 0x74,
  0x72, 0x69, 0x78, 0x1b, 0x86, 0xc3, 0x30, 0x83, 0x0d, 0x4b, 0x1b, 0xb8,
  0x41, 0xa6, 0xbd, 0x81, 0xd6, 0x71, 0x6d, 0xa0, 0x7d, 0x1b, 0x0a, 0x30,
  0x28, 0x03, 0x35, 0x60, 0x03, 0x38, 0xd8, 0xb0, 0x1c, 0x67, 0x90, 0x69,
  0x1b, 0x1a, 0x18, 0x68, 0x70, 0x68, 0x69, 0xb0, 0x21, 0x30, 0x36, 0x2c,
  0xc6, 0x19, 0x64, 0xda, 0x1c, 0xa0, 0x81, 0xc1, 0x19, 0xda, 0xb7, 0x21,
  0x30, 0x83, 0x0d, 0x8b, 0x19, 0x9c, 0x41, 0xa6, 0xd5, 0x01, 0x1a, 0x18,
  0x62, 0x60, 0x06, 0x1a, 0x19, 0x6c, 0x58, 0xba, 0x35, 0xc8, 0xb4, 0x0d,
  0x0d, 0x0c, 0xae, 0xd3, 0xbe, 0x0d, 0x4b, 0x1b, 0x60, 0x99, 0x18, 0x6c,
  0x9c, 0xc1, 0xb5, 0x81, 0xf6, 0x6d, 0x28, 0xe4, 0x80, 0x0e, 0xec, 0xe0,
  0x0e, 0xf0, 0x60, 0xc3, 0x10, 0x07, 0x79, 0x00, 0x6c, 0x28, 0xac, 0x4b,
  0x0f, 0x26, 0xa0, 0x15, 0x9e, 0xd8, 0x1b, 0x9e, 0xcb, 0xd8, 0x5b, 0x1b,
  0x5c, 0x1a, 0x5b, 0x99, 0x9c, 0xcb, 0x1b, 0x1c, 0x5d, 0xda, 0x9b, 0xdb,
  0xdc, 0x94, 0x40, 0xa8, 0xc2, 0xc6, 0x66, 0xd7, 0xe6, 0x92, 0x46, 0x56,
  0xe6, 0x46, 0x37, 0x25, 0x20, 0xaa, 0x90, 0xe1, 0xb9, 0xd8, 0x95, 0xc9,
  0xcd, 0xa5, 0xbd, 0xb9, 0x4d, 0x09, 0x8e, 0x26, 0x64, 0x78, 0x2e, 0x76,
  0x61, 0x6c, 0x76, 0x65, 0x72, 0x53, 0x82, 0xa4, 0x0e, 0x19, 0x9e, 0xcb,
  0x1c, 0x5a, 0x18, 0x59, 0x99, 0x5c, 0xd3, 0x1b, 0x59, 0x19, 0xdb, 0x94,
  0x80, 0x29, 0x43, 0x86, 0xe7, 0x22, 0x57, 0x36, 0xf7, 0x56, 0x27, 0x37,
  0x56, 0x36, 0x37, 0x25, 0x90, 0xea, 0x90, 0xe1, 0xb9, 0xd8, 0xa5, 0x95,
  0xdd, 0x25, 0x91, 0x4d, 0xd1, 0x85, 0xd1, 0x95, 0x4d, 0x09, 0xa8, 0x3a,
  0x64, 0x78, 0x2e, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x50, 0x6f, 0x69, 0x6e,
  0x74, 0x73, 0x53, 0x02, 0x3d, 0x00, 0x00, 0x00, 0x79, 0x18, 0x00, 0x00,
  0x4c, 0x00, 0x00, 0x00, 0x33, 0x08, 0x80, 0x1c, 0xc4, 0xe1, 0x1c, 0x66,
  0x14, 0x01, 0x3d, 0x88, 0x43, 0x38, 0x84, 0xc3, 0x8c, 0x42, 0x80, 0x07,
  0x79, 0x78, 0x07, 0x73, 0x98, 0x71, 0x0c, 0xe6, 0x00, 0x0f, 0xed, 0x10,
  0x0e, 0xf4, 0x80, 0x0e, 0x33, 0x0c, 0x42, 0x1e, 0xc2, 0xc1, 0x1d, 0xce,
  0xa1, 0x1c, 0x66, 0x30, 0x05, 0x3d, 0x88, 0x43, 0x38, 0x84, 0x83, 0x1b,
  0xcc, 0x03, 0x3d, 0xc8, 0x43, 0x3d, 0x8c, 0x03, 0x3d, 0xcc, 0x78, 0x8c,
  0x74, 0x70, 0x07, 0x7b, 0x08, 0x07, 0x79, 0x48, 0x87, 0x70, 0x70, 0x07,
  0x7a, 0x70, 0x03, 0x76, 0x78, 0x87, 0x70, 0x20, 0x87, 0x19, 0xcc, 0x11,
  0x0e, 0xec, 0x90, 0x0e, 0xe1, 0x30, 0x0f, 0x6e, 0x30, 0x0f, 0xe3, 0xf0,
  0x0e, 0xf0, 0x50, 0x0e, 0x33, 0x10, 0xc4, 0x1d, 0xde, 0x21, 0x1c, 0xd8,
  0x21, 0x1d, 0xc2, 0x61, 0x1e, 0x66, 0x30, 0x89, 0x3b, 0xbc, 0x83, 0x3b,
  0xd0, 0x43, 0x39, 0xb4, 0x03, 0x3c, 0xbc, 0x83, 0x3c, 0x84, 0x03, 0x3b,
  0xcc, 0xf0, 0x14, 0x76, 0x60, 0x07, 0x7b, 0x68, 0x07, 0x37, 0x68, 0x87,
  0x72, 0x68, 0x07, 0x37, 0x80, 0x87, 0x70, 0x90, 0x87, 0x70, 0x60, 0x07,
  0x76, 0x28, 0x07, 0x76, 0xf8, 0x05, 0x76, 0x78, 0x87, 0x77, 0x80, 0x87,
  0x5f, 0x08, 0x87, 0x71, 0x18, 0x87, 0x72, 0x98, 0x87, 0x79, 0x98, 0x81,
  0x2c, 0xee, 0xf0, 0x0e, 0xee, 0xe0, 0x0e, 0xf5, 0xc0, 0x0e, 0xec, 0x30,
  0x03, 0x62, 0xc8, 0xa1, 0x1c, 0xe4, 0xa1, 0x1c, 0xcc, 0xa1, 0x1c, 0xe4,
  0xa1, 0x1c, 0xdc, 0x61, 0x1c, 0xca, 0x21, 0x1c, 0xc4, 0x81, 0x1d, 0xca,
  0x61, 0x06, 0xd6, 0x90, 0x43, 0x39, 0xc8, 0x43, 0x39, 0x98, 0x43, 0x39,
  0xc8, 0x43, 0x39, 0xb8, 0xc3, 0x38, 0x94, 0x43, 0x38, 0x88, 0x03, 0x3b,
  0x94, 0xc3, 0x2f, 0xbc, 0x83, 0x3c, 0xfc, 0x82, 0x3b, 0xd4, 0x03, 0x3b,
  0xb0, 0xc3, 0x0c, 0xc4, 0x21, 0x07, 0x7c, 0x70, 0x03, 0x7a, 0x28, 0x87,
  0x76, 0x80, 0x87, 0x19, 0xd1, 0x43, 0x0e, 0xf8, 0xe0, 0x06, 0xe4, 0x20,
  0x0e, 0xe7, 0xe0, 0x06, 0xf6, 0x10, 0x0e, 0xf2, 0xc0, 0x0e, 0xe1, 0x90,
  0x0f, 0xef, 0x50, 0x0f, 0xf4, 0x00, 0x00, 0x00, 0x71, 0x20, 0x00, 0x00,
  0x20, 0x00, 0x00, 0x00, 0x06, 0xd0, 0xbc, 0x6c, 0x47, 0x04, 0x94, 0xf1,
  0x0a, 0x62, 0x23, 0x4d, 0x56, 0xb0, 0x0d, 0x97, 0xef, 0x3c, 0xbe, 0x10,
  0x50, 0x45, 0x41, 0x44, 0xa5, 0x03, 0x0c, 0x25, 0x61, 0x00, 0x02, 0xe6,
  0x17, 0xb7, 0x6d, 0x07, 0xd2, 0x70, 0xf9, 0xce, 0xe3, 0x0b, 0x11, 0x01,
  0x4c, 0x44, 0x08, 0x34, 0xc3, 0x42, 0xd8, 0x80, 0x33, 0x5c, 0xbe, 0xf3,
  0xf8, 0x83, 0x33, 0xdd, 0x7e, 0x71, 0xdb, 0x16, 0x30, 0x0d, 0x97, 0xef,
  0x3c, 0xfe, 0xe2, 0x00, 0x83, 0xd8, 0x3c, 0xd4, 0xe4, 0x17, 0xb7, 0x6d,
  0x02, 0xd5, 0x70, 0xf9, 0xce, 0xe3, 0x4b, 0x93, 0x13, 0x11, 0x28, 0x35,
  0x3d, 0xd4, 0xe4, 0x17, 0xb7, 0x6d, 0x06, 0xd2, 0x70, 0xf9, 0xce, 0xe3,
  0x4f, 0x44, 0x34, 0x21, 0x40, 0x84, 0xf9, 0xc5, 0x6d, 0x1b, 0xc1, 0x33,
  0x5c, 0xbe, 0xf3, 0xf8, 0x54, 0x03, 0x44, 0x98, 0x5f, 0xdc, 0x36, 0x00,
  0x61, 0x20, 0x00, 0x00, 0x98, 0x01, 0x00, 0x00, 0x13, 0x04, 0x41, 0x2c,
  0x10, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x54, 0x8d, 0x00, 0x10,
  0x51, 0x5c, 0x33, 0x00, 0xa5, 0x50, 0x76, 0x25, 0x57, 0x12, 0x45, 0x51,
  0x16, 0x85, 0x51, 0x6e, 0x25, 0x43, 0x45, 0x09, 0xd0, 0x30, 0x46, 0x00,
  0x82, 0x20, 0x88, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x23, 0x06, 0x09, 0x00,
  0x82, 0x60, 0x60, 0x81, 0x41, 0x12, 0x79, 0x9e, 0x33, 0x62, 0x90, 0x00,
  0x20, 0x08, 0x06, 0xc6, 0x19, 0x5c, 0xdb, 0x57, 0x35, 0x23, 0x06, 0x09,
  0x00, 0x82, 0x60, 0x60, 0xa0, 0x01, 0xc6, 0x81, 0x01, 0xe1, 0x8c, 0x18,
  0x24, 0x00, 0x08, 0x82, 0x81, 0x91, 0x06, 0x59, 0x17, 0x06, 0xd4, 0x33,
  0x62, 0x90, 0x00, 0x20, 0x08, 0x06, 0x86, 0x1a, 0x68, 0x9e, 0x18, 0x58,
  0xd0, 0x88, 0x41, 0x02, 0x80, 0x20, 0x18, 0x18, 0x6b, 0xb0, 0x71, 0x63,
  0x90, 0x45, 0x23, 0x06, 0x09, 0x00, 0x82, 0x60, 0x60, 0xb0, 0x01, 0xd7,
  0x91, 0x01, 0x22, 0x8d, 0x18, 0x24, 0x00, 0x08, 0x82, 0x81, 0xd1, 0x06,
  0x9d, 0x19, 0x94, 0xc1, 0x36, 0x8d, 0x18, 0x24, 0x00, 0x08, 0x82, 0x81,
  0xe1, 0x06, 0xde, 0x19, 0x98, 0x81, 0x42, 0x8d, 0x18, 0x24, 0x00, 0x08,
  0x82, 0x81, 0xf1, 0x06, 0x1f, 0x1a, 0x9c, 0x81, 0x56, 0x8d, 0x18, 0x24,
  0x00, 0x08, 0x82, 0x81, 0x01, 0x07, 0x60, 0x80, 0x06, 0x68, 0xe0, 0x59,
  0x23, 0x06, 0x09, 0x00, 0x82, 0x60, 0x60, 0xc4, 0x41, 0x18, 0xa4, 0x41,
  0x1a, 0x34, 0xd7, 0x88, 0x41, 0x02, 0x80, 0x20, 0x18, 0x18, 0x72, 0x20,
  0x06, 0x6a, 0xa0, 0x06, 0x1d, 0x36, 0x62, 0x90, 0x00, 0x20, 0x08, 0x06,
  0xc6, 0x1c, 0x8c, 0xc1, 0x1a, 0xac, 0xc1, 0x97, 0x8d, 0x18, 0x24, 0x00,
  0x08, 0x82, 0x81, 0x41, 0x07, 0x64, 0x40, 0x06, 0x6c, 0x20, 0x06, 0xda,
  0x88, 0x41, 0x02, 0x80, 0x20, 0x18, 0x18, 0x75, 0x50, 0x06, 0x65, 0xd0,
  0x06, 0xd1, 0x36, 0x62, 0x90, 0x00, 0x20, 0x08, 0x06, 0x86, 0x1d, 0x98,
  0x81, 0x19, 0xb8, 0x41, 0x18, 0x70, 0x23, 0x06, 0x09, 0x00, 0x82, 0x60,
  0x60, 0xdc, 0xc1, 0x19, 0x9c, 0xc1, 0x1b, 0x8c, 0x41, 0x37, 0x62, 0x90,
  0x00, 0x20, 0x08, 0x06, 0x06, 0x1e, 0xa0, 0x01, 0x1a, 0xc4, 0x81, 0x19,
  0x78, 0x23, 0x06, 0x09, 0x00, 0x82, 0x60, 0x60, 0xe4, 0x41, 0x1a, 0xa4,
  0x81, 0x1c, 0x54, 0xdf, 0x88, 0x41, 0x02, 0x80, 0x20, 0x18, 0x18, 0x7a,
  0xa0, 0x06, 0x6a, 0x30, 0x07, 0x65, 0x00, 0x06, 0x23, 0x06, 0x09, 0x00,
  0x82, 0x60, 0x60, 0xec, 0xc1, 0x1a, 0xac, 0x01, 0x1d, 0x9c, 0x41, 0x18,
  0x8c, 0x18, 0x24, 0x00, 0x08, 0x82, 0x81, 0xc1, 0x07, 0x6c, 0xc0, 0x06,
  0x6d, 0xa0, 0x06, 0x62, 0x30, 0x62, 0x90, 0x00, 0x20, 0x08, 0x06, 0x46,
  0x1f, 0xb4, 0x41, 0x1b, 0xb8, 0x41, 0x36, 0x06, 0x23, 0x06, 0x09, 0x00,
  0x82, 0x60, 0x60, 0xf8, 0x81, 0x1b, 0xb8, 0xc1, 0x1b, 0xa4, 0x01, 0x19,
  0x8c, 0x18, 0x24, 0x00, 0x08, 0x82, 0x81, 0xf1, 0x07, 0x6f, 0xf0, 0x06,
  0x70, 0xb0, 0x06, 0x65, 0x60, 0x0c, 0x24, 0x9f, 0x11, 0x03, 0x04, 0x00,
  0x41, 0x30, 0x98, 0xf8, 0x00, 0x0d, 0x20, 0x26, 0x18, 0x31, 0x40, 0x00,
  0x10, 0x04, 0x83, 0xa9, 0x0f, 0xd2, 0x00, 0x62, 0x82, 0x11, 0x03, 0x04,
  0x00, 0x41, 0x30, 0x98, 0xfc, 0x40, 0x0d, 0x20, 0x26, 0x30, 0x86, 0x92,
  0xcf, 0x88, 0x01, 0x02, 0x80, 0x20, 0x18, 0x4c, 0xa0, 0xc0, 0x06, 0x14,
  0x13, 0x8c, 0x18, 0x20, 0x00, 0x08, 0x82, 0xc1, 0x14, 0x0a, 0x6d, 0x40,
  0x31, 0xc1, 0x88, 0x01, 0x02, 0x80, 0x20, 0x18, 0x4c, 0xa2, 0xe0, 0x06,
  0x14, 0x13, 0x18, 0x83, 0xc9, 0x67, 0xc4, 0x00, 0x01, 0x40, 0x10, 0x0c,
  0x26, 0x52, 0x80, 0x03, 0x8c, 0x09, 0x46, 0x0c, 0x10, 0x00, 0x04, 0xc1,
  0x60, 0x2a, 0x85, 0x38, 0xc0, 0x98, 0x60, 0xc4, 0x00, 0x01, 0x40, 0x10,
  0x0c, 0x26, 0x53, 0x90, 0x03, 0x8c, 0x09, 0x0c, 0xfb, 0xe4, 0x33, 0x62,
  0x80, 0x00, 0x20, 0x08, 0x06, 0x13, 0x2a, 0xd0, 0xc1, 0x87, 0x05, 0x23,
  0x06, 0x08, 0x00, 0x82, 0x60, 0x30, 0xa5, 0x42, 0x1d, 0x7c, 0x58, 0x60,
  0x97, 0x18, 0xc8, 0x67, 0xc4, 0x00, 0x01, 0x40, 0x10, 0x0c, 0xa6, 0x55,
  0xb8, 0x03, 0x31, 0xb8, 0x82, 0x11, 0x03, 0x04, 0x00, 0x41, 0x30, 0x98,
  0x58, 0x01, 0x0f, 0xc4, 0xe0, 0x0a, 0xcc, 0x2a, 0x03, 0xf9, 0x8c, 0x18,
  0x20, 0x00, 0x08, 0x82, 0xc1, 0xe4, 0x0a, 0x7a, 0x50, 0x06, 0x56, 0x30,
  0x62, 0x80, 0x00, 0x20, 0x08, 0x06, 0xd3, 0x2b, 0xec, 0x41, 0x19, 0x58,
  0xc1, 0x88, 0xc1, 0x01, 0x80, 0x20, 0x18, 0x44, 0xb1, 0x90, 0x07, 0x6f,
  0x70, 0x07, 0xa3, 0x09, 0x01, 0x30, 0x9a, 0x20, 0x04, 0xa3, 0x09, 0x83,
  0x30, 0x9a, 0x40, 0x0c, 0x23, 0x06, 0x07, 0x00, 0x82, 0x60, 0x10, 0xd9,
  0x82, 0x1f, 0xd0, 0xc1, 0x1e, 0x8c, 0x26, 0x04, 0xc0, 0x68, 0x82, 0x10,
  0x8c, 0x26, 0x0c, 0xc2, 0x68, 0x02, 0x31, 0x8c, 0x18, 0x1c, 0x00, 0x08,
  0x82, 0x41, 0xb4, 0x0b, 0xa3, 0x90, 0x07, 0x7f, 0x30, 0x9a, 0x10, 0x00,
  0xa3, 0x09, 0x42, 0x30, 0x9a, 0x30, 0x08, 0xa3, 0x09, 0xc4, 0x30, 0x62,
  0x70, 0x00, 0x20, 0x08, 0x06, 0x11, 0x38, 0xa0, 0x82, 0x1f, 0x8c, 0xc2,
  0x68, 0x42, 0x00, 0x8c, 0x26, 0x08, 0xc1, 0x68, 0xc2, 0x20, 0x8c, 0x26,
  0x10, 0x83, 0x4d, 0x66, 0x20, 0x9f, 0x11, 0x03, 0x04, 0x00, 0x41, 0x30,
  0x98, 0xca, 0x21, 0x16, 0xc6, 0x60, 0x0a, 0x46, 0x0c, 0x10, 0x00, 0x04,
  0xc1, 0x60, 0x32, 0x07, 0x59, 0x00, 0x83, 0x29, 0x18, 0x31, 0x40, 0x00,
  0x10, 0x04, 0x83, 0xe9, 0x1c, 0x66, 0x21, 0x0f, 0xa6, 0xc0, 0x24, 0x35,
  0x90, 0xcf, 0x88, 0x01, 0x02, 0x80, 0x20, 0x18, 0x4c, 0xe9, 0x50, 0x0b,
  0x67, 0x20, 0x05, 0x23, 0x06, 0x08, 0x00, 0x82, 0x60, 0x30, 0xa9, 0x83,
  0x2d, 0x90, 0x81, 0x14, 0x8c, 0x18, 0x20, 0x00, 0x08, 0x82, 0xc1, 0xb4,
  0x0e, 0xb7, 0xd0, 0x07, 0x52, 0x60, 0x91, 0x1b, 0xc8, 0x67, 0xc4, 0x00,
  0x01, 0x40, 0x10, 0x0c, 0xa6, 0x76, 0xc8, 0x85, 0x35, 0x88, 0x82, 0x11,
  0x03, 0x04, 0x00, 0x41, 0x30, 0x98, 0xdc, 0x41, 0x17, 0xd0, 0x20, 0x0a,
  0x46, 0x0c, 0x10, 0x00, 0x04, 0xc1, 0x60, 0x7a, 0x87, 0x5d, 0x08, 0x85,
  0x28, 0x30, 0x48, 0x0e, 0xe4, 0x33, 0x62, 0x80, 0x00, 0x20, 0x08, 0x06,
  0x53, 0x3c, 0xf4, 0xc2, 0x1b, 0x40, 0xc1, 0x88, 0x01, 0x02, 0x80, 0x20,
  0x18, 0x4c, 0xf2, 0xe0, 0x0b, 0x6c, 0x00, 0x05, 0x23, 0x06, 0x08, 0x00,
  0x82, 0x60, 0x30, 0xcd, 0xc3, 0x2f, 0x94, 0x02, 0x14, 0x8c, 0x18, 0x1c,
  0x00, 0x08, 0x82, 0x41, 0x54, 0x0f, 0xbd, 0x30, 0x0b, 0xea, 0x30, 0x9a,
  0x10, 0x00, 0xa3, 0x09, 0x42, 0x30, 0x9a, 0x30, 0x08, 0xa3, 0x09, 0xc4,
  0x30, 0x62, 0x70, 0x00, 0x20, 0x08, 0x06, 0x91, 0x3e, 0x88, 0x03, 0x2e,
  0xc8, 0xc3, 0x68, 0x42, 0x00, 0x8c, 0x26, 0x08, 0xc1, 0x68, 0xc2, 0x20,
  0x8c, 0x26, 0x10, 0xc3, 0x88, 0xc1, 0x01, 0x80, 0x20, 0x18, 0x44, 0xff,
  0x70, 0x0e, 0xbd, 0x30, 0x0f, 0xa3, 0x09, 0x01, 0x30, 0x9a, 0x20, 0x04,
  0xa3, 0x09, 0x83, 0x30, 0x9a, 0x40, 0x0c, 0xe6, 0x94, 0x82, 0x7c, 0x46,
  0x0c, 0x10, 0x00, 0x04, 0xc1, 0x60, 0x22, 0x09, 0x78, 0x10, 0x05, 0x27,
  0x18, 0x31, 0x40, 0x00, 0x10, 0x04, 0x83, 0xa9, 0x24, 0xe2, 0xe1, 0x0f,
  0x9c, 0x60, 0xc4, 0x00, 0x01, 0x40, 0x10, 0x0c, 0x26, 0x93, 0x90, 0x07,
  0x5c, 0x70, 0x02, 0x6b, 0x52, 0x41, 0x3e, 0x23, 0x06, 0x08, 0x00, 0x82,
  0x60, 0x30, 0xa1, 0x04, 0x3d, 0x98, 0x42, 0x13, 0x8c, 0x18, 0x20, 0x00,
  0x08, 0x82, 0xc1, 0x94, 0x12, 0xf5, 0x30, 0x0a, 0x4d, 0x30, 0x62, 0x80,
  0x00, 0x20, 0x08, 0x06, 0x93, 0x4a, 0xd8, 0x03, 0x2f, 0x34, 0x81, 0x31,
  0xad, 0x20, 0x9f, 0x11, 0x03, 0x04, 0x00, 0x41, 0x30, 0x98, 0x58, 0x02,
  0x1f, 0x54, 0x81, 0x09, 0x46, 0x0c, 0x10, 0x00, 0x04, 0xc1, 0x60, 0x6a,
  0x89, 0x7c, 0x38, 0x05, 0x26, 0x18, 0x31, 0x40, 0x00, 0x10, 0x04, 0x83,
  0xc9, 0x25, 0xf4, 0x01, 0x1c, 0x98, 0x60, 0xc4, 0xe0, 0x00, 0x40, 0x10,
  0x0c, 0x22, 0x98, 0xc0, 0x07, 0x77, 0x50, 0x89, 0xd1, 0x84, 0x00, 0x18,
  0x4d, 0x10, 0x82, 0xd1, 0x84, 0x41, 0x18, 0x31, 0x38, 0x00, 0x10, 0x04,
  0x83, 0x88, 0x26, 0xf8, 0x41, 0x1e, 0x54, 0x62, 0x34, 0x21, 0x00, 0x46,
  0x13, 0x84, 0x60, 0x34, 0x61, 0x10, 0x46, 0x0c, 0x0e, 0x00, 0x04, 0xc1,
  0x20, 0xc2, 0x09, 0x90, 0xb0, 0x87, 0x99, 0x18, 0x4d, 0x08, 0x80, 0xd1,
  0x04, 0x21, 0x18, 0x4d, 0x18, 0x04, 0x5b, 0x64, 0x41, 0x3e, 0x23, 0x06,
  0x08, 0x00, 0x82, 0x60, 0x30, 0xf1, 0x04, 0x4a, 0xc0, 0xc2, 0x12, 0x8c,
  0x18, 0x20, 0x00, 0x08, 0x82, 0xc1, 0xd4, 0x13, 0x29, 0xe1, 0x0a, 0x4b,
  0x60, 0x4a, 0x2d, 0xc8, 0x67, 0xc4, 0x00, 0x01, 0x40, 0x10, 0x0c, 0xa6,
  0x9f, 0x58, 0x89, 0x59, 0x50, 0x82, 0x11, 0x03, 0x04, 0x00, 0x41, 0x30,
  0x98, 0xc0, 0x82, 0x25, 0x62, 0x41, 0x09, 0x2c, 0xc1, 0x05, 0xf9, 0x8c,
  0x18, 0x20, 0x00, 0x08, 0x82, 0xc1, 0x24, 0x16, 0x2e, 0x61, 0x0b, 0x49,
  0x30, 0x62, 0x80, 0x00, 0x20, 0x08, 0x06, 0xd3, 0x58, 0xbc, 0x04, 0x2d,
  0x24, 0xc1, 0x88, 0xc1, 0x02, 0x80, 0x20, 0x18, 0x28, 0x67, 0x71, 0x12,
  0x07, 0x11, 0x1c, 0x44, 0x30, 0x62, 0x60, 0x00, 0x20, 0x08, 0x06, 0xcc,
  0x59, 0x9c, 0x44, 0x60, 0x41, 0x22, 0x1f, 0x13, 0x0e, 0xf9, 0xd8, 0x50,
  0xc8, 0x67, 0xc4, 0xe0, 0x00, 0x40, 0x10, 0x0c, 0x22, 0xb5, 0x90, 0x09,
  0x94, 0x30, 0x8b, 0xd1, 0x84, 0x60, 0xb0, 0xc0, 0x24, 0xe4, 0x33, 0x62,
  0x90, 0x00, 0x20, 0x08, 0x06, 0x08, 0x5c, 0xd8, 0x44, 0x5a, 0xa4, 0xc5,
  0x4f, 0x98, 0xc4, 0x88, 0x41, 0x02, 0x80, 0x20, 0x18, 0x20, 0x70, 0x61,
  0x13, 0x69, 0x91, 0x16, 0x2d, 0x51, 0x12, 0x23, 0x06, 0x09, 0x00, 0x82,
  0x60, 0x80, 0xc0, 0x85, 0x4d, 0xa8, 0x45, 0x5a, 0xfc, 0x84, 0x19, 0x8c,
  0x18, 0x24, 0x00, 0x08, 0x82, 0x01, 0x02, 0x17, 0x36, 0xa1, 0x16, 0x69,
  0xd1, 0x12, 0x62, 0x30, 0x62, 0x90, 0x00, 0x20, 0x08, 0x06, 0x08, 0x5c,
  0xd8, 0x84, 0x5a, 0xa4, 0x05, 0x4f, 0x78, 0x23, 0x06, 0x09, 0x00, 0x82,
  0x60, 0x80, 0xc0, 0x85, 0x4d, 0xa8, 0x45, 0x5a, 0xf4, 0x04, 0x4b, 0x8c,
  0x18, 0x24, 0x00, 0x08, 0x82, 0x01, 0x02, 0x17, 0x36, 0x21, 0x16, 0x69,
  0xf1, 0x13, 0xc6, 0x88, 0x41, 0x02, 0x80, 0x20, 0x18, 0x20, 0x70, 0x61,
  0x13, 0x62, 0x91, 0x16, 0x2d, 0x51, 0x8c, 0x18, 0x24, 0x00, 0x08, 0x82,
  0x01, 0x02, 0x17, 0x36, 0x21, 0x16, 0x69, 0xc1, 0x13, 0xc4, 0x88, 0x41,
  0x02, 0x80, 0x20, 0x18, 0x20, 0x70, 0x61, 0x13, 0x65, 0x91, 0x16, 0x3f,
  0xa1, 0x12, 0x23, 0x06, 0x09, 0x00, 0x82, 0x60, 0x80, 0xc0, 0x85, 0x4d,
  0x94, 0x45, 0x5a, 0xb4, 0x44, 0x4a, 0x8c, 0x18, 0x24, 0x00, 0x08, 0x82,
  0x01, 0x02, 0x17, 0x36, 0x51, 0x16, 0x69, 0xc1, 0x13, 0x28, 0x31, 0x62,
  0x90, 0x00, 0x20, 0x08, 0x06, 0x08, 0x5c, 0xd8, 0x44, 0x59, 0xa4, 0x45,
  0x4f, 0x04, 0x23, 0x06, 0x09, 0x00, 0x82, 0x60, 0x80, 0xc0, 0x85, 0x4d,
  0x84, 0x45, 0x5a, 0xfc, 0x44, 0x29, 0x8c, 0x18, 0x24, 0x00, 0x08, 0x82,
  0x01, 0x02, 0x17, 0x36, 0x11, 0x16, 0x69, 0xd1, 0x12, 0xa1, 0x30, 0x62,
  0x90, 0x00, 0x20, 0x08, 0x06, 0x08, 0x5c, 0xd8, 0x44, 0x58, 0xa4, 0x05,
  0x4f, 0xf4, 0xc1, 0x88, 0x41, 0x02, 0x80, 0x20, 0x18, 0x20, 0x70, 0x61,
  0x13, 0x61, 0x91, 0x16, 0x3d, 0x91, 0x07, 0x08, 0x00, 0x00, 0x00, 0x00,
  0x0f, 0x8e, 0xe5, 0x53, 0x09, 0xad, 0xa2, 0x20, 0x0f, 0xab, 0x6b, 0x2f,
  0x98, 0x55, 0x24, 0x9e, 0x17, 0x00, 0x01, 0x00, 0x20, 0xa0, 0x16, 0x00,
  0x78, 0x01, 0xed, 0x98, 0xbf, 0x4f, 0x14, 0x41, 0x14, 0xc7, 0xdf, 0xcd,
  0xce, 0xbe, 0x9b, 0x5d, 0xdf, 0xbd, 0xdd, 0x3b, 0x97, 0xf3, 0xc4, 0x93,
  0x3b, 0x94, 0x85, 0x23, 0x84, 0x1c, 0x17, 0x42, 0x2c, 0x10, 0x30, 0xd1,
  0xc2, 0xc2, 0x84, 0x42, 0x2d, 0x2d, 0x6d, 0xb4, 0xe1, 0x0f, 0x30, 0x88,
  0x95, 0x16, 0x44, 0x0d, 0x95, 0x95, 0x51, 0x63, 0xa4, 0x10, 0x2b, 0xfb,
  0x43, 0x8f, 0x42, 0x0b, 0x08, 0x7f, 0x83, 0x85, 0x9d, 0x95, 0x15, 0xdd,
  0xf9, 0x66, 0xb9, 0x53, 0x82, 0xd7, 0x1a, 0xa3, 0x99, 0x4f, 0xf2, 0xfd,
  0xbe, 0x9d, 0x99, 0xfd, 0x35, 0x3f, 0xaa, 0xef, 0x8b, 0x32, 0x64, 0x4c,
  0xdc, 0xee, 0x6e, 0xd9, 0x7a, 0x71, 0xe3, 0xd3, 0xde, 0xd5, 0x02, 0x80,
  0x6f, 0x1b, 0x82, 0xb6, 0x26, 0xac, 0x24, 0xd6, 0x65, 0xbc, 0x77, 0xbf,
  0xb1, 0xd6, 0xa3, 0x2e, 0x9a, 0x12, 0x59, 0x2e, 0x59, 0xeb, 0x91, 0x13,
  0xed, 0xed, 0x5e, 0x5b, 0x14, 0x2d, 0xc9, 0xe5, 0x6f, 0xd8, 0x77, 0x5c,
  0x11, 0x5d, 0x16, 0x59, 0xec, 0xfd, 0x7d, 0xd0, 0xda, 0x00, 0xfa, 0xff,
  0x75, 0x14, 0x4f, 0x64, 0x9f, 0xed, 0xeb, 0x28, 0x2f, 0xf9, 0xce, 0x82,
  0x14, 0xfb, 0x19, 0xf0, 0x9b, 0x9b, 0x8b, 0xbd, 0x6a, 0xfb, 0xe0, 0xfd,
  0x17, 0x33, 0xf0, 0xbf, 0xfe, 0x65, 0xfa, 0xfb, 0x64, 0xb9, 0x77, 0x7c,
  0x31, 0x04, 0x65, 0x4d, 0xf8, 0x36, 0x64, 0xfd, 0x57, 0x3b, 0xe9, 0xed,
  0x6b, 0x7f, 0x2f, 0x3f, 0x88, 0x06, 0x3c, 0x9e, 0xd1, 0x15, 0x6c, 0x1d,
  0x44, 0x5e, 0x84, 0xb0, 0x3c, 0x83, 0xb9, 0x87, 0x75, 0x54, 0x3b, 0x31,
  0x7a, 0x51, 0x0b, 0xf5, 0x72, 0x0b, 0xfd, 0x27, 0x2d, 0xc4, 0xfd, 0x96,
  0x0c, 0xff, 0x71, 0xec, 0x99, 0xed, 0x9f, 0x1f, 0xcc, 0x1d, 0xce, 0x02,
  0xd5, 0xe1, 0x4c, 0xd1, 0xb3, 0xa7, 0xe5, 0xff, 0xc7, 0xae, 0x41, 0x28,
  0xb2, 0xd8, 0xb5, 0xb0, 0xed, 0x3e, 0xb1, 0x35, 0x87, 0xc3, 0xe1, 0x70,
  0x38, 0x1c, 0x0e, 0x87, 0xc3, 0xe1, 0x70, 0x38, 0x1c, 0x8e, 0xbf, 0xcd,
  0xe8, 0x5a, 0x5b, 0x77, 0xd3, 0x47, 0x36, 0xad, 0xf0, 0xbc, 0xd7, 0xed,
  0x8f, 0xde, 0x9b, 0x76, 0xd7, 0xdb, 0x6c, 0x6f, 0x2d, 0x2b, 0xf0, 0xd2,
  0xa4, 0x63, 0xd2, 0xcf, 0x9d, 0x38, 0x7d, 0xda, 0xa9, 0xa4, 0xb0, 0xb3,
  0x12, 0xad, 0x6f, 0x27, 0x45, 0xe4, 0x24, 0x00, 0xae, 0x04, 0x8a, 0xab,
  0x81, 0xe6, 0x60, 0x0a, 0xa9, 0x52, 0x34, 0xdc, 0x48, 0x77, 0x3b, 0xfe,
  0x14, 0x90, 0x3f, 0xab, 0xc8, 0x9f, 0xd7, 0x14, 0xcc, 0x1a, 0xaa, 0x16,
  0x43, 0x0e, 0xa7, 0x91, 0x66, 0xd2, 0x8d, 0x4e, 0x30, 0x1f, 0x52, 0x38,
  0x67, 0xe8, 0x3e, 0xac, 0x6f, 0x6b, 0x6c, 0x30, 0xe0, 0x08, 0x87, 0x0b,
  0x21, 0xf9, 0xa6, 0x41, 0x38, 0x0d, 0x94, 0x33, 0x23, 0x64, 0x10, 0x19,
  0xc3, 0x06, 0xe5, 0x9b, 0x40, 0x81, 0x41, 0xc2, 0x39, 0x45, 0x2a, 0x1c,
  0xa1, 0x64, 0xd2, 0x30, 0x2e, 0x68, 0x0a, 0x43, 0xa4, 0xa8, 0x66, 0x28,
  0x7f, 0x41, 0x11, 0x01, 0x71, 0x05, 0x62, 0xae, 0x42, 0x89, 0xc7, 0x20,
  0x61, 0x2f, 0x2f, 0xfd, 0x4b, 0x9a, 0x0a, 0x32, 0x74, 0x5a, 0xc5, 0x74,
  0x56, 0x95, 0x28, 0x55, 0x09, 0xb1, 0x26, 0x1a, 0xd6, 0x31, 0x8d, 0xe8,
  0x12, 0x8d, 0xeb, 0x84, 0xf4, 0x2d, 0xb3, 0x1a, 0x43, 0x99, 0x13, 0xa8,
  0x72, 0x1d, 0x80, 0x23, 0x26, 0x3a, 0xc3, 0x31, 0xd5, 0xb8, 0x44, 0x13,
  0x9c, 0x50, 0x51, 0x95, 0x69, 0x48, 0x55, 0x69, 0x54, 0x01, 0xed, 0x1b,
  0x38, 0x40, 0x13, 0x84, 0x25, 0x5d, 0xa6, 0xb2, 0xae, 0xd2, 0x39, 0x0d,
  0x74, 0x92, 0xcb, 0x74, 0x8a, 0xab, 0x74, 0x9e, 0x81, 0x74, 0x4d, 0xb1,
  0x9e, 0xd4, 0xac, 0xf3, 0xc8, 0x8d, 0x71, 0xc3, 0x6b, 0x2a, 0x5c, 0x8d,
  0x64, 0x8d, 0xbe, 0x2b, 0x5a, 0x8d, 0x14, 0x1c, 0x50, 0xc1, 0xc7, 0x9a,
  0xd4, 0x13, 0x32, 0xdb, 0xa6, 0xd4, 0x9c, 0xf2, 0x70, 0x49, 0x6a, 0x5c,
  0x2c, 0x69, 0x80, 0x07, 0xdb, 0x59, 0x34, 0x78, 0x2c, 0xfc, 0xcb, 0x32,
  0xa3, 0x63, 0x7d, 0xc3, 0xd6, 0x94, 0x67, 0xc7, 0x7e, 0xc6, 0xbe, 0x59,
  0xca, 0xa6, 0xb3, 0x8c, 0xed, 0x68, 0x14, 0x9c, 0x71, 0xa3, 0x97, 0x31,
  0x8e, 0x89, 0x02, 0x51, 0x2e, 0x4b, 0x6e, 0x01, 0x0a, 0x22, 0xdd, 0x4b,
  0xec, 0xa2, 0xc7, 0x5f, 0xaf, 0x07, 0xef, 0x5e, 0xd5, 0xa3, 0xb7, 0x77,
  0x9b, 0xcf, 0x6e, 0x8e, 0x3d, 0xff, 0x01, 0x19, 0x8f, 0x59, 0x08, 0x00,
  0x17, 0x00, 0x01, 0x00, 0x10, 0x28, 0x17, 0x00, 0x78, 0x01, 0xed, 0x98,
  0xcf, 0x4f, 0x13, 0x41, 0x14, 0xc7, 0xa7, 0xb3, 0x33, 0xd3, 0xd9, 0xf1,
  0x75, 0xba, 0xad, 0x4b, 0xe9, 0xe2, 0x5a, 0x8b, 0xd6, 0x52, 0x44, 0x84,
  0x8a, 0x44, 0x0d, 0x3f, 0x9c, 0x28, 0x07, 0x62, 0x48, 0x38, 0x18, 0x8f,
  0x1e, 0x3c, 0x7b, 0xe1, 0x1f, 0x10, 0xe1, 0x60, 0xf4, 0x40, 0x34, 0x31,
  0xc6, 0x10, 0x31, 0x1e, 0xbc, 0xaa, 0xff, 0x42, 0xc1, 0x62, 0xe2, 0x05,
  0xa2, 0x37, 0x2f, 0x1c, 0x8c, 0x89, 0xff, 0x80, 0xff, 0x00, 0xce, 0x2b,
  0xbb, 0x86, 0xd4, 0x26, 0x9e, 0x8c, 0xd1, 0xcc, 0x27, 0xf9, 0xbe, 0x6f,
  0xf7, 0xed, 0x6e, 0x77, 0xe6, 0xbd, 0x39, 0xbd, 0x46, 0x3f, 0xe9, 0xb0,
  0xf1, 0xb9, 0x99, 0x45, 0x9f, 0x7e, 0xf2, 0x61, 0x77, 0x3e, 0x47, 0x08,
  0xc7, 0x0b, 0x0b, 0xc5, 0x60, 0x59, 0x0a, 0x31, 0x12, 0xf2, 0xbe, 0x84,
  0x91, 0x10, 0x89, 0x21, 0xa1, 0x6a, 0x75, 0xde, 0x0a, 0x31, 0x18, 0x12,
  0x32, 0x56, 0xbb, 0x3b, 0x0b, 0xb3, 0x56, 0x57, 0xec, 0xcf, 0x5f, 0xc0,
  0xff, 0xb8, 0x66, 0x75, 0xd5, 0x0a, 0xc1, 0xe7, 0x53, 0x70, 0x31, 0x85,
  0x44, 0xbf, 0x03, 0xd7, 0x88, 0xef, 0x1e, 0x7e, 0x3f, 0xe5, 0xf6, 0xd7,
  0xbb, 0x33, 0xd6, 0xe6, 0xac, 0x48, 0xf5, 0xf2, 0xee, 0x2c, 0x7a, 0xca,
  0xf5, 0xfb, 0x7e, 0xcf, 0x75, 0xfd, 0xcb, 0xa4, 0x7d, 0x42, 0xf6, 0x7a,
  0x14, 0x84, 0x61, 0xb0, 0x2c, 0x24, 0x7d, 0x4c, 0xfb, 0xfb, 0x22, 0xb9,
  0x4e, 0x7b, 0xb9, 0x65, 0xd5, 0xab, 0x9e, 0xc8, 0xbe, 0x05, 0xbd, 0x17,
  0xd8, 0x37, 0x41, 0x16, 0xc7, 0x45, 0xe6, 0x41, 0x55, 0xd0, 0xed, 0x40,
  0x78, 0xf9, 0xa6, 0x60, 0x8b, 0x4d, 0xc1, 0x1f, 0x37, 0x85, 0xf8, 0xd8,
  0xb4, 0xb7, 0xff, 0x38, 0x78, 0x76, 0x85, 0x15, 0x22, 0x32, 0x07, 0xbb,
  0x10, 0xf4, 0x60, 0xa7, 0xc2, 0xf3, 0xd0, 0x6c, 0x21, 0xd2, 0x4a, 0xfc,
  0x9f, 0x60, 0x0d, 0x94, 0x55, 0xca, 0xe1, 0xdd, 0xe2, 0x11, 0x39, 0x74,
  0x4c, 0x1c, 0x0e, 0x87, 0xc3, 0xe1, 0x70, 0x38, 0x1c, 0x0e, 0x87, 0xc3,
  0xe1, 0x70, 0x38, 0xfe, 0x0e, 0x83, 0x2b, 0x2d, 0xb6, 0x1f, 0x3d, 0x24,
  0x24, 0x20, 0x9e, 0xb7, 0xde, 0x7a, 0xe7, 0x3d, 0x6f, 0xed, 0x7b, 0x1b,
  0xad, 0x37, 0x8b, 0x94, 0x04, 0xd1, 0xd3, 0x76, 0x39, 0x62, 0xdb, 0x2b,
  0xde, 0x6a, 0xab, 0x11, 0x7d, 0x6a, 0x8f, 0x47, 0xcf, 0xda, 0x32, 0xb3,
  0xb2, 0xe5, 0x45, 0xb4, 0xbd, 0x94, 0x5f, 0xdb, 0x0c, 0x7d, 0xaa, 0xcb,
  0x3e, 0xd3, 0xb1, 0x2f, 0x74, 0x58, 0x90, 0x9a, 0x8f, 0x50, 0xe0, 0x13,
  0x0c, 0xf8, 0x94, 0x00, 0x7f, 0x44, 0x42, 0xb9, 0xa0, 0xb4, 0x18, 0xa5,
  0x20, 0x26, 0x19, 0x88, 0x19, 0x9b, 0x9b, 0x50, 0x10, 0x17, 0x40, 0xab,
  0x51, 0x09, 0x32, 0xda, 0x69, 0xfb, 0x53, 0x00, 0x6a, 0x52, 0xc1, 0x3d,
  0xb2, 0xb6, 0x09, 0xb2, 0xa1, 0x59, 0x9d, 0x68, 0x29, 0xeb, 0x5a, 0xcd,
  0x00, 0xe4, 0x54, 0x03, 0x7c, 0x55, 0x87, 0x40, 0x4a, 0xad, 0xa1, 0x01,
  0x05, 0x25, 0x41, 0x41, 0x1d, 0xc2, 0x61, 0xa5, 0x8b, 0x20, 0xe1, 0xe8,
  0x90, 0x82, 0xec, 0x18, 0x05, 0xe6, 0x2b, 0xe0, 0xb7, 0xd4, 0x72, 0xf6,
  0x22, 0x83, 0x90, 0x06, 0xba, 0x4a, 0x8b, 0xba, 0x46, 0x43, 0x7d, 0x96,
  0x96, 0x74, 0x99, 0xc6, 0x3a, 0xa6, 0x15, 0xdd, 0xa0, 0x54, 0x67, 0xaf,
  0x08, 0xe8, 0x63, 0x01, 0x0c, 0xb2, 0x22, 0x9c, 0x66, 0x21, 0x8c, 0xb2,
  0x12, 0x44, 0x2c, 0x86, 0xe3, 0xac, 0x02, 0xc3, 0x8c, 0x42, 0x49, 0x04,
  0x70, 0x52, 0x14, 0xa1, 0x2e, 0x42, 0x38, 0x27, 0x4a, 0x30, 0x20, 0x62,
  0xa8, 0x88, 0x0a, 0x9c, 0x11, 0x14, 0xfa, 0x75, 0x00, 0xa7, 0xec, 0x57,
  0x87, 0x74, 0x08, 0x63, 0xba, 0x04, 0xc7, 0x74, 0x0c, 0x27, 0x74, 0x05,
  0x46, 0x34, 0x05, 0x63, 0x96, 0xbe, 0x10, 0x69, 0xf8, 0x1c, 0xba, 0x6f,
  0xf8, 0x3c, 0xba, 0x32, 0x7c, 0x01, 0xfd, 0x88, 0xe1, 0x04, 0x1d, 0x0c,
  0x67, 0xe8, 0x39, 0xc3, 0x03, 0x74, 0x6d, 0x78, 0x88, 0x9e, 0x37, 0xbc,
  0x8c, 0x9e, 0x31, 0x9c, 0x0f, 0x31, 0xfd, 0x9d, 0xd2, 0x65, 0x3e, 0x2c,
  0x34, 0xf7, 0xa5, 0x8e, 0x93, 0x7c, 0x15, 0x9d, 0x1a, 0x5e, 0x43, 0xf7,
  0x0c, 0x6f, 0xa0, 0x33, 0xc3, 0xc7, 0xd1, 0x03, 0xc3, 0x2f, 0xa0, 0x17,
  0x0c, 0xbf, 0x84, 0x5e, 0x34, 0x7c, 0x1a, 0x9d, 0xd8, 0xef, 0x92, 0xd5,
  0xcd, 0x3e, 0xec, 0x6f, 0xd7, 0x70, 0x31, 0xc2, 0xd0, 0x95, 0x2b, 0x63,
  0xe8, 0xca, 0x05, 0x18, 0xba, 0x72, 0x03, 0x18, 0xa8, 0x87, 0xf7, 0x7e,
  0x8e, 0x9f, 0x3b, 0xd3, 0x3e, 0xd6, 0x99, 0xf5, 0x1d, 0x1e, 0x49, 0x77,
  0xd8, 0x4b, 0x66, 0x9d, 0x35, 0x2b, 0xdf, 0x2a, 0x43, 0x0e, 0x66, 0x82,
  0x39, 0x2b, 0x96, 0x4c, 0x0e, 0xf3, 0x8f, 0xbe, 0xdd, 0xf0, 0xdf, 0xbe,
  0xaa, 0xe6, 0x5f, 0xdf, 0x19, 0x5b, 0xbf, 0x59, 0x7b, 0xf9, 0x03, 0x26,
  0x56, 0x76, 0x7a, 0x00, 0x17, 0x00, 0x01, 0x00, 0x00, 0xc0, 0x16, 0x00,
  0x78, 0x01, 0xed, 0x98, 0xbf, 0x6b, 0x14, 0x51, 0x10, 0xc7, 0xe7, 0x76,
  0xdf, 0xbe, 0xdb, 0xdd, 0x4c, 0xe6, 0x36, 0xe7, 0xde, 0x7a, 0xc6, 0xf5,
  0x3c, 0x35, 0x1b, 0x2f, 0x39, 0x42, 0x72, 0x98, 0x60, 0x40, 0x93, 0x08,
  0x5a, 0x58, 0x08, 0x09, 0x88, 0x9d, 0xfe, 0x05, 0x36, 0x29, 0x52, 0xc7,
  0x58, 0x29, 0x12, 0x54, 0x52, 0x59, 0x04, 0x0b, 0x15, 0x2d, 0x54, 0xf0,
  0x0f, 0x90, 0x4b, 0x72, 0x29, 0x22, 0x98, 0x20, 0xa4, 0xf0, 0x47, 0x67,
  0x23, 0x58, 0x58, 0x88, 0xad, 0x42, 0x9c, 0xb9, 0xdc, 0xca, 0x11, 0xaf,
  0x15, 0x51, 0xde, 0x07, 0xbe, 0x33, 0x3b, 0x3b, 0xef, 0xf1, 0xde, 0x9b,
  0xf7, 0xaa, 0x59, 0x8d, 0xa0, 0xc9, 0xc7, 0x77, 0x2f, 0x6f, 0x89, 0x3f,
  0xbd, 0xb4, 0xb1, 0x75, 0xbe, 0x1b, 0xc0, 0x91, 0xa0, 0x8d, 0xd9, 0x50,
  0x2c, 0xc0, 0xe5, 0xd6, 0x78, 0x57, 0x4c, 0x8b, 0x32, 0xab, 0xca, 0x12,
  0xce, 0x88, 0x69, 0x91, 0x61, 0x6d, 0x6d, 0x5e, 0x98, 0x64, 0x4d, 0xf1,
  0xe7, 0x6f, 0x78, 0xac, 0x73, 0xac, 0xb3, 0x2c, 0x41, 0xc6, 0xa7, 0x68,
  0x31, 0x6d, 0xec, 0xdd, 0x4f, 0x3b, 0x16, 0x4b, 0xe6, 0xb6, 0xcf, 0x4f,
  0xf9, 0xbc, 0x31, 0x37, 0xc1, 0x4e, 0x96, 0x81, 0xaf, 0xc3, 0x0f, 0x27,
  0xbf, 0x7c, 0x7f, 0x2d, 0x71, 0x13, 0x5c, 0x76, 0x3a, 0xee, 0xeb, 0x5f,
  0x26, 0xbd, 0x27, 0x61, 0xb9, 0x43, 0x41, 0xa4, 0x56, 0x02, 0xb6, 0xee,
  0x31, 0x8d, 0x47, 0x5b, 0x71, 0x7a, 0x97, 0xab, 0xac, 0x4e, 0xf5, 0x14,
  0x76, 0x18, 0xf1, 0x9d, 0xc8, 0xb2, 0x34, 0x4c, 0x8f, 0xe8, 0xcc, 0x8d,
  0xb2, 0xb6, 0xd6, 0x03, 0x6d, 0xe7, 0x6a, 0x5a, 0x4d, 0xd7, 0xb4, 0x73,
  0xa7, 0xa6, 0xf5, 0x9b, 0x1a, 0xa7, 0xff, 0x38, 0xf2, 0x56, 0xd2, 0xf7,
  0xa3, 0x33, 0xbb, 0xa7, 0xd0, 0xd6, 0xee, 0x49, 0xb5, 0x6d, 0x8b, 0x03,
  0x50, 0x4a, 0xec, 0x7f, 0x8b, 0xd4, 0xc0, 0x67, 0xa5, 0xa4, 0xa7, 0x95,
  0x6a, 0xa4, 0x4f, 0x64, 0x46, 0x8c, 0xc1, 0x60, 0x30, 0x18, 0x0c, 0x06,
  0x83, 0xc1, 0x60, 0x30, 0x18, 0x0c, 0x06, 0xc3, 0xdf, 0xe2, 0xc8, 0x42,
  0x7d, 0x36, 0xb7, 0xb8, 0x52, 0xf4, 0x14, 0x39, 0x27, 0x14, 0xea, 0x31,
  0x85, 0x5d, 0xb0, 0xb0, 0x9d, 0x3d, 0xe9, 0xab, 0x98, 0xff, 0x85, 0x1e,
  0x90, 0x73, 0x4a, 0xa1, 0x53, 0x05, 0x54, 0x3b, 0xc9, 0x4d, 0x80, 0x00,
  0x6c, 0xfb, 0x51, 0x7d, 0xcd, 0x7e, 0x5c, 0xdf, 0xb1, 0x9f, 0xd4, 0x9f,
  0x4d, 0x5b, 0xa0, 0x27, 0x78, 0xde, 0x10, 0xa0, 0x96, 0x79, 0x53, 0xbe,
  0x0a, 0x7b, 0x14, 0xd9, 0x49, 0xd8, 0x70, 0x93, 0x57, 0x8d, 0x20, 0xb9,
  0xdb, 0x28, 0x26, 0xb0, 0xee, 0x55, 0x15, 0x12, 0xe7, 0xfd, 0x21, 0x5f,
  0x15, 0x39, 0xef, 0xf1, 0x5a, 0x39, 0x89, 0xc7, 0x78, 0x1d, 0x8e, 0x2b,
  0xc9, 0x66, 0x63, 0x24, 0x59, 0x6a, 0x5c, 0x83, 0xc5, 0x15, 0x15, 0x0f,
  0x92, 0xc7, 0x6b, 0x42, 0x5c, 0x21, 0x37, 0x8e, 0xc9, 0x97, 0x71, 0x13,
  0xbe, 0x72, 0x4a, 0x83, 0x98, 0x29, 0x55, 0x50, 0x87, 0x83, 0xe8, 0x95,
  0x62, 0xb4, 0xc2, 0x0a, 0x36, 0x73, 0x85, 0x71, 0x55, 0xa8, 0xc6, 0x14,
  0x0e, 0xc4, 0x98, 0x1d, 0x06, 0xf4, 0x0b, 0x31, 0x22, 0x28, 0x2a, 0x82,
  0xa6, 0x18, 0x5c, 0xea, 0x03, 0x9f, 0x02, 0x08, 0x28, 0x84, 0x3c, 0x95,
  0x01, 0x88, 0xae, 0xc4, 0xf3, 0x33, 0x00, 0x2f, 0xba, 0x23, 0x85, 0x07,
  0x22, 0x8d, 0x87, 0x22, 0x17, 0x93, 0xc8, 0xc7, 0x9e, 0x28, 0xc0, 0x42,
  0x94, 0xc7, 0x23, 0x11, 0x70, 0x0d, 0xde, 0x6e, 0x4b, 0x4b, 0x8b, 0x50,
  0x61, 0x2f, 0x6a, 0x2c, 0xa1, 0x8b, 0xfd, 0xe8, 0x63, 0x1e, 0x03, 0x8c,
  0xd8, 0x1e, 0x45, 0xc0, 0x1c, 0x29, 0x3c, 0x48, 0x1a, 0x0f, 0x93, 0x8b,
  0xc7, 0xc9, 0xc7, 0x35, 0xfb, 0x47, 0x7d, 0x1f, 0x05, 0xb8, 0x9f, 0xf2,
  0x78, 0x8c, 0x00, 0x69, 0x00, 0x89, 0xaa, 0x44, 0x54, 0x08, 0xa9, 0xd2,
  0xdf, 0x4f, 0xdf, 0x2c, 0x6b, 0xde, 0xf5, 0xc6, 0x3f, 0x74, 0x59, 0x0a,
  0xc0, 0x66, 0x8f, 0x00, 0x15, 0x18, 0x7d, 0xdf, 0xe5, 0x03, 0x58, 0x8a,
  0x63, 0x57, 0x83, 0xce, 0xb2, 0x0f, 0xf2, 0x7c, 0x31, 0xd7, 0x57, 0x0a,
  0x6c, 0xf7, 0x36, 0x07, 0x03, 0x31, 0x7b, 0xfe, 0xf5, 0x8a, 0xb1, 0x6c,
  0xc9, 0xfd, 0x6a, 0x0b, 0x37, 0xbb, 0x70, 0xaa, 0xd9, 0x83, 0x6b, 0x6f,
  0x15, 0x37, 0x99, 0x6b, 0xf5, 0x20, 0xfb, 0x58, 0xd2, 0x1b, 0xce, 0xc0,
  0x6e, 0xaf, 0xae, 0x9b, 0xa5, 0x5a, 0x1d, 0xbd, 0xdc, 0xed, 0x4f, 0x17,
  0xbd, 0xe7, 0x0f, 0xca, 0xb9, 0xa7, 0x57, 0x87, 0xef, 0x5d, 0xea, 0xbb,
  0xff, 0x13, 0x12, 0x96, 0x68, 0xa4, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x01, 0x02, 0x03, 0x00, 0x00, 0x04, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x2c, 0x00, 0x00, 0x78, 0x01, 0x63, 0x64,
  0x60, 0x60, 0x00, 0x61, 0x09, 0x20, 0x06, 0x01, 0x1d, 0x20, 0x96, 0x05,
  0x62, 0x26, 0x20, 0x06, 0x01, 0x15, 0x10, 0x01, 0x06, 0x0c, 0x0c, 0x00,
  0x0d, 0x40, 0x00, 0x8a, 0x78, 0x62, 0x6f, 0x70, 0x01, 0x00, 0x00, 0x00,
  0x7e, 0x02, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00
};
