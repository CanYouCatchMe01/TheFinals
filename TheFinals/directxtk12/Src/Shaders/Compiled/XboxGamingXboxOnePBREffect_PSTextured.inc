#if 0
;
; Input signature:
;
; Name                 Index   Mask Register SysValue  Format   Used
; -------------------- ----- ------ -------- -------- ------- ------
; TEXCOORD                 0   xy          0     NONE   float   xy  
; TEXCOORD                 1   xyzw        1     NONE   float   xyz 
; TEXCOORD                 2   xyz         2     NONE   float   xyz 
; COLOR                    0   xyzw        3     NONE   float       
;
;
; Output signature:
;
; Name                 Index   Mask Register SysValue  Format   Used
; -------------------- ----- ------ -------- -------- ------- ------
; SV_Target                0   xyzw        0   TARGET   float   xyzw
;
; shader debug name: C:\Users\marcu\Downloads\DirectXTK12-main\DirectXTK12-main\Src/Shaders/Compiled\XboxGamingXboxOnePBREffect_PSTextured.pdb
; shader hash: b5a1ba35f2dd4726e05ed6e2087acf67
;
; Pipeline Runtime Information: 
;
;PSVRuntimeInfo:
; Pixel Shader
; DepthOutput=0
; SampleFrequency=0
; MinimumExpectedWaveLaneCount: 0
; MaximumExpectedWaveLaneCount: 4294967295
; UsesViewID: false
; SigInputElements: 4
; SigOutputElements: 1
; SigPatchConstOrPrimElements: 0
; SigInputVectors: 4
; SigOutputVectors[0]: 1
; SigOutputVectors[1]: 0
; SigOutputVectors[2]: 0
; SigOutputVectors[3]: 0
; EntryFunctionName: PSTextured
;
;
; Input signature:
;
; Name                 Index             InterpMode DynIdx
; -------------------- ----- ---------------------- ------
; TEXCOORD                 0                 linear       
; TEXCOORD                 1                 linear       
; TEXCOORD                 2                 linear       
; COLOR                    0                 linear       
;
; Output signature:
;
; Name                 Index             InterpMode DynIdx
; -------------------- ----- ---------------------- ------
; SV_Target                0                              
;
; Buffer Definitions:
;
; cbuffer 
; {
;
;   [388 x i8] (type annotation not present)
;
; }
;
;
; Resource Bindings:
;
; Name                                 Type  Format         Dim      ID      HLSL Bind  Count
; ------------------------------ ---------- ------- ----------- ------- -------------- ------
;                                   cbuffer      NA          NA     CB0            cb0     1
;                                   sampler      NA          NA      S0             s0     1
;                                   sampler      NA          NA      S1             s1     1
;                                   texture     f32          2d      T0             t0     1
;                                   texture     f32          2d      T1             t1     1
;                                   texture     f32          2d      T2             t2     1
;                                   texture     f32        cube      T3             t4     1
;                                   texture     f32        cube      T4             t5     1
;
;
; ViewId state:
;
; Number of inputs: 16, outputs: 4
; Outputs dependent on ViewId: {  }
; Inputs contributing to computation of Outputs:
;   output 0 depends on inputs: { 0, 1, 4, 5, 6, 8, 9, 10 }
;   output 1 depends on inputs: { 0, 1, 4, 5, 6, 8, 9, 10 }
;   output 2 depends on inputs: { 0, 1, 4, 5, 6, 8, 9, 10 }
;   output 3 depends on inputs: { 0, 1 }
;
target datalayout = "e-m:e-p:32:32-i1:32-i8:32-i16:32-i32:32-i64:64-f16:32-f32:32-f64:64-n8:16:32:64"
target triple = "dxil-ms-xb1"

%dx.types.Handle = type { i8* }
%dx.types.CBufRet.f32 = type { float, float, float, float }
%dx.types.ResRet.f32 = type { float, float, float, float, i32 }
%dx.types.CBufRet.i32 = type { i32, i32, i32, i32 }
%"class.Texture2D<vector<float, 4> >" = type { <4 x float>, %"class.Texture2D<vector<float, 4> >::mips_type" }
%"class.Texture2D<vector<float, 4> >::mips_type" = type { i32 }
%"class.Texture2D<vector<float, 3> >" = type { <3 x float>, %"class.Texture2D<vector<float, 3> >::mips_type" }
%"class.Texture2D<vector<float, 3> >::mips_type" = type { i32 }
%"class.TextureCube<vector<float, 3> >" = type { <3 x float> }
%hostlayout.Constants = type { <3 x float>, [4 x <4 x float>], [3 x <3 x float>], [4 x <4 x float>], [4 x <4 x float>], [3 x <3 x float>], [3 x <3 x float>], <3 x float>, float, float, float, i32, float, float }
%struct.SamplerState = type { i32 }

define void @PSTextured() {
  %1 = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 0, i32 4, i32 5, i1 false)  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %2 = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 0, i32 3, i32 4, i1 false)  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %3 = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 0, i32 2, i32 2, i1 false)  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %4 = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 0, i32 1, i32 1, i1 false)  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %5 = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 0, i32 0, i32 0, i1 false)  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %6 = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 3, i32 1, i32 1, i1 false)  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %7 = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 3, i32 0, i32 0, i1 false)  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %8 = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 2, i32 0, i32 0, i1 false)  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %9 = call float @dx.op.loadInput.f32(i32 4, i32 2, i32 0, i8 0, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %10 = call float @dx.op.loadInput.f32(i32 4, i32 2, i32 0, i8 1, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %11 = call float @dx.op.loadInput.f32(i32 4, i32 2, i32 0, i8 2, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %12 = call float @dx.op.loadInput.f32(i32 4, i32 1, i32 0, i8 0, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %13 = call float @dx.op.loadInput.f32(i32 4, i32 1, i32 0, i8 1, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %14 = call float @dx.op.loadInput.f32(i32 4, i32 1, i32 0, i8 2, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %15 = call float @dx.op.loadInput.f32(i32 4, i32 0, i32 0, i8 0, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %16 = call float @dx.op.loadInput.f32(i32 4, i32 0, i32 0, i8 1, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %17 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %8, i32 0)  ; CBufferLoadLegacy(handle,regIndex)
  %18 = extractvalue %dx.types.CBufRet.f32 %17, 0
  %19 = extractvalue %dx.types.CBufRet.f32 %17, 1
  %20 = extractvalue %dx.types.CBufRet.f32 %17, 2
  %21 = fsub fast float %18, %12
  %22 = fsub fast float %19, %13
  %23 = fsub fast float %20, %14
  %24 = call float @dx.op.dot3.f32(i32 55, float %21, float %22, float %23, float %21, float %22, float %23)  ; Dot3(ax,ay,az,bx,by,bz)
  %25 = call float @dx.op.unary.f32(i32 25, float %24)  ; Rsqrt(value)
  %26 = fmul fast float %21, %25
  %27 = fmul fast float %22, %25
  %28 = fmul fast float %23, %25
  %29 = call %dx.types.ResRet.f32 @dx.op.sample.f32(i32 60, %dx.types.Handle %4, %dx.types.Handle %7, float %15, float %16, float undef, float undef, i32 0, i32 0, i32 undef, float undef)  ; Sample(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,clamp)
  %30 = extractvalue %dx.types.ResRet.f32 %29, 0
  %31 = extractvalue %dx.types.ResRet.f32 %29, 1
  %32 = fmul fast float %30, 2.000000e+00
  %33 = fmul fast float %31, 2.000000e+00
  %34 = fadd fast float %32, -1.000000e+00
  %35 = fadd fast float %33, -1.000000e+00
  %36 = call float @dx.op.dot2.f32(i32 54, float %34, float %35, float %34, float %35)  ; Dot2(ax,ay,bx,by)
  %37 = fsub fast float 1.000000e+00, %36
  %38 = call float @dx.op.unary.f32(i32 24, float %37)  ; Sqrt(value)
  %39 = call float @dx.op.unary.f32(i32 83, float %12)  ; DerivCoarseX(value)
  %40 = call float @dx.op.unary.f32(i32 83, float %13)  ; DerivCoarseX(value)
  %41 = call float @dx.op.unary.f32(i32 83, float %14)  ; DerivCoarseX(value)
  %42 = call float @dx.op.unary.f32(i32 84, float %12)  ; DerivCoarseY(value)
  %43 = call float @dx.op.unary.f32(i32 84, float %13)  ; DerivCoarseY(value)
  %44 = call float @dx.op.unary.f32(i32 84, float %14)  ; DerivCoarseY(value)
  %45 = call float @dx.op.unary.f32(i32 83, float %15)  ; DerivCoarseX(value)
  %46 = call float @dx.op.unary.f32(i32 83, float %16)  ; DerivCoarseX(value)
  %47 = call float @dx.op.unary.f32(i32 84, float %15)  ; DerivCoarseY(value)
  %48 = call float @dx.op.unary.f32(i32 84, float %16)  ; DerivCoarseY(value)
  %49 = fmul fast float %44, %40
  %50 = fmul fast float %43, %41
  %51 = fsub fast float %49, %50
  %52 = fmul fast float %42, %41
  %53 = fmul fast float %44, %39
  %54 = fsub fast float %52, %53
  %55 = fmul fast float %43, %39
  %56 = fmul fast float %42, %40
  %57 = fsub fast float %55, %56
  %58 = fmul fast float %57, %43
  %59 = fmul fast float %54, %44
  %60 = fsub fast float %58, %59
  %61 = fmul fast float %51, %44
  %62 = fmul fast float %57, %42
  %63 = fsub fast float %61, %62
  %64 = fmul fast float %54, %42
  %65 = fmul fast float %51, %43
  %66 = fsub fast float %64, %65
  %67 = fmul fast float %54, %41
  %68 = fmul fast float %57, %40
  %69 = fsub fast float %67, %68
  %70 = fmul fast float %57, %39
  %71 = fmul fast float %51, %41
  %72 = fsub fast float %70, %71
  %73 = fmul fast float %51, %40
  %74 = fmul fast float %54, %39
  %75 = fsub fast float %73, %74
  %76 = fmul fast float %60, %45
  %77 = call float @dx.op.tertiary.f32(i32 46, float %47, float %69, float %76)  ; FMad(a,b,c)
  %78 = fmul fast float %63, %45
  %79 = call float @dx.op.tertiary.f32(i32 46, float %47, float %72, float %78)  ; FMad(a,b,c)
  %80 = fmul fast float %66, %45
  %81 = call float @dx.op.tertiary.f32(i32 46, float %47, float %75, float %80)  ; FMad(a,b,c)
  %82 = call float @dx.op.dot3.f32(i32 55, float %77, float %79, float %81, float %77, float %79, float %81)  ; Dot3(ax,ay,az,bx,by,bz)
  %83 = call float @dx.op.unary.f32(i32 25, float %82)  ; Rsqrt(value)
  %84 = fmul fast float %60, %46
  %85 = call float @dx.op.tertiary.f32(i32 46, float %48, float %69, float %84)  ; FMad(a,b,c)
  %86 = fmul fast float %63, %46
  %87 = call float @dx.op.tertiary.f32(i32 46, float %48, float %72, float %86)  ; FMad(a,b,c)
  %88 = fmul fast float %66, %46
  %89 = call float @dx.op.tertiary.f32(i32 46, float %48, float %75, float %88)  ; FMad(a,b,c)
  %90 = call float @dx.op.dot3.f32(i32 55, float %85, float %87, float %89, float %85, float %87, float %89)  ; Dot3(ax,ay,az,bx,by,bz)
  %91 = call float @dx.op.unary.f32(i32 25, float %90)  ; Rsqrt(value)
  %92 = fmul fast float %91, %85
  %93 = fmul fast float %91, %87
  %94 = fmul fast float %91, %89
  %95 = fmul fast float %77, %34
  %96 = fmul fast float %95, %83
  %97 = call float @dx.op.tertiary.f32(i32 46, float %35, float %92, float %96)  ; FMad(a,b,c)
  %98 = call float @dx.op.tertiary.f32(i32 46, float %38, float %9, float %97)  ; FMad(a,b,c)
  %99 = fmul fast float %79, %34
  %100 = fmul fast float %99, %83
  %101 = call float @dx.op.tertiary.f32(i32 46, float %35, float %93, float %100)  ; FMad(a,b,c)
  %102 = call float @dx.op.tertiary.f32(i32 46, float %38, float %10, float %101)  ; FMad(a,b,c)
  %103 = fmul fast float %81, %34
  %104 = fmul fast float %103, %83
  %105 = call float @dx.op.tertiary.f32(i32 46, float %35, float %94, float %104)  ; FMad(a,b,c)
  %106 = call float @dx.op.tertiary.f32(i32 46, float %38, float %11, float %105)  ; FMad(a,b,c)
  %107 = call float @dx.op.dot3.f32(i32 55, float %98, float %102, float %106, float %98, float %102, float %106)  ; Dot3(ax,ay,az,bx,by,bz)
  %108 = call float @dx.op.unary.f32(i32 25, float %107)  ; Rsqrt(value)
  %109 = fmul fast float %108, %98
  %110 = fmul fast float %108, %102
  %111 = fmul fast float %108, %106
  %112 = call %dx.types.ResRet.f32 @dx.op.sample.f32(i32 60, %dx.types.Handle %5, %dx.types.Handle %7, float %15, float %16, float undef, float undef, i32 0, i32 0, i32 undef, float undef)  ; Sample(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,clamp)
  %113 = extractvalue %dx.types.ResRet.f32 %112, 0
  %114 = extractvalue %dx.types.ResRet.f32 %112, 1
  %115 = extractvalue %dx.types.ResRet.f32 %112, 2
  %116 = call %dx.types.ResRet.f32 @dx.op.sample.f32(i32 60, %dx.types.Handle %3, %dx.types.Handle %7, float %15, float %16, float undef, float undef, i32 0, i32 0, i32 undef, float undef)  ; Sample(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,clamp)
  %117 = extractvalue %dx.types.ResRet.f32 %116, 0
  %118 = extractvalue %dx.types.ResRet.f32 %116, 1
  %119 = extractvalue %dx.types.ResRet.f32 %116, 2
  %120 = call float @dx.op.dot3.f32(i32 55, float %109, float %110, float %111, float %26, float %27, float %28)  ; Dot3(ax,ay,az,bx,by,bz)
  %121 = call float @dx.op.unary.f32(i32 7, float %120)  ; Saturate(value)
  %122 = fmul fast float %118, %118
  %123 = fmul fast float %119, %113
  %124 = fmul fast float %119, %114
  %125 = fmul fast float %119, %115
  %126 = fsub fast float %113, %123
  %127 = fsub fast float %114, %124
  %128 = fsub fast float %115, %125
  %129 = fmul fast float %126, %117
  %130 = fmul fast float %127, %117
  %131 = fmul fast float %128, %117
  %132 = fadd fast float %113, 0xBFA47AE140000000
  %133 = fadd fast float %114, 0xBFA47AE140000000
  %134 = fadd fast float %115, 0xBFA47AE140000000
  %135 = fmul fast float %119, %132
  %136 = fmul fast float %119, %133
  %137 = fmul fast float %119, %134
  %138 = fadd fast float %135, 0x3FA47AE140000000
  %139 = fadd fast float %136, 0x3FA47AE140000000
  %140 = fadd fast float %137, 0x3FA47AE140000000
  %141 = fmul fast float %138, %117
  %142 = fmul fast float %139, %117
  %143 = fmul fast float %140, %117
  br label %144

; <label>:144                                     ; preds = %144, %0
  %145 = phi float [ 0.000000e+00, %0 ], [ %241, %144 ]
  %146 = phi float [ 0.000000e+00, %0 ], [ %242, %144 ]
  %147 = phi float [ 0.000000e+00, %0 ], [ %243, %144 ]
  %148 = phi i32 [ 0, %0 ], [ %244, %144 ]
  %149 = add nuw nsw i32 %148, 16
  %150 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %8, i32 %149)  ; CBufferLoadLegacy(handle,regIndex)
  %151 = extractvalue %dx.types.CBufRet.f32 %150, 0
  %152 = extractvalue %dx.types.CBufRet.f32 %150, 1
  %153 = extractvalue %dx.types.CBufRet.f32 %150, 2
  %154 = fsub fast float -0.000000e+00, %151
  %155 = fsub fast float -0.000000e+00, %152
  %156 = fsub fast float -0.000000e+00, %153
  %157 = call float @dx.op.dot3.f32(i32 55, float %154, float %155, float %156, float %154, float %155, float %156)  ; Dot3(ax,ay,az,bx,by,bz)
  %158 = call float @dx.op.unary.f32(i32 25, float %157)  ; Rsqrt(value)
  %159 = fmul fast float %158, %154
  %160 = fmul fast float %158, %155
  %161 = fmul fast float %158, %156
  %162 = fadd fast float %159, %26
  %163 = fadd fast float %160, %27
  %164 = fadd fast float %161, %28
  %165 = call float @dx.op.dot3.f32(i32 55, float %162, float %163, float %164, float %162, float %163, float %164)  ; Dot3(ax,ay,az,bx,by,bz)
  %166 = call float @dx.op.unary.f32(i32 25, float %165)  ; Rsqrt(value)
  %167 = fmul fast float %162, %166
  %168 = fmul fast float %163, %166
  %169 = fmul fast float %164, %166
  %170 = call float @dx.op.dot3.f32(i32 55, float %109, float %110, float %111, float %159, float %160, float %161)  ; Dot3(ax,ay,az,bx,by,bz)
  %171 = call float @dx.op.unary.f32(i32 7, float %170)  ; Saturate(value)
  %172 = call float @dx.op.dot3.f32(i32 55, float %159, float %160, float %161, float %167, float %168, float %169)  ; Dot3(ax,ay,az,bx,by,bz)
  %173 = call float @dx.op.unary.f32(i32 7, float %172)  ; Saturate(value)
  %174 = call float @dx.op.dot3.f32(i32 55, float %109, float %110, float %111, float %167, float %168, float %169)  ; Dot3(ax,ay,az,bx,by,bz)
  %175 = call float @dx.op.unary.f32(i32 7, float %174)  ; Saturate(value)
  %176 = fmul fast float %118, 2.000000e+00
  %177 = fmul fast float %173, %173
  %178 = fmul fast float %177, %176
  %179 = fadd fast float %178, -5.000000e-01
  %180 = fsub fast float 1.000000e+00, %171
  %181 = fmul fast float %180, %180
  %182 = fmul fast float %181, %181
  %183 = fmul fast float %182, %180
  %184 = fmul fast float %183, %179
  %185 = fadd fast float %184, 1.000000e+00
  %186 = fsub fast float 1.000000e+00, %121
  %187 = fmul fast float %186, %186
  %188 = fmul fast float %187, %187
  %189 = fmul fast float %188, %186
  %190 = fmul fast float %189, %179
  %191 = fadd fast float %190, 1.000000e+00
  %192 = fmul fast float %185, %191
  %193 = fmul fast float %122, %122
  %194 = fadd fast float %193, -1.000000e+00
  %195 = fmul fast float %175, %175
  %196 = fmul fast float %195, %194
  %197 = fadd fast float %196, 1.000000e+00
  %198 = fmul fast float %197, %197
  %199 = fmul fast float %198, 0x400921FB60000000
  %200 = call float @dx.op.binary.f32(i32 35, float 0x3EB0C6F7A0000000, float %199)  ; FMax(a,b)
  %201 = fdiv fast float %193, %200
  %202 = fsub fast float 1.000000e+00, %141
  %203 = fsub fast float 1.000000e+00, %142
  %204 = fsub fast float 1.000000e+00, %143
  %205 = fsub fast float 1.000000e+00, %173
  %206 = fmul fast float %205, %205
  %207 = fmul fast float %206, %206
  %208 = fmul fast float %207, %205
  %209 = fmul fast float %208, %202
  %210 = fmul fast float %208, %203
  %211 = fmul fast float %208, %204
  %212 = fadd fast float %209, %141
  %213 = fadd fast float %210, %142
  %214 = fadd fast float %211, %143
  %215 = fsub fast float 1.000000e+00, %177
  %216 = fmul fast float %193, 2.500000e-01
  %217 = fmul fast float %216, %215
  %218 = fadd fast float %217, %177
  %219 = fdiv fast float 1.000000e+00, %218
  %220 = fmul fast float %219, %201
  %221 = fmul fast float %220, %212
  %222 = fmul fast float %220, %213
  %223 = fmul fast float %220, %214
  %224 = add nuw nsw i32 %148, 19
  %225 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %8, i32 %224)  ; CBufferLoadLegacy(handle,regIndex)
  %226 = extractvalue %dx.types.CBufRet.f32 %225, 0
  %227 = extractvalue %dx.types.CBufRet.f32 %225, 1
  %228 = extractvalue %dx.types.CBufRet.f32 %225, 2
  %229 = fmul fast float %226, %171
  %230 = fmul fast float %227, %171
  %231 = fmul fast float %228, %171
  %232 = fmul fast float %192, %129
  %233 = fmul fast float %192, %130
  %234 = fmul fast float %192, %131
  %235 = fadd fast float %221, %232
  %236 = fadd fast float %222, %233
  %237 = fadd fast float %223, %234
  %238 = fmul fast float %229, %235
  %239 = fmul fast float %230, %236
  %240 = fmul fast float %231, %237
  %241 = fadd fast float %238, %145
  %242 = fadd fast float %239, %146
  %243 = fadd fast float %240, %147
  %244 = add nuw nsw i32 %148, 1
  %245 = icmp eq i32 %244, 3
  br i1 %245, label %246, label %144

; <label>:246                                     ; preds = %144
  %247 = extractvalue %dx.types.ResRet.f32 %112, 3
  %248 = call %dx.types.ResRet.f32 @dx.op.sample.f32(i32 60, %dx.types.Handle %1, %dx.types.Handle %6, float %109, float %110, float %111, float undef, i32 undef, i32 undef, i32 undef, float undef)  ; Sample(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,clamp)
  %249 = extractvalue %dx.types.ResRet.f32 %248, 0
  %250 = extractvalue %dx.types.ResRet.f32 %248, 1
  %251 = extractvalue %dx.types.ResRet.f32 %248, 2
  %252 = fmul fast float %249, %129
  %253 = fmul fast float %250, %130
  %254 = fmul fast float %251, %131
  %255 = fadd fast float %252, %241
  %256 = fadd fast float %253, %242
  %257 = fadd fast float %254, %243
  %258 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %8, i32 23)  ; CBufferLoadLegacy(handle,regIndex)
  %259 = extractvalue %dx.types.CBufRet.i32 %258, 2
  %260 = sitofp i32 %259 to float
  %261 = fmul fast float %260, %118
  %262 = fsub fast float -0.000000e+00, %26
  %263 = fsub fast float -0.000000e+00, %27
  %264 = fsub fast float -0.000000e+00, %28
  %265 = call float @dx.op.dot3.f32(i32 55, float %262, float %263, float %264, float %109, float %110, float %111)  ; Dot3(ax,ay,az,bx,by,bz)
  %266 = fmul fast float %265, 2.000000e+00
  %267 = fmul fast float %266, %109
  %268 = fmul fast float %266, %110
  %269 = fmul fast float %266, %111
  %270 = fsub fast float %262, %267
  %271 = fsub fast float %263, %268
  %272 = fsub fast float %264, %269
  %273 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %2, %dx.types.Handle %6, float %270, float %271, float %272, float undef, i32 undef, i32 undef, i32 undef, float %261)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %274 = extractvalue %dx.types.ResRet.f32 %273, 0
  %275 = extractvalue %dx.types.ResRet.f32 %273, 1
  %276 = extractvalue %dx.types.ResRet.f32 %273, 2
  %277 = fmul fast float %274, %141
  %278 = fmul fast float %275, %142
  %279 = fmul fast float %276, %143
  %280 = fadd fast float %255, %277
  %281 = fadd fast float %256, %278
  %282 = fadd fast float %257, %279
  %283 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %8, i32 22)  ; CBufferLoadLegacy(handle,regIndex)
  %284 = extractvalue %dx.types.CBufRet.f32 %283, 3
  %285 = fmul fast float %284, %247
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 0, float %280)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 1, float %281)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 2, float %282)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 3, float %285)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  ret void
}

; Function Attrs: nounwind readnone
declare float @dx.op.loadInput.f32(i32, i32, i32, i8, i32) #0

; Function Attrs: nounwind
declare void @dx.op.storeOutput.f32(i32, i32, i32, i8, float) #1

; Function Attrs: nounwind readnone
declare float @dx.op.dot3.f32(i32, float, float, float, float, float, float) #0

; Function Attrs: nounwind readnone
declare float @dx.op.unary.f32(i32, float) #0

; Function Attrs: nounwind readonly
declare %dx.types.ResRet.f32 @dx.op.sample.f32(i32, %dx.types.Handle, %dx.types.Handle, float, float, float, float, i32, i32, i32, float) #2

; Function Attrs: nounwind readnone
declare float @dx.op.dot2.f32(i32, float, float, float, float) #0

; Function Attrs: nounwind readnone
declare float @dx.op.binary.f32(i32, float, float) #0

; Function Attrs: nounwind readonly
declare %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32, %dx.types.Handle, %dx.types.Handle, float, float, float, float, i32, i32, i32, float) #2

; Function Attrs: nounwind readonly
declare %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32, %dx.types.Handle, i32) #2

; Function Attrs: nounwind readonly
declare %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32, %dx.types.Handle, i32) #2

; Function Attrs: nounwind readnone
declare float @dx.op.tertiary.f32(i32, float, float, float) #0

; Function Attrs: nounwind readonly
declare %dx.types.Handle @dx.op.createHandle(i32, i8, i32, i32, i1) #2

attributes #0 = { nounwind readnone }
attributes #1 = { nounwind }
attributes #2 = { nounwind readonly }

!xbox.compiler.options = !{!0}
!llvm.ident = !{!1}
!dx.version = !{!2}
!dx.valver = !{!3}
!dx.shaderModel = !{!4}
!dx.resources = !{!5}
!dx.viewIdState = !{!18}
!dx.entryPoints = !{!19}

!0 = !{!"__XBOX_PER_THREAD_SCRATCH_SIZE_LIMIT_IN_BYTES", !"0"}
!1 = !{!"dxcxbox 2410.2410.11116.10741"}
!2 = !{i32 1, i32 0}
!3 = !{i32 1, i32 8}
!4 = !{!"ps", i32 6, i32 0}
!5 = !{!6, null, !13, !15}
!6 = !{!7, !9, !10, !11, !12}
!7 = !{i32 0, %"class.Texture2D<vector<float, 4> >"* undef, !"", i32 0, i32 0, i32 1, i32 2, i32 0, !8}
!8 = !{i32 0, i32 9}
!9 = !{i32 1, %"class.Texture2D<vector<float, 3> >"* undef, !"", i32 0, i32 1, i32 1, i32 2, i32 0, !8}
!10 = !{i32 2, %"class.Texture2D<vector<float, 3> >"* undef, !"", i32 0, i32 2, i32 1, i32 2, i32 0, !8}
!11 = !{i32 3, %"class.TextureCube<vector<float, 3> >"* undef, !"", i32 0, i32 4, i32 1, i32 5, i32 0, !8}
!12 = !{i32 4, %"class.TextureCube<vector<float, 3> >"* undef, !"", i32 0, i32 5, i32 1, i32 5, i32 0, !8}
!13 = !{!14}
!14 = !{i32 0, %hostlayout.Constants* undef, !"", i32 0, i32 0, i32 1, i32 388, null}
!15 = !{!16, !17}
!16 = !{i32 0, %struct.SamplerState* undef, !"", i32 0, i32 0, i32 1, i32 0, null}
!17 = !{i32 1, %struct.SamplerState* undef, !"", i32 0, i32 1, i32 1, i32 0, null}
!18 = !{[18 x i32] [i32 16, i32 4, i32 15, i32 15, i32 0, i32 0, i32 7, i32 7, i32 7, i32 0, i32 7, i32 7, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0]}
!19 = !{void ()* @PSTextured, !"PSTextured", !20, !5, null}
!20 = !{!21, !31, null}
!21 = !{!22, !25, !28, !30}
!22 = !{i32 0, !"TEXCOORD", i8 9, i8 0, !23, i8 2, i32 1, i8 2, i32 0, i8 0, !24}
!23 = !{i32 0}
!24 = !{i32 3, i32 3}
!25 = !{i32 1, !"TEXCOORD", i8 9, i8 0, !26, i8 2, i32 1, i8 4, i32 1, i8 0, !27}
!26 = !{i32 1}
!27 = !{i32 3, i32 7}
!28 = !{i32 2, !"TEXCOORD", i8 9, i8 0, !29, i8 2, i32 1, i8 3, i32 2, i8 0, !27}
!29 = !{i32 2}
!30 = !{i32 3, !"COLOR", i8 9, i8 0, !23, i8 2, i32 1, i8 4, i32 3, i8 0, null}
!31 = !{!32}
!32 = !{i32 0, !"SV_Target", i8 9, i8 16, !23, i8 0, i32 1, i8 4, i32 0, i8 0, !33}
!33 = !{i32 3, i32 15}

;
; DUMPING SHADER HARDWARE INSTRUCTIONS 
;
// Shader Type               : (PS)
// Shader Hw Stage           : (PS)

// Shader Instructions:
shader main
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  s_mov_b64     s[64:65], exec
  s_wqm_b64     exec, exec // wrscc
  s_mov_b32     s48, s9
  s_mov_b32     s6, s7
  s_mov_b32     s2, s5
  s_mov_b32     s40, s3
  s_mov_b32     s41, 0
  s_mov_b32     s5, 0
  s_mov_b32     s3, 0
  s_mov_b32     s7, 0
  s_mov_b32     s9, 0
  s_mov_b32     s49, 0
  s_mov_b32     s13, s12
  s_mov_b32     s12, s11
  s_load_dwordx8  s[24:31], s[8:9], 0x00
  s_load_dwordx8  s[16:23], s[6:7], 0x00
  s_load_dwordx8  s[32:39], s[2:3], 0x00
  s_load_dwordx8  s[0:7], s[4:5], 0x00
  s_mov_b32     s11, 0
  s_load_dwordx8  s[40:47], s[40:41], 0x00
  s_load_dwordx4  s[56:59], s[48:49], 0x00
  s_mov_b32     m0, s15
  v_interp_p1_f32  v4, v0, attr0.x
  v_interp_p1_f32  v5, v0, attr0.y
  v_interp_p2_f32  v4, v1, attr0.x
  v_interp_p2_f32  v5, v1, attr0.y
  s_load_dwordx4  s[48:51], s[10:11], 0x00
  s_waitcnt     lgkmcnt(0)
  image_sample  v[2:5], v[4:5], s[0:7], s[56:59] dmask:0x3
  s_or_b32      s53, s13, 0x00100000 // wrscc
  s_mov_b32     s52, s12
  s_mov_b32     s54, -1
  s_mov_b32     s55, 0x00024fac
  v_interp_p1_f32  v6, v0, attr2.x
  v_interp_p1_f32  v7, v0, attr2.y
  v_interp_p1_f32  v8, v0, attr2.z
  v_interp_p1_f32  v9, v0, attr1.x
  v_interp_p1_f32  v10, v0, attr1.y
  v_interp_p1_f32  v0, v0, attr1.z
  s_buffer_load_dwordx4  s[60:63], s[52:55], 0x00
  v_interp_p2_f32  v10, v1, attr1.y
  v_interp_p2_f32  v0, v1, attr1.z
  v_interp_p2_f32  v9, v1, attr1.x
  v_interp_p2_f32  v6, v1, attr2.x
  v_interp_p2_f32  v7, v1, attr2.y
  v_interp_p2_f32  v8, v1, attr2.z
  ds_swizzle_b32  v1, v9 offset:32768
  ds_swizzle_b32  v11, v9 offset:32853
  ds_swizzle_b32  v12, v10 offset:32768
  ds_swizzle_b32  v13, v10 offset:32853
  ds_swizzle_b32  v14, v0 offset:32768
  ds_swizzle_b32  v15, v0 offset:32853
  ds_swizzle_b32  v16, v9 offset:32938
  ds_swizzle_b32  v17, v10 offset:32938
  ds_swizzle_b32  v18, v0 offset:32938
  ds_swizzle_b32  v19, v4 offset:32768
  ds_swizzle_b32  v20, v4 offset:32853
  ds_swizzle_b32  v21, v5 offset:32768
  ds_swizzle_b32  v22, v5 offset:32853
  ds_swizzle_b32  v23, v4 offset:32938
  ds_swizzle_b32  v24, v5 offset:32938
  s_buffer_load_dwordx16  s[0:15], s[52:55], 0x40
  s_waitcnt     lgkmcnt(0)
  v_sub_f32     v10, s61, v10
  v_sub_f32     v25, s62, v0
  v_sub_f32     v9, s60, v9
  v_mul_legacy_f32  v0, v10, v10
  v_mac_legacy_f32  v0, v9, v9
  v_sub_f32     v11, v11, v1
  v_sub_f32     v13, v13, v12
  v_sub_f32     v15, v15, v14
  v_sub_f32     v1, v16, v1
  v_sub_f32     v12, v17, v12
  v_sub_f32     v14, v18, v14
  v_sub_f32     v16, v20, v19
  v_sub_f32     v17, v22, v21
  v_sub_f32     v18, v23, v19
  v_sub_f32     v19, v24, v21
  v_mac_legacy_f32  v0, v25, v25
  v_mul_legacy_f32  v20, v12, v15
  v_mul_legacy_f32  v21, v14, v11
  v_mul_legacy_f32  v22, v1, v13
  v_rsq_f32     v23, v0
  v_mad_legacy_f32  v0, v14, v13, -v20
  v_mad_legacy_f32  v20, v1, v15, -v21
  v_mad_legacy_f32  v21, v12, v11, -v22
  v_mul_legacy_f32  v24, v21, v1
  v_mul_legacy_f32  v22, v20, v14
  v_mul_legacy_f32  v26, v0, v12
  v_mul_legacy_f32  v27, v21, v13
  v_mul_legacy_f32  v28, v0, v15
  v_mad_legacy_f32  v14, v0, v14, -v24
  v_mul_legacy_f32  v29, v20, v11
  v_mad_legacy_f32  v12, v21, v12, -v22
  v_mad_legacy_f32  v1, v20, v1, -v26
  v_mad_legacy_f32  v15, v20, v15, -v27
  v_mul_legacy_f32  v20, v14, v16
  v_mad_legacy_f32  v11, v21, v11, -v28
  v_mul_legacy_f32  v14, v14, v17
  v_mad_legacy_f32  v0, v0, v13, -v29
  v_mul_legacy_f32  v13, v12, v16
  v_mul_legacy_f32  v16, v1, v16
  v_mul_legacy_f32  v12, v12, v17
  v_mac_legacy_f32  v20, v18, v11
  v_mul_legacy_f32  v1, v1, v17
  v_mad_legacy_f32  v11, v19, v11, v14
  v_mac_legacy_f32  v16, v18, v0
  v_mad_legacy_f32  v0, v19, v0, v1
  v_mac_legacy_f32  v12, v19, v15
  v_mul_legacy_f32  v1, v11, v11
  v_mac_legacy_f32  v1, v12, v12
  v_mac_legacy_f32  v13, v18, v15
  v_mul_legacy_f32  v18, v20, v20
  v_mac_legacy_f32  v1, v0, v0
  v_mad_legacy_f32  v14, v13, v13, v18
  s_waitcnt     vmcnt(0)
  v_mad_f32     v3, v3, 2.0, -1.0
  v_rsq_f32     v1, v1
  v_mac_legacy_f32  v14, v16, v16
  v_mul_legacy_f32  v21, v3, v3
  v_mad_f32     v2, v2, 2.0, -1.0
  v_mac_legacy_f32  v21, v2, v2
  v_rsq_f32     v14, v14
  v_sub_f32     v21, 1.0, v21
  v_sqrt_f32    v21, v21
  v_mul_legacy_f32  v12, v1, v12
  v_mul_legacy_f32  v11, v1, v11
  v_mul_legacy_f32  v0, v1, v0
  v_mul_legacy_f32  v1, v13, v2
  v_mul_legacy_f32  v1, v1, v14
  v_mac_legacy_f32  v1, v3, v12
  v_mad_legacy_f32  v6, v21, v6, v1
  v_mul_legacy_f32  v1, v20, v2
  v_mul_legacy_f32  v1, v1, v14
  v_mac_legacy_f32  v1, v3, v11
  v_mad_legacy_f32  v7, v21, v7, v1
  v_mul_legacy_f32  v1, v16, v2
  v_mul_legacy_f32  v1, v1, v14
  v_mul_legacy_f32  v11, v7, v7
  v_mad_legacy_f32  v0, v3, v0, v1
  v_mad_legacy_f32  v8, v21, v8, v0
  v_mac_legacy_f32  v11, v6, v6
  v_mac_legacy_f32  v11, v8, v8
  v_rsq_f32     v11, v11
  image_sample  v[0:3], v[4:5], s[40:47], s[56:59] dmask:0xf
  v_mul_legacy_f32  v17, s0, s0
  v_mac_legacy_f32  v17, s1, s1
  v_mul_legacy_f32  v13, v11, v6
  v_mul_legacy_f32  v14, v11, v7
  image_sample  v[5:8], v[4:5], s[32:39], s[56:59] dmask:0x7
  v_mul_legacy_f32  v10, v10, v23
  v_mul_legacy_f32  v9, v9, v23
  v_mul_legacy_f32  v12, v25, v23
  v_mul_legacy_f32  v8, v11, v8
  v_mul_legacy_f32  v4, v14, v10
  v_mad_legacy_f32  v11, v13, v9, v4
  v_mac_legacy_f32  v11, v8, v12
  v_sub_f32     v11, 1.0, v11 clamp
  s_mov_b32     s3, 0x3d23d70a
  s_waitcnt     vmcnt(1)
  v_add_f32     v16, 0xbd23d70a, v0
  s_waitcnt     vmcnt(0)
  v_mac_legacy_f32  v0, v0, -v7
  v_mul_legacy_f32  v18, v0, v5
  v_mad_legacy_f32  v0, s2, s2, v17
  v_rsq_f32     v0, v0
  v_mad_legacy_f32  v15, -v7, v1, v1
  v_add_f32     v1, 0xbd23d70a, v1
  v_mad_legacy_f32  v16, v7, v16, s3
  v_mad_legacy_f32  v21, v0, -s1, v10
  v_mad_legacy_f32  v20, v0, -s0, v9
  v_mul_legacy_f32  v23, v21, v21
  v_mad_legacy_f32  v22, v0, -s2, v12
  v_mac_legacy_f32  v23, v20, v20
  v_mac_legacy_f32  v23, v22, v22
  v_rsq_f32     v23, v23
  v_mul_legacy_f32  v25, v0, -s1
  v_mul_legacy_f32  v24, v0, -s0
  v_mul_legacy_f32  v0, v0, -s2
  v_mul_legacy_f32  v20, v20, v23
  v_mul_legacy_f32  v21, v21, v23
  v_mul_legacy_f32  v22, v22, v23
  v_mul_legacy_f32  v23, v14, v25
  v_mac_legacy_f32  v23, v13, v24
  v_mac_legacy_f32  v23, v8, v0
  v_sub_f32     v26, 1.0, v23 clamp
  v_mul_legacy_f32  v27, v26, v26
  v_mul_legacy_f32  v25, v25, v21
  v_mul_legacy_f32  v27, v27, v27
  v_mad_legacy_f32  v24, v24, v20, v25
  v_mul_legacy_f32  v21, v14, v21
  v_mul_legacy_f32  v26, v27, v26
  v_mul_legacy_f32  v27, v11, v11
  v_mad_legacy_f32  v0, v0, v22, v24
  v_mad_legacy_f32  v20, v13, v20, v21
  v_mul_legacy_f32  v27, v27, v27
  v_mac_legacy_f32  v20, v22, v8 clamp
  v_max_f32     v24, v0, v0 clamp
  v_mul_legacy_f32  v11, v27, v11
  v_mul_legacy_f32  v27, v6, v6
  v_mul_legacy_f32  v21, v24, v24
  v_add_f32     v22, v6, v6
  v_mad_legacy_f32  v28, v27, v27, -1.0
  v_mul_legacy_f32  v20, v20, v20
  v_mad_legacy_f32  v20, v20, v28, 1.0
  v_mad_legacy_f32  v25, v21, v22, -0.5
  v_mul_legacy_f32  v20, v20, v20
  v_mad_legacy_f32  v26, v26, v25, 1.0
  v_mad_legacy_f32  v25, v11, v25, 1.0
  v_mul_legacy_f32  v20, 0x40490fdb, v20
  v_mul_legacy_f32  v25, v26, v25
  v_mul_legacy_f32  v26, v27, v27
  v_max_f32     v20, 0x358637bd, v20
  v_mad_legacy_f32  v24, -v24, v24, 1.0
  v_mul_legacy_f32  v29, 0x3e800000, v26
  v_rcp_f32     v20, v20
  v_mac_legacy_f32  v21, v29, v24
  v_sub_f32     v0, 1.0, v0 clamp
  v_rcp_f32     v21, v21
  v_mul_legacy_f32  v27, v0, v0
  v_mul_legacy_f32  v27, v27, v27
  v_mul_legacy_f32  v20, v26, v20
  v_mad_legacy_f32  v1, v7, v1, s3
  v_mul_legacy_f32  v17, v16, v5
  v_mad_legacy_f32  v16, -v16, v5, 1.0
  v_mul_legacy_f32  v0, v27, v0
  v_mul_legacy_f32  v19, v1, v5
  v_mad_legacy_f32  v1, -v1, v5, 1.0
  v_mul_legacy_f32  v20, v21, v20
  v_mul_legacy_f32  v15, v15, v5
  v_mad_legacy_f32  v24, v0, v16, v17
  v_mul_legacy_f32  v21, v25, v18
  v_mac_legacy_f32  v21, v20, v24
  v_mad_legacy_f32  v27, v0, v1, v19
  v_mul_legacy_f32  v24, v25, v15
  v_mac_legacy_f32  v24, v20, v27
  v_mad_legacy_f32  v27, -v7, v2, v2
  v_add_f32     v2, 0xbd23d70a, v2
  v_mad_legacy_f32  v2, v7, v2, s3
  v_mul_legacy_f32  v30, v2, v5
  v_mad_legacy_f32  v2, -v2, v5, 1.0
  v_mul_legacy_f32  v27, v27, v5
  v_mad_legacy_f32  v0, v0, v2, v30
  v_mul_legacy_f32  v5, v25, v27
  v_mad_legacy_f32  v0, v20, v0, v5
  v_mul_legacy_f32  v5, s4, s4
  v_mac_legacy_f32  v5, s5, s5
  v_mac_legacy_f32  v5, s6, s6
  v_rsq_f32     v5, v5
  v_mad_legacy_f32  v20, v5, -s5, v10
  v_mad_legacy_f32  v7, v5, -s4, v9
  v_mul_legacy_f32  v25, v20, v20
  v_mac_legacy_f32  v25, v7, v7
  v_mad_legacy_f32  v31, v5, -s6, v12
  v_mac_legacy_f32  v25, v31, v31
  v_rsq_f32     v25, v25
  v_mul_legacy_f32  v32, v5, -s5
  v_mul_legacy_f32  v33, v14, v32
  v_mul_legacy_f32  v20, v20, v25
  v_mul_legacy_f32  v7, v7, v25
  v_mul_legacy_f32  v25, v31, v25
  v_mul_legacy_f32  v31, v5, -s4
  v_mul_legacy_f32  v32, v32, v20
  v_mul_legacy_f32  v20, v14, v20
  v_mac_legacy_f32  v33, v13, v31
  v_mad_legacy_f32  v31, v31, v7, v32
  v_mul_legacy_f32  v5, v5, -s6
  v_mad_legacy_f32  v7, v13, v7, v20
  v_mac_legacy_f32  v7, v25, v8 clamp
  v_mad_legacy_f32  v32, v8, v5, v33
  v_mad_legacy_f32  v5, v5, v25, v31
  v_max_f32     v20, v5, v5 clamp
  v_mul_legacy_f32  v7, v7, v7
  v_mul_legacy_f32  v25, v20, v20
  v_mad_legacy_f32  v20, -v20, v20, 1.0
  v_mad_legacy_f32  v7, v7, v28, 1.0
  v_mad_legacy_f32  v20, v29, v20, v25
  v_mul_legacy_f32  v7, v7, v7
  v_mad_legacy_f32  v22, v25, v22, -0.5
  v_sub_f32     v25, 1.0, v32 clamp
  v_mul_legacy_f32  v29, v25, v25
  v_mul_legacy_f32  v7, 0x40490fdb, v7
  v_max_f32     v7, 0x358637bd, v7
  v_mul_legacy_f32  v29, v29, v29
  v_mul_legacy_f32  v25, v29, v25
  v_rcp_f32     v7, v7
  v_mad_legacy_f32  v25, v25, v22, 1.0
  v_mad_legacy_f32  v22, v11, v22, 1.0
  v_sub_f32     v5, 1.0, v5 clamp
  v_rcp_f32     v20, v20
  v_mul_legacy_f32  v22, v25, v22
  v_mul_legacy_f32  v25, v5, v5
  v_mul_legacy_f32  v25, v25, v25
  v_mul_legacy_f32  v7, v26, v7
  v_mul_legacy_f32  v5, v25, v5
  v_mul_legacy_f32  v7, v20, v7
  v_mad_legacy_f32  v20, v5, v16, v17
  v_mul_legacy_f32  v25, v22, v18
  v_mad_legacy_f32  v20, v7, v20, v25
  v_mad_legacy_f32  v25, v5, v1, v19
  v_mul_legacy_f32  v26, v22, v15
  v_mad_legacy_f32  v5, v5, v2, v30
  v_mul_legacy_f32  v22, v22, v27
  s_buffer_load_dwordx8  s[0:7], s[52:55], 0x50
  v_mad_legacy_f32  v25, v7, v25, v26
  v_mad_legacy_f32  v5, v7, v5, v22
  v_max_f32     v7, v23, v23 clamp
  v_mul_legacy_f32  v22, s12, v7
  v_mul_legacy_f32  v21, v22, v21
  v_mul_legacy_f32  v22, s13, v7
  v_mul_legacy_f32  v7, s14, v7
  v_mul_legacy_f32  v0, v7, v0
  v_max_f32     v7, v32, v32 clamp
  s_waitcnt     lgkmcnt(0)
  v_mul_legacy_f32  v23, s0, v7
  v_mad_legacy_f32  v20, v23, v20, v21
  v_mul_legacy_f32  v23, s8, s8
  v_mac_legacy_f32  v23, s9, s9
  v_mac_legacy_f32  v23, s10, s10
  v_rsq_f32     v23, v23
  v_mul_legacy_f32  v21, s1, v7
  v_mul_legacy_f32  v7, s2, v7
  v_mac_legacy_f32  v0, v7, v5
  v_mad_legacy_f32  v7, v23, -s9, v10
  v_mul_legacy_f32  v22, v22, v24
  v_mad_legacy_f32  v5, v23, -s8, v9
  v_mul_legacy_f32  v24, v7, v7
  v_mad_legacy_f32  v21, v21, v25, v22
  v_mad_legacy_f32  v22, v23, -s10, v12
  v_mac_legacy_f32  v24, v5, v5
  v_mac_legacy_f32  v24, v22, v22
  v_rsq_f32     v24, v24
  v_mul_legacy_f32  v25, v23, -s9
  v_mul_legacy_f32  v26, v14, v25
  v_mul_legacy_f32  v7, v7, v24
  v_mul_legacy_f32  v25, v25, v7
  v_mul_legacy_f32  v5, v5, v24
  v_mul_legacy_f32  v22, v22, v24
  v_mul_legacy_f32  v24, v23, -s8
  v_mac_legacy_f32  v26, v13, v24
  v_mad_legacy_f32  v24, v24, v5, v25
  v_mul_legacy_f32  v23, v23, -s10
  v_mad_legacy_f32  v25, v8, v23, v26
  v_mad_legacy_f32  v23, v23, v22, v24
  v_mul_legacy_f32  v24, v6, v6
  v_mul_legacy_f32  v7, v14, v7
  v_mad_legacy_f32  v5, v13, v5, v7
  v_mul_legacy_f32  v24, v24, v24
  v_max_f32     v7, v23, v23 clamp
  v_mac_legacy_f32  v5, v22, v8 clamp
  v_mul_legacy_f32  v22, v7, v7
  v_mad_legacy_f32  v7, -v7, v7, 1.0
  v_mul_legacy_f32  v24, 0x3e800000, v24
  v_mad_legacy_f32  v7, v24, v7, v22
  v_add_f32     v24, v6, v6
  v_mad_legacy_f32  v22, v22, v24, -0.5
  v_sub_f32     v24, 1.0, v25 clamp
  v_mul_legacy_f32  v26, v24, v24
  v_mul_legacy_f32  v26, v26, v26
  v_mul_legacy_f32  v24, v26, v24
  v_mad_legacy_f32  v24, v24, v22, 1.0
  v_mad_legacy_f32  v11, v11, v22, 1.0
  v_mul_legacy_f32  v22, v6, v6
  v_mul_legacy_f32  v5, v5, v5
  v_mad_legacy_f32  v22, v22, v22, -1.0
  v_mad_legacy_f32  v5, v5, v22, 1.0
  v_mul_legacy_f32  v5, v5, v5
  v_mul_legacy_f32  v5, 0x40490fdb, v5
  v_max_f32     v5, 0x358637bd, v5
  v_rcp_f32     v5, v5
  v_mul_legacy_f32  v11, v24, v11
  v_mul_legacy_f32  v24, v6, v6
  v_mul_legacy_f32  v24, v24, v24
  v_sub_f32     v23, 1.0, v23 clamp
  v_rcp_f32     v7, v7
  v_mul_legacy_f32  v5, v24, v5
  v_mul_legacy_f32  v24, v23, v23
  v_mul_legacy_f32  v24, v24, v24
  v_mul_legacy_f32  v23, v24, v23
  v_mad_legacy_f32  v16, v23, v16, v17
  v_mul_legacy_f32  v5, v7, v5
  v_mul_legacy_f32  v24, v11, v18
  v_max_f32     v22, v25, v25 clamp
  v_mad_legacy_f32  v16, v5, v16, v24
  v_mul_legacy_f32  v24, v11, v15
  v_mad_legacy_f32  v1, v23, v1, v19
  v_mad_legacy_f32  v2, v23, v2, v30
  v_mul_legacy_f32  v11, v11, v27
  v_mul_legacy_f32  v7, s4, v22
  v_mul_legacy_f32  v23, s5, v22
  v_mad_legacy_f32  v1, v5, v1, v24
  v_mad_legacy_f32  v2, v5, v2, v11
  v_mad_legacy_f32  v11, v7, v16, v20
  v_mad_legacy_f32  v16, v23, v1, v21
  v_cubema_f32  v1, v13, v14, v8
  v_rcp_f32     v1, abs(v1)
  v_mul_legacy_f32  v22, s6, v22
  v_mad_legacy_f32  v20, v22, v2, v0
  v_cubesc_f32  v0, v13, v14, v8
  v_cubetc_f32  v5, v13, v14, v8
  v_madak_f32   v0, v0, v1, 0x3fc00000
  v_madak_f32   v1, v5, v1, 0x3fc00000
  v_cubeid_f32  v2, v13, v14, v8
  v_mov_b32     v5, 0x3fc00000
  s_and_b64     exec, exec, s[64:65] // wrscc
  s_buffer_load_dword  s0, s[52:55], 0x5b
  s_buffer_load_dword  s1, s[52:55], 0x5e
  v_mad_legacy_f32  v4, -v9, v13, -v4
  v_mac_legacy_f32  v4, v12, -v8 mul:2
  v_mad_legacy_f32  v9, -v4, v13, -v9
  v_mad_legacy_f32  v10, -v4, v14, -v10
  v_mad_legacy_f32  v4, -v4, v8, -v12
  v_cubema_f32  v7, v9, v10, v4
  s_waitcnt     lgkmcnt(0)
  v_cvt_f32_i32  v8, s1
  v_rcp_f32     v12, abs(v7)
  v_cubetc_f32  v14, v9, v10, v4
  v_cubesc_f32  v13, v9, v10, v4
  image_sample  v[0:3], v[0:1], s[24:31], s[48:51] dmask:0x7 da
  v_mul_legacy_f32  v7, v8, v6
  v_cubeid_f32  v6, v9, v10, v4
  v_madak_f32   v4, v13, v12, 0x3fc00000
  v_mac_f32     v5, v14, v12
  image_sample_l  v[4:7], v[4:5], s[16:23], s[48:51] dmask:0x7 da
  v_mul_legacy_f32  v3, s0, v3
  s_waitcnt     vmcnt(1)
  v_mad_legacy_f32  v2, v2, v27, v20
  v_mad_legacy_f32  v0, v0, v18, v11
  v_mad_legacy_f32  v1, v1, v15, v16
  s_waitcnt     vmcnt(0)
  v_mad_legacy_f32  v5, v5, v19, v1
  v_mac_legacy_f32  v2, v6, v30
  v_mad_legacy_f32  v4, v4, v17, v0
  v_cvt_pkrtz_f16_f32  v0, v4, v5
  v_cvt_pkrtz_f16_f32  v1, v2, v3
  exp           mrt0, v0, v0, v1, v1 done compr vm
  s_endpgm      
end


NumVGPR=34,NumSGPR=68,LDS=0,Scratch=0,Occpancy=7


#endif

const unsigned char PBREffect_PSTextured[] = {
  0x44, 0x58, 0x42, 0x43, 0x60, 0x6f, 0x9a, 0xde, 0xee, 0x8a, 0xab, 0xe4,
  0x14, 0xbd, 0x06, 0x1a, 0x74, 0xa4, 0x7f, 0x8f, 0x01, 0x00, 0x00, 0x00,
  0x6c, 0x22, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00,
  0x50, 0x00, 0x00, 0x00, 0xf0, 0x00, 0x00, 0x00, 0x2c, 0x01, 0x00, 0x00,
  0x0c, 0x03, 0x00, 0x00, 0x94, 0x04, 0x00, 0x00, 0x1c, 0x05, 0x00, 0x00,
  0x38, 0x05, 0x00, 0x00, 0x53, 0x46, 0x49, 0x30, 0x08, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x49, 0x53, 0x47, 0x31,
  0x98, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x88, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x03, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x88, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0f, 0x07, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x88, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x07, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x91, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x54, 0x45, 0x58, 0x43,
  0x4f, 0x4f, 0x52, 0x44, 0x00, 0x43, 0x4f, 0x4c, 0x4f, 0x52, 0x00, 0x00,
  0x4f, 0x53, 0x47, 0x31, 0x34, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x28, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x53, 0x56, 0x5f, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x00, 0x00, 0x00,
  0x50, 0x53, 0x56, 0x30, 0xd8, 0x01, 0x00, 0x00, 0x34, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff,
  0x00, 0x00, 0x00, 0x00, 0x04, 0x01, 0x00, 0x04, 0x01, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x22, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00,
  0x04, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00,
  0x05, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x30, 0x00, 0x00, 0x00, 0x00, 0x54, 0x45, 0x58, 0x43, 0x4f, 0x4f, 0x52,
  0x44, 0x00, 0x54, 0x45, 0x58, 0x43, 0x4f, 0x4f, 0x52, 0x44, 0x00, 0x54,
  0x45, 0x58, 0x43, 0x4f, 0x4f, 0x52, 0x44, 0x00, 0x43, 0x4f, 0x4c, 0x4f,
  0x52, 0x00, 0x50, 0x53, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x64,
  0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x42, 0x00,
  0x03, 0x02, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x01, 0x01, 0x44, 0x00, 0x03, 0x02, 0x00, 0x00, 0x13, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x01, 0x02, 0x43, 0x00, 0x03, 0x02, 0x00, 0x00,
  0x1c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x03, 0x44, 0x00,
  0x03, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x44, 0x10, 0x03, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00,
  0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x07, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00,
  0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x52, 0x54, 0x53, 0x30, 0x80, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x0a, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x80, 0x01, 0x00, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x90, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xac, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xc8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xe4, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x1c, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x38, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x54, 0x01, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x70, 0x01, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x78, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x98, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff,
  0x01, 0x00, 0x00, 0x00, 0xb4, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xff, 0xff, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0xd0, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00,
  0xec, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff,
  0x01, 0x00, 0x00, 0x00, 0x08, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xff, 0xff, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x24, 0x01, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00,
  0x40, 0x01, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff,
  0x01, 0x00, 0x00, 0x00, 0x5c, 0x01, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x49, 0x4c, 0x44, 0x4e,
  0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x79, 0x00, 0x43, 0x3a, 0x5c, 0x55,
  0x73, 0x65, 0x72, 0x73, 0x5c, 0x6d, 0x61, 0x72, 0x63, 0x75, 0x5c, 0x44,
  0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x73, 0x5c, 0x44, 0x69, 0x72,
  0x65, 0x63, 0x74, 0x58, 0x54, 0x4b, 0x31, 0x32, 0x2d, 0x6d, 0x61, 0x69,
  0x6e, 0x5c, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x58, 0x54, 0x4b, 0x31,
  0x32, 0x2d, 0x6d, 0x61, 0x69, 0x6e, 0x5c, 0x53, 0x72, 0x63, 0x2f, 0x53,
  0x68, 0x61, 0x64, 0x65, 0x72, 0x73, 0x2f, 0x43, 0x6f, 0x6d, 0x70, 0x69,
  0x6c, 0x65, 0x64, 0x5c, 0x58, 0x62, 0x6f, 0x78, 0x47, 0x61, 0x6d, 0x69,
  0x6e, 0x67, 0x58, 0x62, 0x6f, 0x78, 0x4f, 0x6e, 0x65, 0x50, 0x42, 0x52,
  0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x5f, 0x50, 0x53, 0x54, 0x65, 0x78,
  0x74, 0x75, 0x72, 0x65, 0x64, 0x2e, 0x70, 0x64, 0x62, 0x00, 0x00, 0x00,
  0x48, 0x41, 0x53, 0x48, 0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xb5, 0xa1, 0xba, 0x35, 0xf2, 0xdd, 0x47, 0x26, 0xe0, 0x5e, 0xd6, 0xe2,
  0x08, 0x7a, 0xcf, 0x67, 0x44, 0x58, 0x49, 0x4c, 0x2c, 0x1d, 0x00, 0x00,
  0x60, 0x00, 0x00, 0x00, 0x4b, 0x07, 0x00, 0x00, 0x44, 0x58, 0x49, 0x4c,
  0x00, 0x01, 0x00, 0x00, 0x7c, 0x00, 0x00, 0x00, 0xfc, 0x10, 0x00, 0x00,
  0x58, 0x44, 0x41, 0x54, 0x06, 0x00, 0x00, 0x00, 0x24, 0x00, 0x00, 0x00,
  0x07, 0x00, 0x00, 0x00, 0x6c, 0x00, 0x00, 0x00, 0x14, 0x11, 0x00, 0x00,
  0x10, 0x00, 0x00, 0x00, 0x80, 0x11, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x90, 0x11, 0x00, 0x00, 0xb9, 0x08, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x4c, 0x1a, 0x00, 0x00, 0x38, 0x02, 0x00, 0x00,
  0x06, 0x00, 0x00, 0x00, 0x84, 0x1c, 0x00, 0x00, 0x91, 0x00, 0x00, 0x00,
  0x08, 0x00, 0x00, 0x00, 0x18, 0x1d, 0x00, 0x00, 0x11, 0x00, 0x00, 0x00,
  0x60, 0x00, 0x00, 0x00, 0x45, 0x04, 0x00, 0x00, 0x44, 0x58, 0x49, 0x4c,
  0x00, 0x01, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0xfc, 0x10, 0x00, 0x00,
  0x42, 0x43, 0xc0, 0xde, 0x21, 0x0c, 0x00, 0x00, 0x3c, 0x04, 0x00, 0x00,
  0x0b, 0x82, 0x20, 0x00, 0x02, 0x00, 0x00, 0x00, 0x13, 0x00, 0x00, 0x00,
  0x07, 0x81, 0x23, 0x91, 0x41, 0xc8, 0x04, 0x49, 0x06, 0x10, 0x32, 0x39,
  0x92, 0x01, 0x84, 0x0c, 0x25, 0x05, 0x08, 0x19, 0x1e, 0x04, 0x8b, 0x62,
  0x80, 0x18, 0x45, 0x02, 0x42, 0x92, 0x0b, 0x42, 0xc4, 0x10, 0x32, 0x14,
  0x38, 0x08, 0x18, 0x4b, 0x0a, 0x32, 0x62, 0x88, 0x48, 0x90, 0x14, 0x20,
  0x43, 0x46, 0x88, 0xa5, 0x00, 0x19, 0x32, 0x42, 0xe4, 0x48, 0x0e, 0x90,
  0x11, 0x23, 0xc4, 0x50, 0x41, 0x51, 0x81, 0x8c, 0xe1, 0x83, 0xe5, 0x8a,
  0x04, 0x31, 0x46, 0x06, 0x51, 0x18, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00,
  0x1b, 0x8c, 0xe0, 0xff, 0xff, 0xff, 0xff, 0x07, 0x40, 0x02, 0xa8, 0x0d,
  0x84, 0xf0, 0xff, 0xff, 0xff, 0xff, 0x03, 0x20, 0x6d, 0x30, 0x86, 0xff,
  0xff, 0xff, 0xff, 0x1f, 0x00, 0x09, 0xa8, 0x00, 0x49, 0x18, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x13, 0x82, 0x60, 0x42, 0x20, 0x4c, 0x08, 0x06,
  0x00, 0x00, 0x00, 0x00, 0x89, 0x20, 0x00, 0x00, 0x94, 0x00, 0x00, 0x00,
  0x32, 0x22, 0x88, 0x09, 0x20, 0x64, 0x85, 0x04, 0x13, 0x23, 0xa4, 0x84,
  0x04, 0x13, 0x23, 0xe3, 0x84, 0xa1, 0x90, 0x14, 0x12, 0x4c, 0x8c, 0x8c,
  0x0b, 0x84, 0xc4, 0x4c, 0x10, 0xd4, 0xc1, 0x08, 0x40, 0x09, 0x00, 0x0a,
  0x66, 0x00, 0xe6, 0x08, 0xc0, 0x60, 0x8e, 0x00, 0x29, 0xc6, 0x40, 0x10,
  0x44, 0x41, 0x90, 0x51, 0x0c, 0x80, 0x20, 0x88, 0x62, 0x20, 0xa4, 0x20,
  0x03, 0x31, 0x0c, 0xc3, 0x30, 0x0c, 0xa4, 0x94, 0x61, 0x20, 0x06, 0x62,
  0x6e, 0x1a, 0x2e, 0x7f, 0xc2, 0x1e, 0x42, 0xf2, 0x57, 0x42, 0x5a, 0x89,
  0xc9, 0x2f, 0x6e, 0x1b, 0x15, 0xc3, 0x30, 0x0c, 0x04, 0x15, 0xf7, 0x0c,
  0x97, 0x3f, 0x61, 0x0f, 0x21, 0xf9, 0x21, 0xd0, 0x0c, 0x0b, 0x81, 0x82,
  0xa7, 0x30, 0x0e, 0x01, 0x41, 0xc3, 0x30, 0x0c, 0x04, 0x41, 0x0c, 0x14,
  0x15, 0x63, 0x20, 0x86, 0x61, 0x18, 0x68, 0x2a, 0xc4, 0x40, 0x0c, 0x03,
  0x55, 0x47, 0x0d, 0x97, 0x3f, 0x61, 0x0f, 0x21, 0xf9, 0xdc, 0x46, 0x15,
  0x2b, 0x31, 0xf9, 0xc8, 0x6d, 0x23, 0x82, 0x20, 0x08, 0xa2, 0x10, 0x17,
  0x01, 0x11, 0x84, 0x1d, 0x35, 0x5c, 0xfe, 0x84, 0x3d, 0x84, 0xe4, 0x73,
  0x1b, 0x55, 0xac, 0xc4, 0xe4, 0x17, 0xb7, 0x8d, 0x88, 0x61, 0x18, 0x86,
  0x42, 0x68, 0x04, 0x44, 0xd0, 0x56, 0x8a, 0x81, 0x18, 0x86, 0x81, 0xba,
  0x39, 0x82, 0xa0, 0x18, 0x10, 0x51, 0x10, 0xc4, 0x47, 0xe0, 0x40, 0xc0,
  0x30, 0x02, 0x31, 0xcc, 0xd4, 0x06, 0xe3, 0xc0, 0x0e, 0xe1, 0x30, 0x0f,
  0xf3, 0xe0, 0x06, 0xb4, 0x50, 0x0e, 0xf8, 0x40, 0x0f, 0xf5, 0x20, 0x0f,
  0xe5, 0x20, 0x07, 0xa4, 0xc0, 0x07, 0xf6, 0x50, 0x0e, 0xe3, 0x40, 0x0f,
  0xef, 0x20, 0x0f, 0x7c, 0x60, 0x0e, 0xec, 0xf0, 0x0e, 0xe1, 0x40, 0x0f,
  0x6c, 0x00, 0x06, 0x74, 0xe0, 0x07, 0x60, 0xe0, 0x07, 0x7a, 0xa0, 0x07,
  0xed, 0x90, 0x0e, 0xf0, 0x30, 0x0f, 0xbf, 0x40, 0x0f, 0xf9, 0x00, 0x0f,
  0xe5, 0x80, 0x02, 0x62, 0x26, 0x31, 0x18, 0x07, 0x76, 0x08, 0x87, 0x79,
  0x98, 0x07, 0x37, 0xa0, 0x85, 0x72, 0xc0, 0x07, 0x7a, 0xa8, 0x07, 0x79,
  0x28, 0x07, 0x39, 0x20, 0x05, 0x3e, 0xb0, 0x87, 0x72, 0x18, 0x07, 0x7a,
  0x78, 0x07, 0x79, 0xe0, 0x03, 0x73, 0x60, 0x87, 0x77, 0x08, 0x07, 0x7a,
  0x60, 0x03, 0x30, 0xa0, 0x03, 0x3f, 0x00, 0x03, 0x3f, 0x40, 0xc2, 0x48,
  0x52, 0x39, 0x8c, 0x30, 0x0c, 0x33, 0xb5, 0xc1, 0x38, 0xb0, 0x43, 0x38,
  0xcc, 0xc3, 0x3c, 0xb8, 0x01, 0x2d, 0x94, 0x03, 0x3e, 0xd0, 0x43, 0x3d,
  0xc8, 0x43, 0x39, 0xc8, 0x01, 0x29, 0xf0, 0x81, 0x3d, 0x94, 0xc3, 0x38,
  0xd0, 0xc3, 0x3b, 0xc8, 0x03, 0x1f, 0x98, 0x03, 0x3b, 0xbc, 0x43, 0x38,
  0xd0, 0x03, 0x1b, 0x80, 0xc1, 0x1c, 0xf8, 0x01, 0x18, 0xf8, 0x81, 0x1e,
  0xe8, 0x41, 0x3b, 0xa4, 0x03, 0x3c, 0xcc, 0xc3, 0x2f, 0xd0, 0x43, 0x3e,
  0xc0, 0x43, 0x39, 0xa0, 0x80, 0x98, 0x49, 0x0c, 0xc6, 0x81, 0x1d, 0xc2,
  0x61, 0x1e, 0xe6, 0xc1, 0x0d, 0x68, 0xa1, 0x1c, 0xf0, 0x81, 0x1e, 0xea,
  0x41, 0x1e, 0xca, 0x41, 0x0e, 0x48, 0x81, 0x0f, 0xec, 0xa1, 0x1c, 0xc6,
  0x81, 0x1e, 0xde, 0x41, 0x1e, 0xf8, 0xc0, 0x1c, 0xd8, 0xe1, 0x1d, 0xc2,
  0x81, 0x1e, 0xd8, 0x00, 0x0c, 0xe6, 0xc0, 0x0f, 0xc0, 0xc0, 0x0f, 0x90,
  0x70, 0xa2, 0x94, 0xce, 0x44, 0x06, 0xe3, 0xc0, 0x0e, 0xe1, 0x30, 0x0f,
  0xf3, 0xe0, 0x06, 0xb4, 0x50, 0x0e, 0xf8, 0x40, 0x0f, 0xf5, 0x20, 0x0f,
  0xe5, 0x30, 0x0a, 0xf5, 0x20, 0x0e, 0xe5, 0xc0, 0x07, 0xf6, 0x50, 0x0e,
  0xe3, 0x40, 0x0f, 0xef, 0x20, 0x0f, 0x7c, 0x60, 0x0e, 0xec, 0xf0, 0x0e,
  0xe1, 0x40, 0x0f, 0x6c, 0x00, 0x06, 0x73, 0xe0, 0x07, 0x60, 0xe0, 0x07,
  0x28, 0x38, 0x69, 0x4d, 0x82, 0x31, 0x07, 0xce, 0xa3, 0x0e, 0x47, 0x9a,
  0x16, 0x00, 0x73, 0xa8, 0xc9, 0xe7, 0x9c, 0x46, 0x9a, 0x80, 0x66, 0x92,
  0x90, 0x73, 0xb6, 0x6e, 0xdb, 0xba, 0xee, 0x39, 0x0c, 0x03, 0x31, 0x0c,
  0xf4, 0xde, 0x24, 0x4d, 0x11, 0x25, 0x4c, 0x3e, 0x0b, 0x30, 0xcf, 0x42,
  0x44, 0xec, 0x04, 0x4c, 0x04, 0x0a, 0x08, 0x8a, 0x53, 0x82, 0x98, 0x02,
  0x00, 0x00, 0x00, 0x00, 0x13, 0x16, 0x72, 0xc0, 0x87, 0x74, 0x60, 0x87,
  0x36, 0x68, 0x87, 0x79, 0x68, 0x03, 0x7c, 0x10, 0x87, 0x38, 0xd8, 0xf0,
  0x0a, 0xe5, 0xd0, 0x06, 0xed, 0xa0, 0x07, 0xe5, 0xd0, 0x06, 0xf0, 0xa0,
  0x07, 0x73, 0x20, 0x07, 0x7a, 0x30, 0x07, 0x72, 0xd0, 0x06, 0xe9, 0x10,
  0x07, 0x7a, 0x30, 0x07, 0x72, 0xd0, 0x06, 0xe9, 0x80, 0x07, 0x7a, 0x30,
  0x07, 0x72, 0xd0, 0x06, 0xe9, 0x10, 0x07, 0x76, 0xa0, 0x07, 0x73, 0x20,
  0x07, 0x6d, 0x90, 0x0e, 0x73, 0x20, 0x07, 0x7a, 0x30, 0x07, 0x72, 0xd0,
  0x06, 0xe9, 0x60, 0x07, 0x74, 0xa0, 0x07, 0x76, 0x40, 0x07, 0x6d, 0x60,
  0x0e, 0x71, 0x60, 0x07, 0x7a, 0x30, 0x07, 0x72, 0xd0, 0x06, 0xe6, 0x30,
  0x07, 0x72, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x60, 0x0e, 0x76, 0x40,
  0x07, 0x7a, 0x60, 0x07, 0x74, 0xd0, 0x06, 0xee, 0x80, 0x07, 0x7a, 0x10,
  0x07, 0x76, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x7a, 0x60, 0x07, 0x74, 0x30,
  0xe4, 0x09, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x60, 0xc8, 0x63, 0x00, 0x01, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0xc0, 0x90, 0x07, 0x01, 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x80, 0x21, 0x8f, 0x02, 0x04, 0x40, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x43, 0x1e, 0x06, 0x08, 0x80, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x86, 0x3c, 0x11, 0x10, 0x00, 0x03, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x79, 0x26, 0x20, 0x00, 0x02,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0xf2, 0x54, 0x40, 0x00,
  0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0xe4, 0x89, 0x80,
  0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0xc8, 0x83,
  0x01, 0x01, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x90,
  0x67, 0x03, 0x02, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80,
  0x21, 0x4f, 0x07, 0x04, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x43, 0x1e, 0x30, 0x00, 0x02, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x80, 0x2c, 0x10, 0x00, 0x00, 0x00, 0x14, 0x00, 0x00, 0x00,
  0x32, 0x1e, 0x98, 0x18, 0x19, 0x11, 0x4c, 0x90, 0x8c, 0x09, 0x26, 0x47,
  0xc6, 0x04, 0x43, 0x22, 0x4a, 0x60, 0x04, 0xa0, 0x20, 0x8a, 0xa1, 0x08,
  0x4a, 0xa2, 0x0c, 0x0a, 0xa1, 0x14, 0x0a, 0xd1, 0xa0, 0x1c, 0xca, 0x83,
  0x8a, 0x92, 0x18, 0x01, 0x28, 0x82, 0x42, 0x28, 0x83, 0x02, 0x21, 0x73,
  0x06, 0x80, 0xd4, 0x19, 0x00, 0x62, 0x67, 0x00, 0x08, 0x9e, 0x01, 0x20,
  0x79, 0x06, 0x80, 0xe6, 0xb1, 0x24, 0x88, 0x78, 0x1e, 0x00, 0x38, 0x8e,
  0x03, 0x38, 0x8e, 0x03, 0x00, 0x00, 0x00, 0x00, 0x79, 0x18, 0x00, 0x00,
  0x95, 0x00, 0x00, 0x00, 0x1a, 0x03, 0x4c, 0x90, 0x46, 0x02, 0x13, 0xc4,
  0x36, 0xf8, 0xfa, 0xc2, 0x12, 0x7a, 0xc2, 0xfa, 0x82, 0x2a, 0x92, 0xfa,
  0xa2, 0x42, 0x92, 0x2a, 0x0a, 0x22, 0xfa, 0x9a, 0x1a, 0x92, 0x0a, 0xa2,
  0x1a, 0x42, 0xfa, 0x9a, 0x4a, 0xd2, 0x2a, 0xfa, 0x62, 0x4a, 0x6a, 0x4a,
  0xa2, 0xfa, 0x4a, 0x72, 0xfa, 0x12, 0xca, 0xa2, 0x2a, 0x9a, 0x62, 0x00,
  0xb3, 0x41, 0x08, 0x04, 0x76, 0x64, 0x78, 0x63, 0x78, 0x62, 0x6f, 0x78,
  0x20, 0x32, 0x34, 0x31, 0x30, 0x2e, 0x32, 0x34, 0x31, 0x30, 0x2e, 0x31,
  0x31, 0x31, 0x31, 0x36, 0x2e, 0x31, 0x30, 0x37, 0x34, 0x31, 0x1b, 0x02,
  0x62, 0x82, 0x40, 0x34, 0x13, 0x04, 0xc2, 0xd9, 0x20, 0x18, 0xc7, 0x04,
  0x81, 0x78, 0x36, 0x08, 0x46, 0x42, 0x01, 0x6e, 0x6e, 0x82, 0x40, 0x40,
  0x1b, 0x86, 0x85, 0x39, 0x26, 0x08, 0x66, 0xf0, 0x11, 0x98, 0x20, 0x10,
  0xd1, 0x04, 0x81, 0x90, 0x36, 0x08, 0x47, 0xb4, 0x21, 0x39, 0x9c, 0xe7,
  0x38, 0x0c, 0xe8, 0x90, 0x26, 0x08, 0x6a, 0x00, 0x06, 0x1b, 0x12, 0x83,
  0x7a, 0x0e, 0xc3, 0x80, 0x0e, 0x69, 0x43, 0x02, 0x51, 0xcf, 0x01, 0x19,
  0xd0, 0x21, 0x4d, 0x10, 0x88, 0x69, 0x82, 0xc0, 0x06, 0x61, 0x30, 0x41,
  0x20, 0xa8, 0x09, 0x02, 0x51, 0x6d, 0x48, 0x2e, 0xec, 0x39, 0x32, 0x43,
  0x3b, 0xa4, 0x0d, 0x49, 0x86, 0x3d, 0x87, 0x66, 0x68, 0x87, 0xb4, 0xa1,
  0x98, 0x2a, 0x6b, 0xe3, 0x26, 0x08, 0x70, 0x20, 0x06, 0x13, 0x04, 0xc2,
  0xda, 0x80, 0x1c, 0xde, 0x73, 0x1c, 0xc6, 0x07, 0x6c, 0x08, 0xc0, 0x60,
  0x82, 0x20, 0x07, 0x63, 0xb0, 0x01, 0x39, 0xc4, 0xe0, 0x39, 0x0e, 0xe3,
  0x00, 0x36, 0x20, 0x86, 0x18, 0x3c, 0x87, 0x61, 0x1c, 0xc0, 0x06, 0x61,
  0x0c, 0xc8, 0x60, 0x03, 0xd1, 0x01, 0x61, 0x50, 0x06, 0x13, 0x84, 0x39,
  0x20, 0x83, 0x0d, 0xc1, 0x19, 0x4c, 0x10, 0x04, 0x80, 0x0a, 0xd4, 0x14,
  0x55, 0x19, 0x1e, 0x5d, 0x9d, 0x5c, 0x19, 0x19, 0x11, 0xaa, 0x22, 0xac,
  0xa1, 0xa7, 0x27, 0x29, 0xa2, 0x09, 0x42, 0x91, 0x4d, 0x10, 0x0a, 0x6d,
  0x43, 0x70, 0x4c, 0x10, 0x8a, 0x6d, 0x83, 0x70, 0x5d, 0x1b, 0x96, 0x63,
  0x0d, 0xd8, 0xa0, 0x0d, 0xdc, 0xe0, 0x0d, 0x8c, 0x37, 0x38, 0xda, 0x00,
  0x0e, 0x36, 0x04, 0xc6, 0x04, 0xa1, 0xe0, 0x26, 0x08, 0xc4, 0xb5, 0x41,
  0xb8, 0xe8, 0x60, 0xc3, 0x62, 0xac, 0x01, 0x1b, 0xb4, 0x81, 0x1c, 0xbc,
  0x81, 0x31, 0x07, 0x46, 0x1b, 0xd4, 0xc1, 0x86, 0x00, 0x9a, 0x20, 0x14,
  0xdd, 0x86, 0x05, 0x5a, 0x03, 0x36, 0x68, 0x83, 0x3b, 0x78, 0x03, 0x03,
  0x0f, 0xa0, 0x36, 0xa8, 0x03, 0x16, 0x43, 0x4f, 0x4c, 0x4f, 0x52, 0x1b,
  0x96, 0x4b, 0x0f, 0xd8, 0xa0, 0x0d, 0xdc, 0xe0, 0x0d, 0x8c, 0x39, 0xb8,
  0xda, 0x00, 0xd8, 0x40, 0xc4, 0x81, 0x1d, 0xe4, 0xc1, 0x1e, 0x30, 0x99,
  0xb2, 0xfa, 0xa2, 0x0a, 0x93, 0x3b, 0x2b, 0xa3, 0x9b, 0x20, 0x14, 0xde,
  0x04, 0x81, 0xc0, 0x36, 0x08, 0xd7, 0x1f, 0x6c, 0x58, 0x8e, 0x3e, 0x60,
  0x03, 0x3f, 0x70, 0x83, 0x36, 0x30, 0xe6, 0xe0, 0x68, 0x03, 0x50, 0xd8,
  0x10, 0x84, 0xc2, 0x86, 0x81, 0x0f, 0x44, 0x01, 0xd8, 0x50, 0xa4, 0x81,
  0x1a, 0x8c, 0x82, 0x19, 0x00, 0xad, 0xf0, 0xc4, 0xde, 0xf0, 0x5c, 0xc6,
  0xde, 0xda, 0xe0, 0xd2, 0xd8, 0xca, 0xe4, 0x5c, 0xde, 0xe0, 0xe8, 0xd2,
  0xde, 0xdc, 0xe6, 0xa6, 0x04, 0x42, 0x15, 0x36, 0x36, 0xbb, 0x36, 0x97,
  0x34, 0xb2, 0x32, 0x37, 0xba, 0x29, 0x01, 0x51, 0x85, 0x0c, 0xcf, 0xc5,
  0xae, 0x4c, 0x6e, 0x2e, 0xed, 0xcd, 0x6d, 0x4a, 0x70, 0x34, 0x21, 0xc3,
  0x73, 0xb1, 0x0b, 0x63, 0xb3, 0x2b, 0x93, 0x9b, 0x12, 0x24, 0x75, 0xc8,
  0xf0, 0x5c, 0xe6, 0xd0, 0xc2, 0xc8, 0xca, 0xe4, 0x9a, 0xde, 0xc8, 0xca,
  0xd8, 0xa6, 0x04, 0x4c, 0x19, 0x32, 0x3c, 0x17, 0xb9, 0xb2, 0xb9, 0xb7,
  0x3a, 0xb9, 0xb1, 0xb2, 0xb9, 0x29, 0x41, 0x19, 0xd4, 0x21, 0xc3, 0x73,
  0xb1, 0x4b, 0x2b, 0xbb, 0x4b, 0x22, 0x9b, 0xa2, 0x0b, 0xa3, 0x2b, 0x9b,
  0x12, 0x9c, 0x41, 0x1d, 0x32, 0x3c, 0x97, 0x32, 0x37, 0x3a, 0xb9, 0x3c,
  0xa8, 0xb7, 0x34, 0x37, 0xba, 0xb9, 0x29, 0xc1, 0x28, 0x00, 0x00, 0x00,
  0x79, 0x18, 0x00, 0x00, 0x51, 0x00, 0x00, 0x00, 0x33, 0x08, 0x80, 0x1c,
  0xc4, 0xe1, 0x1c, 0x66, 0x14, 0x01, 0x3d, 0x88, 0x43, 0x38, 0x84, 0xc3,
  0x8c, 0x42, 0x80, 0x07, 0x79, 0x78, 0x07, 0x73, 0x98, 0x71, 0x0c, 0xe6,
  0x00, 0x0f, 0xed, 0x10, 0x0e, 0xf4, 0x80, 0x0e, 0x33, 0x0c, 0x42, 0x1e,
  0xc2, 0xc1, 0x1d, 0xce, 0xa1, 0x1c, 0x66, 0x30, 0x05, 0x3d, 0x88, 0x43,
  0x38, 0x84, 0x83, 0x1b, 0xcc, 0x03, 0x3d, 0xc8, 0x43, 0x3d, 0x8c, 0x03,
  0x3d, 0xcc, 0x78, 0x8c, 0x74, 0x70, 0x07, 0x7b, 0x08, 0x07, 0x79, 0x48,
  0x87, 0x70, 0x70, 0x07, 0x7a, 0x70, 0x03, 0x76, 0x78, 0x87, 0x70, 0x20,
  0x87, 0x19, 0xcc, 0x11, 0x0e, 0xec, 0x90, 0x0e, 0xe1, 0x30, 0x0f, 0x6e,
  0x30, 0x0f, 0xe3, 0xf0, 0x0e, 0xf0, 0x50, 0x0e, 0x33, 0x10, 0xc4, 0x1d,
  0xde, 0x21, 0x1c, 0xd8, 0x21, 0x1d, 0xc2, 0x61, 0x1e, 0x66, 0x30, 0x89,
  0x3b, 0xbc, 0x83, 0x3b, 0xd0, 0x43, 0x39, 0xb4, 0x03, 0x3c, 0xbc, 0x83,
  0x3c, 0x84, 0x03, 0x3b, 0xcc, 0xf0, 0x14, 0x76, 0x60, 0x07, 0x7b, 0x68,
  0x07, 0x37, 0x68, 0x87, 0x72, 0x68, 0x07, 0x37, 0x80, 0x87, 0x70, 0x90,
  0x87, 0x70, 0x60, 0x07, 0x76, 0x28, 0x07, 0x76, 0xf8, 0x05, 0x76, 0x78,
  0x87, 0x77, 0x80, 0x87, 0x5f, 0x08, 0x87, 0x71, 0x18, 0x87, 0x72, 0x98,
  0x87, 0x79, 0x98, 0x81, 0x2c, 0xee, 0xf0, 0x0e, 0xee, 0xe0, 0x0e, 0xf5,
  0xc0, 0x0e, 0xec, 0x30, 0x03, 0x62, 0xc8, 0xa1, 0x1c, 0xe4, 0xa1, 0x1c,
  0xcc, 0xa1, 0x1c, 0xe4, 0xa1, 0x1c, 0xdc, 0x61, 0x1c, 0xca, 0x21, 0x1c,
  0xc4, 0x81, 0x1d, 0xca, 0x61, 0x06, 0xd6, 0x90, 0x43, 0x39, 0xc8, 0x43,
  0x39, 0x98, 0x43, 0x39, 0xc8, 0x43, 0x39, 0xb8, 0xc3, 0x38, 0x94, 0x43,
  0x38, 0x88, 0x03, 0x3b, 0x94, 0xc3, 0x2f, 0xbc, 0x83, 0x3c, 0xfc, 0x82,
  0x3b, 0xd4, 0x03, 0x3b, 0xb0, 0xc3, 0x0c, 0xc4, 0x21, 0x07, 0x7c, 0x70,
  0x03, 0x7a, 0x28, 0x87, 0x76, 0x80, 0x87, 0x19, 0xd1, 0x43, 0x0e, 0xf8,
  0xe0, 0x06, 0xe4, 0x20, 0x0e, 0xe7, 0xe0, 0x06, 0xf6, 0x10, 0x0e, 0xf2,
  0xc0, 0x0e, 0xe1, 0x90, 0x0f, 0xef, 0x50, 0x0f, 0xf4, 0x30, 0x83, 0x81,
  0xc8, 0x01, 0x1f, 0xdc, 0x40, 0x1c, 0xe4, 0xa1, 0x1c, 0xc2, 0x61, 0x1d,
  0xdc, 0x40, 0x1c, 0xe4, 0x01, 0x00, 0x00, 0x00, 0x71, 0x20, 0x00, 0x00,
  0x34, 0x00, 0x00, 0x00, 0x06, 0xa0, 0xa4, 0x6c, 0x4b, 0x5c, 0x13, 0x15,
  0x11, 0x83, 0x1d, 0x40, 0xc3, 0xe5, 0x3b, 0x8f, 0x1f, 0x20, 0x0d, 0x10,
  0x61, 0x7e, 0x71, 0xdb, 0xa6, 0xb0, 0x0d, 0x97, 0xef, 0x3c, 0xbe, 0x10,
  0x50, 0x45, 0x41, 0x44, 0xa5, 0x03, 0x0c, 0x25, 0x61, 0x00, 0x02, 0xe6,
  0x17, 0xb7, 0x6d, 0x09, 0xdb, 0x70, 0xf9, 0xce, 0xe3, 0x0b, 0x01, 0x55,
  0x14, 0x44, 0x54, 0x3a, 0xc0, 0x50, 0x12, 0x06, 0x20, 0x60, 0x3e, 0x72,
  0xdb, 0xc6, 0x20, 0x0d, 0x97, 0xef, 0x3c, 0xbe, 0x10, 0x11, 0xc0, 0x44,
  0x84, 0x40, 0x33, 0x2c, 0x84, 0x19, 0x38, 0xc3, 0xe5, 0x3b, 0x8f, 0x3f,
  0x38, 0x93, 0xed, 0x17, 0xb7, 0x6d, 0x03, 0xce, 0x70, 0xf9, 0xce, 0xe3,
  0x0f, 0xce, 0x74, 0xfb, 0xc5, 0x6d, 0x5b, 0xc0, 0x34, 0x5c, 0xbe, 0xf3,
  0xf8, 0x8b, 0x03, 0x0c, 0x62, 0xf3, 0x50, 0x93, 0x5f, 0xdc, 0xb6, 0x15,
  0x40, 0xc3, 0xe5, 0x3b, 0x8f, 0x2f, 0x01, 0xcc, 0xb3, 0x10, 0x7e, 0x71,
  0xdb, 0x86, 0x50, 0x0d, 0x97, 0xef, 0x3c, 0xbe, 0x04, 0x30, 0xcf, 0x42,
  0x94, 0x44, 0x45, 0x2c, 0x7e, 0x71, 0xdb, 0x26, 0x50, 0x0d, 0x97, 0xef,
  0x3c, 0xbe, 0x34, 0x39, 0x11, 0x81, 0x52, 0xd3, 0x43, 0x4d, 0x7e, 0x71,
  0xdb, 0xb6, 0x20, 0x0d, 0x97, 0xef, 0x3c, 0xfe, 0x44, 0x44, 0x13, 0x02,
  0x44, 0x98, 0x5f, 0xdc, 0xb6, 0x11, 0x3c, 0xc3, 0xe5, 0x3b, 0x8f, 0x4f,
  0x35, 0x40, 0x84, 0xf9, 0xc5, 0x6d, 0x03, 0x00, 0x61, 0x20, 0x00, 0x00,
  0xfa, 0x01, 0x00, 0x00, 0x13, 0x04, 0x43, 0x2c, 0x10, 0x00, 0x00, 0x00,
  0x1c, 0x00, 0x00, 0x00, 0xf4, 0x8d, 0x00, 0x50, 0x51, 0x02, 0x44, 0x14,
  0x4b, 0xf1, 0x95, 0x4b, 0x99, 0x94, 0x51, 0x81, 0x14, 0x4c, 0xb1, 0x15,
  0x5e, 0xa1, 0x06, 0xcc, 0x00, 0x14, 0x57, 0xb9, 0x95, 0x5c, 0xc9, 0x94,
  0x5d, 0x99, 0x06, 0xd0, 0x30, 0x46, 0x00, 0x82, 0x20, 0x88, 0x7e, 0x63,
  0x04, 0x7d, 0xdf, 0xb2, 0xb8, 0x36, 0x46, 0xb0, 0xfb, 0xa3, 0x4c, 0x82,
  0xc1, 0x18, 0x01, 0x08, 0x82, 0x20, 0xfc, 0x0b, 0x23, 0x00, 0x63, 0x04,
  0x2a, 0x5e, 0x9f, 0xb2, 0x37, 0x46, 0xa0, 0xe2, 0xf5, 0x29, 0xfb, 0xc2,
  0x18, 0x01, 0x08, 0x82, 0x20, 0xfe, 0x0b, 0x63, 0x04, 0x20, 0x08, 0x82,
  0x20, 0x18, 0x8c, 0x11, 0x80, 0x20, 0x08, 0x82, 0xa0, 0x30, 0x46, 0x00,
  0x82, 0x20, 0x88, 0x7f, 0x33, 0x00, 0x00, 0x00, 0x23, 0x06, 0x09, 0x00,
  0x82, 0x60, 0x00, 0x06, 0x78, 0x00, 0xa9, 0x01, 0x1c, 0xbc, 0xc1, 0x37,
  0x62, 0x90, 0x00, 0x20, 0x08, 0x06, 0x60, 0x90, 0x07, 0xd1, 0x1a, 0xc8,
  0x41, 0x1c, 0x80, 0xc1, 0x88, 0x41, 0x02, 0x80, 0x20, 0x18, 0x80, 0x81,
  0x1e, 0x48, 0x6c, 0x50, 0x07, 0x75, 0x10, 0x06, 0x23, 0x06, 0x09, 0x00,
  0x82, 0x60, 0x00, 0x06, 0x7b, 0x30, 0xb5, 0x81, 0x1e, 0xe8, 0x81, 0x18,
  0x8c, 0x18, 0x24, 0x00, 0x08, 0x82, 0x01, 0x18, 0xf0, 0x01, 0xe5, 0x06,
  0x7a, 0xa0, 0x07, 0x63, 0x30, 0x62, 0x90, 0x00, 0x20, 0x08, 0x06, 0x60,
  0xd0, 0x07, 0x15, 0x1b, 0xf0, 0x01, 0x1f, 0x90, 0xc1, 0x88, 0x41, 0x02,
  0x80, 0x20, 0x18, 0x80, 0x81, 0x1f, 0x58, 0x6d, 0xc0, 0x07, 0x7c, 0x50,
  0x06, 0x23, 0x06, 0x09, 0x00, 0x82, 0x60, 0x00, 0x06, 0x7f, 0x70, 0xc1,
  0x41, 0x1f, 0xf4, 0x81, 0x19, 0x8c, 0x18, 0x24, 0x00, 0x08, 0x82, 0x81,
  0xb1, 0x0a, 0x78, 0xb0, 0x07, 0x7e, 0x20, 0x07, 0xdb, 0x88, 0x41, 0x02,
  0x80, 0x20, 0x18, 0x18, 0xac, 0x90, 0x07, 0x7c, 0xf0, 0x07, 0x67, 0xc0,
  0x8d, 0x18, 0x24, 0x00, 0x08, 0x82, 0x81, 0xd1, 0x0a, 0x7a, 0xd0, 0x07,
  0xa0, 0x30, 0x07, 0xdd, 0x88, 0x41, 0x02, 0x80, 0x20, 0x18, 0x18, 0xae,
  0xb0, 0x07, 0xa2, 0x10, 0x0a, 0x75, 0xe0, 0x8d, 0x18, 0x24, 0x00, 0x08,
  0x82, 0x81, 0xf1, 0x0a, 0x7c, 0x30, 0x0a, 0xa2, 0xa0, 0x06, 0xdf, 0x88,
  0x41, 0x02, 0x80, 0x20, 0x18, 0x18, 0xb0, 0xd0, 0x07, 0xa4, 0x30, 0x0a,
  0x76, 0x00, 0x06, 0x23, 0x06, 0x09, 0x00, 0x82, 0x60, 0x60, 0xc4, 0x82,
  0x1f, 0x90, 0x02, 0x29, 0xe0, 0x41, 0x18, 0x8c, 0x18, 0x24, 0x00, 0x08,
  0x82, 0x81, 0x21, 0x0b, 0x7f, 0x50, 0x0a, 0xa5, 0xd0, 0x06, 0x62, 0x30,
  0x62, 0x70, 0x00, 0x20, 0x08, 0x06, 0x9b, 0x2a, 0x78, 0x89, 0x29, 0x8c,
  0x26, 0x04, 0xc0, 0x68, 0x82, 0x10, 0x8c, 0x26, 0x0c, 0x82, 0x0d, 0x49,
  0x7c, 0x6c, 0x48, 0xe2, 0x63, 0x43, 0x12, 0x9f, 0x11, 0x83, 0x05, 0x00,
  0x41, 0x30, 0x50, 0x70, 0x01, 0x0d, 0x06, 0x21, 0x18, 0x84, 0x60, 0xc4,
  0xc0, 0x00, 0x40, 0x10, 0x0c, 0x18, 0x5c, 0x38, 0x83, 0xc0, 0x8a, 0x40,
  0x3e, 0x56, 0x08, 0xf2, 0xb1, 0x62, 0x90, 0xcf, 0x88, 0xc1, 0x03, 0x80,
  0x20, 0x18, 0x44, 0xbb, 0x10, 0x07, 0x99, 0xe5, 0x34, 0x5d, 0x27, 0x0b,
  0xb2, 0xf0, 0x06, 0xdd, 0x68, 0x42, 0x00, 0x8c, 0x26, 0x08, 0x81, 0x09,
  0x63, 0x20, 0x1f, 0x13, 0xc8, 0x40, 0x3e, 0x26, 0x98, 0x01, 0x7c, 0x4c,
  0x38, 0x03, 0xf8, 0x8c, 0x18, 0x24, 0x00, 0x08, 0x82, 0xc1, 0x14, 0x0e,
  0x79, 0x20, 0x04, 0x42, 0x60, 0x66, 0x10, 0xc4, 0x67, 0xc4, 0xc0, 0x00,
  0x40, 0x10, 0x0c, 0x98, 0x72, 0xe0, 0x83, 0x60, 0xc4, 0xc0, 0x00, 0x40,
  0x10, 0x0c, 0x18, 0x73, 0x98, 0x83, 0x6d, 0xc4, 0xc0, 0x00, 0x40, 0x10,
  0x0c, 0x98, 0x73, 0xa0, 0x83, 0x6d, 0xc4, 0xc0, 0x00, 0x40, 0x10, 0x0c,
  0x18, 0x74, 0xa8, 0x83, 0x6d, 0xc4, 0xc0, 0x00, 0x40, 0x10, 0x0c, 0x98,
  0x74, 0xe8, 0x03, 0x6f, 0xc4, 0xc0, 0x00, 0x40, 0x10, 0x0c, 0x18, 0x75,
  0xf0, 0x03, 0x6f, 0xc4, 0xc0, 0x00, 0x40, 0x10, 0x0c, 0x98, 0x75, 0xf8,
  0x03, 0x6f, 0xc4, 0xc0, 0x00, 0x40, 0x10, 0x0c, 0x18, 0x76, 0xc8, 0x03,
  0x6f, 0xc4, 0xc0, 0x00, 0x40, 0x10, 0x0c, 0x98, 0x76, 0xd0, 0x03, 0x6f,
  0xc4, 0xc0, 0x00, 0x40, 0x10, 0x0c, 0x18, 0x77, 0x10, 0x05, 0x30, 0x18,
  0x31, 0x30, 0x00, 0x10, 0x04, 0x03, 0xe6, 0x1d, 0x46, 0x01, 0x0c, 0xac,
  0x48, 0xe4, 0x63, 0x47, 0x22, 0x1f, 0x13, 0x82, 0xf8, 0x98, 0xb2, 0xc8,
  0xc7, 0x12, 0x47, 0x3e, 0x26, 0x04, 0xf1, 0x31, 0x06, 0x92, 0x8f, 0x39,
  0x90, 0x7c, 0x4c, 0x08, 0xe2, 0x63, 0xc1, 0x23, 0x1f, 0x2b, 0x1e, 0xf9,
  0x98, 0x10, 0xc4, 0xc7, 0x94, 0x48, 0x3e, 0x56, 0x50, 0xf2, 0x31, 0x21,
  0x88, 0x8f, 0x29, 0x96, 0x7c, 0xcc, 0xb1, 0xe4, 0x63, 0x42, 0x10, 0x1f,
  0x6b, 0x34, 0xf9, 0xd8, 0xc2, 0xc9, 0xc7, 0x84, 0x20, 0x3e, 0xd6, 0x7c,
  0xf2, 0x31, 0xca, 0x93, 0x8f, 0x09, 0x41, 0x7c, 0xcc, 0x0a, 0x03, 0xf9,
  0x18, 0x35, 0x06, 0xf2, 0x31, 0x21, 0x88, 0x8f, 0x41, 0x9f, 0x7c, 0x46,
  0x0c, 0x10, 0x00, 0x04, 0xc1, 0xa0, 0x2b, 0x09, 0x5f, 0xf0, 0x90, 0xc0,
  0x9e, 0x30, 0x90, 0xcf, 0x88, 0x01, 0x02, 0x80, 0x20, 0x18, 0x74, 0x27,
  0x01, 0x0e, 0x60, 0x70, 0x04, 0xe6, 0x8c, 0x81, 0x7c, 0x46, 0x0c, 0x10,
  0x00, 0x04, 0xc1, 0xa0, 0x4b, 0x09, 0x71, 0x10, 0x03, 0x23, 0x18, 0x31,
  0x58, 0x00, 0x10, 0x04, 0x03, 0x45, 0x26, 0xc4, 0xa1, 0x18, 0x82, 0x62,
  0x08, 0x46, 0x0c, 0x0c, 0x00, 0x04, 0xc1, 0x80, 0x91, 0x89, 0x70, 0x08,
  0x0c, 0x33, 0x03, 0xf9, 0x8c, 0x18, 0x20, 0x00, 0x08, 0x82, 0x41, 0xd7,
  0x12, 0xe6, 0x50, 0x06, 0x50, 0x60, 0x17, 0x1a, 0xc8, 0x67, 0xc4, 0x00,
  0x01, 0x40, 0x10, 0x0c, 0xba, 0x97, 0x40, 0x87, 0x33, 0x78, 0x02, 0xb3,
  0xd4, 0x40, 0x3e, 0x23, 0x06, 0x08, 0x00, 0x82, 0x60, 0xd0, 0xc5, 0x84,
  0x3a, 0xa4, 0x81, 0x13, 0x8c, 0x18, 0x2c, 0x00, 0x08, 0x82, 0x81, 0xa2,
  0x13, 0xea, 0x50, 0x0c, 0x41, 0x31, 0x04, 0x23, 0x06, 0x06, 0x00, 0x82,
  0x60, 0xc0, 0xe8, 0x44, 0x3a, 0x04, 0x16, 0x1c, 0xf2, 0x31, 0xc1, 0x90,
  0x8f, 0x0d, 0x85, 0x7c, 0x4c, 0xea, 0x03, 0xf9, 0x58, 0xd0, 0xc8, 0x67,
  0xc4, 0x00, 0x01, 0x40, 0x10, 0x0c, 0xba, 0x9c, 0x90, 0x07, 0x3f, 0x28,
  0x82, 0x11, 0x03, 0x04, 0x00, 0x41, 0x30, 0xe8, 0x74, 0x62, 0x1e, 0xf8,
  0x20, 0x17, 0x02, 0xa3, 0x42, 0x41, 0x3e, 0x16, 0x44, 0xf2, 0x19, 0x31,
  0x40, 0x00, 0x10, 0x04, 0x83, 0xae, 0x27, 0xec, 0x41, 0x14, 0x90, 0x60,
  0xc4, 0x00, 0x01, 0x40, 0x10, 0x0c, 0x3a, 0x9f, 0xb8, 0x07, 0x50, 0xe0,
  0x85, 0xc0, 0xac, 0x52, 0x90, 0x8f, 0x05, 0x95, 0x7c, 0x46, 0x0c, 0x10,
  0x00, 0x04, 0xc1, 0xa0, 0x0b, 0x0b, 0x7d, 0x30, 0x85, 0x25, 0x18, 0x31,
  0x40, 0x00, 0x10, 0x04, 0x83, 0x4e, 0x2c, 0xf6, 0x81, 0x14, 0x7e, 0x21,
  0x18, 0x31, 0x58, 0x00, 0x10, 0x04, 0x03, 0x65, 0x2d, 0xf6, 0x21, 0x29,
  0x82, 0xa4, 0x08, 0x46, 0x0c, 0x0c, 0x00, 0x04, 0xc1, 0x80, 0x59, 0x0b,
  0x7d, 0x08, 0x2c, 0x58, 0xe4, 0x63, 0x02, 0x22, 0x1f, 0x1b, 0x0a, 0xf9,
  0x8c, 0x18, 0x3c, 0x00, 0x08, 0x82, 0x41, 0xe4, 0x16, 0x24, 0xb1, 0x0e,
  0xe9, 0x10, 0x0e, 0xe0, 0x00, 0x0f, 0xf0, 0x50, 0x16, 0x65, 0x21, 0x12,
  0xf0, 0x30, 0x9a, 0x10, 0x00, 0xa3, 0x09, 0x42, 0x30, 0x9a, 0x30, 0x08,
  0x23, 0x06, 0x0f, 0x00, 0x82, 0x60, 0x10, 0xc9, 0x05, 0x4a, 0xc4, 0x43,
  0x3b, 0x94, 0x03, 0x39, 0xd0, 0x03, 0x3d, 0xa4, 0x45, 0x5a, 0x98, 0x04,
  0x3d, 0x8c, 0x26, 0x04, 0xc0, 0x68, 0x82, 0x10, 0x8c, 0x26, 0x0c, 0xc2,
  0x88, 0xc1, 0x02, 0x80, 0x20, 0x18, 0x28, 0x78, 0x81, 0x12, 0x8b, 0x92,
  0xf8, 0x42, 0x2f, 0xf0, 0xc2, 0x88, 0x81, 0x01, 0x80, 0x20, 0x18, 0x30,
  0x78, 0x51, 0x16, 0x81, 0x11, 0x84, 0x7c, 0x8c, 0x50, 0xe4, 0x63, 0x85,
  0x22, 0x1f, 0x33, 0x14, 0xf9, 0x58, 0x33, 0xc4, 0xc7, 0x9a, 0x21, 0x3e,
  0xd6, 0x0c, 0xf1, 0xb1, 0x81, 0x91, 0x8f, 0x0d, 0x8d, 0x7c, 0x6c, 0x70,
  0xe4, 0x63, 0x53, 0x4a, 0xc0, 0xc7, 0x26, 0x95, 0x80, 0x8f, 0x4d, 0x2b,
  0x01, 0x1f, 0x83, 0x06, 0xf9, 0x58, 0x34, 0xc8, 0xc7, 0xa4, 0x41, 0x3e,
  0x36, 0xc0, 0x04, 0x7c, 0x6c, 0x88, 0x09, 0xf8, 0xd8, 0x20, 0x13, 0xf0,
  0xb1, 0x01, 0x93, 0x8f, 0x0d, 0x99, 0x7c, 0x6c, 0xd0, 0xe4, 0x33, 0x4b,
  0x10, 0x0c, 0x54, 0x0c, 0x6e, 0x02, 0x84, 0x46, 0x30, 0x50, 0x31, 0xc0,
  0x09, 0x10, 0x1a, 0xc1, 0x40, 0xc5, 0x20, 0x27, 0x40, 0x68, 0x04, 0x03,
  0x15, 0x04, 0xcc, 0x00, 0xa1, 0x11, 0x58, 0xb0, 0x16, 0x30, 0x18, 0x31,
  0x38, 0x00, 0x10, 0x04, 0x83, 0xcd, 0x35, 0xc4, 0xa2, 0x25, 0x82, 0xd1,
  0x84, 0x00, 0x18, 0x4d, 0x10, 0x82, 0xd1, 0x84, 0x41, 0xb0, 0x9d, 0x18,
  0xe2, 0x63, 0x3c, 0x31, 0xc4, 0xc7, 0x7a, 0x62, 0x88, 0xcf, 0x88, 0xc1,
  0x02, 0x80, 0x20, 0x18, 0x28, 0xbc, 0xc1, 0x16, 0x83, 0x10, 0x0c, 0x42,
  0x30, 0x62, 0x60, 0x00, 0x20, 0x08, 0x06, 0x0c, 0x6f, 0xac, 0x45, 0x60,
  0x41, 0x21, 0x1f, 0x13, 0x0a, 0xf9, 0xd8, 0x50, 0xc8, 0xc7, 0x86, 0x93,
  0x80, 0x8f, 0x0d, 0x27, 0x01, 0x1f, 0x1b, 0x4e, 0x02, 0x3e, 0x23, 0x06,
  0x0b, 0x00, 0x82, 0x60, 0xa0, 0x90, 0x07, 0x5d, 0x0c, 0x42, 0x30, 0x08,
  0xc1, 0x88, 0x81, 0x01, 0x80, 0x20, 0x18, 0x30, 0xe4, 0x31, 0x17, 0x81,
  0x15, 0x81, 0x7c, 0xac, 0x10, 0xe4, 0x63, 0xc5, 0x20, 0x9f, 0x11, 0x83,
  0x05, 0x00, 0x41, 0x30, 0x50, 0xd2, 0x23, 0x2f, 0xf8, 0x60, 0x0f, 0xf4,
  0x60, 0x51, 0x92, 0x11, 0x03, 0x03, 0x00, 0x41, 0x30, 0x60, 0xd2, 0xc3,
  0x36, 0x82, 0x11, 0x83, 0x05, 0x00, 0x41, 0x30, 0x50, 0xd6, 0x63, 0x2f,
  0x1a, 0x66, 0x29, 0x88, 0x61, 0xc4, 0xc0, 0x00, 0x40, 0x10, 0x0c, 0x98,
  0xf5, 0xc0, 0x8d, 0x60, 0xc4, 0x60, 0x01, 0x40, 0x10, 0x0c, 0x94, 0xf6,
  0xe8, 0x0b, 0x50, 0xf8, 0x03, 0x3f, 0x38, 0x8c, 0x62, 0xc4, 0xc0, 0x00,
  0x40, 0x10, 0x0c, 0x98, 0xf6, 0xd0, 0x8d, 0xc0, 0xf2, 0x40, 0x2e, 0xe4,
  0x63, 0x04, 0x21, 0x1f, 0x0b, 0x04, 0xf9, 0x58, 0xa0, 0x17, 0xf0, 0x31,
  0xba, 0x48, 0xe2, 0x63, 0x41, 0x20, 0x1f, 0x0b, 0x02, 0xf9, 0x58, 0x30,
  0xc8, 0xc7, 0x82, 0x42, 0x3e, 0x16, 0xe4, 0x05, 0x7c, 0x4c, 0x2f, 0x40,
  0x21, 0x3e, 0x16, 0x04, 0xf2, 0xb1, 0x20, 0x90, 0x8f, 0x05, 0x83, 0x7c,
  0x2c, 0x58, 0xe4, 0x63, 0xc1, 0x5f, 0xc0, 0xc7, 0x8e, 0x40, 0x3e, 0x66,
  0x0a, 0xa6, 0x20, 0x1f, 0x0b, 0x4a, 0x03, 0x3e, 0x46, 0x51, 0xf2, 0xb1,
  0x40, 0x90, 0x8f, 0x05, 0xa5, 0x01, 0x1f, 0x0b, 0x02, 0xf9, 0x58, 0xf0,
  0x1a, 0xf2, 0x19, 0x31, 0x38, 0x00, 0x10, 0x04, 0x83, 0x6a, 0x44, 0x7e,
  0x23, 0x36, 0x02, 0x43, 0x02, 0xfa, 0x98, 0x6a, 0xf0, 0x41, 0x7c, 0x6c,
  0x35, 0xf8, 0x20, 0x3e, 0xc6, 0x1a, 0x7c, 0x10, 0x1f, 0x6b, 0x0d, 0x30,
  0x88, 0x8f, 0x05, 0x81, 0x7c, 0x2c, 0x08, 0xe4, 0x63, 0xc1, 0x20, 0x1f,
  0x0b, 0x0e, 0xf9, 0x98, 0x70, 0xc8, 0xc7, 0x86, 0x43, 0x3e, 0x36, 0x98,
  0x02, 0x7c, 0x6c, 0x30, 0x05, 0xf8, 0xd8, 0x60, 0x0a, 0xf0, 0xb1, 0xdb,
  0x30, 0x83, 0xf8, 0xd8, 0x25, 0x1e, 0xf2, 0xb1, 0x40, 0x90, 0x8f, 0x05,
  0x69, 0x00, 0x1f, 0xdb, 0x8d, 0x80, 0x3e, 0x16, 0x4c, 0xf2, 0xb1, 0x20,
  0x91, 0x8f, 0x09, 0x89, 0x7c, 0x6c, 0x48, 0xe4, 0x63, 0xac, 0x80, 0x1f,
  0x30, 0x18, 0x31, 0x38, 0x00, 0x10, 0x04, 0x83, 0x2d, 0x47, 0xda, 0x03,
  0x37, 0x82, 0xd1, 0x84, 0x00, 0x18, 0x4d, 0x10, 0x82, 0xd1, 0x84, 0x41,
  0xb0, 0x41, 0x0f, 0xe4, 0x63, 0xc3, 0x1e, 0xc8, 0xc7, 0x06, 0x3e, 0x90,
  0x8f, 0xa1, 0x81, 0x39, 0xc8, 0xc7, 0xd2, 0xc0, 0x1c, 0xe4, 0x63, 0x6a,
  0x60, 0x0e, 0xf2, 0x31, 0x67, 0x80, 0x8f, 0x39, 0x03, 0x7c, 0xcc, 0x19,
  0xe0, 0x63, 0xc9, 0x20, 0x1f, 0x4b, 0x06, 0xf9, 0x58, 0x32, 0xc8, 0xc7,
  0x06, 0x70, 0x80, 0x8f, 0x0d, 0xe0, 0x00, 0x1f, 0x1b, 0xc0, 0x01, 0x3e,
  0x06, 0x0e, 0x69, 0x02, 0x83, 0xe1, 0x86, 0x80, 0x4c, 0xc0, 0x60, 0x96,
  0x41, 0x08, 0x82, 0xd1, 0x84, 0x92, 0x18, 0x46, 0x0c, 0x1e, 0x00, 0x04,
  0xc1, 0x20, 0xa2, 0x13, 0x15, 0xa9, 0x0f, 0xf8, 0x48, 0x09, 0x94, 0x38,
  0x09, 0xfb, 0x40, 0x11, 0x14, 0x41, 0x11, 0xfb, 0x18, 0x4d, 0x08, 0x80,
  0xd1, 0x04, 0x21, 0x18, 0x4d, 0x18, 0x04, 0x1b, 0xf2, 0x41, 0x3e, 0x36,
  0xe4, 0x83, 0x7c, 0x6c, 0xc8, 0x07, 0xf9, 0xd8, 0xd0, 0xc0, 0xc7, 0x86,
  0x06, 0x3e, 0x36, 0x34, 0xf0, 0x19, 0x31, 0x38, 0x00, 0x10, 0x04, 0x03,
  0x4c, 0x4f, 0x5a, 0x04, 0x3f, 0x74, 0x64, 0x34, 0x21, 0x10, 0x2e, 0x18,
  0xcc, 0x82, 0x96, 0x90, 0x8f, 0x99, 0x88, 0x7a, 0xc4, 0xc7, 0x4e, 0x44,
  0x3d, 0xe2, 0x63, 0x28, 0xa2, 0x1e, 0xf1, 0x19, 0x31, 0x58, 0x00, 0x10,
  0x04, 0x03, 0xe5, 0x54, 0x6e, 0x64, 0x10, 0x02, 0x9d, 0xc8, 0x09, 0x9c,
  0xb0, 0x60, 0x45, 0xe4, 0x63, 0x01, 0x4f, 0xc8, 0xc7, 0x04, 0x9e, 0x90,
  0x8f, 0x0d, 0x3c, 0x21, 0x1f, 0x43, 0x86, 0xf8, 0x18, 0x32, 0xc4, 0xc7,
  0x90, 0x21, 0x3e, 0x23, 0x06, 0x0f, 0x00, 0x82, 0x60, 0x10, 0xa9, 0x8a,
  0x9a, 0xb4, 0x48, 0x8a, 0x0c, 0x42, 0xf0, 0x22, 0x61, 0x12, 0x26, 0x61,
  0xc2, 0x8c, 0x26, 0x04, 0xc0, 0x68, 0x82, 0x10, 0x8c, 0x26, 0x0c, 0x82,
  0x0d, 0x26, 0x21, 0x1f, 0x1b, 0x4c, 0x42, 0x3e, 0x36, 0x98, 0x84, 0x7c,
  0x2c, 0x1b, 0xe0, 0x63, 0xd9, 0x00, 0x1f, 0xcb, 0x06, 0xf8, 0x8c, 0x18,
  0x1c, 0x00, 0x08, 0x82, 0xc1, 0x26, 0x2b, 0x66, 0x12, 0x23, 0x75, 0x32,
  0x9a, 0x10, 0x0c, 0x16, 0x98, 0x81, 0x7c, 0x46, 0x0c, 0x12, 0x00, 0x04,
  0xc1, 0x00, 0xe9, 0x15, 0x55, 0x89, 0x95, 0x58, 0x29, 0x15, 0x63, 0xc4,
  0x20, 0x01, 0x40, 0x10, 0x0c, 0x90, 0x5e, 0x51, 0x95, 0x58, 0x89, 0x95,
  0x3c, 0x29, 0x46, 0x0c, 0x12, 0x00, 0x04, 0xc1, 0x00, 0xe9, 0x15, 0x55,
  0x89, 0x95, 0x58, 0x21, 0x15, 0x62, 0xc4, 0x20, 0x01, 0x40, 0x10, 0x0c,
  0x90, 0x5e, 0x51, 0x95, 0x58, 0x89, 0x15, 0x51, 0x09, 0x10, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xb5, 0xa1, 0xba, 0x35, 0xf2, 0xdd, 0x47, 0x26,
  0xe0, 0x5e, 0xd6, 0xe2, 0x08, 0x7a, 0xcf, 0x67, 0x17, 0x00, 0x01, 0x00,
  0x29, 0x74, 0x19, 0x00, 0x78, 0x01, 0xed, 0x59, 0x5f, 0x6c, 0x5b, 0x57,
  0x19, 0xff, 0xce, 0xfd, 0x6f, 0xdf, 0x7b, 0x8f, 0xff, 0xe4, 0xfa, 0x5e,
  0x5f, 0x3b, 0xae, 0x9d, 0x26, 0x6d, 0x1d, 0x37, 0x71, 0xec, 0x38, 0x69,
  0x46, 0x68, 0x13, 0xaf, 0x0a, 0x14, 0x10, 0x82, 0xa9, 0xa2, 0x7d, 0xc8,
  0x96, 0x32, 0x05, 0xb1, 0xa1, 0x3e, 0x20, 0x18, 0x88, 0x87, 0x3d, 0x98,
  0x50, 0x42, 0xb7, 0x41, 0x41, 0x7d, 0xdc, 0xc3, 0x84, 0x84, 0xb4, 0x87,
  0x6e, 0x20, 0x01, 0x12, 0x03, 0x09, 0x31, 0xd7, 0x14, 0x69, 0xb2, 0x22,
  0x18, 0x95, 0x37, 0x01, 0x12, 0x20, 0x4d, 0xbc, 0xf1, 0x56, 0xf5, 0x09,
  0x21, 0x34, 0xf3, 0xfb, 0x4e, 0x62, 0x35, 0x86, 0x0a, 0x5e, 0x86, 0x04,
  0x22, 0x9f, 0xf4, 0xdd, 0xef, 0x7c, 0xdf, 0x39, 0xe7, 0xfb, 0x73, 0xbe,
  0xef, 0x9c, 0x73, 0x7d, 0xfd, 0xc5, 0x98, 0x14, 0x7c, 0xe1, 0xbb, 0x8f,
  0xdf, 0x64, 0x7a, 0xf7, 0x6e, 0xfa, 0x85, 0x20, 0x43, 0x64, 0xa2, 0x2d,
  0x80, 0x4c, 0x19, 0x5e, 0xf4, 0xf9, 0x49, 0x74, 0x2b, 0xcf, 0x4f, 0x22,
  0x9b, 0x1f, 0x07, 0x70, 0x1c, 0xb8, 0x01, 0x64, 0x68, 0xf3, 0xe3, 0x00,
  0x78, 0x7e, 0xab, 0xd5, 0x5a, 0x03, 0xae, 0xa3, 0xf9, 0x4f, 0x30, 0x05,
  0x7c, 0x06, 0x83, 0x3e, 0xc9, 0x03, 0x01, 0x13, 0xfc, 0x38, 0x00, 0x0f,
  0x38, 0xb2, 0xcd, 0x34, 0x05, 0x64, 0x38, 0x18, 0x3a, 0x06, 0x09, 0x20,
  0x8f, 0x31, 0x80, 0x23, 0x60, 0x9e, 0xe1, 0x67, 0xef, 0x7c, 0xff, 0x2c,
  0x88, 0x72, 0xef, 0xad, 0x3f, 0x7c, 0x60, 0xed, 0xa5, 0x9b, 0xd9, 0x73,
  0xf3, 0xd3, 0x7f, 0x5d, 0x65, 0xfe, 0xd5, 0x4f, 0xad, 0x3f, 0xd4, 0xaf,
  0xff, 0x15, 0x78, 0xd8, 0x5a, 0x8c, 0xf2, 0xc4, 0x70, 0x8b, 0x17, 0xe6,
  0xdf, 0x40, 0x96, 0x1f, 0x80, 0x76, 0xc4, 0xcf, 0x07, 0xb9, 0xec, 0x01,
  0x1f, 0xa6, 0x9f, 0x61, 0x08, 0x60, 0xfa, 0x30, 0xd0, 0x81, 0x16, 0xe9,
  0x3b, 0x20, 0x64, 0x89, 0xf2, 0x0e, 0x39, 0xa0, 0xda, 0xa9, 0x1d, 0x4a,
  0xb3, 0xe4, 0xff, 0x03, 0x8e, 0xf1, 0x03, 0xc0, 0x6b, 0xa1, 0x01, 0x39,
  0xf4, 0x51, 0xfd, 0x32, 0x8c, 0xea, 0xf4, 0xd3, 0xdc, 0x49, 0x3b, 0xb7,
  0x19, 0x6f, 0xe6, 0xe9, 0x2f, 0xcc, 0x8d, 0x78, 0x01, 0x7e, 0x7f, 0xdc,
  0x3e, 0xaf, 0x33, 0xaf, 0x8a, 0xfa, 0x10, 0x0f, 0x03, 0x86, 0x4b, 0x57,
  0x34, 0x5b, 0xbb, 0x92, 0x9a, 0xc4, 0x7c, 0x24, 0x0c, 0xfc, 0x13, 0xe0,
  0x9f, 0x38, 0xc4, 0x6f, 0x82, 0xdf, 0x3c, 0xc4, 0x3f, 0x09, 0xfe, 0xc9,
  0x43, 0xfc, 0x36, 0xf8, 0xed, 0x11, 0x3f, 0xd2, 0x9f, 0x52, 0xf6, 0x34,
  0xfd, 0x5f, 0xe5, 0xfa, 0xbf, 0x05, 0x8e, 0x7c, 0x7c, 0x6f, 0xe0, 0xc8,
  0xc7, 0xf7, 0x06, 0x8e, 0x7c, 0x3c, 0x82, 0x23, 0x38, 0x82, 0x23, 0x38,
  0x82, 0xff, 0x34, 0x74, 0x8c, 0x5e, 0xb7, 0x93, 0x7c, 0xb7, 0x9b, 0xd0,
  0x7f, 0xd0, 0xb5, 0xf5, 0xeb, 0x5d, 0x53, 0xbf, 0xd6, 0xd5, 0xf5, 0x5b,
  0xdd, 0x1d, 0xfd, 0x15, 0xe0, 0xd7, 0x80, 0x5f, 0x05, 0x3e, 0x07, 0x7c,
  0x01, 0xf8, 0xc3, 0xae, 0xa7, 0x7f, 0xb3, 0xeb, 0xea, 0x37, 0xba, 0x94,
  0xf8, 0x65, 0x8f, 0xec, 0x7e, 0x8f, 0xf4, 0xbb, 0x3d, 0x32, 0x7b, 0xbd,
  0x1d, 0xfd, 0x1b, 0x5d, 0x9a, 0x7d, 0xbb, 0x47, 0xcd, 0x97, 0x7a, 0x29,
  0xfd, 0x6f, 0x5d, 0xbc, 0xb5, 0xf6, 0x49, 0x04, 0x7d, 0x41, 0x99, 0xbe,
  0x10, 0xb9, 0x3e, 0xb9, 0x2f, 0xf6, 0xbe, 0x4c, 0x37, 0x6e, 0xe3, 0xd5,
  0xfe, 0x9e, 0xa1, 0xf5, 0x84, 0x3f, 0x5c, 0x7e, 0x9e, 0xdf, 0x6c, 0x3d,
  0xfd, 0x47, 0xdd, 0x9f, 0xeb, 0x3f, 0xee, 0x0e, 0xf5, 0x9f, 0x74, 0xbf,
  0xf7, 0x71, 0xbc, 0xd0, 0x3a, 0xf9, 0x3e, 0x25, 0x26, 0xfb, 0x94, 0xac,
  0xf4, 0xc9, 0x98, 0xe9, 0x93, 0x59, 0xed, 0xe3, 0x07, 0x41, 0x9f, 0x96,
  0xbf, 0x7d, 0x47, 0x98, 0xb3, 0x7d, 0x61, 0x89, 0xbe, 0x30, 0x4e, 0xf4,
  0x85, 0x13, 0xf7, 0x45, 0xa2, 0xd4, 0x17, 0xc9, 0xa9, 0x3e, 0xed, 0xbc,
  0xfd, 0x3b, 0xfc, 0x54, 0x11, 0x97, 0xf6, 0xa9, 0xcb, 0x7c, 0x12, 0x3f,
  0x01, 0x99, 0x07, 0xf5, 0x99, 0x47, 0xa8, 0x92, 0x79, 0xd0, 0xd4, 0xab,
  0xa0, 0x18, 0x97, 0x66, 0x8a, 0xfe, 0x0c, 0x53, 0xc8, 0xb3, 0x3c, 0x0e,
  0xef, 0xcc, 0x13, 0x3c, 0x0e, 0x34, 0x60, 0xde, 0x24, 0xca, 0x31, 0x0f,
  0x1a, 0xf2, 0x38, 0xc8, 0x23, 0xa6, 0xe0, 0xf3, 0xed, 0x65, 0xfa, 0x05,
  0xc7, 0x74, 0x2e, 0x08, 0x9c, 0x35, 0x5a, 0x74, 0xce, 0x66, 0xb3, 0x4e,
  0x32, 0x47, 0x32, 0x31, 0x41, 0x9e, 0xab, 0x87, 0x8e, 0x1f, 0x17, 0x9c,
  0x54, 0xe9, 0x98, 0x93, 0xd6, 0x35, 0x27, 0x13, 0xe7, 0x9d, 0x6c, 0x69,
  0xd2, 0x09, 0x4e, 0x55, 0x9c, 0xf0, 0xf4, 0x71, 0x27, 0x3a, 0x35, 0xe3,
  0xe4, 0x4f, 0x9f, 0x74, 0xe2, 0x16, 0x79, 0x5e, 0xb9, 0x2a, 0x65, 0x54,
  0x93, 0xa2, 0x38, 0x27, 0x69, 0xab, 0xde, 0xc1, 0xfb, 0xf3, 0x40, 0x16,
  0x2f, 0xee, 0xc2, 0x81, 0x81, 0x28, 0x5f, 0xde, 0xcd, 0x81, 0x7a, 0xd1,
  0xe6, 0x6e, 0x4e, 0x6f, 0xc8, 0xa0, 0x84, 0x31, 0xf1, 0x92, 0xcc, 0x15,
  0xcf, 0x48, 0x2a, 0x3f, 0x22, 0x25, 0xfa, 0xa8, 0xb4, 0xbd, 0x1b, 0x44,
  0xab, 0xd2, 0x43, 0x3b, 0x17, 0x6f, 0xee, 0x0a, 0xd0, 0x40, 0xbf, 0xba,
  0x9b, 0x62, 0x5a, 0xfe, 0xec, 0xae, 0x9c, 0xaa, 0x4a, 0x2c, 0xca, 0x20,
  0x17, 0x3d, 0xb3, 0x2b, 0xa7, 0x27, 0x25, 0xeb, 0xa7, 0xe2, 0x97, 0x76,
  0xbd, 0xa9, 0x82, 0x14, 0x53, 0x15, 0xe9, 0x4d, 0xe7, 0x65, 0x36, 0xaa,
  0x7a, 0x62, 0x5a, 0x53, 0xe3, 0x26, 0xa2, 0x55, 0x23, 0x2b, 0x2a, 0xf8,
  0x09, 0x8d, 0xb6, 0xb0, 0x8c, 0x89, 0x72, 0xde, 0x73, 0x23, 0x4d, 0x7a,
  0xb1, 0xe6, 0x65, 0xcb, 0x05, 0x2f, 0x98, 0x9d, 0x91, 0x24, 0x34, 0x8f,
  0x6d, 0xfb, 0xc5, 0x8f, 0x18, 0x9f, 0x4b, 0xdd, 0xb8, 0xad, 0xd3, 0xb5,
  0x81, 0xfe, 0xe7, 0x5f, 0xe9, 0x62, 0x4b, 0xeb, 0xa4, 0xa7, 0x26, 0x3d,
  0xdd, 0xae, 0x49, 0x0d, 0x32, 0x0d, 0x32, 0xcd, 0xac, 0x79, 0x72, 0x6b,
  0xb2, 0x73, 0xbf, 0x56, 0x73, 0x72, 0x4f, 0xd7, 0x3a, 0x22, 0xce, 0x4b,
  0x11, 0x85, 0x52, 0x08, 0x92, 0xbe, 0xa9, 0x49, 0x51, 0xd2, 0xa4, 0x0e,
  0xdd, 0x16, 0xf4, 0xe5, 0x7c, 0xcb, 0x08, 0x46, 0xb2, 0x48, 0xf3, 0x6c,
  0x96, 0xa5, 0x2c, 0x23, 0x7d, 0x20, 0xb3, 0x53, 0xa1, 0xf2, 0x5f, 0x87,
  0x5f, 0x0e, 0xf7, 0x65, 0x34, 0xc3, 0xf2, 0x43, 0xcf, 0xc9, 0x84, 0x9e,
  0xbb, 0x15, 0x76, 0x28, 0x85, 0xfa, 0xa2, 0x3d, 0x91, 0x21, 0x39, 0x40,
  0x4e, 0x29, 0x43, 0xde, 0x40, 0xa0, 0xac, 0x5c, 0xbf, 0x20, 0xdd, 0x14,
  0x62, 0xb7, 0xd1, 0x6f, 0xa2, 0x6c, 0x16, 0x02, 0x99, 0x58, 0xc8, 0xca,
  0x78, 0x21, 0x2f, 0xdd, 0x4c, 0x5a, 0xca, 0x9c, 0xa3, 0x62, 0xf7, 0x27,
  0xb2, 0x86, 0x13, 0x43, 0x97, 0xe3, 0x0c, 0xee, 0x87, 0x1a, 0x0d, 0x51,
  0xff, 0xc9, 0xdf, 0x4e, 0x9f, 0xfb, 0x3c, 0x62, 0x1c, 0x52, 0xc5, 0x42,
  0xfb, 0x75, 0x8e, 0x17, 0xe5, 0x35, 0xa0, 0x94, 0xd6, 0x26, 0x17, 0x6b,
  0x81, 0x79, 0x9a, 0xb1, 0x61, 0xd0, 0x16, 0x75, 0x78, 0xcd, 0x6d, 0xdd,
  0x9a, 0x19, 0x6a, 0x9a, 0x1a, 0x9b, 0x66, 0x7e, 0x4a, 0x12, 0xe7, 0x90,
  0xf4, 0xea, 0x06, 0xe7, 0x94, 0xc4, 0xcc, 0x46, 0xee, 0x74, 0x5d, 0x86,
  0xdc, 0x36, 0x1b, 0x1b, 0xc1, 0x6c, 0xdd, 0x0b, 0xe7, 0xeb, 0x5e, 0x84,
  0xdc, 0xc7, 0xec, 0xb7, 0x4e, 0xed, 0x3c, 0x53, 0xc1, 0x9f, 0x43, 0x40,
  0x4d, 0x6a, 0x07, 0x0b, 0x55, 0x99, 0x5b, 0xa8, 0xc9, 0x70, 0x61, 0x4e,
  0xca, 0x56, 0x5d, 0xfa, 0xcd, 0xba, 0xe7, 0x88, 0xba, 0x57, 0x60, 0x3f,
  0xeb, 0x1a, 0x15, 0x96, 0xcf, 0xc8, 0xf8, 0xf4, 0xa2, 0x2c, 0xae, 0x9c,
  0x91, 0x79, 0xe8, 0xcd, 0xcf, 0x3e, 0x65, 0xc8, 0xd3, 0x35, 0x59, 0x5c,
  0x5e, 0x92, 0x6e, 0x84, 0x5a, 0x61, 0x5b, 0xf3, 0xdb, 0x06, 0xdb, 0xf7,
  0x67, 0x2f, 0x1b, 0x3c, 0x2e, 0x70, 0xbc, 0x41, 0x98, 0xd1, 0x28, 0xef,
  0x54, 0x60, 0x4b, 0xa3, 0x22, 0x72, 0x62, 0xf9, 0x98, 0xdf, 0xac, 0x81,
  0xce, 0x59, 0x93, 0x18, 0x5b, 0x5c, 0x79, 0x53, 0x0f, 0x66, 0xab, 0x92,
  0xe7, 0x05, 0xef, 0xdb, 0xd3, 0x63, 0xd0, 0xdc, 0xfc, 0x1b, 0x4a, 0x56,
  0x40, 0xbb, 0xd0, 0xda, 0x97, 0xb9, 0xa0, 0xc3, 0x6a, 0x55, 0xfe, 0x3e,
  0xf5, 0xe1, 0x76, 0xa1, 0xc5, 0x7e, 0x2c, 0x49, 0xf0, 0x95, 0xd7, 0x57,
  0xae, 0x2f, 0x2b, 0x7f, 0x9a, 0x7b, 0xd3, 0xc3, 0xa5, 0x55, 0xf6, 0x63,
  0x2d, 0xb8, 0x54, 0xed, 0x94, 0x9a, 0x35, 0x8f, 0xd8, 0x77, 0xfc, 0xc2,
  0xcd, 0x5d, 0xaa, 0x75, 0x48, 0x9c, 0x51, 0xbe, 0x17, 0xa0, 0x97, 0xeb,
  0xd7, 0xd6, 0x25, 0xa5, 0xdd, 0xe3, 0x92, 0xd7, 0x2f, 0xed, 0xee, 0x4d,
  0x17, 0x51, 0x2b, 0xc2, 0x3d, 0xa9, 0xfa, 0x04, 0xf8, 0x1c, 0xc6, 0xa5,
  0xdc, 0x63, 0x2a, 0x56, 0x9a, 0xfa, 0xa0, 0x11, 0x9f, 0xa8, 0xc9, 0x00,
  0x3a, 0x8b, 0xcc, 0xeb, 0x1f, 0x33, 0xe2, 0x32, 0xf6, 0xca, 0x4a, 0x43,
  0xf1, 0xb6, 0x99, 0x9c, 0x19, 0x1a, 0x86, 0xca, 0x87, 0xa6, 0x78, 0x49,
  0x9a, 0x7b, 0x16, 0xf5, 0x89, 0xbc, 0xb1, 0x6e, 0xf7, 0x60, 0x7d, 0xcc,
  0x67, 0x8d, 0x78, 0x25, 0xa9, 0xda, 0x81, 0x08, 0xf1, 0x73, 0x59, 0x0e,
  0x50, 0x64, 0x58, 0x7e, 0x6f, 0x60, 0xe2, 0xa0, 0x60, 0x6a, 0x61, 0x57,
  0x98, 0x5b, 0xc9, 0x0e, 0xaf, 0x87, 0xe9, 0x56, 0x37, 0xb8, 0x3e, 0xcd,
  0xc4, 0x0c, 0x72, 0xb8, 0x88, 0xda, 0x5c, 0xf4, 0xca, 0xcc, 0xfb, 0x8d,
  0x8d, 0xf2, 0xfa, 0xa2, 0x17, 0x6f, 0x2d, 0x76, 0x2a, 0xd0, 0x61, 0xba,
  0xd4, 0x96, 0x8f, 0x9e, 0x97, 0x41, 0xab, 0x2a, 0xed, 0x96, 0x94, 0x65,
  0xac, 0x4f, 0x99, 0xe5, 0x09, 0x6a, 0x57, 0x66, 0xdb, 0x52, 0x22, 0x16,
  0x7f, 0xfd, 0xbc, 0x9a, 0x5b, 0x4e, 0x5d, 0x53, 0x76, 0x4d, 0x9f, 0xda,
  0xac, 0xdb, 0x4f, 0x5d, 0x34, 0x6c, 0xe4, 0x29, 0x46, 0x9e, 0x2a, 0xe0,
  0x1d, 0xf7, 0x3a, 0xfa, 0x61, 0xa3, 0xd5, 0x31, 0x02, 0xe4, 0xcd, 0x74,
  0x35, 0xb2, 0x53, 0x52, 0xb2, 0x7d, 0x95, 0xa3, 0xd9, 0xbd, 0x69, 0x9e,
  0x67, 0x23, 0x57, 0xcc, 0x97, 0x50, 0x07, 0xdc, 0xcf, 0xb5, 0x16, 0x23,
  0x6f, 0x31, 0xaf, 0x79, 0x5b, 0xa3, 0xb8, 0xb5, 0x2a, 0x87, 0x52, 0xaa,
  0x7c, 0x81, 0xaa, 0x3c, 0x95, 0xde, 0xbf, 0x2a, 0x4b, 0xf0, 0xcd, 0xbe,
  0x24, 0x51, 0x87, 0x3c, 0x7e, 0x4f, 0xe7, 0x79, 0x2e, 0xa8, 0xc9, 0xf3,
  0x92, 0x1a, 0x71, 0xee, 0xe2, 0xf9, 0x39, 0x69, 0xba, 0x8b, 0x32, 0xc6,
  0xd8, 0x02, 0x74, 0xc7, 0x6e, 0x52, 0x06, 0xa0, 0x6c, 0xcf, 0x44, 0x2e,
  0xc2, 0x13, 0xfb, 0xbe, 0xd8, 0xb0, 0xcd, 0x7a, 0x4c, 0xe4, 0x23, 0x2c,
  0x2f, 0x49, 0xe5, 0x37, 0xd6, 0x38, 0x5c, 0x99, 0x93, 0x8f, 0x2d, 0xf7,
  0xee, 0x70, 0x9f, 0xdd, 0xba, 0xaa, 0xe2, 0xb1, 0xdd, 0x4d, 0xc4, 0x59,
  0x19, 0x44, 0x0b, 0x1a, 0x79, 0x72, 0x4e, 0x86, 0xa8, 0x5d, 0x1f, 0x94,
  0xc1, 0x46, 0xee, 0xb9, 0xaf, 0xf2, 0xa8, 0x46, 0xea, 0x0e, 0x91, 0x75,
  0xa5, 0x3f, 0x42, 0x1d, 0x47, 0x58, 0x2b, 0x27, 0x8d, 0x43, 0x19, 0xb9,
  0x49, 0x64, 0xf7, 0x69, 0x32, 0x00, 0xc5, 0x5e, 0x12, 0x12, 0x67, 0x10,
  0xcf, 0x77, 0x49, 0x9d, 0x23, 0xd1, 0x44, 0x75, 0x23, 0x6c, 0xc2, 0x77,
  0x6e, 0x67, 0x66, 0x36, 0xec, 0x54, 0x43, 0xf2, 0xbe, 0xcc, 0xb5, 0x36,
  0x0d, 0x8e, 0x33, 0xca, 0x35, 0x36, 0x4c, 0xb7, 0x81, 0xbd, 0xd8, 0xf0,
  0xf2, 0x5b, 0x0d, 0xb5, 0x17, 0xa3, 0x09, 0xe4, 0xae, 0xb5, 0x24, 0xed,
  0x26, 0xe2, 0x4c, 0x2d, 0x4a, 0xb3, 0x99, 0x94, 0xac, 0x83, 0xf7, 0x67,
  0x94, 0xa1, 0xb6, 0xdf, 0x5c, 0xf2, 0x54, 0x7d, 0xbb, 0x4f, 0x29, 0x5f,
  0xa2, 0x1c, 0xb5, 0x39, 0x2e, 0x67, 0xe1, 0x2a, 0x78, 0xe8, 0xc4, 0x9e,
  0xb3, 0xfc, 0x86, 0x94, 0x58, 0x1f, 0xb6, 0xeb, 0xbb, 0xc7, 0x8c, 0x7c,
  0xb3, 0xa1, 0xe2, 0xe1, 0x58, 0xcd, 0x83, 0x3d, 0x68, 0xa7, 0xe6, 0xa4,
  0xca, 0x5b, 0x0a, 0xfb, 0xa4, 0xd1, 0xe0, 0x1a, 0x5c, 0x63, 0x3e, 0x9f,
  0xda, 0xe4, 0xf9, 0x16, 0xfb, 0x17, 0x36, 0xdf, 0xd0, 0xf3, 0x9c, 0x87,
  0x45, 0xec, 0xd9, 0xe6, 0x92, 0x2c, 0x60, 0x6f, 0x17, 0xa0, 0x4b, 0xd9,
  0x47, 0x8e, 0xf8, 0xfc, 0xe2, 0x5c, 0x61, 0xef, 0x22, 0x3f, 0xf0, 0x13,
  0x7c, 0x38, 0xff, 0xa6, 0xce, 0x76, 0x4d, 0xc8, 0x59, 0x36, 0x4c, 0x26,
  0xf7, 0x73, 0x9e, 0x4c, 0xaa, 0x9c, 0x9b, 0x97, 0x92, 0x9d, 0xbc, 0xda,
  0xf7, 0xd0, 0x03, 0x5d, 0x11, 0xeb, 0xc7, 0x79, 0xc2, 0x35, 0x90, 0xc7,
  0xf8, 0x68, 0x61, 0x5f, 0x9e, 0x5f, 0xa8, 0xab, 0xbd, 0x18, 0x21, 0xbf,
  0x36, 0xe4, 0xee, 0x89, 0x86, 0x0c, 0x11, 0x43, 0xdc, 0xd2, 0x70, 0x8b,
  0x43, 0xff, 0xd4, 0xb6, 0xe1, 0x62, 0xcf, 0xf1, 0xfe, 0x8c, 0x90, 0x6f,
  0xde, 0x5b, 0x11, 0x72, 0xed, 0xae, 0x84, 0xd2, 0x40, 0x1a, 0xcd, 0xb9,
  0xba, 0xea, 0x33, 0xf5, 0x6d, 0xd5, 0x67, 0x9a, 0x75, 0x83, 0xfd, 0xb5,
  0xa7, 0x2e, 0x1a, 0x4a, 0xaf, 0x7e, 0xd9, 0x10, 0xf4, 0xad, 0x81, 0x5f,
  0x3a, 0x6e, 0x08, 0xf1, 0x89, 0xb7, 0x70, 0x37, 0x90, 0x35, 0x37, 0xa7,
  0xf2, 0x1c, 0x9a, 0x1a, 0xae, 0xdd, 0xaf, 0xab, 0x3e, 0x93, 0x6e, 0x28,
  0x8a, 0x33, 0xf2, 0x3c, 0x51, 0x6f, 0xdd, 0xd4, 0x35, 0x45, 0x35, 0x7a,
  0x5e, 0xc9, 0x87, 0x5a, 0x12, 0xf7, 0x67, 0x6f, 0xbd, 0xd3, 0x7e, 0xf7,
  0xb9, 0xc7, 0x97, 0xe9, 0xce, 0x95, 0xd7, 0xe8, 0x8e, 0x01, 0x1d, 0x89,
  0x62, 0xf6, 0x65, 0x03, 0xb5, 0xe1, 0x65, 0xb4, 0x0f, 0x25, 0xc0, 0x1b,
  0xc5, 0x93, 0x2f, 0x27, 0x99, 0x96, 0x6a, 0x90, 0x83, 0x66, 0x16, 0x5f,
  0xb6, 0x61, 0x3f, 0x91, 0xcb, 0x1a, 0x5c, 0x63, 0x22, 0x99, 0xee, 0x78,
  0xf0, 0x03, 0xb5, 0x47, 0x12, 0x36, 0x59, 0xee, 0xc3, 0x07, 0xa6, 0x74,
  0x61, 0xe7, 0x1e, 0xd1, 0x75, 0xe1, 0xf8, 0x52, 0x5a, 0xb0, 0xab, 0xfa,
  0x62, 0x47, 0xf9, 0x21, 0xe3, 0xe4, 0x1a, 0x5d, 0xb8, 0x79, 0xcf, 0x30,
  0x70, 0x0d, 0x5b, 0x96, 0xe4, 0x7b, 0x83, 0xe3, 0xd5, 0x56, 0x2e, 0x22,
  0x06, 0x9c, 0x31, 0x27, 0xea, 0x88, 0x93, 0xef, 0xf5, 0xf3, 0xea, 0xde,
  0x54, 0xb9, 0x39, 0x65, 0x19, 0xd6, 0x39, 0xc3, 0x53, 0x7e, 0x4c, 0x6b,
  0x06, 0x16, 0x66, 0xec, 0x9b, 0x1c, 0xd1, 0x57, 0x6e, 0x17, 0x98, 0x08,
  0xfe, 0x22, 0x48, 0x0d, 0x7e, 0x30, 0x14, 0xd0, 0x27, 0x04, 0xd4, 0x1e,
  0x96, 0xe1, 0xae, 0xd3, 0x04, 0xde, 0x4e, 0x0e, 0xcb, 0x30, 0x4d, 0x17,
  0x16, 0x37, 0x1f, 0xc8, 0x30, 0xcd, 0x10, 0xea, 0x2b, 0xfc, 0x03, 0x19,
  0xa6, 0x99, 0x02, 0x07, 0xde, 0x61, 0x19, 0xd0, 0x12, 0x78, 0x5b, 0x3a,
  0x2c, 0x83, 0x5d, 0x5b, 0xe0, 0x40, 0xfc, 0x87, 0x71, 0x8e, 0xe6, 0xa2,
  0x16, 0x1e, 0x7c, 0xc2, 0xe7, 0x71, 0x09, 0xcd, 0x1f, 0x93, 0x29, 0x70,
  0xc6, 0xe3, 0xe0, 0x18, 0x85, 0x33, 0x1e, 0x07, 0x7f, 0xf8, 0xd4, 0x9c,
  0xf1, 0x38, 0xf8, 0xc3, 0xa7, 0xe1, 0x8c, 0xfb, 0x8c, 0x43, 0x19, 0x7b,
  0x68, 0xdc, 0x67, 0xa8, 0x23, 0xcb, 0x18, 0xf7, 0x99, 0xeb, 0xc9, 0x36,
  0xc6, 0x7d, 0x86, 0x09, 0x72, 0xb0, 0xd8, 0x80, 0x71, 0xff, 0x00, 0xbd,
  0x83, 0xff, 0x29, 0x6e, 0x00, 0x59, 0x93, 0x45, 0x25, 0x7a, 0x04, 0x54,
  0xc0, 0xa0, 0xf2, 0x0a, 0xc0, 0x7f, 0x0c, 0x30, 0xaf, 0x3c, 0x07, 0xb0,
  0x12, 0x01, 0xad, 0xac, 0x97, 0x81, 0xbf, 0x83, 0x33, 0xcf, 0xfe, 0x30,
  0x7c, 0x14, 0xc8, 0xfc, 0x08, 0x1e, 0x03, 0x0a, 0xdc, 0x73, 0x23, 0xf8,
  0x0c, 0x90, 0xf9, 0xd1, 0x78, 0x03, 0x56, 0x19, 0x5e, 0xfb, 0xce, 0x4f,
  0x97, 0xef, 0xff, 0xf1, 0xc2, 0xc9, 0x77, 0xae, 0xfc, 0xe6, 0x4f, 0xce,
  0xb3, 0xbf, 0x7e, 0xfa, 0xef, 0xd1, 0x1e, 0x74, 0xc5, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x03, 0x00, 0x03, 0x00,
  0x08, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x04, 0x02, 0x08, 0x02, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x05, 0x04, 0x08, 0x02, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x06, 0x06,
  0x08, 0x02, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x07, 0x08, 0x08, 0x02, 0x00, 0x00,
  0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x08, 0x0a, 0x08, 0x02, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x01, 0x09, 0x0c,
  0x04, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x03, 0x01, 0x0a, 0x0e, 0x04, 0x02, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x02, 0x0b, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x02, 0x0d, 0x13,
  0x00, 0x04, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x01, 0x00,
  0x78, 0x01, 0x4d, 0x8c, 0xbb, 0x09, 0x42, 0x51, 0x10, 0x05, 0xd7, 0x1f,
  0x88, 0x15, 0x18, 0x68, 0x66, 0x11, 0x86, 0x16, 0x61, 0xf8, 0x8a, 0x30,
  0x34, 0xb4, 0x04, 0x43, 0x8b, 0x30, 0xb4, 0x08, 0x43, 0x8b, 0x30, 0xb4,
  0x07, 0x9d, 0xc1, 0x3d, 0xf0, 0x06, 0xce, 0xe7, 0xde, 0x03, 0x3b, 0xa9,
  0xaa, 0x15, 0x5a, 0x23, 0xb9, 0xf0, 0xb1, 0xb5, 0x34, 0x57, 0xad, 0xb9,
  0x6b, 0xcd, 0x53, 0x6b, 0xde, 0x5a, 0xf0, 0x60, 0xb3, 0x19, 0xf5, 0xfd,
  0xa8, 0x1f, 0xe9, 0x53, 0x0b, 0x9c, 0xba, 0x13, 0x75, 0xc6, 0xcc, 0x1b,
  0x12, 0x7b, 0xf8, 0x82, 0xef, 0x07, 0x12, 0xbb, 0x92, 0x6c, 0x2f, 0x24,
  0xf6, 0xdc, 0xcf, 0xf6, 0x41, 0x62, 0x9f, 0x21, 0xc9, 0xb6, 0xd4, 0xc0,
  0x98, 0x23, 0xc9, 0xb6, 0xd3, 0xc0, 0x58, 0x20, 0xc9, 0x76, 0xc0, 0xbc,
  0x65, 0x0f, 0xd9, 0x06, 0x2c, 0x9b, 0x12, 0x37, 0x53, 0xfe, 0x7f, 0x55,
  0x3f, 0x81, 0x42, 0x29, 0x20, 0x00, 0x00, 0x00, 0x78, 0x62, 0x6f, 0x70,
  0x01, 0x00, 0x00, 0x00, 0x7e, 0x02, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x30, 0x00, 0x00, 0x00
};
