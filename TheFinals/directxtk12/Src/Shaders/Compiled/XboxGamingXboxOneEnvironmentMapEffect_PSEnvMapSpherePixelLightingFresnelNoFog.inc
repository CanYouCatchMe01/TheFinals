#if 0
;
; Input signature:
;
; Name                 Index   Mask Register SysValue  Format   Used
; -------------------- ----- ------ -------- -------- ------- ------
; TEXCOORD                 0   xy          0     NONE   float   xy  
; TEXCOORD                 1   xyzw        1     NONE   float   xyz 
; TEXCOORD                 2   xyz         2     NONE   float   xyz 
; COLOR                    0   xyzw        3     NONE   float   xyzw
;
;
; Output signature:
;
; Name                 Index   Mask Register SysValue  Format   Used
; -------------------- ----- ------ -------- -------- ------- ------
; SV_Target                0   xyzw        0   TARGET   float   xyzw
;
; shader debug name: C:\Users\marcu\Downloads\DirectXTK12-main\DirectXTK12-main\Src/Shaders/Compiled\XboxGamingXboxOneEnvironmentMapEffect_PSEnvMapSpherePixelLightingFresnelNoFog.pdb
; shader hash: 509314f38d0b7bbd565c3f41db208476
;
; Pipeline Runtime Information: 
;
;PSVRuntimeInfo:
; Pixel Shader
; DepthOutput=0
; SampleFrequency=0
; MinimumExpectedWaveLaneCount: 0
; MaximumExpectedWaveLaneCount: 4294967295
; UsesViewID: false
; SigInputElements: 4
; SigOutputElements: 1
; SigPatchConstOrPrimElements: 0
; SigInputVectors: 4
; SigOutputVectors[0]: 1
; SigOutputVectors[1]: 0
; SigOutputVectors[2]: 0
; SigOutputVectors[3]: 0
; EntryFunctionName: PSEnvMapSpherePixelLightingFresnelNoFog
;
;
; Input signature:
;
; Name                 Index             InterpMode DynIdx
; -------------------- ----- ---------------------- ------
; TEXCOORD                 0                 linear       
; TEXCOORD                 1                 linear       
; TEXCOORD                 2                 linear       
; COLOR                    0                 linear       
;
; Output signature:
;
; Name                 Index             InterpMode DynIdx
; -------------------- ----- ---------------------- ------
; SV_Target                0                              
;
; Buffer Definitions:
;
; cbuffer 
; {
;
;   [384 x i8] (type annotation not present)
;
; }
;
;
; Resource Bindings:
;
; Name                                 Type  Format         Dim      ID      HLSL Bind  Count
; ------------------------------ ---------- ------- ----------- ------- -------------- ------
;                                   cbuffer      NA          NA     CB0            cb0     1
;                                   sampler      NA          NA      S0             s0     1
;                                   sampler      NA          NA      S1             s1     1
;                                   texture     f32          2d      T0             t0     1
;                                   texture     f32          2d      T1             t1     1
;
;
; ViewId state:
;
; Number of inputs: 16, outputs: 4
; Outputs dependent on ViewId: {  }
; Inputs contributing to computation of Outputs:
;   output 0 depends on inputs: { 0, 1, 4, 5, 6, 8, 9, 10, 12, 15 }
;   output 1 depends on inputs: { 0, 1, 4, 5, 6, 8, 9, 10, 13, 15 }
;   output 2 depends on inputs: { 0, 1, 4, 5, 6, 8, 9, 10, 14, 15 }
;   output 3 depends on inputs: { 0, 1, 15 }
;
target datalayout = "e-m:e-p:32:32-i1:32-i8:32-i16:32-i32:32-i64:64-f16:32-f32:32-f64:64-n8:16:32:64"
target triple = "dxil-ms-xb1"

%dx.types.Handle = type { i8* }
%dx.types.ResRet.f32 = type { float, float, float, float, i32 }
%dx.types.CBufRet.f32 = type { float, float, float, float }
%"class.Texture2D<vector<float, 4> >" = type { <4 x float>, %"class.Texture2D<vector<float, 4> >::mips_type" }
%"class.Texture2D<vector<float, 4> >::mips_type" = type { i32 }
%hostlayout.Parameters = type { <3 x float>, float, float, <4 x float>, <3 x float>, [3 x <3 x float>], [3 x <3 x float>], <3 x float>, <3 x float>, <4 x float>, [4 x <4 x float>], [3 x <3 x float>], [4 x <4 x float>] }
%struct.SamplerState = type { i32 }

define void @PSEnvMapSpherePixelLightingFresnelNoFog() {
  %1 = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 0, i32 1, i32 1, i1 false)  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %2 = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 0, i32 0, i32 0, i1 false)  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %3 = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 3, i32 1, i32 1, i1 false)  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %4 = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 3, i32 0, i32 0, i1 false)  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %5 = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 2, i32 0, i32 0, i1 false)  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %6 = call float @dx.op.loadInput.f32(i32 4, i32 3, i32 0, i8 0, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %7 = call float @dx.op.loadInput.f32(i32 4, i32 3, i32 0, i8 1, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %8 = call float @dx.op.loadInput.f32(i32 4, i32 3, i32 0, i8 2, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %9 = call float @dx.op.loadInput.f32(i32 4, i32 3, i32 0, i8 3, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %10 = call float @dx.op.loadInput.f32(i32 4, i32 2, i32 0, i8 0, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %11 = call float @dx.op.loadInput.f32(i32 4, i32 2, i32 0, i8 1, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %12 = call float @dx.op.loadInput.f32(i32 4, i32 2, i32 0, i8 2, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %13 = call float @dx.op.loadInput.f32(i32 4, i32 1, i32 0, i8 0, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %14 = call float @dx.op.loadInput.f32(i32 4, i32 1, i32 0, i8 1, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %15 = call float @dx.op.loadInput.f32(i32 4, i32 1, i32 0, i8 2, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %16 = call float @dx.op.loadInput.f32(i32 4, i32 0, i32 0, i8 0, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %17 = call float @dx.op.loadInput.f32(i32 4, i32 0, i32 0, i8 1, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %18 = call %dx.types.ResRet.f32 @dx.op.sample.f32(i32 60, %dx.types.Handle %2, %dx.types.Handle %4, float %16, float %17, float undef, float undef, i32 0, i32 0, i32 undef, float undef)  ; Sample(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,clamp)
  %19 = extractvalue %dx.types.ResRet.f32 %18, 0
  %20 = extractvalue %dx.types.ResRet.f32 %18, 1
  %21 = extractvalue %dx.types.ResRet.f32 %18, 2
  %22 = extractvalue %dx.types.ResRet.f32 %18, 3
  %23 = fmul fast float %19, %6
  %24 = fmul fast float %20, %7
  %25 = fmul fast float %21, %8
  %26 = fmul fast float %22, %9
  %27 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %5, i32 10)  ; CBufferLoadLegacy(handle,regIndex)
  %28 = extractvalue %dx.types.CBufRet.f32 %27, 0
  %29 = extractvalue %dx.types.CBufRet.f32 %27, 1
  %30 = extractvalue %dx.types.CBufRet.f32 %27, 2
  %31 = fsub fast float %28, %13
  %32 = fsub fast float %29, %14
  %33 = fsub fast float %30, %15
  %34 = call float @dx.op.dot3.f32(i32 55, float %31, float %32, float %33, float %31, float %32, float %33)  ; Dot3(ax,ay,az,bx,by,bz)
  %35 = call float @dx.op.unary.f32(i32 25, float %34)  ; Rsqrt(value)
  %36 = fmul fast float %31, %35
  %37 = fmul fast float %32, %35
  %38 = fmul fast float %33, %35
  %39 = call float @dx.op.dot3.f32(i32 55, float %10, float %11, float %12, float %10, float %11, float %12)  ; Dot3(ax,ay,az,bx,by,bz)
  %40 = call float @dx.op.unary.f32(i32 25, float %39)  ; Rsqrt(value)
  %41 = fmul fast float %40, %10
  %42 = fmul fast float %40, %11
  %43 = fmul fast float %40, %12
  %44 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %5, i32 4)  ; CBufferLoadLegacy(handle,regIndex)
  %45 = extractvalue %dx.types.CBufRet.f32 %44, 0
  %46 = extractvalue %dx.types.CBufRet.f32 %44, 1
  %47 = extractvalue %dx.types.CBufRet.f32 %44, 2
  %48 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %5, i32 7)  ; CBufferLoadLegacy(handle,regIndex)
  %49 = extractvalue %dx.types.CBufRet.f32 %48, 0
  %50 = extractvalue %dx.types.CBufRet.f32 %48, 1
  %51 = extractvalue %dx.types.CBufRet.f32 %48, 2
  %52 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %5, i32 5)  ; CBufferLoadLegacy(handle,regIndex)
  %53 = extractvalue %dx.types.CBufRet.f32 %52, 0
  %54 = extractvalue %dx.types.CBufRet.f32 %52, 1
  %55 = extractvalue %dx.types.CBufRet.f32 %52, 2
  %56 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %5, i32 8)  ; CBufferLoadLegacy(handle,regIndex)
  %57 = extractvalue %dx.types.CBufRet.f32 %56, 0
  %58 = extractvalue %dx.types.CBufRet.f32 %56, 1
  %59 = extractvalue %dx.types.CBufRet.f32 %56, 2
  %60 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %5, i32 6)  ; CBufferLoadLegacy(handle,regIndex)
  %61 = extractvalue %dx.types.CBufRet.f32 %60, 0
  %62 = extractvalue %dx.types.CBufRet.f32 %60, 1
  %63 = extractvalue %dx.types.CBufRet.f32 %60, 2
  %64 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %5, i32 9)  ; CBufferLoadLegacy(handle,regIndex)
  %65 = extractvalue %dx.types.CBufRet.f32 %64, 0
  %66 = extractvalue %dx.types.CBufRet.f32 %64, 1
  %67 = extractvalue %dx.types.CBufRet.f32 %64, 2
  %68 = fsub fast float -0.000000e+00, %46
  %69 = fsub fast float -0.000000e+00, %47
  %70 = fsub fast float -0.000000e+00, %54
  %71 = fsub fast float -0.000000e+00, %55
  %72 = fsub fast float -0.000000e+00, %62
  %73 = fsub fast float -0.000000e+00, %63
  %74 = fmul fast float %41, %45
  %75 = fsub fast float -0.000000e+00, %74
  %76 = call float @dx.op.tertiary.f32(i32 46, float %68, float %42, float %75)  ; FMad(a,b,c)
  %77 = call float @dx.op.tertiary.f32(i32 46, float %69, float %43, float %76)  ; FMad(a,b,c)
  %78 = fmul fast float %41, %53
  %79 = fsub fast float -0.000000e+00, %78
  %80 = call float @dx.op.tertiary.f32(i32 46, float %70, float %42, float %79)  ; FMad(a,b,c)
  %81 = call float @dx.op.tertiary.f32(i32 46, float %71, float %43, float %80)  ; FMad(a,b,c)
  %82 = fmul fast float %41, %61
  %83 = fsub fast float -0.000000e+00, %82
  %84 = call float @dx.op.tertiary.f32(i32 46, float %72, float %42, float %83)  ; FMad(a,b,c)
  %85 = call float @dx.op.tertiary.f32(i32 46, float %73, float %43, float %84)  ; FMad(a,b,c)
  %86 = fcmp fast olt float %77, 0.000000e+00
  %87 = fcmp fast olt float %81, 0.000000e+00
  %88 = fcmp fast olt float %85, 0.000000e+00
  %89 = select i1 %86, float 0.000000e+00, float 1.000000e+00
  %90 = select i1 %87, float 0.000000e+00, float 1.000000e+00
  %91 = select i1 %88, float 0.000000e+00, float 1.000000e+00
  %92 = fmul fast float %89, %77
  %93 = fmul fast float %90, %81
  %94 = fmul fast float %91, %85
  %95 = fmul fast float %92, %49
  %96 = call float @dx.op.tertiary.f32(i32 46, float %93, float %57, float %95)  ; FMad(a,b,c)
  %97 = call float @dx.op.tertiary.f32(i32 46, float %94, float %65, float %96)  ; FMad(a,b,c)
  %98 = fmul fast float %92, %50
  %99 = call float @dx.op.tertiary.f32(i32 46, float %93, float %58, float %98)  ; FMad(a,b,c)
  %100 = call float @dx.op.tertiary.f32(i32 46, float %94, float %66, float %99)  ; FMad(a,b,c)
  %101 = fmul fast float %92, %51
  %102 = call float @dx.op.tertiary.f32(i32 46, float %93, float %59, float %101)  ; FMad(a,b,c)
  %103 = call float @dx.op.tertiary.f32(i32 46, float %94, float %67, float %102)  ; FMad(a,b,c)
  %104 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %5, i32 2)  ; CBufferLoadLegacy(handle,regIndex)
  %105 = extractvalue %dx.types.CBufRet.f32 %104, 0
  %106 = extractvalue %dx.types.CBufRet.f32 %104, 1
  %107 = extractvalue %dx.types.CBufRet.f32 %104, 2
  %108 = fmul fast float %105, %97
  %109 = fmul fast float %106, %100
  %110 = fmul fast float %107, %103
  %111 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %5, i32 3)  ; CBufferLoadLegacy(handle,regIndex)
  %112 = extractvalue %dx.types.CBufRet.f32 %111, 0
  %113 = extractvalue %dx.types.CBufRet.f32 %111, 1
  %114 = extractvalue %dx.types.CBufRet.f32 %111, 2
  %115 = fadd fast float %108, %112
  %116 = fadd fast float %109, %113
  %117 = fadd fast float %110, %114
  %118 = fmul fast float %23, %115
  %119 = fmul fast float %24, %116
  %120 = fmul fast float %25, %117
  %121 = fsub fast float -0.000000e+00, %36
  %122 = fsub fast float -0.000000e+00, %37
  %123 = fsub fast float -0.000000e+00, %38
  %124 = call float @dx.op.dot3.f32(i32 55, float %121, float %122, float %123, float %41, float %42, float %43)  ; Dot3(ax,ay,az,bx,by,bz)
  %125 = fmul fast float %124, 2.000000e+00
  %126 = fmul fast float %125, %41
  %127 = fmul fast float %125, %42
  %128 = fmul fast float %125, %43
  %129 = fsub fast float %121, %126
  %130 = fsub fast float %122, %127
  %131 = fsub fast float %123, %128
  %132 = fmul fast float %129, %129
  %133 = fmul fast float %130, %130
  %134 = fadd fast float %132, %133
  %135 = fadd fast float %131, 1.000000e+00
  %136 = fmul fast float %135, %135
  %137 = fadd fast float %134, %136
  %138 = call float @dx.op.unary.f32(i32 24, float %137)  ; Sqrt(value)
  %139 = fmul fast float %138, 2.000000e+00
  %140 = fdiv fast float %129, %139
  %141 = fadd fast float %140, 5.000000e-01
  %142 = fdiv fast float %130, %139
  %143 = fadd fast float %142, 5.000000e-01
  %144 = call %dx.types.ResRet.f32 @dx.op.sample.f32(i32 60, %dx.types.Handle %1, %dx.types.Handle %3, float %141, float %143, float undef, float undef, i32 0, i32 0, i32 undef, float undef)  ; Sample(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,clamp)
  %145 = extractvalue %dx.types.ResRet.f32 %144, 0
  %146 = extractvalue %dx.types.ResRet.f32 %144, 1
  %147 = extractvalue %dx.types.ResRet.f32 %144, 2
  %148 = extractvalue %dx.types.ResRet.f32 %144, 3
  %149 = fmul fast float %145, %26
  %150 = fmul fast float %146, %26
  %151 = fmul fast float %147, %26
  %152 = fmul fast float %148, %26
  %153 = call float @dx.op.dot3.f32(i32 55, float %36, float %37, float %38, float %41, float %42, float %43)  ; Dot3(ax,ay,az,bx,by,bz)
  %154 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %5, i32 1)  ; CBufferLoadLegacy(handle,regIndex)
  %155 = extractvalue %dx.types.CBufRet.f32 %154, 1
  %156 = call float @dx.op.unary.f32(i32 6, float %153)  ; FAbs(value)
  %157 = fsub fast float 1.000000e+00, %156
  %158 = call float @dx.op.binary.f32(i32 35, float %157, float 0.000000e+00)  ; FMax(a,b)
  %159 = call float @dx.op.unary.f32(i32 23, float %158)  ; Log(value)
  %160 = fmul fast float %159, %155
  %161 = call float @dx.op.unary.f32(i32 21, float %160)  ; Exp(value)
  %162 = extractvalue %dx.types.CBufRet.f32 %154, 0
  %163 = fmul fast float %162, %161
  %164 = fsub fast float %149, %118
  %165 = fsub fast float %150, %119
  %166 = fsub fast float %151, %120
  %167 = fmul fast float %163, %164
  %168 = fmul fast float %163, %165
  %169 = fmul fast float %163, %166
  %170 = fadd fast float %167, %118
  %171 = fadd fast float %168, %119
  %172 = fadd fast float %169, %120
  %173 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %5, i32 0)  ; CBufferLoadLegacy(handle,regIndex)
  %174 = extractvalue %dx.types.CBufRet.f32 %173, 0
  %175 = extractvalue %dx.types.CBufRet.f32 %173, 1
  %176 = extractvalue %dx.types.CBufRet.f32 %173, 2
  %177 = fmul fast float %174, %152
  %178 = fmul fast float %175, %152
  %179 = fmul fast float %176, %152
  %180 = fadd fast float %170, %177
  %181 = fadd fast float %171, %178
  %182 = fadd fast float %172, %179
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 0, float %180)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 1, float %181)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 2, float %182)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 3, float %26)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  ret void
}

; Function Attrs: nounwind readnone
declare float @dx.op.loadInput.f32(i32, i32, i32, i8, i32) #0

; Function Attrs: nounwind
declare void @dx.op.storeOutput.f32(i32, i32, i32, i8, float) #1

; Function Attrs: nounwind readonly
declare %dx.types.ResRet.f32 @dx.op.sample.f32(i32, %dx.types.Handle, %dx.types.Handle, float, float, float, float, i32, i32, i32, float) #2

; Function Attrs: nounwind readnone
declare float @dx.op.dot3.f32(i32, float, float, float, float, float, float) #0

; Function Attrs: nounwind readnone
declare float @dx.op.unary.f32(i32, float) #0

; Function Attrs: nounwind readnone
declare float @dx.op.binary.f32(i32, float, float) #0

; Function Attrs: nounwind readonly
declare %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32, %dx.types.Handle, i32) #2

; Function Attrs: nounwind readnone
declare float @dx.op.tertiary.f32(i32, float, float, float) #0

; Function Attrs: nounwind readonly
declare %dx.types.Handle @dx.op.createHandle(i32, i8, i32, i32, i1) #2

attributes #0 = { nounwind readnone }
attributes #1 = { nounwind }
attributes #2 = { nounwind readonly }

!xbox.compiler.options = !{!0}
!llvm.ident = !{!1}
!dx.version = !{!2}
!dx.valver = !{!3}
!dx.shaderModel = !{!4}
!dx.resources = !{!5}
!dx.viewIdState = !{!15}
!dx.entryPoints = !{!16}

!0 = !{!"__XBOX_PER_THREAD_SCRATCH_SIZE_LIMIT_IN_BYTES", !"0"}
!1 = !{!"dxcxbox 2410.2410.11116.10741"}
!2 = !{i32 1, i32 0}
!3 = !{i32 1, i32 8}
!4 = !{!"ps", i32 6, i32 0}
!5 = !{!6, null, !10, !12}
!6 = !{!7, !9}
!7 = !{i32 0, %"class.Texture2D<vector<float, 4> >"* undef, !"", i32 0, i32 0, i32 1, i32 2, i32 0, !8}
!8 = !{i32 0, i32 9}
!9 = !{i32 1, %"class.Texture2D<vector<float, 4> >"* undef, !"", i32 0, i32 1, i32 1, i32 2, i32 0, !8}
!10 = !{!11}
!11 = !{i32 0, %hostlayout.Parameters* undef, !"", i32 0, i32 0, i32 1, i32 384, null}
!12 = !{!13, !14}
!13 = !{i32 0, %struct.SamplerState* undef, !"", i32 0, i32 0, i32 1, i32 0, null}
!14 = !{i32 1, %struct.SamplerState* undef, !"", i32 0, i32 1, i32 1, i32 0, null}
!15 = !{[18 x i32] [i32 16, i32 4, i32 15, i32 15, i32 0, i32 0, i32 7, i32 7, i32 7, i32 0, i32 7, i32 7, i32 7, i32 0, i32 1, i32 2, i32 4, i32 15]}
!16 = !{void ()* @PSEnvMapSpherePixelLightingFresnelNoFog, !"PSEnvMapSpherePixelLightingFresnelNoFog", !17, !5, null}
!17 = !{!18, !29, null}
!18 = !{!19, !22, !25, !27}
!19 = !{i32 0, !"TEXCOORD", i8 9, i8 0, !20, i8 2, i32 1, i8 2, i32 0, i8 0, !21}
!20 = !{i32 0}
!21 = !{i32 3, i32 3}
!22 = !{i32 1, !"TEXCOORD", i8 9, i8 0, !23, i8 2, i32 1, i8 4, i32 1, i8 0, !24}
!23 = !{i32 1}
!24 = !{i32 3, i32 7}
!25 = !{i32 2, !"TEXCOORD", i8 9, i8 0, !26, i8 2, i32 1, i8 3, i32 2, i8 0, !24}
!26 = !{i32 2}
!27 = !{i32 3, !"COLOR", i8 9, i8 0, !20, i8 2, i32 1, i8 4, i32 3, i8 0, !28}
!28 = !{i32 3, i32 15}
!29 = !{!30}
!30 = !{i32 0, !"SV_Target", i8 9, i8 16, !20, i8 0, i32 1, i8 4, i32 0, i8 0, !28}

;
; DUMPING SHADER HARDWARE INSTRUCTIONS 
;
// Shader Type               : (PS)
// Shader Hw Stage           : (PS)

// Shader Instructions:
shader main
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  s_mov_b64     s[48:49], exec
  s_wqm_b64     exec, exec // wrscc
  s_mov_b32     s20, s5
  s_mov_b32     s12, s3
  s_mov_b32     s13, 0
  s_mov_b32     s5, 0
  s_mov_b32     s21, 0
  s_load_dwordx4  s[0:3], s[4:5], 0x00
  s_load_dwordx8  s[12:19], s[12:13], 0x00
  s_mov_b32     m0, s9
  v_interp_p1_f32  v2, v0, attr0.x
  v_interp_p1_f32  v3, v0, attr0.y
  v_interp_p2_f32  v2, v1, attr0.x
  v_interp_p2_f32  v3, v1, attr0.y
  s_load_dwordx8  s[32:39], s[20:21], 0x00
  s_waitcnt     lgkmcnt(0)
  image_sample  v[2:5], v[2:3], s[12:19], s[0:3] dmask:0xf
  v_interp_p1_f32  v8, v0, attr2.y
  v_interp_p1_f32  v7, v0, attr2.x
  v_interp_p2_f32  v8, v1, attr2.y
  v_interp_p1_f32  v10, v0, attr2.z
  v_interp_p2_f32  v7, v1, attr2.x
  v_mul_legacy_f32  v9, v8, v8
  s_mov_b32     s10, s7
  v_interp_p1_f32  v6, v0, attr3.x
  v_mac_legacy_f32  v9, v7, v7
  v_interp_p2_f32  v10, v1, attr2.z
  v_interp_p2_f32  v6, v1, attr3.x
  v_mac_legacy_f32  v9, v10, v10
  s_or_b32      s17, s8, 0x00100000 // wrscc
  s_mov_b32     s16, s10
  s_mov_b32     s18, -1
  s_mov_b32     s19, 0x00024fac
  s_buffer_load_dwordx2  s[50:51], s[16:19], 0x04
  s_buffer_load_dwordx4  s[40:43], s[16:19], 0x00
  s_buffer_load_dwordx4  s[0:3], s[16:19], 0x28
  v_interp_p1_f32  v11, v0, attr1.y
  v_interp_p2_f32  v11, v1, attr1.y
  v_interp_p1_f32  v13, v0, attr1.z
  v_interp_p2_f32  v13, v1, attr1.z
  s_waitcnt     lgkmcnt(0)
  v_sub_f32     v11, s1, v11
  v_mul_legacy_f32  v12, v11, v11
  v_sub_f32     v13, s2, v13
  s_mov_b32     s7, 0
  s_load_dwordx4  s[44:47], s[6:7], 0x00
  v_interp_p1_f32  v17, v0, attr3.y
  v_interp_p2_f32  v17, v1, attr3.y
  s_waitcnt     vmcnt(0)
  v_mul_legacy_f32  v2, v2, v6
  v_rsq_f32     v6, v9
  v_mul_legacy_f32  v3, v3, v17
  v_mul_legacy_f32  v9, v6, v7
  v_interp_p1_f32  v7, v0, attr1.x
  v_interp_p2_f32  v7, v1, attr1.x
  v_sub_f32     v7, s0, v7
  v_mac_legacy_f32  v12, v7, v7
  v_mac_legacy_f32  v12, v13, v13
  v_rsq_f32     v12, v12
  v_mul_legacy_f32  v8, v6, v8
  v_mul_legacy_f32  v10, v6, v10
  s_buffer_load_dwordx16  s[0:15], s[16:19], 0x08
  v_mul_legacy_f32  v14, v7, v12
  v_mul_legacy_f32  v7, v11, v12
  v_mul_legacy_f32  v11, v13, v12
  v_mul_legacy_f32  v12, v7, v8
  v_mad_legacy_f32  v13, -v14, v9, -v12
  v_mad_legacy_f32  v6, -v11, v10, v13 mul:2
  v_mad_legacy_f32  v7, -v6, v8, -v7
  v_mad_legacy_f32  v13, -v6, v10, -v11
  v_mul_legacy_f32  v15, v7, v7
  v_mad_legacy_f32  v6, -v6, v9, -v14
  v_add_f32     v13, 1.0, v13
  v_mac_legacy_f32  v15, v6, v6
  v_mad_legacy_f32  v13, v13, v13, v15
  v_rsq_f32     v13, v13 div:2
  s_buffer_load_dwordx16  s[16:31], s[16:19], 0x18
  v_mad_legacy_f32  v6, v6, v13, 0.5
  v_mad_legacy_f32  v7, v7, v13, 0.5
  s_waitcnt     lgkmcnt(0)
  v_mul_legacy_f32  v13, s8, v9
  v_mad_legacy_f32  v13, -s9, v8, -v13
  v_mac_legacy_f32  v13, v10, -s10
  v_cmp_gt_f32  vcc, 0, v13
  v_cndmask_b32  v15, 1.0, 0, vcc
  v_mul_legacy_f32  v13, v15, v13
  v_mul_legacy_f32  v15, s16, v9
  v_mad_legacy_f32  v15, -s17, v8, -v15
  v_mac_legacy_f32  v15, v10, -s18
  v_cmp_gt_f32  vcc, 0, v15
  v_cndmask_b32  v16, 1.0, 0, vcc
  v_mul_legacy_f32  v15, v16, v15
  v_mul_legacy_f32  v16, s12, v9
  v_mad_legacy_f32  v8, -s13, v8, -v16
  v_mac_legacy_f32  v8, v10, -s14
  v_cmp_gt_f32  vcc, 0, v8
  v_cndmask_b32  v16, 1.0, 0, vcc
  v_mul_legacy_f32  v8, v16, v8
  v_mul_legacy_f32  v16, s20, v13
  v_mac_legacy_f32  v16, s24, v8
  v_mac_legacy_f32  v16, s28, v15
  v_mul_legacy_f32  v16, s0, v16
  v_add_f32     v16, s4, v16
  v_mul_legacy_f32  v16, v2, v16
  v_mul_legacy_f32  v2, s21, v13
  v_mac_legacy_f32  v2, s25, v8
  v_mac_legacy_f32  v2, s29, v15
  v_mul_legacy_f32  v2, s1, v2
  v_add_f32     v2, s5, v2
  v_mul_legacy_f32  v17, v3, v2
  v_mul_legacy_f32  v2, s22, v13
  v_mac_legacy_f32  v2, s26, v8
  v_interp_p1_f32  v3, v0, attr3.z
  v_mac_legacy_f32  v2, s30, v15
  v_mul_legacy_f32  v2, s2, v2
  v_interp_p2_f32  v3, v1, attr3.z
  v_interp_p1_f32  v0, v0, attr3.w
  v_interp_p2_f32  v0, v1, attr3.w
  v_add_f32     v2, s6, v2
  v_mul_legacy_f32  v3, v4, v3
  v_mul_legacy_f32  v4, v3, v2
  v_mul_legacy_f32  v5, v5, v0
  s_and_b64     exec, exec, s[48:49] // wrscc
  image_sample  v[0:3], v[6:7], s[32:39], s[44:47] dmask:0xf
  v_mad_legacy_f32  v6, v14, v9, v12
  v_mac_legacy_f32  v6, v11, v10
  v_sub_f32     v6, 1.0, abs(v6)
  v_max_f32     v6, 0, v6
  v_log_f32     v6, v6
  v_mul_legacy_f32  v6, s51, v6
  v_exp_f32     v6, v6
  v_mul_legacy_f32  v6, s50, v6
  s_waitcnt     vmcnt(0)
  v_mad_legacy_f32  v0, v0, v5, -v16
  v_mad_legacy_f32  v0, v6, v0, v16
  v_mul_legacy_f32  v3, v3, v5
  v_mad_legacy_f32  v1, v1, v5, -v17
  v_mad_legacy_f32  v8, s40, v3, v0
  v_mad_legacy_f32  v0, v2, v5, -v4
  v_mad_legacy_f32  v1, v6, v1, v17
  v_mad_legacy_f32  v0, v6, v0, v4
  v_mad_legacy_f32  v7, s41, v3, v1
  v_mad_legacy_f32  v2, s42, v3, v0
  v_cvt_pkrtz_f16_f32  v0, v8, v7
  v_cvt_pkrtz_f16_f32  v1, v2, v5
  exp           mrt0, v0, v0, v1, v1 done compr vm
  s_endpgm      
end


NumVGPR=18,NumSGPR=54,LDS=0,Scratch=0,Occpancy=9


#endif

const unsigned char EnvironmentMapEffect_PSEnvMapSpherePixelLightingFresnelNoFog[] = {
  0x44, 0x58, 0x42, 0x43, 0x5b, 0xd7, 0xcb, 0xf1, 0x62, 0x83, 0x79, 0xde,
  0x11, 0xcb, 0xdd, 0xf6, 0x87, 0xd8, 0x20, 0x49, 0x01, 0x00, 0x00, 0x00,
  0xc0, 0x17, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00,
  0x50, 0x00, 0x00, 0x00, 0xf0, 0x00, 0x00, 0x00, 0x2c, 0x01, 0x00, 0x00,
  0xe0, 0x02, 0x00, 0x00, 0xb4, 0x03, 0x00, 0x00, 0x64, 0x04, 0x00, 0x00,
  0x80, 0x04, 0x00, 0x00, 0x53, 0x46, 0x49, 0x30, 0x08, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x49, 0x53, 0x47, 0x31,
  0x98, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x88, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x03, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x88, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0f, 0x07, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x88, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x07, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x91, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x0f, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x54, 0x45, 0x58, 0x43,
  0x4f, 0x4f, 0x52, 0x44, 0x00, 0x43, 0x4f, 0x4c, 0x4f, 0x52, 0x00, 0x00,
  0x4f, 0x53, 0x47, 0x31, 0x34, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x28, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x53, 0x56, 0x5f, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x00, 0x00, 0x00,
  0x50, 0x53, 0x56, 0x30, 0xac, 0x01, 0x00, 0x00, 0x34, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff,
  0x00, 0x00, 0x00, 0x00, 0x04, 0x01, 0x00, 0x04, 0x01, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x22, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x4c, 0x00, 0x00, 0x00, 0x00, 0x54, 0x45, 0x58, 0x43, 0x4f, 0x4f, 0x52,
  0x44, 0x00, 0x54, 0x45, 0x58, 0x43, 0x4f, 0x4f, 0x52, 0x44, 0x00, 0x54,
  0x45, 0x58, 0x43, 0x4f, 0x4f, 0x52, 0x44, 0x00, 0x43, 0x4f, 0x4c, 0x4f,
  0x52, 0x00, 0x50, 0x53, 0x45, 0x6e, 0x76, 0x4d, 0x61, 0x70, 0x53, 0x70,
  0x68, 0x65, 0x72, 0x65, 0x50, 0x69, 0x78, 0x65, 0x6c, 0x4c, 0x69, 0x67,
  0x68, 0x74, 0x69, 0x6e, 0x67, 0x46, 0x72, 0x65, 0x73, 0x6e, 0x65, 0x6c,
  0x4e, 0x6f, 0x46, 0x6f, 0x67, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x10, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x42, 0x00, 0x03, 0x02, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x01, 0x01, 0x44, 0x00, 0x03, 0x02, 0x00, 0x00,
  0x13, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x02, 0x43, 0x00,
  0x03, 0x02, 0x00, 0x00, 0x1c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x03, 0x44, 0x00, 0x03, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x44, 0x10, 0x03, 0x00, 0x00, 0x00,
  0x0f, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00,
  0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00,
  0x07, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00,
  0x0f, 0x00, 0x00, 0x00, 0x52, 0x54, 0x53, 0x30, 0xcc, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xcc, 0x00, 0x00, 0x00, 0x1d, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x54, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x70, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x8c, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0xa8, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc4, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x5c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xff, 0xff, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x78, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00,
  0x94, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff,
  0x01, 0x00, 0x00, 0x00, 0xb0, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x49, 0x4c, 0x44, 0x4e, 0xa8, 0x00, 0x00, 0x00, 0x00, 0x00, 0xa1, 0x00,
  0x43, 0x3a, 0x5c, 0x55, 0x73, 0x65, 0x72, 0x73, 0x5c, 0x6d, 0x61, 0x72,
  0x63, 0x75, 0x5c, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x73,
  0x5c, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x58, 0x54, 0x4b, 0x31, 0x32,
  0x2d, 0x6d, 0x61, 0x69, 0x6e, 0x5c, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74,
  0x58, 0x54, 0x4b, 0x31, 0x32, 0x2d, 0x6d, 0x61, 0x69, 0x6e, 0x5c, 0x53,
  0x72, 0x63, 0x2f, 0x53, 0x68, 0x61, 0x64, 0x65, 0x72, 0x73, 0x2f, 0x43,
  0x6f, 0x6d, 0x70, 0x69, 0x6c, 0x65, 0x64, 0x5c, 0x58, 0x62, 0x6f, 0x78,
  0x47, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x58, 0x62, 0x6f, 0x78, 0x4f, 0x6e,
  0x65, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
  0x4d, 0x61, 0x70, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x5f, 0x50, 0x53,
  0x45, 0x6e, 0x76, 0x4d, 0x61, 0x70, 0x53, 0x70, 0x68, 0x65, 0x72, 0x65,
  0x50, 0x69, 0x78, 0x65, 0x6c, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e,
  0x67, 0x46, 0x72, 0x65, 0x73, 0x6e, 0x65, 0x6c, 0x4e, 0x6f, 0x46, 0x6f,
  0x67, 0x2e, 0x70, 0x64, 0x62, 0x00, 0x00, 0x00, 0x48, 0x41, 0x53, 0x48,
  0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x50, 0x93, 0x14, 0xf3,
  0x8d, 0x0b, 0x7b, 0xbd, 0x56, 0x5c, 0x3f, 0x41, 0xdb, 0x20, 0x84, 0x76,
  0x44, 0x58, 0x49, 0x4c, 0x38, 0x13, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00,
  0xce, 0x04, 0x00, 0x00, 0x44, 0x58, 0x49, 0x4c, 0x00, 0x01, 0x00, 0x00,
  0x7c, 0x00, 0x00, 0x00, 0x20, 0x0d, 0x00, 0x00, 0x58, 0x44, 0x41, 0x54,
  0x06, 0x00, 0x00, 0x00, 0x24, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00,
  0x6c, 0x00, 0x00, 0x00, 0x38, 0x0d, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00,
  0xa4, 0x0d, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xb4, 0x0d, 0x00, 0x00, 0xf0, 0x03, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0xa4, 0x11, 0x00, 0x00, 0x20, 0x01, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00,
  0xc4, 0x12, 0x00, 0x00, 0x5f, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00,
  0x24, 0x13, 0x00, 0x00, 0x11, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00,
  0x4e, 0x03, 0x00, 0x00, 0x44, 0x58, 0x49, 0x4c, 0x00, 0x01, 0x00, 0x00,
  0x10, 0x00, 0x00, 0x00, 0x20, 0x0d, 0x00, 0x00, 0x42, 0x43, 0xc0, 0xde,
  0x21, 0x0c, 0x00, 0x00, 0x45, 0x03, 0x00, 0x00, 0x0b, 0x82, 0x20, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x13, 0x00, 0x00, 0x00, 0x07, 0x81, 0x23, 0x91,
  0x41, 0xc8, 0x04, 0x49, 0x06, 0x10, 0x32, 0x39, 0x92, 0x01, 0x84, 0x0c,
  0x25, 0x05, 0x08, 0x19, 0x1e, 0x04, 0x8b, 0x62, 0x80, 0x18, 0x45, 0x02,
  0x42, 0x92, 0x0b, 0x42, 0xc4, 0x10, 0x32, 0x14, 0x38, 0x08, 0x18, 0x4b,
  0x0a, 0x32, 0x62, 0x88, 0x48, 0x90, 0x14, 0x20, 0x43, 0x46, 0x88, 0xa5,
  0x00, 0x19, 0x32, 0x42, 0xe4, 0x48, 0x0e, 0x90, 0x11, 0x23, 0xc4, 0x50,
  0x41, 0x51, 0x81, 0x8c, 0xe1, 0x83, 0xe5, 0x8a, 0x04, 0x31, 0x46, 0x06,
  0x51, 0x18, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x1b, 0x8c, 0xe0, 0xff,
  0xff, 0xff, 0xff, 0x07, 0x40, 0x02, 0xa8, 0x0d, 0x84, 0xf0, 0xff, 0xff,
  0xff, 0xff, 0x03, 0x20, 0x6d, 0x30, 0x86, 0xff, 0xff, 0xff, 0xff, 0x1f,
  0x00, 0x09, 0xa8, 0x00, 0x49, 0x18, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x13, 0x82, 0x60, 0x42, 0x20, 0x4c, 0x08, 0x06, 0x00, 0x00, 0x00, 0x00,
  0x89, 0x20, 0x00, 0x00, 0x5b, 0x00, 0x00, 0x00, 0x32, 0x22, 0x88, 0x09,
  0x20, 0x64, 0x85, 0x04, 0x13, 0x23, 0xa4, 0x84, 0x04, 0x13, 0x23, 0xe3,
  0x84, 0xa1, 0x90, 0x14, 0x12, 0x4c, 0x8c, 0x8c, 0x0b, 0x84, 0xc4, 0x4c,
  0x10, 0xa8, 0xc1, 0x08, 0x40, 0x09, 0x00, 0x0a, 0x66, 0x00, 0xe6, 0x08,
  0xc0, 0x60, 0x8e, 0x00, 0x29, 0xc6, 0x40, 0x10, 0x44, 0x41, 0x90, 0x51,
  0x0c, 0x80, 0x20, 0x88, 0x62, 0x20, 0xe4, 0xa6, 0xe1, 0xf2, 0x27, 0xec,
  0x21, 0x24, 0x7f, 0x25, 0xa4, 0x95, 0x98, 0xfc, 0xe2, 0xb6, 0x51, 0x31,
  0x0c, 0xc3, 0x40, 0x50, 0x71, 0xcf, 0x70, 0xf9, 0x13, 0xf6, 0x10, 0x92,
  0x1f, 0x02, 0xcd, 0xb0, 0x10, 0x28, 0x58, 0x0a, 0xa3, 0x10, 0x0c, 0x33,
  0x0c, 0xc3, 0x40, 0x10, 0xc4, 0x40, 0x4d, 0x41, 0x06, 0x62, 0x18, 0x86,
  0x61, 0x18, 0xe8, 0x29, 0xc3, 0x40, 0x0c, 0x14, 0x15, 0x62, 0x20, 0x86,
  0x81, 0xa6, 0xa3, 0x86, 0xcb, 0x9f, 0xb0, 0x87, 0x90, 0x7c, 0x6e, 0xa3,
  0x8a, 0x95, 0x98, 0xfc, 0xe2, 0xb6, 0x11, 0x31, 0x0c, 0xc3, 0x50, 0x88,
  0x8a, 0x60, 0x08, 0xb2, 0x4a, 0x31, 0x10, 0xc3, 0x30, 0x10, 0x36, 0x47,
  0x10, 0x14, 0x83, 0x21, 0x0a, 0x82, 0xd0, 0x68, 0x1b, 0x08, 0x18, 0x46,
  0x20, 0x86, 0x99, 0xda, 0x60, 0x1c, 0xd8, 0x21, 0x1c, 0xe6, 0x61, 0x1e,
  0xdc, 0x80, 0x16, 0xca, 0x01, 0x1f, 0xe8, 0xa1, 0x1e, 0xe4, 0xa1, 0x1c,
  0xe4, 0x80, 0x14, 0xf8, 0xc0, 0x1e, 0xca, 0x61, 0x1c, 0xe8, 0xe1, 0x1d,
  0xe4, 0x81, 0x0f, 0xcc, 0x81, 0x1d, 0xde, 0x21, 0x1c, 0xe8, 0x81, 0x0d,
  0xc0, 0x80, 0x0e, 0xfc, 0x00, 0x0c, 0xfc, 0x40, 0x0f, 0xf4, 0xa0, 0x1d,
  0xd2, 0x01, 0x1e, 0xe6, 0xe1, 0x17, 0xe8, 0x21, 0x1f, 0xe0, 0xa1, 0x1c,
  0x50, 0x40, 0xcc, 0x24, 0x06, 0xe3, 0xc0, 0x0e, 0xe1, 0x30, 0x0f, 0xf3,
  0xe0, 0x06, 0xb4, 0x50, 0x0e, 0xf8, 0x40, 0x0f, 0xf5, 0x20, 0x0f, 0xe5,
  0x20, 0x07, 0xa4, 0xc0, 0x07, 0xf6, 0x50, 0x0e, 0xe3, 0x40, 0x0f, 0xef,
  0x20, 0x0f, 0x7c, 0x60, 0x0e, 0xec, 0xf0, 0x0e, 0xe1, 0x40, 0x0f, 0x6c,
  0x00, 0x06, 0x74, 0xe0, 0x07, 0x60, 0xe0, 0x07, 0x48, 0xf0, 0x3e, 0x02,
  0x87, 0x11, 0x86, 0x21, 0x07, 0xc4, 0x24, 0xf0, 0xae, 0x3a, 0x1c, 0x69,
  0x5a, 0x00, 0xcc, 0xa1, 0x26, 0x3f, 0x05, 0x22, 0x80, 0x21, 0x26, 0x22,
  0x92, 0x50, 0x23, 0x0e, 0x83, 0x27, 0x8e, 0xa3, 0x28, 0x7a, 0xe4, 0x48,
  0x52, 0x79, 0x93, 0x34, 0x45, 0x94, 0x30, 0xf9, 0x2c, 0xc0, 0x3c, 0x0b,
  0x11, 0xb1, 0x13, 0x30, 0x11, 0x28, 0x20, 0xe8, 0x4c, 0x09, 0x02, 0x00,
  0x13, 0x16, 0x72, 0xc0, 0x87, 0x74, 0x60, 0x87, 0x36, 0x68, 0x87, 0x79,
  0x68, 0x03, 0x7c, 0x10, 0x87, 0x38, 0xd8, 0xf0, 0x0a, 0xe5, 0xd0, 0x06,
  0xed, 0xa0, 0x07, 0xe5, 0xd0, 0x06, 0xf0, 0xa0, 0x07, 0x73, 0x20, 0x07,
  0x7a, 0x30, 0x07, 0x72, 0xd0, 0x06, 0xe9, 0x10, 0x07, 0x7a, 0x30, 0x07,
  0x72, 0xd0, 0x06, 0xe9, 0x80, 0x07, 0x7a, 0x30, 0x07, 0x72, 0xd0, 0x06,
  0xe9, 0x10, 0x07, 0x76, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x90, 0x0e,
  0x73, 0x20, 0x07, 0x7a, 0x30, 0x07, 0x72, 0xd0, 0x06, 0xe9, 0x60, 0x07,
  0x74, 0xa0, 0x07, 0x76, 0x40, 0x07, 0x6d, 0x60, 0x0e, 0x71, 0x60, 0x07,
  0x7a, 0x30, 0x07, 0x72, 0xd0, 0x06, 0xe6, 0x30, 0x07, 0x72, 0xa0, 0x07,
  0x73, 0x20, 0x07, 0x6d, 0x60, 0x0e, 0x76, 0x40, 0x07, 0x7a, 0x60, 0x07,
  0x74, 0xd0, 0x06, 0xee, 0x80, 0x07, 0x7a, 0x10, 0x07, 0x76, 0xa0, 0x07,
  0x73, 0x20, 0x07, 0x7a, 0x60, 0x07, 0x74, 0x30, 0xe4, 0x09, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0xc8, 0x63, 0x00,
  0x01, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x90, 0x07,
  0x01, 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x21,
  0x4f, 0x03, 0x04, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x43, 0x9e, 0x07, 0x08, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x86, 0x3c, 0x11, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x0c, 0x79, 0x26, 0x20, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x18, 0xf2, 0x58, 0x40, 0x00, 0x0c, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x30, 0xe4, 0xc1, 0x80, 0x00, 0x08, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0xc8, 0xb3, 0x01, 0x01, 0x30, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x16, 0x08, 0x00, 0x00, 0x00,
  0x12, 0x00, 0x00, 0x00, 0x32, 0x1e, 0x98, 0x14, 0x19, 0x11, 0x4c, 0x90,
  0x8c, 0x09, 0x26, 0x47, 0xc6, 0x04, 0x43, 0x22, 0x4a, 0x60, 0x04, 0xa0,
  0x20, 0x8a, 0xa1, 0x08, 0x4a, 0xa2, 0x00, 0x0d, 0xca, 0xa0, 0x1c, 0xca,
  0x83, 0x8a, 0x92, 0x18, 0x01, 0x28, 0x82, 0x42, 0x28, 0x83, 0x02, 0xa1,
  0x70, 0x06, 0x80, 0xcc, 0x19, 0x00, 0x42, 0x67, 0x00, 0x28, 0x1d, 0x4b,
  0x82, 0x88, 0xe7, 0x01, 0x80, 0xe3, 0x38, 0x80, 0xe3, 0x38, 0x80, 0x40,
  0x20, 0x1e, 0x00, 0x00, 0x79, 0x18, 0x00, 0x00, 0x90, 0x00, 0x00, 0x00,
  0x1a, 0x03, 0x4c, 0x90, 0x46, 0x02, 0x13, 0xc4, 0x36, 0xf8, 0xfa, 0xc2,
  0x12, 0x7a, 0xc2, 0xfa, 0x82, 0x2a, 0x92, 0xfa, 0xa2, 0x42, 0x92, 0x2a,
  0x0a, 0x22, 0xfa, 0x9a, 0x1a, 0x92, 0x0a, 0xa2, 0x1a, 0x42, 0xfa, 0x9a,
  0x4a, 0xd2, 0x2a, 0xfa, 0x62, 0x4a, 0x6a, 0x4a, 0xa2, 0xfa, 0x4a, 0x72,
  0xfa, 0x12, 0xca, 0xa2, 0x2a, 0x9a, 0x62, 0x00, 0xb3, 0x41, 0x08, 0x04,
  0x76, 0x64, 0x78, 0x63, 0x78, 0x62, 0x6f, 0x78, 0x20, 0x32, 0x34, 0x31,
  0x30, 0x2e, 0x32, 0x34, 0x31, 0x30, 0x2e, 0x31, 0x31, 0x31, 0x31, 0x36,
  0x2e, 0x31, 0x30, 0x37, 0x34, 0x31, 0x1b, 0x02, 0x62, 0x82, 0x40, 0x28,
  0x13, 0x04, 0x62, 0xd9, 0x20, 0x18, 0xc7, 0x04, 0x81, 0x60, 0x36, 0x08,
  0x46, 0x42, 0x01, 0x6e, 0x6e, 0x82, 0x40, 0x34, 0x1b, 0x86, 0x85, 0x39,
  0x26, 0x08, 0x61, 0xa0, 0x11, 0x98, 0x20, 0x10, 0xce, 0x04, 0x81, 0x78,
  0x36, 0x08, 0x47, 0xb4, 0x21, 0x39, 0x9c, 0xe7, 0x38, 0x0c, 0xe8, 0x90,
  0x36, 0x24, 0x86, 0xf3, 0x1c, 0x86, 0x01, 0x1d, 0xd2, 0x06, 0x61, 0xa2,
  0x26, 0x08, 0x66, 0xb0, 0x4d, 0x10, 0x08, 0x68, 0x03, 0x72, 0x58, 0xcf,
  0x71, 0x18, 0x17, 0xb0, 0x21, 0xc0, 0x26, 0x08, 0x68, 0xc0, 0x6d, 0x40,
  0x0e, 0xed, 0x39, 0x0e, 0xe3, 0x00, 0x36, 0x20, 0x86, 0xf6, 0x1c, 0x86,
  0x71, 0x00, 0x1b, 0x84, 0x8d, 0xdb, 0x40, 0x54, 0x40, 0xd6, 0x4d, 0x10,
  0xd2, 0xa0, 0xdb, 0x10, 0x7c, 0x13, 0x04, 0x01, 0xe0, 0x19, 0x40, 0x4d,
  0x15, 0xb9, 0xd9, 0x35, 0x85, 0xc1, 0x4d, 0xc1, 0xa1, 0x95, 0xc9, 0x95,
  0x41, 0xa5, 0xe1, 0x95, 0xb1, 0x31, 0xa5, 0x9d, 0xa1, 0xd1, 0xa5, 0xb9,
  0x9d, 0x19, 0xc9, 0x95, 0xcd, 0xb9, 0x95, 0xb1, 0x39, 0xbd, 0x19, 0xbd,
  0x9d, 0x11, 0xa1, 0x2a, 0xc2, 0x1a, 0x7a, 0x7a, 0x92, 0x22, 0x9a, 0x20,
  0x14, 0xd4, 0x04, 0xa1, 0xa8, 0x36, 0x04, 0xc7, 0x04, 0xa1, 0xb0, 0x26,
  0x08, 0x44, 0xb4, 0x41, 0x40, 0x03, 0x34, 0xd8, 0xb0, 0x1c, 0x63, 0x40,
  0x06, 0x65, 0x60, 0x06, 0x67, 0x60, 0x9c, 0xc1, 0x51, 0x06, 0x69, 0xb0,
  0x21, 0x30, 0x26, 0x08, 0xc5, 0x35, 0x41, 0x20, 0xa4, 0x0d, 0x02, 0x1a,
  0xb4, 0xc1, 0x86, 0xc5, 0x18, 0x03, 0x32, 0x28, 0x83, 0x35, 0x38, 0x03,
  0x83, 0x0d, 0x8c, 0x32, 0x70, 0x83, 0x0d, 0x01, 0x34, 0x41, 0x28, 0xb0,
  0x0d, 0x0b, 0x34, 0x06, 0x64, 0x50, 0x06, 0x70, 0x70, 0x06, 0x46, 0x1c,
  0x40, 0x65, 0xe0, 0x06, 0x2c, 0x86, 0x9e, 0x98, 0x9e, 0xa4, 0x26, 0x08,
  0xc4, 0xb4, 0x41, 0x40, 0x03, 0x3a, 0xd8, 0xb0, 0xa0, 0xc1, 0x1c, 0x90,
  0x41, 0x19, 0x98, 0xc1, 0x19, 0x18, 0x6c, 0x80, 0x06, 0x65, 0x50, 0x07,
  0x1b, 0x08, 0x35, 0x78, 0x03, 0x39, 0xb0, 0x03, 0x26, 0x53, 0x56, 0x5f,
  0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x13, 0x84, 0x22, 0xdb, 0xb0, 0x1c,
  0x78, 0x40, 0x06, 0x79, 0x60, 0x06, 0x65, 0x60, 0xb0, 0xc1, 0x51, 0x06,
  0x75, 0xb0, 0x21, 0xd0, 0x83, 0x0d, 0xc3, 0x1d, 0xec, 0x01, 0xb0, 0xa1,
  0x08, 0x03, 0x31, 0xe0, 0x03, 0x0f, 0x68, 0x85, 0x27, 0xf6, 0x86, 0xe7,
  0x32, 0xf6, 0xd6, 0x06, 0x97, 0xc6, 0x56, 0x26, 0xe7, 0xf2, 0x06, 0x47,
  0x97, 0xf6, 0xe6, 0x36, 0x37, 0x25, 0x10, 0xaa, 0xb0, 0xb1, 0xd9, 0xb5,
  0xb9, 0xa4, 0x91, 0x95, 0xb9, 0xd1, 0x4d, 0x09, 0x88, 0x2a, 0x64, 0x78,
  0x2e, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x82, 0xa3, 0x09,
  0x19, 0x9e, 0x8b, 0x5d, 0x18, 0x9b, 0x5d, 0x99, 0xdc, 0x94, 0x20, 0xa9,
  0x43, 0x86, 0xe7, 0x32, 0x87, 0x16, 0x46, 0x56, 0x26, 0xd7, 0xf4, 0x46,
  0x56, 0xc6, 0x36, 0x25, 0x60, 0xca, 0x90, 0xe1, 0xb9, 0xc8, 0x95, 0xcd,
  0xbd, 0xd5, 0xc9, 0x8d, 0x95, 0xcd, 0x4d, 0x09, 0xba, 0x3a, 0x64, 0x78,
  0x2e, 0x76, 0x69, 0x65, 0x77, 0x49, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65,
  0x53, 0x82, 0xaf, 0x0e, 0x19, 0x9e, 0x4b, 0x99, 0x1b, 0x9d, 0x5c, 0x1e,
  0xd4, 0x5b, 0x9a, 0x1b, 0xdd, 0xdc, 0x94, 0x80, 0x0f, 0x00, 0x00, 0x00,
  0x79, 0x18, 0x00, 0x00, 0x50, 0x00, 0x00, 0x00, 0x33, 0x08, 0x80, 0x1c,
  0xc4, 0xe1, 0x1c, 0x66, 0x14, 0x01, 0x3d, 0x88, 0x43, 0x38, 0x84, 0xc3,
  0x8c, 0x42, 0x80, 0x07, 0x79, 0x78, 0x07, 0x73, 0x98, 0x71, 0x0c, 0xe6,
  0x00, 0x0f, 0xed, 0x10, 0x0e, 0xf4, 0x80, 0x0e, 0x33, 0x0c, 0x42, 0x1e,
  0xc2, 0xc1, 0x1d, 0xce, 0xa1, 0x1c, 0x66, 0x30, 0x05, 0x3d, 0x88, 0x43,
  0x38, 0x84, 0x83, 0x1b, 0xcc, 0x03, 0x3d, 0xc8, 0x43, 0x3d, 0x8c, 0x03,
  0x3d, 0xcc, 0x78, 0x8c, 0x74, 0x70, 0x07, 0x7b, 0x08, 0x07, 0x79, 0x48,
  0x87, 0x70, 0x70, 0x07, 0x7a, 0x70, 0x03, 0x76, 0x78, 0x87, 0x70, 0x20,
  0x87, 0x19, 0xcc, 0x11, 0x0e, 0xec, 0x90, 0x0e, 0xe1, 0x30, 0x0f, 0x6e,
  0x30, 0x0f, 0xe3, 0xf0, 0x0e, 0xf0, 0x50, 0x0e, 0x33, 0x10, 0xc4, 0x1d,
  0xde, 0x21, 0x1c, 0xd8, 0x21, 0x1d, 0xc2, 0x61, 0x1e, 0x66, 0x30, 0x89,
  0x3b, 0xbc, 0x83, 0x3b, 0xd0, 0x43, 0x39, 0xb4, 0x03, 0x3c, 0xbc, 0x83,
  0x3c, 0x84, 0x03, 0x3b, 0xcc, 0xf0, 0x14, 0x76, 0x60, 0x07, 0x7b, 0x68,
  0x07, 0x37, 0x68, 0x87, 0x72, 0x68, 0x07, 0x37, 0x80, 0x87, 0x70, 0x90,
  0x87, 0x70, 0x60, 0x07, 0x76, 0x28, 0x07, 0x76, 0xf8, 0x05, 0x76, 0x78,
  0x87, 0x77, 0x80, 0x87, 0x5f, 0x08, 0x87, 0x71, 0x18, 0x87, 0x72, 0x98,
  0x87, 0x79, 0x98, 0x81, 0x2c, 0xee, 0xf0, 0x0e, 0xee, 0xe0, 0x0e, 0xf5,
  0xc0, 0x0e, 0xec, 0x30, 0x03, 0x62, 0xc8, 0xa1, 0x1c, 0xe4, 0xa1, 0x1c,
  0xcc, 0xa1, 0x1c, 0xe4, 0xa1, 0x1c, 0xdc, 0x61, 0x1c, 0xca, 0x21, 0x1c,
  0xc4, 0x81, 0x1d, 0xca, 0x61, 0x06, 0xd6, 0x90, 0x43, 0x39, 0xc8, 0x43,
  0x39, 0x98, 0x43, 0x39, 0xc8, 0x43, 0x39, 0xb8, 0xc3, 0x38, 0x94, 0x43,
  0x38, 0x88, 0x03, 0x3b, 0x94, 0xc3, 0x2f, 0xbc, 0x83, 0x3c, 0xfc, 0x82,
  0x3b, 0xd4, 0x03, 0x3b, 0xb0, 0xc3, 0x0c, 0xc4, 0x21, 0x07, 0x7c, 0x70,
  0x03, 0x7a, 0x28, 0x87, 0x76, 0x80, 0x87, 0x19, 0xca, 0xc3, 0x0e, 0xec,
  0x60, 0x0f, 0xed, 0xe0, 0x06, 0xec, 0xf0, 0x0e, 0xef, 0x00, 0x0f, 0x33,
  0x22, 0x88, 0x1c, 0xf0, 0xc1, 0x0d, 0xc8, 0x41, 0x1c, 0xce, 0xc1, 0x0d,
  0xec, 0x21, 0x1c, 0xe4, 0x81, 0x1d, 0xc2, 0x21, 0x1f, 0xde, 0xa1, 0x1e,
  0xe8, 0x01, 0x00, 0x00, 0x71, 0x20, 0x00, 0x00, 0x2c, 0x00, 0x00, 0x00,
  0x06, 0x70, 0x06, 0x29, 0xeb, 0x35, 0x95, 0x09, 0x3c, 0xec, 0x73, 0x10,
  0x11, 0x91, 0x22, 0x17, 0xb1, 0x94, 0x88, 0x71, 0x4c, 0x48, 0x63, 0x7c,
  0x11, 0x21, 0x35, 0xc4, 0x72, 0x3a, 0x9f, 0x63, 0x98, 0x01, 0x34, 0x5c,
  0xbe, 0xf3, 0xf8, 0x01, 0xd2, 0x00, 0x11, 0xe6, 0x17, 0xb7, 0x6d, 0x07,
  0xdb, 0x70, 0xf9, 0xce, 0xe3, 0x0b, 0x01, 0x55, 0x14, 0x44, 0x54, 0x3a,
  0xc0, 0x50, 0x12, 0x06, 0x20, 0x60, 0x7e, 0x71, 0xdb, 0x96, 0x20, 0x0d,
  0x97, 0xef, 0x3c, 0xbe, 0x10, 0x11, 0xc0, 0x44, 0x84, 0x40, 0x33, 0x2c,
  0x84, 0x11, 0x38, 0xc3, 0xe5, 0x3b, 0x8f, 0x3f, 0x38, 0xd3, 0xed, 0x17,
  0xb7, 0x6d, 0x01, 0xd3, 0x70, 0xf9, 0xce, 0xe3, 0x2f, 0x0e, 0x30, 0x88,
  0xcd, 0x43, 0x4d, 0x7e, 0x71, 0xdb, 0x36, 0x00, 0x0d, 0x97, 0xef, 0x3c,
  0xbe, 0x04, 0x30, 0xcf, 0x42, 0xf8, 0xc5, 0x6d, 0x9b, 0x40, 0x35, 0x5c,
  0xbe, 0xf3, 0xf8, 0xd2, 0xe4, 0x44, 0x04, 0x4a, 0x4d, 0x0f, 0x35, 0xf9,
  0xc5, 0x6d, 0x1b, 0x82, 0x34, 0x5c, 0xbe, 0xf3, 0xf8, 0x13, 0x11, 0x4d,
  0x08, 0x10, 0x61, 0x7e, 0x71, 0xdb, 0x56, 0xf0, 0x0c, 0x97, 0xef, 0x3c,
  0x3e, 0xd5, 0x00, 0x11, 0xe6, 0x17, 0xb7, 0x0d, 0x61, 0x20, 0x00, 0x00,
  0x56, 0x01, 0x00, 0x00, 0x13, 0x04, 0x41, 0x2c, 0x10, 0x00, 0x00, 0x00,
  0x10, 0x00, 0x00, 0x00, 0xa4, 0x8d, 0x00, 0x50, 0x51, 0x02, 0x44, 0x94,
  0x4a, 0xb9, 0x94, 0x51, 0xc1, 0xcc, 0x00, 0x14, 0x42, 0x71, 0x95, 0x5d,
  0xc9, 0x95, 0x42, 0xb9, 0x15, 0x5e, 0xc9, 0x14, 0x05, 0x0d, 0x63, 0x04,
  0x20, 0x08, 0x82, 0xf0, 0x37, 0x46, 0x00, 0x82, 0x20, 0x08, 0x82, 0xc1,
  0x18, 0x01, 0x08, 0x82, 0x20, 0xfe, 0xcd, 0x00, 0x8c, 0x00, 0x8c, 0x11,
  0x80, 0x20, 0x08, 0x82, 0xa0, 0x00, 0x00, 0x00, 0x23, 0x06, 0x09, 0x00,
  0x82, 0x60, 0xb0, 0xad, 0x01, 0xf3, 0xa9, 0x81, 0x1a, 0x58, 0x23, 0x06,
  0x09, 0x00, 0x82, 0x60, 0xb0, 0xb1, 0x41, 0x03, 0x06, 0x6a, 0xa0, 0x06,
  0xd7, 0x88, 0x41, 0x02, 0x80, 0x20, 0x18, 0x6c, 0x6d, 0xe0, 0x78, 0x6c,
  0xc0, 0x06, 0xd8, 0x88, 0x41, 0x02, 0x80, 0x20, 0x18, 0x6c, 0x6e, 0xf0,
  0x7c, 0x6c, 0xc0, 0x06, 0xd9, 0x88, 0x41, 0x02, 0x80, 0x20, 0x18, 0x6c,
  0x6f, 0x00, 0x89, 0x41, 0x1b, 0xb4, 0x81, 0x36, 0x62, 0x90, 0x00, 0x20,
  0x08, 0x06, 0x06, 0x1e, 0x50, 0x68, 0xe0, 0x06, 0x64, 0x50, 0x8d, 0x18,
  0x24, 0x00, 0x08, 0x82, 0x81, 0x91, 0x07, 0x55, 0x1a, 0xbc, 0xc1, 0x66,
  0x8d, 0x18, 0x24, 0x00, 0x08, 0x82, 0x81, 0xa1, 0x07, 0x96, 0x1a, 0xc0,
  0x41, 0x19, 0x5c, 0x23, 0x06, 0x09, 0x00, 0x82, 0x60, 0x60, 0xec, 0xc1,
  0xb5, 0x06, 0x71, 0x40, 0x06, 0xd8, 0x88, 0x41, 0x02, 0x80, 0x20, 0x18,
  0x18, 0x7c, 0x80, 0xbd, 0x81, 0x1c, 0xa0, 0x41, 0x36, 0x62, 0x90, 0x00,
  0x20, 0x08, 0x06, 0x46, 0x1f, 0x64, 0x70, 0x30, 0x07, 0x9f, 0x36, 0x62,
  0x90, 0x00, 0x20, 0x08, 0x06, 0x86, 0x1f, 0x68, 0x71, 0x40, 0x07, 0x69,
  0xb0, 0x8d, 0x18, 0x24, 0x00, 0x08, 0x82, 0x81, 0xf1, 0x07, 0x9b, 0x1d,
  0xd4, 0xc1, 0x1a, 0x70, 0x23, 0x06, 0x09, 0x00, 0x82, 0x60, 0x60, 0x80,
  0x02, 0x77, 0x07, 0x76, 0x20, 0x06, 0xdd, 0x88, 0x41, 0x02, 0x80, 0x20,
  0x18, 0x18, 0xa1, 0xd0, 0xe1, 0xc1, 0x1d, 0xb0, 0x81, 0x37, 0x62, 0x90,
  0x00, 0x20, 0x08, 0x06, 0x86, 0x28, 0x78, 0x78, 0x80, 0x07, 0x6e, 0xf0,
  0x8d, 0x18, 0x24, 0x00, 0x08, 0x82, 0x81, 0x31, 0x0a, 0x5f, 0x1e, 0xe4,
  0x41, 0x19, 0x80, 0xc1, 0x88, 0xc1, 0x03, 0x80, 0x20, 0x18, 0x34, 0xa2,
  0xa0, 0x41, 0x8e, 0x10, 0x50, 0x94, 0x1e, 0xe8, 0x41, 0x18, 0x50, 0xa3,
  0x09, 0x01, 0x30, 0x9a, 0x20, 0x04, 0xa3, 0x09, 0x83, 0x30, 0x9a, 0x40,
  0x0c, 0x46, 0x44, 0xf2, 0x31, 0x22, 0x92, 0x8f, 0x11, 0x91, 0x7c, 0x8c,
  0x88, 0xe4, 0x33, 0x62, 0x70, 0x00, 0x20, 0x08, 0x06, 0xd6, 0x29, 0x9c,
  0x81, 0x15, 0x06, 0xa3, 0x09, 0x01, 0x30, 0x9a, 0x20, 0x04, 0xa3, 0x09,
  0x83, 0x60, 0x83, 0x14, 0x1f, 0x1b, 0xa4, 0xf8, 0xd8, 0x20, 0xc5, 0x67,
  0xc4, 0x60, 0x01, 0x40, 0x10, 0x0c, 0x9e, 0x58, 0x58, 0x83, 0x41, 0x08,
  0x06, 0x21, 0x18, 0x31, 0x30, 0x00, 0x10, 0x04, 0x83, 0x28, 0x16, 0xd4,
  0x20, 0xb0, 0x22, 0x90, 0x8f, 0x15, 0x82, 0x7c, 0xac, 0x18, 0xe4, 0x33,
  0x62, 0xb0, 0x00, 0x20, 0x08, 0x06, 0x8f, 0x2d, 0xc0, 0x41, 0xc7, 0x6d,
  0x1d, 0xb7, 0x8d, 0x18, 0x18, 0x00, 0x08, 0x82, 0x41, 0x64, 0x0b, 0x6f,
  0x10, 0x58, 0xf0, 0xc9, 0xc7, 0x84, 0x4f, 0x3e, 0x36, 0x7c, 0xf2, 0x19,
  0x31, 0x38, 0x00, 0x10, 0x04, 0x03, 0x0b, 0x17, 0xf0, 0xe0, 0x0c, 0xf4,
  0x60, 0x34, 0x21, 0x00, 0x46, 0x13, 0x84, 0x60, 0x34, 0x61, 0x10, 0x46,
  0x0c, 0x0e, 0x00, 0x04, 0xc1, 0xc0, 0xe2, 0x05, 0x3e, 0x58, 0x83, 0x58,
  0x18, 0x4d, 0x08, 0x80, 0xd1, 0x04, 0x21, 0x18, 0x4d, 0x18, 0x84, 0x11,
  0x83, 0x03, 0x00, 0x41, 0x30, 0xb0, 0xc0, 0x01, 0x14, 0xde, 0xc0, 0x0f,
  0x46, 0x13, 0x02, 0x60, 0x34, 0x41, 0x08, 0x46, 0x13, 0x06, 0x61, 0xc4,
  0xe0, 0x00, 0x40, 0x10, 0x0c, 0x2c, 0x72, 0x20, 0x85, 0x39, 0xf8, 0x85,
  0xd1, 0x84, 0x00, 0x18, 0x4d, 0x10, 0x82, 0xd1, 0x84, 0x41, 0x18, 0x31,
  0x38, 0x00, 0x10, 0x04, 0x03, 0x0b, 0x1d, 0x50, 0xe1, 0x0e, 0xc4, 0x61,
  0x34, 0x21, 0x00, 0x46, 0x13, 0x84, 0x60, 0x34, 0x61, 0x10, 0x46, 0x0c,
  0x0e, 0x00, 0x04, 0xc1, 0xc0, 0x62, 0x07, 0x56, 0xd8, 0x03, 0x72, 0x18,
  0x4d, 0x08, 0x80, 0xd1, 0x04, 0x21, 0x18, 0x4d, 0x18, 0x04, 0x23, 0x05,
  0x2b, 0x3e, 0x56, 0x0a, 0x56, 0x7c, 0xcc, 0x14, 0xa0, 0xf8, 0xd8, 0x29,
  0x40, 0xf1, 0x31, 0x54, 0x50, 0xe2, 0x63, 0xa9, 0xa0, 0xc4, 0xc7, 0xc2,
  0xa0, 0x93, 0x8f, 0xad, 0x42, 0x10, 0x9f, 0x11, 0x03, 0x04, 0x00, 0x41,
  0x30, 0xc0, 0xee, 0x21, 0x17, 0x10, 0x31, 0x08, 0x46, 0x0c, 0x10, 0x00,
  0x04, 0xc1, 0x00, 0xc3, 0x07, 0x5d, 0x40, 0xc4, 0x20, 0xb0, 0x32, 0xc8,
  0xe4, 0x63, 0xaf, 0x10, 0xc4, 0x67, 0xc4, 0x00, 0x01, 0x40, 0x10, 0x0c,
  0xb0, 0x7d, 0xe8, 0x05, 0xc5, 0x0c, 0x82, 0x11, 0x03, 0x04, 0x00, 0x41,
  0x30, 0xc0, 0xf8, 0xc1, 0x17, 0x14, 0x33, 0x08, 0x2c, 0x0d, 0x2a, 0xf9,
  0xd8, 0x2c, 0x04, 0xf1, 0x19, 0x31, 0x40, 0x00, 0x10, 0x04, 0x03, 0xec,
  0x1f, 0xc2, 0x81, 0x51, 0x83, 0x60, 0xc4, 0x00, 0x01, 0x40, 0x10, 0x0c,
  0x30, 0x90, 0x10, 0x07, 0x46, 0x0d, 0x82, 0xe1, 0x88, 0xe4, 0x16, 0x88,
  0x6f, 0x38, 0xc2, 0xc0, 0x05, 0xe2, 0x1b, 0x8e, 0x18, 0x72, 0x81, 0xf8,
  0xa6, 0x1b, 0x74, 0x81, 0x17, 0x86, 0xe9, 0x86, 0x5d, 0xe8, 0x85, 0x61,
  0xba, 0x81, 0x17, 0x7c, 0x61, 0xb0, 0xe1, 0x91, 0x8f, 0x0d, 0x8c, 0x7c,
  0x6c, 0x48, 0xe4, 0x63, 0x83, 0x1b, 0xc8, 0x67, 0xc4, 0x00, 0x01, 0x40,
  0x10, 0x0c, 0xb0, 0x95, 0x68, 0x87, 0xe1, 0x0c, 0x82, 0x11, 0x03, 0x04,
  0x00, 0x41, 0x30, 0xc0, 0x58, 0xc2, 0x1d, 0x06, 0x30, 0x08, 0xcc, 0x80,
  0x03, 0xf9, 0x8c, 0x18, 0x20, 0x00, 0x08, 0x82, 0x01, 0xe6, 0x12, 0xf0,
  0x60, 0xa4, 0x41, 0x30, 0x62, 0x80, 0x00, 0x20, 0x08, 0x06, 0xd8, 0x4b,
  0xc4, 0x83, 0x21, 0x06, 0x81, 0x25, 0x72, 0x20, 0x9f, 0x11, 0x03, 0x04,
  0x00, 0x41, 0x30, 0xc0, 0x62, 0x62, 0x1e, 0x92, 0x35, 0x08, 0x46, 0x0c,
  0x10, 0x00, 0x04, 0xc1, 0x00, 0x93, 0x09, 0x7a, 0x48, 0xc8, 0x20, 0x18,
  0x31, 0x38, 0x00, 0x10, 0x04, 0x03, 0x8b, 0x26, 0xe8, 0x61, 0x1c, 0x5a,
  0x62, 0x34, 0x21, 0x00, 0x46, 0x13, 0x84, 0x60, 0x34, 0x61, 0x10, 0x6c,
  0x58, 0xe4, 0x63, 0x43, 0x22, 0x1f, 0x1b, 0x0e, 0xf9, 0x8c, 0x18, 0x1c,
  0x00, 0x08, 0x82, 0x81, 0xb5, 0x13, 0xfb, 0xa0, 0x0e, 0x31, 0x31, 0x9a,
  0x10, 0x00, 0xa3, 0x09, 0x42, 0x30, 0x9a, 0x30, 0x08, 0x76, 0x0c, 0xf0,
  0xb1, 0x63, 0x80, 0x8f, 0x1d, 0x03, 0x7c, 0xec, 0x17, 0x06, 0xf9, 0xd8,
  0x2f, 0x0c, 0xf2, 0xb1, 0x5f, 0x18, 0xe4, 0x63, 0xf9, 0x50, 0x0b, 0xf1,
  0x31, 0x7d, 0xa8, 0x85, 0xf8, 0xd8, 0x3e, 0xd4, 0x42, 0x7c, 0x46, 0x0c,
  0x16, 0x00, 0x04, 0xc1, 0xe0, 0x59, 0x8b, 0x92, 0x18, 0x84, 0x60, 0x16,
  0x64, 0x21, 0x16, 0x2c, 0x08, 0x09, 0xf9, 0x58, 0x50, 0x0b, 0xf2, 0x31,
  0xa1, 0x16, 0xe4, 0x63, 0x43, 0x2d, 0xc8, 0xc7, 0x90, 0x21, 0x3e, 0x86,
  0x0c, 0xf1, 0x31, 0x64, 0x88, 0x8f, 0x0d, 0x83, 0x7c, 0x6c, 0x18, 0xe4,
  0x63, 0x42, 0x00, 0x1f, 0x23, 0x54, 0x02, 0x3e, 0x16, 0x04, 0xf2, 0xb1,
  0x21, 0x80, 0xcf, 0x88, 0x81, 0x01, 0x80, 0x20, 0x18, 0x44, 0x78, 0xa1,
  0x13, 0x81, 0x05, 0x2f, 0x21, 0x1f, 0x5b, 0x02, 0xfa, 0x58, 0x20, 0x13,
  0xf0, 0x31, 0x66, 0xa0, 0x8f, 0x05, 0x34, 0x01, 0x9f, 0x11, 0x83, 0x07,
  0x00, 0x41, 0x30, 0x68, 0x40, 0x03, 0x27, 0x5e, 0xa2, 0x25, 0x86, 0x40,
  0x26, 0x64, 0x02, 0x2f, 0xf0, 0xe2, 0x27, 0x64, 0x62, 0x34, 0x21, 0x00,
  0x46, 0x13, 0x84, 0x60, 0x34, 0x61, 0x10, 0x46, 0x13, 0x88, 0xc1, 0x88,
  0x7d, 0x90, 0x8f, 0x11, 0xfc, 0x20, 0x1f, 0x23, 0xfa, 0x41, 0x3e, 0x46,
  0xf8, 0x83, 0x7c, 0x46, 0x0c, 0x16, 0x00, 0x04, 0xc1, 0xe0, 0x41, 0x0d,
  0xb1, 0xa8, 0x07, 0x7a, 0x98, 0x07, 0x78, 0x78, 0x07, 0x77, 0x18, 0x31,
  0x38, 0x00, 0x10, 0x04, 0x03, 0xcb, 0x34, 0xcc, 0xa2, 0x26, 0x46, 0x63,
  0x34, 0x21, 0x08, 0x46, 0x0c, 0x0c, 0x00, 0x04, 0xc1, 0x20, 0x52, 0x0d,
  0xd1, 0x18, 0x0c, 0x2c, 0x82, 0xf8, 0x8c, 0x18, 0x1c, 0x00, 0x08, 0x82,
  0xc1, 0xb4, 0x1a, 0x6f, 0x11, 0xfc, 0xc4, 0x88, 0x81, 0x01, 0x80, 0x20,
  0x18, 0x44, 0xad, 0x11, 0x17, 0x81, 0x05, 0x85, 0x7c, 0x46, 0x0c, 0x0c,
  0x00, 0x04, 0xc1, 0x20, 0x7a, 0x0d, 0xba, 0x08, 0x46, 0x13, 0x10, 0xc0,
  0x02, 0x41, 0x3e, 0xf6, 0xb8, 0x41, 0x7c, 0xec, 0x71, 0x83, 0xf8, 0xd8,
  0xe3, 0x06, 0xf1, 0x31, 0x62, 0x90, 0x8f, 0x15, 0x83, 0x7c, 0xcc, 0x18,
  0xe4, 0x63, 0x03, 0x1d, 0xc0, 0xc7, 0x06, 0x3a, 0x80, 0x8f, 0x0d, 0x74,
  0x00, 0x9f, 0x11, 0x83, 0x03, 0x00, 0x41, 0x30, 0xb0, 0x72, 0x23, 0x2f,
  0xd0, 0xa2, 0x36, 0x46, 0x13, 0x02, 0x60, 0x34, 0x41, 0x08, 0x46, 0x13,
  0x06, 0xc1, 0x86, 0x4c, 0x3e, 0x36, 0x68, 0xf2, 0xb1, 0x61, 0x93, 0x8f,
  0x29, 0x03, 0x7c, 0x4c, 0x19, 0xe0, 0x63, 0xca, 0x00, 0x9f, 0x11, 0x83,
  0x04, 0x00, 0x41, 0x30, 0x40, 0xd0, 0x23, 0x34, 0x7e, 0xe3, 0x37, 0x6a,
  0x63, 0x18, 0x31, 0x48, 0x00, 0x10, 0x04, 0x03, 0x04, 0x3d, 0x42, 0xe3,
  0x37, 0x7e, 0x63, 0x35, 0x84, 0x11, 0x83, 0x04, 0x00, 0x41, 0x30, 0x40,
  0xd0, 0x23, 0x34, 0x7e, 0xe3, 0x37, 0x68, 0x23, 0x18, 0x31, 0x48, 0x00,
  0x10, 0x04, 0x03, 0x04, 0x3d, 0x42, 0xe3, 0x37, 0x7e, 0x43, 0x36, 0x7a,
  0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x50, 0x93, 0x14, 0xf3,
  0x8d, 0x0b, 0x7b, 0xbd, 0x56, 0x5c, 0x3f, 0x41, 0xdb, 0x20, 0x84, 0x76,
  0x17, 0x00, 0x01, 0x00, 0x29, 0xdc, 0x11, 0x00, 0x78, 0x01, 0xed, 0x98,
  0x51, 0x6b, 0x1c, 0x55, 0x14, 0xc7, 0xcf, 0x9d, 0x7b, 0xf7, 0xce, 0xec,
  0xee, 0x9d, 0x3b, 0x3b, 0xdb, 0x6c, 0x9c, 0x4c, 0x92, 0xed, 0x44, 0x11,
  0x53, 0x69, 0xb5, 0xd4, 0x1a, 0x8a, 0x62, 0x52, 0x43, 0xed, 0x4b, 0x85,
  0x94, 0x3e, 0x08, 0x96, 0xb4, 0x94, 0x0a, 0xa1, 0xa0, 0x0f, 0x7d, 0xf2,
  0xc5, 0xb0, 0x8e, 0x12, 0xa9, 0x48, 0x0a, 0xc5, 0x56, 0xf1, 0x03, 0x2c,
  0x88, 0xe0, 0x43, 0x1f, 0x7d, 0x71, 0x12, 0x53, 0x90, 0xfb, 0x28, 0x6b,
  0x7d, 0xd2, 0x8f, 0xe0, 0x43, 0x49, 0x5f, 0x44, 0xa4, 0xf1, 0x7f, 0x26,
  0x59, 0xb2, 0x09, 0xd1, 0xa7, 0x0a, 0x2a, 0xfb, 0x83, 0xff, 0x3d, 0x7b,
  0xce, 0x9c, 0x39, 0xf7, 0xce, 0xbd, 0x09, 0xcc, 0x99, 0x5f, 0x62, 0x2a,
  0xf9, 0xfd, 0xcb, 0xfb, 0x73, 0x6c, 0x7f, 0x7a, 0xeb, 0xc3, 0x0b, 0xa7,
  0x42, 0xa2, 0x0a, 0x7e, 0x0b, 0x88, 0x2d, 0xf3, 0x05, 0x62, 0xcc, 0xc9,
  0x9d, 0xfc, 0x2a, 0x0f, 0x3b, 0x34, 0xa1, 0x19, 0x88, 0x39, 0xcd, 0xc3,
  0x0e, 0x7c, 0xff, 0xd2, 0xd2, 0xd2, 0x2c, 0x54, 0xd6, 0xde, 0xcf, 0x28,
  0x74, 0x1d, 0x7a, 0x1b, 0x62, 0xfa, 0x73, 0x31, 0x5c, 0xdf, 0x83, 0x98,
  0xbe, 0x65, 0xb8, 0xe6, 0x7e, 0xf8, 0x3e, 0xce, 0x91, 0x50, 0x9f, 0x7e,
  0xad, 0x6f, 0x96, 0xcf, 0xbd, 0x02, 0x73, 0x06, 0xa2, 0x85, 0x5f, 0x57,
  0x66, 0xd9, 0x4e, 0x85, 0xbd, 0x97, 0xd9, 0x3e, 0x3c, 0xf6, 0xfc, 0x81,
  0xeb, 0xfa, 0xaf, 0x70, 0xd0, 0x5e, 0xf4, 0xcf, 0x89, 0xb9, 0x3f, 0xb8,
  0x71, 0x7f, 0x41, 0x8d, 0x07, 0xf0, 0x4e, 0x83, 0xc7, 0xdd, 0xb3, 0x5c,
  0x87, 0x0e, 0xaa, 0xcf, 0x6c, 0x01, 0xb6, 0x07, 0xa1, 0x20, 0x4d, 0x32,
  0x87, 0x21, 0x2d, 0x0e, 0xe7, 0x14, 0xc0, 0x7a, 0xcf, 0xe4, 0x84, 0xfa,
  0x5a, 0xce, 0xe5, 0x94, 0xf0, 0x95, 0xff, 0x37, 0xbc, 0x87, 0x0c, 0xef,
  0x05, 0x1f, 0x01, 0x6f, 0x6d, 0x04, 0xf5, 0xe1, 0x38, 0x73, 0x97, 0x07,
  0xca, 0xd7, 0x58, 0xb7, 0x12, 0xfa, 0x8d, 0xbd, 0xbe, 0x2f, 0xe0, 0x63,
  0xeb, 0xc0, 0xb6, 0x2f, 0xd9, 0xf7, 0xf7, 0xf9, 0xf8, 0x23, 0x0f, 0x22,
  0xba, 0xec, 0xd5, 0xbd, 0xcb, 0xd1, 0x04, 0xee, 0xc7, 0x81, 0xc1, 0x5f,
  0x84, 0xbf, 0x38, 0xe0, 0x5f, 0x84, 0x7f, 0x71, 0xc0, 0xbf, 0x02, 0xff,
  0xca, 0x80, 0x7f, 0x15, 0xfe, 0xd5, 0xbe, 0xdf, 0xaf, 0x1f, 0x95, 0xf3,
  0x79, 0x95, 0xbf, 0x3b, 0xeb, 0x7f, 0x0b, 0xc3, 0x35, 0x3e, 0x1e, 0x86,
  0x6b, 0x7c, 0x3c, 0x0c, 0xd7, 0x38, 0x64, 0xc8, 0x90, 0x21, 0x43, 0xfe,
  0x69, 0x3a, 0xea, 0x6e, 0xd1, 0xa9, 0x3d, 0x2a, 0x2a, 0xf2, 0x4e, 0x21,
  0xe5, 0x6a, 0x91, 0xcb, 0x9b, 0xd0, 0x47, 0xd0, 0x67, 0x05, 0x55, 0xf2,
  0x75, 0x0a, 0xbf, 0x5f, 0xaf, 0xca, 0x3f, 0x0a, 0xbc, 0xe9, 0x39, 0x12,
  0xc6, 0x09, 0xaa, 0x3a, 0x21, 0x42, 0x47, 0xad, 0x1f, 0xd6, 0xdf, 0xa7,
  0xd5, 0x35, 0x8a, 0xf2, 0x07, 0x9e, 0x87, 0xce, 0xa9, 0x9a, 0x39, 0x0a,
  0x26, 0x9c, 0xa8, 0x4e, 0x39, 0xaa, 0x4d, 0x3b, 0x11, 0x4c, 0xba, 0x20,
  0x6e, 0x5a, 0x5f, 0x7e, 0x52, 0x90, 0x49, 0x9c, 0x1f, 0x35, 0x8d, 0xa8,
  0x1d, 0x71, 0xc2, 0x8c, 0xb9, 0x5a, 0xab, 0x69, 0x82, 0xad, 0xf8, 0x63,
  0x7e, 0xb3, 0xad, 0xc9, 0x5b, 0xc5, 0x77, 0xf2, 0xd3, 0x62, 0x4b, 0xde,
  0x2e, 0xbe, 0x5e, 0xf0, 0x48, 0xc5, 0x6f, 0x6e, 0x50, 0x7c, 0x67, 0x63,
  0x3a, 0xce, 0x37, 0xa8, 0x72, 0xd4, 0x89, 0xca, 0x31, 0x47, 0xfa, 0xa4,
  0x13, 0xfa, 0x45, 0xc7, 0xf3, 0x89, 0xd1, 0xd1, 0xa0, 0xfe, 0x44, 0x62,
  0xbd, 0x34, 0x0d, 0x72, 0x79, 0xa3, 0x20, 0xff, 0x73, 0xac, 0xf1, 0x8c,
  0x13, 0xe1, 0x6b, 0xee, 0x7a, 0xb4, 0xba, 0xe6, 0x85, 0xca, 0x56, 0x2f,
  0x99, 0x8e, 0x7c, 0x4a, 0x5b, 0x1d, 0x35, 0x2d, 0x29, 0xac, 0x49, 0x4d,
  0x3a, 0xb2, 0x36, 0xf0, 0xa3, 0xc4, 0x84, 0xe3, 0x89, 0x31, 0x97, 0x92,
  0x8e, 0x8e, 0x1b, 0x56, 0xb7, 0x46, 0x6c, 0x10, 0xd3, 0x3d, 0x7f, 0x6c,
  0xc2, 0xd6, 0xc7, 0xac, 0x0d, 0xc7, 0x46, 0xad, 0x1f, 0x27, 0x36, 0xa4,
  0xbc, 0x67, 0x0f, 0x9d, 0xe8, 0x6a, 0xd8, 0x7a, 0x6b, 0xe6, 0xa8, 0x0f,
  0xab, 0xe3, 0x76, 0x97, 0xe3, 0xba, 0xf5, 0x5c, 0xd7, 0x8f, 0xda, 0x96,
  0xaf, 0xe9, 0x43, 0x2f, 0x75, 0x37, 0xd3, 0x54, 0xeb, 0xb0, 0x6d, 0xf8,
  0x5a, 0x38, 0x3e, 0xab, 0x42, 0x5a, 0xfc, 0x31, 0x14, 0x94, 0x24, 0x71,
  0x70, 0xaf, 0xcc, 0x19, 0xdf, 0x90, 0x7c, 0xbf, 0x0f, 0xcb, 0xeb, 0x0f,
  0x9a, 0x69, 0x59, 0xbf, 0xda, 0x98, 0x41, 0x3d, 0xd3, 0xab, 0xb5, 0xe8,
  0x74, 0x9e, 0x06, 0xcb, 0x78, 0xbf, 0xef, 0x6d, 0xd2, 0x57, 0x22, 0x1a,
  0x4f, 0x6d, 0xa3, 0xd9, 0xb6, 0x11, 0x72, 0xe2, 0xc6, 0x6c, 0x37, 0xe2,
  0x9c, 0xa7, 0x91, 0xd3, 0x0e, 0x96, 0xd1, 0x07, 0x94, 0x39, 0x8d, 0xc3,
  0x6d, 0x6b, 0x9a, 0x99, 0x0d, 0x90, 0x13, 0x36, 0xe6, 0xbb, 0x01, 0xe7,
  0x4c, 0x22, 0xa7, 0x31, 0x90, 0x83, 0xe7, 0x1b, 0x49, 0x33, 0x9b, 0x34,
  0x32, 0x33, 0xd1, 0xce, 0x0c, 0x65, 0x99, 0x55, 0x59, 0xa6, 0xbd, 0xa9,
  0xcc, 0xb6, 0x52, 0x65, 0xc7, 0x1a, 0xca, 0x4c, 0xb6, 0x95, 0x11, 0x4a,
  0xd9, 0x8a, 0x52, 0x5a, 0x56, 0x9e, 0xb4, 0xa3, 0x88, 0xa7, 0x88, 0x93,
  0x35, 0xae, 0x8d, 0x6b, 0x1e, 0xae, 0x09, 0x8b, 0xb3, 0x8e, 0xc8, 0x89,
  0x48, 0x38, 0x8d, 0x3c, 0xe5, 0x6b, 0x2b, 0x2b, 0x81, 0xad, 0x88, 0x9a,
  0xed, 0x1c, 0x7f, 0x74, 0x83, 0xcf, 0x5f, 0xd3, 0x35, 0xc1, 0xcf, 0x8a,
  0x3d, 0x53, 0xf5, 0x96, 0x31, 0xda, 0x0b, 0x7a, 0x9b, 0xc6, 0xa3, 0xdc,
  0x98, 0x4c, 0x2f, 0x98, 0xce, 0x0b, 0xc6, 0x58, 0x7d, 0xce, 0x74, 0x4e,
  0xc0, 0xf2, 0x19, 0xa1, 0x3f, 0xe8, 0x51, 0x7d, 0x7e, 0x85, 0xad, 0x16,
  0xf3, 0x4a, 0xd6, 0xb5, 0x15, 0xf8, 0x2d, 0xea, 0x67, 0x57, 0xf8, 0x99,
  0xa6, 0xb5, 0x87, 0x16, 0x27, 0xef, 0x79, 0xf5, 0xe6, 0x0a, 0xc7, 0xb5,
  0x3c, 0x5b, 0xfa, 0x5a, 0x34, 0x15, 0xef, 0xe5, 0x11, 0xad, 0x15, 0xaa,
  0xf7, 0x9e, 0x45, 0x1e, 0xfa, 0x8f, 0x3d, 0xfd, 0x0b, 0xd1, 0x07, 0x6b,
  0x29, 0x1b, 0x51, 0x76, 0xf3, 0xc7, 0x79, 0x60, 0x38, 0x26, 0x04, 0xca,
  0x0c, 0xc6, 0x90, 0xef, 0x89, 0xb2, 0xd3, 0xdf, 0x13, 0x93, 0x78, 0x1a,
  0xb0, 0x1b, 0x83, 0x94, 0xe7, 0x73, 0x1f, 0x36, 0xf8, 0x79, 0x02, 0xff,
  0x12, 0x7b, 0xe7, 0xc0, 0xad, 0x84, 0xfd, 0xc4, 0xb8, 0x1b, 0xe3, 0xa0,
  0xc7, 0x8d, 0xd6, 0x60, 0x1e, 0x62, 0x52, 0xed, 0x9d, 0x83, 0xfb, 0x3c,
  0x85, 0xa7, 0x03, 0x7b, 0xe7, 0x00, 0xaf, 0xef, 0x7c, 0x33, 0xb9, 0x06,
  0xf1, 0x77, 0x0d, 0xb1, 0xf3, 0xa5, 0x82, 0x5b, 0x61, 0x4d, 0x31, 0x4d,
  0xc0, 0x0a, 0x69, 0x31, 0x6e, 0x93, 0x41, 0xa2, 0xac, 0xb8, 0xcd, 0x29,
  0x88, 0x7d, 0x4c, 0x5b, 0x52, 0xf6, 0xe6, 0xc8, 0xef, 0xfb, 0x0a, 0x55,
  0x98, 0xf3, 0xb7, 0x47, 0x1e, 0xde, 0xac, 0xbf, 0xf7, 0xed, 0x1b, 0x8b,
  0x73, 0xaf, 0xfe, 0x9c, 0xad, 0xbc, 0xfb, 0x27, 0x13, 0xa2, 0xfc, 0x9a,
  0x02, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x03, 0x00, 0x03, 0x00,
  0x08, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x03, 0x01, 0x04, 0x02, 0x04, 0x02, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x05, 0x04, 0x08, 0x02, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x01, 0x06, 0x06,
  0x04, 0x02, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x02, 0x07, 0x08, 0x00, 0x04, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0xcc, 0x00, 0x00, 0x78, 0x01, 0x6d, 0xcc,
  0xb1, 0x11, 0x40, 0x40, 0x10, 0x46, 0xe1, 0x1f, 0xa3, 0x07, 0x89, 0xae,
  0x2e, 0x54, 0x84, 0x50, 0x11, 0x42, 0x45, 0x08, 0x15, 0x21, 0xd4, 0x13,
  0xef, 0x05, 0x9b, 0x79, 0x33, 0xdf, 0xdc, 0xba, 0x9d, 0xd3, 0x25, 0x19,
  0x31, 0xc1, 0x1e, 0xcc, 0x30, 0xef, 0x1b, 0xcc, 0x79, 0x85, 0x39, 0xef,
  0x30, 0xe7, 0x13, 0x3d, 0xec, 0x86, 0xff, 0x5c, 0x60, 0xce, 0xd5, 0x4b,
  0x7e, 0x6f, 0x18, 0xf0, 0xb7, 0x3b, 0x60, 0xce, 0xb2, 0xda, 0x5d, 0xa8,
  0x77, 0x32, 0x77, 0x9e, 0x49, 0xf2, 0x01, 0x2b, 0xfe, 0x15, 0xf2, 0x00,
  0x78, 0x62, 0x6f, 0x70, 0x01, 0x00, 0x00, 0x00, 0x7e, 0x02, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00
};
