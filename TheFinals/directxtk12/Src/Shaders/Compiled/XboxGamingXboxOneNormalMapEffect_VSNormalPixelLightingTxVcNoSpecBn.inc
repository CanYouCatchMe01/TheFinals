#if 0
;
; Input signature:
;
; Name                 Index   Mask Register SysValue  Format   Used
; -------------------- ----- ------ -------- -------- ------- ------
; SV_Position              0   xyzw        0     NONE   float   xyzw
; NORMAL                   0   xyz         1     NONE   float   xyz 
; TEXCOORD                 0   xy          2     NONE   float   xy  
; COLOR                    0   xyzw        3     NONE   float   xyzw
;
;
; Output signature:
;
; Name                 Index   Mask Register SysValue  Format   Used
; -------------------- ----- ------ -------- -------- ------- ------
; TEXCOORD                 0   xy          0     NONE   float   xy  
; TEXCOORD                 1   xyzw        1     NONE   float   xyzw
; TEXCOORD                 2   xyz         2     NONE   float   xyz 
; COLOR                    0   xyzw        3     NONE   float   xyzw
; SV_Position              0   xyzw        4      POS   float   xyzw
;
; shader debug name: C:\Users\marcu\Downloads\DirectXTK12-main\DirectXTK12-main\Src/Shaders/Compiled\XboxGamingXboxOneNormalMapEffect_VSNormalPixelLightingTxVcNoSpecBn.pdb
; shader hash: 59fe7996bb71dea2a51c136b37e2a454
;
; Pipeline Runtime Information: 
;
;PSVRuntimeInfo:
; Vertex Shader
; OutputPositionPresent=1
; MinimumExpectedWaveLaneCount: 0
; MaximumExpectedWaveLaneCount: 4294967295
; UsesViewID: false
; SigInputElements: 4
; SigOutputElements: 5
; SigPatchConstOrPrimElements: 0
; SigInputVectors: 4
; SigOutputVectors[0]: 5
; SigOutputVectors[1]: 0
; SigOutputVectors[2]: 0
; SigOutputVectors[3]: 0
; EntryFunctionName: VSNormalPixelLightingTxVcNoSpecBn
;
;
; Input signature:
;
; Name                 Index             InterpMode DynIdx
; -------------------- ----- ---------------------- ------
; SV_Position              0                              
; NORMAL                   0                              
; TEXCOORD                 0                              
; COLOR                    0                              
;
; Output signature:
;
; Name                 Index             InterpMode DynIdx
; -------------------- ----- ---------------------- ------
; TEXCOORD                 0                 linear       
; TEXCOORD                 1                 linear       
; TEXCOORD                 2                 linear       
; COLOR                    0                 linear       
; SV_Position              0          noperspective       
;
; Buffer Definitions:
;
; cbuffer 
; {
;
;   [416 x i8] (type annotation not present)
;
; }
;
;
; Resource Bindings:
;
; Name                                 Type  Format         Dim      ID      HLSL Bind  Count
; ------------------------------ ---------- ------- ----------- ------- -------------- ------
;                                   cbuffer      NA          NA     CB0            cb0     1
;
;
; ViewId state:
;
; Number of inputs: 16, outputs: 20
; Outputs dependent on ViewId: {  }
; Inputs contributing to computation of Outputs:
;   output 0 depends on inputs: { 8 }
;   output 1 depends on inputs: { 9 }
;   output 4 depends on inputs: { 0, 1, 2, 3 }
;   output 5 depends on inputs: { 0, 1, 2, 3 }
;   output 6 depends on inputs: { 0, 1, 2, 3 }
;   output 7 depends on inputs: { 0, 1, 2, 3 }
;   output 8 depends on inputs: { 4, 5, 6 }
;   output 9 depends on inputs: { 4, 5, 6 }
;   output 10 depends on inputs: { 4, 5, 6 }
;   output 12 depends on inputs: { 12 }
;   output 13 depends on inputs: { 13 }
;   output 14 depends on inputs: { 14 }
;   output 15 depends on inputs: { 15 }
;   output 16 depends on inputs: { 0, 1, 2, 3 }
;   output 17 depends on inputs: { 0, 1, 2, 3 }
;   output 18 depends on inputs: { 0, 1, 2, 3 }
;   output 19 depends on inputs: { 0, 1, 2, 3 }
;
target datalayout = "e-m:e-p:32:32-i1:32-i8:32-i16:32-i32:32-i64:64-f16:32-f32:32-f64:64-n8:16:32:64"
target triple = "dxil-ms-xb1"

%dx.types.Handle = type { i8* }
%dx.types.CBufRet.f32 = type { float, float, float, float }
%hostlayout.Parameters = type { <4 x float>, <3 x float>, <3 x float>, float, [3 x <3 x float>], [3 x <3 x float>], [3 x <3 x float>], <3 x float>, <3 x float>, <4 x float>, [4 x <4 x float>], [3 x <3 x float>], [4 x <4 x float>] }

define void @VSNormalPixelLightingTxVcNoSpecBn() {
  %1 = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 2, i32 0, i32 0, i1 false)  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %2 = call float @dx.op.loadInput.f32(i32 4, i32 3, i32 0, i8 0, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %3 = call float @dx.op.loadInput.f32(i32 4, i32 3, i32 0, i8 1, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %4 = call float @dx.op.loadInput.f32(i32 4, i32 3, i32 0, i8 2, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %5 = call float @dx.op.loadInput.f32(i32 4, i32 3, i32 0, i8 3, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %6 = call float @dx.op.loadInput.f32(i32 4, i32 2, i32 0, i8 0, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %7 = call float @dx.op.loadInput.f32(i32 4, i32 2, i32 0, i8 1, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %8 = call float @dx.op.loadInput.f32(i32 4, i32 1, i32 0, i8 0, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %9 = call float @dx.op.loadInput.f32(i32 4, i32 1, i32 0, i8 1, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %10 = call float @dx.op.loadInput.f32(i32 4, i32 1, i32 0, i8 2, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %11 = call float @dx.op.loadInput.f32(i32 4, i32 0, i32 0, i8 0, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %12 = call float @dx.op.loadInput.f32(i32 4, i32 0, i32 0, i8 1, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %13 = call float @dx.op.loadInput.f32(i32 4, i32 0, i32 0, i8 2, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %14 = call float @dx.op.loadInput.f32(i32 4, i32 0, i32 0, i8 3, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %15 = fmul fast float %8, 2.000000e+00
  %16 = fmul fast float %9, 2.000000e+00
  %17 = fmul fast float %10, 2.000000e+00
  %18 = fadd fast float %15, -1.000000e+00
  %19 = fadd fast float %16, -1.000000e+00
  %20 = fadd fast float %17, -1.000000e+00
  %21 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 22)  ; CBufferLoadLegacy(handle,regIndex)
  %22 = extractvalue %dx.types.CBufRet.f32 %21, 0
  %23 = extractvalue %dx.types.CBufRet.f32 %21, 1
  %24 = extractvalue %dx.types.CBufRet.f32 %21, 2
  %25 = extractvalue %dx.types.CBufRet.f32 %21, 3
  %26 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 23)  ; CBufferLoadLegacy(handle,regIndex)
  %27 = extractvalue %dx.types.CBufRet.f32 %26, 0
  %28 = extractvalue %dx.types.CBufRet.f32 %26, 1
  %29 = extractvalue %dx.types.CBufRet.f32 %26, 2
  %30 = extractvalue %dx.types.CBufRet.f32 %26, 3
  %31 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 24)  ; CBufferLoadLegacy(handle,regIndex)
  %32 = extractvalue %dx.types.CBufRet.f32 %31, 0
  %33 = extractvalue %dx.types.CBufRet.f32 %31, 1
  %34 = extractvalue %dx.types.CBufRet.f32 %31, 2
  %35 = extractvalue %dx.types.CBufRet.f32 %31, 3
  %36 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 25)  ; CBufferLoadLegacy(handle,regIndex)
  %37 = extractvalue %dx.types.CBufRet.f32 %36, 0
  %38 = extractvalue %dx.types.CBufRet.f32 %36, 1
  %39 = extractvalue %dx.types.CBufRet.f32 %36, 2
  %40 = extractvalue %dx.types.CBufRet.f32 %36, 3
  %41 = fmul fast float %22, %11
  %42 = call float @dx.op.tertiary.f32(i32 46, float %12, float %23, float %41)  ; FMad(a,b,c)
  %43 = call float @dx.op.tertiary.f32(i32 46, float %13, float %24, float %42)  ; FMad(a,b,c)
  %44 = call float @dx.op.tertiary.f32(i32 46, float %14, float %25, float %43)  ; FMad(a,b,c)
  %45 = fmul fast float %27, %11
  %46 = call float @dx.op.tertiary.f32(i32 46, float %12, float %28, float %45)  ; FMad(a,b,c)
  %47 = call float @dx.op.tertiary.f32(i32 46, float %13, float %29, float %46)  ; FMad(a,b,c)
  %48 = call float @dx.op.tertiary.f32(i32 46, float %14, float %30, float %47)  ; FMad(a,b,c)
  %49 = fmul fast float %32, %11
  %50 = call float @dx.op.tertiary.f32(i32 46, float %12, float %33, float %49)  ; FMad(a,b,c)
  %51 = call float @dx.op.tertiary.f32(i32 46, float %13, float %34, float %50)  ; FMad(a,b,c)
  %52 = call float @dx.op.tertiary.f32(i32 46, float %14, float %35, float %51)  ; FMad(a,b,c)
  %53 = fmul fast float %37, %11
  %54 = call float @dx.op.tertiary.f32(i32 46, float %12, float %38, float %53)  ; FMad(a,b,c)
  %55 = call float @dx.op.tertiary.f32(i32 46, float %13, float %39, float %54)  ; FMad(a,b,c)
  %56 = call float @dx.op.tertiary.f32(i32 46, float %14, float %40, float %55)  ; FMad(a,b,c)
  %57 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 15)  ; CBufferLoadLegacy(handle,regIndex)
  %58 = extractvalue %dx.types.CBufRet.f32 %57, 0
  %59 = extractvalue %dx.types.CBufRet.f32 %57, 1
  %60 = extractvalue %dx.types.CBufRet.f32 %57, 2
  %61 = extractvalue %dx.types.CBufRet.f32 %57, 3
  %62 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 16)  ; CBufferLoadLegacy(handle,regIndex)
  %63 = extractvalue %dx.types.CBufRet.f32 %62, 0
  %64 = extractvalue %dx.types.CBufRet.f32 %62, 1
  %65 = extractvalue %dx.types.CBufRet.f32 %62, 2
  %66 = extractvalue %dx.types.CBufRet.f32 %62, 3
  %67 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 17)  ; CBufferLoadLegacy(handle,regIndex)
  %68 = extractvalue %dx.types.CBufRet.f32 %67, 0
  %69 = extractvalue %dx.types.CBufRet.f32 %67, 1
  %70 = extractvalue %dx.types.CBufRet.f32 %67, 2
  %71 = extractvalue %dx.types.CBufRet.f32 %67, 3
  %72 = fmul fast float %58, %11
  %73 = call float @dx.op.tertiary.f32(i32 46, float %12, float %59, float %72)  ; FMad(a,b,c)
  %74 = call float @dx.op.tertiary.f32(i32 46, float %13, float %60, float %73)  ; FMad(a,b,c)
  %75 = call float @dx.op.tertiary.f32(i32 46, float %14, float %61, float %74)  ; FMad(a,b,c)
  %76 = fmul fast float %63, %11
  %77 = call float @dx.op.tertiary.f32(i32 46, float %12, float %64, float %76)  ; FMad(a,b,c)
  %78 = call float @dx.op.tertiary.f32(i32 46, float %13, float %65, float %77)  ; FMad(a,b,c)
  %79 = call float @dx.op.tertiary.f32(i32 46, float %14, float %66, float %78)  ; FMad(a,b,c)
  %80 = fmul fast float %68, %11
  %81 = call float @dx.op.tertiary.f32(i32 46, float %12, float %69, float %80)  ; FMad(a,b,c)
  %82 = call float @dx.op.tertiary.f32(i32 46, float %13, float %70, float %81)  ; FMad(a,b,c)
  %83 = call float @dx.op.tertiary.f32(i32 46, float %14, float %71, float %82)  ; FMad(a,b,c)
  %84 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 19)  ; CBufferLoadLegacy(handle,regIndex)
  %85 = extractvalue %dx.types.CBufRet.f32 %84, 0
  %86 = extractvalue %dx.types.CBufRet.f32 %84, 1
  %87 = extractvalue %dx.types.CBufRet.f32 %84, 2
  %88 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 20)  ; CBufferLoadLegacy(handle,regIndex)
  %89 = extractvalue %dx.types.CBufRet.f32 %88, 0
  %90 = extractvalue %dx.types.CBufRet.f32 %88, 1
  %91 = extractvalue %dx.types.CBufRet.f32 %88, 2
  %92 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 21)  ; CBufferLoadLegacy(handle,regIndex)
  %93 = extractvalue %dx.types.CBufRet.f32 %92, 0
  %94 = extractvalue %dx.types.CBufRet.f32 %92, 1
  %95 = extractvalue %dx.types.CBufRet.f32 %92, 2
  %96 = fmul fast float %85, %18
  %97 = call float @dx.op.tertiary.f32(i32 46, float %19, float %86, float %96)  ; FMad(a,b,c)
  %98 = call float @dx.op.tertiary.f32(i32 46, float %20, float %87, float %97)  ; FMad(a,b,c)
  %99 = fmul fast float %89, %18
  %100 = call float @dx.op.tertiary.f32(i32 46, float %19, float %90, float %99)  ; FMad(a,b,c)
  %101 = call float @dx.op.tertiary.f32(i32 46, float %20, float %91, float %100)  ; FMad(a,b,c)
  %102 = fmul fast float %93, %18
  %103 = call float @dx.op.tertiary.f32(i32 46, float %19, float %94, float %102)  ; FMad(a,b,c)
  %104 = call float @dx.op.tertiary.f32(i32 46, float %20, float %95, float %103)  ; FMad(a,b,c)
  %105 = call float @dx.op.dot3.f32(i32 55, float %98, float %101, float %104, float %98, float %101, float %104)  ; Dot3(ax,ay,az,bx,by,bz)
  %106 = call float @dx.op.unary.f32(i32 25, float %105)  ; Rsqrt(value)
  %107 = fmul fast float %106, %98
  %108 = fmul fast float %106, %101
  %109 = fmul fast float %106, %104
  %110 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 14)  ; CBufferLoadLegacy(handle,regIndex)
  %111 = extractvalue %dx.types.CBufRet.f32 %110, 0
  %112 = extractvalue %dx.types.CBufRet.f32 %110, 1
  %113 = extractvalue %dx.types.CBufRet.f32 %110, 2
  %114 = extractvalue %dx.types.CBufRet.f32 %110, 3
  %115 = call float @dx.op.dot4.f32(i32 56, float %11, float %12, float %13, float %14, float %111, float %112, float %113, float %114)  ; Dot4(ax,ay,az,aw,bx,by,bz,bw)
  %116 = call float @dx.op.unary.f32(i32 7, float %115)  ; Saturate(value)
  %117 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 0)  ; CBufferLoadLegacy(handle,regIndex)
  %118 = extractvalue %dx.types.CBufRet.f32 %117, 3
  %119 = fmul fast float %118, %5
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 0, float %6)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 1, float %7)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 1, i32 0, i8 0, float %75)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 1, i32 0, i8 1, float %79)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 1, i32 0, i8 2, float %83)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 1, i32 0, i8 3, float %116)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 2, i32 0, i8 0, float %107)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 2, i32 0, i8 1, float %108)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 2, i32 0, i8 2, float %109)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 3, i32 0, i8 0, float %2)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 3, i32 0, i8 1, float %3)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 3, i32 0, i8 2, float %4)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 3, i32 0, i8 3, float %119)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 4, i32 0, i8 0, float %44)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 4, i32 0, i8 1, float %48)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 4, i32 0, i8 2, float %52)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 4, i32 0, i8 3, float %56)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  ret void
}

; Function Attrs: nounwind readnone
declare float @dx.op.loadInput.f32(i32, i32, i32, i8, i32) #0

; Function Attrs: nounwind
declare void @dx.op.storeOutput.f32(i32, i32, i32, i8, float) #1

; Function Attrs: nounwind readnone
declare float @dx.op.dot3.f32(i32, float, float, float, float, float, float) #0

; Function Attrs: nounwind readnone
declare float @dx.op.unary.f32(i32, float) #0

; Function Attrs: nounwind readnone
declare float @dx.op.dot4.f32(i32, float, float, float, float, float, float, float, float) #0

; Function Attrs: nounwind readonly
declare %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32, %dx.types.Handle, i32) #2

; Function Attrs: nounwind readnone
declare float @dx.op.tertiary.f32(i32, float, float, float) #0

; Function Attrs: nounwind readonly
declare %dx.types.Handle @dx.op.createHandle(i32, i8, i32, i32, i1) #2

attributes #0 = { nounwind readnone }
attributes #1 = { nounwind }
attributes #2 = { nounwind readonly }

!xbox.compiler.options = !{!0}
!llvm.ident = !{!1}
!dx.version = !{!2}
!dx.valver = !{!3}
!dx.shaderModel = !{!4}
!dx.resources = !{!5}
!dx.viewIdState = !{!8}
!dx.entryPoints = !{!9}

!0 = !{!"__XBOX_PER_THREAD_SCRATCH_SIZE_LIMIT_IN_BYTES", !"0"}
!1 = !{!"dxcxbox 2410.2410.11116.10741"}
!2 = !{i32 1, i32 0}
!3 = !{i32 1, i32 8}
!4 = !{!"vs", i32 6, i32 0}
!5 = !{null, null, !6, null}
!6 = !{!7}
!7 = !{i32 0, %hostlayout.Parameters* undef, !"", i32 0, i32 0, i32 1, i32 416, null}
!8 = !{[18 x i32] [i32 16, i32 20, i32 983280, i32 983280, i32 983280, i32 983280, i32 1792, i32 1792, i32 1792, i32 0, i32 1, i32 2, i32 0, i32 0, i32 4096, i32 8192, i32 16384, i32 32768]}
!9 = !{void ()* @VSNormalPixelLightingTxVcNoSpecBn, !"VSNormalPixelLightingTxVcNoSpecBn", !10, !5, null}
!10 = !{!11, !20, null}
!11 = !{!12, !15, !17, !19}
!12 = !{i32 0, !"SV_Position", i8 9, i8 0, !13, i8 0, i32 1, i8 4, i32 0, i8 0, !14}
!13 = !{i32 0}
!14 = !{i32 3, i32 15}
!15 = !{i32 1, !"NORMAL", i8 9, i8 0, !13, i8 0, i32 1, i8 3, i32 1, i8 0, !16}
!16 = !{i32 3, i32 7}
!17 = !{i32 2, !"TEXCOORD", i8 9, i8 0, !13, i8 0, i32 1, i8 2, i32 2, i8 0, !18}
!18 = !{i32 3, i32 3}
!19 = !{i32 3, !"COLOR", i8 9, i8 0, !13, i8 0, i32 1, i8 4, i32 3, i8 0, !14}
!20 = !{!21, !22, !24, !26, !27}
!21 = !{i32 0, !"TEXCOORD", i8 9, i8 0, !13, i8 2, i32 1, i8 2, i32 0, i8 0, !18}
!22 = !{i32 1, !"TEXCOORD", i8 9, i8 0, !23, i8 2, i32 1, i8 4, i32 1, i8 0, !14}
!23 = !{i32 1}
!24 = !{i32 2, !"TEXCOORD", i8 9, i8 0, !25, i8 2, i32 1, i8 3, i32 2, i8 0, !16}
!25 = !{i32 2}
!26 = !{i32 3, !"COLOR", i8 9, i8 0, !13, i8 2, i32 1, i8 4, i32 3, i8 0, !14}
!27 = !{i32 4, !"SV_Position", i8 9, i8 3, !13, i8 4, i32 1, i8 4, i32 4, i8 0, !14}

;
; DUMPING SHADER HARDWARE INSTRUCTIONS 
;
// Shader Type               : (VS)
// Shader Hw Stage           : (VS)

// Shader Instructions:
shader main
  asic(CI)
  type(VS)
  s_swappc_b64  s[0:1], s[0:1]
  s_or_b32      s25, s7, 0x00100000 // wrscc
  s_mov_b32     s24, s6
  s_mov_b32     s26, -1
  s_mov_b32     s27, 0x00024fac
  s_buffer_load_dwordx16  s[0:15], s[24:27], 0x4c
  s_buffer_load_dwordx8  s[16:23], s[24:27], 0x5c
  s_waitcnt     vmcnt(0)
  v_mad_f32     v0, v8, 2.0, -1.0
  s_buffer_load_dwordx4  s[28:31], s[24:27], 0x64
  v_mad_f32     v1, v9, 2.0, -1.0
  s_waitcnt     lgkmcnt(0)
  v_mul_legacy_f32  v15, s4, v0
  v_mul_legacy_f32  v14, s0, v0
  v_mul_legacy_f32  v0, s8, v0
  v_mad_f32     v2, v10, 2.0, -1.0
  v_mac_legacy_f32  v15, s5, v1
  v_mul_legacy_f32  v3, s12, v4
  v_mul_legacy_f32  v8, s16, v4
  v_mul_legacy_f32  v9, s20, v4
  v_mac_legacy_f32  v14, s1, v1
  v_mac_legacy_f32  v0, s9, v1
  v_mac_legacy_f32  v15, s6, v2
  v_mac_legacy_f32  v3, s13, v5
  v_mac_legacy_f32  v8, s17, v5
  v_mac_legacy_f32  v9, s21, v5
  v_mac_legacy_f32  v14, s2, v2
  v_mac_legacy_f32  v0, s10, v2
  v_mul_legacy_f32  v2, v15, v15
  v_mac_legacy_f32  v3, s14, v6
  v_mac_legacy_f32  v8, s18, v6
  v_mac_legacy_f32  v9, s22, v6
  v_mac_legacy_f32  v2, v14, v14
  v_mac_legacy_f32  v2, v0, v0
  v_mac_legacy_f32  v3, s15, v7
  v_mac_legacy_f32  v8, s19, v7
  v_mac_legacy_f32  v9, s23, v7
  s_buffer_load_dword  s3, s[24:27], 0x03
  s_buffer_load_dwordx16  s[12:27], s[24:27], 0x38
  v_rsq_f32     v2, v2
  v_mul_legacy_f32  v10, s28, v4
  v_mac_legacy_f32  v10, s29, v5
  v_mac_legacy_f32  v10, s30, v6
  s_waitcnt     lgkmcnt(0)
  v_mul_legacy_f32  v11, s16, v4
  v_mul_legacy_f32  v1, s20, v4
  v_mul_legacy_f32  v14, v2, v14
  v_mul_legacy_f32  v15, v2, v15
  v_mul_legacy_f32  v0, v2, v0
  v_mul_legacy_f32  v2, s24, v4
  v_mac_legacy_f32  v11, s17, v5
  v_mac_legacy_f32  v1, s21, v5
  v_mac_legacy_f32  v2, s25, v5
  v_mac_legacy_f32  v11, s18, v6
  v_mac_legacy_f32  v1, s22, v6
  v_mac_legacy_f32  v2, s26, v6
  v_mac_legacy_f32  v10, s31, v7
  exp           pos0, v3, v8, v9, v10 done
  v_mul_legacy_f32  v5, s13, v5
  v_mac_legacy_f32  v11, s19, v7
  v_mac_legacy_f32  v1, s23, v7
  v_mac_legacy_f32  v2, s27, v7
  v_mul_legacy_f32  v7, s15, v7
  v_mad_legacy_f32  v4, v4, s12, v5
  v_mad_legacy_f32  v5, v6, s14, v7
  v_add_f32     v4, v4, v5 clamp
  v_mul_legacy_f32  v5, s3, v19
  s_waitcnt     expcnt(0)
  v_mov_b32     v3, 0
  v_mov_b32     v6, 1.0
  exp           param0, v12, v13, v3, v6
  exp           param1, v11, v1, v2, v4
  exp           param2, v14, v15, v0, v6
  exp           param3, v16, v17, v18, v5
  s_endpgm      
end


NumVGPR=20,NumSGPR=34,LDS=0,Scratch=0,Occpancy=10

// Shader Type               : (VS)
// Shader Hw Stage           : (ES)

// Shader Instructions:
shader main
  asic(CI)
  type(VS)
  s_swappc_b64  s[0:1], s[0:1]
  s_or_b32      s5, s7, 0x00100000 // wrscc
  s_mov_b32     s4, s6
  s_mov_b32     s6, -1
  s_mov_b32     s7, 0x00024fac
  s_buffer_load_dwordx4  s[12:15], s[4:7], 0x64
  s_buffer_load_dwordx8  s[36:43], s[4:7], 0x5c
  s_waitcnt     vmcnt(0)
  v_mad_f32     v0, v8, 2.0, -1.0
  s_mov_b32     s1, 0
  s_load_dwordx4  s[0:3], s[0:1], 0x08
  s_waitcnt     lgkmcnt(0)
  v_mul_legacy_f32  v2, s12, v4
  v_mac_legacy_f32  v2, s13, v5
  v_mac_legacy_f32  v2, s14, v6
  v_mac_legacy_f32  v2, s15, v7
  s_buffer_load_dwordx16  s[12:27], s[4:7], 0x4c
  v_mul_legacy_f32  v3, s36, v4
  v_mac_legacy_f32  v3, s37, v5
  v_mac_legacy_f32  v3, s38, v6
  v_mac_legacy_f32  v3, s39, v7
  s_waitcnt     lgkmcnt(0)
  v_mul_legacy_f32  v8, s24, v4
  v_mac_legacy_f32  v8, s25, v5
  v_mac_legacy_f32  v8, s26, v6
  v_mac_legacy_f32  v8, s27, v7
  s_buffer_load_dword  s8, s[4:7], 0x03
  s_buffer_load_dwordx16  s[24:39], s[4:7], 0x38
  v_mul_legacy_f32  v11, s40, v4
  v_mad_f32     v1, v9, 2.0, -1.0
  v_mac_legacy_f32  v11, s41, v5
  v_mac_legacy_f32  v11, s42, v6
  s_waitcnt     lgkmcnt(0)
  v_mul_legacy_f32  v9, s28, v4
  v_mac_legacy_f32  v9, s29, v5
  v_mac_legacy_f32  v9, s30, v6
  v_mac_legacy_f32  v9, s31, v7
  v_mac_legacy_f32  v11, s43, v7
  buffer_store_dword  v8, v0, s[0:3], s10 offset:64 glc slc
  buffer_store_dword  v3, v0, s[0:3], s10 offset:68 glc slc
  buffer_store_dword  v11, v0, s[0:3], s10 offset:72 glc slc
  buffer_store_dword  v2, v0, s[0:3], s10 offset:76 glc slc
  buffer_store_dword  v12, v0, s[0:3], s10 glc slc
  buffer_store_dword  v13, v0, s[0:3], s10 offset:4 glc slc
  buffer_store_dword  v9, v0, s[0:3], s10 offset:16 glc slc
  v_mul_legacy_f32  v2, s32, v4
  v_mac_legacy_f32  v2, s33, v5
  v_mac_legacy_f32  v2, s34, v6
  v_mac_legacy_f32  v2, s35, v7
  buffer_store_dword  v2, v0, s[0:3], s10 offset:20 glc slc
  v_mul_legacy_f32  v2, s36, v4
  v_mac_legacy_f32  v2, s37, v5
  v_mac_legacy_f32  v2, s38, v6
  v_mac_legacy_f32  v2, s39, v7
  v_mul_legacy_f32  v3, s27, v7
  buffer_store_dword  v2, v0, s[0:3], s10 offset:24 glc slc
  v_mul_legacy_f32  v2, s25, v5
  v_mul_legacy_f32  v5, s16, v0
  v_mac_legacy_f32  v2, s24, v4
  v_mac_legacy_f32  v3, s26, v6
  v_add_f32     v2, v2, v3 clamp
  v_mul_legacy_f32  v3, s12, v0
  v_mad_f32     v4, v10, 2.0, -1.0
  v_mac_legacy_f32  v5, s17, v1
  v_mac_legacy_f32  v3, s13, v1
  v_mul_legacy_f32  v0, s20, v0
  v_mac_legacy_f32  v5, s18, v4
  v_mac_legacy_f32  v0, s21, v1
  v_mac_legacy_f32  v3, s14, v4
  v_mul_legacy_f32  v6, v5, v5
  v_mac_legacy_f32  v6, v3, v3
  v_mac_legacy_f32  v0, s22, v4
  v_mad_legacy_f32  v1, v0, v0, v6
  v_rsq_f32     v1, v1
  buffer_store_dword  v2, v0, s[0:3], s10 offset:28 glc slc
  v_mul_legacy_f32  v2, s8, v19
  v_mul_legacy_f32  v3, v1, v3
  buffer_store_dword  v3, v0, s[0:3], s10 offset:32 glc slc
  v_mul_legacy_f32  v3, v1, v5
  v_mul_legacy_f32  v0, v1, v0
  buffer_store_dword  v3, v0, s[0:3], s10 offset:36 glc slc
  buffer_store_dword  v0, v0, s[0:3], s10 offset:40 glc slc
  buffer_store_dword  v16, v0, s[0:3], s10 offset:48 glc slc
  buffer_store_dword  v17, v0, s[0:3], s10 offset:52 glc slc
  buffer_store_dword  v18, v0, s[0:3], s10 offset:56 glc slc
  buffer_store_dword  v2, v0, s[0:3], s10 offset:60 glc slc
  s_endpgm      
end


NumVGPR=20,NumSGPR=46,LDS=0,Scratch=0,Occpancy=10

// Shader Type               : (VS)
// Shader Hw Stage           : (LS)

// Shader Instructions:
shader main
  asic(CI)
  type(VS)
  s_swappc_b64  s[0:1], s[0:1]
  s_or_b32      s29, s7, 0x00100000 // wrscc
  s_mov_b32     s28, s6
  s_mov_b32     s30, -1
  s_mov_b32     s31, 0x00024fac
  s_buffer_load_dwordx16  s[0:15], s[28:31], 0x4c
  s_buffer_load_dwordx8  s[16:23], s[28:31], 0x5c
  s_buffer_load_dwordx4  s[24:27], s[28:31], 0x64
  s_mov_b32     m0, -1
  s_waitcnt     vmcnt(0) & lgkmcnt(0)
  v_mul_legacy_f32  v0, s12, v4
  v_mac_legacy_f32  v0, s13, v5
  v_mac_legacy_f32  v0, s14, v6
  v_mad_legacy_f32  v2, v7, s15, v0
  v_mul_legacy_f32  v0, s16, v4
  v_mac_legacy_f32  v0, s17, v5
  v_mac_legacy_f32  v0, s18, v6
  v_mad_legacy_f32  v3, v7, s19, v0
  v_mul_legacy_f32  v0, s20, v4
  v_mac_legacy_f32  v0, s21, v5
  v_mac_legacy_f32  v0, s22, v6
  v_mad_legacy_f32  v14, v7, s23, v0
  v_mul_legacy_f32  v0, s24, v4
  v_mac_legacy_f32  v0, s25, v5
  v_mac_legacy_f32  v0, s26, v6
  v_mad_legacy_f32  v15, v7, s27, v0
  s_buffer_load_dwordx16  s[12:27], s[28:31], 0x38
  s_waitcnt     lgkmcnt(0)
  v_mul_legacy_f32  v0, s16, v4
  v_mac_legacy_f32  v0, s17, v5
  v_mac_legacy_f32  v0, s18, v6
  v_mul_legacy_f32  v11, s20, v4
  v_mad_legacy_f32  v20, v7, s19, v0
  v_mul_legacy_f32  v0, s24, v4
  v_mac_legacy_f32  v11, s21, v5
  v_mac_legacy_f32  v0, s25, v5
  v_mul_legacy_f32  v5, s13, v5
  v_mac_legacy_f32  v5, s12, v4
  v_mac_legacy_f32  v0, s26, v6
  v_mul_legacy_f32  v4, s15, v7
  v_mac_legacy_f32  v11, s22, v6
  v_mad_legacy_f32  v6, v6, s14, v4
  v_mad_legacy_f32  v4, v7, s27, v0
  v_mad_f32     v0, v8, 2.0, -1.0
  v_mad_legacy_f32  v21, v7, s23, v11
  v_add_f32     v5, v5, v6 clamp
  v_mul_legacy_f32  v7, s0, v0
  v_mad_f32     v6, v9, 2.0, -1.0
  v_mul_legacy_f32  v8, s4, v0
  v_mul_legacy_f32  v0, s8, v0
  v_mac_legacy_f32  v7, s1, v6
  v_mac_legacy_f32  v8, s5, v6
  v_mac_legacy_f32  v0, s9, v6
  v_mad_f32     v6, v10, 2.0, -1.0
  v_mac_legacy_f32  v8, s6, v6
  v_mac_legacy_f32  v7, s2, v6
  v_mac_legacy_f32  v0, s10, v6
  v_mul_legacy_f32  v6, v8, v8
  v_mac_legacy_f32  v6, v7, v7
  v_mac_legacy_f32  v6, v0, v0
  s_buffer_load_dword  s0, s[28:31], 0x03
  v_rsq_f32     v9, v6
  s_movk_i32    s1, 0x0050
  v_mul_lo_i32  v1, v1, s1
  v_mul_legacy_f32  v6, v9, v7
  v_mul_legacy_f32  v7, v9, v8
  v_mul_legacy_f32  v0, v9, v0
  s_waitcnt     lgkmcnt(0)
  v_mul_legacy_f32  v19, s0, v19
  ds_write2_b64  v1, v[2:3], v[14:15] offset0:8 offset1:9
  ds_write2_b64  v1, v[12:13], v[4:5] offset1:3
  ds_write_b32  v1, v0 offset:40
  ds_write2_b64  v1, v[20:21], v[6:7] offset0:2 offset1:4
  ds_write2_b64  v1, v[16:17], v[18:19] offset0:6 offset1:7
  s_endpgm      
end


NumVGPR=22,NumSGPR=34,LDS=0,Scratch=0,Occpancy=10


#endif

const unsigned char NormalMapEffect_VSNormalPixelLightingTxVcNoSpecBn[] = {
  0x44, 0x58, 0x42, 0x43, 0x68, 0xe2, 0xdf, 0x5c, 0x4c, 0x9a, 0x34, 0xcd,
  0x12, 0x38, 0x76, 0x5d, 0xb3, 0x7a, 0x86, 0x72, 0x01, 0x00, 0x00, 0x00,
  0xd0, 0x1a, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00,
  0x50, 0x00, 0x00, 0x00, 0x04, 0x01, 0x00, 0x00, 0xd0, 0x01, 0x00, 0x00,
  0x80, 0x03, 0x00, 0x00, 0x40, 0x04, 0x00, 0x00, 0xe4, 0x04, 0x00, 0x00,
  0x00, 0x05, 0x00, 0x00, 0x53, 0x46, 0x49, 0x30, 0x08, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x49, 0x53, 0x47, 0x31,
  0xac, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x88, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x0f, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x94, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x07, 0x07, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x9b, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x03, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xa4, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x0f, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x53, 0x56, 0x5f, 0x50,
  0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x00, 0x4e, 0x4f, 0x52, 0x4d,
  0x41, 0x4c, 0x00, 0x54, 0x45, 0x58, 0x43, 0x4f, 0x4f, 0x52, 0x44, 0x00,
  0x43, 0x4f, 0x4c, 0x4f, 0x52, 0x00, 0x00, 0x00, 0x4f, 0x53, 0x47, 0x31,
  0xc4, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xa8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x03, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xa8, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xa8, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x07, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xb1, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xb7, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x54, 0x45, 0x58, 0x43, 0x4f, 0x4f, 0x52, 0x44,
  0x00, 0x43, 0x4f, 0x4c, 0x4f, 0x52, 0x00, 0x53, 0x56, 0x5f, 0x50, 0x6f,
  0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x00, 0x00, 0x50, 0x53, 0x56, 0x30,
  0xa8, 0x01, 0x00, 0x00, 0x34, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00,
  0x04, 0x05, 0x00, 0x04, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x44, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x0d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x68, 0x00, 0x00, 0x00,
  0x00, 0x53, 0x56, 0x5f, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
  0x00, 0x4e, 0x4f, 0x52, 0x4d, 0x41, 0x4c, 0x00, 0x54, 0x45, 0x58, 0x43,
  0x4f, 0x4f, 0x52, 0x44, 0x00, 0x43, 0x4f, 0x4c, 0x4f, 0x52, 0x00, 0x54,
  0x45, 0x58, 0x43, 0x4f, 0x4f, 0x52, 0x44, 0x00, 0x54, 0x45, 0x58, 0x43,
  0x4f, 0x4f, 0x52, 0x44, 0x00, 0x54, 0x45, 0x58, 0x43, 0x4f, 0x4f, 0x52,
  0x44, 0x00, 0x43, 0x4f, 0x4c, 0x4f, 0x52, 0x00, 0x56, 0x53, 0x4e, 0x6f,
  0x72, 0x6d, 0x61, 0x6c, 0x50, 0x69, 0x78, 0x65, 0x6c, 0x4c, 0x69, 0x67,
  0x68, 0x74, 0x69, 0x6e, 0x67, 0x54, 0x78, 0x56, 0x63, 0x4e, 0x6f, 0x53,
  0x70, 0x65, 0x63, 0x42, 0x6e, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x10, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x44, 0x00, 0x03, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x43, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x02, 0x42, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x03, 0x44, 0x00, 0x03, 0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x42, 0x00, 0x03, 0x02, 0x00, 0x00,
  0x2c, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x01, 0x44, 0x00,
  0x03, 0x02, 0x00, 0x00, 0x35, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x01, 0x02, 0x43, 0x00, 0x03, 0x02, 0x00, 0x00, 0x3e, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x03, 0x44, 0x00, 0x03, 0x02, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x04, 0x44, 0x03,
  0x03, 0x04, 0x00, 0x00, 0xf0, 0x00, 0x0f, 0x00, 0xf0, 0x00, 0x0f, 0x00,
  0xf0, 0x00, 0x0f, 0x00, 0xf0, 0x00, 0x0f, 0x00, 0x00, 0x07, 0x00, 0x00,
  0x00, 0x07, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00,
  0x00, 0x40, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x52, 0x54, 0x53, 0x30,
  0xb8, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00,
  0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb8, 0x00, 0x00, 0x00,
  0x1d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00,
  0x54, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00,
  0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00,
  0x8c, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xa8, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0xb0, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x5c, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00,
  0x78, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff,
  0x01, 0x00, 0x00, 0x00, 0x94, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x49, 0x4c, 0x44, 0x4e,
  0x9c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x96, 0x00, 0x43, 0x3a, 0x5c, 0x55,
  0x73, 0x65, 0x72, 0x73, 0x5c, 0x6d, 0x61, 0x72, 0x63, 0x75, 0x5c, 0x44,
  0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x73, 0x5c, 0x44, 0x69, 0x72,
  0x65, 0x63, 0x74, 0x58, 0x54, 0x4b, 0x31, 0x32, 0x2d, 0x6d, 0x61, 0x69,
  0x6e, 0x5c, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x58, 0x54, 0x4b, 0x31,
  0x32, 0x2d, 0x6d, 0x61, 0x69, 0x6e, 0x5c, 0x53, 0x72, 0x63, 0x2f, 0x53,
  0x68, 0x61, 0x64, 0x65, 0x72, 0x73, 0x2f, 0x43, 0x6f, 0x6d, 0x70, 0x69,
  0x6c, 0x65, 0x64, 0x5c, 0x58, 0x62, 0x6f, 0x78, 0x47, 0x61, 0x6d, 0x69,
  0x6e, 0x67, 0x58, 0x62, 0x6f, 0x78, 0x4f, 0x6e, 0x65, 0x4e, 0x6f, 0x72,
  0x6d, 0x61, 0x6c, 0x4d, 0x61, 0x70, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74,
  0x5f, 0x56, 0x53, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x50, 0x69, 0x78,
  0x65, 0x6c, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x54, 0x78,
  0x56, 0x63, 0x4e, 0x6f, 0x53, 0x70, 0x65, 0x63, 0x42, 0x6e, 0x2e, 0x70,
  0x64, 0x62, 0x00, 0x00, 0x48, 0x41, 0x53, 0x48, 0x14, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x59, 0xfe, 0x79, 0x96, 0xbb, 0x71, 0xde, 0xa2,
  0xa5, 0x1c, 0x13, 0x6b, 0x37, 0xe2, 0xa4, 0x54, 0x44, 0x58, 0x49, 0x4c,
  0xc8, 0x15, 0x00, 0x00, 0x60, 0x00, 0x01, 0x00, 0x72, 0x05, 0x00, 0x00,
  0x44, 0x58, 0x49, 0x4c, 0x00, 0x01, 0x00, 0x00, 0x94, 0x00, 0x00, 0x00,
  0x18, 0x0c, 0x00, 0x00, 0x58, 0x44, 0x41, 0x54, 0x08, 0x00, 0x00, 0x00,
  0x24, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x84, 0x00, 0x00, 0x00,
  0x30, 0x0c, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0xb4, 0x0c, 0x00, 0x00,
  0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc4, 0x0c, 0x00, 0x00,
  0x6b, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x0f, 0x00, 0x00,
  0x9e, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xd0, 0x11, 0x00, 0x00,
  0x68, 0x02, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x38, 0x14, 0x00, 0x00,
  0x20, 0x01, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x58, 0x15, 0x00, 0x00,
  0x5a, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0xb4, 0x15, 0x00, 0x00,
  0x11, 0x00, 0x00, 0x00, 0x60, 0x00, 0x01, 0x00, 0x0c, 0x03, 0x00, 0x00,
  0x44, 0x58, 0x49, 0x4c, 0x00, 0x01, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00,
  0x18, 0x0c, 0x00, 0x00, 0x42, 0x43, 0xc0, 0xde, 0x21, 0x0c, 0x00, 0x00,
  0x03, 0x03, 0x00, 0x00, 0x0b, 0x82, 0x20, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x13, 0x00, 0x00, 0x00, 0x07, 0x81, 0x23, 0x91, 0x41, 0xc8, 0x04, 0x49,
  0x06, 0x10, 0x32, 0x39, 0x92, 0x01, 0x84, 0x0c, 0x25, 0x05, 0x08, 0x19,
  0x1e, 0x04, 0x8b, 0x62, 0x80, 0x18, 0x45, 0x02, 0x42, 0x92, 0x0b, 0x42,
  0xc4, 0x10, 0x32, 0x14, 0x38, 0x08, 0x18, 0x4b, 0x0a, 0x32, 0x62, 0x88,
  0x48, 0x90, 0x14, 0x20, 0x43, 0x46, 0x88, 0xa5, 0x00, 0x19, 0x32, 0x42,
  0xe4, 0x48, 0x0e, 0x90, 0x11, 0x23, 0xc4, 0x50, 0x41, 0x51, 0x81, 0x8c,
  0xe1, 0x83, 0xe5, 0x8a, 0x04, 0x31, 0x46, 0x06, 0x51, 0x18, 0x00, 0x00,
  0x08, 0x00, 0x00, 0x00, 0x1b, 0x8c, 0xe0, 0xff, 0xff, 0xff, 0xff, 0x07,
  0x40, 0x02, 0xa8, 0x0d, 0x84, 0xf0, 0xff, 0xff, 0xff, 0xff, 0x03, 0x20,
  0x6d, 0x30, 0x86, 0xff, 0xff, 0xff, 0xff, 0x1f, 0x00, 0x09, 0xa8, 0x00,
  0x49, 0x18, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x13, 0x82, 0x60, 0x42,
  0x20, 0x4c, 0x08, 0x06, 0x00, 0x00, 0x00, 0x00, 0x89, 0x20, 0x00, 0x00,
  0x2f, 0x00, 0x00, 0x00, 0x32, 0x22, 0x88, 0x09, 0x20, 0x64, 0x85, 0x04,
  0x13, 0x23, 0xa4, 0x84, 0x04, 0x13, 0x23, 0xe3, 0x84, 0xa1, 0x90, 0x14,
  0x12, 0x4c, 0x8c, 0x8c, 0x0b, 0x84, 0xc4, 0x4c, 0x10, 0x88, 0xc1, 0x08,
  0x40, 0x09, 0x00, 0x0a, 0x66, 0x00, 0xe6, 0x08, 0xc0, 0x60, 0x8e, 0x00,
  0x29, 0xc6, 0x40, 0x10, 0x44, 0x41, 0x90, 0x51, 0x0c, 0x80, 0x20, 0x88,
  0x62, 0x20, 0xa4, 0x20, 0x03, 0x31, 0x0c, 0xc3, 0x30, 0x0c, 0xa4, 0x94,
  0x61, 0x20, 0x06, 0x62, 0x8a, 0x32, 0x10, 0xc3, 0x30, 0x0c, 0xc3, 0x30,
  0x0c, 0xe4, 0x1c, 0x35, 0x5c, 0xfe, 0x84, 0x3d, 0x84, 0xe4, 0x73, 0x1b,
  0x55, 0xac, 0xc4, 0xe4, 0x17, 0xb7, 0x8d, 0x88, 0x61, 0x18, 0x06, 0x2a,
  0xee, 0x19, 0x2e, 0x7f, 0xc2, 0x1e, 0x42, 0xf2, 0x43, 0xa0, 0x19, 0x16,
  0x02, 0x05, 0x51, 0x21, 0x20, 0x42, 0x22, 0x68, 0x2a, 0xc5, 0x40, 0x0c,
  0xc3, 0x40, 0xd5, 0x1c, 0x41, 0x50, 0x0c, 0x89, 0x28, 0x08, 0xe2, 0x22,
  0x6c, 0x20, 0x60, 0x18, 0x81, 0x18, 0x86, 0x11, 0x86, 0x21, 0x07, 0xb8,
  0x24, 0xd8, 0xae, 0x3a, 0x1c, 0x69, 0x5a, 0x00, 0xcc, 0xa1, 0x26, 0x3f,
  0x05, 0x22, 0x80, 0x21, 0x26, 0x22, 0x92, 0x50, 0xb3, 0x71, 0xdc, 0xd0,
  0x75, 0x1d, 0xc7, 0x6d, 0x5e, 0xe7, 0xd1, 0x97, 0x12, 0x04, 0x00, 0x00,
  0x13, 0x16, 0x72, 0xc0, 0x87, 0x74, 0x60, 0x87, 0x36, 0x68, 0x87, 0x79,
  0x68, 0x03, 0x7c, 0x10, 0x87, 0x38, 0xd8, 0xf0, 0x0a, 0xe5, 0xd0, 0x06,
  0xed, 0xa0, 0x07, 0xe5, 0xd0, 0x06, 0xf0, 0xa0, 0x07, 0x73, 0x20, 0x07,
  0x7a, 0x30, 0x07, 0x72, 0xd0, 0x06, 0xe9, 0x10, 0x07, 0x7a, 0x30, 0x07,
  0x72, 0xd0, 0x06, 0xe9, 0x80, 0x07, 0x7a, 0x30, 0x07, 0x72, 0xd0, 0x06,
  0xe9, 0x10, 0x07, 0x76, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x90, 0x0e,
  0x73, 0x20, 0x07, 0x7a, 0x30, 0x07, 0x72, 0xd0, 0x06, 0xe9, 0x60, 0x07,
  0x74, 0xa0, 0x07, 0x76, 0x40, 0x07, 0x6d, 0x60, 0x0e, 0x71, 0x60, 0x07,
  0x7a, 0x30, 0x07, 0x72, 0xd0, 0x06, 0xe6, 0x30, 0x07, 0x72, 0xa0, 0x07,
  0x73, 0x20, 0x07, 0x6d, 0x60, 0x0e, 0x76, 0x40, 0x07, 0x7a, 0x60, 0x07,
  0x74, 0xd0, 0x06, 0xee, 0x80, 0x07, 0x7a, 0x10, 0x07, 0x76, 0xa0, 0x07,
  0x73, 0x20, 0x07, 0x7a, 0x60, 0x07, 0x74, 0x30, 0xe4, 0x09, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0xc8, 0x63, 0x00,
  0x01, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x90, 0x07,
  0x01, 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x21,
  0x8f, 0x02, 0x04, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x43, 0x1e, 0x06, 0x08, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x86, 0x3c, 0x0e, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x0c, 0x79, 0x26, 0x20, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x18, 0xf2, 0x54, 0x40, 0x00, 0x04, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x30, 0xe4, 0xc1, 0x80, 0x00, 0x18, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x0b, 0x04, 0x15, 0x00, 0x00, 0x00,
  0x32, 0x1e, 0x98, 0x14, 0x19, 0x11, 0x4c, 0x90, 0x8c, 0x09, 0x26, 0x47,
  0xc6, 0x04, 0x43, 0x22, 0x4a, 0x60, 0x04, 0xa0, 0x20, 0x8a, 0xa1, 0x80,
  0x0d, 0xca, 0xa0, 0x3c, 0xca, 0xa1, 0x08, 0x0a, 0x81, 0x8a, 0x92, 0x18,
  0x01, 0x28, 0x84, 0x32, 0x28, 0x02, 0x02, 0x67, 0x00, 0x28, 0x1c, 0x4b,
  0x82, 0x28, 0xf8, 0x04, 0x3d, 0xf8, 0x04, 0x3d, 0xf8, 0x04, 0x3d, 0xf8,
  0x04, 0x3d, 0x10, 0x0f, 0x40, 0x3c, 0x00, 0xf1, 0x00, 0x08, 0x04, 0x00,
  0x00, 0x41, 0x02, 0x04, 0x11, 0x10, 0x84, 0x40, 0x10, 0x0c, 0x00, 0x00,
  0x79, 0x18, 0x00, 0x00, 0x8b, 0x00, 0x00, 0x00, 0x1a, 0x03, 0x4c, 0x90,
  0x46, 0x02, 0x13, 0xc4, 0x36, 0xf8, 0xfa, 0xc2, 0x12, 0x7a, 0xc2, 0xfa,
  0x82, 0x2a, 0x92, 0xfa, 0xa2, 0x42, 0x92, 0x2a, 0x0a, 0x22, 0xfa, 0x9a,
  0x1a, 0x92, 0x0a, 0xa2, 0x1a, 0x42, 0xfa, 0x9a, 0x4a, 0xd2, 0x2a, 0xfa,
  0x62, 0x4a, 0x6a, 0x4a, 0xa2, 0xfa, 0x4a, 0x72, 0xfa, 0x12, 0xca, 0xa2,
  0x2a, 0x9a, 0x62, 0x00, 0xb3, 0x41, 0x08, 0x04, 0x76, 0x64, 0x78, 0x63,
  0x78, 0x62, 0x6f, 0x78, 0x20, 0x32, 0x34, 0x31, 0x30, 0x2e, 0x32, 0x34,
  0x31, 0x30, 0x2e, 0x31, 0x31, 0x31, 0x31, 0x36, 0x2e, 0x31, 0x30, 0x37,
  0x34, 0x31, 0x1b, 0x02, 0x62, 0x82, 0x40, 0x24, 0x13, 0x04, 0x42, 0xd9,
  0x20, 0x18, 0xc7, 0x04, 0x81, 0x58, 0x36, 0x08, 0x46, 0x42, 0xc1, 0x6e,
  0x6e, 0x82, 0x40, 0x30, 0x1b, 0x86, 0x85, 0x39, 0x26, 0x08, 0x60, 0x80,
  0x11, 0x98, 0x20, 0x10, 0xcd, 0x06, 0xe4, 0x70, 0x9e, 0xe3, 0x30, 0x20,
  0x60, 0x43, 0x10, 0x6d, 0x20, 0x00, 0x40, 0x02, 0x26, 0x08, 0x61, 0x90,
  0x6d, 0x08, 0xa8, 0x09, 0x82, 0x00, 0x30, 0x0c, 0xac, 0xa6, 0x9c, 0xde,
  0xe4, 0xda, 0xc2, 0xd8, 0xa0, 0xd2, 0xf0, 0xca, 0xd8, 0x98, 0xd2, 0xce,
  0xd0, 0xe8, 0xd2, 0xdc, 0xce, 0xa8, 0xf0, 0xac, 0xc6, 0x9c, 0xde, 0xa6,
  0xe0, 0xca, 0xc6, 0x84, 0xdc, 0xb8, 0x4c, 0x59, 0x7d, 0x41, 0xbd, 0xcd,
  0xa5, 0xd1, 0xa5, 0xbd, 0xb9, 0x4d, 0x10, 0x8a, 0x69, 0x82, 0x50, 0x50,
  0x1b, 0x82, 0x63, 0x82, 0x50, 0x54, 0x13, 0x04, 0xc2, 0x99, 0x20, 0x10,
  0xcf, 0x06, 0xa1, 0xf3, 0x36, 0x2c, 0x07, 0x96, 0x69, 0x9b, 0x66, 0x70,
  0x87, 0xf6, 0xd1, 0x70, 0x7a, 0x92, 0x6a, 0x0a, 0x62, 0x9a, 0x20, 0x14,
  0xd6, 0x04, 0x81, 0x80, 0x36, 0x08, 0xdd, 0x18, 0x6c, 0x58, 0x8c, 0x30,
  0xc8, 0xb4, 0x4d, 0x33, 0xc4, 0xc0, 0xd0, 0xc8, 0x60, 0x82, 0x40, 0x44,
  0x44, 0xa8, 0x8a, 0xb0, 0x86, 0x9e, 0x9e, 0xa4, 0x88, 0x26, 0x08, 0xc5,
  0xb5, 0x41, 0xe8, 0xba, 0x0d, 0x8b, 0x19, 0x9c, 0x41, 0xa6, 0x6d, 0x9a,
  0x81, 0x06, 0x66, 0xa0, 0xa5, 0x01, 0x8b, 0xa1, 0x27, 0xa6, 0x27, 0xa9,
  0x0d, 0x4b, 0xb7, 0x06, 0x99, 0xb6, 0x69, 0x06, 0xd7, 0x69, 0xdf, 0x06,
  0x02, 0x0c, 0xca, 0x40, 0x0d, 0xd8, 0x60, 0xc3, 0x72, 0x9c, 0x41, 0xa6,
  0x6d, 0x68, 0x60, 0xa0, 0xc1, 0xa1, 0xa5, 0xc1, 0x86, 0xc0, 0xd8, 0xb0,
  0x18, 0x67, 0x90, 0x69, 0x6f, 0x80, 0x06, 0x06, 0x67, 0x68, 0xdf, 0x86,
  0xc0, 0x0c, 0x36, 0x2c, 0x66, 0x70, 0x06, 0x99, 0x16, 0x07, 0x68, 0x60,
  0x88, 0x81, 0x19, 0x68, 0x64, 0xb0, 0x61, 0xe9, 0xd6, 0x20, 0xd3, 0x36,
  0x34, 0x30, 0xb8, 0x4e, 0xfb, 0x26, 0x08, 0x84, 0xb4, 0x61, 0xa1, 0x03,
  0x2c, 0x13, 0x83, 0x8d, 0x33, 0x38, 0x3a, 0xd0, 0xbe, 0x0d, 0x85, 0x1b,
  0xc0, 0x81, 0x1c, 0xcc, 0x41, 0x1d, 0x6c, 0x18, 0xda, 0xc0, 0x0e, 0x80,
  0x0d, 0x85, 0x75, 0xdd, 0xc1, 0x04, 0xb4, 0xc2, 0x13, 0x7b, 0xc3, 0x73,
  0x19, 0x7b, 0x6b, 0x83, 0x4b, 0x63, 0x2b, 0x93, 0x73, 0x79, 0x83, 0xa3,
  0x4b, 0x7b, 0x73, 0x9b, 0x9b, 0x12, 0x08, 0x55, 0xd8, 0xd8, 0xec, 0xda,
  0x5c, 0xd2, 0xc8, 0xca, 0xdc, 0xe8, 0xa6, 0x04, 0x44, 0x15, 0x32, 0x3c,
  0x17, 0xbb, 0x32, 0xb9, 0xb9, 0xb4, 0x37, 0xb7, 0x29, 0xc1, 0xd1, 0x84,
  0x0c, 0xcf, 0xc5, 0x2e, 0x8c, 0xcd, 0xae, 0x4c, 0x6e, 0x4a, 0x90, 0xd4,
  0x21, 0xc3, 0x73, 0x99, 0x43, 0x0b, 0x23, 0x2b, 0x93, 0x6b, 0x7a, 0x23,
  0x2b, 0x63, 0x9b, 0x12, 0x30, 0x65, 0xc8, 0xf0, 0x5c, 0xe4, 0xca, 0xe6,
  0xde, 0xea, 0xe4, 0xc6, 0xca, 0xe6, 0xa6, 0x04, 0x52, 0x1d, 0x32, 0x3c,
  0x17, 0xbb, 0xb4, 0xb2, 0xbb, 0x24, 0xb2, 0x29, 0xba, 0x30, 0xba, 0xb2,
  0x29, 0x01, 0x55, 0x87, 0x0c, 0xcf, 0xa5, 0xcc, 0x8d, 0x4e, 0x2e, 0x0f,
  0xea, 0x2d, 0xcd, 0x8d, 0x6e, 0x6e, 0x4a, 0x70, 0x07, 0x00, 0x00, 0x00,
  0x79, 0x18, 0x00, 0x00, 0x4c, 0x00, 0x00, 0x00, 0x33, 0x08, 0x80, 0x1c,
  0xc4, 0xe1, 0x1c, 0x66, 0x14, 0x01, 0x3d, 0x88, 0x43, 0x38, 0x84, 0xc3,
  0x8c, 0x42, 0x80, 0x07, 0x79, 0x78, 0x07, 0x73, 0x98, 0x71, 0x0c, 0xe6,
  0x00, 0x0f, 0xed, 0x10, 0x0e, 0xf4, 0x80, 0x0e, 0x33, 0x0c, 0x42, 0x1e,
  0xc2, 0xc1, 0x1d, 0xce, 0xa1, 0x1c, 0x66, 0x30, 0x05, 0x3d, 0x88, 0x43,
  0x38, 0x84, 0x83, 0x1b, 0xcc, 0x03, 0x3d, 0xc8, 0x43, 0x3d, 0x8c, 0x03,
  0x3d, 0xcc, 0x78, 0x8c, 0x74, 0x70, 0x07, 0x7b, 0x08, 0x07, 0x79, 0x48,
  0x87, 0x70, 0x70, 0x07, 0x7a, 0x70, 0x03, 0x76, 0x78, 0x87, 0x70, 0x20,
  0x87, 0x19, 0xcc, 0x11, 0x0e, 0xec, 0x90, 0x0e, 0xe1, 0x30, 0x0f, 0x6e,
  0x30, 0x0f, 0xe3, 0xf0, 0x0e, 0xf0, 0x50, 0x0e, 0x33, 0x10, 0xc4, 0x1d,
  0xde, 0x21, 0x1c, 0xd8, 0x21, 0x1d, 0xc2, 0x61, 0x1e, 0x66, 0x30, 0x89,
  0x3b, 0xbc, 0x83, 0x3b, 0xd0, 0x43, 0x39, 0xb4, 0x03, 0x3c, 0xbc, 0x83,
  0x3c, 0x84, 0x03, 0x3b, 0xcc, 0xf0, 0x14, 0x76, 0x60, 0x07, 0x7b, 0x68,
  0x07, 0x37, 0x68, 0x87, 0x72, 0x68, 0x07, 0x37, 0x80, 0x87, 0x70, 0x90,
  0x87, 0x70, 0x60, 0x07, 0x76, 0x28, 0x07, 0x76, 0xf8, 0x05, 0x76, 0x78,
  0x87, 0x77, 0x80, 0x87, 0x5f, 0x08, 0x87, 0x71, 0x18, 0x87, 0x72, 0x98,
  0x87, 0x79, 0x98, 0x81, 0x2c, 0xee, 0xf0, 0x0e, 0xee, 0xe0, 0x0e, 0xf5,
  0xc0, 0x0e, 0xec, 0x30, 0x03, 0x62, 0xc8, 0xa1, 0x1c, 0xe4, 0xa1, 0x1c,
  0xcc, 0xa1, 0x1c, 0xe4, 0xa1, 0x1c, 0xdc, 0x61, 0x1c, 0xca, 0x21, 0x1c,
  0xc4, 0x81, 0x1d, 0xca, 0x61, 0x06, 0xd6, 0x90, 0x43, 0x39, 0xc8, 0x43,
  0x39, 0x98, 0x43, 0x39, 0xc8, 0x43, 0x39, 0xb8, 0xc3, 0x38, 0x94, 0x43,
  0x38, 0x88, 0x03, 0x3b, 0x94, 0xc3, 0x2f, 0xbc, 0x83, 0x3c, 0xfc, 0x82,
  0x3b, 0xd4, 0x03, 0x3b, 0xb0, 0xc3, 0x0c, 0xc4, 0x21, 0x07, 0x7c, 0x70,
  0x03, 0x7a, 0x28, 0x87, 0x76, 0x80, 0x87, 0x19, 0xd1, 0x43, 0x0e, 0xf8,
  0xe0, 0x06, 0xe4, 0x20, 0x0e, 0xe7, 0xe0, 0x06, 0xf6, 0x10, 0x0e, 0xf2,
  0xc0, 0x0e, 0xe1, 0x90, 0x0f, 0xef, 0x50, 0x0f, 0xf4, 0x00, 0x00, 0x00,
  0x71, 0x20, 0x00, 0x00, 0x27, 0x00, 0x00, 0x00, 0x06, 0x10, 0x06, 0x2f,
  0x7b, 0x3a, 0x11, 0x03, 0x2c, 0x29, 0x72, 0x11, 0x4b, 0x89, 0x18, 0xc7,
  0x84, 0x34, 0x46, 0x7b, 0xbd, 0xc2, 0xe9, 0xb0, 0x0f, 0x21, 0x6c, 0x8d,
  0x19, 0x6c, 0xc3, 0xe5, 0x3b, 0x8f, 0x2f, 0x04, 0x54, 0x51, 0x10, 0x51,
  0xe9, 0x00, 0x43, 0x49, 0x18, 0x80, 0x80, 0xf9, 0xc5, 0x6d, 0x1b, 0x82,
  0x34, 0x5c, 0xbe, 0xf3, 0xf8, 0x42, 0x44, 0x00, 0x13, 0x11, 0x02, 0xcd,
  0xb0, 0x10, 0x36, 0xe0, 0x0c, 0x97, 0xef, 0x3c, 0xfe, 0xe0, 0x4c, 0xb7,
  0x5f, 0xdc, 0xb6, 0x15, 0x38, 0xc3, 0xe5, 0x3b, 0x8f, 0x3f, 0x38, 0x13,
  0xee, 0x17, 0xb7, 0x6d, 0x01, 0xd3, 0x70, 0xf9, 0xce, 0xe3, 0x2f, 0x0e,
  0x30, 0x88, 0xcd, 0x43, 0x4d, 0x7e, 0x71, 0xdb, 0x26, 0x50, 0x0d, 0x97,
  0xef, 0x3c, 0xbe, 0x34, 0x39, 0x11, 0x81, 0x52, 0xd3, 0x43, 0x4d, 0x7e,
  0x71, 0xdb, 0x76, 0x20, 0x0d, 0x97, 0xef, 0x3c, 0xfe, 0x44, 0x44, 0x13,
  0x02, 0x44, 0x98, 0x5f, 0xdc, 0xb6, 0x11, 0x3c, 0xc3, 0xe5, 0x3b, 0x8f,
  0x4f, 0x35, 0x40, 0x84, 0xf9, 0xc5, 0x6d, 0x03, 0x61, 0x20, 0x00, 0x00,
  0x4f, 0x01, 0x00, 0x00, 0x13, 0x04, 0x41, 0x2c, 0x10, 0x00, 0x00, 0x00,
  0x0d, 0x00, 0x00, 0x00, 0x74, 0x8d, 0x00, 0x50, 0x51, 0x02, 0x44, 0x14,
  0x57, 0x29, 0xcc, 0x00, 0x94, 0x5d, 0xc9, 0x94, 0x5c, 0xb1, 0x94, 0x4b,
  0xc1, 0x14, 0x48, 0x89, 0x94, 0x49, 0xa1, 0x94, 0x4a, 0xb9, 0x15, 0x47,
  0xc1, 0xd1, 0x30, 0x46, 0x00, 0x82, 0x20, 0x88, 0xff, 0xc2, 0x18, 0x01,
  0x08, 0x82, 0x20, 0x08, 0x06, 0x00, 0x00, 0x00, 0x23, 0x06, 0x09, 0x00,
  0x82, 0x60, 0x80, 0x9d, 0x81, 0x83, 0x95, 0x41, 0x19, 0x54, 0x23, 0x06,
  0x09, 0x00, 0x82, 0x60, 0x60, 0xbc, 0x81, 0x27, 0x06, 0x66, 0xc0, 0x49,
  0x23, 0x06, 0x09, 0x00, 0x82, 0x60, 0x60, 0xc0, 0xc1, 0x37, 0x06, 0x67,
  0x60, 0x4d, 0x23, 0x06, 0x09, 0x00, 0x82, 0x60, 0x60, 0xc4, 0x01, 0x18,
  0x90, 0x01, 0x1a, 0x6c, 0xd4, 0x88, 0x41, 0x02, 0x80, 0x20, 0x18, 0x18,
  0x72, 0x10, 0x06, 0x65, 0x90, 0x06, 0x5d, 0x35, 0x62, 0x90, 0x00, 0x20,
  0x08, 0x06, 0xc6, 0x1c, 0x88, 0xc1, 0x18, 0xa8, 0x01, 0x18, 0x58, 0x23,
  0x06, 0x09, 0x00, 0x82, 0x60, 0x60, 0xd0, 0xc1, 0x18, 0x90, 0xc1, 0x1a,
  0x68, 0xd7, 0x88, 0x41, 0x02, 0x80, 0x20, 0x18, 0x18, 0x75, 0x40, 0x06,
  0x6d, 0xc0, 0x06, 0x62, 0x80, 0x8d, 0x18, 0x24, 0x00, 0x08, 0x82, 0x81,
  0x61, 0x07, 0x65, 0xe0, 0x06, 0x6d, 0xc0, 0x65, 0x23, 0x06, 0x09, 0x00,
  0x82, 0x60, 0x60, 0xdc, 0x81, 0x19, 0xbc, 0x81, 0x1b, 0x84, 0x81, 0x36,
  0x62, 0x90, 0x00, 0x20, 0x08, 0x06, 0x06, 0x1e, 0x9c, 0xc1, 0x1b, 0xbc,
  0x41, 0x19, 0x6c, 0x23, 0x06, 0x09, 0x00, 0x82, 0x60, 0x60, 0xe4, 0x01,
  0x1a, 0xc0, 0x01, 0x1c, 0x7c, 0xdc, 0x88, 0x41, 0x02, 0x80, 0x20, 0x18,
  0x18, 0x7a, 0x90, 0x06, 0x71, 0x10, 0x07, 0x64, 0xd0, 0x8d, 0x18, 0x24,
  0x00, 0x08, 0x82, 0x81, 0xb1, 0x07, 0x6a, 0x20, 0x07, 0x72, 0x60, 0x06,
  0x9e, 0x1d, 0x8f, 0x7c, 0xec, 0x80, 0xe4, 0x63, 0x47, 0x24, 0x1f, 0x1b,
  0x26, 0xf8, 0xd8, 0x40, 0xc1, 0xc7, 0x86, 0x0a, 0x3e, 0x23, 0x06, 0x07,
  0x00, 0x82, 0x60, 0x30, 0xf5, 0x01, 0x19, 0x50, 0x61, 0x30, 0x9a, 0x10,
  0x00, 0xa3, 0x09, 0x42, 0x30, 0x9a, 0x30, 0x08, 0xa3, 0x09, 0xc4, 0x30,
  0x62, 0x70, 0x00, 0x20, 0x08, 0x06, 0x93, 0x28, 0xa4, 0x41, 0x56, 0x06,
  0xa3, 0x09, 0x01, 0x30, 0x9a, 0x20, 0x04, 0xa3, 0x09, 0x83, 0x30, 0x9a,
  0x40, 0x0c, 0x23, 0x06, 0x07, 0x00, 0x82, 0x60, 0x30, 0x9d, 0x82, 0x1b,
  0x78, 0x69, 0x30, 0x9a, 0x10, 0x00, 0xa3, 0x09, 0x42, 0x30, 0x9a, 0x30,
  0x08, 0xa3, 0x09, 0xc4, 0x30, 0x62, 0x70, 0x00, 0x20, 0x08, 0x06, 0x13,
  0x2b, 0xcc, 0xc1, 0x18, 0xc8, 0xc1, 0x68, 0x42, 0x00, 0x8c, 0x26, 0x08,
  0xc1, 0x68, 0xc2, 0x20, 0x8c, 0x26, 0x10, 0x83, 0x4d, 0x9e, 0x7c, 0x46,
  0x0c, 0x10, 0x00, 0x04, 0xc1, 0xa0, 0x8a, 0x05, 0x3e, 0xf0, 0xa6, 0x60,
  0xc4, 0x00, 0x01, 0x40, 0x10, 0x0c, 0x2a, 0x59, 0xe8, 0x03, 0x6f, 0x0a,
  0x46, 0x0c, 0x10, 0x00, 0x04, 0xc1, 0xa0, 0x9a, 0x05, 0x3f, 0xf0, 0xa6,
  0xc0, 0x24, 0x31, 0x90, 0xcf, 0x88, 0x01, 0x02, 0x80, 0x20, 0x18, 0x54,
  0xb5, 0x00, 0x0a, 0x62, 0x20, 0x05, 0x23, 0x06, 0x08, 0x00, 0x82, 0x60,
  0x50, 0xd9, 0x42, 0x28, 0x88, 0x81, 0x14, 0x8c, 0x18, 0x20, 0x00, 0x08,
  0x82, 0x41, 0x75, 0x0b, 0xa2, 0x20, 0x06, 0x52, 0x60, 0x91, 0x19, 0xc8,
  0x67, 0xc4, 0x00, 0x01, 0x40, 0x10, 0x0c, 0xaa, 0x5c, 0x20, 0x05, 0x33,
  0x88, 0x82, 0x11, 0x03, 0x04, 0x00, 0x41, 0x30, 0xa8, 0x74, 0xa1, 0x14,
  0xcc, 0x20, 0x0a, 0x46, 0x0c, 0x10, 0x00, 0x04, 0xc1, 0xa0, 0xda, 0x05,
  0x53, 0x30, 0x83, 0x28, 0x30, 0x48, 0x0d, 0xe4, 0x33, 0x62, 0x80, 0x00,
  0x20, 0x08, 0x06, 0x55, 0x2f, 0xa0, 0x82, 0x1a, 0x40, 0xc1, 0x88, 0x01,
  0x02, 0x80, 0x20, 0x18, 0x54, 0xbe, 0x90, 0x0a, 0x6a, 0x00, 0x05, 0x23,
  0x06, 0x08, 0x00, 0x82, 0x60, 0x50, 0xfd, 0x82, 0x2a, 0xa8, 0x01, 0x14,
  0x8c, 0x18, 0x1c, 0x00, 0x08, 0x82, 0xc1, 0x14, 0x0e, 0xa8, 0x80, 0x07,
  0xb8, 0x30, 0x9a, 0x10, 0x00, 0xa3, 0x09, 0x42, 0x30, 0x9a, 0x30, 0x08,
  0xa3, 0x09, 0xc4, 0x30, 0x62, 0x70, 0x00, 0x20, 0x08, 0x06, 0x93, 0x39,
  0xb4, 0x42, 0x1f, 0x9c, 0xc2, 0x68, 0x42, 0x00, 0x8c, 0x26, 0x08, 0xc1,
  0x68, 0xc2, 0x20, 0x8c, 0x26, 0x10, 0xc3, 0x88, 0xc1, 0x01, 0x80, 0x20,
  0x18, 0x4c, 0xeb, 0x20, 0x0b, 0xa2, 0xb0, 0x0a, 0xa3, 0x09, 0x01, 0x30,
  0x9a, 0x20, 0x04, 0xa3, 0x09, 0x83, 0x30, 0x9a, 0x40, 0x0c, 0xe6, 0xf4,
  0x81, 0x7c, 0x46, 0x0c, 0x10, 0x00, 0x04, 0xc1, 0xa0, 0x82, 0x87, 0x5d,
  0xe8, 0x03, 0x27, 0x18, 0x31, 0x40, 0x00, 0x10, 0x04, 0x83, 0x2a, 0x1e,
  0x78, 0xa1, 0x0f, 0x9c, 0x60, 0xc4, 0x00, 0x01, 0x40, 0x10, 0x0c, 0x2a,
  0x79, 0xe8, 0x85, 0x3e, 0x70, 0x02, 0x6b, 0x42, 0x41, 0x3e, 0x23, 0x06,
  0x08, 0x00, 0x82, 0x60, 0x50, 0xd1, 0xc3, 0x2f, 0x84, 0x42, 0x13, 0x8c,
  0x18, 0x20, 0x00, 0x08, 0x82, 0x41, 0x55, 0x0f, 0xe0, 0x10, 0x0a, 0x4d,
  0x30, 0x62, 0x80, 0x00, 0x20, 0x08, 0x06, 0x95, 0x3d, 0x84, 0x43, 0x28,
  0x34, 0x81, 0x31, 0xa5, 0x20, 0x9f, 0x11, 0x03, 0x04, 0x00, 0x41, 0x30,
  0xa8, 0xf0, 0x61, 0x1c, 0x4a, 0x81, 0x09, 0x46, 0x0c, 0x10, 0x00, 0x04,
  0xc1, 0xa0, 0xca, 0x07, 0x72, 0x28, 0x05, 0x26, 0x18, 0x31, 0x40, 0x00,
  0x10, 0x04, 0x83, 0x4a, 0x1f, 0xca, 0xa1, 0x14, 0x98, 0x60, 0xc4, 0xe0,
  0x00, 0x40, 0x10, 0x0c, 0x26, 0x7e, 0x18, 0x87, 0x59, 0xd8, 0x85, 0xd1,
  0x84, 0x00, 0x18, 0x4d, 0x10, 0x82, 0xd1, 0x84, 0x41, 0x18, 0x31, 0x38,
  0x00, 0x10, 0x04, 0x83, 0x09, 0x24, 0xce, 0xe1, 0x16, 0x7c, 0x61, 0x34,
  0x21, 0x00, 0x46, 0x13, 0x84, 0x60, 0x34, 0x61, 0x10, 0x46, 0x0c, 0x0e,
  0x00, 0x04, 0xc1, 0x60, 0x22, 0x89, 0x75, 0xd8, 0x85, 0x70, 0x18, 0x4d,
  0x08, 0x80, 0xd1, 0x04, 0x21, 0x18, 0x4d, 0x18, 0x04, 0x5b, 0x5c, 0x41,
  0x3e, 0x23, 0x06, 0x08, 0x00, 0x82, 0x60, 0x50, 0xa1, 0xc4, 0x3c, 0xb8,
  0xc2, 0x12, 0x8c, 0x18, 0x20, 0x00, 0x08, 0x82, 0x41, 0x95, 0x12, 0xf4,
  0xe0, 0x0a, 0x4b, 0x60, 0x4a, 0x2c, 0xc8, 0x67, 0xc4, 0x00, 0x01, 0x40,
  0x10, 0x0c, 0xaa, 0x95, 0xb0, 0x87, 0x58, 0x50, 0x82, 0x11, 0x03, 0x04,
  0x00, 0x41, 0x30, 0xa8, 0x58, 0xe2, 0x1e, 0x62, 0x41, 0x09, 0x2c, 0xa1,
  0x05, 0xf9, 0x8c, 0x18, 0x20, 0x00, 0x08, 0x82, 0x41, 0xe5, 0x12, 0xf9,
  0x40, 0x0b, 0x49, 0x30, 0x62, 0x80, 0x00, 0x20, 0x08, 0x06, 0xd5, 0x4b,
  0xe8, 0x03, 0x2d, 0x24, 0xc1, 0x88, 0xc1, 0x02, 0x80, 0x20, 0x18, 0x28,
  0x34, 0xd1, 0x0e, 0x07, 0x11, 0x1c, 0x44, 0x30, 0x62, 0x60, 0x00, 0x20,
  0x08, 0x06, 0x0c, 0x4d, 0xe0, 0x43, 0x60, 0x41, 0x22, 0x1f, 0x13, 0x0e,
  0xf9, 0xd8, 0x50, 0xc8, 0x67, 0xc4, 0xe0, 0x00, 0x40, 0x10, 0x0c, 0x26,
  0x9b, 0xe8, 0x87, 0x76, 0x88, 0x87, 0xd1, 0x84, 0x00, 0x18, 0x4d, 0x10,
  0x82, 0xd1, 0x84, 0x41, 0x18, 0x4d, 0x20, 0x86, 0x11, 0x83, 0x06, 0x00,
  0x41, 0x30, 0x70, 0x78, 0xa2, 0x1e, 0xd0, 0xe1, 0x1c, 0xcc, 0xa1, 0x1c,
  0x88, 0x41, 0x08, 0x46, 0x0c, 0x0c, 0x00, 0x04, 0xc1, 0x80, 0xf1, 0x09,
  0x99, 0x08, 0x46, 0x0c, 0x0e, 0x00, 0x04, 0xc1, 0x60, 0xea, 0x09, 0x92,
  0xa0, 0x87, 0x9c, 0x18, 0x4d, 0x08, 0x06, 0x0b, 0xe4, 0x41, 0x3e, 0x23,
  0x06, 0x09, 0x00, 0x82, 0x60, 0x80, 0x90, 0x45, 0x4a, 0xf0, 0x04, 0x4f,
  0xc8, 0x84, 0x3c, 0x8c, 0x18, 0x24, 0x00, 0x08, 0x82, 0x01, 0x42, 0x16,
  0x29, 0xc1, 0x13, 0x3c, 0xb1, 0x12, 0xf1, 0x30, 0x62, 0x90, 0x00, 0x20,
  0x08, 0x06, 0x08, 0x59, 0xa4, 0x44, 0x4f, 0xf0, 0x84, 0x4c, 0xb4, 0xc1,
  0x88, 0x41, 0x02, 0x80, 0x20, 0x18, 0x20, 0x64, 0x91, 0x12, 0x3d, 0xc1,
  0x13, 0x2b, 0x91, 0x06, 0x23, 0x06, 0x09, 0x00, 0x82, 0x60, 0x80, 0x90,
  0x45, 0x4a, 0xf4, 0x04, 0x4f, 0xbc, 0x44, 0x19, 0x8c, 0x18, 0x24, 0x00,
  0x08, 0x82, 0x01, 0x42, 0x16, 0x29, 0xd1, 0x13, 0x3c, 0x01, 0x13, 0xc4,
  0x88, 0x41, 0x02, 0x80, 0x20, 0x18, 0x20, 0x64, 0x91, 0x12, 0x35, 0xc1,
  0x13, 0x32, 0xd1, 0x8c, 0x18, 0x24, 0x00, 0x08, 0x82, 0x01, 0x42, 0x16,
  0x29, 0x51, 0x13, 0x3c, 0xb1, 0x12, 0xcc, 0x88, 0x41, 0x02, 0x80, 0x20,
  0x18, 0x20, 0x64, 0x91, 0x12, 0x35, 0xc1, 0x13, 0x2f, 0xb1, 0x8c, 0x18,
  0x24, 0x00, 0x08, 0x82, 0x01, 0x42, 0x16, 0x29, 0x81, 0x13, 0x3c, 0x21,
  0x13, 0xf6, 0x30, 0x62, 0x90, 0x00, 0x20, 0x08, 0x06, 0x08, 0x59, 0xa4,
  0x04, 0x4e, 0xf0, 0xc4, 0x4a, 0xd4, 0xc3, 0x88, 0x41, 0x02, 0x80, 0x20,
  0x18, 0x20, 0x64, 0x91, 0x12, 0x38, 0xc1, 0x13, 0x2f, 0x41, 0x0f, 0x23,
  0x06, 0x09, 0x00, 0x82, 0x60, 0x80, 0x90, 0x45, 0x4a, 0xe0, 0x04, 0x4f,
  0xc0, 0x44, 0x30, 0x62, 0x90, 0x00, 0x20, 0x08, 0x06, 0x08, 0x59, 0xa4,
  0x04, 0x4d, 0xf0, 0x84, 0x4c, 0xb0, 0xc2, 0x88, 0x41, 0x02, 0x80, 0x20,
  0x18, 0x20, 0x64, 0x91, 0x12, 0x34, 0xc1, 0x13, 0x2b, 0x81, 0x0a, 0x23,
  0x06, 0x09, 0x00, 0x82, 0x60, 0x80, 0x90, 0x45, 0x4a, 0xd0, 0x04, 0x4f,
  0xbc, 0x04, 0x29, 0x8c, 0x18, 0x24, 0x00, 0x08, 0x82, 0x01, 0x42, 0x16,
  0x29, 0x41, 0x13, 0x3c, 0x01, 0x13, 0xa0, 0x80, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x59, 0xfe, 0x79, 0x96, 0xbb, 0x71, 0xde, 0xa2,
  0xa5, 0x1c, 0x13, 0x6b, 0x37, 0xe2, 0xa4, 0x54, 0x17, 0x00, 0x01, 0x00,
  0x20, 0xd4, 0x16, 0x00, 0x78, 0x01, 0xed, 0x98, 0x3d, 0x68, 0x14, 0x41,
  0x14, 0xc7, 0xdf, 0xbc, 0x99, 0x1b, 0xf7, 0x26, 0x2f, 0xb3, 0x9b, 0xcb,
  0xe6, 0x74, 0xe3, 0xde, 0x9d, 0x5f, 0x58, 0x09, 0x46, 0x10, 0x23, 0x88,
  0x89, 0x85, 0x85, 0x85, 0x90, 0x46, 0x04, 0x41, 0xc1, 0x42, 0xb0, 0xb0,
  0x49, 0x2a, 0xb1, 0x89, 0xa7, 0x8d, 0x41, 0xa2, 0xa5, 0xf8, 0x51, 0x29,
  0xda, 0x59, 0xd8, 0x0b, 0x17, 0x4d, 0x1a, 0x1b, 0x51, 0x82, 0xb5, 0x85,
  0x9d, 0xad, 0x8d, 0xa9, 0x8c, 0xef, 0xed, 0xee, 0x45, 0x73, 0x5c, 0xad,
  0x28, 0xf3, 0x3b, 0xde, 0xff, 0xcd, 0xbe, 0x9b, 0xaf, 0x9d, 0xd9, 0xea,
  0xff, 0xa9, 0x09, 0x05, 0x57, 0x4f, 0x9c, 0x5f, 0x90, 0x7c, 0xe6, 0xa9,
  0xbb, 0x3b, 0x45, 0x00, 0x35, 0x79, 0x60, 0x8c, 0x08, 0x33, 0x9f, 0x8a,
  0x72, 0xae, 0xfa, 0x3b, 0x91, 0x0a, 0xf9, 0x6b, 0x1f, 0x87, 0x70, 0x4a,
  0xa4, 0x42, 0x89, 0x40, 0x77, 0x86, 0x63, 0x56, 0x5a, 0x83, 0xd4, 0x39,
  0xa6, 0x39, 0x8e, 0x71, 0x08, 0x65, 0xff, 0x92, 0xfe, 0xfa, 0x83, 0x0c,
  0xab, 0xcb, 0x1e, 0x65, 0x2c, 0x56, 0xf9, 0x77, 0xf6, 0x1f, 0xba, 0x7e,
  0x92, 0xd3, 0x69, 0x0e, 0x98, 0xb9, 0xf7, 0x8a, 0xf7, 0x52, 0x64, 0xa9,
  0xc1, 0xf7, 0xa3, 0x38, 0x74, 0x5f, 0xff, 0x32, 0xfd, 0x7b, 0x12, 0x2e,
  0x0f, 0x1e, 0x06, 0x23, 0x67, 0x24, 0x7c, 0x9c, 0x10, 0x05, 0xb0, 0x22,
  0xcc, 0x46, 0xf5, 0xdc, 0xbf, 0xcb, 0x37, 0x1c, 0x43, 0x86, 0x17, 0x6c,
  0x32, 0x92, 0x87, 0x21, 0x77, 0x61, 0x61, 0x6e, 0xca, 0xaa, 0x3b, 0x7b,
  0x2c, 0xae, 0x25, 0x56, 0xc7, 0x47, 0xb8, 0xf4, 0x47, 0x29, 0xf7, 0x50,
  0x62, 0x55, 0xf9, 0x16, 0x16, 0xcb, 0x37, 0xb7, 0x5a, 0x4b, 0xfa, 0xef,
  0x91, 0x33, 0xe8, 0x7f, 0x0a, 0x72, 0x16, 0xf2, 0xdc, 0x27, 0x11, 0x09,
  0x04, 0x02, 0x81, 0x40, 0x20, 0x10, 0x08, 0x04, 0x02, 0x81, 0x40, 0x20,
  0x10, 0xf8, 0xdb, 0xec, 0xed, 0xf6, 0x76, 0x6c, 0x66, 0x4b, 0xe2, 0x56,
  0x58, 0xfd, 0xb0, 0xf7, 0x56, 0x3f, 0xee, 0x6d, 0xea, 0x27, 0xbd, 0x97,
  0x73, 0x08, 0x67, 0x33, 0x58, 0xbb, 0x98, 0xbd, 0x5b, 0x9d, 0x8f, 0x97,
  0x57, 0x00, 0x6e, 0xaf, 0x47, 0x5f, 0xdf, 0xeb, 0x2b, 0xd9, 0xfd, 0x55,
  0xc5, 0xed, 0x3a, 0xb7, 0x6f, 0xc2, 0xf2, 0x8a, 0x81, 0xb6, 0x07, 0xc8,
  0x7d, 0x04, 0xe0, 0x91, 0xeb, 0x8e, 0xeb, 0x35, 0x6c, 0x13, 0x45, 0xd6,
  0x27, 0x51, 0xe2, 0xd3, 0xa8, 0xe1, 0x15, 0xe6, 0x54, 0x47, 0x20, 0x6b,
  0xda, 0x34, 0xea, 0x2c, 0x8d, 0xb9, 0x84, 0x26, 0x5c, 0x83, 0xd0, 0xe4,
  0xe4, 0x0c, 0x50, 0xdc, 0x31, 0xde, 0x93, 0xa5, 0x06, 0x25, 0xd4, 0x64,
  0xf5, 0x2d, 0x43, 0xa0, 0x0c, 0xc5, 0xde, 0xd2, 0xb8, 0x4f, 0x68, 0xa7,
  0x6f, 0x90, 0x7e, 0xa4, 0x56, 0x8f, 0x67, 0x76, 0x0d, 0x2f, 0x99, 0xc5,
  0x3c, 0x4a, 0x7d, 0xcb, 0xa5, 0xd4, 0xa6, 0x94, 0x64, 0x0f, 0x49, 0xd4,
  0xe4, 0x75, 0xd0, 0x63, 0x2b, 0xf7, 0xd8, 0x69, 0x7b, 0x54, 0xe0, 0x77,
  0x45, 0xc6, 0x8f, 0xb9, 0x26, 0xaf, 0x83, 0x94, 0x39, 0xc3, 0xb3, 0x36,
  0xf9, 0x87, 0x34, 0x49, 0x86, 0x3a, 0x3e, 0xa5, 0x0f, 0x11, 0x6c, 0xe8,
  0xa8, 0xee, 0x46, 0x9d, 0xf3, 0xe3, 0xbe, 0xc9, 0x6b, 0x20, 0xed, 0xf6,
  0xb2, 0xa6, 0xf7, 0x06, 0xba, 0xeb, 0x26, 0x4b, 0x4d, 0x8d, 0xb3, 0x6d,
  0xe5, 0xc6, 0x44, 0x76, 0xdd, 0x8c, 0x20, 0xe8, 0x83, 0xce, 0xc7, 0x7c,
  0x16, 0x5d, 0xb4, 0x8b, 0xdf, 0x90, 0x16, 0x63, 0x84, 0x0d, 0x1a, 0xd5,
  0xb6, 0xc3, 0x79, 0x44, 0xa1, 0x39, 0xcc, 0xd9, 0xc7, 0x60, 0x67, 0x39,
  0x27, 0x63, 0x8d, 0x1a, 0xc0, 0xad, 0x95, 0xc2, 0xee, 0x1b, 0x30, 0xf8,
  0x0a, 0x5f, 0x68, 0xa0, 0x36, 0x29, 0xa2, 0x0a, 0xcf, 0x6c, 0x4a, 0x44,
  0x98, 0xe4, 0x3e, 0x4a, 0x15, 0x8e, 0xd2, 0xaf, 0x1a, 0x07, 0xaa, 0xc2,
  0x9d, 0xdd, 0x56, 0xd3, 0x68, 0x65, 0xde, 0x2d, 0x5b, 0x58, 0xc6, 0x1a,
  0x8c, 0xb6, 0xd5, 0xc4, 0x99, 0xd3, 0xa6, 0x70, 0xec, 0xb6, 0x6a, 0x7d,
  0x96, 0x2a, 0xbf, 0xf9, 0x00, 0x87, 0xf8, 0xc5, 0x0a, 0x4a, 0xff, 0x4e,
  0xe6, 0x36, 0x95, 0xcb, 0x77, 0xe1, 0xc7, 0x8d, 0x07, 0xaf, 0x17, 0x3e,
  0x3f, 0x7b, 0x91, 0x8f, 0x5f, 0x9b, 0xfe, 0xf2, 0xfc, 0xdc, 0x4f, 0x9e,
  0x48, 0x5e, 0x94, 0x00, 0x17, 0x00, 0x01, 0x00, 0x10, 0x58, 0x17, 0x00,
  0x78, 0x01, 0xed, 0x98, 0xbf, 0x6b, 0x54, 0x41, 0x10, 0xc7, 0x67, 0xf7,
  0xed, 0xdb, 0xdb, 0x6c, 0x26, 0x9b, 0x97, 0x33, 0xb9, 0x5c, 0x2e, 0xa7,
  0x26, 0x7a, 0xf9, 0xe1, 0x0f, 0xe4, 0x84, 0x88, 0x29, 0xfc, 0xb1, 0x45,
  0x90, 0x20, 0x81, 0x34, 0x16, 0x0a, 0xda, 0xd9, 0xd9, 0xc4, 0x52, 0x11,
  0xbd, 0x48, 0x48, 0x44, 0x02, 0x56, 0xda, 0x2b, 0xda, 0xe9, 0x5f, 0xa0,
  0x5c, 0x62, 0x52, 0xdb, 0x5c, 0x65, 0xa5, 0x22, 0x36, 0xf6, 0xd6, 0xc6,
  0x99, 0xbb, 0xbd, 0xfc, 0x38, 0x02, 0x76, 0x8a, 0xb2, 0x1f, 0x98, 0x99,
  0xb7, 0xdf, 0xdd, 0x1d, 0xe6, 0xed, 0x6e, 0x35, 0x57, 0x07, 0xa1, 0xc9,
  0xb7, 0xa5, 0xf2, 0x65, 0x8e, 0xb3, 0xcf, 0xed, 0xe3, 0x2a, 0x02, 0xa4,
  0x3c, 0x20, 0x24, 0x3b, 0x62, 0xa1, 0x9f, 0x3d, 0xc0, 0x8f, 0x02, 0x7b,
  0x00, 0xcb, 0x2e, 0xc0, 0x53, 0xa7, 0xc8, 0x18, 0xcf, 0x2e, 0x20, 0xd8,
  0x41, 0xed, 0x02, 0xd9, 0x45, 0xfe, 0xea, 0x84, 0x73, 0x9c, 0x21, 0x9b,
  0x22, 0x63, 0x5a, 0xeb, 0x5b, 0x68, 0xb2, 0xbe, 0x60, 0xbf, 0x43, 0x91,
  0xf1, 0xde, 0x84, 0xac, 0x93, 0xbb, 0x83, 0x4f, 0xce, 0x53, 0x98, 0x21,
  0x83, 0xa7, 0x9f, 0x3f, 0x52, 0x2d, 0x3b, 0x5c, 0x7a, 0x23, 0xf6, 0xad,
  0xeb, 0x5f, 0xa6, 0x7d, 0x4f, 0xcc, 0xbb, 0xdd, 0x07, 0x1a, 0xe0, 0xb3,
  0x62, 0x4e, 0x86, 0x7b, 0xe4, 0x73, 0x66, 0xee, 0x85, 0x71, 0xfb, 0x2e,
  0xd7, 0xc9, 0xf6, 0xd9, 0xde, 0x64, 0x8b, 0xe0, 0xb8, 0x1f, 0x9c, 0x5f,
  0xc3, 0x7c, 0x55, 0x8b, 0x95, 0x11, 0x2d, 0x37, 0x33, 0x9d, 0xf4, 0x9e,
  0x26, 0xe9, 0x8f, 0xc2, 0x6f, 0xb7, 0xfd, 0x5f, 0x5a, 0xb4, 0xfe, 0x42,
  0xcb, 0xd6, 0x4b, 0xd6, 0x49, 0x78, 0x25, 0xaa, 0x7d, 0x12, 0xff, 0x27,
  0x7c, 0x06, 0xbb, 0x9e, 0xc2, 0xf6, 0xbd, 0x33, 0xac, 0xef, 0x9e, 0x8b,
  0x44, 0x22, 0x91, 0x48, 0x24, 0x12, 0x89, 0x44, 0x22, 0x91, 0x48, 0x24,
  0x12, 0xf9, 0x2b, 0x8c, 0xd6, 0xea, 0xb9, 0xad, 0xf4, 0x11, 0x40, 0x06,
  0x3a, 0x59, 0xaa, 0xbf, 0x4f, 0x96, 0xeb, 0x5b, 0xc9, 0x4a, 0xfd, 0xf5,
  0xbc, 0x84, 0x9b, 0xe9, 0xf2, 0xc6, 0xf5, 0xb4, 0xb1, 0xb1, 0xd0, 0xbb,
  0xba, 0x06, 0xf0, 0xb0, 0x61, 0xbe, 0x7f, 0x48, 0x6a, 0xc9, 0x62, 0xdd,
  0x88, 0xda, 0xfa, 0x03, 0x58, 0x5d, 0x43, 0xa3, 0x5c, 0x8f, 0x55, 0xe8,
  0x50, 0x61, 0xaf, 0x53, 0x38, 0x97, 0xea, 0xcd, 0x8a, 0xd1, 0x6e, 0xcc,
  0x6a, 0x1c, 0x47, 0x8d, 0x13, 0x4e, 0x23, 0xaf, 0x2b, 0x9a, 0xcc, 0x0d,
  0xd9, 0x0c, 0x4b, 0x98, 0xe1, 0xb0, 0xcb, 0x30, 0x49, 0xd5, 0xc6, 0x74,
  0x8a, 0x9b, 0x93, 0xa6, 0xe0, 0x04, 0xe5, 0xed, 0xa2, 0xbc, 0xc7, 0x6c,
  0x01, 0x8f, 0x63, 0xa1, 0xb9, 0xbe, 0x6c, 0xf2, 0xee, 0xa0, 0xcd, 0xe3,
  0x21, 0xcc, 0xe3, 0x61, 0x97, 0xc7, 0x13, 0xae, 0x80, 0xde, 0x2f, 0x7c,
  0x01, 0xe3, 0xed, 0x0c, 0xc7, 0xc4, 0xdb, 0x59, 0x8e, 0xdd, 0xde, 0xce,
  0x71, 0x94, 0xde, 0x02, 0x47, 0xf4, 0x56, 0x71, 0xec, 0xf1, 0x36, 0xe3,
  0xd8, 0xe5, 0xed, 0x08, 0xd5, 0x38, 0x4a, 0x35, 0x1e, 0xa1, 0x1a, 0x8f,
  0x52, 0x8d, 0xfd, 0xac, 0xd3, 0xfa, 0x0a, 0xe9, 0x63, 0xa4, 0x8f, 0x93,
  0x3e, 0x41, 0xfa, 0xb0, 0xd3, 0xae, 0x18, 0xe6, 0x86, 0xac, 0x72, 0x19,
  0x58, 0x57, 0x34, 0x8a, 0x6a, 0xd6, 0x28, 0x8d, 0x6e, 0xc8, 0x9c, 0x04,
  0x04, 0xed, 0x14, 0xd5, 0x6b, 0xa9, 0xde, 0x3e, 0x69, 0xb1, 0x47, 0x6a,
  0xec, 0x07, 0x70, 0x79, 0x63, 0x71, 0x80, 0xa6, 0x9d, 0xd1, 0x98, 0x76,
  0xa3, 0x4b, 0x72, 0x88, 0x05, 0x03, 0x28, 0xa0, 0xd6, 0x00, 0x51, 0x52,
  0xe2, 0x86, 0xbc, 0x5f, 0x0e, 0xb9, 0xcd, 0xb8, 0x72, 0x22, 0xa7, 0xdd,
  0x08, 0x8f, 0xe9, 0x3f, 0x44, 0xb7, 0x76, 0x42, 0x80, 0xab, 0x84, 0xf1,
  0x24, 0x47, 0xf0, 0xb6, 0xca, 0x31, 0xf3, 0x76, 0x8a, 0x63, 0x9f, 0xb7,
  0xd3, 0x1c, 0xf3, 0xde, 0x9e, 0xe3, 0x48, 0x79, 0x00, 0x16, 0xd7, 0x06,
  0xf8, 0xfe, 0x3a, 0x9a, 0x87, 0x43, 0xec, 0x3a, 0xb4, 0x22, 0xbb, 0x0e,
  0x2d, 0x63, 0xd7, 0xa1, 0x95, 0xd8, 0x89, 0x66, 0xdf, 0xae, 0xca, 0x8e,
  0x29, 0xd1, 0x1a, 0x21, 0x9a, 0x5d, 0xad, 0x1d, 0x8d, 0x4c, 0x0a, 0xee,
  0x7c, 0xed, 0xd5, 0x12, 0xa9, 0x39, 0xef, 0x76, 0x6b, 0x9a, 0xf7, 0x2a,
  0x69, 0xf6, 0x68, 0xdc, 0x1d, 0x4c, 0x54, 0xb3, 0x6b, 0xb8, 0xad, 0xb5,
  0xc1, 0xd0, 0x23, 0xaf, 0x90, 0x75, 0x91, 0x89, 0xd0, 0x69, 0xe6, 0xdc,
  0x2a, 0x74, 0x1a, 0xaf, 0xfd, 0xbc, 0xf3, 0xec, 0xed, 0xed, 0x4f, 0x2f,
  0x5e, 0x95, 0x0f, 0xdc, 0x3a, 0xfb, 0xf5, 0xe5, 0x95, 0x5f, 0xf0, 0x2b,
  0x77, 0xef, 0x00, 0x00, 0x17, 0x00, 0x01, 0x00, 0x00, 0xf0, 0x16, 0x00,
  0x78, 0x01, 0xed, 0x98, 0xbf, 0x6b, 0x14, 0x41, 0x14, 0xc7, 0xdf, 0xec,
  0xcc, 0xcd, 0xed, 0x2e, 0x73, 0x73, 0x7b, 0xe7, 0xde, 0xa1, 0x87, 0x8b,
  0x3f, 0x90, 0x98, 0x42, 0xc8, 0x09, 0x6a, 0xd2, 0x18, 0x2d, 0x2c, 0x2c,
  0x84, 0xa4, 0xb0, 0x11, 0xb4, 0xb3, 0x13, 0x24, 0x96, 0x42, 0xd0, 0x8b,
  0x8d, 0x41, 0xae, 0xb6, 0x92, 0xf8, 0x83, 0xb3, 0x4b, 0x61, 0x67, 0x21,
  0x5c, 0xcc, 0x1d, 0x88, 0x16, 0x36, 0x27, 0x48, 0x6c, 0x2c, 0xec, 0x04,
  0x11, 0xff, 0x80, 0xe0, 0xf9, 0xbe, 0x7b, 0x7b, 0x71, 0x73, 0xa4, 0x56,
  0x08, 0xf3, 0x81, 0xf7, 0xde, 0xbe, 0xef, 0xcc, 0xbc, 0xdd, 0x99, 0xd9,
  0xea, 0xfd, 0xaa, 0x53, 0xca, 0xcf, 0x67, 0xe2, 0x1d, 0xe2, 0xe5, 0xe7,
  0xe1, 0xa3, 0xa6, 0x21, 0x2a, 0x20, 0xc9, 0xb1, 0x14, 0xc3, 0x13, 0xb5,
  0xb3, 0xf9, 0x21, 0x5c, 0x06, 0xa4, 0xe3, 0x6c, 0xe0, 0x22, 0x5c, 0x86,
  0x80, 0xa3, 0xd6, 0x3c, 0xdb, 0x05, 0x3c, 0x4d, 0x82, 0x1a, 0xe7, 0xd8,
  0xce, 0xb2, 0x81, 0xd1, 0xfc, 0x11, 0x93, 0xef, 0x9f, 0xcc, 0xf3, 0x48,
  0x36, 0xac, 0x45, 0x9c, 0xe4, 0xc3, 0xda, 0xca, 0x79, 0x0e, 0x97, 0xd8,
  0xe8, 0xf5, 0xa7, 0xf5, 0xf9, 0x8e, 0xbf, 0x85, 0x3c, 0xe5, 0x76, 0x6f,
  0x9b, 0xbf, 0x6d, 0x7f, 0x31, 0xbe, 0x27, 0xb0, 0x9c, 0x3f, 0xd0, 0x0c,
  0x0f, 0x8e, 0xf9, 0x51, 0x83, 0x27, 0xd2, 0x70, 0x4c, 0x9c, 0xdd, 0xeb,
  0xf8, 0x2e, 0xdf, 0xb2, 0xed, 0xb1, 0x3c, 0x65, 0xc8, 0x20, 0xee, 0x85,
  0x62, 0xd3, 0xb4, 0xd0, 0xd4, 0xe2, 0xe1, 0x51, 0xed, 0xf5, 0x23, 0x2d,
  0xcb, 0xa7, 0x59, 0xfa, 0xa7, 0xe0, 0x5f, 0x19, 0xef, 0x4b, 0x8b, 0xd1,
  0x2e, 0xb4, 0x37, 0xda, 0xb9, 0x96, 0xd9, 0x5f, 0xa2, 0xf0, 0xa5, 0xfb,
  0x17, 0x9c, 0x41, 0xee, 0x57, 0x48, 0xef, 0x05, 0xe0, 0x34, 0xc6, 0xfa,
  0x22, 0x9c, 0xc3, 0xe1, 0x70, 0x38, 0x1c, 0x0e, 0x87, 0xc3, 0xe1, 0x70,
  0x38, 0x1c, 0x0e, 0xc7, 0xff, 0xe2, 0x58, 0xab, 0x5b, 0x1c, 0x26, 0xab,
  0x44, 0x11, 0x69, 0xf9, 0xa4, 0xbb, 0x29, 0xd7, 0xba, 0x43, 0xf9, 0xb4,
  0xbb, 0xbe, 0xe0, 0xd1, 0x95, 0x84, 0xfa, 0xd7, 0x93, 0xf7, 0xbd, 0x9b,
  0x49, 0xbb, 0xb7, 0x29, 0xb7, 0xbb, 0x4b, 0xd4, 0xde, 0x30, 0x3e, 0xd9,
  0x52, 0x48, 0xc6, 0x1a, 0x32, 0x1e, 0xb5, 0x06, 0xc5, 0x23, 0xa4, 0x22,
  0xd6, 0x2a, 0xac, 0x55, 0x59, 0x93, 0xd0, 0x4e, 0x92, 0x8a, 0x59, 0xab,
  0xb1, 0x56, 0x67, 0xcd, 0x42, 0x9b, 0x21, 0x75, 0x90, 0xb5, 0x43, 0xac,
  0x35, 0x58, 0x2b, 0x43, 0x9b, 0x25, 0x35, 0x97, 0xe8, 0xfe, 0x7d, 0xae,
  0x9b, 0xaf, 0x11, 0xfb, 0x75, 0x1b, 0x63, 0x9c, 0xeb, 0x60, 0x4d, 0x2d,
  0xac, 0x1b, 0xac, 0x2b, 0x85, 0xa1, 0x35, 0x7e, 0x38, 0x5a, 0x6f, 0x7d,
  0x5b, 0xe7, 0xea, 0x9a, 0xe7, 0xe9, 0x24, 0x52, 0x0a, 0xf3, 0xb9, 0x1e,
  0xd1, 0x83, 0x81, 0xff, 0xfd, 0xa3, 0xac, 0x21, 0x9f, 0x39, 0xa5, 0x0a,
  0xbe, 0x1e, 0x14, 0x4a, 0xe8, 0x49, 0x59, 0xab, 0x79, 0x2c, 0xe0, 0x31,
  0x45, 0x91, 0xf5, 0x59, 0x10, 0xbc, 0x8b, 0x82, 0x89, 0x4c, 0xc0, 0xf5,
  0x30, 0x16, 0xf2, 0x98, 0xe6, 0xdc, 0x63, 0x3d, 0x64, 0xcd, 0xaf, 0x18,
  0x5b, 0x2c, 0x1b, 0x43, 0xc2, 0x18, 0x99, 0x50, 0x4f, 0xdf, 0xa8, 0xde,
  0x5b, 0x24, 0xf1, 0x4a, 0xd0, 0xe7, 0x81, 0x90, 0x44, 0x41, 0xd9, 0xd8,
  0xa0, 0x62, 0x6d, 0x20, 0xc8, 0x62, 0x0f, 0x34, 0x35, 0x65, 0xfd, 0x60,
  0xee, 0x8b, 0xf0, 0x2c, 0x91, 0xe4, 0x68, 0x14, 0x4d, 0xd3, 0x99, 0x2d,
  0xf4, 0x82, 0x3c, 0xc5, 0x79, 0xac, 0x49, 0x17, 0x39, 0x46, 0x55, 0x56,
  0x56, 0x36, 0xd2, 0xd6, 0x20, 0x06, 0x73, 0x44, 0x70, 0x13, 0x5a, 0x03,
  0x0e, 0x2f, 0x24, 0x6a, 0xc2, 0x81, 0x06, 0xcf, 0x11, 0x22, 0xed, 0x36,
  0xfd, 0xd5, 0xd8, 0x3c, 0x81, 0x8e, 0xd4, 0x6e, 0x4d, 0x7a, 0x1a, 0x75,
  0x77, 0x5a, 0xc6, 0x58, 0xab, 0x3c, 0x7f, 0x97, 0x86, 0x13, 0x92, 0x2a,
  0xed, 0xe6, 0xed, 0x68, 0x63, 0x3a, 0x59, 0xcf, 0xf2, 0x04, 0x5b, 0xc0,
  0x26, 0xb2, 0x0e, 0x30, 0x6a, 0xab, 0xac, 0x03, 0x78, 0xed, 0xf7, 0xdd,
  0xc7, 0x6f, 0xee, 0x7c, 0x7d, 0xf1, 0xf2, 0xf0, 0x81, 0x5b, 0xb3, 0xdf,
  0x3a, 0x57, 0xff, 0x00, 0x14, 0x35, 0x69, 0x66, 0x02, 0x00, 0x00, 0x00,
  0x05, 0x00, 0x00, 0x00, 0x03, 0x00, 0x03, 0x01, 0x08, 0x02, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x04, 0x03, 0x08, 0x02, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x01, 0x05, 0x05,
  0x04, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x02, 0x06, 0x06, 0x00, 0x04, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x02, 0x08, 0x08, 0x00, 0x04, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0xb8, 0x00, 0x00, 0x78, 0x01, 0x35, 0x8c, 0xb1, 0x0d, 0x80, 0x40,
  0x0c, 0xc4, 0x0e, 0x10, 0x3b, 0xd0, 0xb0, 0xd5, 0x97, 0x0c, 0x41, 0xc9,
  0x10, 0x94, 0x0c, 0x41, 0x49, 0xc9, 0x76, 0x60, 0x0b, 0x62, 0xc9, 0xca,
  0xe5, 0x22, 0xa5, 0x4b, 0x32, 0xe2, 0x84, 0x72, 0xe3, 0x8c, 0x62, 0xdf,
  0x50, 0xcc, 0x2b, 0x8a, 0x79, 0xc7, 0x1e, 0xe5, 0x44, 0xb3, 0xbf, 0xae,
  0x7f, 0x2e, 0x28, 0xe6, 0xe2, 0x01, 0xf7, 0x0d, 0xc5, 0xac, 0x52, 0xb7,
  0x03, 0x07, 0xac, 0x5e, 0xbc, 0x39, 0xe5, 0xeb, 0x93, 0x17, 0x7c, 0x02,
  0x11, 0x17, 0x00, 0x00, 0x78, 0x62, 0x6f, 0x70, 0x01, 0x00, 0x00, 0x00,
  0x7e, 0x02, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00
};
