#if 0
;
; Input signature:
;
; Name                 Index   Mask Register SysValue  Format   Used
; -------------------- ----- ------ -------- -------- ------- ------
; SV_Position              0   xyzw        0     NONE   float   xyzw
; NORMAL                   0   xyz         1     NONE   float   xyz 
; TEXCOORD                 0   xy          2     NONE   float   xy  
;
;
; Output signature:
;
; Name                 Index   Mask Register SysValue  Format   Used
; -------------------- ----- ------ -------- -------- ------- ------
; COLOR                    0   xyzw        0     NONE   float   xyzw
; COLOR                    1   xyzw        1     NONE   float   xyzw
; TEXCOORD                 0   xy          2     NONE   float   xy  
; TEXCOORD                 1   xyz         3     NONE   float   xyz 
; SV_Position              0   xyzw        4      POS   float   xyzw
;
; shader debug name: C:\Users\marcu\Downloads\DirectXTK12-main\DirectXTK12-main\Src/Shaders/Compiled\XboxGamingXboxOneEnvironmentMapEffect_VSEnvMap.pdb
; shader hash: ef9eb1a7f1834d7726d788dd00aaa1fd
;
; Pipeline Runtime Information: 
;
;PSVRuntimeInfo:
; Vertex Shader
; OutputPositionPresent=1
; MinimumExpectedWaveLaneCount: 0
; MaximumExpectedWaveLaneCount: 4294967295
; UsesViewID: false
; SigInputElements: 3
; SigOutputElements: 5
; SigPatchConstOrPrimElements: 0
; SigInputVectors: 3
; SigOutputVectors[0]: 5
; SigOutputVectors[1]: 0
; SigOutputVectors[2]: 0
; SigOutputVectors[3]: 0
; EntryFunctionName: VSEnvMap
;
;
; Input signature:
;
; Name                 Index             InterpMode DynIdx
; -------------------- ----- ---------------------- ------
; SV_Position              0                              
; NORMAL                   0                              
; TEXCOORD                 0                              
;
; Output signature:
;
; Name                 Index             InterpMode DynIdx
; -------------------- ----- ---------------------- ------
; COLOR                    0                 linear       
; COLOR                    1                 linear       
; TEXCOORD                 0                 linear       
; TEXCOORD                 1                 linear       
; SV_Position              0          noperspective       
;
; Buffer Definitions:
;
; cbuffer 
; {
;
;   [384 x i8] (type annotation not present)
;
; }
;
;
; Resource Bindings:
;
; Name                                 Type  Format         Dim      ID      HLSL Bind  Count
; ------------------------------ ---------- ------- ----------- ------- -------------- ------
;                                   cbuffer      NA          NA     CB0            cb0     1
;
;
; ViewId state:
;
; Number of inputs: 10, outputs: 20
; Outputs dependent on ViewId: {  }
; Inputs contributing to computation of Outputs:
;   output 0 depends on inputs: { 4, 5, 6 }
;   output 1 depends on inputs: { 4, 5, 6 }
;   output 2 depends on inputs: { 4, 5, 6 }
;   output 7 depends on inputs: { 0, 1, 2, 3 }
;   output 8 depends on inputs: { 8 }
;   output 9 depends on inputs: { 9 }
;   output 12 depends on inputs: { 0, 1, 2, 3, 4, 5, 6 }
;   output 13 depends on inputs: { 0, 1, 2, 3, 4, 5, 6 }
;   output 14 depends on inputs: { 0, 1, 2, 3, 4, 5, 6 }
;   output 16 depends on inputs: { 0, 1, 2, 3 }
;   output 17 depends on inputs: { 0, 1, 2, 3 }
;   output 18 depends on inputs: { 0, 1, 2, 3 }
;   output 19 depends on inputs: { 0, 1, 2, 3 }
;
target datalayout = "e-m:e-p:32:32-i1:32-i8:32-i16:32-i32:32-i64:64-f16:32-f32:32-f64:64-n8:16:32:64"
target triple = "dxil-ms-xb1"

%dx.types.Handle = type { i8* }
%dx.types.CBufRet.f32 = type { float, float, float, float }
%hostlayout.Parameters = type { <3 x float>, float, float, <4 x float>, <3 x float>, [3 x <3 x float>], [3 x <3 x float>], <3 x float>, <3 x float>, <4 x float>, [4 x <4 x float>], [3 x <3 x float>], [4 x <4 x float>] }

define void @VSEnvMap() {
  %1 = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 2, i32 0, i32 0, i1 false)  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %2 = call float @dx.op.loadInput.f32(i32 4, i32 2, i32 0, i8 0, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %3 = call float @dx.op.loadInput.f32(i32 4, i32 2, i32 0, i8 1, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %4 = call float @dx.op.loadInput.f32(i32 4, i32 1, i32 0, i8 0, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %5 = call float @dx.op.loadInput.f32(i32 4, i32 1, i32 0, i8 1, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %6 = call float @dx.op.loadInput.f32(i32 4, i32 1, i32 0, i8 2, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %7 = call float @dx.op.loadInput.f32(i32 4, i32 0, i32 0, i8 0, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %8 = call float @dx.op.loadInput.f32(i32 4, i32 0, i32 0, i8 1, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %9 = call float @dx.op.loadInput.f32(i32 4, i32 0, i32 0, i8 2, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %10 = call float @dx.op.loadInput.f32(i32 4, i32 0, i32 0, i8 3, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %11 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 13)  ; CBufferLoadLegacy(handle,regIndex)
  %12 = extractvalue %dx.types.CBufRet.f32 %11, 0
  %13 = extractvalue %dx.types.CBufRet.f32 %11, 1
  %14 = extractvalue %dx.types.CBufRet.f32 %11, 2
  %15 = extractvalue %dx.types.CBufRet.f32 %11, 3
  %16 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 14)  ; CBufferLoadLegacy(handle,regIndex)
  %17 = extractvalue %dx.types.CBufRet.f32 %16, 0
  %18 = extractvalue %dx.types.CBufRet.f32 %16, 1
  %19 = extractvalue %dx.types.CBufRet.f32 %16, 2
  %20 = extractvalue %dx.types.CBufRet.f32 %16, 3
  %21 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 15)  ; CBufferLoadLegacy(handle,regIndex)
  %22 = extractvalue %dx.types.CBufRet.f32 %21, 0
  %23 = extractvalue %dx.types.CBufRet.f32 %21, 1
  %24 = extractvalue %dx.types.CBufRet.f32 %21, 2
  %25 = extractvalue %dx.types.CBufRet.f32 %21, 3
  %26 = fmul fast float %12, %7
  %27 = call float @dx.op.tertiary.f32(i32 46, float %8, float %13, float %26)  ; FMad(a,b,c)
  %28 = call float @dx.op.tertiary.f32(i32 46, float %9, float %14, float %27)  ; FMad(a,b,c)
  %29 = call float @dx.op.tertiary.f32(i32 46, float %10, float %15, float %28)  ; FMad(a,b,c)
  %30 = fmul fast float %17, %7
  %31 = call float @dx.op.tertiary.f32(i32 46, float %8, float %18, float %30)  ; FMad(a,b,c)
  %32 = call float @dx.op.tertiary.f32(i32 46, float %9, float %19, float %31)  ; FMad(a,b,c)
  %33 = call float @dx.op.tertiary.f32(i32 46, float %10, float %20, float %32)  ; FMad(a,b,c)
  %34 = fmul fast float %22, %7
  %35 = call float @dx.op.tertiary.f32(i32 46, float %8, float %23, float %34)  ; FMad(a,b,c)
  %36 = call float @dx.op.tertiary.f32(i32 46, float %9, float %24, float %35)  ; FMad(a,b,c)
  %37 = call float @dx.op.tertiary.f32(i32 46, float %10, float %25, float %36)  ; FMad(a,b,c)
  %38 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 10)  ; CBufferLoadLegacy(handle,regIndex)
  %39 = extractvalue %dx.types.CBufRet.f32 %38, 0
  %40 = extractvalue %dx.types.CBufRet.f32 %38, 1
  %41 = extractvalue %dx.types.CBufRet.f32 %38, 2
  %42 = fsub fast float %39, %29
  %43 = fsub fast float %40, %33
  %44 = fsub fast float %41, %37
  %45 = call float @dx.op.dot3.f32(i32 55, float %42, float %43, float %44, float %42, float %43, float %44)  ; Dot3(ax,ay,az,bx,by,bz)
  %46 = call float @dx.op.unary.f32(i32 25, float %45)  ; Rsqrt(value)
  %47 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 17)  ; CBufferLoadLegacy(handle,regIndex)
  %48 = extractvalue %dx.types.CBufRet.f32 %47, 0
  %49 = extractvalue %dx.types.CBufRet.f32 %47, 1
  %50 = extractvalue %dx.types.CBufRet.f32 %47, 2
  %51 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 18)  ; CBufferLoadLegacy(handle,regIndex)
  %52 = extractvalue %dx.types.CBufRet.f32 %51, 0
  %53 = extractvalue %dx.types.CBufRet.f32 %51, 1
  %54 = extractvalue %dx.types.CBufRet.f32 %51, 2
  %55 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 19)  ; CBufferLoadLegacy(handle,regIndex)
  %56 = extractvalue %dx.types.CBufRet.f32 %55, 0
  %57 = extractvalue %dx.types.CBufRet.f32 %55, 1
  %58 = extractvalue %dx.types.CBufRet.f32 %55, 2
  %59 = fmul fast float %48, %4
  %60 = call float @dx.op.tertiary.f32(i32 46, float %5, float %49, float %59)  ; FMad(a,b,c)
  %61 = call float @dx.op.tertiary.f32(i32 46, float %6, float %50, float %60)  ; FMad(a,b,c)
  %62 = fmul fast float %52, %4
  %63 = call float @dx.op.tertiary.f32(i32 46, float %5, float %53, float %62)  ; FMad(a,b,c)
  %64 = call float @dx.op.tertiary.f32(i32 46, float %6, float %54, float %63)  ; FMad(a,b,c)
  %65 = fmul fast float %56, %4
  %66 = call float @dx.op.tertiary.f32(i32 46, float %5, float %57, float %65)  ; FMad(a,b,c)
  %67 = call float @dx.op.tertiary.f32(i32 46, float %6, float %58, float %66)  ; FMad(a,b,c)
  %68 = call float @dx.op.dot3.f32(i32 55, float %61, float %64, float %67, float %61, float %64, float %67)  ; Dot3(ax,ay,az,bx,by,bz)
  %69 = call float @dx.op.unary.f32(i32 25, float %68)  ; Rsqrt(value)
  %70 = fmul fast float %69, %61
  %71 = fmul fast float %69, %64
  %72 = fmul fast float %69, %67
  %73 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 4)  ; CBufferLoadLegacy(handle,regIndex)
  %74 = extractvalue %dx.types.CBufRet.f32 %73, 0
  %75 = extractvalue %dx.types.CBufRet.f32 %73, 1
  %76 = extractvalue %dx.types.CBufRet.f32 %73, 2
  %77 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 7)  ; CBufferLoadLegacy(handle,regIndex)
  %78 = extractvalue %dx.types.CBufRet.f32 %77, 0
  %79 = extractvalue %dx.types.CBufRet.f32 %77, 1
  %80 = extractvalue %dx.types.CBufRet.f32 %77, 2
  %81 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 5)  ; CBufferLoadLegacy(handle,regIndex)
  %82 = extractvalue %dx.types.CBufRet.f32 %81, 0
  %83 = extractvalue %dx.types.CBufRet.f32 %81, 1
  %84 = extractvalue %dx.types.CBufRet.f32 %81, 2
  %85 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 8)  ; CBufferLoadLegacy(handle,regIndex)
  %86 = extractvalue %dx.types.CBufRet.f32 %85, 0
  %87 = extractvalue %dx.types.CBufRet.f32 %85, 1
  %88 = extractvalue %dx.types.CBufRet.f32 %85, 2
  %89 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 6)  ; CBufferLoadLegacy(handle,regIndex)
  %90 = extractvalue %dx.types.CBufRet.f32 %89, 0
  %91 = extractvalue %dx.types.CBufRet.f32 %89, 1
  %92 = extractvalue %dx.types.CBufRet.f32 %89, 2
  %93 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 9)  ; CBufferLoadLegacy(handle,regIndex)
  %94 = extractvalue %dx.types.CBufRet.f32 %93, 0
  %95 = extractvalue %dx.types.CBufRet.f32 %93, 1
  %96 = extractvalue %dx.types.CBufRet.f32 %93, 2
  %97 = fsub fast float -0.000000e+00, %75
  %98 = fsub fast float -0.000000e+00, %76
  %99 = fsub fast float -0.000000e+00, %83
  %100 = fsub fast float -0.000000e+00, %84
  %101 = fsub fast float -0.000000e+00, %91
  %102 = fsub fast float -0.000000e+00, %92
  %103 = fmul fast float %70, %74
  %104 = fsub fast float -0.000000e+00, %103
  %105 = call float @dx.op.tertiary.f32(i32 46, float %97, float %71, float %104)  ; FMad(a,b,c)
  %106 = call float @dx.op.tertiary.f32(i32 46, float %98, float %72, float %105)  ; FMad(a,b,c)
  %107 = fmul fast float %70, %82
  %108 = fsub fast float -0.000000e+00, %107
  %109 = call float @dx.op.tertiary.f32(i32 46, float %99, float %71, float %108)  ; FMad(a,b,c)
  %110 = call float @dx.op.tertiary.f32(i32 46, float %100, float %72, float %109)  ; FMad(a,b,c)
  %111 = fmul fast float %70, %90
  %112 = fsub fast float -0.000000e+00, %111
  %113 = call float @dx.op.tertiary.f32(i32 46, float %101, float %71, float %112)  ; FMad(a,b,c)
  %114 = call float @dx.op.tertiary.f32(i32 46, float %102, float %72, float %113)  ; FMad(a,b,c)
  %115 = fcmp fast olt float %106, 0.000000e+00
  %116 = fcmp fast olt float %110, 0.000000e+00
  %117 = fcmp fast olt float %114, 0.000000e+00
  %118 = select i1 %115, float 0.000000e+00, float 1.000000e+00
  %119 = select i1 %116, float 0.000000e+00, float 1.000000e+00
  %120 = select i1 %117, float 0.000000e+00, float 1.000000e+00
  %121 = fmul fast float %118, %106
  %122 = fmul fast float %119, %110
  %123 = fmul fast float %120, %114
  %124 = fmul fast float %121, %78
  %125 = call float @dx.op.tertiary.f32(i32 46, float %122, float %86, float %124)  ; FMad(a,b,c)
  %126 = call float @dx.op.tertiary.f32(i32 46, float %123, float %94, float %125)  ; FMad(a,b,c)
  %127 = fmul fast float %121, %79
  %128 = call float @dx.op.tertiary.f32(i32 46, float %122, float %87, float %127)  ; FMad(a,b,c)
  %129 = call float @dx.op.tertiary.f32(i32 46, float %123, float %95, float %128)  ; FMad(a,b,c)
  %130 = fmul fast float %121, %80
  %131 = call float @dx.op.tertiary.f32(i32 46, float %122, float %88, float %130)  ; FMad(a,b,c)
  %132 = call float @dx.op.tertiary.f32(i32 46, float %123, float %96, float %131)  ; FMad(a,b,c)
  %133 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 2)  ; CBufferLoadLegacy(handle,regIndex)
  %134 = extractvalue %dx.types.CBufRet.f32 %133, 0
  %135 = extractvalue %dx.types.CBufRet.f32 %133, 1
  %136 = extractvalue %dx.types.CBufRet.f32 %133, 2
  %137 = fmul fast float %134, %126
  %138 = fmul fast float %135, %129
  %139 = fmul fast float %136, %132
  %140 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 3)  ; CBufferLoadLegacy(handle,regIndex)
  %141 = extractvalue %dx.types.CBufRet.f32 %140, 0
  %142 = extractvalue %dx.types.CBufRet.f32 %140, 1
  %143 = extractvalue %dx.types.CBufRet.f32 %140, 2
  %144 = fadd fast float %137, %141
  %145 = fadd fast float %138, %142
  %146 = fadd fast float %139, %143
  %147 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 20)  ; CBufferLoadLegacy(handle,regIndex)
  %148 = extractvalue %dx.types.CBufRet.f32 %147, 0
  %149 = extractvalue %dx.types.CBufRet.f32 %147, 1
  %150 = extractvalue %dx.types.CBufRet.f32 %147, 2
  %151 = extractvalue %dx.types.CBufRet.f32 %147, 3
  %152 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 21)  ; CBufferLoadLegacy(handle,regIndex)
  %153 = extractvalue %dx.types.CBufRet.f32 %152, 0
  %154 = extractvalue %dx.types.CBufRet.f32 %152, 1
  %155 = extractvalue %dx.types.CBufRet.f32 %152, 2
  %156 = extractvalue %dx.types.CBufRet.f32 %152, 3
  %157 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 22)  ; CBufferLoadLegacy(handle,regIndex)
  %158 = extractvalue %dx.types.CBufRet.f32 %157, 0
  %159 = extractvalue %dx.types.CBufRet.f32 %157, 1
  %160 = extractvalue %dx.types.CBufRet.f32 %157, 2
  %161 = extractvalue %dx.types.CBufRet.f32 %157, 3
  %162 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 23)  ; CBufferLoadLegacy(handle,regIndex)
  %163 = extractvalue %dx.types.CBufRet.f32 %162, 0
  %164 = extractvalue %dx.types.CBufRet.f32 %162, 1
  %165 = extractvalue %dx.types.CBufRet.f32 %162, 2
  %166 = extractvalue %dx.types.CBufRet.f32 %162, 3
  %167 = fmul fast float %148, %7
  %168 = call float @dx.op.tertiary.f32(i32 46, float %8, float %149, float %167)  ; FMad(a,b,c)
  %169 = call float @dx.op.tertiary.f32(i32 46, float %9, float %150, float %168)  ; FMad(a,b,c)
  %170 = call float @dx.op.tertiary.f32(i32 46, float %10, float %151, float %169)  ; FMad(a,b,c)
  %171 = fmul fast float %153, %7
  %172 = call float @dx.op.tertiary.f32(i32 46, float %8, float %154, float %171)  ; FMad(a,b,c)
  %173 = call float @dx.op.tertiary.f32(i32 46, float %9, float %155, float %172)  ; FMad(a,b,c)
  %174 = call float @dx.op.tertiary.f32(i32 46, float %10, float %156, float %173)  ; FMad(a,b,c)
  %175 = fmul fast float %158, %7
  %176 = call float @dx.op.tertiary.f32(i32 46, float %8, float %159, float %175)  ; FMad(a,b,c)
  %177 = call float @dx.op.tertiary.f32(i32 46, float %9, float %160, float %176)  ; FMad(a,b,c)
  %178 = call float @dx.op.tertiary.f32(i32 46, float %10, float %161, float %177)  ; FMad(a,b,c)
  %179 = fmul fast float %163, %7
  %180 = call float @dx.op.tertiary.f32(i32 46, float %8, float %164, float %179)  ; FMad(a,b,c)
  %181 = call float @dx.op.tertiary.f32(i32 46, float %9, float %165, float %180)  ; FMad(a,b,c)
  %182 = call float @dx.op.tertiary.f32(i32 46, float %10, float %166, float %181)  ; FMad(a,b,c)
  %183 = extractvalue %dx.types.CBufRet.f32 %133, 3
  %184 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 1)  ; CBufferLoadLegacy(handle,regIndex)
  %185 = extractvalue %dx.types.CBufRet.f32 %184, 0
  %186 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 12)  ; CBufferLoadLegacy(handle,regIndex)
  %187 = extractvalue %dx.types.CBufRet.f32 %186, 0
  %188 = extractvalue %dx.types.CBufRet.f32 %186, 1
  %189 = extractvalue %dx.types.CBufRet.f32 %186, 2
  %190 = extractvalue %dx.types.CBufRet.f32 %186, 3
  %191 = call float @dx.op.dot4.f32(i32 56, float %7, float %8, float %9, float %10, float %187, float %188, float %189, float %190)  ; Dot4(ax,ay,az,aw,bx,by,bz,bw)
  %192 = call float @dx.op.unary.f32(i32 7, float %191)  ; Saturate(value)
  %193 = fmul fast float %46, %42
  %194 = fsub fast float -0.000000e+00, %193
  %195 = fmul fast float %46, %43
  %196 = fsub fast float -0.000000e+00, %195
  %197 = fmul fast float %46, %44
  %198 = fsub fast float -0.000000e+00, %197
  %199 = call float @dx.op.dot3.f32(i32 55, float %194, float %196, float %198, float %70, float %71, float %72)  ; Dot3(ax,ay,az,bx,by,bz)
  %200 = fmul fast float %199, 2.000000e+00
  %201 = fmul fast float %200, %70
  %202 = fmul fast float %200, %71
  %203 = fmul fast float %200, %72
  %204 = fsub fast float %194, %201
  %205 = fsub fast float %196, %202
  %206 = fsub fast float %198, %203
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 0, float %144)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 1, float %145)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 2, float %146)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 3, float %183)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 1, i32 0, i8 0, float %185)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 1, i32 0, i8 1, float %185)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 1, i32 0, i8 2, float %185)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 1, i32 0, i8 3, float %192)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 2, i32 0, i8 0, float %2)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 2, i32 0, i8 1, float %3)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 3, i32 0, i8 0, float %204)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 3, i32 0, i8 1, float %205)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 3, i32 0, i8 2, float %206)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 4, i32 0, i8 0, float %170)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 4, i32 0, i8 1, float %174)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 4, i32 0, i8 2, float %178)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 4, i32 0, i8 3, float %182)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  ret void
}

; Function Attrs: nounwind readnone
declare float @dx.op.loadInput.f32(i32, i32, i32, i8, i32) #0

; Function Attrs: nounwind
declare void @dx.op.storeOutput.f32(i32, i32, i32, i8, float) #1

; Function Attrs: nounwind readnone
declare float @dx.op.dot3.f32(i32, float, float, float, float, float, float) #0

; Function Attrs: nounwind readnone
declare float @dx.op.unary.f32(i32, float) #0

; Function Attrs: nounwind readnone
declare float @dx.op.dot4.f32(i32, float, float, float, float, float, float, float, float) #0

; Function Attrs: nounwind readonly
declare %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32, %dx.types.Handle, i32) #2

; Function Attrs: nounwind readnone
declare float @dx.op.tertiary.f32(i32, float, float, float) #0

; Function Attrs: nounwind readonly
declare %dx.types.Handle @dx.op.createHandle(i32, i8, i32, i32, i1) #2

attributes #0 = { nounwind readnone }
attributes #1 = { nounwind }
attributes #2 = { nounwind readonly }

!xbox.compiler.options = !{!0}
!llvm.ident = !{!1}
!dx.version = !{!2}
!dx.valver = !{!3}
!dx.shaderModel = !{!4}
!dx.resources = !{!5}
!dx.viewIdState = !{!8}
!dx.entryPoints = !{!9}

!0 = !{!"__XBOX_PER_THREAD_SCRATCH_SIZE_LIMIT_IN_BYTES", !"0"}
!1 = !{!"dxcxbox 2410.2410.11116.10741"}
!2 = !{i32 1, i32 0}
!3 = !{i32 1, i32 8}
!4 = !{!"vs", i32 6, i32 0}
!5 = !{null, null, !6, null}
!6 = !{!7}
!7 = !{i32 0, %hostlayout.Parameters* undef, !"", i32 0, i32 0, i32 1, i32 384, null}
!8 = !{[12 x i32] [i32 10, i32 20, i32 1011840, i32 1011840, i32 1011840, i32 1011840, i32 28679, i32 28679, i32 28679, i32 0, i32 256, i32 512]}
!9 = !{void ()* @VSEnvMap, !"VSEnvMap", !10, !5, null}
!10 = !{!11, !19, null}
!11 = !{!12, !15, !17}
!12 = !{i32 0, !"SV_Position", i8 9, i8 0, !13, i8 0, i32 1, i8 4, i32 0, i8 0, !14}
!13 = !{i32 0}
!14 = !{i32 3, i32 15}
!15 = !{i32 1, !"NORMAL", i8 9, i8 0, !13, i8 0, i32 1, i8 3, i32 1, i8 0, !16}
!16 = !{i32 3, i32 7}
!17 = !{i32 2, !"TEXCOORD", i8 9, i8 0, !13, i8 0, i32 1, i8 2, i32 2, i8 0, !18}
!18 = !{i32 3, i32 3}
!19 = !{!20, !21, !23, !24, !25}
!20 = !{i32 0, !"COLOR", i8 9, i8 0, !13, i8 2, i32 1, i8 4, i32 0, i8 0, !14}
!21 = !{i32 1, !"COLOR", i8 9, i8 0, !22, i8 2, i32 1, i8 4, i32 1, i8 0, !14}
!22 = !{i32 1}
!23 = !{i32 2, !"TEXCOORD", i8 9, i8 0, !13, i8 2, i32 1, i8 2, i32 2, i8 0, !18}
!24 = !{i32 3, !"TEXCOORD", i8 9, i8 0, !22, i8 2, i32 1, i8 3, i32 3, i8 0, !16}
!25 = !{i32 4, !"SV_Position", i8 9, i8 3, !13, i8 4, i32 1, i8 4, i32 4, i8 0, !14}

;
; DUMPING SHADER HARDWARE INSTRUCTIONS 
;
// Shader Type               : (VS)
// Shader Hw Stage           : (VS)

// Shader Instructions:
shader main
  asic(CI)
  type(VS)
  s_swappc_b64  s[0:1], s[0:1]
  s_or_b32      s69, s8, 0x00100000 // wrscc
  s_mov_b32     s68, s7
  s_mov_b32     s70, -1
  s_mov_b32     s71, 0x00024fac
  s_buffer_load_dwordx16  s[52:67], s[68:71], 0x44
  s_buffer_load_dword  s72, s[68:71], 0x04
  s_buffer_load_dwordx16  s[20:35], s[68:71], 0x08
  s_buffer_load_dwordx16  s[36:51], s[68:71], 0x18
  s_buffer_load_dwordx4  s[0:3], s[68:71], 0x28
  s_waitcnt     vmcnt(0) & lgkmcnt(0)
  v_mul_legacy_f32  v14, s56, v8
  v_mul_legacy_f32  v11, s52, v8
  v_mac_legacy_f32  v14, s57, v9
  v_mac_legacy_f32  v11, s53, v9
  v_mul_legacy_f32  v8, s60, v8
  v_mac_legacy_f32  v14, s58, v10
  v_mac_legacy_f32  v8, s61, v9
  v_mac_legacy_f32  v11, s54, v10
  v_mul_legacy_f32  v9, v14, v14
  v_mac_legacy_f32  v8, s62, v10
  v_mac_legacy_f32  v9, v11, v11
  s_buffer_load_dwordx16  s[4:19], s[68:71], 0x30
  v_mac_legacy_f32  v9, v8, v8
  v_rsq_f32     v9, v9
  v_mov_b32     v16, 1.0
  v_mov_b32     v17, 0
  s_waitcnt     lgkmcnt(0)
  v_mul_legacy_f32  v0, s8, v4
  v_mul_legacy_f32  v1, s12, v4
  v_mul_legacy_f32  v2, s16, v4
  v_mul_legacy_f32  v10, v9, v11
  v_mac_legacy_f32  v0, s9, v5
  v_mac_legacy_f32  v1, s13, v5
  v_mac_legacy_f32  v2, s17, v5
  v_mul_legacy_f32  v11, v9, v14
  v_mul_legacy_f32  v14, s32, v10
  v_mul_legacy_f32  v15, s36, v10
  v_mul_legacy_f32  v8, v9, v8
  v_mul_legacy_f32  v9, s28, v10
  v_mac_legacy_f32  v0, s10, v6
  v_mac_legacy_f32  v1, s14, v6
  v_mac_legacy_f32  v2, s18, v6
  v_mad_legacy_f32  v9, -s29, v11, -v9
  v_mad_legacy_f32  v14, -s33, v11, -v14
  v_mad_legacy_f32  v15, -s37, v11, -v15
  v_mac_legacy_f32  v0, s11, v7
  v_mac_legacy_f32  v1, s15, v7
  v_mac_legacy_f32  v2, s19, v7
  v_mac_legacy_f32  v9, v8, -s30
  v_mac_legacy_f32  v14, v8, -s34
  v_mac_legacy_f32  v15, v8, -s38
  v_sub_f32     v1, s1, v1
  v_sub_f32     v0, s0, v0
  v_sub_f32     v2, s2, v2
  v_cmp_gt_f32  vcc, 0, v9
  v_cmp_gt_f32  s[0:1], 0, v14
  v_cmp_gt_f32  s[2:3], 0, v15
  v_cndmask_b32  v18, 1.0, 0, vcc
  v_cndmask_b32  v19, 1.0, 0, s[0:1]
  v_cndmask_b32  v20, 1.0, 0, s[2:3]
  s_buffer_load_dwordx8  s[8:15], s[68:71], 0x54
  s_buffer_load_dwordx4  s[0:3], s[68:71], 0x5c
  v_mul_legacy_f32  v9, v18, v9
  v_mul_legacy_f32  v3, v1, v1
  v_mul_legacy_f32  v14, v19, v14
  v_mul_legacy_f32  v18, s40, v9
  v_mul_legacy_f32  v19, s41, v9
  v_mac_legacy_f32  v3, v0, v0
  v_mul_legacy_f32  v9, s42, v9
  v_mul_legacy_f32  v15, v20, v15
  v_mac_legacy_f32  v18, s44, v14
  v_mac_legacy_f32  v19, s45, v14
  v_mac_legacy_f32  v9, s46, v14
  v_mac_legacy_f32  v3, v2, v2
  v_mac_legacy_f32  v18, s48, v15
  v_mac_legacy_f32  v19, s49, v15
  v_mac_legacy_f32  v9, s50, v15
  v_mul_legacy_f32  v15, s20, v18
  v_mul_legacy_f32  v18, s21, v19
  v_rsq_f32     v3, v3
  v_mul_legacy_f32  v19, s64, v4
  s_waitcnt     lgkmcnt(0)
  v_mul_legacy_f32  v20, s8, v4
  v_mul_legacy_f32  v21, s12, v4
  v_mul_legacy_f32  v22, s0, v4
  v_mac_legacy_f32  v19, s65, v5
  v_mac_legacy_f32  v20, s9, v5
  v_mac_legacy_f32  v21, s13, v5
  v_mac_legacy_f32  v22, s1, v5
  v_mac_legacy_f32  v19, s66, v6
  v_mac_legacy_f32  v20, s10, v6
  v_mac_legacy_f32  v21, s14, v6
  v_mac_legacy_f32  v22, s2, v6
  v_mul_legacy_f32  v5, s5, v5
  v_mac_legacy_f32  v19, s67, v7
  v_mac_legacy_f32  v20, s11, v7
  v_mac_legacy_f32  v21, s15, v7
  v_mac_legacy_f32  v22, s3, v7
  v_mul_legacy_f32  v7, s7, v7
  v_mad_legacy_f32  v4, v4, s4, v5
  v_mad_legacy_f32  v5, v6, s6, v7
  v_mul_legacy_f32  v1, v3, v1
  v_add_f32     v4, v4, v5 clamp
  v_mul_legacy_f32  v5, v3, -v0
  v_mul_legacy_f32  v6, v1, v11
  v_mul_legacy_f32  v2, v3, v2
  v_mad_legacy_f32  v5, v5, v10, -v6
  v_mac_legacy_f32  v5, v8, -v2 mul:2
  exp           pos0, v19, v20, v21, v22 done
  v_mul_legacy_f32  v9, s22, v9
  v_mul_legacy_f32  v6, v5, v10
  v_mad_legacy_f32  v0, v3, -v0, -v6
  v_mov_b32     v14, s23
  v_add_f32     v15, s24, v15
  v_add_f32     v18, s25, v18
  v_add_f32     v9, s26, v9
  v_mad_legacy_f32  v1, -v5, v11, -v1
  v_mad_legacy_f32  v2, -v5, v8, -v2
  v_mov_b32     v3, s72
  exp           param0, v15, v18, v9, v14
  exp           param1, v3, v3, v3, v4
  exp           param2, v12, v13, v17, v16
  exp           param3, v0, v1, v2, v16
  s_endpgm      
end


NumVGPR=23,NumSGPR=75,LDS=0,Scratch=0,Occpancy=6

// Shader Type               : (VS)
// Shader Hw Stage           : (ES)

// Shader Instructions:
shader main
  asic(CI)
  type(VS)
  s_swappc_b64  s[0:1], s[0:1]
  s_or_b32      s53, s8, 0x00100000 // wrscc
  s_mov_b32     s52, s7
  s_mov_b32     s54, -1
  s_mov_b32     s55, 0x00024fac
  s_buffer_load_dwordx16  s[16:31], s[52:55], 0x44
  s_buffer_load_dwordx4  s[4:7], s[52:55], 0x28
  s_buffer_load_dwordx4  s[12:15], s[52:55], 0x5c
  s_buffer_load_dwordx8  s[44:51], s[52:55], 0x54
  s_mov_b32     s1, 0
  s_waitcnt     vmcnt(0) & lgkmcnt(0)
  v_mul_legacy_f32  v3, s20, v8
  v_mul_legacy_f32  v2, s16, v8
  v_mac_legacy_f32  v3, s21, v9
  v_mac_legacy_f32  v2, s17, v9
  v_mul_legacy_f32  v8, s24, v8
  v_mac_legacy_f32  v3, s22, v10
  v_mul_legacy_f32  v0, s12, v4
  v_mac_legacy_f32  v8, s25, v9
  v_mac_legacy_f32  v2, s18, v10
  v_mul_legacy_f32  v11, v3, v3
  v_mac_legacy_f32  v0, s13, v5
  v_mac_legacy_f32  v11, v2, v2
  v_mac_legacy_f32  v8, s26, v10
  v_mac_legacy_f32  v0, s14, v6
  v_mad_legacy_f32  v9, v8, v8, v11
  v_rsq_f32     v9, v9
  v_mac_legacy_f32  v0, s15, v7
  s_buffer_load_dwordx16  s[12:27], s[52:55], 0x18
  v_mul_legacy_f32  v1, s44, v4
  v_mac_legacy_f32  v1, s45, v5
  v_mac_legacy_f32  v1, s46, v6
  v_mul_legacy_f32  v2, v9, v2
  v_mac_legacy_f32  v1, s47, v7
  s_load_dwordx4  s[0:3], s[0:1], 0x08
  s_buffer_load_dword  s7, s[52:55], 0x04
  s_buffer_load_dwordx16  s[32:47], s[52:55], 0x08
  v_mul_legacy_f32  v3, v9, v3
  v_mul_legacy_f32  v8, v9, v8
  s_waitcnt     lgkmcnt(0)
  v_mul_legacy_f32  v9, s12, v2
  v_mad_legacy_f32  v9, -s13, v3, -v9
  v_mac_legacy_f32  v9, v8, -s14
  v_cmp_gt_f32  vcc, 0, v9
  v_cndmask_b32  v10, 1.0, 0, vcc
  v_mul_legacy_f32  v9, v10, v9
  v_mul_legacy_f32  v10, s40, v2
  v_mad_legacy_f32  v10, -s41, v3, -v10
  v_mul_legacy_f32  v14, s44, v2
  v_mad_legacy_f32  v14, -s45, v3, -v14
  v_mac_legacy_f32  v10, v8, -s42
  v_cmp_gt_f32  vcc, 0, v10
  v_mac_legacy_f32  v14, v8, -s46
  v_cndmask_b32  v11, 1.0, 0, vcc
  v_cmp_gt_f32  vcc, 0, v14
  v_cndmask_b32  v15, 1.0, 0, vcc
  v_mul_legacy_f32  v14, v15, v14
  v_mul_legacy_f32  v15, s28, v4
  v_mac_legacy_f32  v15, s29, v5
  v_mul_legacy_f32  v10, v11, v10
  v_mac_legacy_f32  v15, s30, v6
  v_mul_legacy_f32  v11, s16, v10
  v_mac_legacy_f32  v15, s31, v7
  v_mac_legacy_f32  v11, s20, v14
  buffer_store_dword  v15, v0, s[0:3], s9 offset:64 glc slc
  buffer_store_dword  v1, v0, s[0:3], s9 offset:68 glc slc
  v_mul_legacy_f32  v1, s48, v4
  v_mac_legacy_f32  v11, s24, v9
  v_mac_legacy_f32  v1, s49, v5
  v_mul_legacy_f32  v11, s32, v11
  v_mac_legacy_f32  v1, s50, v6
  v_mac_legacy_f32  v1, s51, v7
  v_add_f32     v11, s36, v11
  buffer_store_dword  v1, v0, s[0:3], s9 offset:72 glc slc
  buffer_store_dword  v0, v0, s[0:3], s9 offset:76 glc slc
  buffer_store_dword  v11, v0, s[0:3], s9 glc slc
  v_mul_legacy_f32  v0, s17, v10
  v_mac_legacy_f32  v0, s21, v14
  v_mac_legacy_f32  v0, s25, v9
  v_mul_legacy_f32  v0, s33, v0
  v_add_f32     v0, s37, v0
  buffer_store_dword  v0, v0, s[0:3], s9 offset:4 glc slc
  v_mul_legacy_f32  v0, s18, v10
  v_mac_legacy_f32  v0, s22, v14
  v_mac_legacy_f32  v0, s26, v9
  s_buffer_load_dwordx16  s[12:27], s[52:55], 0x30
  v_mul_legacy_f32  v0, s34, v0
  v_add_f32     v0, s38, v0
  buffer_store_dword  v0, v0, s[0:3], s9 offset:8 glc slc
  v_mov_b32     v0, s35
  s_waitcnt     lgkmcnt(0)
  v_mul_legacy_f32  v1, s20, v4
  buffer_store_dword  v0, v0, s[0:3], s9 offset:12 glc slc
  v_mov_b32     v0, s7
  v_mac_legacy_f32  v1, s21, v5
  buffer_store_dword  v0, v0, s[0:3], s9 offset:16 glc slc
  buffer_store_dword  v0, v0, s[0:3], s9 offset:20 glc slc
  buffer_store_dword  v0, v0, s[0:3], s9 offset:24 glc slc
  v_mul_legacy_f32  v0, s16, v4
  v_mac_legacy_f32  v0, s17, v5
  v_mac_legacy_f32  v1, s22, v6
  v_mul_legacy_f32  v10, s24, v4
  v_mac_legacy_f32  v0, s18, v6
  v_mac_legacy_f32  v1, s23, v7
  v_mac_legacy_f32  v10, s25, v5
  v_mac_legacy_f32  v0, s19, v7
  v_mac_legacy_f32  v10, s26, v6
  v_sub_f32     v1, s5, v1
  v_mac_legacy_f32  v10, s27, v7
  v_sub_f32     v0, s4, v0
  v_mul_legacy_f32  v9, v1, v1
  v_mac_legacy_f32  v9, v0, v0
  v_sub_f32     v10, s6, v10
  v_mac_legacy_f32  v9, v10, v10
  v_rsq_f32     v9, v9
  v_mul_legacy_f32  v1, v9, v1
  v_mul_legacy_f32  v11, v1, v3
  v_mul_legacy_f32  v14, v9, -v0
  v_mad_legacy_f32  v11, v14, v2, -v11
  v_mul_legacy_f32  v10, v9, v10
  v_mac_legacy_f32  v11, v8, -v10 mul:2
  v_mul_legacy_f32  v2, v11, v2
  v_mad_legacy_f32  v0, v9, -v0, -v2
  v_mul_legacy_f32  v2, s13, v5
  v_mac_legacy_f32  v2, s12, v4
  v_mul_legacy_f32  v4, s15, v7
  v_mac_legacy_f32  v4, s14, v6
  v_add_f32     v2, v2, v4 clamp
  buffer_store_dword  v2, v0, s[0:3], s9 offset:28 glc slc
  buffer_store_dword  v12, v0, s[0:3], s9 offset:32 glc slc
  buffer_store_dword  v13, v0, s[0:3], s9 offset:36 glc slc
  buffer_store_dword  v0, v0, s[0:3], s9 offset:48 glc slc
  v_mad_legacy_f32  v0, -v11, v3, -v1
  buffer_store_dword  v0, v0, s[0:3], s9 offset:52 glc slc
  v_mad_legacy_f32  v0, -v11, v8, -v10
  buffer_store_dword  v0, v0, s[0:3], s9 offset:56 glc slc
  s_endpgm      
end


NumVGPR=16,NumSGPR=58,LDS=0,Scratch=0,Occpancy=8

// Shader Type               : (VS)
// Shader Hw Stage           : (LS)

// Shader Instructions:
shader main
  asic(CI)
  type(VS)
  s_swappc_b64  s[0:1], s[0:1]
  s_or_b32      s37, s8, 0x00100000 // wrscc
  s_mov_b32     s36, s7
  s_mov_b32     s38, -1
  s_mov_b32     s39, 0x00024fac
  s_buffer_load_dwordx16  s[4:19], s[36:39], 0x44
  s_buffer_load_dwordx16  s[20:35], s[36:39], 0x18
  s_mov_b32     m0, -1
  s_waitcnt     vmcnt(0) & lgkmcnt(0)
  v_mul_legacy_f32  v2, s8, v8
  v_mul_legacy_f32  v0, s4, v8
  v_mac_legacy_f32  v2, s9, v9
  v_mac_legacy_f32  v0, s5, v9
  v_mul_legacy_f32  v3, s12, v8
  v_mac_legacy_f32  v2, s10, v10
  v_mac_legacy_f32  v3, s13, v9
  v_mac_legacy_f32  v0, s6, v10
  v_mul_legacy_f32  v8, v2, v2
  v_mac_legacy_f32  v3, s14, v10
  v_mac_legacy_f32  v8, v0, v0
  v_mac_legacy_f32  v8, v3, v3
  v_rsq_f32     v8, v8
  s_buffer_load_dwordx16  s[0:15], s[36:39], 0x08
  v_mul_legacy_f32  v0, v8, v0
  v_mul_legacy_f32  v14, v8, v2
  s_waitcnt     lgkmcnt(0)
  v_mul_legacy_f32  v2, s8, v0
  v_mul_legacy_f32  v15, v8, v3
  v_mad_legacy_f32  v2, -s9, v14, -v2
  v_mul_legacy_f32  v3, s12, v0
  v_mad_legacy_f32  v3, -s13, v14, -v3
  v_mul_legacy_f32  v10, s20, v0
  v_mac_legacy_f32  v2, v15, -s10
  v_mad_legacy_f32  v10, -s21, v14, -v10
  v_mac_legacy_f32  v3, v15, -s14
  v_cmp_gt_f32  vcc, 0, v2
  v_cndmask_b32  v8, 1.0, 0, vcc
  v_cmp_gt_f32  vcc, 0, v3
  v_mac_legacy_f32  v10, v15, -s22
  s_buffer_load_dwordx8  s[8:15], s[36:39], 0x54
  v_cndmask_b32  v9, 1.0, 0, vcc
  v_cmp_gt_f32  vcc, 0, v10
  v_cndmask_b32  v11, 1.0, 0, vcc
  v_mul_legacy_f32  v2, v8, v2
  v_mul_legacy_f32  v3, v9, v3
  v_mul_legacy_f32  v9, s24, v2
  v_mul_legacy_f32  v8, v11, v10
  v_mul_legacy_f32  v10, s25, v2
  v_mul_legacy_f32  v2, s26, v2
  v_mac_legacy_f32  v9, s28, v3
  v_mac_legacy_f32  v10, s29, v3
  v_mac_legacy_f32  v2, s30, v3
  v_mad_legacy_f32  v16, v8, s34, v2
  v_mac_legacy_f32  v9, s32, v8
  v_mul_legacy_f32  v2, s16, v4
  s_waitcnt     lgkmcnt(0)
  v_mul_legacy_f32  v3, s8, v4
  v_mad_legacy_f32  v11, v8, s33, v10
  v_mul_legacy_f32  v8, s12, v4
  v_mac_legacy_f32  v2, s17, v5
  v_mac_legacy_f32  v3, s9, v5
  v_mac_legacy_f32  v8, s13, v5
  v_mac_legacy_f32  v2, s18, v6
  v_mac_legacy_f32  v3, s10, v6
  v_mac_legacy_f32  v8, s14, v6
  v_mac_legacy_f32  v2, s19, v7
  v_mac_legacy_f32  v3, s11, v7
  v_mac_legacy_f32  v8, s15, v7
  s_buffer_load_dwordx4  s[24:27], s[36:39], 0x28
  s_buffer_load_dwordx16  s[8:23], s[36:39], 0x30
  v_mul_legacy_f32  v9, s0, v9
  s_buffer_load_dword  s0, s[36:39], 0x04
  v_mul_legacy_f32  v16, s2, v16
  s_waitcnt     lgkmcnt(0)
  v_mul_legacy_f32  v10, s12, v4
  v_mac_legacy_f32  v10, s13, v5
  v_mac_legacy_f32  v10, s14, v6
  v_mad_legacy_f32  v17, v7, s15, v10
  s_buffer_load_dwordx4  s[12:15], s[36:39], 0x5c
  v_mul_legacy_f32  v10, s16, v4
  v_mac_legacy_f32  v10, s17, v5
  v_mac_legacy_f32  v10, s18, v6
  v_mad_legacy_f32  v18, v7, s19, v10
  v_mul_legacy_f32  v19, s20, v4
  v_add_f32     v10, s4, v9
  v_mul_legacy_f32  v9, s1, v11
  v_mac_legacy_f32  v19, s21, v5
  v_add_f32     v11, s5, v9
  s_waitcnt     lgkmcnt(0)
  v_mul_legacy_f32  v9, s12, v4
  v_mac_legacy_f32  v9, s13, v5
  v_mac_legacy_f32  v19, s22, v6
  v_mul_legacy_f32  v5, s9, v5
  v_sub_f32     v18, s25, v18
  v_mac_legacy_f32  v19, s23, v7
  v_mac_legacy_f32  v5, s8, v4
  v_sub_f32     v17, s24, v17
  v_mul_legacy_f32  v4, v18, v18
  v_sub_f32     v19, s26, v19
  v_mac_legacy_f32  v4, v17, v17
  v_mac_legacy_f32  v4, v19, v19
  v_rsq_f32     v4, v4
  v_mac_legacy_f32  v9, s14, v6
  v_mac_legacy_f32  v9, s15, v7
  v_mul_legacy_f32  v7, s11, v7
  v_mul_legacy_f32  v18, v4, v18
  v_mad_legacy_f32  v6, v6, s10, v7
  v_mul_legacy_f32  v7, v4, -v17
  v_mul_legacy_f32  v20, v18, v14
  v_mad_legacy_f32  v7, v7, v0, -v20
  v_mul_legacy_f32  v19, v4, v19
  v_mac_legacy_f32  v7, v15, -v19 mul:2
  v_mul_legacy_f32  v0, v7, v0
  s_movk_i32    s1, 0x0050
  v_mad_legacy_f32  v0, v4, -v17, -v0
  v_add_f32     v4, s6, v16
  v_mul_lo_i32  v16, v1, s1
  v_add_f32     v6, v5, v6 clamp
  v_mov_b32     v5, s3
  v_mad_legacy_f32  v1, -v7, v14, -v18
  ds_write2_b64  v16, v[2:3], v[8:9] offset0:8 offset1:9
  ds_write2_b64  v16, v[10:11], v[4:5] offset1:1
  v_mad_legacy_f32  v7, -v7, v15, -v19
  v_mov_b32     v2, s0
  v_mov_b32     v3, s0
  v_mov_b32     v5, s0
  ds_write2_b64  v16, v[2:3], v[5:6] offset0:2 offset1:3
  ds_write_b32  v16, v7 offset:56
  ds_write2_b64  v16, v[12:13], v[0:1] offset0:4 offset1:6
  s_endpgm      
end


NumVGPR=21,NumSGPR=42,LDS=0,Scratch=0,Occpancy=10


#endif

const unsigned char EnvironmentMapEffect_VSEnvMap[] = {
  0x44, 0x58, 0x42, 0x43, 0xf1, 0x6d, 0xfb, 0xf5, 0x18, 0x1b, 0xbf, 0x78,
  0x7e, 0x48, 0xa4, 0x3c, 0xbc, 0x95, 0xcd, 0xc2, 0x01, 0x00, 0x00, 0x00,
  0x94, 0x1e, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00,
  0x50, 0x00, 0x00, 0x00, 0xdc, 0x00, 0x00, 0x00, 0xa8, 0x01, 0x00, 0x00,
  0x10, 0x03, 0x00, 0x00, 0xe4, 0x03, 0x00, 0x00, 0x74, 0x04, 0x00, 0x00,
  0x90, 0x04, 0x00, 0x00, 0x53, 0x46, 0x49, 0x30, 0x08, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x49, 0x53, 0x47, 0x31,
  0x84, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x68, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x0f, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x74, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x07, 0x07, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7b, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x03, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x53, 0x56, 0x5f, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x00,
  0x4e, 0x4f, 0x52, 0x4d, 0x41, 0x4c, 0x00, 0x54, 0x45, 0x58, 0x43, 0x4f,
  0x4f, 0x52, 0x44, 0x00, 0x4f, 0x53, 0x47, 0x31, 0xc4, 0x00, 0x00, 0x00,
  0x05, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xa8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xa8, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xae, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x03, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xae, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x07, 0x08, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb7, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x04, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x43, 0x4f, 0x4c, 0x4f, 0x52, 0x00, 0x54, 0x45, 0x58, 0x43, 0x4f, 0x4f,
  0x52, 0x44, 0x00, 0x53, 0x56, 0x5f, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69,
  0x6f, 0x6e, 0x00, 0x00, 0x50, 0x53, 0x56, 0x30, 0x60, 0x01, 0x00, 0x00,
  0x34, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xff, 0xff, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x03, 0x05, 0x00, 0x03,
  0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x18, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x44, 0x00, 0x00, 0x00, 0x00, 0x53, 0x56, 0x5f,
  0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x00, 0x4e, 0x4f, 0x52,
  0x4d, 0x41, 0x4c, 0x00, 0x54, 0x45, 0x58, 0x43, 0x4f, 0x4f, 0x52, 0x44,
  0x00, 0x43, 0x4f, 0x4c, 0x4f, 0x52, 0x00, 0x43, 0x4f, 0x4c, 0x4f, 0x52,
  0x00, 0x54, 0x45, 0x58, 0x43, 0x4f, 0x4f, 0x52, 0x44, 0x00, 0x54, 0x45,
  0x58, 0x43, 0x4f, 0x4f, 0x52, 0x44, 0x00, 0x56, 0x53, 0x45, 0x6e, 0x76,
  0x4d, 0x61, 0x70, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x44, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x0d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x43, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x02, 0x42, 0x00, 0x03, 0x00, 0x00, 0x00, 0x1d, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x44, 0x00, 0x03, 0x02, 0x00, 0x00,
  0x23, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x01, 0x44, 0x00,
  0x03, 0x02, 0x00, 0x00, 0x29, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x02, 0x42, 0x00, 0x03, 0x02, 0x00, 0x00, 0x32, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x01, 0x03, 0x43, 0x00, 0x03, 0x02, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x04, 0x44, 0x03,
  0x03, 0x04, 0x00, 0x00, 0x80, 0x70, 0x0f, 0x00, 0x80, 0x70, 0x0f, 0x00,
  0x80, 0x70, 0x0f, 0x00, 0x80, 0x70, 0x0f, 0x00, 0x07, 0x70, 0x00, 0x00,
  0x07, 0x70, 0x00, 0x00, 0x07, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x52, 0x54, 0x53, 0x30, 0xcc, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xcc, 0x00, 0x00, 0x00, 0x1d, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x54, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x70, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x8c, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0xa8, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc4, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x5c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xff, 0xff, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x78, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00,
  0x94, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff,
  0x01, 0x00, 0x00, 0x00, 0xb0, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x49, 0x4c, 0x44, 0x4e, 0x88, 0x00, 0x00, 0x00, 0x00, 0x00, 0x82, 0x00,
  0x43, 0x3a, 0x5c, 0x55, 0x73, 0x65, 0x72, 0x73, 0x5c, 0x6d, 0x61, 0x72,
  0x63, 0x75, 0x5c, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x73,
  0x5c, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x58, 0x54, 0x4b, 0x31, 0x32,
  0x2d, 0x6d, 0x61, 0x69, 0x6e, 0x5c, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74,
  0x58, 0x54, 0x4b, 0x31, 0x32, 0x2d, 0x6d, 0x61, 0x69, 0x6e, 0x5c, 0x53,
  0x72, 0x63, 0x2f, 0x53, 0x68, 0x61, 0x64, 0x65, 0x72, 0x73, 0x2f, 0x43,
  0x6f, 0x6d, 0x70, 0x69, 0x6c, 0x65, 0x64, 0x5c, 0x58, 0x62, 0x6f, 0x78,
  0x47, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x58, 0x62, 0x6f, 0x78, 0x4f, 0x6e,
  0x65, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
  0x4d, 0x61, 0x70, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x5f, 0x56, 0x53,
  0x45, 0x6e, 0x76, 0x4d, 0x61, 0x70, 0x2e, 0x70, 0x64, 0x62, 0x00, 0x00,
  0x48, 0x41, 0x53, 0x48, 0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xef, 0x9e, 0xb1, 0xa7, 0xf1, 0x83, 0x4d, 0x77, 0x26, 0xd7, 0x88, 0xdd,
  0x00, 0xaa, 0xa1, 0xfd, 0x44, 0x58, 0x49, 0x4c, 0xfc, 0x19, 0x00, 0x00,
  0x60, 0x00, 0x01, 0x00, 0x7f, 0x06, 0x00, 0x00, 0x44, 0x58, 0x49, 0x4c,
  0x00, 0x01, 0x00, 0x00, 0x94, 0x00, 0x00, 0x00, 0xf4, 0x0d, 0x00, 0x00,
  0x58, 0x44, 0x41, 0x54, 0x08, 0x00, 0x00, 0x00, 0x24, 0x00, 0x00, 0x00,
  0x07, 0x00, 0x00, 0x00, 0x84, 0x00, 0x00, 0x00, 0x0c, 0x0e, 0x00, 0x00,
  0x10, 0x00, 0x00, 0x00, 0x90, 0x0e, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xa0, 0x0e, 0x00, 0x00, 0x39, 0x03, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xdc, 0x11, 0x00, 0x00, 0x55, 0x03, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x34, 0x15, 0x00, 0x00, 0x34, 0x03, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x68, 0x18, 0x00, 0x00, 0x20, 0x01, 0x00, 0x00,
  0x06, 0x00, 0x00, 0x00, 0x88, 0x19, 0x00, 0x00, 0x5f, 0x00, 0x00, 0x00,
  0x08, 0x00, 0x00, 0x00, 0xe8, 0x19, 0x00, 0x00, 0x11, 0x00, 0x00, 0x00,
  0x60, 0x00, 0x01, 0x00, 0x83, 0x03, 0x00, 0x00, 0x44, 0x58, 0x49, 0x4c,
  0x00, 0x01, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0xf4, 0x0d, 0x00, 0x00,
  0x42, 0x43, 0xc0, 0xde, 0x21, 0x0c, 0x00, 0x00, 0x7a, 0x03, 0x00, 0x00,
  0x0b, 0x82, 0x20, 0x00, 0x02, 0x00, 0x00, 0x00, 0x13, 0x00, 0x00, 0x00,
  0x07, 0x81, 0x23, 0x91, 0x41, 0xc8, 0x04, 0x49, 0x06, 0x10, 0x32, 0x39,
  0x92, 0x01, 0x84, 0x0c, 0x25, 0x05, 0x08, 0x19, 0x1e, 0x04, 0x8b, 0x62,
  0x80, 0x18, 0x45, 0x02, 0x42, 0x92, 0x0b, 0x42, 0xc4, 0x10, 0x32, 0x14,
  0x38, 0x08, 0x18, 0x4b, 0x0a, 0x32, 0x62, 0x88, 0x48, 0x90, 0x14, 0x20,
  0x43, 0x46, 0x88, 0xa5, 0x00, 0x19, 0x32, 0x42, 0xe4, 0x48, 0x0e, 0x90,
  0x11, 0x23, 0xc4, 0x50, 0x41, 0x51, 0x81, 0x8c, 0xe1, 0x83, 0xe5, 0x8a,
  0x04, 0x31, 0x46, 0x06, 0x51, 0x18, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00,
  0x1b, 0x8c, 0xe0, 0xff, 0xff, 0xff, 0xff, 0x07, 0x40, 0x02, 0xa8, 0x0d,
  0x84, 0xf0, 0xff, 0xff, 0xff, 0xff, 0x03, 0x20, 0x6d, 0x30, 0x86, 0xff,
  0xff, 0xff, 0xff, 0x1f, 0x00, 0x09, 0xa8, 0x00, 0x49, 0x18, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x13, 0x82, 0x60, 0x42, 0x20, 0x4c, 0x08, 0x06,
  0x00, 0x00, 0x00, 0x00, 0x89, 0x20, 0x00, 0x00, 0x2f, 0x00, 0x00, 0x00,
  0x32, 0x22, 0x88, 0x09, 0x20, 0x64, 0x85, 0x04, 0x13, 0x23, 0xa4, 0x84,
  0x04, 0x13, 0x23, 0xe3, 0x84, 0xa1, 0x90, 0x14, 0x12, 0x4c, 0x8c, 0x8c,
  0x0b, 0x84, 0xc4, 0x4c, 0x10, 0x88, 0xc1, 0x08, 0x40, 0x09, 0x00, 0x0a,
  0x66, 0x00, 0xe6, 0x08, 0xc0, 0x60, 0x8e, 0x00, 0x29, 0xc6, 0x40, 0x10,
  0x44, 0x41, 0x90, 0x51, 0x0c, 0x80, 0x20, 0x88, 0x62, 0x20, 0xa4, 0x20,
  0x03, 0x31, 0x0c, 0xc3, 0x30, 0x0c, 0xa4, 0x94, 0x61, 0x20, 0x06, 0x62,
  0x8a, 0x32, 0x10, 0xc3, 0x30, 0x0c, 0xc3, 0x30, 0x0c, 0xe4, 0x1c, 0x35,
  0x5c, 0xfe, 0x84, 0x3d, 0x84, 0xe4, 0x73, 0x1b, 0x55, 0xac, 0xc4, 0xe4,
  0x17, 0xb7, 0x8d, 0x88, 0x61, 0x18, 0x06, 0x2a, 0xee, 0x19, 0x2e, 0x7f,
  0xc2, 0x1e, 0x42, 0xf2, 0x43, 0xa0, 0x19, 0x16, 0x02, 0x05, 0x51, 0x21,
  0x20, 0x42, 0x22, 0x68, 0x2a, 0xc5, 0x40, 0x0c, 0xc3, 0x40, 0xd5, 0x1c,
  0x41, 0x50, 0x0c, 0x89, 0x28, 0x08, 0xe2, 0x22, 0x6c, 0x20, 0x60, 0x18,
  0x61, 0x18, 0x86, 0x11, 0x88, 0x21, 0x07, 0xb6, 0x24, 0xe0, 0xae, 0x3a,
  0x1c, 0x69, 0x5a, 0x00, 0xcc, 0xa1, 0x26, 0x3f, 0x05, 0x22, 0x80, 0x21,
  0x26, 0x22, 0x92, 0x50, 0xb3, 0x0d, 0x03, 0xb7, 0x75, 0xdd, 0xb6, 0x71,
  0x5e, 0xe7, 0xd1, 0x97, 0x0c, 0x04, 0x00, 0x00, 0x13, 0x16, 0x72, 0xc0,
  0x87, 0x74, 0x60, 0x87, 0x36, 0x68, 0x87, 0x79, 0x68, 0x03, 0x7c, 0x10,
  0x87, 0x38, 0xd8, 0xf0, 0x0a, 0xe5, 0xd0, 0x06, 0xed, 0xa0, 0x07, 0xe5,
  0xd0, 0x06, 0xf0, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x7a, 0x30, 0x07, 0x72,
  0xd0, 0x06, 0xe9, 0x10, 0x07, 0x7a, 0x30, 0x07, 0x72, 0xd0, 0x06, 0xe9,
  0x80, 0x07, 0x7a, 0x30, 0x07, 0x72, 0xd0, 0x06, 0xe9, 0x10, 0x07, 0x76,
  0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x90, 0x0e, 0x73, 0x20, 0x07, 0x7a,
  0x30, 0x07, 0x72, 0xd0, 0x06, 0xe9, 0x60, 0x07, 0x74, 0xa0, 0x07, 0x76,
  0x40, 0x07, 0x6d, 0x60, 0x0e, 0x71, 0x60, 0x07, 0x7a, 0x30, 0x07, 0x72,
  0xd0, 0x06, 0xe6, 0x30, 0x07, 0x72, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d,
  0x60, 0x0e, 0x76, 0x40, 0x07, 0x7a, 0x60, 0x07, 0x74, 0xd0, 0x06, 0xee,
  0x80, 0x07, 0x7a, 0x10, 0x07, 0x76, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x7a,
  0x60, 0x07, 0x74, 0x30, 0xe4, 0x09, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x60, 0xc8, 0x63, 0x00, 0x01, 0x10, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x90, 0x07, 0x01, 0x02, 0x40, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x21, 0x8f, 0x02, 0x04, 0x40,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x43, 0x1e, 0x06, 0x08,
  0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x86, 0x3c, 0x0e,
  0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x79,
  0x26, 0x20, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18,
  0xf2, 0x54, 0x40, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x30, 0xe4, 0xc1, 0x80, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x20, 0x0b, 0x04, 0x13, 0x00, 0x00, 0x00, 0x32, 0x1e, 0x98, 0x14,
  0x19, 0x11, 0x4c, 0x90, 0x8c, 0x09, 0x26, 0x47, 0xc6, 0x04, 0x43, 0x22,
  0x4a, 0x60, 0x04, 0xa0, 0x20, 0x8a, 0xa1, 0x00, 0x0d, 0xca, 0xa0, 0x3c,
  0xca, 0xa1, 0x08, 0x0a, 0x81, 0x8a, 0x92, 0x18, 0x01, 0x28, 0x84, 0x32,
  0x28, 0x02, 0x02, 0x67, 0x00, 0x28, 0x1c, 0x8b, 0x51, 0x28, 0x90, 0xe4,
  0x3d, 0x90, 0xe4, 0x3d, 0x90, 0xe4, 0x3d, 0x90, 0xe4, 0xbd, 0x13, 0xe4,
  0x4e, 0x90, 0x3b, 0x41, 0x0e, 0x00, 0x11, 0x10, 0x02, 0x00, 0x00, 0x00,
  0x79, 0x18, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x1a, 0x03, 0x4c, 0x90,
  0x46, 0x02, 0x13, 0xc4, 0x36, 0xf8, 0xfa, 0xc2, 0x12, 0x7a, 0xc2, 0xfa,
  0x82, 0x2a, 0x92, 0xfa, 0xa2, 0x42, 0x92, 0x2a, 0x0a, 0x22, 0xfa, 0x9a,
  0x1a, 0x92, 0x0a, 0xa2, 0x1a, 0x42, 0xfa, 0x9a, 0x4a, 0xd2, 0x2a, 0xfa,
  0x62, 0x4a, 0x6a, 0x4a, 0xa2, 0xfa, 0x4a, 0x72, 0xfa, 0x12, 0xca, 0xa2,
  0x2a, 0x9a, 0x62, 0x00, 0xb3, 0x41, 0x08, 0x04, 0x76, 0x64, 0x78, 0x63,
  0x78, 0x62, 0x6f, 0x78, 0x20, 0x32, 0x34, 0x31, 0x30, 0x2e, 0x32, 0x34,
  0x31, 0x30, 0x2e, 0x31, 0x31, 0x31, 0x31, 0x36, 0x2e, 0x31, 0x30, 0x37,
  0x34, 0x31, 0x1b, 0x02, 0x62, 0x82, 0x40, 0x24, 0x13, 0x04, 0x42, 0xd9,
  0x20, 0x18, 0xc7, 0x04, 0x81, 0x58, 0x36, 0x08, 0x46, 0x42, 0xc1, 0x6e,
  0x6e, 0x82, 0x40, 0x30, 0x1b, 0x86, 0x85, 0x39, 0x26, 0x08, 0x60, 0x80,
  0x11, 0x98, 0x20, 0x10, 0xcd, 0x06, 0xe4, 0x70, 0x9e, 0xe3, 0x30, 0x20,
  0x60, 0x43, 0x10, 0x6d, 0x20, 0x00, 0x40, 0x02, 0x26, 0x08, 0x61, 0x90,
  0x6d, 0x08, 0xa8, 0x09, 0x82, 0x00, 0x10, 0xb1, 0x9a, 0x2a, 0x72, 0xb3,
  0x6b, 0x0a, 0x83, 0xe3, 0x32, 0x65, 0xf5, 0x05, 0xf5, 0x36, 0x97, 0x46,
  0x97, 0xf6, 0xe6, 0x36, 0x41, 0x28, 0xa6, 0x09, 0x42, 0x41, 0x6d, 0x08,
  0x8e, 0x09, 0x42, 0x51, 0x4d, 0x10, 0x08, 0x67, 0x82, 0x40, 0x3c, 0x1b,
  0x84, 0xce, 0xdb, 0xb0, 0x1c, 0x58, 0xa6, 0x6d, 0x9a, 0xc1, 0x1d, 0xda,
  0x47, 0xc3, 0xe9, 0x49, 0xaa, 0x29, 0x88, 0x69, 0x82, 0x50, 0x58, 0x13,
  0x04, 0x02, 0xda, 0x20, 0x74, 0x63, 0xb0, 0x61, 0x31, 0xc2, 0x20, 0xd3,
  0x36, 0xcd, 0x10, 0x03, 0x43, 0x23, 0x83, 0x09, 0x02, 0x11, 0x11, 0xa1,
  0x2a, 0xc2, 0x1a, 0x7a, 0x7a, 0x92, 0x22, 0x9a, 0x20, 0x14, 0xd7, 0x06,
  0xa1, 0xeb, 0x36, 0x2c, 0x66, 0x70, 0x06, 0x99, 0xb6, 0x69, 0x06, 0x1a,
  0x98, 0x81, 0x96, 0x06, 0x1b, 0x06, 0x30, 0x28, 0x03, 0x35, 0x60, 0x31,
  0xf4, 0xc4, 0xf4, 0x24, 0xb5, 0x61, 0x39, 0xd8, 0x20, 0xd3, 0x36, 0x34,
  0x30, 0xb8, 0x43, 0xfb, 0x36, 0x04, 0xc6, 0x86, 0xc5, 0x60, 0x83, 0x4c,
  0x73, 0x03, 0x34, 0x30, 0x38, 0x43, 0xfb, 0x36, 0x2c, 0x66, 0x70, 0x06,
  0x99, 0xb6, 0xa1, 0x81, 0x81, 0x06, 0x66, 0xa0, 0xa5, 0xc1, 0x86, 0xa5,
  0x3b, 0x83, 0x4c, 0x73, 0x03, 0x34, 0x30, 0xc4, 0xa0, 0xd3, 0xc8, 0x60,
  0x82, 0x40, 0x48, 0x1b, 0x16, 0x39, 0xc0, 0x32, 0x31, 0xd8, 0x38, 0x83,
  0x93, 0x03, 0xed, 0xdb, 0x50, 0xb4, 0xc1, 0x1b, 0xc0, 0x41, 0x1c, 0xcc,
  0xc1, 0x86, 0x61, 0x0d, 0xe8, 0x00, 0xd8, 0x50, 0x58, 0x57, 0x1d, 0x4c,
  0x40, 0x2b, 0x3c, 0xb1, 0x37, 0x3c, 0x97, 0xb1, 0xb7, 0x36, 0xb8, 0x34,
  0xb6, 0x32, 0x39, 0x97, 0x37, 0x38, 0xba, 0xb4, 0x37, 0xb7, 0xb9, 0x29,
  0x81, 0x50, 0x85, 0x8d, 0xcd, 0xae, 0xcd, 0x25, 0x8d, 0xac, 0xcc, 0x8d,
  0x6e, 0x4a, 0x40, 0x54, 0x21, 0xc3, 0x73, 0xb1, 0x2b, 0x93, 0x9b, 0x4b,
  0x7b, 0x73, 0x9b, 0x12, 0x1c, 0x4d, 0xc8, 0xf0, 0x5c, 0xec, 0xc2, 0xd8,
  0xec, 0xca, 0xe4, 0xa6, 0x04, 0x49, 0x1d, 0x32, 0x3c, 0x97, 0x39, 0xb4,
  0x30, 0xb2, 0x32, 0xb9, 0xa6, 0x37, 0xb2, 0x32, 0xb6, 0x29, 0x01, 0x53,
  0x86, 0x0c, 0xcf, 0x45, 0xae, 0x6c, 0xee, 0xad, 0x4e, 0x6e, 0xac, 0x6c,
  0x6e, 0x4a, 0x20, 0xd5, 0x21, 0xc3, 0x73, 0xb1, 0x4b, 0x2b, 0xbb, 0x4b,
  0x22, 0x9b, 0xa2, 0x0b, 0xa3, 0x2b, 0x9b, 0x12, 0x50, 0x75, 0xc8, 0xf0,
  0x5c, 0xca, 0xdc, 0xe8, 0xe4, 0xf2, 0xa0, 0xde, 0xd2, 0xdc, 0xe8, 0xe6,
  0xa6, 0x04, 0x75, 0x00, 0x79, 0x18, 0x00, 0x00, 0x50, 0x00, 0x00, 0x00,
  0x33, 0x08, 0x80, 0x1c, 0xc4, 0xe1, 0x1c, 0x66, 0x14, 0x01, 0x3d, 0x88,
  0x43, 0x38, 0x84, 0xc3, 0x8c, 0x42, 0x80, 0x07, 0x79, 0x78, 0x07, 0x73,
  0x98, 0x71, 0x0c, 0xe6, 0x00, 0x0f, 0xed, 0x10, 0x0e, 0xf4, 0x80, 0x0e,
  0x33, 0x0c, 0x42, 0x1e, 0xc2, 0xc1, 0x1d, 0xce, 0xa1, 0x1c, 0x66, 0x30,
  0x05, 0x3d, 0x88, 0x43, 0x38, 0x84, 0x83, 0x1b, 0xcc, 0x03, 0x3d, 0xc8,
  0x43, 0x3d, 0x8c, 0x03, 0x3d, 0xcc, 0x78, 0x8c, 0x74, 0x70, 0x07, 0x7b,
  0x08, 0x07, 0x79, 0x48, 0x87, 0x70, 0x70, 0x07, 0x7a, 0x70, 0x03, 0x76,
  0x78, 0x87, 0x70, 0x20, 0x87, 0x19, 0xcc, 0x11, 0x0e, 0xec, 0x90, 0x0e,
  0xe1, 0x30, 0x0f, 0x6e, 0x30, 0x0f, 0xe3, 0xf0, 0x0e, 0xf0, 0x50, 0x0e,
  0x33, 0x10, 0xc4, 0x1d, 0xde, 0x21, 0x1c, 0xd8, 0x21, 0x1d, 0xc2, 0x61,
  0x1e, 0x66, 0x30, 0x89, 0x3b, 0xbc, 0x83, 0x3b, 0xd0, 0x43, 0x39, 0xb4,
  0x03, 0x3c, 0xbc, 0x83, 0x3c, 0x84, 0x03, 0x3b, 0xcc, 0xf0, 0x14, 0x76,
  0x60, 0x07, 0x7b, 0x68, 0x07, 0x37, 0x68, 0x87, 0x72, 0x68, 0x07, 0x37,
  0x80, 0x87, 0x70, 0x90, 0x87, 0x70, 0x60, 0x07, 0x76, 0x28, 0x07, 0x76,
  0xf8, 0x05, 0x76, 0x78, 0x87, 0x77, 0x80, 0x87, 0x5f, 0x08, 0x87, 0x71,
  0x18, 0x87, 0x72, 0x98, 0x87, 0x79, 0x98, 0x81, 0x2c, 0xee, 0xf0, 0x0e,
  0xee, 0xe0, 0x0e, 0xf5, 0xc0, 0x0e, 0xec, 0x30, 0x03, 0x62, 0xc8, 0xa1,
  0x1c, 0xe4, 0xa1, 0x1c, 0xcc, 0xa1, 0x1c, 0xe4, 0xa1, 0x1c, 0xdc, 0x61,
  0x1c, 0xca, 0x21, 0x1c, 0xc4, 0x81, 0x1d, 0xca, 0x61, 0x06, 0xd6, 0x90,
  0x43, 0x39, 0xc8, 0x43, 0x39, 0x98, 0x43, 0x39, 0xc8, 0x43, 0x39, 0xb8,
  0xc3, 0x38, 0x94, 0x43, 0x38, 0x88, 0x03, 0x3b, 0x94, 0xc3, 0x2f, 0xbc,
  0x83, 0x3c, 0xfc, 0x82, 0x3b, 0xd4, 0x03, 0x3b, 0xb0, 0xc3, 0x0c, 0xc4,
  0x21, 0x07, 0x7c, 0x70, 0x03, 0x7a, 0x28, 0x87, 0x76, 0x80, 0x87, 0x19,
  0xca, 0xc3, 0x0e, 0xec, 0x60, 0x0f, 0xed, 0xe0, 0x06, 0xec, 0xf0, 0x0e,
  0xef, 0x00, 0x0f, 0x33, 0x22, 0x88, 0x1c, 0xf0, 0xc1, 0x0d, 0xc8, 0x41,
  0x1c, 0xce, 0xc1, 0x0d, 0xec, 0x21, 0x1c, 0xe4, 0x81, 0x1d, 0xc2, 0x21,
  0x1f, 0xde, 0xa1, 0x1e, 0xe8, 0x01, 0x00, 0x00, 0x71, 0x20, 0x00, 0x00,
  0x23, 0x00, 0x00, 0x00, 0x06, 0x80, 0xbc, 0xac, 0xd7, 0x54, 0x26, 0xf0,
  0x98, 0xc1, 0x36, 0x5c, 0xbe, 0xf3, 0xf8, 0x42, 0x40, 0x15, 0x05, 0x11,
  0x95, 0x0e, 0x30, 0x94, 0x84, 0x01, 0x08, 0x98, 0x5f, 0xdc, 0xb6, 0x21,
  0x48, 0xc3, 0xe5, 0x3b, 0x8f, 0x2f, 0x44, 0x04, 0x30, 0x11, 0x21, 0xd0,
  0x0c, 0x0b, 0x61, 0x03, 0xce, 0x70, 0xf9, 0xce, 0xe3, 0x0f, 0xce, 0x74,
  0xfb, 0xc5, 0x6d, 0x5b, 0x81, 0x33, 0x5c, 0xbe, 0xf3, 0xf8, 0x83, 0x33,
  0xe1, 0x7e, 0x71, 0xdb, 0x16, 0x30, 0x0d, 0x97, 0xef, 0x3c, 0xfe, 0xe2,
  0x00, 0x83, 0xd8, 0x3c, 0xd4, 0xe4, 0x17, 0xb7, 0x6d, 0x02, 0xd5, 0x70,
  0xf9, 0xce, 0xe3, 0x4b, 0x93, 0x13, 0x11, 0x28, 0x35, 0x3d, 0xd4, 0xe4,
  0x17, 0xb7, 0x6d, 0x07, 0xd2, 0x70, 0xf9, 0xce, 0xe3, 0x4f, 0x44, 0x34,
  0x21, 0x40, 0x84, 0xf9, 0xc5, 0x6d, 0x1b, 0xc1, 0x33, 0x5c, 0xbe, 0xf3,
  0xf8, 0x54, 0x03, 0x44, 0x98, 0x5f, 0xdc, 0x36, 0x00, 0x00, 0x00, 0x00,
  0x61, 0x20, 0x00, 0x00, 0xd3, 0x01, 0x00, 0x00, 0x13, 0x04, 0x41, 0x2c,
  0x10, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x74, 0x8d, 0x00, 0x50,
  0x51, 0x02, 0x44, 0x14, 0x5c, 0x61, 0x14, 0x57, 0xd9, 0x95, 0xc2, 0x0c,
  0x40, 0xb9, 0x95, 0x4c, 0xc9, 0x95, 0x46, 0x71, 0x14, 0x45, 0x89, 0x14,
  0x49, 0x99, 0x94, 0x44, 0xa1, 0x94, 0x4a, 0xb1, 0x94, 0x0b, 0x0d, 0x63,
  0x04, 0x20, 0x08, 0x82, 0x20, 0x18, 0x8c, 0x11, 0x80, 0x20, 0x08, 0xe2,
  0xdf, 0x08, 0xc0, 0x18, 0x01, 0x08, 0x82, 0x20, 0x08, 0x0a, 0x00, 0x00,
  0x23, 0x06, 0x09, 0x00, 0x82, 0x60, 0x80, 0xb1, 0x01, 0xd4, 0xa9, 0x81,
  0x1a, 0x68, 0x23, 0x06, 0x09, 0x00, 0x82, 0x60, 0x60, 0xd0, 0xc1, 0x18,
  0x90, 0xc1, 0x1a, 0x84, 0x01, 0x35, 0x62, 0x90, 0x00, 0x20, 0x08, 0x06,
  0x46, 0x1d, 0x90, 0x41, 0x19, 0xb0, 0xc1, 0x56, 0x8d, 0x18, 0x24, 0x00,
  0x08, 0x82, 0x81, 0x61, 0x07, 0x65, 0xe0, 0x06, 0x6d, 0x30, 0x06, 0xd6,
  0x88, 0x41, 0x02, 0x80, 0x20, 0x18, 0x18, 0x77, 0x60, 0x06, 0x6f, 0xe0,
  0x06, 0xdd, 0x35, 0x62, 0x90, 0x00, 0x20, 0x08, 0x06, 0x06, 0x1e, 0x9c,
  0x01, 0x1c, 0xbc, 0x81, 0x18, 0x60, 0x23, 0x06, 0x09, 0x00, 0x82, 0x60,
  0x60, 0xe4, 0x01, 0x1a, 0xc0, 0x01, 0x1c, 0x98, 0x41, 0x36, 0x62, 0x90,
  0x00, 0x20, 0x08, 0x06, 0x86, 0x1e, 0xa4, 0x41, 0x1c, 0xc4, 0x01, 0x18,
  0x68, 0x23, 0x06, 0x09, 0x00, 0x82, 0x60, 0x60, 0xec, 0x81, 0x1a, 0xc8,
  0x81, 0x1c, 0x94, 0xc1, 0x36, 0x62, 0x90, 0x00, 0x20, 0x08, 0x06, 0x06,
  0x1f, 0xac, 0xc1, 0x1c, 0xcc, 0xc1, 0x19, 0x70, 0x23, 0x06, 0x07, 0x00,
  0x82, 0x60, 0x30, 0xe1, 0xc1, 0xa7, 0x64, 0xa3, 0x09, 0x01, 0x30, 0x9a,
  0x20, 0x04, 0xa3, 0x09, 0x83, 0x30, 0x9a, 0x40, 0x0c, 0x23, 0x06, 0x07,
  0x00, 0x82, 0x60, 0x30, 0xf5, 0x01, 0x19, 0x3c, 0xdd, 0x68, 0x42, 0x00,
  0x8c, 0x26, 0x08, 0xc1, 0x68, 0xc2, 0x20, 0x8c, 0x26, 0x10, 0xc3, 0x88,
  0xc1, 0x01, 0x80, 0x20, 0x18, 0x4c, 0xa2, 0x90, 0x06, 0x54, 0x1e, 0x8c,
  0x26, 0x04, 0xc0, 0x68, 0x82, 0x10, 0x8c, 0x26, 0x0c, 0xc2, 0x68, 0x02,
  0x31, 0x98, 0x33, 0xc9, 0x67, 0xc4, 0x00, 0x01, 0x40, 0x10, 0x0c, 0xaa,
  0x53, 0x80, 0x83, 0xc9, 0x09, 0x46, 0x0c, 0x10, 0x00, 0x04, 0xc1, 0xa0,
  0x42, 0x85, 0x38, 0x98, 0x9c, 0x60, 0xc4, 0x00, 0x01, 0x40, 0x10, 0x0c,
  0xaa, 0x54, 0x90, 0x83, 0xc9, 0x09, 0xac, 0xb9, 0xe4, 0x33, 0x62, 0x80,
  0x00, 0x20, 0x08, 0x06, 0xd5, 0x2a, 0xd0, 0xc1, 0xd5, 0x04, 0x23, 0x06,
  0x08, 0x00, 0x82, 0x60, 0x50, 0xb1, 0x42, 0x1d, 0x5c, 0x4d, 0x30, 0x62,
  0x80, 0x00, 0x20, 0x08, 0x06, 0x55, 0x2b, 0xd8, 0xc1, 0xd5, 0x04, 0xc6,
  0x6c, 0xf2, 0x19, 0x31, 0x40, 0x00, 0x10, 0x04, 0x83, 0xea, 0x15, 0xf0,
  0x60, 0x63, 0x82, 0x11, 0x03, 0x04, 0x00, 0x41, 0x30, 0xa8, 0x60, 0x21,
  0x0f, 0x36, 0x26, 0x18, 0x31, 0x40, 0x00, 0x10, 0x04, 0x83, 0x2a, 0x16,
  0xf4, 0x60, 0x63, 0x82, 0x11, 0x83, 0x03, 0x00, 0x41, 0x30, 0x98, 0x66,
  0x41, 0x0f, 0xca, 0x40, 0x0e, 0x46, 0x13, 0x02, 0x60, 0x34, 0x41, 0x08,
  0x46, 0x13, 0x06, 0xc1, 0x86, 0x26, 0x3e, 0x36, 0x28, 0xf1, 0xb1, 0xe1,
  0x88, 0xcf, 0x88, 0xc1, 0x02, 0x80, 0x20, 0x18, 0x28, 0xbd, 0xe0, 0x07,
  0x83, 0x10, 0x0c, 0x42, 0x30, 0x62, 0x60, 0x00, 0x20, 0x08, 0x06, 0x4c,
  0x2f, 0xf8, 0x41, 0x30, 0x62, 0x70, 0x00, 0x20, 0x08, 0x06, 0x13, 0x2f,
  0x8c, 0x82, 0x1b, 0xe8, 0xc1, 0x68, 0x42, 0x00, 0x8c, 0x26, 0x08, 0xc1,
  0x68, 0xc2, 0x20, 0x8c, 0x18, 0x1c, 0x00, 0x08, 0x82, 0xc1, 0x04, 0x0e,
  0xa7, 0x20, 0x07, 0x7d, 0x30, 0x9a, 0x10, 0x00, 0xa3, 0x09, 0x42, 0x30,
  0x9a, 0x30, 0x08, 0x23, 0x06, 0x07, 0x00, 0x82, 0x60, 0x30, 0x91, 0xc3,
  0x2a, 0xd8, 0x01, 0x28, 0x8c, 0x26, 0x04, 0xc0, 0x68, 0x82, 0x10, 0x8c,
  0x26, 0x0c, 0x82, 0x2d, 0x77, 0x20, 0x9f, 0x11, 0x03, 0x04, 0x00, 0x41,
  0x30, 0xa8, 0xd0, 0x21, 0x16, 0xee, 0x60, 0x09, 0x46, 0x0c, 0x10, 0x00,
  0x04, 0xc1, 0xa0, 0x4a, 0x07, 0x59, 0xb8, 0x83, 0x25, 0x30, 0x45, 0x0f,
  0xe4, 0x33, 0x62, 0x80, 0x00, 0x20, 0x08, 0x06, 0xd5, 0x3a, 0xd0, 0x82,
  0x1e, 0x28, 0xc1, 0x88, 0x01, 0x02, 0x80, 0x20, 0x18, 0x54, 0xec, 0x50,
  0x0b, 0x7a, 0xa0, 0x04, 0x96, 0xf4, 0x81, 0x7c, 0x46, 0x0c, 0x10, 0x00,
  0x04, 0xc1, 0xa0, 0x72, 0x87, 0x5b, 0xe8, 0x83, 0x24, 0x18, 0x31, 0x40,
  0x00, 0x10, 0x04, 0x83, 0xea, 0x1d, 0x70, 0xa1, 0x0f, 0x92, 0x60, 0xc4,
  0x60, 0x01, 0x40, 0x10, 0x0c, 0x14, 0x7a, 0xa8, 0x85, 0x83, 0x08, 0x0e,
  0x22, 0x18, 0x31, 0x30, 0x00, 0x10, 0x04, 0x03, 0x86, 0x1e, 0x6a, 0x21,
  0xb0, 0x20, 0x91, 0x8f, 0x09, 0x87, 0x7c, 0x6c, 0x28, 0xe4, 0x33, 0x62,
  0x70, 0x00, 0x20, 0x08, 0x06, 0x93, 0x3d, 0xf4, 0x02, 0x2a, 0xa8, 0xc3,
  0x68, 0x42, 0x00, 0x8c, 0x26, 0x08, 0xc1, 0x68, 0xc2, 0x20, 0x8c, 0x18,
  0x1c, 0x00, 0x08, 0x82, 0xc1, 0xa4, 0x0f, 0xe1, 0xc0, 0x0a, 0xf0, 0x30,
  0x9a, 0x10, 0x00, 0xa3, 0x09, 0x42, 0x30, 0x9a, 0x30, 0x08, 0x23, 0x06,
  0x07, 0x00, 0x82, 0x60, 0x30, 0xf9, 0x43, 0x39, 0xc0, 0x02, 0x39, 0x8c,
  0x26, 0x04, 0xc0, 0x68, 0x82, 0x10, 0x8c, 0x26, 0x0c, 0xc2, 0x88, 0xc1,
  0x01, 0x80, 0x20, 0x18, 0x4c, 0x22, 0x91, 0x0e, 0xb4, 0xd0, 0x0f, 0xa3,
  0x09, 0x01, 0x30, 0x9a, 0x20, 0x04, 0xa3, 0x09, 0x83, 0x30, 0x62, 0x70,
  0x00, 0x20, 0x08, 0x06, 0x93, 0x49, 0xb4, 0x03, 0x2e, 0x80, 0xc4, 0x68,
  0x42, 0x00, 0x8c, 0x26, 0x08, 0xc1, 0x68, 0xc2, 0x20, 0x8c, 0x18, 0x1c,
  0x00, 0x08, 0x82, 0xc1, 0xa4, 0x12, 0xf1, 0xc0, 0x0b, 0xe5, 0x30, 0x9a,
  0x10, 0x00, 0xa3, 0x09, 0x42, 0x30, 0x9a, 0x30, 0x08, 0x16, 0x0e, 0x56,
  0x7c, 0x4c, 0x1c, 0xac, 0xf8, 0xd8, 0x38, 0x40, 0xf1, 0x31, 0x72, 0x80,
  0xe2, 0x63, 0xe5, 0xa0, 0xc4, 0xc7, 0xcc, 0x41, 0x89, 0x8f, 0x85, 0x41,
  0x27, 0x1f, 0x43, 0x87, 0x20, 0x3e, 0x23, 0x06, 0x08, 0x00, 0x82, 0x60,
  0x50, 0xd5, 0x84, 0x3f, 0x20, 0x62, 0x10, 0x8c, 0x18, 0x20, 0x00, 0x08,
  0x82, 0x41, 0x65, 0x13, 0xff, 0x80, 0x88, 0x41, 0x60, 0x65, 0x90, 0xc9,
  0xc7, 0xd8, 0x21, 0x88, 0xcf, 0x88, 0x01, 0x02, 0x80, 0x20, 0x18, 0x54,
  0x39, 0x21, 0x12, 0x8a, 0x19, 0x04, 0x23, 0x06, 0x08, 0x00, 0x82, 0x60,
  0x50, 0xe9, 0xc4, 0x48, 0x28, 0x66, 0x10, 0x58, 0x1a, 0x54, 0xf2, 0x31,
  0x78, 0x08, 0xe2, 0x33, 0x62, 0x80, 0x00, 0x20, 0x08, 0x06, 0x55, 0x4f,
  0x98, 0x04, 0xa3, 0x06, 0xc1, 0x88, 0x01, 0x02, 0x80, 0x20, 0x18, 0x54,
  0x3e, 0x71, 0x12, 0x8c, 0x1a, 0x04, 0xc3, 0x11, 0x09, 0x3d, 0x10, 0xdf,
  0x70, 0x84, 0x51, 0x0f, 0xc4, 0x37, 0x1c, 0x31, 0xd8, 0x03, 0xf1, 0x4d,
  0x37, 0xdc, 0x03, 0x3e, 0x0c, 0xd3, 0x0d, 0xf8, 0x90, 0x0f, 0xc3, 0x74,
  0x43, 0x3e, 0xe8, 0xc3, 0x60, 0xc3, 0x23, 0x1f, 0x1b, 0x18, 0xf9, 0xd8,
  0x90, 0xc8, 0xc7, 0x06, 0x37, 0x90, 0xcf, 0x88, 0x01, 0x02, 0x80, 0x20,
  0x18, 0x54, 0x69, 0x21, 0x13, 0xc3, 0x19, 0x04, 0x23, 0x06, 0x08, 0x00,
  0x82, 0x60, 0x50, 0xa9, 0xc5, 0x4c, 0x0c, 0x60, 0x10, 0x98, 0x01, 0x07,
  0xf2, 0x19, 0x31, 0x40, 0x00, 0x10, 0x04, 0x83, 0x8a, 0x2d, 0x6a, 0xc2,
  0x48, 0x83, 0x60, 0xc4, 0x00, 0x01, 0x40, 0x10, 0x0c, 0xaa, 0xb6, 0xb0,
  0x09, 0x43, 0x0c, 0x02, 0x4b, 0xe4, 0x40, 0x3e, 0x23, 0x06, 0x08, 0x00,
  0x82, 0x60, 0x50, 0xbd, 0x05, 0x4e, 0x24, 0x6b, 0x10, 0x8c, 0x18, 0x20,
  0x00, 0x08, 0x82, 0x41, 0x05, 0x17, 0x39, 0x91, 0x90, 0x41, 0x30, 0x62,
  0x70, 0x00, 0x20, 0x08, 0x06, 0x93, 0x5c, 0xe4, 0x04, 0x49, 0x9c, 0xc5,
  0x68, 0x42, 0x00, 0x8c, 0x26, 0x08, 0xc1, 0x68, 0xc2, 0x20, 0xd8, 0xb0,
  0xc8, 0xc7, 0x86, 0x44, 0x3e, 0x36, 0x1c, 0xf2, 0x19, 0x31, 0x38, 0x00,
  0x10, 0x04, 0x83, 0x29, 0x2f, 0xc0, 0x62, 0x25, 0xe2, 0x62, 0x34, 0x21,
  0x00, 0x46, 0x13, 0x84, 0x60, 0x34, 0x61, 0x10, 0xec, 0x18, 0xe0, 0x63,
  0xc7, 0x00, 0x1f, 0x3b, 0x06, 0xf8, 0x8c, 0x18, 0x1c, 0x00, 0x08, 0x82,
  0xc1, 0x04, 0x1a, 0x67, 0x21, 0x13, 0x3a, 0x31, 0x9a, 0x10, 0x00, 0xa3,
  0x09, 0x42, 0x30, 0x9a, 0x30, 0x08, 0xa3, 0x09, 0xc4, 0x30, 0x62, 0x70,
  0x00, 0x20, 0x08, 0x06, 0x53, 0x69, 0xb0, 0xc5, 0x4d, 0xf8, 0xc4, 0x68,
  0x42, 0x00, 0x8c, 0x26, 0x08, 0xc1, 0x68, 0xc2, 0x20, 0x8c, 0x26, 0x10,
  0xc3, 0x88, 0xc1, 0x01, 0x80, 0x20, 0x18, 0x4c, 0xaa, 0x11, 0x17, 0x3c,
  0x21, 0x16, 0xa3, 0x09, 0x01, 0x30, 0x9a, 0x20, 0x04, 0xa3, 0x09, 0x83,
  0x30, 0x9a, 0x40, 0x0c, 0x23, 0x06, 0x07, 0x00, 0x82, 0x60, 0x30, 0xbd,
  0x86, 0x5d, 0x84, 0x85, 0x59, 0x8c, 0x26, 0x04, 0xc0, 0x68, 0x82, 0x10,
  0x8c, 0x26, 0x0c, 0xc2, 0x68, 0x02, 0x31, 0xd8, 0x04, 0x16, 0xf2, 0x19,
  0x31, 0x40, 0x00, 0x10, 0x04, 0x83, 0x8a, 0x36, 0xfa, 0x02, 0x2c, 0xa6,
  0x60, 0xc4, 0x00, 0x01, 0x40, 0x10, 0x0c, 0xaa, 0xda, 0xf0, 0x0b, 0xb0,
  0x98, 0x82, 0x11, 0x03, 0x04, 0x00, 0x41, 0x30, 0xa8, 0x6c, 0xe3, 0x2f,
  0xc0, 0x62, 0x0a, 0x4c, 0x22, 0x0b, 0xf9, 0x8c, 0x18, 0x20, 0x00, 0x08,
  0x82, 0x41, 0x85, 0x1b, 0xa1, 0x41, 0x16, 0x52, 0x30, 0x62, 0x80, 0x00,
  0x20, 0x08, 0x06, 0x55, 0x6e, 0x88, 0x06, 0x59, 0x48, 0xc1, 0x88, 0x01,
  0x02, 0x80, 0x20, 0x18, 0x54, 0xba, 0x31, 0x1a, 0x64, 0x21, 0x05, 0x16,
  0xa1, 0x85, 0x7c, 0x46, 0x0c, 0x10, 0x00, 0x04, 0xc1, 0xa0, 0xe2, 0x8d,
  0xd2, 0x40, 0x8b, 0x28, 0x18, 0x31, 0x40, 0x00, 0x10, 0x04, 0x83, 0xaa,
  0x37, 0x4c, 0x03, 0x2d, 0xa2, 0x60, 0xc4, 0x00, 0x01, 0x40, 0x10, 0x0c,
  0x2a, 0xdf, 0x38, 0x0d, 0xb4, 0x88, 0x02, 0x83, 0xd8, 0x42, 0x3e, 0x23,
  0x06, 0x08, 0x00, 0x82, 0x60, 0x50, 0x81, 0x47, 0x6a, 0xb0, 0x05, 0x14,
  0x8c, 0x18, 0x20, 0x00, 0x08, 0x82, 0x41, 0x15, 0x1e, 0xaa, 0xc1, 0x16,
  0x50, 0x30, 0x62, 0x80, 0x00, 0x20, 0x08, 0x06, 0x95, 0x78, 0xac, 0x06,
  0x5b, 0x40, 0xc1, 0x68, 0x82, 0x1c, 0x0c, 0x23, 0x06, 0x07, 0x00, 0x82,
  0x60, 0x30, 0x95, 0x07, 0x6b, 0xdc, 0x85, 0x78, 0x8c, 0x26, 0x04, 0xc0,
  0x88, 0xc1, 0x01, 0x80, 0x20, 0x18, 0x4c, 0xe7, 0xe1, 0x1a, 0x79, 0x01,
  0x1b, 0xa3, 0x09, 0x01, 0x30, 0x9a, 0x20, 0x04, 0xa3, 0x09, 0x83, 0x30,
  0x9a, 0x40, 0x0c, 0x23, 0x06, 0x0d, 0x00, 0x82, 0x60, 0xe0, 0xb4, 0x87,
  0x6d, 0xe0, 0xc5, 0x5d, 0xd8, 0x45, 0x5d, 0x10, 0x83, 0x10, 0x8c, 0x18,
  0x18, 0x00, 0x08, 0x82, 0x01, 0xf3, 0x1e, 0xe3, 0x11, 0xd8, 0x4c, 0xdc,
  0x84, 0x7c, 0x4c, 0x34, 0x82, 0xf8, 0x58, 0x4d, 0xe0, 0x84, 0x7c, 0x8c,
  0x34, 0x82, 0xf8, 0xd8, 0x4d, 0xe4, 0x84, 0x7c, 0xcc, 0x34, 0x82, 0xf8,
  0x8c, 0x18, 0x2c, 0x00, 0x08, 0x82, 0x81, 0x72, 0x1f, 0xb8, 0x51, 0x0c,
  0x41, 0x48, 0x80, 0xc4, 0x3f, 0x58, 0xb0, 0x1a, 0xf2, 0xb1, 0x60, 0x24,
  0xe4, 0x63, 0xc2, 0x48, 0xc8, 0xc7, 0x86, 0x91, 0x90, 0x8f, 0x29, 0x43,
  0x7c, 0x2c, 0x19, 0xe2, 0x63, 0xc8, 0x10, 0x9f, 0x11, 0x83, 0x04, 0x00,
  0x41, 0x30, 0x40, 0x40, 0x44, 0x3c, 0xf0, 0x03, 0x3f, 0xdc, 0xe3, 0x0f,
  0x46, 0x0c, 0x12, 0x00, 0x04, 0xc1, 0x00, 0x01, 0x11, 0xf1, 0xc0, 0x0f,
  0xfc, 0x38, 0x0f, 0x3f, 0x18, 0x31, 0x48, 0x00, 0x10, 0x04, 0x03, 0x04,
  0x44, 0xc4, 0x03, 0x3f, 0xf0, 0x63, 0x3d, 0xfa, 0x60, 0xc4, 0x20, 0x01,
  0x40, 0x10, 0x0c, 0x10, 0x10, 0x11, 0x0f, 0xfc, 0xc0, 0x0f, 0xf6, 0xc0,
  0x46, 0x0c, 0x12, 0x00, 0x04, 0xc1, 0x00, 0x01, 0x11, 0xf1, 0xc8, 0x0f,
  0xfc, 0x70, 0x0f, 0x6b, 0xc4, 0x20, 0x01, 0x40, 0x10, 0x0c, 0x10, 0x10,
  0x11, 0x8f, 0xfc, 0xc0, 0x8f, 0xf3, 0xb0, 0x46, 0x0c, 0x12, 0x00, 0x04,
  0xc1, 0x00, 0x01, 0x11, 0xf1, 0xc8, 0x0f, 0xfc, 0x58, 0x0f, 0x6b, 0xc4,
  0x20, 0x01, 0x40, 0x10, 0x0c, 0x10, 0x10, 0x11, 0x8f, 0xfc, 0xc0, 0x0f,
  0xf6, 0x78, 0x46, 0x0c, 0x12, 0x00, 0x04, 0xc1, 0x00, 0x01, 0x11, 0xf1,
  0x88, 0x0f, 0xfc, 0x70, 0x8f, 0xd6, 0x18, 0x31, 0x48, 0x00, 0x10, 0x04,
  0x03, 0x04, 0x44, 0xc4, 0x23, 0x3e, 0xf0, 0xe3, 0x3c, 0x58, 0x63, 0xc4,
  0x20, 0x01, 0x40, 0x10, 0x0c, 0x10, 0x10, 0x11, 0x0f, 0xfa, 0xc0, 0x0f,
  0xf7, 0x18, 0x46, 0x0c, 0x12, 0x00, 0x04, 0xc1, 0x00, 0x01, 0x11, 0xf1,
  0xa0, 0x0f, 0xfc, 0x38, 0x0f, 0x61, 0xc4, 0x20, 0x01, 0x40, 0x10, 0x0c,
  0x10, 0x10, 0x11, 0x0f, 0xfa, 0xc0, 0x8f, 0xf5, 0x08, 0x46, 0x0c, 0x12,
  0x00, 0x04, 0xc1, 0x00, 0x01, 0x11, 0xf1, 0x80, 0x0f, 0xfc, 0x70, 0x8f,
  0x32, 0x18, 0x31, 0x48, 0x00, 0x10, 0x04, 0x03, 0x04, 0x44, 0xc4, 0x03,
  0x3e, 0xf0, 0xe3, 0x3c, 0xc2, 0x60, 0xc4, 0x20, 0x01, 0x40, 0x10, 0x0c,
  0x10, 0x10, 0x11, 0x0f, 0xf8, 0xc0, 0x8f, 0xf5, 0xe8, 0x46, 0x0c, 0x12,
  0x00, 0x04, 0xc1, 0x00, 0x01, 0x11, 0xf1, 0x80, 0x0f, 0xfc, 0x60, 0x8f,
  0x0c, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xef, 0x9e, 0xb1, 0xa7,
  0xf1, 0x83, 0x4d, 0x77, 0x26, 0xd7, 0x88, 0xdd, 0x00, 0xaa, 0xa1, 0xfd,
  0x17, 0x00, 0x01, 0x00, 0x20, 0xd4, 0x17, 0x00, 0x78, 0x01, 0xed, 0x98,
  0x41, 0x8b, 0x1c, 0x55, 0x10, 0xc7, 0xdf, 0x7b, 0xfd, 0xfa, 0x6d, 0x77,
  0x6f, 0x6d, 0x4d, 0xcf, 0x9b, 0x9e, 0x9e, 0xcd, 0xd8, 0xdb, 0xd9, 0x95,
  0x4e, 0x33, 0x19, 0x26, 0x71, 0x15, 0x15, 0x0d, 0xee, 0x66, 0xd4, 0x34,
  0x04, 0x24, 0xe4, 0x92, 0x63, 0x16, 0xbc, 0x84, 0x9c, 0x02, 0x01, 0x41,
  0x2f, 0x32, 0x8e, 0x24, 0x90, 0x3d, 0xe4, 0x0b, 0x44, 0x50, 0x10, 0x06,
  0x44, 0xf1, 0xe2, 0xc1, 0xeb, 0x46, 0x77, 0x16, 0x05, 0x2f, 0x86, 0x41,
  0xf0, 0xe4, 0x27, 0x50, 0x11, 0x03, 0xc2, 0x5e, 0x64, 0x53, 0x35, 0xdb,
  0x63, 0x36, 0xeb, 0x9c, 0x15, 0xa5, 0x7f, 0x50, 0xf5, 0xef, 0x57, 0xfd,
  0x7a, 0xa6, 0xab, 0x5e, 0x9f, 0xfe, 0x3f, 0xb4, 0xc4, 0x94, 0xa7, 0xb6,
  0x6e, 0xff, 0xca, 0xfa, 0xf3, 0xdb, 0xdf, 0xad, 0x01, 0x0a, 0xe1, 0xf2,
  0x82, 0xd0, 0x9c, 0x88, 0x9b, 0x11, 0x67, 0xd2, 0x72, 0xbf, 0xe1, 0x54,
  0xc2, 0xa5, 0x37, 0x28, 0x98, 0x3e, 0xa7, 0x12, 0x49, 0xf1, 0xc1, 0xbd,
  0x13, 0x9b, 0x14, 0xe7, 0xe9, 0xf2, 0x6f, 0x78, 0x14, 0xd7, 0x29, 0xae,
  0x51, 0x30, 0x8a, 0x53, 0x09, 0xdf, 0x9b, 0xc7, 0xec, 0xbd, 0x8e, 0xe2,
  0x50, 0xf0, 0x7f, 0xb1, 0x1e, 0xe7, 0xc3, 0x3f, 0x36, 0x36, 0x48, 0x2e,
  0x50, 0x08, 0xfd, 0xd6, 0x8d, 0xcd, 0x52, 0xb9, 0x26, 0xbe, 0xfc, 0xe5,
  0xf4, 0xdc, 0xf7, 0xfa, 0x2f, 0x33, 0x3b, 0x27, 0xe6, 0xcd, 0xa3, 0x03,
  0x2d, 0x99, 0x95, 0x1e, 0xc4, 0x9c, 0x1f, 0x9f, 0xe3, 0x7e, 0xb9, 0x9e,
  0x9d, 0xe5, 0x57, 0x14, 0x3c, 0xd3, 0x79, 0x1c, 0x10, 0xac, 0xf3, 0xe0,
  0x33, 0x30, 0xe2, 0xf2, 0xba, 0x91, 0x77, 0x56, 0x8d, 0x1a, 0x87, 0xb4,
  0xfc, 0xc7, 0xe1, 0x6f, 0x76, 0xd6, 0x97, 0x91, 0x87, 0x5d, 0x18, 0x75,
  0xd8, 0xb9, 0x71, 0xe6, 0x7d, 0x25, 0xff, 0x3f, 0x78, 0x06, 0x96, 0x82,
  0xe1, 0x59, 0xf0, 0x7a, 0xc6, 0xbf, 0x72, 0x28, 0x15, 0x15, 0x15, 0x15,
  0x15, 0x15, 0x15, 0x15, 0x15, 0x15, 0x15, 0x15, 0x15, 0x15, 0x15, 0x15,
  0xc7, 0x59, 0x1b, 0xee, 0x78, 0x07, 0xc5, 0x36, 0xbb, 0x15, 0x0b, 0xce,
  0xde, 0xce, 0xd7, 0xce, 0x37, 0x3b, 0x07, 0xce, 0xb7, 0x3b, 0x9f, 0x5f,
  0x56, 0xe2, 0x42, 0xd1, 0x1e, 0xeb, 0x22, 0xdb, 0xf5, 0x8a, 0x60, 0xbc,
  0x5c, 0xd8, 0x71, 0xa7, 0x18, 0xee, 0xde, 0x14, 0x77, 0xef, 0xbf, 0x14,
  0x26, 0xf8, 0x7c, 0x18, 0xe3, 0xcb, 0x36, 0x81, 0x17, 0x6c, 0x0c, 0xaf,
  0x84, 0x21, 0x9e, 0x8b, 0x12, 0xd8, 0xb0, 0x21, 0xbc, 0x18, 0xc5, 0x80,
  0x2b, 0x16, 0x37, 0xa3, 0x10, 0x16, 0x5b, 0x16, 0xd6, 0x0b, 0x35, 0xf6,
  0xea, 0x16, 0xfc, 0x2d, 0x3b, 0x78, 0xa8, 0x56, 0x07, 0x43, 0xf5, 0xf4,
  0xe0, 0x3d, 0xfa, 0x0d, 0xcf, 0x13, 0x08, 0x9e, 0xc2, 0xd0, 0xd3, 0xe8,
  0xb7, 0x22, 0xf4, 0x03, 0x01, 0x4b, 0x81, 0x82, 0x7a, 0xa0, 0xc1, 0x5f,
  0x89, 0x71, 0x35, 0x4a, 0x30, 0x8b, 0x52, 0xf4, 0xeb, 0x21, 0x26, 0x91,
  0xc5, 0x00, 0x04, 0x20, 0x28, 0xb0, 0x40, 0xf7, 0xc5, 0x70, 0xb2, 0x12,
  0xe7, 0x23, 0x24, 0x5d, 0x8b, 0xcf, 0x8d, 0x6a, 0xa4, 0xa7, 0xe2, 0xcd,
  0xd1, 0x22, 0x0a, 0xa8, 0xa1, 0x82, 0x06, 0xf2, 0x1e, 0x98, 0x78, 0x1b,
  0xa2, 0x4f, 0xa5, 0x89, 0x57, 0x88, 0x7e, 0x8d, 0xf5, 0x92, 0xe8, 0x4b,
  0xa5, 0xd8, 0xf2, 0xf4, 0x94, 0xd6, 0xde, 0xd0, 0x7a, 0xef, 0xd2, 0xe5,
  0x83, 0x61, 0xa2, 0x84, 0x62, 0x4d, 0x15, 0x7b, 0x39, 0x93, 0x87, 0xe2,
  0x53, 0xd9, 0x98, 0xaa, 0x14, 0xd1, 0x54, 0x7d, 0x71, 0xa5, 0xd8, 0xdb,
  0xbd, 0x4a, 0xfd, 0xdb, 0x86, 0x45, 0xe9, 0x18, 0x6c, 0xac, 0x24, 0xd8,
  0xb1, 0x19, 0x9e, 0xb6, 0x39, 0x0a, 0x69, 0xa0, 0x6b, 0x2d, 0x46, 0x27,
  0x53, 0xec, 0x25, 0x19, 0x9c, 0x49, 0x72, 0x38, 0x9b, 0x58, 0x50, 0xae,
  0x81, 0xf5, 0x34, 0x83, 0x67, 0xd3, 0x1c, 0x9e, 0x4b, 0x2d, 0x44, 0x59,
  0x8a, 0xcd, 0x3c, 0x43, 0x67, 0xcb, 0x0c, 0xfa, 0x5e, 0x8e, 0x87, 0x73,
  0xe8, 0xd0, 0x1c, 0xba, 0x28, 0xbc, 0x1e, 0xbe, 0x1a, 0xe4, 0xe0, 0x07,
  0x1d, 0x9a, 0x43, 0x17, 0x64, 0xd0, 0x83, 0xd7, 0x20, 0x87, 0x00, 0x3a,
  0xd4, 0x77, 0x97, 0x3a, 0xef, 0x81, 0x1b, 0x04, 0xf8, 0x3a, 0xe6, 0xb0,
  0x88, 0x1d, 0xea, 0xb3, 0x0b, 0x0e, 0xf6, 0x60, 0x01, 0x11, 0x35, 0xf5,
  0xaf, 0xfd, 0x48, 0xbb, 0xa4, 0x66, 0x29, 0xd1, 0x8e, 0xa3, 0x50, 0x7b,
  0x66, 0xa2, 0x17, 0x95, 0x70, 0x05, 0x4e, 0x1c, 0xa9, 0xfa, 0xb2, 0x05,
  0xe8, 0xb8, 0x1a, 0x79, 0x8f, 0xdb, 0x6c, 0xdf, 0x76, 0x79, 0x1e, 0xae,
  0xba, 0xf8, 0xbd, 0x27, 0xf6, 0x1b, 0x51, 0x33, 0x8e, 0xe9, 0xfd, 0xdd,
  0x26, 0x3b, 0xd2, 0x43, 0xda, 0xdf, 0xde, 0x6b, 0xa9, 0x64, 0xb0, 0x9c,
  0xa6, 0xe6, 0x44, 0x96, 0x99, 0xb6, 0xb5, 0x46, 0xf2, 0x73, 0x2d, 0x33,
  0x52, 0xac, 0xf5, 0x60, 0x74, 0x51, 0x99, 0x41, 0x4d, 0x89, 0xfd, 0x9a,
  0xf5, 0xf1, 0x24, 0xa9, 0xe3, 0x38, 0xfa, 0x19, 0x52, 0x58, 0xaa, 0x87,
  0xe7, 0x49, 0x85, 0x54, 0xa1, 0x10, 0xef, 0xdf, 0x6f, 0xd2, 0xb0, 0x8f,
  0x1b, 0x9c, 0x53, 0x5f, 0xec, 0x58, 0xad, 0xcd, 0x49, 0x4e, 0x3d, 0xc3,
  0x75, 0x4e, 0x0c, 0xd7, 0xa4, 0x9c, 0x3a, 0x6a, 0x8f, 0x6b, 0xf4, 0x9c,
  0x92, 0x53, 0x77, 0xfa, 0x89, 0x9a, 0x23, 0xd9, 0x7d, 0x3b, 0x52, 0xa3,
  0xd0, 0x6a, 0x81, 0xff, 0xeb, 0x2f, 0xab, 0x9c, 0x9d, 0x49, 0xad, 0x17,
  0x28, 0x3f, 0x61, 0x9f, 0x4f, 0xd9, 0x66, 0x43, 0x96, 0xc8, 0x28, 0x7c,
  0x0a, 0x59, 0xba, 0xdc, 0xcb, 0x14, 0xba, 0x74, 0x39, 0x7f, 0xfb, 0xe8,
  0x8b, 0x4f, 0x7e, 0xbf, 0x75, 0xe9, 0x9d, 0xfc, 0xc7, 0xed, 0x9f, 0xc4,
  0x67, 0x1f, 0xff, 0xf9, 0x08, 0xf4, 0x13, 0x8e, 0x16, 0x00, 0x00, 0x00,
  0x17, 0x00, 0x01, 0x00, 0x10, 0x50, 0x18, 0x00, 0x78, 0x01, 0xed, 0x99,
  0x3d, 0x6c, 0x54, 0x47, 0x10, 0x80, 0xe7, 0xed, 0xdb, 0xdb, 0xdb, 0x7d,
  0x37, 0x9e, 0x7b, 0xf7, 0xd8, 0x7b, 0x9c, 0xcd, 0xd9, 0xb1, 0x13, 0xc7,
  0x02, 0x04, 0xc6, 0x01, 0x0e, 0x10, 0x52, 0xc8, 0x2b, 0x5c, 0x50, 0x80,
  0x48, 0x11, 0x94, 0x06, 0xd2, 0x24, 0xe9, 0x5d, 0x44, 0xa1, 0xb1, 0xc8,
  0x11, 0x50, 0x42, 0x91, 0x26, 0x12, 0x75, 0x94, 0x48, 0x27, 0x45, 0x20,
  0x1a, 0x24, 0x7e, 0xba, 0x03, 0x6c, 0x2a, 0x14, 0x9a, 0x2b, 0xa0, 0x8a,
  0x94, 0x9e, 0x48, 0x51, 0xd2, 0x47, 0xce, 0xcc, 0x79, 0x0f, 0xcc, 0x61,
  0x29, 0x5d, 0xa2, 0x44, 0xef, 0x93, 0x66, 0x66, 0x77, 0x76, 0xdf, 0xed,
  0xec, 0xcc, 0x56, 0x73, 0xef, 0xb7, 0x60, 0xc8, 0x47, 0xdf, 0x9f, 0xbd,
  0x20, 0xf6, 0xf9, 0xe7, 0x8f, 0xe7, 0x90, 0x00, 0x2a, 0x32, 0x61, 0x94,
  0x28, 0x66, 0xc5, 0x8b, 0x06, 0xf8, 0x75, 0xa7, 0x68, 0x00, 0x2b, 0x2a,
  0x90, 0xb2, 0x1c, 0x67, 0x11, 0x0a, 0x51, 0x81, 0x88, 0xe5, 0xc9, 0x4f,
  0xa7, 0x4e, 0xb0, 0xbc, 0xc7, 0xc3, 0xd7, 0x70, 0x2c, 0x9f, 0xb2, 0x7c,
  0xcc, 0x22, 0x8c, 0xce, 0x12, 0x64, 0xad, 0x11, 0xe4, 0xef, 0x88, 0x59,
  0xe4, 0x2c, 0xb1, 0xe3, 0x1c, 0xb9, 0xf6, 0xe1, 0xbb, 0x6c, 0x96, 0x59,
  0xe0, 0x93, 0xa3, 0xdf, 0x9e, 0x10, 0x3b, 0x22, 0x79, 0xbe, 0x67, 0xdb,
  0xb8, 0xfe, 0xcb, 0x8c, 0xea, 0x24, 0xdc, 0xde, 0x9a, 0xd0, 0x80, 0x16,
  0xc5, 0xcc, 0x87, 0x3a, 0x1a, 0x51, 0xcc, 0x67, 0x61, 0x3e, 0xaa, 0xe5,
  0x03, 0x16, 0xc9, 0xe9, 0x76, 0x6c, 0x30, 0x62, 0xb7, 0x43, 0x6a, 0x60,
  0xe0, 0xcc, 0x92, 0x89, 0xbe, 0x9e, 0x35, 0x6a, 0x5d, 0x7e, 0xee, 0x1f,
  0x47, 0xde, 0xee, 0xe8, 0x5e, 0x26, 0xda, 0xbc, 0x85, 0x51, 0x9b, 0xc9,
  0x30, 0x71, 0x78, 0x25, 0x7a, 0x94, 0x89, 0xff, 0x27, 0x92, 0x83, 0x8c,
  0x65, 0xc4, 0xd6, 0xdb, 0xca, 0x13, 0xd9, 0xf2, 0x4c, 0x4a, 0x4a, 0x4a,
  0x4a, 0x4a, 0x4a, 0x4a, 0x4a, 0x4a, 0x4a, 0x4a, 0x4a, 0x4a, 0x4a, 0x4a,
  0x4a, 0xfe, 0x1d, 0xe6, 0xba, 0x7d, 0xbb, 0xd1, 0xb9, 0x2a, 0x1d, 0xa9,
  0x6a, 0x7c, 0xbb, 0xff, 0x30, 0xbe, 0xdb, 0xdf, 0x88, 0xef, 0xf5, 0x6f,
  0x9e, 0x51, 0xb0, 0xdc, 0xb1, 0xeb, 0xbb, 0x3b, 0x5f, 0xae, 0x9d, 0xeb,
  0x7c, 0xb5, 0xf6, 0x41, 0xe7, 0xe9, 0x5a, 0x37, 0xbe, 0xd4, 0x5f, 0x81,
  0x6f, 0xee, 0xfb, 0xd4, 0x50, 0x9a, 0x6a, 0x6a, 0x66, 0x06, 0x1b, 0x99,
  0xc6, 0x56, 0x9a, 0x52, 0xee, 0x0d, 0xa2, 0x05, 0x9a, 0xcc, 0x52, 0xcc,
  0xbc, 0xc6, 0xb8, 0x9a, 0xd3, 0x44, 0x02, 0xa8, 0x2a, 0x39, 0x4e, 0xf9,
  0x14, 0x09, 0x01, 0x1d, 0x74, 0x07, 0xb6, 0xb1, 0xa8, 0xdd, 0xf9, 0xec,
  0x62, 0x9d, 0x00, 0x5b, 0x1d, 0xb3, 0xbe, 0xcf, 0x2a, 0xda, 0x9f, 0x28,
  0x5c, 0x44, 0x85, 0xae, 0xa2, 0xe9, 0x00, 0x29, 0xb4, 0x51, 0xf7, 0x81,
  0xbe, 0x13, 0xaf, 0xd9, 0x4e, 0xba, 0xee, 0xaa, 0x86, 0x5c, 0x23, 0xa5,
  0x2f, 0xf8, 0x5c, 0xd4, 0x19, 0xc9, 0x6f, 0x4c, 0x98, 0x85, 0x9e, 0x03,
  0x1c, 0xd8, 0x69, 0x28, 0xba, 0x99, 0x5d, 0x4d, 0x00, 0x06, 0x7f, 0xc0,
  0xf5, 0x28, 0xd9, 0x91, 0xd1, 0x6e, 0xed, 0x29, 0xe1, 0x3d, 0x7b, 0xcc,
  0xde, 0xde, 0x3e, 0xdd, 0x26, 0xe2, 0xf1, 0x7e, 0x73, 0xbc, 0xc7, 0xa1,
  0x0c, 0xec, 0x59, 0xde, 0xef, 0xed, 0x2a, 0x1f, 0x3d, 0xb0, 0xe7, 0xa1,
  0xa8, 0x85, 0xef, 0xba, 0x6d, 0xbb, 0x5a, 0x0f, 0xe3, 0xfa, 0x74, 0x9b,
  0xda, 0x76, 0x86, 0xa6, 0x93, 0x19, 0xac, 0x35, 0x3d, 0xcd, 0xe0, 0x0c,
  0xa6, 0x3e, 0xa7, 0x37, 0x78, 0xe4, 0xdb, 0x39, 0x16, 0xc5, 0xca, 0x2f,
  0x50, 0x2f, 0xdc, 0xb2, 0xd8, 0xa8, 0x70, 0x4b, 0x1c, 0x7f, 0x2b, 0xcb,
  0xf1, 0x1d, 0xbe, 0xc3, 0x6c, 0x9e, 0xd3, 0x41, 0xbe, 0xc7, 0x21, 0xbe,
  0xc3, 0x7c, 0x9e, 0x9b, 0x93, 0x61, 0xcf, 0x29, 0xb1, 0x50, 0x38, 0x10,
  0x5b, 0x2b, 0x5c, 0xc3, 0x03, 0x35, 0xdb, 0x80, 0x93, 0x19, 0xe0, 0x1c,
  0x00, 0xbd, 0x0d, 0x60, 0x74, 0xd8, 0x93, 0xf1, 0x5a, 0xce, 0x6b, 0x53,
  0xbc, 0xb6, 0xc4, 0xf9, 0x79, 0x93, 0xd7, 0x17, 0x78, 0xdd, 0x86, 0xf5,
  0xb7, 0x14, 0x5c, 0x94, 0x5c, 0x78, 0x3e, 0x17, 0x83, 0xaf, 0xca, 0xbe,
  0x26, 0x9f, 0x9f, 0x86, 0xb9, 0x0f, 0xb6, 0x15, 0x6c, 0xca, 0x75, 0x69,
  0x70, 0x02, 0x72, 0x8e, 0xad, 0x65, 0x3d, 0x65, 0x5c, 0x8b, 0x9d, 0x1c,
  0xe3, 0x64, 0xe2, 0x71, 0x07, 0x27, 0x63, 0x0a, 0x3d, 0x56, 0x94, 0xb2,
  0xbb, 0xc8, 0xa3, 0x06, 0xb0, 0x51, 0x9c, 0x11, 0x44, 0x19, 0x1a, 0xef,
  0x6d, 0xd2, 0xcc, 0x50, 0xea, 0xe5, 0x62, 0x45, 0x11, 0xd7, 0x94, 0x80,
  0x06, 0x2e, 0x52, 0x9c, 0xbb, 0xee, 0x80, 0x2a, 0x8b, 0x57, 0x1c, 0xe7,
  0xa8, 0x26, 0xf9, 0x6c, 0xaa, 0x93, 0x35, 0xae, 0x1f, 0xb0, 0xdf, 0x45,
  0xc9, 0xa3, 0x89, 0x44, 0x13, 0x5a, 0x8d, 0x75, 0xb2, 0xc4, 0x03, 0x54,
  0xd6, 0x0c, 0x94, 0x53, 0xd0, 0x96, 0x98, 0x54, 0xe1, 0x66, 0xc5, 0x62,
  0xe1, 0xe6, 0xc5, 0x4e, 0x70, 0x1e, 0xc5, 0x72, 0xac, 0xf2, 0x7d, 0xad,
  0x6a, 0x7a, 0x87, 0xb7, 0xce, 0x1b, 0x7b, 0x7b, 0xc7, 0x5e, 0xcc, 0x2f,
  0xdd, 0x6f, 0xca, 0xbb, 0x1d, 0x6b, 0x9a, 0x4e, 0x8a, 0x1a, 0xf3, 0x0d,
  0x5b, 0xee, 0x63, 0xbe, 0x61, 0xa3, 0x74, 0xcc, 0x37, 0x25, 0x2a, 0x1a,
  0xf6, 0x2b, 0x97, 0x44, 0x09, 0xe2, 0x8b, 0xa2, 0x61, 0x37, 0xef, 0xa5,
  0x8f, 0xbf, 0x53, 0x91, 0x74, 0xfc, 0x5e, 0xf5, 0xc5, 0xd1, 0xb0, 0x0b,
  0xfa, 0xd2, 0xc7, 0xa2, 0x55, 0x55, 0xce, 0x7a, 0xd1, 0xa6, 0x97, 0xae,
  0xa8, 0xd6, 0x55, 0xd6, 0xaf, 0xb4, 0xee, 0x87, 0xe8, 0xf0, 0xdf, 0xc0,
  0x3c, 0x0b, 0x5f, 0x90, 0xc3, 0xdb, 0xec, 0x9d, 0x8a, 0x5b, 0x87, 0x0e,
  0xeb, 0x6f, 0xdf, 0xdd, 0xfa, 0xf1, 0xf7, 0xcb, 0xa7, 0x2f, 0x2c, 0x3c,
  0xbb, 0xfa, 0x33, 0xdc, 0xf8, 0xe1, 0xcf, 0xbf, 0x00, 0x40, 0x68, 0xa0,
  0x3f, 0x00, 0x00, 0x00, 0x17, 0x00, 0x01, 0x00, 0x00, 0xf0, 0x17, 0x00,
  0x78, 0x01, 0xed, 0x98, 0xcf, 0x8b, 0x5c, 0x45, 0x10, 0xc7, 0xeb, 0xf5,
  0xab, 0xe9, 0xd7, 0xd3, 0x5b, 0x53, 0xdb, 0xdb, 0x79, 0xb3, 0xd9, 0x2c,
  0xb3, 0xc9, 0x24, 0xd9, 0x37, 0x3b, 0x04, 0x84, 0x3d, 0x78, 0x88, 0x07,
  0xe3, 0x80, 0x11, 0x44, 0xd0, 0x04, 0xf1, 0x68, 0xae, 0x41, 0x3c, 0xe5,
  0xa4, 0x97, 0x65, 0x1c, 0x51, 0x34, 0x87, 0x3d, 0xf8, 0x17, 0x08, 0xc2,
  0x60, 0x50, 0x3c, 0x18, 0x10, 0x8f, 0x13, 0x33, 0x93, 0x93, 0xe0, 0x65,
  0x0e, 0xfe, 0x40, 0xfc, 0x0b, 0x14, 0xd4, 0x9c, 0x95, 0xb5, 0xea, 0xcd,
  0x1b, 0x33, 0xae, 0x7b, 0x56, 0x94, 0xf7, 0x81, 0xaa, 0xee, 0xfe, 0xbe,
  0x7e, 0xd5, 0xd5, 0x3f, 0x4e, 0xf5, 0xcb, 0x69, 0x28, 0x79, 0x35, 0xfd,
  0xea, 0x73, 0x6d, 0x7f, 0x7c, 0xed, 0xcb, 0xf3, 0xc4, 0x00, 0x0d, 0x1d,
  0xac, 0x70, 0x2b, 0x57, 0x0f, 0x70, 0x58, 0xcd, 0xf7, 0xea, 0x2a, 0xda,
  0x62, 0x97, 0xc4, 0x94, 0x81, 0xba, 0x8a, 0x44, 0x1d, 0x8c, 0xae, 0x88,
  0x3d, 0xa5, 0xbd, 0xe3, 0x90, 0xd8, 0x2b, 0x62, 0x37, 0xc5, 0x14, 0xa3,
  0xae, 0xc2, 0xa9, 0x5b, 0xe1, 0x78, 0x3e, 0xab, 0xe8, 0x37, 0x5d, 0xeb,
  0xa4, 0x39, 0x9f, 0x4d, 0x6f, 0x3e, 0x29, 0xcd, 0x55, 0x31, 0xed, 0x5f,
  0xb9, 0xfb, 0xc4, 0x7b, 0x3a, 0x2e, 0x79, 0xf8, 0x7d, 0x71, 0x62, 0x5e,
  0xff, 0x65, 0x96, 0xf7, 0xa4, 0x1c, 0xac, 0x1e, 0x68, 0xc5, 0x52, 0xfa,
  0x69, 0x53, 0x3d, 0x80, 0x55, 0x27, 0xe4, 0xd5, 0xbd, 0x2e, 0xef, 0xf2,
  0x0b, 0xb1, 0xc5, 0xfd, 0xfd, 0x9d, 0x23, 0x41, 0xdb, 0x93, 0x48, 0xc5,
  0x2c, 0x5c, 0xdb, 0xb7, 0xc9, 0xbb, 0x5d, 0x6b, 0x66, 0x41, 0x86, 0xff,
  0x38, 0xfa, 0x0e, 0x96, 0xfb, 0xb2, 0xc9, 0x62, 0x17, 0xd6, 0x2c, 0x76,
  0x6e, 0x53, 0xcd, 0x50, 0x40, 0x54, 0xff, 0xbf, 0x45, 0xcf, 0x20, 0x8a,
  0x2d, 0x59, 0xee, 0x56, 0x4f, 0x63, 0xf9, 0x44, 0xae, 0xab, 0xab, 0xa9,
  0xa9, 0xa9, 0xa9, 0xa9, 0xa9, 0xa9, 0xa9, 0xa9, 0xa9, 0xa9, 0xa9, 0xa9,
  0xa9, 0xa9, 0xf9, 0xb7, 0x38, 0x3f, 0x9a, 0xb8, 0xa3, 0xe2, 0x36, 0x40,
  0x80, 0x2c, 0x1d, 0x4f, 0xee, 0xa7, 0x1f, 0x4e, 0x8e, 0xd2, 0x3b, 0x93,
  0x4f, 0xae, 0x19, 0xb8, 0x5a, 0x98, 0xd9, 0x56, 0xe1, 0x67, 0xf7, 0xd3,
  0xdf, 0x26, 0xb7, 0xe0, 0xf0, 0x9e, 0x0b, 0xc8, 0x18, 0x80, 0x9b, 0x11,
  0xa9, 0x11, 0x81, 0x28, 0x58, 0xf6, 0x39, 0x52, 0x2b, 0x5a, 0xb2, 0x39,
  0x90, 0x69, 0x04, 0xe6, 0xdc, 0x12, 0x24, 0x81, 0xd2, 0x2c, 0x90, 0xbb,
  0x11, 0x86, 0xae, 0x80, 0x99, 0x4b, 0x80, 0x5d, 0xa3, 0xc3, 0x6f, 0x68,
  0x0c, 0x40, 0x76, 0xd9, 0x59, 0x36, 0x30, 0x9a, 0x37, 0x3b, 0x7e, 0x4c,
  0x60, 0x39, 0x95, 0x7e, 0xab, 0xc3, 0xe3, 0x1c, 0x72, 0xd1, 0x69, 0xbe,
  0xde, 0x86, 0x81, 0x17, 0xad, 0xdd, 0xb9, 0x34, 0x4e, 0x75, 0xbc, 0x03,
  0x83, 0x11, 0xba, 0x03, 0x07, 0x30, 0x7f, 0x08, 0x1f, 0x25, 0x23, 0xeb,
  0x0e, 0xbc, 0xea, 0x8f, 0xc1, 0xe0, 0xa5, 0xe2, 0xc1, 0xb4, 0xb9, 0xd4,
  0x73, 0x77, 0xb0, 0x56, 0xf5, 0x5d, 0x03, 0xb9, 0x99, 0x59, 0xde, 0xc2,
  0xc8, 0x6b, 0xed, 0xc0, 0x67, 0x30, 0xe7, 0x6d, 0x44, 0xee, 0xd8, 0x48,
  0x3b, 0x36, 0xa7, 0xb3, 0x16, 0x29, 0xc8, 0x1a, 0xee, 0x19, 0x87, 0xdd,
  0x10, 0x29, 0x38, 0x5c, 0xe4, 0xe7, 0x2c, 0xaf, 0xa9, 0xfe, 0x74, 0x1f,
  0xc9, 0x05, 0xde, 0xf0, 0x48, 0x4d, 0x6f, 0xa9, 0xe5, 0x03, 0x45, 0x42,
  0xf2, 0x64, 0x89, 0x29, 0xd0, 0x29, 0x46, 0x5a, 0x63, 0x4b, 0xeb, 0x1c,
  0xa8, 0x5f, 0x1c, 0x4e, 0xf7, 0x0b, 0x9c, 0x41, 0x8c, 0x8c, 0x05, 0x4c,
  0x4d, 0xb7, 0x5b, 0xc6, 0x22, 0x97, 0x73, 0xcb, 0xe7, 0x32, 0x3f, 0xa7,
  0x0d, 0x89, 0x99, 0x9d, 0xeb, 0xe3, 0xcb, 0xc5, 0x3b, 0xd3, 0x20, 0xfa,
  0x86, 0xe8, 0x51, 0xf4, 0xa8, 0xfa, 0x5e, 0x1f, 0x73, 0xd7, 0x63, 0x8c,
  0xb9, 0x4d, 0x36, 0x23, 0xb7, 0x7d, 0x4f, 0xce, 0x77, 0xd3, 0x2e, 0x62,
  0x44, 0x89, 0x11, 0x69, 0x93, 0x7a, 0x92, 0x87, 0xe7, 0x33, 0xbb, 0xbb,
  0xee, 0x34, 0xf7, 0xc8, 0x39, 0x4f, 0x5b, 0x17, 0x2e, 0xb8, 0x58, 0x38,
  0xde, 0xee, 0xf5, 0xdc, 0xc6, 0x45, 0x47, 0xa7, 0xf6, 0x1c, 0xe1, 0x0d,
  0x37, 0x64, 0x89, 0xbc, 0xce, 0x51, 0xf2, 0x63, 0xc9, 0x67, 0x97, 0xad,
  0xac, 0x61, 0xdb, 0x1d, 0xcc, 0x80, 0xe7, 0x78, 0xd1, 0x0c, 0xe2, 0x4e,
  0x9f, 0x33, 0x5d, 0x37, 0x79, 0xf1, 0x6d, 0xdc, 0xeb, 0x49, 0x5f, 0xce,
  0x72, 0xcf, 0x3c, 0x9b, 0xc9, 0x3d, 0x5d, 0x87, 0xe4, 0x53, 0x90, 0x6f,
  0x32, 0xef, 0x81, 0xed, 0x3a, 0x1b, 0xe0, 0xeb, 0x79, 0x92, 0x02, 0x58,
  0x67, 0xe7, 0x8d, 0x96, 0x81, 0xd4, 0xf8, 0x61, 0xa2, 0xff, 0xee, 0x3c,
  0x37, 0x76, 0xcd, 0xcb, 0xdf, 0x05, 0x23, 0xb7, 0x92, 0x48, 0xeb, 0x11,
  0xca, 0x98, 0xe7, 0x5e, 0x18, 0x83, 0xc1, 0x21, 0x18, 0x2b, 0xe6, 0x87,
  0x26, 0xd5, 0x39, 0x0d, 0xb8, 0x0c, 0x8f, 0x7f, 0x1b, 0x32, 0x00, 0xb4,
  0x32, 0xd6, 0x82, 0x34, 0xbc, 0x79, 0x4f, 0x6b, 0xa0, 0xc7, 0x8b, 0x9f,
  0x65, 0x21, 0xf3, 0x98, 0xb6, 0xad, 0x4e, 0x93, 0x00, 0xd8, 0x57, 0xa7,
  0xa8, 0x96, 0x24, 0x65, 0xb5, 0xed, 0x91, 0x26, 0xff, 0x99, 0x44, 0x2b,
  0x72, 0x7f, 0xd5, 0xd2, 0xa4, 0xac, 0x52, 0x3e, 0xd2, 0xc4, 0xd0, 0x64,
  0xba, 0xd6, 0x9f, 0x65, 0x74, 0xad, 0x5a, 0xa2, 0x9c, 0x90, 0xb0, 0x5a,
  0x5a, 0x2f, 0x19, 0x57, 0x35, 0xdb, 0x5d, 0x31, 0x79, 0x6b, 0x92, 0x5e,
  0x99, 0x0b, 0x6c, 0x89, 0x61, 0x55, 0x01, 0xfd, 0xf9, 0xfd, 0xbb, 0x77,
  0x7e, 0x7d, 0xeb, 0xf9, 0xd7, 0x7b, 0xdf, 0xdc, 0xfe, 0x01, 0x3e, 0xfe,
  0xe0, 0xf7, 0x3f, 0x00, 0x77, 0xdb, 0x91, 0xbf, 0x02, 0x00, 0x00, 0x00,
  0x05, 0x00, 0x00, 0x00, 0x03, 0x00, 0x03, 0x01, 0x08, 0x02, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x03, 0x01, 0x04, 0x03, 0x04, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x05, 0x05,
  0x08, 0x02, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x03, 0x01, 0x06, 0x07, 0x04, 0x02, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x02, 0x07, 0x08, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0xcc, 0x00, 0x00, 0x78, 0x01, 0x6d, 0xcc, 0xb1, 0x11, 0x40, 0x40,
  0x10, 0x46, 0xe1, 0x1f, 0xa3, 0x07, 0x89, 0xae, 0x2e, 0x54, 0x84, 0x50,
  0x11, 0x42, 0x45, 0x08, 0x15, 0x21, 0xd4, 0x13, 0xef, 0x05, 0x9b, 0x79,
  0x33, 0xdf, 0xdc, 0xba, 0x9d, 0xd3, 0x25, 0x19, 0x31, 0xc1, 0x1e, 0xcc,
  0x30, 0xef, 0x1b, 0xcc, 0x79, 0x85, 0x39, 0xef, 0x30, 0xe7, 0x13, 0x3d,
  0xec, 0x86, 0xff, 0x5c, 0x60, 0xce, 0xd5, 0x4b, 0x7e, 0x6f, 0x18, 0xf0,
  0xb7, 0x3b, 0x60, 0xce, 0xb2, 0xda, 0x5d, 0xa8, 0x77, 0x32, 0x77, 0x9e,
  0x49, 0xf2, 0x01, 0x2b, 0xfe, 0x15, 0xf2, 0x00, 0x78, 0x62, 0x6f, 0x70,
  0x01, 0x00, 0x00, 0x00, 0x7e, 0x02, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x30, 0x00, 0x00, 0x00
};
