#if 0
;
; Input signature:
;
; Name                 Index   Mask Register SysValue  Format   Used
; -------------------- ----- ------ -------- -------- ------- ------
; TEXCOORD                 0   xy          0     NONE   float       
; TEXCOORD                 1   xyzw        1     NONE   float   xyz 
; TEXCOORD                 2   xyz         2     NONE   float   xyz 
; COLOR                    0   xyzw        3     NONE   float       
;
;
; Output signature:
;
; Name                 Index   Mask Register SysValue  Format   Used
; -------------------- ----- ------ -------- -------- ------- ------
; SV_Target                0   xyzw        0   TARGET   float   xyzw
;
; shader debug name: C:\Users\marcu\Downloads\DirectXTK12-main\DirectXTK12-main\Src/Shaders/Compiled\XboxGamingXboxOnePBREffect_PSConstant.pdb
; shader hash: ceb92b1583c85becd4c032f95748502c
;
; Pipeline Runtime Information: 
;
;PSVRuntimeInfo:
; Pixel Shader
; DepthOutput=0
; SampleFrequency=0
; MinimumExpectedWaveLaneCount: 0
; MaximumExpectedWaveLaneCount: 4294967295
; UsesViewID: false
; SigInputElements: 4
; SigOutputElements: 1
; SigPatchConstOrPrimElements: 0
; SigInputVectors: 4
; SigOutputVectors[0]: 1
; SigOutputVectors[1]: 0
; SigOutputVectors[2]: 0
; SigOutputVectors[3]: 0
; EntryFunctionName: PSConstant
;
;
; Input signature:
;
; Name                 Index             InterpMode DynIdx
; -------------------- ----- ---------------------- ------
; TEXCOORD                 0                 linear       
; TEXCOORD                 1                 linear       
; TEXCOORD                 2                 linear       
; COLOR                    0                 linear       
;
; Output signature:
;
; Name                 Index             InterpMode DynIdx
; -------------------- ----- ---------------------- ------
; SV_Target                0                              
;
; Buffer Definitions:
;
; cbuffer 
; {
;
;   [388 x i8] (type annotation not present)
;
; }
;
;
; Resource Bindings:
;
; Name                                 Type  Format         Dim      ID      HLSL Bind  Count
; ------------------------------ ---------- ------- ----------- ------- -------------- ------
;                                   cbuffer      NA          NA     CB0            cb0     1
;                                   sampler      NA          NA      S0             s1     1
;                                   texture     f32        cube      T0             t4     1
;                                   texture     f32        cube      T1             t5     1
;
;
; ViewId state:
;
; Number of inputs: 16, outputs: 4
; Outputs dependent on ViewId: {  }
; Inputs contributing to computation of Outputs:
;   output 0 depends on inputs: { 4, 5, 6, 8, 9, 10 }
;   output 1 depends on inputs: { 4, 5, 6, 8, 9, 10 }
;   output 2 depends on inputs: { 4, 5, 6, 8, 9, 10 }
;
target datalayout = "e-m:e-p:32:32-i1:32-i8:32-i16:32-i32:32-i64:64-f16:32-f32:32-f64:64-n8:16:32:64"
target triple = "dxil-ms-xb1"

%dx.types.Handle = type { i8* }
%dx.types.CBufRet.f32 = type { float, float, float, float }
%dx.types.ResRet.f32 = type { float, float, float, float, i32 }
%dx.types.CBufRet.i32 = type { i32, i32, i32, i32 }
%"class.TextureCube<vector<float, 3> >" = type { <3 x float> }
%hostlayout.Constants = type { <3 x float>, [4 x <4 x float>], [3 x <3 x float>], [4 x <4 x float>], [4 x <4 x float>], [3 x <3 x float>], [3 x <3 x float>], <3 x float>, float, float, float, i32, float, float }
%struct.SamplerState = type { i32 }

define void @PSConstant() {
  %1 = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 0, i32 1, i32 5, i1 false)  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %2 = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 0, i32 0, i32 4, i1 false)  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %3 = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 3, i32 0, i32 1, i1 false)  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %4 = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 2, i32 0, i32 0, i1 false)  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %5 = call float @dx.op.loadInput.f32(i32 4, i32 2, i32 0, i8 0, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %6 = call float @dx.op.loadInput.f32(i32 4, i32 2, i32 0, i8 1, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %7 = call float @dx.op.loadInput.f32(i32 4, i32 2, i32 0, i8 2, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %8 = call float @dx.op.loadInput.f32(i32 4, i32 1, i32 0, i8 0, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %9 = call float @dx.op.loadInput.f32(i32 4, i32 1, i32 0, i8 1, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %10 = call float @dx.op.loadInput.f32(i32 4, i32 1, i32 0, i8 2, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %11 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %4, i32 0)  ; CBufferLoadLegacy(handle,regIndex)
  %12 = extractvalue %dx.types.CBufRet.f32 %11, 0
  %13 = extractvalue %dx.types.CBufRet.f32 %11, 1
  %14 = extractvalue %dx.types.CBufRet.f32 %11, 2
  %15 = fsub fast float %12, %8
  %16 = fsub fast float %13, %9
  %17 = fsub fast float %14, %10
  %18 = call float @dx.op.dot3.f32(i32 55, float %15, float %16, float %17, float %15, float %16, float %17)  ; Dot3(ax,ay,az,bx,by,bz)
  %19 = call float @dx.op.unary.f32(i32 25, float %18)  ; Rsqrt(value)
  %20 = fmul fast float %15, %19
  %21 = fmul fast float %16, %19
  %22 = fmul fast float %17, %19
  %23 = call float @dx.op.dot3.f32(i32 55, float %5, float %6, float %7, float %5, float %6, float %7)  ; Dot3(ax,ay,az,bx,by,bz)
  %24 = call float @dx.op.unary.f32(i32 25, float %23)  ; Rsqrt(value)
  %25 = fmul fast float %24, %5
  %26 = fmul fast float %24, %6
  %27 = fmul fast float %24, %7
  %28 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %4, i32 23)  ; CBufferLoadLegacy(handle,regIndex)
  %29 = extractvalue %dx.types.CBufRet.f32 %28, 0
  %30 = extractvalue %dx.types.CBufRet.f32 %28, 1
  %31 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %4, i32 22)  ; CBufferLoadLegacy(handle,regIndex)
  %32 = extractvalue %dx.types.CBufRet.f32 %31, 0
  %33 = extractvalue %dx.types.CBufRet.f32 %31, 1
  %34 = extractvalue %dx.types.CBufRet.f32 %31, 2
  %35 = call float @dx.op.dot3.f32(i32 55, float %25, float %26, float %27, float %20, float %21, float %22)  ; Dot3(ax,ay,az,bx,by,bz)
  %36 = call float @dx.op.unary.f32(i32 7, float %35)  ; Saturate(value)
  %37 = fmul fast float %30, %30
  %38 = fmul fast float %32, %29
  %39 = fmul fast float %33, %29
  %40 = fmul fast float %34, %29
  %41 = fsub fast float %32, %38
  %42 = fsub fast float %33, %39
  %43 = fsub fast float %34, %40
  %44 = fadd fast float %32, 0xBFA47AE140000000
  %45 = fadd fast float %33, 0xBFA47AE140000000
  %46 = fadd fast float %34, 0xBFA47AE140000000
  %47 = fmul fast float %44, %29
  %48 = fmul fast float %45, %29
  %49 = fmul fast float %46, %29
  %50 = fadd fast float %47, 0x3FA47AE140000000
  %51 = fadd fast float %48, 0x3FA47AE140000000
  %52 = fadd fast float %49, 0x3FA47AE140000000
  br label %53

; <label>:53                                      ; preds = %53, %0
  %54 = phi float [ 0.000000e+00, %0 ], [ %150, %53 ]
  %55 = phi float [ 0.000000e+00, %0 ], [ %151, %53 ]
  %56 = phi float [ 0.000000e+00, %0 ], [ %152, %53 ]
  %57 = phi i32 [ 0, %0 ], [ %153, %53 ]
  %58 = add nuw nsw i32 %57, 16
  %59 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %4, i32 %58)  ; CBufferLoadLegacy(handle,regIndex)
  %60 = extractvalue %dx.types.CBufRet.f32 %59, 0
  %61 = extractvalue %dx.types.CBufRet.f32 %59, 1
  %62 = extractvalue %dx.types.CBufRet.f32 %59, 2
  %63 = fsub fast float -0.000000e+00, %60
  %64 = fsub fast float -0.000000e+00, %61
  %65 = fsub fast float -0.000000e+00, %62
  %66 = call float @dx.op.dot3.f32(i32 55, float %63, float %64, float %65, float %63, float %64, float %65)  ; Dot3(ax,ay,az,bx,by,bz)
  %67 = call float @dx.op.unary.f32(i32 25, float %66)  ; Rsqrt(value)
  %68 = fmul fast float %67, %63
  %69 = fmul fast float %67, %64
  %70 = fmul fast float %67, %65
  %71 = fadd fast float %68, %20
  %72 = fadd fast float %69, %21
  %73 = fadd fast float %70, %22
  %74 = call float @dx.op.dot3.f32(i32 55, float %71, float %72, float %73, float %71, float %72, float %73)  ; Dot3(ax,ay,az,bx,by,bz)
  %75 = call float @dx.op.unary.f32(i32 25, float %74)  ; Rsqrt(value)
  %76 = fmul fast float %71, %75
  %77 = fmul fast float %72, %75
  %78 = fmul fast float %73, %75
  %79 = call float @dx.op.dot3.f32(i32 55, float %25, float %26, float %27, float %68, float %69, float %70)  ; Dot3(ax,ay,az,bx,by,bz)
  %80 = call float @dx.op.unary.f32(i32 7, float %79)  ; Saturate(value)
  %81 = call float @dx.op.dot3.f32(i32 55, float %68, float %69, float %70, float %76, float %77, float %78)  ; Dot3(ax,ay,az,bx,by,bz)
  %82 = call float @dx.op.unary.f32(i32 7, float %81)  ; Saturate(value)
  %83 = call float @dx.op.dot3.f32(i32 55, float %25, float %26, float %27, float %76, float %77, float %78)  ; Dot3(ax,ay,az,bx,by,bz)
  %84 = call float @dx.op.unary.f32(i32 7, float %83)  ; Saturate(value)
  %85 = fmul fast float %30, 2.000000e+00
  %86 = fmul fast float %82, %82
  %87 = fmul fast float %86, %85
  %88 = fadd fast float %87, -5.000000e-01
  %89 = fsub fast float 1.000000e+00, %80
  %90 = fmul fast float %89, %89
  %91 = fmul fast float %90, %90
  %92 = fmul fast float %91, %89
  %93 = fmul fast float %92, %88
  %94 = fadd fast float %93, 1.000000e+00
  %95 = fsub fast float 1.000000e+00, %36
  %96 = fmul fast float %95, %95
  %97 = fmul fast float %96, %96
  %98 = fmul fast float %97, %95
  %99 = fmul fast float %98, %88
  %100 = fadd fast float %99, 1.000000e+00
  %101 = fmul fast float %94, %100
  %102 = fmul fast float %37, %37
  %103 = fadd fast float %102, -1.000000e+00
  %104 = fmul fast float %84, %84
  %105 = fmul fast float %104, %103
  %106 = fadd fast float %105, 1.000000e+00
  %107 = fmul fast float %106, %106
  %108 = fmul fast float %107, 0x400921FB60000000
  %109 = call float @dx.op.binary.f32(i32 35, float 0x3EB0C6F7A0000000, float %108)  ; FMax(a,b)
  %110 = fdiv fast float %102, %109
  %111 = fsub fast float 0x3FEEB851E0000000, %47
  %112 = fsub fast float 0x3FEEB851E0000000, %48
  %113 = fsub fast float 0x3FEEB851E0000000, %49
  %114 = fsub fast float 1.000000e+00, %82
  %115 = fmul fast float %114, %114
  %116 = fmul fast float %115, %115
  %117 = fmul fast float %116, %114
  %118 = fmul fast float %117, %111
  %119 = fmul fast float %117, %112
  %120 = fmul fast float %117, %113
  %121 = fadd fast float %118, %50
  %122 = fadd fast float %119, %51
  %123 = fadd fast float %120, %52
  %124 = fsub fast float 1.000000e+00, %86
  %125 = fmul fast float %102, 2.500000e-01
  %126 = fmul fast float %125, %124
  %127 = fadd fast float %126, %86
  %128 = fdiv fast float 1.000000e+00, %127
  %129 = fmul fast float %128, %110
  %130 = fmul fast float %129, %121
  %131 = fmul fast float %129, %122
  %132 = fmul fast float %129, %123
  %133 = add nuw nsw i32 %57, 19
  %134 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %4, i32 %133)  ; CBufferLoadLegacy(handle,regIndex)
  %135 = extractvalue %dx.types.CBufRet.f32 %134, 0
  %136 = extractvalue %dx.types.CBufRet.f32 %134, 1
  %137 = extractvalue %dx.types.CBufRet.f32 %134, 2
  %138 = fmul fast float %135, %80
  %139 = fmul fast float %136, %80
  %140 = fmul fast float %137, %80
  %141 = fmul fast float %101, %41
  %142 = fmul fast float %101, %42
  %143 = fmul fast float %101, %43
  %144 = fadd fast float %130, %141
  %145 = fadd fast float %131, %142
  %146 = fadd fast float %132, %143
  %147 = fmul fast float %138, %144
  %148 = fmul fast float %139, %145
  %149 = fmul fast float %140, %146
  %150 = fadd fast float %147, %54
  %151 = fadd fast float %148, %55
  %152 = fadd fast float %149, %56
  %153 = add nuw nsw i32 %57, 1
  %154 = icmp eq i32 %153, 3
  br i1 %154, label %155, label %53

; <label>:155                                     ; preds = %53
  %156 = call %dx.types.ResRet.f32 @dx.op.sample.f32(i32 60, %dx.types.Handle %1, %dx.types.Handle %3, float %25, float %26, float %27, float undef, i32 undef, i32 undef, i32 undef, float undef)  ; Sample(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,clamp)
  %157 = extractvalue %dx.types.ResRet.f32 %156, 0
  %158 = extractvalue %dx.types.ResRet.f32 %156, 1
  %159 = extractvalue %dx.types.ResRet.f32 %156, 2
  %160 = fmul fast float %157, %41
  %161 = fmul fast float %158, %42
  %162 = fmul fast float %159, %43
  %163 = fadd fast float %160, %150
  %164 = fadd fast float %161, %151
  %165 = fadd fast float %162, %152
  %166 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %4, i32 23)  ; CBufferLoadLegacy(handle,regIndex)
  %167 = extractvalue %dx.types.CBufRet.i32 %166, 2
  %168 = sitofp i32 %167 to float
  %169 = fmul fast float %168, %30
  %170 = fsub fast float -0.000000e+00, %20
  %171 = fsub fast float -0.000000e+00, %21
  %172 = fsub fast float -0.000000e+00, %22
  %173 = call float @dx.op.dot3.f32(i32 55, float %170, float %171, float %172, float %25, float %26, float %27)  ; Dot3(ax,ay,az,bx,by,bz)
  %174 = fmul fast float %173, 2.000000e+00
  %175 = fmul fast float %174, %25
  %176 = fmul fast float %174, %26
  %177 = fmul fast float %174, %27
  %178 = fsub fast float %170, %175
  %179 = fsub fast float %171, %176
  %180 = fsub fast float %172, %177
  %181 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %2, %dx.types.Handle %3, float %178, float %179, float %180, float undef, i32 undef, i32 undef, i32 undef, float %169)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %182 = extractvalue %dx.types.ResRet.f32 %181, 0
  %183 = extractvalue %dx.types.ResRet.f32 %181, 1
  %184 = extractvalue %dx.types.ResRet.f32 %181, 2
  %185 = fmul fast float %182, %50
  %186 = fmul fast float %183, %51
  %187 = fmul fast float %184, %52
  %188 = fadd fast float %163, %185
  %189 = fadd fast float %164, %186
  %190 = fadd fast float %165, %187
  %191 = extractvalue %dx.types.CBufRet.f32 %31, 3
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 0, float %188)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 1, float %189)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 2, float %190)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 3, float %191)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  ret void
}

; Function Attrs: nounwind readnone
declare float @dx.op.loadInput.f32(i32, i32, i32, i8, i32) #0

; Function Attrs: nounwind
declare void @dx.op.storeOutput.f32(i32, i32, i32, i8, float) #1

; Function Attrs: nounwind readnone
declare float @dx.op.dot3.f32(i32, float, float, float, float, float, float) #0

; Function Attrs: nounwind readnone
declare float @dx.op.unary.f32(i32, float) #0

; Function Attrs: nounwind readnone
declare float @dx.op.binary.f32(i32, float, float) #0

; Function Attrs: nounwind readonly
declare %dx.types.ResRet.f32 @dx.op.sample.f32(i32, %dx.types.Handle, %dx.types.Handle, float, float, float, float, i32, i32, i32, float) #2

; Function Attrs: nounwind readonly
declare %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32, %dx.types.Handle, %dx.types.Handle, float, float, float, float, i32, i32, i32, float) #2

; Function Attrs: nounwind readonly
declare %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32, %dx.types.Handle, i32) #2

; Function Attrs: nounwind readonly
declare %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32, %dx.types.Handle, i32) #2

; Function Attrs: nounwind readonly
declare %dx.types.Handle @dx.op.createHandle(i32, i8, i32, i32, i1) #2

attributes #0 = { nounwind readnone }
attributes #1 = { nounwind }
attributes #2 = { nounwind readonly }

!xbox.compiler.options = !{!0}
!llvm.ident = !{!1}
!dx.version = !{!2}
!dx.valver = !{!3}
!dx.shaderModel = !{!4}
!dx.resources = !{!5}
!dx.viewIdState = !{!14}
!dx.entryPoints = !{!15}

!0 = !{!"__XBOX_PER_THREAD_SCRATCH_SIZE_LIMIT_IN_BYTES", !"0"}
!1 = !{!"dxcxbox 2410.2410.11116.10741"}
!2 = !{i32 1, i32 0}
!3 = !{i32 1, i32 8}
!4 = !{!"ps", i32 6, i32 0}
!5 = !{!6, null, !10, !12}
!6 = !{!7, !9}
!7 = !{i32 0, %"class.TextureCube<vector<float, 3> >"* undef, !"", i32 0, i32 4, i32 1, i32 5, i32 0, !8}
!8 = !{i32 0, i32 9}
!9 = !{i32 1, %"class.TextureCube<vector<float, 3> >"* undef, !"", i32 0, i32 5, i32 1, i32 5, i32 0, !8}
!10 = !{!11}
!11 = !{i32 0, %hostlayout.Constants* undef, !"", i32 0, i32 0, i32 1, i32 388, null}
!12 = !{!13}
!13 = !{i32 0, %struct.SamplerState* undef, !"", i32 0, i32 1, i32 1, i32 0, null}
!14 = !{[18 x i32] [i32 16, i32 4, i32 0, i32 0, i32 0, i32 0, i32 7, i32 7, i32 7, i32 0, i32 7, i32 7, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0]}
!15 = !{void ()* @PSConstant, !"PSConstant", !16, !5, null}
!16 = !{!17, !26, null}
!17 = !{!18, !20, !23, !25}
!18 = !{i32 0, !"TEXCOORD", i8 9, i8 0, !19, i8 2, i32 1, i8 2, i32 0, i8 0, null}
!19 = !{i32 0}
!20 = !{i32 1, !"TEXCOORD", i8 9, i8 0, !21, i8 2, i32 1, i8 4, i32 1, i8 0, !22}
!21 = !{i32 1}
!22 = !{i32 3, i32 7}
!23 = !{i32 2, !"TEXCOORD", i8 9, i8 0, !24, i8 2, i32 1, i8 3, i32 2, i8 0, !22}
!24 = !{i32 2}
!25 = !{i32 3, !"COLOR", i8 9, i8 0, !19, i8 2, i32 1, i8 4, i32 3, i8 0, null}
!26 = !{!27}
!27 = !{i32 0, !"SV_Target", i8 9, i8 16, !19, i8 0, i32 1, i8 4, i32 0, i8 0, !28}
!28 = !{i32 3, i32 15}

;
; DUMPING SHADER HARDWARE INSTRUCTIONS 
;
// Shader Type               : (PS)
// Shader Hw Stage           : (PS)

// Shader Instructions:
shader main
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  s_mov_b64     s[44:45], exec
  s_wqm_b64     exec, exec // wrscc
  s_mov_b32     s2, s11
  s_or_b32      s41, s12, 0x00100000 // wrscc
  s_mov_b32     s40, s2
  s_mov_b32     s42, -1
  s_mov_b32     s43, 0x00024fac
  s_buffer_load_dwordx4  s[0:3], s[40:43], 0x00
  s_mov_b32     m0, s15
  v_interp_p1_f32  v5, v0, attr0.x
  v_interp_p1_f32  v6, v0, attr0.y
  v_interp_p1_f32  v2, v0, attr1.x
  v_interp_p1_f32  v3, v0, attr1.y
  v_interp_p1_f32  v4, v0, attr1.z
  v_interp_p1_f32  v0, v0, attr0.z
  v_interp_p2_f32  v5, v1, attr0.x
  v_interp_p2_f32  v6, v1, attr0.y
  v_interp_p2_f32  v0, v1, attr0.z
  v_interp_p2_f32  v2, v1, attr1.x
  v_interp_p2_f32  v3, v1, attr1.y
  v_interp_p2_f32  v4, v1, attr1.z
  s_waitcnt     lgkmcnt(0)
  v_sub_f32     v1, s0, v5
  v_sub_f32     v5, s1, v6
  v_mul_legacy_f32  v6, v5, v5
  v_sub_f32     v0, s2, v0
  v_mac_legacy_f32  v6, v1, v1
  v_mac_legacy_f32  v6, v0, v0
  v_rsq_f32     v6, v6
  s_buffer_load_dwordx4  s[36:39], s[40:43], 0x5c
  s_buffer_load_dwordx4  s[0:3], s[40:43], 0x58
  s_mov_b32     s4, s7
  v_mul_legacy_f32  v7, v1, v6
  v_mul_legacy_f32  v5, v5, v6
  v_mul_legacy_f32  v6, v0, v6
  v_mul_legacy_f32  v0, v3, v3
  v_mac_legacy_f32  v0, v2, v2
  v_mac_legacy_f32  v0, v4, v4
  v_rsq_f32     v0, v0
  s_mov_b32     s5, 0
  s_mov_b32     s9, 0
  s_mov_b32     s11, 0
  v_mul_legacy_f32  v8, v0, v2
  v_mul_legacy_f32  v9, v0, v3
  v_mul_legacy_f32  v4, v0, v4
  s_waitcnt     lgkmcnt(0)
  v_mov_b32     v0, s0
  v_mad_legacy_f32  v12, -v0, s36, v0
  v_mov_b32     v1, s1
  s_load_dwordx8  s[24:31], s[8:9], 0x00
  s_load_dwordx8  s[16:23], s[4:5], 0x00
  s_load_dwordx4  s[32:35], s[10:11], 0x00
  v_readfirstlane_b32  s39, v12
  v_mad_legacy_f32  v12, -v1, s36, v1
  v_mov_b32     v2, s2
  v_mov_b32     v10, s3
  s_buffer_load_dwordx16  s[0:15], s[40:43], 0x40
  v_readfirstlane_b32  s46, v12
  v_mad_legacy_f32  v12, -v2, s36, v2
  v_readfirstlane_b32  s47, v12
  v_add_f32     v0, 0xbd23d70a, v0
  v_mov_b32     v12, 0x3d23d70a
  v_mad_legacy_f32  v13, v0, s36, v12
  v_add_f32     v1, 0xbd23d70a, v1
  v_add_f32     v2, 0xbd23d70a, v2
  v_readfirstlane_b32  s48, v13
  v_mad_legacy_f32  v13, v1, s36, v12
  v_mac_legacy_f32  v12, s36, v2
  v_readfirstlane_b32  s50, v12
  s_waitcnt     lgkmcnt(0)
  v_mul_legacy_f32  v12, s0, s0
  v_mac_legacy_f32  v12, s1, s1
  v_mac_legacy_f32  v12, s2, s2
  v_rsq_f32     v12, v12
  v_readfirstlane_b32  s49, v13
  v_mul_legacy_f32  v11, v9, v5
  v_mad_legacy_f32  v3, v8, v7, v11
  v_mad_legacy_f32  v17, v12, -s1, v5
  v_mad_legacy_f32  v16, v12, -s0, v7
  v_mul_legacy_f32  v18, v17, v17
  v_mul_legacy_f32  v13, v12, -s0
  v_mul_legacy_f32  v14, v12, -s1
  v_mul_legacy_f32  v15, v12, -s2
  v_mad_legacy_f32  v12, v12, -s2, v6
  v_mac_legacy_f32  v18, v16, v16
  v_mac_legacy_f32  v18, v12, v12
  v_rsq_f32     v18, v18
  v_mac_legacy_f32  v3, v4, v6
  v_sub_f32     v3, 1.0, v3 clamp
  v_mov_b32     v20, s50
  v_mul_legacy_f32  v16, v16, v18
  v_mul_legacy_f32  v17, v17, v18
  v_mul_legacy_f32  v12, v12, v18
  v_mul_legacy_f32  v18, v9, v14
  v_mac_legacy_f32  v18, v8, v13
  v_mul_legacy_f32  v14, v14, v17
  v_mad_legacy_f32  v13, v13, v16, v14
  v_mac_legacy_f32  v18, v4, v15
  v_mac_legacy_f32  v13, v15, v12
  v_mul_legacy_f32  v15, v9, v17
  v_sub_f32     v17, 1.0, v18 clamp
  v_max_f32     v19, v18, v18 clamp
  v_mul_legacy_f32  v18, v17, v17
  v_mul_legacy_f32  v18, v18, v18
  v_mac_legacy_f32  v15, v8, v16
  v_add_f32     v16, s37, s37
  v_mul_legacy_f32  v17, v18, v17
  v_mul_legacy_f32  v18, v3, v3
  v_max_f32     v14, v13, v13 clamp
  v_mad_legacy_f32  v12, v4, v12, v15 clamp
  v_mul_legacy_f32  v18, v18, v18
  v_mul_legacy_f32  v15, v14, v14
  v_readfirstlane_b32  s11, v16
  v_mad_legacy_f32  v16, v15, s11, -0.5
  v_mul_legacy_f32  v3, v18, v3
  v_mad_legacy_f32  v17, v17, v16, 1.0
  v_mad_legacy_f32  v16, v3, v16, 1.0
  v_mul_legacy_f32  v16, v17, v16
  v_mul_legacy_f32  v17, s37, s37
  v_mul_legacy_f32  v18, v17, v17
  v_mad_legacy_f32  v17, v17, v17, -1.0
  v_mov_b32     v23, v17
  v_mov_b32     v17, 0x3f75c28f
  v_mad_legacy_f32  v0, -v0, s36, v17
  v_readfirstlane_b32  s51, v0
  v_mad_legacy_f32  v0, -v1, s36, v17
  v_readfirstlane_b32  s52, v0
  v_mad_legacy_f32  v0, -v2, s36, v17
  v_readfirstlane_b32  s36, v0
  v_sub_f32     v0, 1.0, v13 clamp
  v_mul_legacy_f32  v1, v0, v0
  v_mul_legacy_f32  v12, v12, v12
  v_mul_legacy_f32  v1, v1, v1
  v_mad_legacy_f32  v12, v12, v23, 1.0
  v_readfirstlane_b32  s15, v18
  v_mul_legacy_f32  v0, v1, v0
  v_mov_b32     v1, s48
  v_mov_b32     v2, s49
  v_mov_b32     v13, s50
  v_mul_legacy_f32  v12, v12, v12
  v_mac_legacy_f32  v1, s51, v0
  v_mac_legacy_f32  v2, s52, v0
  v_mad_legacy_f32  v0, v0, s36, v13
  v_mad_legacy_f32  v13, -v14, v14, 1.0
  v_mov_b32     v14, s15
  v_mul_legacy_f32  v12, 0x40490fdb, v12
  v_mul_legacy_f32  v14, 0x3e800000, v14
  v_max_f32     v12, 0x358637bd, v12
  v_mov_b32     v22, v14
  v_mad_legacy_f32  v13, v22, v13, v15
  v_rcp_f32     v12, v12
  v_rcp_f32     v13, v13
  v_mul_legacy_f32  v17, s39, v16
  v_mul_legacy_f32  v18, s46, v16
  v_mul_legacy_f32  v12, s15, v12
  v_mul_legacy_f32  v12, v13, v12
  v_mul_legacy_f32  v16, s47, v16
  v_mad_legacy_f32  v1, v12, v1, v17
  v_mad_legacy_f32  v2, v12, v2, v18
  v_mad_legacy_f32  v0, v12, v0, v16
  v_mul_legacy_f32  v12, s4, s4
  v_mac_legacy_f32  v12, s5, s5
  v_mac_legacy_f32  v12, s6, s6
  v_rsq_f32     v12, v12
  v_mul_legacy_f32  v14, s13, v19
  v_mul_legacy_f32  v13, s12, v19
  v_mul_legacy_f32  v15, s14, v19
  v_mul_legacy_f32  v2, v14, v2
  v_mad_legacy_f32  v14, v12, -s5, v5
  v_mul_legacy_f32  v1, v13, v1
  v_mul_legacy_f32  v0, v15, v0
  v_mad_legacy_f32  v13, v12, -s4, v7
  v_mul_legacy_f32  v15, v14, v14
  v_mul_legacy_f32  v19, v12, -s4
  v_mul_legacy_f32  v17, v12, -s5
  v_mul_legacy_f32  v18, v12, -s6
  v_mad_legacy_f32  v12, v12, -s6, v6
  v_mac_legacy_f32  v15, v13, v13
  v_mac_legacy_f32  v15, v12, v12
  v_rsq_f32     v15, v15
  v_mul_legacy_f32  v14, v14, v15
  v_mul_legacy_f32  v13, v13, v15
  v_mul_legacy_f32  v12, v12, v15
  v_mul_legacy_f32  v15, v17, v9
  v_mul_legacy_f32  v17, v17, v14
  v_mul_legacy_f32  v14, v9, v14
  v_mac_legacy_f32  v17, v19, v13
  v_mad_legacy_f32  v13, v8, v13, v14
  v_mac_legacy_f32  v15, v8, v19
  v_mac_legacy_f32  v17, v18, v12
  v_mad_legacy_f32  v12, v4, v12, v13 clamp
  v_mac_legacy_f32  v15, v4, v18
  v_mul_legacy_f32  v12, v12, v12
  v_mad_legacy_f32  v12, v12, v23, 1.0
  v_max_f32     v16, v15, v15 clamp
  v_sub_f32     v15, 1.0, v15 clamp
  v_mul_legacy_f32  v19, v15, v15
  v_mul_legacy_f32  v12, v12, v12
  v_max_f32     v18, v17, v17 clamp
  v_mul_legacy_f32  v13, v18, v18
  v_mul_legacy_f32  v12, 0x40490fdb, v12
  v_mul_legacy_f32  v19, v19, v19
  v_max_f32     v12, 0x358637bd, v12
  v_mul_legacy_f32  v15, v19, v15
  v_mad_legacy_f32  v14, v13, s11, -0.5
  v_mad_legacy_f32  v18, -v18, v18, 1.0
  v_rcp_f32     v12, v12
  v_mac_legacy_f32  v13, v22, v18
  v_mad_legacy_f32  v15, v15, v14, 1.0
  v_mad_legacy_f32  v14, v3, v14, 1.0
  v_mul_legacy_f32  v14, v15, v14
  v_sub_f32     v15, 1.0, v17 clamp
  s_buffer_load_dwordx8  s[0:7], s[40:43], 0x50
  v_rcp_f32     v13, v13
  v_mul_legacy_f32  v17, v15, v15
  v_mul_legacy_f32  v17, v17, v17
  v_mul_legacy_f32  v12, s15, v12
  v_mul_legacy_f32  v15, v17, v15
  v_mov_b32     v17, s48
  v_mov_b32     v19, s49
  v_mul_legacy_f32  v12, v13, v12
  v_mac_legacy_f32  v17, s51, v15
  v_mac_legacy_f32  v19, s52, v15
  v_mad_legacy_f32  v15, v15, s36, v20
  v_mul_legacy_f32  v20, s39, v14
  v_mul_legacy_f32  v21, s46, v14
  v_mul_legacy_f32  v14, s47, v14
  s_waitcnt     lgkmcnt(0)
  v_mul_legacy_f32  v13, s0, v16
  v_mul_legacy_f32  v18, s1, v16
  v_mad_legacy_f32  v17, v12, v17, v20
  v_mad_legacy_f32  v19, v12, v19, v21
  v_mul_legacy_f32  v16, s2, v16
  v_mad_legacy_f32  v12, v12, v15, v14
  v_mac_legacy_f32  v0, v16, v12
  v_mul_legacy_f32  v12, s8, s8
  v_mac_legacy_f32  v12, s9, s9
  v_mac_legacy_f32  v12, s10, s10
  v_rsq_f32     v12, v12
  v_mac_legacy_f32  v1, v13, v17
  v_mac_legacy_f32  v2, v18, v19
  v_mad_legacy_f32  v14, v12, -s9, v5
  v_mad_legacy_f32  v13, v12, -s8, v7
  v_mul_legacy_f32  v15, v14, v14
  v_mul_legacy_f32  v19, v12, -s8
  v_mul_legacy_f32  v17, v12, -s9
  v_mul_legacy_f32  v18, v12, -s10
  v_mad_legacy_f32  v12, v12, -s10, v6
  v_mac_legacy_f32  v15, v13, v13
  v_mac_legacy_f32  v15, v12, v12
  v_rsq_f32     v15, v15
  v_mul_legacy_f32  v14, v14, v15
  v_mul_legacy_f32  v13, v13, v15
  v_mul_legacy_f32  v12, v12, v15
  v_mul_legacy_f32  v15, v17, v9
  v_mul_legacy_f32  v17, v17, v14
  v_mul_legacy_f32  v14, v9, v14
  v_mac_legacy_f32  v17, v19, v13
  v_mad_legacy_f32  v13, v8, v13, v14
  v_mac_legacy_f32  v17, v18, v12
  v_mad_legacy_f32  v12, v4, v12, v13 clamp
  v_mac_legacy_f32  v15, v8, v19
  v_mul_legacy_f32  v12, v12, v12
  v_mac_legacy_f32  v15, v4, v18
  v_mad_legacy_f32  v12, v12, v23, 1.0
  v_mul_legacy_f32  v12, v12, v12
  v_max_f32     v16, v15, v15 clamp
  v_sub_f32     v15, 1.0, v15 clamp
  v_mul_legacy_f32  v19, v15, v15
  v_mul_legacy_f32  v12, 0x40490fdb, v12
  v_max_f32     v18, v17, v17 clamp
  v_mul_legacy_f32  v13, v18, v18
  v_max_f32     v12, 0x358637bd, v12
  v_mul_legacy_f32  v19, v19, v19
  v_mad_legacy_f32  v18, -v18, v18, 1.0
  v_mad_legacy_f32  v14, v13, s11, -0.5
  v_mul_legacy_f32  v15, v19, v15
  v_mac_legacy_f32  v13, v22, v18
  v_rcp_f32     v12, v12
  v_mad_legacy_f32  v15, v15, v14, 1.0
  v_mad_legacy_f32  v3, v3, v14, 1.0
  v_sub_f32     v14, 1.0, v17 clamp
  v_rcp_f32     v13, v13
  v_mul_legacy_f32  v3, v15, v3
  v_mul_legacy_f32  v15, v14, v14
  v_mul_legacy_f32  v15, v15, v15
  v_mul_legacy_f32  v12, s15, v12
  v_mul_legacy_f32  v14, v15, v14
  v_mov_b32     v15, s48
  v_mov_b32     v17, s49
  v_mov_b32     v19, s50
  v_mul_legacy_f32  v12, v13, v12
  v_mac_legacy_f32  v15, s51, v14
  v_mac_legacy_f32  v17, s52, v14
  v_mad_legacy_f32  v14, v14, s36, v19
  v_mul_legacy_f32  v19, s39, v3
  v_mul_legacy_f32  v20, s46, v3
  v_mul_legacy_f32  v3, s47, v3
  v_mul_legacy_f32  v13, s4, v16
  v_mul_legacy_f32  v18, s5, v16
  v_mul_legacy_f32  v16, s6, v16
  v_mac_legacy_f32  v3, v12, v14
  v_mad_legacy_f32  v14, v16, v3, v0
  v_mad_legacy_f32  v15, v12, v15, v19
  v_cubema_f32  v0, v8, v9, v4
  v_mad_legacy_f32  v17, v12, v17, v20
  v_mad_legacy_f32  v12, v13, v15, v1
  v_rcp_f32     v1, abs(v0)
  v_cubesc_f32  v0, v8, v9, v4
  v_cubetc_f32  v15, v8, v9, v4
  v_mad_legacy_f32  v13, v18, v17, v2
  v_madak_f32   v0, v0, v1, 0x3fc00000
  v_cubeid_f32  v2, v8, v9, v4
  v_mov_b32     v3, 0x3fc00000
  v_madak_f32   v1, v15, v1, 0x3fc00000
  s_and_b64     exec, exec, s[44:45] // wrscc
  v_mad_legacy_f32  v11, -v7, v8, -v11
  v_mac_legacy_f32  v11, v6, -v4 mul:2
  v_mad_legacy_f32  v5, -v11, v9, -v5
  v_mad_legacy_f32  v4, -v11, v4, -v6
  v_mad_legacy_f32  v9, -v11, v8, -v7
  image_sample  v[6:9], v[0:1], s[24:31], s[32:35] dmask:0x7 da
  v_cubema_f32  v0, v9, v5, v4
  v_rcp_f32     v0, abs(v0)
  v_cvt_f32_i32  v1, s38
  v_cubesc_f32  v2, v9, v5, v4
  v_cubetc_f32  v11, v9, v5, v4
  v_cubeid_f32  v4, v9, v5, v4
  v_mac_f32     v3, v11, v0
  v_madak_f32   v2, v2, v0, 0x3fc00000
  v_mul_legacy_f32  v5, s37, v1
  image_sample_l  v[0:3], v[2:3], s[16:23], s[32:35] dmask:0x7 da
  s_waitcnt     vmcnt(1)
  v_mad_legacy_f32  v3, v6, s39, v12
  v_mad_legacy_f32  v4, v7, s46, v13
  v_mad_legacy_f32  v5, v8, s47, v14
  s_waitcnt     vmcnt(0)
  v_mac_legacy_f32  v4, s49, v1
  v_mac_legacy_f32  v3, s48, v0
  v_mad_legacy_f32  v2, v2, s50, v5
  v_cvt_pkrtz_f16_f32  v0, v3, v4
  v_cvt_pkrtz_f16_f32  v1, v2, v10
  exp           mrt0, v0, v0, v1, v1 done compr vm
  s_endpgm      
end


NumVGPR=24,NumSGPR=55,LDS=0,Scratch=0,Occpancy=9


#endif

const unsigned char PBREffect_PSConstant[] = {
  0x44, 0x58, 0x42, 0x43, 0x2a, 0x39, 0x15, 0xe8, 0x88, 0xa9, 0xef, 0x40,
  0x8a, 0xd1, 0xc5, 0x04, 0xcb, 0x40, 0x53, 0xf5, 0x01, 0x00, 0x00, 0x00,
  0x90, 0x1b, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00,
  0x50, 0x00, 0x00, 0x00, 0xf0, 0x00, 0x00, 0x00, 0x2c, 0x01, 0x00, 0x00,
  0xac, 0x02, 0x00, 0x00, 0x34, 0x04, 0x00, 0x00, 0xbc, 0x04, 0x00, 0x00,
  0xd8, 0x04, 0x00, 0x00, 0x53, 0x46, 0x49, 0x30, 0x08, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x49, 0x53, 0x47, 0x31,
  0x98, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x88, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x88, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0f, 0x07, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x88, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x07, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x91, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x54, 0x45, 0x58, 0x43,
  0x4f, 0x4f, 0x52, 0x44, 0x00, 0x43, 0x4f, 0x4c, 0x4f, 0x52, 0x00, 0x00,
  0x4f, 0x53, 0x47, 0x31, 0x34, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x28, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x53, 0x56, 0x5f, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x00, 0x00, 0x00,
  0x50, 0x53, 0x56, 0x30, 0x78, 0x01, 0x00, 0x00, 0x34, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff,
  0x00, 0x00, 0x00, 0x00, 0x04, 0x01, 0x00, 0x04, 0x01, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x22, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00,
  0x04, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00,
  0x05, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x30, 0x00, 0x00, 0x00, 0x00, 0x54, 0x45, 0x58, 0x43, 0x4f, 0x4f, 0x52,
  0x44, 0x00, 0x54, 0x45, 0x58, 0x43, 0x4f, 0x4f, 0x52, 0x44, 0x00, 0x54,
  0x45, 0x58, 0x43, 0x4f, 0x4f, 0x52, 0x44, 0x00, 0x43, 0x4f, 0x4c, 0x4f,
  0x52, 0x00, 0x50, 0x53, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74,
  0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x42, 0x00,
  0x03, 0x02, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x01, 0x01, 0x44, 0x00, 0x03, 0x02, 0x00, 0x00, 0x13, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x01, 0x02, 0x43, 0x00, 0x03, 0x02, 0x00, 0x00,
  0x1c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x03, 0x44, 0x00,
  0x03, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x44, 0x10, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x07, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00,
  0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x52, 0x54, 0x53, 0x30, 0x80, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x0a, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x80, 0x01, 0x00, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x90, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xac, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xc8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xe4, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x1c, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x38, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x54, 0x01, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x70, 0x01, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x78, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x98, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff,
  0x01, 0x00, 0x00, 0x00, 0xb4, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xff, 0xff, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0xd0, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00,
  0xec, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff,
  0x01, 0x00, 0x00, 0x00, 0x08, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xff, 0xff, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x24, 0x01, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00,
  0x40, 0x01, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff,
  0x01, 0x00, 0x00, 0x00, 0x5c, 0x01, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x49, 0x4c, 0x44, 0x4e,
  0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x79, 0x00, 0x43, 0x3a, 0x5c, 0x55,
  0x73, 0x65, 0x72, 0x73, 0x5c, 0x6d, 0x61, 0x72, 0x63, 0x75, 0x5c, 0x44,
  0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x73, 0x5c, 0x44, 0x69, 0x72,
  0x65, 0x63, 0x74, 0x58, 0x54, 0x4b, 0x31, 0x32, 0x2d, 0x6d, 0x61, 0x69,
  0x6e, 0x5c, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x58, 0x54, 0x4b, 0x31,
  0x32, 0x2d, 0x6d, 0x61, 0x69, 0x6e, 0x5c, 0x53, 0x72, 0x63, 0x2f, 0x53,
  0x68, 0x61, 0x64, 0x65, 0x72, 0x73, 0x2f, 0x43, 0x6f, 0x6d, 0x70, 0x69,
  0x6c, 0x65, 0x64, 0x5c, 0x58, 0x62, 0x6f, 0x78, 0x47, 0x61, 0x6d, 0x69,
  0x6e, 0x67, 0x58, 0x62, 0x6f, 0x78, 0x4f, 0x6e, 0x65, 0x50, 0x42, 0x52,
  0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x5f, 0x50, 0x53, 0x43, 0x6f, 0x6e,
  0x73, 0x74, 0x61, 0x6e, 0x74, 0x2e, 0x70, 0x64, 0x62, 0x00, 0x00, 0x00,
  0x48, 0x41, 0x53, 0x48, 0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xce, 0xb9, 0x2b, 0x15, 0x83, 0xc8, 0x5b, 0xec, 0xd4, 0xc0, 0x32, 0xf9,
  0x57, 0x48, 0x50, 0x2c, 0x44, 0x58, 0x49, 0x4c, 0xb0, 0x16, 0x00, 0x00,
  0x60, 0x00, 0x00, 0x00, 0xac, 0x05, 0x00, 0x00, 0x44, 0x58, 0x49, 0x4c,
  0x00, 0x01, 0x00, 0x00, 0x7c, 0x00, 0x00, 0x00, 0xa0, 0x0c, 0x00, 0x00,
  0x58, 0x44, 0x41, 0x54, 0x06, 0x00, 0x00, 0x00, 0x24, 0x00, 0x00, 0x00,
  0x07, 0x00, 0x00, 0x00, 0x6c, 0x00, 0x00, 0x00, 0xb8, 0x0c, 0x00, 0x00,
  0x10, 0x00, 0x00, 0x00, 0x24, 0x0d, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x34, 0x0d, 0x00, 0x00, 0x99, 0x06, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0xd0, 0x13, 0x00, 0x00, 0x38, 0x02, 0x00, 0x00,
  0x06, 0x00, 0x00, 0x00, 0x08, 0x16, 0x00, 0x00, 0x91, 0x00, 0x00, 0x00,
  0x08, 0x00, 0x00, 0x00, 0x9c, 0x16, 0x00, 0x00, 0x11, 0x00, 0x00, 0x00,
  0x60, 0x00, 0x00, 0x00, 0x2e, 0x03, 0x00, 0x00, 0x44, 0x58, 0x49, 0x4c,
  0x00, 0x01, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0xa0, 0x0c, 0x00, 0x00,
  0x42, 0x43, 0xc0, 0xde, 0x21, 0x0c, 0x00, 0x00, 0x25, 0x03, 0x00, 0x00,
  0x0b, 0x82, 0x20, 0x00, 0x02, 0x00, 0x00, 0x00, 0x13, 0x00, 0x00, 0x00,
  0x07, 0x81, 0x23, 0x91, 0x41, 0xc8, 0x04, 0x49, 0x06, 0x10, 0x32, 0x39,
  0x92, 0x01, 0x84, 0x0c, 0x25, 0x05, 0x08, 0x19, 0x1e, 0x04, 0x8b, 0x62,
  0x80, 0x18, 0x45, 0x02, 0x42, 0x92, 0x0b, 0x42, 0xc4, 0x10, 0x32, 0x14,
  0x38, 0x08, 0x18, 0x4b, 0x0a, 0x32, 0x62, 0x88, 0x48, 0x90, 0x14, 0x20,
  0x43, 0x46, 0x88, 0xa5, 0x00, 0x19, 0x32, 0x42, 0xe4, 0x48, 0x0e, 0x90,
  0x11, 0x23, 0xc4, 0x50, 0x41, 0x51, 0x81, 0x8c, 0xe1, 0x83, 0xe5, 0x8a,
  0x04, 0x31, 0x46, 0x06, 0x51, 0x18, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00,
  0x1b, 0x8c, 0xe0, 0xff, 0xff, 0xff, 0xff, 0x07, 0x40, 0x02, 0xa8, 0x0d,
  0x84, 0xf0, 0xff, 0xff, 0xff, 0xff, 0x03, 0x20, 0x6d, 0x30, 0x86, 0xff,
  0xff, 0xff, 0xff, 0x1f, 0x00, 0x09, 0xa8, 0x00, 0x49, 0x18, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x13, 0x82, 0x60, 0x42, 0x20, 0x4c, 0x08, 0x06,
  0x00, 0x00, 0x00, 0x00, 0x89, 0x20, 0x00, 0x00, 0x4f, 0x00, 0x00, 0x00,
  0x32, 0x22, 0x88, 0x09, 0x20, 0x64, 0x85, 0x04, 0x13, 0x23, 0xa4, 0x84,
  0x04, 0x13, 0x23, 0xe3, 0x84, 0xa1, 0x90, 0x14, 0x12, 0x4c, 0x8c, 0x8c,
  0x0b, 0x84, 0xc4, 0x4c, 0x10, 0xac, 0xc1, 0x08, 0x40, 0x09, 0x00, 0x0a,
  0x66, 0x00, 0xe6, 0x08, 0xc0, 0x60, 0x8e, 0x00, 0x29, 0xc6, 0x40, 0x10,
  0x44, 0x41, 0x90, 0x51, 0x0c, 0x80, 0x20, 0x88, 0x62, 0x20, 0xa4, 0x20,
  0x03, 0x31, 0x0c, 0xc3, 0x30, 0x0c, 0xa4, 0x94, 0x61, 0x20, 0x06, 0x62,
  0x0a, 0x31, 0x10, 0xc3, 0x40, 0xce, 0x4d, 0xc3, 0xe5, 0x4f, 0xd8, 0x43,
  0x48, 0xfe, 0x4a, 0x48, 0x2b, 0x31, 0xf9, 0xc5, 0x6d, 0xa3, 0x62, 0x18,
  0x86, 0x81, 0xa0, 0xe2, 0x9e, 0xe1, 0xf2, 0x27, 0xec, 0x21, 0x24, 0x3f,
  0x04, 0x9a, 0x61, 0x21, 0x50, 0x10, 0x15, 0x06, 0x22, 0x24, 0x69, 0x18,
  0x86, 0x81, 0x20, 0x88, 0x81, 0xa6, 0xa3, 0x86, 0xcb, 0x9f, 0xb0, 0x87,
  0x90, 0x7c, 0x6e, 0xa3, 0x8a, 0x95, 0x98, 0x7c, 0xe4, 0xb6, 0x11, 0x41,
  0x10, 0x04, 0x51, 0x88, 0x8a, 0x90, 0x08, 0xb2, 0x8e, 0x1a, 0x2e, 0x7f,
  0xc2, 0x1e, 0x42, 0xf2, 0xb9, 0x8d, 0x2a, 0x56, 0x62, 0xf2, 0x8b, 0xdb,
  0x46, 0xc4, 0x30, 0x0c, 0x43, 0x21, 0x30, 0x42, 0x22, 0x28, 0x9b, 0x23,
  0x08, 0x8a, 0x21, 0x11, 0x05, 0x41, 0x6c, 0xc4, 0x0d, 0x04, 0x0c, 0x23,
  0x0c, 0xc3, 0x4c, 0x64, 0x30, 0x0e, 0xec, 0x10, 0x0e, 0xf3, 0x30, 0x0f,
  0x6e, 0x40, 0x0b, 0xe5, 0x80, 0x0f, 0xf4, 0x50, 0x0f, 0xf2, 0x50, 0x0e,
  0xa3, 0x50, 0x0f, 0xe2, 0x50, 0x0e, 0x7c, 0x60, 0x0f, 0xe5, 0x30, 0x0e,
  0xf4, 0xf0, 0x0e, 0xf2, 0xc0, 0x07, 0xe6, 0xc0, 0x0e, 0xef, 0x10, 0x0e,
  0xf4, 0xc0, 0x06, 0x60, 0x30, 0x07, 0x7e, 0x00, 0x06, 0x7e, 0x80, 0x82,
  0x8f, 0xc0, 0x61, 0x04, 0x62, 0x48, 0x02, 0x31, 0x07, 0xbe, 0xa3, 0x0e,
  0x47, 0x9a, 0x16, 0x00, 0x73, 0xa8, 0xc9, 0xe7, 0x9c, 0x46, 0x9a, 0x80,
  0x66, 0x92, 0x90, 0xf3, 0x8d, 0xe4, 0x38, 0x92, 0xe4, 0x37, 0x0c, 0x03,
  0x31, 0x0c, 0x54, 0xde, 0x24, 0x4d, 0x11, 0x25, 0x4c, 0x3e, 0x0b, 0x30,
  0xcf, 0x42, 0x44, 0xec, 0x04, 0x4c, 0x04, 0x0a, 0x08, 0x3a, 0x53, 0x82,
  0x98, 0x02, 0x00, 0x00, 0x13, 0x16, 0x72, 0xc0, 0x87, 0x74, 0x60, 0x87,
  0x36, 0x68, 0x87, 0x79, 0x68, 0x03, 0x7c, 0x10, 0x87, 0x38, 0xd8, 0xf0,
  0x0a, 0xe5, 0xd0, 0x06, 0xed, 0xa0, 0x07, 0xe5, 0xd0, 0x06, 0xf0, 0xa0,
  0x07, 0x73, 0x20, 0x07, 0x7a, 0x30, 0x07, 0x72, 0xd0, 0x06, 0xe9, 0x10,
  0x07, 0x7a, 0x30, 0x07, 0x72, 0xd0, 0x06, 0xe9, 0x80, 0x07, 0x7a, 0x30,
  0x07, 0x72, 0xd0, 0x06, 0xe9, 0x10, 0x07, 0x76, 0xa0, 0x07, 0x73, 0x20,
  0x07, 0x6d, 0x90, 0x0e, 0x73, 0x20, 0x07, 0x7a, 0x30, 0x07, 0x72, 0xd0,
  0x06, 0xe9, 0x60, 0x07, 0x74, 0xa0, 0x07, 0x76, 0x40, 0x07, 0x6d, 0x60,
  0x0e, 0x71, 0x60, 0x07, 0x7a, 0x30, 0x07, 0x72, 0xd0, 0x06, 0xe6, 0x30,
  0x07, 0x72, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x60, 0x0e, 0x76, 0x40,
  0x07, 0x7a, 0x60, 0x07, 0x74, 0xd0, 0x06, 0xee, 0x80, 0x07, 0x7a, 0x10,
  0x07, 0x76, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x7a, 0x60, 0x07, 0x74, 0x30,
  0xe4, 0x09, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x60, 0xc8, 0x63, 0x00, 0x01, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0xc0, 0x90, 0x07, 0x01, 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x80, 0x21, 0x8f, 0x02, 0x04, 0x40, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x43, 0x1e, 0x06, 0x08, 0x80, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x86, 0x3c, 0x0e, 0x10, 0x00, 0x01, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x79, 0x26, 0x20, 0x00, 0x06,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0xf2, 0x4c, 0x40, 0x00,
  0x0c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0xe4, 0xb1, 0x80,
  0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0xc8, 0x93,
  0x01, 0x01, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x90,
  0x87, 0x03, 0x02, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80,
  0x2c, 0x10, 0x00, 0x00, 0x13, 0x00, 0x00, 0x00, 0x32, 0x1e, 0x98, 0x18,
  0x19, 0x11, 0x4c, 0x90, 0x8c, 0x09, 0x26, 0x47, 0xc6, 0x04, 0x43, 0x22,
  0x4a, 0x60, 0x04, 0xa0, 0x20, 0x8a, 0xa1, 0x10, 0x4a, 0xa1, 0x24, 0x0a,
  0xd1, 0xa0, 0x0c, 0xca, 0xa1, 0x08, 0xca, 0x83, 0x8a, 0x92, 0x18, 0x01,
  0x28, 0x82, 0x42, 0x28, 0x83, 0x02, 0xa1, 0x70, 0x06, 0x80, 0xcc, 0x19,
  0x00, 0x42, 0x67, 0x00, 0x28, 0x1d, 0x4b, 0x82, 0x08, 0x00, 0x00, 0x80,
  0xe3, 0x38, 0x80, 0xe3, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x79, 0x18, 0x00, 0x00, 0x87, 0x00, 0x00, 0x00, 0x1a, 0x03, 0x4c, 0x90,
  0x46, 0x02, 0x13, 0xc4, 0x36, 0xf8, 0xfa, 0xc2, 0x12, 0x7a, 0xc2, 0xfa,
  0x82, 0x2a, 0x92, 0xfa, 0xa2, 0x42, 0x92, 0x2a, 0x0a, 0x22, 0xfa, 0x9a,
  0x1a, 0x92, 0x0a, 0xa2, 0x1a, 0x42, 0xfa, 0x9a, 0x4a, 0xd2, 0x2a, 0xfa,
  0x62, 0x4a, 0x6a, 0x4a, 0xa2, 0xfa, 0x4a, 0x72, 0xfa, 0x12, 0xca, 0xa2,
  0x2a, 0x9a, 0x62, 0x00, 0xb3, 0x41, 0x08, 0x04, 0x76, 0x64, 0x78, 0x63,
  0x78, 0x62, 0x6f, 0x78, 0x20, 0x32, 0x34, 0x31, 0x30, 0x2e, 0x32, 0x34,
  0x31, 0x30, 0x2e, 0x31, 0x31, 0x31, 0x31, 0x36, 0x2e, 0x31, 0x30, 0x37,
  0x34, 0x31, 0x1b, 0x02, 0x62, 0x82, 0x40, 0x2c, 0x13, 0x04, 0x82, 0xd9,
  0x20, 0x18, 0xc7, 0x04, 0x81, 0x68, 0x36, 0x08, 0x46, 0x42, 0x01, 0x6e,
  0x6e, 0x82, 0x40, 0x38, 0x1b, 0x86, 0x85, 0x39, 0x26, 0x08, 0x61, 0xd0,
  0x11, 0x98, 0x20, 0x10, 0xcf, 0x04, 0x81, 0x80, 0x26, 0x08, 0x44, 0xb4,
  0x41, 0x38, 0xa4, 0x0d, 0xc9, 0xe1, 0x3c, 0x07, 0x64, 0x44, 0xc7, 0xb4,
  0x21, 0x31, 0x9c, 0xe7, 0x88, 0x8c, 0xe8, 0x98, 0x36, 0x08, 0x54, 0x35,
  0x41, 0x30, 0x03, 0x6f, 0x82, 0x40, 0x48, 0x1b, 0x90, 0xe3, 0x7a, 0x8e,
  0xc3, 0xc0, 0x80, 0x0d, 0x41, 0x36, 0x41, 0x40, 0x83, 0x6f, 0x03, 0x72,
  0x6c, 0xcf, 0x61, 0x18, 0x07, 0xb0, 0x21, 0xe0, 0x36, 0x10, 0x16, 0xa0,
  0x75, 0x13, 0x84, 0x34, 0x00, 0x83, 0x0d, 0xc1, 0x37, 0x41, 0x10, 0x00,
  0x2a, 0x50, 0x53, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x44,
  0xa8, 0x8a, 0xb0, 0x86, 0x9e, 0x9e, 0xa4, 0x88, 0x26, 0x08, 0xc5, 0x35,
  0x41, 0x28, 0xb0, 0x0d, 0xc1, 0x31, 0x41, 0x28, 0xb2, 0x0d, 0xcb, 0x31,
  0x06, 0x64, 0x50, 0x06, 0x66, 0x70, 0x06, 0xc6, 0x19, 0x1c, 0x65, 0x00,
  0x6c, 0x08, 0x8c, 0x09, 0x42, 0xa1, 0x4d, 0x10, 0x88, 0x69, 0x82, 0x40,
  0x50, 0x1b, 0x84, 0x35, 0x60, 0x83, 0x0d, 0x8b, 0x31, 0x06, 0x64, 0x50,
  0x06, 0x69, 0x70, 0x06, 0x86, 0x1a, 0x18, 0x65, 0xd0, 0x06, 0x13, 0x04,
  0xa2, 0xda, 0x10, 0xbc, 0xc1, 0x04, 0xa1, 0xd8, 0x36, 0x2c, 0x6f, 0x30,
  0x06, 0x64, 0x50, 0x06, 0x70, 0x70, 0x06, 0x46, 0x1c, 0xbc, 0x41, 0x19,
  0xb4, 0x01, 0x8b, 0xa1, 0x27, 0xa6, 0x27, 0xa9, 0x0d, 0xcb, 0x1a, 0xcc,
  0x01, 0x19, 0x94, 0x81, 0x19, 0x9c, 0x81, 0xa1, 0x06, 0x6b, 0x50, 0x06,
  0xc0, 0x06, 0x02, 0x0d, 0xdc, 0x40, 0x0e, 0xe8, 0x80, 0xc9, 0x94, 0xd5,
  0x17, 0x55, 0x98, 0xdc, 0x59, 0x19, 0xdd, 0x04, 0xa1, 0xe0, 0x26, 0x08,
  0x84, 0xb5, 0x41, 0x58, 0x03, 0x3c, 0xd8, 0xb0, 0x1c, 0x76, 0x40, 0x06,
  0x77, 0x60, 0x06, 0x65, 0x60, 0xa8, 0xc1, 0x51, 0x06, 0x79, 0xb0, 0x21,
  0xd0, 0x83, 0x0d, 0x43, 0x1d, 0xec, 0x01, 0xb0, 0xa1, 0x08, 0x03, 0x31,
  0xe0, 0x03, 0x0f, 0x68, 0x85, 0x27, 0xf6, 0x86, 0xe7, 0x32, 0xf6, 0xd6,
  0x06, 0x97, 0xc6, 0x56, 0x26, 0xe7, 0xf2, 0x06, 0x47, 0x97, 0xf6, 0xe6,
  0x36, 0x37, 0x25, 0x10, 0xaa, 0xb0, 0xb1, 0xd9, 0xb5, 0xb9, 0xa4, 0x91,
  0x95, 0xb9, 0xd1, 0x4d, 0x09, 0x88, 0x2a, 0x64, 0x78, 0x2e, 0x76, 0x65,
  0x72, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x82, 0xa3, 0x09, 0x19, 0x9e, 0x8b,
  0x5d, 0x18, 0x9b, 0x5d, 0x99, 0xdc, 0x94, 0x20, 0xa9, 0x43, 0x86, 0xe7,
  0x32, 0x87, 0x16, 0x46, 0x56, 0x26, 0xd7, 0xf4, 0x46, 0x56, 0xc6, 0x36,
  0x25, 0x60, 0xca, 0x90, 0xe1, 0xb9, 0xc8, 0x95, 0xcd, 0xbd, 0xd5, 0xc9,
  0x8d, 0x95, 0xcd, 0x4d, 0x09, 0xba, 0x3a, 0x64, 0x78, 0x2e, 0x76, 0x69,
  0x65, 0x77, 0x49, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x53, 0x82, 0xaf,
  0x0e, 0x19, 0x9e, 0x4b, 0x99, 0x1b, 0x9d, 0x5c, 0x1e, 0xd4, 0x5b, 0x9a,
  0x1b, 0xdd, 0xdc, 0x94, 0x80, 0x0f, 0x00, 0x00, 0x79, 0x18, 0x00, 0x00,
  0x51, 0x00, 0x00, 0x00, 0x33, 0x08, 0x80, 0x1c, 0xc4, 0xe1, 0x1c, 0x66,
  0x14, 0x01, 0x3d, 0x88, 0x43, 0x38, 0x84, 0xc3, 0x8c, 0x42, 0x80, 0x07,
  0x79, 0x78, 0x07, 0x73, 0x98, 0x71, 0x0c, 0xe6, 0x00, 0x0f, 0xed, 0x10,
  0x0e, 0xf4, 0x80, 0x0e, 0x33, 0x0c, 0x42, 0x1e, 0xc2, 0xc1, 0x1d, 0xce,
  0xa1, 0x1c, 0x66, 0x30, 0x05, 0x3d, 0x88, 0x43, 0x38, 0x84, 0x83, 0x1b,
  0xcc, 0x03, 0x3d, 0xc8, 0x43, 0x3d, 0x8c, 0x03, 0x3d, 0xcc, 0x78, 0x8c,
  0x74, 0x70, 0x07, 0x7b, 0x08, 0x07, 0x79, 0x48, 0x87, 0x70, 0x70, 0x07,
  0x7a, 0x70, 0x03, 0x76, 0x78, 0x87, 0x70, 0x20, 0x87, 0x19, 0xcc, 0x11,
  0x0e, 0xec, 0x90, 0x0e, 0xe1, 0x30, 0x0f, 0x6e, 0x30, 0x0f, 0xe3, 0xf0,
  0x0e, 0xf0, 0x50, 0x0e, 0x33, 0x10, 0xc4, 0x1d, 0xde, 0x21, 0x1c, 0xd8,
  0x21, 0x1d, 0xc2, 0x61, 0x1e, 0x66, 0x30, 0x89, 0x3b, 0xbc, 0x83, 0x3b,
  0xd0, 0x43, 0x39, 0xb4, 0x03, 0x3c, 0xbc, 0x83, 0x3c, 0x84, 0x03, 0x3b,
  0xcc, 0xf0, 0x14, 0x76, 0x60, 0x07, 0x7b, 0x68, 0x07, 0x37, 0x68, 0x87,
  0x72, 0x68, 0x07, 0x37, 0x80, 0x87, 0x70, 0x90, 0x87, 0x70, 0x60, 0x07,
  0x76, 0x28, 0x07, 0x76, 0xf8, 0x05, 0x76, 0x78, 0x87, 0x77, 0x80, 0x87,
  0x5f, 0x08, 0x87, 0x71, 0x18, 0x87, 0x72, 0x98, 0x87, 0x79, 0x98, 0x81,
  0x2c, 0xee, 0xf0, 0x0e, 0xee, 0xe0, 0x0e, 0xf5, 0xc0, 0x0e, 0xec, 0x30,
  0x03, 0x62, 0xc8, 0xa1, 0x1c, 0xe4, 0xa1, 0x1c, 0xcc, 0xa1, 0x1c, 0xe4,
  0xa1, 0x1c, 0xdc, 0x61, 0x1c, 0xca, 0x21, 0x1c, 0xc4, 0x81, 0x1d, 0xca,
  0x61, 0x06, 0xd6, 0x90, 0x43, 0x39, 0xc8, 0x43, 0x39, 0x98, 0x43, 0x39,
  0xc8, 0x43, 0x39, 0xb8, 0xc3, 0x38, 0x94, 0x43, 0x38, 0x88, 0x03, 0x3b,
  0x94, 0xc3, 0x2f, 0xbc, 0x83, 0x3c, 0xfc, 0x82, 0x3b, 0xd4, 0x03, 0x3b,
  0xb0, 0xc3, 0x0c, 0xc4, 0x21, 0x07, 0x7c, 0x70, 0x03, 0x7a, 0x28, 0x87,
  0x76, 0x80, 0x87, 0x19, 0xd1, 0x43, 0x0e, 0xf8, 0xe0, 0x06, 0xe4, 0x20,
  0x0e, 0xe7, 0xe0, 0x06, 0xf6, 0x10, 0x0e, 0xf2, 0xc0, 0x0e, 0xe1, 0x90,
  0x0f, 0xef, 0x50, 0x0f, 0xf4, 0x30, 0x83, 0x81, 0xc8, 0x01, 0x1f, 0xdc,
  0x40, 0x1c, 0xe4, 0xa1, 0x1c, 0xc2, 0x61, 0x1d, 0xdc, 0x40, 0x1c, 0xe4,
  0x01, 0x00, 0x00, 0x00, 0x71, 0x20, 0x00, 0x00, 0x2d, 0x00, 0x00, 0x00,
  0x06, 0xa0, 0xa4, 0x2c, 0xe7, 0x34, 0xd2, 0x04, 0x34, 0x93, 0x15, 0x40,
  0xc3, 0xe5, 0x3b, 0x8f, 0x1f, 0x20, 0x0d, 0x10, 0x61, 0x7e, 0x71, 0xdb,
  0x96, 0xb0, 0x0d, 0x97, 0xef, 0x3c, 0xbe, 0x10, 0x50, 0x45, 0x41, 0x44,
  0xa5, 0x03, 0x0c, 0x25, 0x61, 0x00, 0x02, 0xe6, 0x17, 0xb7, 0x6d, 0x08,
  0xdb, 0x70, 0xf9, 0xce, 0xe3, 0x0b, 0x01, 0x55, 0x14, 0x44, 0x54, 0x3a,
  0xc0, 0x50, 0x12, 0x06, 0x20, 0x60, 0x3e, 0x72, 0xdb, 0xa6, 0x20, 0x0d,
  0x97, 0xef, 0x3c, 0xbe, 0x10, 0x11, 0xc0, 0x44, 0x84, 0x40, 0x33, 0x2c,
  0x84, 0x0d, 0x38, 0xc3, 0xe5, 0x3b, 0x8f, 0x3f, 0x38, 0xd3, 0xed, 0x17,
  0xb7, 0x6d, 0x01, 0xd3, 0x70, 0xf9, 0xce, 0xe3, 0x2f, 0x0e, 0x30, 0x88,
  0xcd, 0x43, 0x4d, 0x7e, 0x71, 0xdb, 0x66, 0x00, 0x0d, 0x97, 0xef, 0x3c,
  0xbe, 0x04, 0x30, 0xcf, 0x42, 0xf8, 0xc5, 0x6d, 0xdb, 0x41, 0x35, 0x5c,
  0xbe, 0xf3, 0xf8, 0x12, 0xc0, 0x3c, 0x0b, 0x51, 0x12, 0x15, 0xb1, 0xf8,
  0xc5, 0x6d, 0x9b, 0x40, 0x35, 0x5c, 0xbe, 0xf3, 0xf8, 0xd2, 0xe4, 0x44,
  0x04, 0x4a, 0x4d, 0x0f, 0x35, 0xf9, 0xc5, 0x6d, 0x1b, 0xc1, 0x33, 0x5c,
  0xbe, 0xf3, 0xf8, 0x54, 0x03, 0x44, 0x98, 0x5f, 0xdc, 0x36, 0x00, 0x00,
  0x61, 0x20, 0x00, 0x00, 0x45, 0x01, 0x00, 0x00, 0x13, 0x04, 0x43, 0x2c,
  0x10, 0x00, 0x00, 0x00, 0x1b, 0x00, 0x00, 0x00, 0xb4, 0x8d, 0x00, 0x50,
  0x51, 0x02, 0x44, 0x14, 0x5f, 0xe1, 0x95, 0x49, 0x19, 0x15, 0x48, 0xb1,
  0x94, 0x4b, 0xc9, 0x94, 0x5c, 0xd9, 0x95, 0xdb, 0x0c, 0x00, 0x0d, 0x63,
  0x04, 0x20, 0x08, 0x82, 0xe8, 0x37, 0x46, 0xd0, 0xf7, 0x2d, 0x8b, 0x6b,
  0x63, 0x04, 0xbb, 0x3f, 0xca, 0x24, 0x18, 0x8c, 0x11, 0x80, 0x20, 0x08,
  0xe2, 0xbf, 0x30, 0x46, 0x00, 0x82, 0x20, 0x08, 0xff, 0xc2, 0x18, 0x01,
  0x08, 0x82, 0x20, 0x08, 0x06, 0x33, 0x00, 0x63, 0x04, 0x2f, 0x0d, 0xaf,
  0xf7, 0x37, 0x02, 0x30, 0x46, 0xa0, 0xe2, 0xf5, 0x29, 0x7b, 0x63, 0x04,
  0x2a, 0x5e, 0x9f, 0xb2, 0x2f, 0x8c, 0x11, 0x80, 0x20, 0x08, 0x82, 0xa0,
  0x30, 0x46, 0x00, 0x82, 0x20, 0x88, 0x7f, 0x00, 0x23, 0x06, 0x09, 0x00,
  0x82, 0x60, 0xc0, 0xc9, 0x41, 0x44, 0x06, 0x71, 0xc0, 0x06, 0xdb, 0x88,
  0x41, 0x02, 0x80, 0x20, 0x18, 0x70, 0x73, 0x20, 0x95, 0x41, 0x1c, 0xb8,
  0x01, 0x37, 0x62, 0x90, 0x00, 0x20, 0x08, 0x06, 0x1c, 0x1d, 0x4c, 0x63,
  0x20, 0x07, 0x73, 0xd0, 0x8d, 0x18, 0x24, 0x00, 0x08, 0x82, 0x01, 0x57,
  0x07, 0x94, 0x19, 0xcc, 0xc1, 0x1c, 0x78, 0x23, 0x06, 0x09, 0x00, 0x82,
  0x60, 0x60, 0xfc, 0x41, 0x1c, 0xac, 0x01, 0x1d, 0xa0, 0x81, 0x34, 0x62,
  0x90, 0x00, 0x20, 0x08, 0x06, 0x06, 0x28, 0xc8, 0x01, 0x1b, 0xd4, 0xc1,
  0x37, 0x8d, 0x18, 0x24, 0x00, 0x08, 0x82, 0x81, 0x11, 0x0a, 0x73, 0xd0,
  0x06, 0x76, 0x90, 0x06, 0xd4, 0x88, 0x41, 0x02, 0x80, 0x20, 0x18, 0x18,
  0xa2, 0x40, 0x07, 0x78, 0x70, 0x07, 0x6b, 0x50, 0x8d, 0x18, 0x24, 0x00,
  0x08, 0x82, 0x81, 0x31, 0x0a, 0x75, 0x90, 0x07, 0x78, 0x20, 0x06, 0xd6,
  0x88, 0x41, 0x02, 0x80, 0x20, 0x18, 0x18, 0xa4, 0x60, 0x07, 0x7a, 0x90,
  0x07, 0x6c, 0x70, 0x8d, 0x18, 0x1c, 0x00, 0x08, 0x82, 0x41, 0xd6, 0x07,
  0xda, 0xa1, 0x07, 0xa3, 0x09, 0x01, 0x30, 0x9a, 0x20, 0x04, 0xa3, 0x09,
  0x83, 0x60, 0xc3, 0x11, 0x1f, 0x1b, 0x8e, 0xf8, 0xd8, 0x70, 0xc4, 0x67,
  0xc4, 0x60, 0x01, 0x40, 0x10, 0x0c, 0x14, 0x55, 0x00, 0x83, 0x41, 0x08,
  0x06, 0x21, 0x18, 0x31, 0x30, 0x00, 0x10, 0x04, 0x03, 0x46, 0x15, 0xc8,
  0x20, 0xb0, 0x22, 0x90, 0x8f, 0x15, 0x82, 0x7c, 0xac, 0x18, 0xe4, 0x33,
  0x62, 0xb0, 0x00, 0x20, 0x08, 0x06, 0xca, 0x2b, 0x94, 0x81, 0x14, 0x41,
  0x52, 0x04, 0x8d, 0x18, 0x18, 0x00, 0x08, 0x82, 0x01, 0xf3, 0x0a, 0x69,
  0x10, 0x58, 0x40, 0xc9, 0xc7, 0x04, 0x4a, 0x3e, 0x36, 0x50, 0xf2, 0x19,
  0x31, 0x38, 0x00, 0x10, 0x04, 0x83, 0xcc, 0x15, 0xd6, 0x00, 0x73, 0x83,
  0xd1, 0x84, 0x00, 0x18, 0x4d, 0x10, 0x82, 0x11, 0x83, 0x03, 0x00, 0x41,
  0x30, 0xc8, 0x62, 0xc1, 0x0d, 0x36, 0x39, 0x18, 0x4d, 0x08, 0x80, 0xd1,
  0x04, 0x21, 0x18, 0x4d, 0x18, 0x84, 0x11, 0x83, 0x05, 0x00, 0x41, 0x30,
  0x50, 0x76, 0x21, 0x0e, 0x94, 0x04, 0x79, 0x9c, 0x66, 0xc4, 0xc0, 0x00,
  0x40, 0x10, 0x0c, 0x98, 0x5d, 0x58, 0x85, 0xc0, 0x8e, 0x43, 0x3e, 0x66,
  0x24, 0xf2, 0x31, 0x43, 0x91, 0x8f, 0x19, 0x8b, 0x7c, 0x2c, 0x19, 0xe2,
  0x63, 0xc9, 0x10, 0x1f, 0x4b, 0x86, 0xf8, 0x18, 0xe3, 0x06, 0xf0, 0x31,
  0xe6, 0x0d, 0xe0, 0x63, 0x0c, 0x1c, 0xc0, 0xc7, 0x06, 0x49, 0x3e, 0x36,
  0x4c, 0xf2, 0xb1, 0x81, 0x92, 0x8f, 0x0d, 0x75, 0x00, 0x1f, 0x1b, 0xec,
  0x00, 0x3e, 0x36, 0xdc, 0x01, 0x7c, 0x66, 0x09, 0x82, 0x81, 0x8a, 0x41,
  0x1e, 0x80, 0xd0, 0x08, 0x06, 0x2a, 0x06, 0x7a, 0x00, 0x42, 0x23, 0x18,
  0xa8, 0x18, 0xec, 0x01, 0x08, 0x8d, 0x60, 0xa0, 0x82, 0x70, 0x0d, 0x20,
  0x34, 0x02, 0x0b, 0x5a, 0x01, 0x06, 0x23, 0x06, 0x07, 0x00, 0x82, 0x60,
  0x90, 0xb1, 0x43, 0x2a, 0xd8, 0x41, 0x30, 0x9a, 0x10, 0x00, 0xa3, 0x09,
  0x42, 0x30, 0x9a, 0x30, 0x08, 0xf6, 0x07, 0x43, 0x7c, 0x0c, 0x14, 0x86,
  0xf8, 0x58, 0x28, 0x0c, 0xf1, 0x19, 0x31, 0x58, 0x00, 0x10, 0x04, 0x03,
  0x25, 0x1f, 0x5e, 0x61, 0x10, 0x82, 0x41, 0x08, 0x46, 0x0c, 0x0c, 0x00,
  0x04, 0xc1, 0x80, 0xc9, 0x87, 0x59, 0x08, 0x2c, 0x28, 0xe4, 0x63, 0x42,
  0x21, 0x1f, 0x1b, 0x0a, 0xf9, 0xd8, 0x20, 0x07, 0xf0, 0xb1, 0x41, 0x0e,
  0xe0, 0x63, 0x83, 0x1c, 0xc0, 0x67, 0xc4, 0x60, 0x01, 0x40, 0x10, 0x0c,
  0x94, 0x90, 0xb8, 0x85, 0x41, 0x08, 0x06, 0x21, 0x18, 0x31, 0x30, 0x00,
  0x10, 0x04, 0x03, 0x26, 0x24, 0x76, 0x21, 0xb0, 0x22, 0x90, 0x8f, 0x15,
  0x82, 0x7c, 0xac, 0x18, 0xe4, 0x33, 0x62, 0xb0, 0x00, 0x20, 0x08, 0x06,
  0x8a, 0x49, 0xf0, 0x42, 0x1d, 0xd0, 0xc1, 0x1c, 0x2c, 0x4a, 0x32, 0x62,
  0x60, 0x00, 0x20, 0x08, 0x06, 0x8c, 0x49, 0xd8, 0x43, 0x30, 0x62, 0xb0,
  0x00, 0x20, 0x08, 0x06, 0x0a, 0x4a, 0xf8, 0x42, 0xc3, 0x2c, 0x05, 0x31,
  0x8c, 0x18, 0x18, 0x00, 0x08, 0x82, 0x01, 0x83, 0x12, 0xf8, 0x10, 0x8c,
  0x18, 0x2c, 0x00, 0x08, 0x82, 0x81, 0xa2, 0x12, 0xe0, 0x90, 0x07, 0x78,
  0x70, 0x07, 0x87, 0x51, 0x8c, 0x18, 0x18, 0x00, 0x08, 0x82, 0x01, 0xa3,
  0x12, 0xfa, 0x10, 0x98, 0x1d, 0xec, 0x82, 0x7c, 0x8c, 0x20, 0xe4, 0x63,
  0x81, 0x20, 0x1f, 0x0b, 0x7e, 0x01, 0x3e, 0x86, 0x0b, 0x49, 0x7c, 0x2c,
  0x08, 0xe4, 0x63, 0x41, 0x20, 0x1f, 0x0b, 0x06, 0xf9, 0x58, 0x50, 0xc8,
  0xc7, 0x82, 0x5e, 0x80, 0x8f, 0xf9, 0x82, 0x1e, 0xc4, 0xc7, 0x82, 0x40,
  0x3e, 0x16, 0x04, 0xf2, 0xb1, 0x60, 0x90, 0x8f, 0x05, 0x8b, 0x7c, 0x2c,
  0x18, 0x07, 0xf8, 0xd8, 0x11, 0xc8, 0xc7, 0x40, 0x01, 0x14, 0xe4, 0x63,
  0xc1, 0x3b, 0xc0, 0xc7, 0x28, 0x4a, 0x3e, 0x16, 0x08, 0xf2, 0xb1, 0x20,
  0x1d, 0xe0, 0x63, 0x41, 0x20, 0x1f, 0x0b, 0xea, 0x41, 0x3e, 0x23, 0x06,
  0x07, 0x00, 0x82, 0x60, 0xe0, 0x88, 0x45, 0x48, 0xdc, 0x43, 0x60, 0x48,
  0x40, 0x1f, 0x9b, 0x87, 0x3f, 0x88, 0x8f, 0xd1, 0xc3, 0x1f, 0xc4, 0xc7,
  0xea, 0xe1, 0x0f, 0xe2, 0x63, 0xf1, 0x00, 0x06, 0xf1, 0xb1, 0x20, 0x90,
  0x8f, 0x05, 0x81, 0x7c, 0x2c, 0x18, 0xe4, 0x63, 0xc1, 0x21, 0x1f, 0x13,
  0x0e, 0xf9, 0xd8, 0x70, 0xc8, 0xc7, 0x06, 0x53, 0x80, 0x8f, 0x0d, 0xa6,
  0x00, 0x1f, 0x1b, 0x4c, 0x01, 0x3e, 0xb6, 0x0f, 0x66, 0x10, 0x1f, 0xbb,
  0x50, 0x42, 0x3e, 0x16, 0x08, 0xf2, 0xb1, 0x20, 0x0d, 0xe0, 0x63, 0xff,
  0x10, 0xd0, 0xc7, 0x82, 0x49, 0x3e, 0x16, 0x24, 0xf2, 0x31, 0x21, 0x91,
  0x8f, 0x0d, 0x89, 0x7c, 0x8c, 0x15, 0x74, 0x02, 0x06, 0x23, 0x06, 0x07,
  0x00, 0x82, 0x60, 0x90, 0xdd, 0x05, 0x4d, 0x84, 0x44, 0x30, 0x9a, 0x10,
  0x00, 0xa3, 0x09, 0x42, 0x30, 0x9a, 0x30, 0x08, 0x36, 0xe8, 0x81, 0x7c,
  0x6c, 0xd8, 0x03, 0xf9, 0xd8, 0xc0, 0x07, 0xf2, 0x31, 0x34, 0x18, 0x07,
  0xf9, 0x58, 0x1a, 0x8c, 0x83, 0x7c, 0x4c, 0x0d, 0xc6, 0x41, 0x3e, 0xe6,
  0x0c, 0xf0, 0x31, 0x67, 0x80, 0x8f, 0x39, 0x03, 0x7c, 0x2c, 0x19, 0xe4,
  0x63, 0xc9, 0x20, 0x1f, 0x4b, 0x06, 0xf9, 0xd8, 0x00, 0x0e, 0xf0, 0xb1,
  0x01, 0x1c, 0xe0, 0x63, 0x03, 0x38, 0xc0, 0xc7, 0xc0, 0x01, 0x35, 0x60,
  0x30, 0xdc, 0x10, 0x84, 0x06, 0x18, 0xcc, 0x32, 0x08, 0x41, 0x30, 0x62,
  0xf0, 0x00, 0x20, 0x08, 0x06, 0xd3, 0x6b, 0xc4, 0x45, 0x4e, 0xdc, 0x44,
  0x48, 0x80, 0xc4, 0x3f, 0x80, 0xc5, 0x59, 0x9c, 0xc5, 0x59, 0x80, 0xc5,
  0x68, 0x42, 0x00, 0x8c, 0x26, 0x08, 0xc1, 0x68, 0xc2, 0x20, 0xd8, 0x50,
  0x0f, 0xf2, 0xb1, 0xa1, 0x1e, 0xe4, 0x63, 0x43, 0x3d, 0xc8, 0xc7, 0x06,
  0x06, 0x3e, 0x36, 0x30, 0xf0, 0xb1, 0x81, 0x81, 0xcf, 0x88, 0xc1, 0x01,
  0x80, 0x20, 0x18, 0x58, 0xb7, 0x31, 0x17, 0x60, 0x61, 0x17, 0xa3, 0x09,
  0x81, 0x70, 0xc1, 0x60, 0x16, 0xa4, 0x84, 0x7c, 0x2c, 0x2d, 0x68, 0x22,
  0x3e, 0xa6, 0x16, 0x34, 0x11, 0x1f, 0x5b, 0x0b, 0x9a, 0x88, 0xcf, 0x88,
  0xc1, 0x02, 0x80, 0x20, 0x18, 0x28, 0xe3, 0x91, 0x17, 0x83, 0x10, 0xc8,
  0x44, 0x4c, 0xc0, 0x84, 0x05, 0x73, 0x21, 0x1f, 0x0b, 0x68, 0x42, 0x3e,
  0x26, 0xd0, 0x84, 0x7c, 0x6c, 0xa0, 0x09, 0xf9, 0x18, 0x32, 0xc4, 0xc7,
  0x90, 0x21, 0x3e, 0x86, 0x0c, 0xf1, 0x19, 0x31, 0x78, 0x00, 0x10, 0x04,
  0x83, 0xe9, 0x3c, 0x56, 0x23, 0x2e, 0xe0, 0x62, 0x10, 0x82, 0xbc, 0x00,
  0x0d, 0xd0, 0x00, 0x0d, 0x66, 0x34, 0x21, 0x00, 0x46, 0x13, 0x84, 0x60,
  0x34, 0x61, 0x10, 0x6c, 0x28, 0x09, 0xf9, 0xd8, 0x50, 0x12, 0xf2, 0xb1,
  0xa1, 0x24, 0xe4, 0x63, 0xd9, 0x00, 0x1f, 0xcb, 0x06, 0xf8, 0x58, 0x36,
  0xc0, 0x67, 0x34, 0xc1, 0x27, 0x86, 0x11, 0x83, 0x04, 0x00, 0x41, 0x30,
  0x40, 0xee, 0x23, 0x3d, 0xda, 0xa3, 0x3d, 0xc2, 0x83, 0x18, 0x31, 0x48,
  0x00, 0x10, 0x04, 0x03, 0xe4, 0x3e, 0xd2, 0xa3, 0x3d, 0xda, 0xe3, 0x36,
  0x86, 0x11, 0x83, 0x04, 0x00, 0x41, 0x30, 0x40, 0xee, 0x23, 0x3d, 0xda,
  0xa3, 0x3d, 0xc0, 0x43, 0x18, 0x31, 0x48, 0x00, 0x10, 0x04, 0x03, 0xe4,
  0x3e, 0xd2, 0xa3, 0x3d, 0xda, 0xc3, 0x37, 0x02, 0x04, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xce, 0xb9, 0x2b, 0x15, 0x83, 0xc8, 0x5b, 0xec,
  0xd4, 0xc0, 0x32, 0xf9, 0x57, 0x48, 0x50, 0x2c, 0x17, 0x00, 0x01, 0x00,
  0x29, 0x9c, 0x16, 0x00, 0x78, 0x01, 0xed, 0x58, 0xdd, 0x6f, 0x1c, 0xd5,
  0x15, 0x3f, 0xf7, 0x63, 0x66, 0x67, 0x76, 0xef, 0xdc, 0xd9, 0x9d, 0xb5,
  0xcd, 0x7a, 0xbd, 0xde, 0xb5, 0xf7, 0xcb, 0x71, 0x1b, 0x1c, 0x27, 0xb8,
  0x4d, 0x15, 0xc0, 0xb1, 0x90, 0x05, 0x31, 0x8d, 0x92, 0x08, 0x41, 0x41,
  0x69, 0x1c, 0xa2, 0x08, 0x22, 0x1e, 0xe1, 0xa1, 0xaf, 0xd3, 0xe5, 0xb3,
  0x94, 0x46, 0x34, 0xea, 0x13, 0x0f, 0xbc, 0x20, 0xe5, 0x01, 0x01, 0x7f,
  0x40, 0xfb, 0xc0, 0xc6, 0x4d, 0x79, 0x58, 0x59, 0x80, 0xaa, 0x05, 0xa9,
  0x95, 0x78, 0xe9, 0x63, 0x85, 0x78, 0x88, 0x78, 0x02, 0x09, 0xb1, 0xfd,
  0x9d, 0xeb, 0xdd, 0x78, 0x9d, 0x5a, 0x48, 0x95, 0xa8, 0x44, 0x55, 0xff,
  0xa4, 0x73, 0xcf, 0x9c, 0xfb, 0x71, 0xee, 0x9d, 0xdf, 0x6f, 0xe6, 0xee,
  0xce, 0x7d, 0x73, 0x8a, 0x1c, 0xfe, 0xf1, 0xd1, 0x5b, 0xff, 0x64, 0xff,
  0xfc, 0x97, 0x3f, 0xef, 0xfe, 0xd1, 0x10, 0x79, 0xb8, 0x16, 0x30, 0xf6,
  0x8c, 0x37, 0x22, 0x2e, 0x89, 0xf2, 0xc3, 0xfe, 0x21, 0x17, 0x43, 0x94,
  0x60, 0xc7, 0x61, 0x8c, 0x35, 0x2e, 0x86, 0xe0, 0xf1, 0x57, 0xae, 0x5c,
  0x59, 0x85, 0x9d, 0xc4, 0xe5, 0xbf, 0x61, 0x12, 0x76, 0x1c, 0x9d, 0x16,
  0xb8, 0x23, 0x90, 0xe7, 0x62, 0x88, 0x00, 0x26, 0x61, 0x8c, 0x91, 0x67,
  0x0c, 0xbb, 0xee, 0x81, 0x0f, 0xe3, 0x3e, 0x1a, 0x36, 0x42, 0x8e, 0x0b,
  0xc0, 0xfb, 0xfc, 0xcd, 0xfb, 0xe0, 0xd6, 0x61, 0xf4, 0x42, 0xe3, 0xb3,
  0xfb, 0xd9, 0xbf, 0xd6, 0xba, 0xfb, 0x5e, 0xf6, 0xe5, 0xcc, 0x93, 0xfb,
  0xae, 0xeb, 0x7f, 0x05, 0xfb, 0x71, 0x31, 0xd2, 0x89, 0x71, 0x29, 0xc3,
  0xe5, 0x77, 0xc3, 0x72, 0x01, 0x7c, 0x35, 0xc1, 0xe5, 0xae, 0x96, 0x5b,
  0xb0, 0xfd, 0xf2, 0x33, 0x06, 0x00, 0xfb, 0xfd, 0xc0, 0x3a, 0xf8, 0x22,
  0xee, 0xb0, 0x80, 0xbe, 0xbc, 0xab, 0xb3, 0x47, 0xd4, 0xff, 0x13, 0x54,
  0xb9, 0x00, 0x98, 0x0b, 0x36, 0xa6, 0x20, 0x86, 0x8d, 0x30, 0x7a, 0x4e,
  0x3f, 0x71, 0x04, 0x77, 0x6e, 0xb0, 0x5d, 0x2b, 0xd1, 0x57, 0x1c, 0x8d,
  0x62, 0x81, 0x58, 0x71, 0x38, 0x8c, 0x15, 0xc7, 0x6e, 0xe0, 0x58, 0x9c,
  0x25, 0x52, 0x21, 0x5d, 0x94, 0x93, 0xf2, 0x62, 0x5c, 0xc1, 0x78, 0xe4,
  0x43, 0x7c, 0x01, 0xf1, 0x85, 0xb1, 0xf8, 0x3c, 0xe2, 0xf3, 0x63, 0xf1,
  0x25, 0xc4, 0x97, 0xc6, 0xe2, 0xcb, 0x88, 0x2f, 0x8f, 0xe2, 0x51, 0xfe,
  0xd8, 0xcd, 0x27, 0xb3, 0xdf, 0xa5, 0xf5, 0x0f, 0x05, 0x07, 0x6b, 0xfc,
  0x7e, 0x70, 0xb0, 0xc6, 0xef, 0x07, 0x07, 0x6b, 0x3c, 0xc0, 0x01, 0x0e,
  0x70, 0x80, 0x03, 0xfc, 0xb7, 0x91, 0xea, 0xf7, 0xba, 0x69, 0xf6, 0xdb,
  0x6e, 0x4e, 0xbd, 0xd0, 0x35, 0x83, 0xc5, 0x57, 0xf9, 0xdf, 0xa6, 0x54,
  0x6f, 0x77, 0xff, 0xac, 0xde, 0xe9, 0x0e, 0xd4, 0xbb, 0xdd, 0xf7, 0xce,
  0xe2, 0x1f, 0xe8, 0x62, 0xe7, 0x66, 0xac, 0xbe, 0xe9, 0x12, 0x4d, 0xf4,
  0x48, 0x94, 0x7a, 0xa4, 0x83, 0x1e, 0x79, 0xa6, 0x47, 0x7e, 0xbe, 0x87,
  0x3f, 0xa8, 0x3d, 0x41, 0x93, 0x3d, 0x21, 0xa6, 0x7b, 0x42, 0x8a, 0x9e,
  0xd0, 0x61, 0x4f, 0x78, 0x51, 0x4f, 0xf8, 0x85, 0xde, 0xaf, 0xe9, 0xea,
  0x0d, 0xca, 0xca, 0x40, 0x98, 0x6c, 0xe0, 0xe5, 0x8c, 0x45, 0xa6, 0x40,
  0x28, 0x63, 0x48, 0x18, 0xe3, 0x6f, 0x9a, 0xf4, 0xc2, 0xe2, 0x1f, 0x6e,
  0x3e, 0x81, 0xdc, 0x19, 0xf5, 0x52, 0x57, 0x44, 0xd6, 0x7a, 0x51, 0xd6,
  0x52, 0x64, 0xac, 0xca, 0x90, 0x95, 0x1e, 0x19, 0x1d, 0x92, 0xa1, 0x4d,
  0x4a, 0x3b, 0xea, 0xe5, 0x6e, 0x47, 0xfd, 0x16, 0xf6, 0xbb, 0x2e, 0x79,
  0x79, 0x4b, 0x99, 0xc4, 0x52, 0x18, 0x58, 0x97, 0x5f, 0x52, 0x6a, 0xa8,
  0xd3, 0xa7, 0x0d, 0x6a, 0x0a, 0x29, 0x53, 0x0a, 0x3f, 0xdc, 0x22, 0xaf,
  0xb7, 0x45, 0xb9, 0x6b, 0x5b, 0xc6, 0x3b, 0xe3, 0xda, 0xc4, 0x86, 0x6e,
  0x4a, 0xa9, 0x53, 0x25, 0x27, 0xd2, 0xb5, 0x45, 0xfa, 0x8b, 0xf1, 0x2e,
  0xb8, 0x7a, 0xb9, 0x11, 0x34, 0x8d, 0x77, 0x31, 0xc5, 0x0f, 0x99, 0x9f,
  0xfd, 0x5b, 0xe3, 0xfd, 0x81, 0x2c, 0xa5, 0xf0, 0xf7, 0x47, 0x68, 0xa3,
  0x8d, 0x65, 0x3d, 0x90, 0x72, 0xa7, 0x5e, 0x6b, 0xe7, 0x23, 0xef, 0x52,
  0xca, 0x6d, 0x02, 0x6d, 0x4d, 0x5d, 0x32, 0xc6, 0x7b, 0x2a, 0xe5, 0x35,
  0x18, 0xb2, 0x7d, 0xe6, 0xd2, 0x90, 0xe9, 0x0b, 0xdc, 0x24, 0x7b, 0x89,
  0xff, 0xda, 0x66, 0xb3, 0x94, 0x46, 0xde, 0xe5, 0x34, 0xcc, 0x4d, 0x59,
  0x85, 0x71, 0x41, 0xbc, 0xa4, 0x0b, 0xf0, 0x46, 0x4d, 0xac, 0xe7, 0xd9,
  0x8b, 0xca, 0x7a, 0xa1, 0xd1, 0xb4, 0x11, 0xc6, 0x1b, 0x41, 0x6b, 0x96,
  0xbd, 0xa2, 0xb5, 0x98, 0xbd, 0x47, 0x6b, 0xbc, 0x46, 0xe3, 0x95, 0xd6,
  0xf3, 0xf3, 0x4d, 0x63, 0xa6, 0x9b, 0x26, 0xd9, 0x6c, 0xa6, 0x3a, 0xf2,
  0x8d, 0x0a, 0x82, 0xfe, 0x97, 0xbe, 0xa4, 0x63, 0xf2, 0x50, 0x9a, 0x6f,
  0xcd, 0xd9, 0x42, 0xab, 0x6e, 0x4d, 0xab, 0x64, 0xc3, 0xd9, 0xa6, 0x0d,
  0x66, 0x9a, 0xc6, 0x36, 0x2a, 0xc8, 0xd9, 0xe9, 0x47, 0xf3, 0x27, 0xb4,
  0xae, 0x35, 0x4d, 0x3c, 0x5d, 0x36, 0x61, 0xa3, 0x6a, 0x0b, 0x3c, 0xae,
  0x29, 0xa9, 0x18, 0xcc, 0xf5, 0x93, 0x96, 0x24, 0x9e, 0x3b, 0x69, 0x61,
  0xcc, 0x7c, 0xd5, 0xe4, 0xc9, 0xef, 0xb7, 0x1e, 0x26, 0x4a, 0x1a, 0x75,
  0xf0, 0xdf, 0xb4, 0x16, 0x7d, 0xa2, 0x19, 0x49, 0x26, 0xe8, 0xf4, 0xf5,
  0xf4, 0xaa, 0xe6, 0x7e, 0x76, 0xb6, 0x6a, 0xf3, 0xde, 0x54, 0xca, 0x6b,
  0x8f, 0xef, 0xfa, 0x40, 0x25, 0x19, 0xdf, 0xf2, 0xfd, 0x14, 0xe6, 0xb7,
  0x15, 0xd7, 0x29, 0xf8, 0xc2, 0x3c, 0xd6, 0x83, 0xf5, 0x73, 0x2e, 0xce,
  0xef, 0xda, 0x1b, 0x1f, 0xab, 0x82, 0x5a, 0x4a, 0x07, 0xb2, 0x9e, 0xfe,
  0xfe, 0xe6, 0xaf, 0xf0, 0xcd, 0xcc, 0xfc, 0xae, 0x37, 0xc9, 0xbb, 0x92,
  0xf2, 0xb5, 0x70, 0xd7, 0xcf, 0xb8, 0x6b, 0xe9, 0xae, 0x4f, 0xa5, 0xc4,
  0x6b, 0x2d, 0x83, 0x4c, 0x21, 0xad, 0x99, 0x2e, 0x59, 0xa1, 0xe0, 0xd1,
  0x6e, 0x8e, 0x6c, 0xab, 0xc4, 0xab, 0xa6, 0x42, 0x90, 0x5d, 0x86, 0xde,
  0x47, 0xa1, 0xeb, 0x31, 0x59, 0x4e, 0xb9, 0xcf, 0x3d, 0x24, 0xcd, 0x0a,
  0x69, 0xc3, 0x79, 0x68, 0x63, 0x45, 0x33, 0x07, 0x76, 0x76, 0xbb, 0x11,
  0xcb, 0x4a, 0x3a, 0x28, 0x95, 0xec, 0x67, 0xf1, 0xc6, 0xda, 0xa0, 0x52,
  0xc1, 0x27, 0x6b, 0x67, 0x15, 0xf1, 0xdc, 0xfb, 0xc7, 0x5f, 0xf9, 0x89,
  0x55, 0x87, 0x9d, 0xa6, 0x53, 0x33, 0xab, 0xda, 0x3c, 0x06, 0xbd, 0x1e,
  0x2b, 0xa7, 0x0b, 0x73, 0x75, 0xbb, 0x34, 0xd7, 0xb4, 0x31, 0xc6, 0x44,
  0xc8, 0x7b, 0x64, 0x6e, 0xce, 0x0a, 0xf4, 0x31, 0xea, 0x41, 0x2d, 0xd9,
  0x7b, 0x0f, 0x43, 0x5d, 0x78, 0xf1, 0x00, 0x26, 0xb3, 0x7d, 0x8d, 0x6f,
  0x55, 0xd6, 0xdc, 0xc3, 0xf7, 0x14, 0x7b, 0x1f, 0x2b, 0x70, 0xda, 0xb7,
  0x2b, 0xd6, 0xb4, 0xcb, 0xd6, 0xb6, 0xab, 0x78, 0xb8, 0xb5, 0xb5, 0x3c,
  0x26, 0x37, 0xb1, 0x1e, 0xe1, 0x5e, 0x62, 0xac, 0x9f, 0xe7, 0x35, 0x61,
  0x65, 0x9d, 0x79, 0x2d, 0x22, 0x8f, 0x09, 0x69, 0x8d, 0xb9, 0x33, 0x39,
  0x5a, 0x4b, 0xd8, 0x47, 0xc3, 0x67, 0x20, 0x2a, 0xad, 0x47, 0x33, 0x55,
  0x3c, 0x03, 0x55, 0x13, 0x6f, 0x56, 0x53, 0x5b, 0x83, 0xbe, 0xb5, 0xb2,
  0x35, 0xb5, 0x92, 0x2d, 0x14, 0xa1, 0xeb, 0x6c, 0x1d, 0xda, 0x57, 0x6c,
  0x71, 0xa6, 0x8e, 0x21, 0x78, 0xce, 0x66, 0x4e, 0xe8, 0x60, 0xa1, 0x6a,
  0x92, 0xe9, 0xba, 0xd9, 0xd1, 0xef, 0xa7, 0x5a, 0xb7, 0x78, 0x7c, 0xe9,
  0x36, 0x87, 0x79, 0xe8, 0x1b, 0xd7, 0x24, 0xc5, 0xcc, 0x73, 0x15, 0xbe,
  0xd6, 0x76, 0x3c, 0x27, 0xa8, 0x2f, 0x34, 0x24, 0x25, 0xad, 0xb2, 0x1d,
  0x71, 0x56, 0x5c, 0x68, 0xf3, 0xb5, 0xe3, 0xab, 0x58, 0xc3, 0xbd, 0x20,
  0x47, 0xc4, 0xfa, 0xc3, 0x27, 0xad, 0xed, 0x06, 0xf3, 0x36, 0xd5, 0x2a,
  0x9b, 0x18, 0x71, 0x3c, 0xbb, 0xad, 0xb8, 0x5d, 0xc1, 0xc7, 0x58, 0x93,
  0xcb, 0x5f, 0x97, 0x74, 0x6e, 0x71, 0xeb, 0x26, 0x73, 0x1b, 0xd7, 0xea,
  0xb6, 0x80, 0x67, 0x8c, 0xb9, 0x2d, 0x20, 0xd7, 0x32, 0x9e, 0x89, 0xa3,
  0xb2, 0x9d, 0x32, 0xcf, 0xf7, 0x54, 0xeb, 0x66, 0xa5, 0xda, 0xde, 0xc9,
  0xb3, 0x71, 0x4e, 0x2f, 0x54, 0x0e, 0xd9, 0xa5, 0xca, 0x8f, 0xec, 0x11,
  0x68, 0xe6, 0xde, 0xf5, 0xb9, 0xb2, 0x15, 0xd0, 0x85, 0x9f, 0x29, 0xd3,
  0x78, 0x44, 0x17, 0xd9, 0x2f, 0xfc, 0x42, 0x4b, 0xe8, 0xe3, 0xee, 0xab,
  0x76, 0x42, 0xe7, 0xa7, 0x09, 0x1b, 0x8c, 0xed, 0x07, 0xf8, 0x68, 0x66,
  0x2d, 0xc2, 0x64, 0xc7, 0x67, 0x27, 0xe0, 0x59, 0x93, 0x86, 0x34, 0xc9,
  0x82, 0x36, 0xbc, 0x46, 0x53, 0x84, 0x16, 0xec, 0x0b, 0x63, 0x1a, 0x14,
  0x86, 0x1a, 0x14, 0x87, 0x1a, 0x4c, 0x0e, 0x35, 0x98, 0xfc, 0xcf, 0x35,
  0x18, 0xe7, 0x9f, 0xf5, 0x60, 0x7e, 0x9d, 0x0e, 0x9c, 0x0f, 0x1a, 0x70,
  0xbc, 0x9f, 0x0e, 0x23, 0xde, 0xef, 0xd0, 0x62, 0x87, 0x7f, 0x68, 0x31,
  0xe2, 0x9d, 0xef, 0x81, 0x75, 0x60, 0x4d, 0x98, 0x7f, 0xd6, 0x61, 0xa4,
  0x01, 0xef, 0x37, 0xac, 0x81, 0x1d, 0xf2, 0xef, 0xb8, 0xc7, 0xfb, 0xca,
  0xf7, 0x19, 0xa3, 0x3f, 0xf3, 0xcf, 0xfa, 0x2c, 0xcb, 0x2a, 0xf8, 0xaf,
  0xe3, 0x1d, 0x1a, 0x6a, 0x50, 0xa9, 0x9a, 0x95, 0x4a, 0xdd, 0xf1, 0x63,
  0x37, 0x4e, 0xeb, 0x05, 0xbf, 0x6d, 0x97, 0xfc, 0x43, 0xf6, 0x88, 0xef,
  0x5b, 0x0d, 0xfe, 0x3d, 0xf0, 0xef, 0x33, 0xdf, 0xb3, 0xbe, 0xeb, 0x93,
  0xcf, 0x48, 0xcd, 0x73, 0x9a, 0xda, 0x19, 0xbc, 0x13, 0xaf, 0xf7, 0x83,
  0x62, 0xb2, 0xb3, 0xc7, 0x41, 0x1f, 0xbe, 0xcf, 0xa8, 0xe6, 0x6b, 0x21,
  0x1e, 0xfd, 0x64, 0xe7, 0x6c, 0xe0, 0x35, 0xd7, 0x1e, 0xd3, 0x55, 0xe7,
  0x99, 0xa7, 0xa4, 0x91, 0xd5, 0xa4, 0xe8, 0x01, 0xa2, 0xad, 0x93, 0x92,
  0x5e, 0x75, 0xf5, 0x03, 0xe9, 0x63, 0x2f, 0xd8, 0x3a, 0x19, 0x2b, 0xe9,
  0xea, 0xd3, 0xc3, 0xdf, 0xfe, 0x26, 0x87, 0xbe, 0x99, 0xc2, 0xd2, 0xf5,
  0x1c, 0xb4, 0xf4, 0x43, 0x79, 0xca, 0x43, 0x9c, 0x2b, 0x4e, 0x5d, 0xd7,
  0xec, 0xc3, 0xf2, 0xf5, 0x90, 0x7d, 0xa1, 0x7a, 0x9d, 0x1e, 0xea, 0xdc,
  0x22, 0xdf, 0xc7, 0x6c, 0xaf, 0xf7, 0xc3, 0x5c, 0xa2, 0x69, 0x38, 0x77,
  0x3b, 0x2b, 0x53, 0x89, 0xf9, 0xb9, 0x2e, 0x87, 0xf9, 0xd9, 0x6b, 0xcc,
  0xe7, 0x62, 0xe1, 0xaf, 0x4a, 0xa1, 0xdd, 0x5c, 0x2d, 0x89, 0xdf, 0xa0,
  0x87, 0xae, 0xdd, 0x92, 0xa4, 0xc5, 0x73, 0xf1, 0xd5, 0x1b, 0xcc, 0xa3,
  0x7f, 0x76, 0x19, 0x7d, 0x31, 0xff, 0xe6, 0x8a, 0xe6, 0x79, 0x83, 0x27,
  0x7f, 0xa6, 0x9f, 0x45, 0xdb, 0x51, 0x19, 0x98, 0x65, 0xf2, 0x0d, 0xef,
  0x09, 0xf2, 0xe9, 0x09, 0xad, 0xee, 0x38, 0x4b, 0x21, 0x7a, 0xfe, 0x46,
  0x99, 0x9d, 0x70, 0x27, 0x31, 0xcb, 0x5c, 0x30, 0xca, 0x68, 0x13, 0x02,
  0x74, 0x8d, 0xd7, 0x61, 0xab, 0x93, 0xc2, 0x9d, 0x96, 0xee, 0xd6, 0x61,
  0x98, 0x12, 0x7c, 0x3a, 0x39, 0x56, 0x87, 0x61, 0x5a, 0xb8, 0x83, 0xb9,
  0xdd, 0x3a, 0x0c, 0xf3, 0x04, 0x36, 0xa1, 0xf1, 0x3a, 0x98, 0x2f, 0xdc,
  0x29, 0xeb, 0x6e, 0x1d, 0xe6, 0xcd, 0x08, 0x6c, 0x52, 0x77, 0xf4, 0x0b,
  0x64, 0x8e, 0xcf, 0x98, 0x6e, 0x1f, 0xbd, 0x72, 0xbf, 0x50, 0x46, 0x7b,
  0xea, 0xf8, 0xd0, 0x49, 0x07, 0x7b, 0xe7, 0xe5, 0xc3, 0x5d, 0x2f, 0xd8,
  0x3b, 0x2f, 0xf6, 0x65, 0xca, 0xe8, 0xbd, 0x73, 0xe0, 0xd6, 0x28, 0x00,
  0xeb, 0xc0, 0x6e, 0xbe, 0x21, 0x0e, 0x0d, 0xcf, 0x83, 0x4f, 0xc3, 0x78,
  0xb5, 0x3e, 0x45, 0xf4, 0x57, 0x78, 0x81, 0xe4, 0x48, 0xef, 0xf0, 0x29,
  0x8c, 0x63, 0x2c, 0xc1, 0xe1, 0xef, 0x30, 0x81, 0x5d, 0x06, 0x53, 0x39,
  0x68, 0x77, 0x82, 0x4b, 0xf4, 0xf1, 0x9f, 0x7e, 0x3c, 0xf9, 0x62, 0xef,
  0x97, 0x5f, 0x7c, 0xba, 0x75, 0xec, 0xeb, 0xc7, 0x4f, 0x9d, 0x3b, 0xfc,
  0x2f, 0x30, 0x48, 0xd3, 0xdb, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x0a, 0x00, 0x00, 0x00, 0x03, 0x00, 0x03, 0x00, 0x08, 0x02, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x04, 0x02, 0x08, 0x02, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x05, 0x04,
  0x08, 0x02, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x06, 0x06, 0x08, 0x02, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x07, 0x08, 0x08, 0x02, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x08, 0x0a,
  0x08, 0x02, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x03, 0x01, 0x09, 0x0c, 0x04, 0x02, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x03, 0x01, 0x0a, 0x0e, 0x04, 0x02, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x02, 0x0b, 0x10,
  0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x02, 0x0d, 0x13, 0x00, 0x04, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x01, 0x00, 0x78, 0x01, 0x4d, 0x8c,
  0xbb, 0x09, 0x42, 0x51, 0x10, 0x05, 0xd7, 0x1f, 0x88, 0x15, 0x18, 0x68,
  0x66, 0x11, 0x86, 0x16, 0x61, 0xf8, 0x8a, 0x30, 0x34, 0xb4, 0x04, 0x43,
  0x8b, 0x30, 0xb4, 0x08, 0x43, 0x8b, 0x30, 0xb4, 0x07, 0x9d, 0xc1, 0x3d,
  0xf0, 0x06, 0xce, 0xe7, 0xde, 0x03, 0x3b, 0xa9, 0xaa, 0x15, 0x5a, 0x23,
  0xb9, 0xf0, 0xb1, 0xb5, 0x34, 0x57, 0xad, 0xb9, 0x6b, 0xcd, 0x53, 0x6b,
  0xde, 0x5a, 0xf0, 0x60, 0xb3, 0x19, 0xf5, 0xfd, 0xa8, 0x1f, 0xe9, 0x53,
  0x0b, 0x9c, 0xba, 0x13, 0x75, 0xc6, 0xcc, 0x1b, 0x12, 0x7b, 0xf8, 0x82,
  0xef, 0x07, 0x12, 0xbb, 0x92, 0x6c, 0x2f, 0x24, 0xf6, 0xdc, 0xcf, 0xf6,
  0x41, 0x62, 0x9f, 0x21, 0xc9, 0xb6, 0xd4, 0xc0, 0x98, 0x23, 0xc9, 0xb6,
  0xd3, 0xc0, 0x58, 0x20, 0xc9, 0x76, 0xc0, 0xbc, 0x65, 0x0f, 0xd9, 0x06,
  0x2c, 0x9b, 0x12, 0x37, 0x53, 0xfe, 0x7f, 0x55, 0x3f, 0x81, 0x42, 0x29,
  0x20, 0x00, 0x00, 0x00, 0x78, 0x62, 0x6f, 0x70, 0x01, 0x00, 0x00, 0x00,
  0x7e, 0x02, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00
};
