#if 0
;
; Input signature:
;
; Name                 Index   Mask Register SysValue  Format   Used
; -------------------- ----- ------ -------- -------- ------- ------
; SV_Position              0   xyzw        0     NONE   float   xyzw
; NORMAL                   0   xyz         1     NONE   float   xyz 
; TEXCOORD                 0   xy          2     NONE   float   xy  
;
;
; Output signature:
;
; Name                 Index   Mask Register SysValue  Format   Used
; -------------------- ----- ------ -------- -------- ------- ------
; TEXCOORD                 0   xy          0     NONE   float   xy  
; TEXCOORD                 1   xyzw        1     NONE   float   xyzw
; TEXCOORD                 2   xyz         2     NONE   float   xyz 
; COLOR                    0   xyzw        3     NONE   float   xyzw
; SV_Position              0   xyzw        4      POS   float   xyzw
; TEXCOORD                 4   xyzw        5     NONE   float   xyzw
;
; shader debug name: C:\Users\marcu\Downloads\DirectXTK12-main\DirectXTK12-main\Src/Shaders/Compiled\XboxGamingXboxOnePBREffect_VSConstantVelocity.pdb
; shader hash: af26a2e79d8cfe0c6cdc63a52ea6a07a
;
; Pipeline Runtime Information: 
;
;PSVRuntimeInfo:
; Vertex Shader
; OutputPositionPresent=1
; MinimumExpectedWaveLaneCount: 0
; MaximumExpectedWaveLaneCount: 4294967295
; UsesViewID: false
; SigInputElements: 3
; SigOutputElements: 6
; SigPatchConstOrPrimElements: 0
; SigInputVectors: 3
; SigOutputVectors[0]: 6
; SigOutputVectors[1]: 0
; SigOutputVectors[2]: 0
; SigOutputVectors[3]: 0
; EntryFunctionName: VSConstantVelocity
;
;
; Input signature:
;
; Name                 Index             InterpMode DynIdx
; -------------------- ----- ---------------------- ------
; SV_Position              0                              
; NORMAL                   0                              
; TEXCOORD                 0                              
;
; Output signature:
;
; Name                 Index             InterpMode DynIdx
; -------------------- ----- ---------------------- ------
; TEXCOORD                 0                 linear       
; TEXCOORD                 1                 linear       
; TEXCOORD                 2                 linear       
; COLOR                    0                 linear       
; SV_Position              0          noperspective       
; TEXCOORD                 4                 linear       
;
; Buffer Definitions:
;
; cbuffer 
; {
;
;   [388 x i8] (type annotation not present)
;
; }
;
;
; Resource Bindings:
;
; Name                                 Type  Format         Dim      ID      HLSL Bind  Count
; ------------------------------ ---------- ------- ----------- ------- -------------- ------
;                                   cbuffer      NA          NA     CB0            cb0     1
;
;
; ViewId state:
;
; Number of inputs: 10, outputs: 24
; Outputs dependent on ViewId: {  }
; Inputs contributing to computation of Outputs:
;   output 0 depends on inputs: { 8 }
;   output 1 depends on inputs: { 9 }
;   output 4 depends on inputs: { 0, 1, 2, 3 }
;   output 5 depends on inputs: { 0, 1, 2, 3 }
;   output 6 depends on inputs: { 0, 1, 2, 3 }
;   output 8 depends on inputs: { 4, 5, 6 }
;   output 9 depends on inputs: { 4, 5, 6 }
;   output 10 depends on inputs: { 4, 5, 6 }
;   output 16 depends on inputs: { 0, 1, 2, 3 }
;   output 17 depends on inputs: { 0, 1, 2, 3 }
;   output 18 depends on inputs: { 0, 1, 2, 3 }
;   output 19 depends on inputs: { 0, 1, 2, 3 }
;   output 20 depends on inputs: { 0, 1, 2, 3 }
;   output 21 depends on inputs: { 0, 1, 2, 3 }
;   output 22 depends on inputs: { 0, 1, 2, 3 }
;   output 23 depends on inputs: { 0, 1, 2, 3 }
;
target datalayout = "e-m:e-p:32:32-i1:32-i8:32-i16:32-i32:32-i64:64-f16:32-f32:32-f64:64-n8:16:32:64"
target triple = "dxil-ms-xb1"

%dx.types.Handle = type { i8* }
%dx.types.CBufRet.f32 = type { float, float, float, float }
%hostlayout.Constants = type { <3 x float>, [4 x <4 x float>], [3 x <3 x float>], [4 x <4 x float>], [4 x <4 x float>], [3 x <3 x float>], [3 x <3 x float>], <3 x float>, float, float, float, i32, float, float }

define void @VSConstantVelocity() {
  %1 = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 2, i32 0, i32 0, i1 false)  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %2 = call float @dx.op.loadInput.f32(i32 4, i32 2, i32 0, i8 0, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %3 = call float @dx.op.loadInput.f32(i32 4, i32 2, i32 0, i8 1, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %4 = call float @dx.op.loadInput.f32(i32 4, i32 1, i32 0, i8 0, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %5 = call float @dx.op.loadInput.f32(i32 4, i32 1, i32 0, i8 1, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %6 = call float @dx.op.loadInput.f32(i32 4, i32 1, i32 0, i8 2, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %7 = call float @dx.op.loadInput.f32(i32 4, i32 0, i32 0, i8 0, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %8 = call float @dx.op.loadInput.f32(i32 4, i32 0, i32 0, i8 1, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %9 = call float @dx.op.loadInput.f32(i32 4, i32 0, i32 0, i8 2, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %10 = call float @dx.op.loadInput.f32(i32 4, i32 0, i32 0, i8 3, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %11 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 8)  ; CBufferLoadLegacy(handle,regIndex)
  %12 = extractvalue %dx.types.CBufRet.f32 %11, 0
  %13 = extractvalue %dx.types.CBufRet.f32 %11, 1
  %14 = extractvalue %dx.types.CBufRet.f32 %11, 2
  %15 = extractvalue %dx.types.CBufRet.f32 %11, 3
  %16 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 9)  ; CBufferLoadLegacy(handle,regIndex)
  %17 = extractvalue %dx.types.CBufRet.f32 %16, 0
  %18 = extractvalue %dx.types.CBufRet.f32 %16, 1
  %19 = extractvalue %dx.types.CBufRet.f32 %16, 2
  %20 = extractvalue %dx.types.CBufRet.f32 %16, 3
  %21 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 10)  ; CBufferLoadLegacy(handle,regIndex)
  %22 = extractvalue %dx.types.CBufRet.f32 %21, 0
  %23 = extractvalue %dx.types.CBufRet.f32 %21, 1
  %24 = extractvalue %dx.types.CBufRet.f32 %21, 2
  %25 = extractvalue %dx.types.CBufRet.f32 %21, 3
  %26 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 11)  ; CBufferLoadLegacy(handle,regIndex)
  %27 = extractvalue %dx.types.CBufRet.f32 %26, 0
  %28 = extractvalue %dx.types.CBufRet.f32 %26, 1
  %29 = extractvalue %dx.types.CBufRet.f32 %26, 2
  %30 = extractvalue %dx.types.CBufRet.f32 %26, 3
  %31 = fmul fast float %12, %7
  %32 = call float @dx.op.tertiary.f32(i32 46, float %8, float %13, float %31)  ; FMad(a,b,c)
  %33 = call float @dx.op.tertiary.f32(i32 46, float %9, float %14, float %32)  ; FMad(a,b,c)
  %34 = call float @dx.op.tertiary.f32(i32 46, float %10, float %15, float %33)  ; FMad(a,b,c)
  %35 = fmul fast float %17, %7
  %36 = call float @dx.op.tertiary.f32(i32 46, float %8, float %18, float %35)  ; FMad(a,b,c)
  %37 = call float @dx.op.tertiary.f32(i32 46, float %9, float %19, float %36)  ; FMad(a,b,c)
  %38 = call float @dx.op.tertiary.f32(i32 46, float %10, float %20, float %37)  ; FMad(a,b,c)
  %39 = fmul fast float %22, %7
  %40 = call float @dx.op.tertiary.f32(i32 46, float %8, float %23, float %39)  ; FMad(a,b,c)
  %41 = call float @dx.op.tertiary.f32(i32 46, float %9, float %24, float %40)  ; FMad(a,b,c)
  %42 = call float @dx.op.tertiary.f32(i32 46, float %10, float %25, float %41)  ; FMad(a,b,c)
  %43 = fmul fast float %27, %7
  %44 = call float @dx.op.tertiary.f32(i32 46, float %8, float %28, float %43)  ; FMad(a,b,c)
  %45 = call float @dx.op.tertiary.f32(i32 46, float %9, float %29, float %44)  ; FMad(a,b,c)
  %46 = call float @dx.op.tertiary.f32(i32 46, float %10, float %30, float %45)  ; FMad(a,b,c)
  %47 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 1)  ; CBufferLoadLegacy(handle,regIndex)
  %48 = extractvalue %dx.types.CBufRet.f32 %47, 0
  %49 = extractvalue %dx.types.CBufRet.f32 %47, 1
  %50 = extractvalue %dx.types.CBufRet.f32 %47, 2
  %51 = extractvalue %dx.types.CBufRet.f32 %47, 3
  %52 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 2)  ; CBufferLoadLegacy(handle,regIndex)
  %53 = extractvalue %dx.types.CBufRet.f32 %52, 0
  %54 = extractvalue %dx.types.CBufRet.f32 %52, 1
  %55 = extractvalue %dx.types.CBufRet.f32 %52, 2
  %56 = extractvalue %dx.types.CBufRet.f32 %52, 3
  %57 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 3)  ; CBufferLoadLegacy(handle,regIndex)
  %58 = extractvalue %dx.types.CBufRet.f32 %57, 0
  %59 = extractvalue %dx.types.CBufRet.f32 %57, 1
  %60 = extractvalue %dx.types.CBufRet.f32 %57, 2
  %61 = extractvalue %dx.types.CBufRet.f32 %57, 3
  %62 = fmul fast float %48, %7
  %63 = call float @dx.op.tertiary.f32(i32 46, float %8, float %49, float %62)  ; FMad(a,b,c)
  %64 = call float @dx.op.tertiary.f32(i32 46, float %9, float %50, float %63)  ; FMad(a,b,c)
  %65 = call float @dx.op.tertiary.f32(i32 46, float %10, float %51, float %64)  ; FMad(a,b,c)
  %66 = fmul fast float %53, %7
  %67 = call float @dx.op.tertiary.f32(i32 46, float %8, float %54, float %66)  ; FMad(a,b,c)
  %68 = call float @dx.op.tertiary.f32(i32 46, float %9, float %55, float %67)  ; FMad(a,b,c)
  %69 = call float @dx.op.tertiary.f32(i32 46, float %10, float %56, float %68)  ; FMad(a,b,c)
  %70 = fmul fast float %58, %7
  %71 = call float @dx.op.tertiary.f32(i32 46, float %8, float %59, float %70)  ; FMad(a,b,c)
  %72 = call float @dx.op.tertiary.f32(i32 46, float %9, float %60, float %71)  ; FMad(a,b,c)
  %73 = call float @dx.op.tertiary.f32(i32 46, float %10, float %61, float %72)  ; FMad(a,b,c)
  %74 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 5)  ; CBufferLoadLegacy(handle,regIndex)
  %75 = extractvalue %dx.types.CBufRet.f32 %74, 0
  %76 = extractvalue %dx.types.CBufRet.f32 %74, 1
  %77 = extractvalue %dx.types.CBufRet.f32 %74, 2
  %78 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 6)  ; CBufferLoadLegacy(handle,regIndex)
  %79 = extractvalue %dx.types.CBufRet.f32 %78, 0
  %80 = extractvalue %dx.types.CBufRet.f32 %78, 1
  %81 = extractvalue %dx.types.CBufRet.f32 %78, 2
  %82 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 7)  ; CBufferLoadLegacy(handle,regIndex)
  %83 = extractvalue %dx.types.CBufRet.f32 %82, 0
  %84 = extractvalue %dx.types.CBufRet.f32 %82, 1
  %85 = extractvalue %dx.types.CBufRet.f32 %82, 2
  %86 = fmul fast float %75, %4
  %87 = call float @dx.op.tertiary.f32(i32 46, float %5, float %76, float %86)  ; FMad(a,b,c)
  %88 = call float @dx.op.tertiary.f32(i32 46, float %6, float %77, float %87)  ; FMad(a,b,c)
  %89 = fmul fast float %79, %4
  %90 = call float @dx.op.tertiary.f32(i32 46, float %5, float %80, float %89)  ; FMad(a,b,c)
  %91 = call float @dx.op.tertiary.f32(i32 46, float %6, float %81, float %90)  ; FMad(a,b,c)
  %92 = fmul fast float %83, %4
  %93 = call float @dx.op.tertiary.f32(i32 46, float %5, float %84, float %92)  ; FMad(a,b,c)
  %94 = call float @dx.op.tertiary.f32(i32 46, float %6, float %85, float %93)  ; FMad(a,b,c)
  %95 = call float @dx.op.dot3.f32(i32 55, float %88, float %91, float %94, float %88, float %91, float %94)  ; Dot3(ax,ay,az,bx,by,bz)
  %96 = call float @dx.op.unary.f32(i32 25, float %95)  ; Rsqrt(value)
  %97 = fmul fast float %96, %88
  %98 = fmul fast float %96, %91
  %99 = fmul fast float %96, %94
  %100 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 22)  ; CBufferLoadLegacy(handle,regIndex)
  %101 = extractvalue %dx.types.CBufRet.f32 %100, 0
  %102 = extractvalue %dx.types.CBufRet.f32 %100, 1
  %103 = extractvalue %dx.types.CBufRet.f32 %100, 2
  %104 = extractvalue %dx.types.CBufRet.f32 %100, 3
  %105 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 12)  ; CBufferLoadLegacy(handle,regIndex)
  %106 = extractvalue %dx.types.CBufRet.f32 %105, 0
  %107 = extractvalue %dx.types.CBufRet.f32 %105, 1
  %108 = extractvalue %dx.types.CBufRet.f32 %105, 2
  %109 = extractvalue %dx.types.CBufRet.f32 %105, 3
  %110 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 13)  ; CBufferLoadLegacy(handle,regIndex)
  %111 = extractvalue %dx.types.CBufRet.f32 %110, 0
  %112 = extractvalue %dx.types.CBufRet.f32 %110, 1
  %113 = extractvalue %dx.types.CBufRet.f32 %110, 2
  %114 = extractvalue %dx.types.CBufRet.f32 %110, 3
  %115 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 14)  ; CBufferLoadLegacy(handle,regIndex)
  %116 = extractvalue %dx.types.CBufRet.f32 %115, 0
  %117 = extractvalue %dx.types.CBufRet.f32 %115, 1
  %118 = extractvalue %dx.types.CBufRet.f32 %115, 2
  %119 = extractvalue %dx.types.CBufRet.f32 %115, 3
  %120 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 15)  ; CBufferLoadLegacy(handle,regIndex)
  %121 = extractvalue %dx.types.CBufRet.f32 %120, 0
  %122 = extractvalue %dx.types.CBufRet.f32 %120, 1
  %123 = extractvalue %dx.types.CBufRet.f32 %120, 2
  %124 = extractvalue %dx.types.CBufRet.f32 %120, 3
  %125 = fmul fast float %106, %7
  %126 = call float @dx.op.tertiary.f32(i32 46, float %8, float %107, float %125)  ; FMad(a,b,c)
  %127 = call float @dx.op.tertiary.f32(i32 46, float %9, float %108, float %126)  ; FMad(a,b,c)
  %128 = call float @dx.op.tertiary.f32(i32 46, float %10, float %109, float %127)  ; FMad(a,b,c)
  %129 = fmul fast float %111, %7
  %130 = call float @dx.op.tertiary.f32(i32 46, float %8, float %112, float %129)  ; FMad(a,b,c)
  %131 = call float @dx.op.tertiary.f32(i32 46, float %9, float %113, float %130)  ; FMad(a,b,c)
  %132 = call float @dx.op.tertiary.f32(i32 46, float %10, float %114, float %131)  ; FMad(a,b,c)
  %133 = fmul fast float %116, %7
  %134 = call float @dx.op.tertiary.f32(i32 46, float %8, float %117, float %133)  ; FMad(a,b,c)
  %135 = call float @dx.op.tertiary.f32(i32 46, float %9, float %118, float %134)  ; FMad(a,b,c)
  %136 = call float @dx.op.tertiary.f32(i32 46, float %10, float %119, float %135)  ; FMad(a,b,c)
  %137 = fmul fast float %121, %7
  %138 = call float @dx.op.tertiary.f32(i32 46, float %8, float %122, float %137)  ; FMad(a,b,c)
  %139 = call float @dx.op.tertiary.f32(i32 46, float %9, float %123, float %138)  ; FMad(a,b,c)
  %140 = call float @dx.op.tertiary.f32(i32 46, float %10, float %124, float %139)  ; FMad(a,b,c)
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 0, float %2)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 1, float %3)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 1, i32 0, i8 0, float %65)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 1, i32 0, i8 1, float %69)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 1, i32 0, i8 2, float %73)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 1, i32 0, i8 3, float 1.000000e+00)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 2, i32 0, i8 0, float %97)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 2, i32 0, i8 1, float %98)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 2, i32 0, i8 2, float %99)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 3, i32 0, i8 0, float %101)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 3, i32 0, i8 1, float %102)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 3, i32 0, i8 2, float %103)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 3, i32 0, i8 3, float %104)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 4, i32 0, i8 0, float %34)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 4, i32 0, i8 1, float %38)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 4, i32 0, i8 2, float %42)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 4, i32 0, i8 3, float %46)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 5, i32 0, i8 0, float %128)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 5, i32 0, i8 1, float %132)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 5, i32 0, i8 2, float %136)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 5, i32 0, i8 3, float %140)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  ret void
}

; Function Attrs: nounwind readnone
declare float @dx.op.loadInput.f32(i32, i32, i32, i8, i32) #0

; Function Attrs: nounwind
declare void @dx.op.storeOutput.f32(i32, i32, i32, i8, float) #1

; Function Attrs: nounwind readnone
declare float @dx.op.dot3.f32(i32, float, float, float, float, float, float) #0

; Function Attrs: nounwind readnone
declare float @dx.op.unary.f32(i32, float) #0

; Function Attrs: nounwind readonly
declare %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32, %dx.types.Handle, i32) #2

; Function Attrs: nounwind readnone
declare float @dx.op.tertiary.f32(i32, float, float, float) #0

; Function Attrs: nounwind readonly
declare %dx.types.Handle @dx.op.createHandle(i32, i8, i32, i32, i1) #2

attributes #0 = { nounwind readnone }
attributes #1 = { nounwind }
attributes #2 = { nounwind readonly }

!xbox.compiler.options = !{!0}
!llvm.ident = !{!1}
!dx.version = !{!2}
!dx.valver = !{!3}
!dx.shaderModel = !{!4}
!dx.resources = !{!5}
!dx.viewIdState = !{!8}
!dx.entryPoints = !{!9}

!0 = !{!"__XBOX_PER_THREAD_SCRATCH_SIZE_LIMIT_IN_BYTES", !"0"}
!1 = !{!"dxcxbox 2410.2410.11116.10741"}
!2 = !{i32 1, i32 0}
!3 = !{i32 1, i32 8}
!4 = !{!"vs", i32 6, i32 0}
!5 = !{null, null, !6, null}
!6 = !{!7}
!7 = !{i32 0, %hostlayout.Constants* undef, !"", i32 0, i32 0, i32 1, i32 388, null}
!8 = !{[12 x i32] [i32 10, i32 24, i32 16711792, i32 16711792, i32 16711792, i32 16711792, i32 1792, i32 1792, i32 1792, i32 0, i32 1, i32 2]}
!9 = !{void ()* @VSConstantVelocity, !"VSConstantVelocity", !10, !5, null}
!10 = !{!11, !19, null}
!11 = !{!12, !15, !17}
!12 = !{i32 0, !"SV_Position", i8 9, i8 0, !13, i8 0, i32 1, i8 4, i32 0, i8 0, !14}
!13 = !{i32 0}
!14 = !{i32 3, i32 15}
!15 = !{i32 1, !"NORMAL", i8 9, i8 0, !13, i8 0, i32 1, i8 3, i32 1, i8 0, !16}
!16 = !{i32 3, i32 7}
!17 = !{i32 2, !"TEXCOORD", i8 9, i8 0, !13, i8 0, i32 1, i8 2, i32 2, i8 0, !18}
!18 = !{i32 3, i32 3}
!19 = !{!20, !21, !23, !25, !26, !27}
!20 = !{i32 0, !"TEXCOORD", i8 9, i8 0, !13, i8 2, i32 1, i8 2, i32 0, i8 0, !18}
!21 = !{i32 1, !"TEXCOORD", i8 9, i8 0, !22, i8 2, i32 1, i8 4, i32 1, i8 0, !14}
!22 = !{i32 1}
!23 = !{i32 2, !"TEXCOORD", i8 9, i8 0, !24, i8 2, i32 1, i8 3, i32 2, i8 0, !16}
!24 = !{i32 2}
!25 = !{i32 3, !"COLOR", i8 9, i8 0, !13, i8 2, i32 1, i8 4, i32 3, i8 0, !14}
!26 = !{i32 4, !"SV_Position", i8 9, i8 3, !13, i8 4, i32 1, i8 4, i32 4, i8 0, !14}
!27 = !{i32 5, !"TEXCOORD", i8 9, i8 0, !28, i8 2, i32 1, i8 4, i32 5, i8 0, !14}
!28 = !{i32 4}

;
; DUMPING SHADER HARDWARE INSTRUCTIONS 
;
// Shader Type               : (VS)
// Shader Hw Stage           : (VS)

// Shader Instructions:
shader main
  asic(CI)
  type(VS)
  s_swappc_b64  s[0:1], s[0:1]
  s_or_b32      s33, s12, 0x00100000 // wrscc
  s_mov_b32     s32, s11
  s_mov_b32     s34, -1
  s_mov_b32     s35, 0x00024fac
  s_buffer_load_dwordx8  s[24:31], s[32:35], 0x04
  s_buffer_load_dwordx4  s[36:39], s[32:35], 0x0c
  s_buffer_load_dwordx16  s[0:15], s[32:35], 0x14
  s_waitcnt     vmcnt(0) & lgkmcnt(0)
  v_mul_legacy_f32  v11, s24, v4
  v_mul_legacy_f32  v14, s28, v4
  v_mul_legacy_f32  v0, s12, v4
  v_mac_legacy_f32  v0, s13, v5
  v_mul_legacy_f32  v1, s0, v8
  v_mul_legacy_f32  v2, s4, v8
  v_mul_legacy_f32  v3, s8, v8
  v_mac_legacy_f32  v0, s14, v6
  v_mac_legacy_f32  v1, s1, v9
  v_mac_legacy_f32  v2, s5, v9
  v_mac_legacy_f32  v3, s9, v9
  v_mac_legacy_f32  v2, s6, v10
  v_mac_legacy_f32  v0, s15, v7
  v_mac_legacy_f32  v1, s2, v10
  v_mac_legacy_f32  v3, s10, v10
  s_buffer_load_dwordx16  s[0:15], s[32:35], 0x24
  s_buffer_load_dwordx8  s[16:23], s[32:35], 0x34
  v_mul_legacy_f32  v16, v2, v2
  v_mac_legacy_f32  v16, v1, v1
  v_mac_legacy_f32  v16, v3, v3
  s_waitcnt     lgkmcnt(0)
  v_mul_legacy_f32  v8, s0, v4
  v_mul_legacy_f32  v9, s4, v4
  v_mac_legacy_f32  v8, s1, v5
  v_mac_legacy_f32  v9, s5, v5
  v_mac_legacy_f32  v8, s2, v6
  v_mac_legacy_f32  v9, s6, v6
  v_mac_legacy_f32  v8, s3, v7
  v_mac_legacy_f32  v9, s7, v7
  s_buffer_load_dwordx4  s[0:3], s[32:35], 0x3c
  v_mul_legacy_f32  v10, s8, v4
  v_mac_legacy_f32  v10, s9, v5
  s_buffer_load_dwordx4  s[4:7], s[32:35], 0x58
  v_rsq_f32     v16, v16
  v_mac_legacy_f32  v10, s10, v6
  v_mul_legacy_f32  v15, s36, v4
  v_mul_legacy_f32  v17, s12, v4
  v_mul_legacy_f32  v18, s16, v4
  v_mul_legacy_f32  v19, s20, v4
  s_waitcnt     lgkmcnt(0)
  v_mul_legacy_f32  v4, s0, v4
  v_mac_legacy_f32  v10, s11, v7
  exp           pos0, v0, v8, v9, v10 done
  v_mac_legacy_f32  v11, s25, v5
  v_mac_legacy_f32  v14, s29, v5
  v_mac_legacy_f32  v15, s37, v5
  v_mac_legacy_f32  v17, s13, v5
  v_mac_legacy_f32  v18, s17, v5
  v_mac_legacy_f32  v19, s21, v5
  v_mac_legacy_f32  v4, s1, v5
  v_mac_legacy_f32  v11, s26, v6
  v_mac_legacy_f32  v14, s30, v6
  v_mac_legacy_f32  v15, s38, v6
  v_mac_legacy_f32  v17, s14, v6
  v_mac_legacy_f32  v18, s18, v6
  v_mac_legacy_f32  v19, s22, v6
  v_mac_legacy_f32  v4, s2, v6
  v_mac_legacy_f32  v11, s27, v7
  v_mac_legacy_f32  v14, s31, v7
  v_mac_legacy_f32  v15, s39, v7
  v_mul_legacy_f32  v1, v16, v1
  v_mul_legacy_f32  v2, v16, v2
  v_mul_legacy_f32  v3, v16, v3
  v_mov_b32     v16, s4
  v_mov_b32     v5, s5
  v_mov_b32     v6, s6
  v_mac_legacy_f32  v17, s15, v7
  v_mac_legacy_f32  v18, s19, v7
  v_mac_legacy_f32  v19, s23, v7
  v_mac_legacy_f32  v4, s3, v7
  v_mov_b32     v7, s7
  s_waitcnt     expcnt(0)
  v_mov_b32     v0, 0
  v_mov_b32     v8, 1.0
  exp           param0, v12, v13, v0, v8
  exp           param1, v11, v14, v15, v8
  exp           param2, v1, v2, v3, v8
  exp           param3, v16, v5, v6, v7
  exp           param4, v17, v18, v19, v4
  s_endpgm      
end


NumVGPR=20,NumSGPR=42,LDS=0,Scratch=0,Occpancy=10

// Shader Type               : (VS)
// Shader Hw Stage           : (ES)

// Shader Instructions:
shader main
  asic(CI)
  type(VS)
  s_swappc_b64  s[0:1], s[0:1]
  s_or_b32      s61, s12, 0x00100000 // wrscc
  s_mov_b32     s60, s11
  s_mov_b32     s62, -1
  s_mov_b32     s63, 0x00024fac
  s_buffer_load_dwordx8  s[48:55], s[60:63], 0x04
  s_buffer_load_dwordx4  s[64:67], s[60:63], 0x0c
  s_buffer_load_dwordx16  s[32:47], s[60:63], 0x14
  s_buffer_load_dwordx16  s[16:31], s[60:63], 0x24
  s_buffer_load_dwordx8  s[4:11], s[60:63], 0x34
  s_buffer_load_dwordx4  s[56:59], s[60:63], 0x3c
  s_mov_b32     s1, 0
  s_waitcnt     vmcnt(0) & lgkmcnt(0)
  v_mul_legacy_f32  v17, s36, v8
  v_mul_legacy_f32  v16, s32, v8
  v_mac_legacy_f32  v17, s37, v9
  v_mul_legacy_f32  v1, s16, v4
  v_mac_legacy_f32  v16, s33, v9
  v_mul_legacy_f32  v8, s40, v8
  v_mac_legacy_f32  v17, s38, v10
  v_mac_legacy_f32  v8, s41, v9
  v_mac_legacy_f32  v1, s17, v5
  v_mac_legacy_f32  v16, s34, v10
  v_mul_legacy_f32  v9, v17, v17
  v_mac_legacy_f32  v1, s18, v6
  v_mac_legacy_f32  v8, s42, v10
  v_mac_legacy_f32  v9, v16, v16
  v_mac_legacy_f32  v9, v8, v8
  v_mac_legacy_f32  v1, s19, v7
  s_buffer_load_dwordx4  s[16:19], s[60:63], 0x58
  s_load_dwordx4  s[0:3], s[0:1], 0x08
  v_mul_legacy_f32  v0, s44, v4
  v_mul_legacy_f32  v2, s20, v4
  v_mul_legacy_f32  v3, s24, v4
  v_mul_legacy_f32  v11, s48, v4
  v_mul_legacy_f32  v14, s52, v4
  v_mul_legacy_f32  v15, s64, v4
  v_rsq_f32     v9, v9
  v_mac_legacy_f32  v0, s45, v5
  v_mac_legacy_f32  v2, s21, v5
  v_mac_legacy_f32  v3, s25, v5
  v_mac_legacy_f32  v11, s49, v5
  v_mac_legacy_f32  v14, s53, v5
  v_mac_legacy_f32  v15, s65, v5
  v_mul_legacy_f32  v20, s28, v4
  v_mul_legacy_f32  v21, s4, v4
  v_mul_legacy_f32  v22, s8, v4
  v_mul_legacy_f32  v4, s56, v4
  v_mac_legacy_f32  v0, s46, v6
  v_mac_legacy_f32  v2, s22, v6
  v_mac_legacy_f32  v3, s26, v6
  v_mac_legacy_f32  v11, s50, v6
  v_mac_legacy_f32  v14, s54, v6
  v_mac_legacy_f32  v15, s66, v6
  v_mac_legacy_f32  v20, s29, v5
  v_mac_legacy_f32  v21, s5, v5
  v_mac_legacy_f32  v22, s9, v5
  v_mac_legacy_f32  v4, s57, v5
  v_mac_legacy_f32  v20, s30, v6
  v_mac_legacy_f32  v21, s6, v6
  v_mac_legacy_f32  v22, s10, v6
  v_mac_legacy_f32  v4, s58, v6
  v_mac_legacy_f32  v0, s47, v7
  v_mac_legacy_f32  v2, s23, v7
  v_mac_legacy_f32  v3, s27, v7
  v_mac_legacy_f32  v11, s51, v7
  v_mac_legacy_f32  v14, s55, v7
  v_mac_legacy_f32  v15, s67, v7
  v_mul_legacy_f32  v10, v9, v16
  v_mul_legacy_f32  v16, v9, v17
  v_mul_legacy_f32  v8, v9, v8
  s_waitcnt     lgkmcnt(0)
  buffer_store_dword  v0, v0, s[0:3], s15 offset:64 glc slc
  buffer_store_dword  v1, v0, s[0:3], s15 offset:68 glc slc
  buffer_store_dword  v2, v0, s[0:3], s15 offset:72 glc slc
  buffer_store_dword  v3, v0, s[0:3], s15 offset:76 glc slc
  buffer_store_dword  v12, v0, s[0:3], s15 glc slc
  buffer_store_dword  v13, v0, s[0:3], s15 offset:4 glc slc
  buffer_store_dword  v11, v0, s[0:3], s15 offset:16 glc slc
  buffer_store_dword  v14, v0, s[0:3], s15 offset:20 glc slc
  buffer_store_dword  v15, v0, s[0:3], s15 offset:24 glc slc
  v_mov_b32     v0, 1.0
  v_mov_b32     v9, s16
  v_mov_b32     v17, s17
  v_mov_b32     v18, s18
  v_mov_b32     v19, s19
  v_mac_legacy_f32  v20, s31, v7
  v_mac_legacy_f32  v21, s7, v7
  v_mac_legacy_f32  v22, s11, v7
  v_mac_legacy_f32  v4, s59, v7
  buffer_store_dword  v0, v0, s[0:3], s15 offset:28 glc slc
  buffer_store_dword  v10, v0, s[0:3], s15 offset:32 glc slc
  buffer_store_dword  v16, v0, s[0:3], s15 offset:36 glc slc
  buffer_store_dword  v8, v0, s[0:3], s15 offset:40 glc slc
  buffer_store_dword  v9, v0, s[0:3], s15 offset:48 glc slc
  buffer_store_dword  v17, v0, s[0:3], s15 offset:52 glc slc
  buffer_store_dword  v18, v0, s[0:3], s15 offset:56 glc slc
  buffer_store_dword  v19, v0, s[0:3], s15 offset:60 glc slc
  buffer_store_dword  v20, v0, s[0:3], s15 offset:80 glc slc
  buffer_store_dword  v21, v0, s[0:3], s15 offset:84 glc slc
  buffer_store_dword  v22, v0, s[0:3], s15 offset:88 glc slc
  buffer_store_dword  v4, v0, s[0:3], s15 offset:92 glc slc
  s_endpgm      
end


NumVGPR=23,NumSGPR=70,LDS=0,Scratch=0,Occpancy=7

// Shader Type               : (VS)
// Shader Hw Stage           : (LS)

// Shader Instructions:
shader main
  asic(CI)
  type(VS)
  s_swappc_b64  s[0:1], s[0:1]
  s_or_b32      s53, s12, 0x00100000 // wrscc
  s_mov_b32     s52, s11
  s_mov_b32     s54, -1
  s_mov_b32     s55, 0x00024fac
  s_buffer_load_dwordx8  s[40:47], s[52:55], 0x04
  s_buffer_load_dwordx4  s[56:59], s[52:55], 0x0c
  s_buffer_load_dwordx16  s[16:31], s[52:55], 0x14
  s_buffer_load_dwordx16  s[0:15], s[52:55], 0x24
  s_buffer_load_dwordx8  s[32:39], s[52:55], 0x34
  s_buffer_load_dwordx4  s[48:51], s[52:55], 0x3c
  s_mov_b32     m0, -1
  s_waitcnt     vmcnt(0) & lgkmcnt(0)
  v_mul_legacy_f32  v0, s28, v4
  v_mac_legacy_f32  v0, s29, v5
  v_mac_legacy_f32  v0, s30, v6
  v_mad_legacy_f32  v2, v7, s31, v0
  v_mul_legacy_f32  v0, s0, v4
  v_mac_legacy_f32  v0, s1, v5
  v_mac_legacy_f32  v0, s2, v6
  v_mad_legacy_f32  v3, v7, s3, v0
  v_mul_legacy_f32  v0, s4, v4
  v_mac_legacy_f32  v0, s5, v5
  v_mul_legacy_f32  v18, s20, v8
  v_mac_legacy_f32  v0, s6, v6
  v_mul_legacy_f32  v11, s16, v8
  v_mac_legacy_f32  v18, s21, v9
  v_mul_legacy_f32  v8, s24, v8
  v_mad_legacy_f32  v14, v7, s7, v0
  v_mul_legacy_f32  v0, s8, v4
  v_mac_legacy_f32  v0, s9, v5
  v_mac_legacy_f32  v11, s17, v9
  v_mac_legacy_f32  v18, s22, v10
  v_mac_legacy_f32  v8, s25, v9
  v_mac_legacy_f32  v0, s10, v6
  v_mac_legacy_f32  v11, s18, v10
  v_mad_legacy_f32  v10, v10, s26, v8
  v_mul_legacy_f32  v8, v18, v18
  v_mac_legacy_f32  v8, v11, v11
  v_mad_legacy_f32  v15, v7, s11, v0
  v_mul_legacy_f32  v0, s40, v4
  v_mac_legacy_f32  v0, s41, v5
  v_mac_legacy_f32  v8, v10, v10
  v_rsq_f32     v19, v8
  v_mac_legacy_f32  v0, s42, v6
  v_mad_legacy_f32  v16, v7, s43, v0
  v_mul_legacy_f32  v0, s44, v4
  v_mac_legacy_f32  v0, s45, v5
  v_mac_legacy_f32  v0, s46, v6
  v_mad_legacy_f32  v17, v7, s47, v0
  v_mul_legacy_f32  v0, s56, v4
  v_mul_legacy_f32  v8, v19, v11
  v_mul_legacy_f32  v11, s32, v4
  v_mul_legacy_f32  v9, v19, v18
  v_mul_legacy_f32  v18, s36, v4
  v_mul_legacy_f32  v20, v19, v10
  v_mul_legacy_f32  v10, s12, v4
  v_mul_legacy_f32  v4, s48, v4
  v_mac_legacy_f32  v4, s49, v5
  v_mac_legacy_f32  v4, s50, v6
  s_buffer_load_dwordx4  s[0:3], s[52:55], 0x58
  s_movk_i32    s4, 0x0060
  v_mad_legacy_f32  v19, v7, s51, v4
  v_mul_lo_i32  v4, v1, s4
  v_mac_legacy_f32  v0, s57, v5
  v_mac_legacy_f32  v0, s58, v6
  v_mac_legacy_f32  v10, s13, v5
  v_mac_legacy_f32  v11, s33, v5
  v_mac_legacy_f32  v18, s37, v5
  v_mac_legacy_f32  v10, s14, v6
  v_mac_legacy_f32  v11, s34, v6
  v_mac_legacy_f32  v18, s38, v6
  v_mac_legacy_f32  v0, s59, v7
  v_mov_b32     v1, 1.0
  ds_write2_b64  v4, v[2:3], v[14:15] offset0:8 offset1:9
  ds_write2_b64  v4, v[12:13], v[0:1] offset1:3
  ds_write_b32  v4, v20 offset:40
  ds_write2_b64  v4, v[16:17], v[8:9] offset0:2 offset1:4
  v_mac_legacy_f32  v10, s15, v7
  v_mac_legacy_f32  v11, s35, v7
  v_mac_legacy_f32  v18, s39, v7
  s_waitcnt     lgkmcnt(0)
  v_mov_b32     v0, s2
  v_mov_b32     v1, s3
  v_mov_b32     v2, s0
  v_mov_b32     v3, s1
  ds_write2_b64  v4, v[2:3], v[0:1] offset0:6 offset1:7
  ds_write2_b64  v4, v[10:11], v[18:19] offset0:10 offset1:11
  s_endpgm      
end


NumVGPR=21,NumSGPR=62,LDS=0,Scratch=0,Occpancy=8


#endif

const unsigned char PBREffect_VSConstantVelocity[] = {
  0x44, 0x58, 0x42, 0x43, 0xa3, 0x71, 0xec, 0x40, 0x1a, 0x2b, 0xf0, 0x2a,
  0x5e, 0x37, 0x6c, 0x8e, 0xba, 0xaf, 0xda, 0x97, 0x01, 0x00, 0x00, 0x00,
  0x54, 0x1e, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00,
  0x50, 0x00, 0x00, 0x00, 0xdc, 0x00, 0x00, 0x00, 0xc8, 0x01, 0x00, 0x00,
  0x60, 0x03, 0x00, 0x00, 0xe8, 0x04, 0x00, 0x00, 0x78, 0x05, 0x00, 0x00,
  0x94, 0x05, 0x00, 0x00, 0x53, 0x46, 0x49, 0x30, 0x08, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x49, 0x53, 0x47, 0x31,
  0x84, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x68, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x0f, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x74, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x07, 0x07, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7b, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x03, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x53, 0x56, 0x5f, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x00,
  0x4e, 0x4f, 0x52, 0x4d, 0x41, 0x4c, 0x00, 0x54, 0x45, 0x58, 0x43, 0x4f,
  0x4f, 0x52, 0x44, 0x00, 0x4f, 0x53, 0x47, 0x31, 0xe4, 0x00, 0x00, 0x00,
  0x06, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xc8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x0c, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc8, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xc8, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x07, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xd1, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xd7, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x04, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xc8, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00,
  0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x54, 0x45, 0x58, 0x43,
  0x4f, 0x4f, 0x52, 0x44, 0x00, 0x43, 0x4f, 0x4c, 0x4f, 0x52, 0x00, 0x53,
  0x56, 0x5f, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x00, 0x00,
  0x50, 0x53, 0x56, 0x30, 0x90, 0x01, 0x00, 0x00, 0x34, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff,
  0x01, 0x00, 0x00, 0x00, 0x03, 0x06, 0x00, 0x03, 0x06, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x47, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x5c, 0x00, 0x00, 0x00, 0x00, 0x53, 0x56, 0x5f, 0x50, 0x6f, 0x73, 0x69,
  0x74, 0x69, 0x6f, 0x6e, 0x00, 0x4e, 0x4f, 0x52, 0x4d, 0x41, 0x4c, 0x00,
  0x54, 0x45, 0x58, 0x43, 0x4f, 0x4f, 0x52, 0x44, 0x00, 0x54, 0x45, 0x58,
  0x43, 0x4f, 0x4f, 0x52, 0x44, 0x00, 0x54, 0x45, 0x58, 0x43, 0x4f, 0x4f,
  0x52, 0x44, 0x00, 0x54, 0x45, 0x58, 0x43, 0x4f, 0x4f, 0x52, 0x44, 0x00,
  0x43, 0x4f, 0x4c, 0x4f, 0x52, 0x00, 0x54, 0x45, 0x58, 0x43, 0x4f, 0x4f,
  0x52, 0x44, 0x00, 0x56, 0x53, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e,
  0x74, 0x56, 0x65, 0x6c, 0x6f, 0x63, 0x69, 0x74, 0x79, 0x00, 0x00, 0x00,
  0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x44, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x01, 0x43, 0x00, 0x03, 0x00, 0x00, 0x00, 0x14, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x02, 0x42, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x1d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x42, 0x00,
  0x03, 0x02, 0x00, 0x00, 0x26, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x01, 0x01, 0x44, 0x00, 0x03, 0x02, 0x00, 0x00, 0x2f, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x01, 0x02, 0x43, 0x00, 0x03, 0x02, 0x00, 0x00,
  0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x03, 0x44, 0x00,
  0x03, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x04, 0x44, 0x03, 0x03, 0x04, 0x00, 0x00, 0x3e, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x01, 0x05, 0x44, 0x00, 0x03, 0x02, 0x00, 0x00,
  0x70, 0x00, 0xff, 0x00, 0x70, 0x00, 0xff, 0x00, 0x70, 0x00, 0xff, 0x00,
  0x70, 0x00, 0xff, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00,
  0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x52, 0x54, 0x53, 0x30, 0x80, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x0a, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x80, 0x01, 0x00, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x90, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xac, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xc8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xe4, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x1c, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x38, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x54, 0x01, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x70, 0x01, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x78, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x98, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff,
  0x01, 0x00, 0x00, 0x00, 0xb4, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xff, 0xff, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0xd0, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00,
  0xec, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff,
  0x01, 0x00, 0x00, 0x00, 0x08, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xff, 0xff, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x24, 0x01, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00,
  0x40, 0x01, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff,
  0x01, 0x00, 0x00, 0x00, 0x5c, 0x01, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x49, 0x4c, 0x44, 0x4e,
  0x88, 0x00, 0x00, 0x00, 0x00, 0x00, 0x81, 0x00, 0x43, 0x3a, 0x5c, 0x55,
  0x73, 0x65, 0x72, 0x73, 0x5c, 0x6d, 0x61, 0x72, 0x63, 0x75, 0x5c, 0x44,
  0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x73, 0x5c, 0x44, 0x69, 0x72,
  0x65, 0x63, 0x74, 0x58, 0x54, 0x4b, 0x31, 0x32, 0x2d, 0x6d, 0x61, 0x69,
  0x6e, 0x5c, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x58, 0x54, 0x4b, 0x31,
  0x32, 0x2d, 0x6d, 0x61, 0x69, 0x6e, 0x5c, 0x53, 0x72, 0x63, 0x2f, 0x53,
  0x68, 0x61, 0x64, 0x65, 0x72, 0x73, 0x2f, 0x43, 0x6f, 0x6d, 0x70, 0x69,
  0x6c, 0x65, 0x64, 0x5c, 0x58, 0x62, 0x6f, 0x78, 0x47, 0x61, 0x6d, 0x69,
  0x6e, 0x67, 0x58, 0x62, 0x6f, 0x78, 0x4f, 0x6e, 0x65, 0x50, 0x42, 0x52,
  0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x5f, 0x56, 0x53, 0x43, 0x6f, 0x6e,
  0x73, 0x74, 0x61, 0x6e, 0x74, 0x56, 0x65, 0x6c, 0x6f, 0x63, 0x69, 0x74,
  0x79, 0x2e, 0x70, 0x64, 0x62, 0x00, 0x00, 0x00, 0x48, 0x41, 0x53, 0x48,
  0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xaf, 0x26, 0xa2, 0xe7,
  0x9d, 0x8c, 0xfe, 0x0c, 0x6c, 0xdc, 0x63, 0xa5, 0x2e, 0xa6, 0xa0, 0x7a,
  0x44, 0x58, 0x49, 0x4c, 0xb8, 0x18, 0x00, 0x00, 0x60, 0x00, 0x01, 0x00,
  0x2e, 0x06, 0x00, 0x00, 0x44, 0x58, 0x49, 0x4c, 0x00, 0x01, 0x00, 0x00,
  0x94, 0x00, 0x00, 0x00, 0x98, 0x0c, 0x00, 0x00, 0x58, 0x44, 0x41, 0x54,
  0x08, 0x00, 0x00, 0x00, 0x24, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00,
  0x84, 0x00, 0x00, 0x00, 0xb0, 0x0c, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00,
  0x34, 0x0d, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x44, 0x0d, 0x00, 0x00, 0xb7, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xfc, 0x0f, 0x00, 0x00, 0x07, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x04, 0x13, 0x00, 0x00, 0xd2, 0x02, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0xd8, 0x15, 0x00, 0x00, 0x38, 0x02, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00,
  0x10, 0x18, 0x00, 0x00, 0x91, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00,
  0xa4, 0x18, 0x00, 0x00, 0x11, 0x00, 0x00, 0x00, 0x60, 0x00, 0x01, 0x00,
  0x2c, 0x03, 0x00, 0x00, 0x44, 0x58, 0x49, 0x4c, 0x00, 0x01, 0x00, 0x00,
  0x10, 0x00, 0x00, 0x00, 0x98, 0x0c, 0x00, 0x00, 0x42, 0x43, 0xc0, 0xde,
  0x21, 0x0c, 0x00, 0x00, 0x23, 0x03, 0x00, 0x00, 0x0b, 0x82, 0x20, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x13, 0x00, 0x00, 0x00, 0x07, 0x81, 0x23, 0x91,
  0x41, 0xc8, 0x04, 0x49, 0x06, 0x10, 0x32, 0x39, 0x92, 0x01, 0x84, 0x0c,
  0x25, 0x05, 0x08, 0x19, 0x1e, 0x04, 0x8b, 0x62, 0x80, 0x18, 0x45, 0x02,
  0x42, 0x92, 0x0b, 0x42, 0xc4, 0x10, 0x32, 0x14, 0x38, 0x08, 0x18, 0x4b,
  0x0a, 0x32, 0x62, 0x88, 0x48, 0x90, 0x14, 0x20, 0x43, 0x46, 0x88, 0xa5,
  0x00, 0x19, 0x32, 0x42, 0xe4, 0x48, 0x0e, 0x90, 0x11, 0x23, 0xc4, 0x50,
  0x41, 0x51, 0x81, 0x8c, 0xe1, 0x83, 0xe5, 0x8a, 0x04, 0x31, 0x46, 0x06,
  0x51, 0x18, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x1b, 0x8c, 0xe0, 0xff,
  0xff, 0xff, 0xff, 0x07, 0x40, 0x02, 0xa8, 0x0d, 0x84, 0xf0, 0xff, 0xff,
  0xff, 0xff, 0x03, 0x20, 0x6d, 0x30, 0x86, 0xff, 0xff, 0xff, 0xff, 0x1f,
  0x00, 0x09, 0xa8, 0x00, 0x49, 0x18, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x13, 0x82, 0x60, 0x42, 0x20, 0x4c, 0x08, 0x06, 0x00, 0x00, 0x00, 0x00,
  0x89, 0x20, 0x00, 0x00, 0x2d, 0x00, 0x00, 0x00, 0x32, 0x22, 0x88, 0x09,
  0x20, 0x64, 0x85, 0x04, 0x13, 0x23, 0xa4, 0x84, 0x04, 0x13, 0x23, 0xe3,
  0x84, 0xa1, 0x90, 0x14, 0x12, 0x4c, 0x8c, 0x8c, 0x0b, 0x84, 0xc4, 0x4c,
  0x10, 0x80, 0xc1, 0x08, 0x40, 0x09, 0x00, 0x0a, 0x66, 0x00, 0xe6, 0x08,
  0xc0, 0x60, 0x8e, 0x00, 0x29, 0xc6, 0x40, 0x10, 0x44, 0x41, 0x90, 0x51,
  0x0c, 0x80, 0x20, 0x88, 0x62, 0x20, 0xa4, 0x20, 0x03, 0x31, 0x0c, 0xc3,
  0x30, 0x0c, 0xa4, 0x94, 0x61, 0x20, 0x06, 0x62, 0x8e, 0x1a, 0x2e, 0x7f,
  0xc2, 0x1e, 0x42, 0xf2, 0xb9, 0x8d, 0x2a, 0x56, 0x62, 0xf2, 0x8b, 0xdb,
  0x46, 0xc4, 0x30, 0x0c, 0x03, 0x15, 0xf7, 0x0c, 0x97, 0x3f, 0x61, 0x0f,
  0x21, 0xf9, 0x21, 0xd0, 0x0c, 0x0b, 0x81, 0x82, 0xa7, 0x10, 0x0e, 0x01,
  0x11, 0x14, 0x95, 0x62, 0x20, 0x86, 0x61, 0xa0, 0x69, 0x8e, 0x20, 0x28,
  0x06, 0x44, 0x14, 0x04, 0x51, 0x91, 0x35, 0x10, 0x30, 0x8c, 0x30, 0x0c,
  0xc3, 0x08, 0xc4, 0x90, 0x04, 0x5a, 0x0e, 0x64, 0x47, 0x1d, 0x8e, 0x34,
  0x2d, 0x00, 0xe6, 0x50, 0x93, 0xcf, 0x39, 0x8d, 0x34, 0x01, 0xcd, 0x24,
  0x21, 0x27, 0xdb, 0xb8, 0x6d, 0xe3, 0xb8, 0x6c, 0x18, 0x06, 0x62, 0x18,
  0xa8, 0x4b, 0x06, 0x02, 0x00, 0x00, 0x00, 0x00, 0x13, 0x16, 0x72, 0xc0,
  0x87, 0x74, 0x60, 0x87, 0x36, 0x68, 0x87, 0x79, 0x68, 0x03, 0x7c, 0x10,
  0x87, 0x38, 0xd8, 0xf0, 0x0a, 0xe5, 0xd0, 0x06, 0xed, 0xa0, 0x07, 0xe5,
  0xd0, 0x06, 0xf0, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x7a, 0x30, 0x07, 0x72,
  0xd0, 0x06, 0xe9, 0x10, 0x07, 0x7a, 0x30, 0x07, 0x72, 0xd0, 0x06, 0xe9,
  0x80, 0x07, 0x7a, 0x30, 0x07, 0x72, 0xd0, 0x06, 0xe9, 0x10, 0x07, 0x76,
  0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x90, 0x0e, 0x73, 0x20, 0x07, 0x7a,
  0x30, 0x07, 0x72, 0xd0, 0x06, 0xe9, 0x60, 0x07, 0x74, 0xa0, 0x07, 0x76,
  0x40, 0x07, 0x6d, 0x60, 0x0e, 0x71, 0x60, 0x07, 0x7a, 0x30, 0x07, 0x72,
  0xd0, 0x06, 0xe6, 0x30, 0x07, 0x72, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d,
  0x60, 0x0e, 0x76, 0x40, 0x07, 0x7a, 0x60, 0x07, 0x74, 0xd0, 0x06, 0xee,
  0x80, 0x07, 0x7a, 0x10, 0x07, 0x76, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x7a,
  0x60, 0x07, 0x74, 0x30, 0xe4, 0x09, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x60, 0xc8, 0x63, 0x00, 0x01, 0x10, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x90, 0x07, 0x01, 0x02, 0x40, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x21, 0x8f, 0x02, 0x04, 0x40,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x43, 0x1e, 0x06, 0x08,
  0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x86, 0x3c, 0x11,
  0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x79,
  0x26, 0x20, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18,
  0xf2, 0x58, 0x40, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x90, 0x05, 0x02, 0x00, 0x13, 0x00, 0x00, 0x00, 0x32, 0x1e, 0x98, 0x14,
  0x19, 0x11, 0x4c, 0x90, 0x8c, 0x09, 0x26, 0x47, 0xc6, 0x04, 0x43, 0x22,
  0x4a, 0x60, 0x04, 0xa0, 0x20, 0x8a, 0xa1, 0x10, 0x0d, 0xca, 0xa0, 0x3c,
  0xca, 0xa1, 0x08, 0x0a, 0xa1, 0x14, 0xa8, 0x28, 0x89, 0x11, 0x80, 0x42,
  0x28, 0x83, 0x22, 0x20, 0x6f, 0x06, 0x80, 0xbe, 0xb1, 0x18, 0x05, 0x83,
  0x47, 0xd0, 0x7f, 0xe0, 0x11, 0xf4, 0x1f, 0x78, 0x04, 0xfd, 0x07, 0x1e,
  0x41, 0xff, 0x01, 0xf1, 0x00, 0xc4, 0x03, 0x10, 0x0f, 0x80, 0x40, 0x00,
  0x79, 0x18, 0x00, 0x00, 0x89, 0x00, 0x00, 0x00, 0x1a, 0x03, 0x4c, 0x90,
  0x46, 0x02, 0x13, 0xc4, 0x36, 0xf8, 0xfa, 0xc2, 0x12, 0x7a, 0xc2, 0xfa,
  0x82, 0x2a, 0x92, 0xfa, 0xa2, 0x42, 0x92, 0x2a, 0x0a, 0x22, 0xfa, 0x9a,
  0x1a, 0x92, 0x0a, 0xa2, 0x1a, 0x42, 0xfa, 0x9a, 0x4a, 0xd2, 0x2a, 0xfa,
  0x62, 0x4a, 0x6a, 0x4a, 0xa2, 0xfa, 0x4a, 0x72, 0xfa, 0x12, 0xca, 0xa2,
  0x2a, 0x9a, 0x62, 0x00, 0xb3, 0x41, 0x08, 0x04, 0x76, 0x64, 0x78, 0x63,
  0x78, 0x62, 0x6f, 0x78, 0x20, 0x32, 0x34, 0x31, 0x30, 0x2e, 0x32, 0x34,
  0x31, 0x30, 0x2e, 0x31, 0x31, 0x31, 0x31, 0x36, 0x2e, 0x31, 0x30, 0x37,
  0x34, 0x31, 0x1b, 0x02, 0x62, 0x82, 0x40, 0x20, 0x13, 0x04, 0x22, 0xd9,
  0x20, 0x18, 0xc7, 0x04, 0x81, 0x50, 0x36, 0x08, 0x46, 0x42, 0xc1, 0x6e,
  0x6e, 0x82, 0x40, 0x2c, 0x1b, 0x86, 0x85, 0x39, 0x26, 0x08, 0x1e, 0x46,
  0x60, 0x82, 0x40, 0x30, 0x1b, 0x90, 0xc3, 0x79, 0x8e, 0xc3, 0x80, 0x80,
  0x0d, 0x41, 0xb4, 0x81, 0x00, 0x00, 0x09, 0x98, 0x20, 0x7c, 0xd9, 0x86,
  0x80, 0x9a, 0x20, 0x08, 0x00, 0x25, 0xab, 0xa9, 0xa1, 0x37, 0xb7, 0x39,
  0xba, 0x30, 0x37, 0x3a, 0xab, 0x32, 0xb6, 0xb7, 0xb1, 0x34, 0xba, 0x3c,
  0x2e, 0x53, 0x56, 0x5f, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
  0x13, 0x84, 0x62, 0x9a, 0x20, 0x14, 0xd4, 0x86, 0xe0, 0x98, 0x20, 0x14,
  0xd5, 0x04, 0x81, 0x68, 0x26, 0x08, 0x84, 0xb3, 0x41, 0xe8, 0xbc, 0x0d,
  0xcb, 0x81, 0x65, 0xda, 0xa6, 0x19, 0xdc, 0xa1, 0x7d, 0x34, 0x9c, 0x9e,
  0xa4, 0x9a, 0x82, 0x98, 0x26, 0x08, 0x85, 0x35, 0x41, 0x20, 0x9e, 0x0d,
  0x42, 0x37, 0x06, 0x1b, 0x16, 0x23, 0x0c, 0x32, 0x6d, 0xd3, 0x0c, 0x31,
  0x30, 0x34, 0x32, 0x98, 0x20, 0x10, 0x10, 0x11, 0xaa, 0x22, 0xac, 0xa1,
  0xa7, 0x27, 0x29, 0xa2, 0x09, 0x42, 0x71, 0x6d, 0x10, 0xba, 0x6e, 0xc3,
  0x62, 0x06, 0x67, 0x90, 0x69, 0x9b, 0x66, 0xa0, 0x81, 0x19, 0x68, 0x69,
  0xb0, 0x61, 0x00, 0x83, 0x32, 0x50, 0x83, 0x0d, 0xcb, 0x71, 0x06, 0x99,
  0xb6, 0xa1, 0x81, 0x81, 0x06, 0x87, 0x96, 0x06, 0x1b, 0x02, 0x63, 0xc3,
  0x62, 0x9c, 0x41, 0xa6, 0xb5, 0x01, 0x1a, 0x18, 0x9c, 0xa1, 0x7d, 0x1b,
  0x02, 0x33, 0xd8, 0xb0, 0x98, 0xc1, 0x19, 0x64, 0xda, 0x1b, 0xa0, 0x81,
  0x21, 0x06, 0x66, 0xa0, 0x91, 0x01, 0x8b, 0xa1, 0x27, 0xa6, 0x27, 0xa9,
  0x0d, 0x4b, 0x17, 0x07, 0x99, 0xb6, 0xa1, 0x81, 0xc1, 0x75, 0xda, 0x37,
  0x41, 0x20, 0xa2, 0x0d, 0xcb, 0x1c, 0x60, 0x99, 0x18, 0x6c, 0x9c, 0xc1,
  0xcd, 0x81, 0xf6, 0x4d, 0x10, 0x08, 0x69, 0x43, 0x30, 0x07, 0x1b, 0x96,
  0x3a, 0x38, 0x83, 0x4c, 0xb3, 0x03, 0x34, 0x30, 0xb8, 0x3a, 0xd0, 0xbe,
  0x0d, 0x06, 0x1b, 0xb8, 0x01, 0x1c, 0xc8, 0x01, 0x1d, 0xdc, 0xc1, 0x86,
  0x61, 0x0d, 0xf0, 0x00, 0xd8, 0x50, 0x58, 0x57, 0x1e, 0x4c, 0x40, 0x2b,
  0x3c, 0xb1, 0x37, 0x3c, 0x97, 0xb1, 0xb7, 0x36, 0xb8, 0x34, 0xb6, 0x32,
  0x39, 0x97, 0x37, 0x38, 0xba, 0xb4, 0x37, 0xb7, 0xb9, 0x29, 0x81, 0x50,
  0x85, 0x8d, 0xcd, 0xae, 0xcd, 0x25, 0x8d, 0xac, 0xcc, 0x8d, 0x6e, 0x4a,
  0x40, 0x54, 0x21, 0xc3, 0x73, 0xb1, 0x2b, 0x93, 0x9b, 0x4b, 0x7b, 0x73,
  0x9b, 0x12, 0x1c, 0x4d, 0xc8, 0xf0, 0x5c, 0xec, 0xc2, 0xd8, 0xec, 0xca,
  0xe4, 0xa6, 0x04, 0x49, 0x1d, 0x32, 0x3c, 0x97, 0x39, 0xb4, 0x30, 0xb2,
  0x32, 0xb9, 0xa6, 0x37, 0xb2, 0x32, 0xb6, 0x29, 0x01, 0x53, 0x86, 0x0c,
  0xcf, 0x45, 0xae, 0x6c, 0xee, 0xad, 0x4e, 0x6e, 0xac, 0x6c, 0x6e, 0x4a,
  0x20, 0xd5, 0x21, 0xc3, 0x73, 0xb1, 0x4b, 0x2b, 0xbb, 0x4b, 0x22, 0x9b,
  0xa2, 0x0b, 0xa3, 0x2b, 0x9b, 0x12, 0x50, 0x75, 0xc8, 0xf0, 0x5c, 0xca,
  0xdc, 0xe8, 0xe4, 0xf2, 0xa0, 0xde, 0xd2, 0xdc, 0xe8, 0xe6, 0xa6, 0x04,
  0x79, 0x00, 0x00, 0x00, 0x79, 0x18, 0x00, 0x00, 0x4c, 0x00, 0x00, 0x00,
  0x33, 0x08, 0x80, 0x1c, 0xc4, 0xe1, 0x1c, 0x66, 0x14, 0x01, 0x3d, 0x88,
  0x43, 0x38, 0x84, 0xc3, 0x8c, 0x42, 0x80, 0x07, 0x79, 0x78, 0x07, 0x73,
  0x98, 0x71, 0x0c, 0xe6, 0x00, 0x0f, 0xed, 0x10, 0x0e, 0xf4, 0x80, 0x0e,
  0x33, 0x0c, 0x42, 0x1e, 0xc2, 0xc1, 0x1d, 0xce, 0xa1, 0x1c, 0x66, 0x30,
  0x05, 0x3d, 0x88, 0x43, 0x38, 0x84, 0x83, 0x1b, 0xcc, 0x03, 0x3d, 0xc8,
  0x43, 0x3d, 0x8c, 0x03, 0x3d, 0xcc, 0x78, 0x8c, 0x74, 0x70, 0x07, 0x7b,
  0x08, 0x07, 0x79, 0x48, 0x87, 0x70, 0x70, 0x07, 0x7a, 0x70, 0x03, 0x76,
  0x78, 0x87, 0x70, 0x20, 0x87, 0x19, 0xcc, 0x11, 0x0e, 0xec, 0x90, 0x0e,
  0xe1, 0x30, 0x0f, 0x6e, 0x30, 0x0f, 0xe3, 0xf0, 0x0e, 0xf0, 0x50, 0x0e,
  0x33, 0x10, 0xc4, 0x1d, 0xde, 0x21, 0x1c, 0xd8, 0x21, 0x1d, 0xc2, 0x61,
  0x1e, 0x66, 0x30, 0x89, 0x3b, 0xbc, 0x83, 0x3b, 0xd0, 0x43, 0x39, 0xb4,
  0x03, 0x3c, 0xbc, 0x83, 0x3c, 0x84, 0x03, 0x3b, 0xcc, 0xf0, 0x14, 0x76,
  0x60, 0x07, 0x7b, 0x68, 0x07, 0x37, 0x68, 0x87, 0x72, 0x68, 0x07, 0x37,
  0x80, 0x87, 0x70, 0x90, 0x87, 0x70, 0x60, 0x07, 0x76, 0x28, 0x07, 0x76,
  0xf8, 0x05, 0x76, 0x78, 0x87, 0x77, 0x80, 0x87, 0x5f, 0x08, 0x87, 0x71,
  0x18, 0x87, 0x72, 0x98, 0x87, 0x79, 0x98, 0x81, 0x2c, 0xee, 0xf0, 0x0e,
  0xee, 0xe0, 0x0e, 0xf5, 0xc0, 0x0e, 0xec, 0x30, 0x03, 0x62, 0xc8, 0xa1,
  0x1c, 0xe4, 0xa1, 0x1c, 0xcc, 0xa1, 0x1c, 0xe4, 0xa1, 0x1c, 0xdc, 0x61,
  0x1c, 0xca, 0x21, 0x1c, 0xc4, 0x81, 0x1d, 0xca, 0x61, 0x06, 0xd6, 0x90,
  0x43, 0x39, 0xc8, 0x43, 0x39, 0x98, 0x43, 0x39, 0xc8, 0x43, 0x39, 0xb8,
  0xc3, 0x38, 0x94, 0x43, 0x38, 0x88, 0x03, 0x3b, 0x94, 0xc3, 0x2f, 0xbc,
  0x83, 0x3c, 0xfc, 0x82, 0x3b, 0xd4, 0x03, 0x3b, 0xb0, 0xc3, 0x0c, 0xc4,
  0x21, 0x07, 0x7c, 0x70, 0x03, 0x7a, 0x28, 0x87, 0x76, 0x80, 0x87, 0x19,
  0xd1, 0x43, 0x0e, 0xf8, 0xe0, 0x06, 0xe4, 0x20, 0x0e, 0xe7, 0xe0, 0x06,
  0xf6, 0x10, 0x0e, 0xf2, 0xc0, 0x0e, 0xe1, 0x90, 0x0f, 0xef, 0x50, 0x0f,
  0xf4, 0x00, 0x00, 0x00, 0x71, 0x20, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00,
  0x06, 0x20, 0xbd, 0x2c, 0xe7, 0x34, 0xd2, 0x04, 0x34, 0xd3, 0x4b, 0x2c,
  0x8e, 0x80, 0x4c, 0x98, 0x15, 0x6c, 0xc3, 0xe5, 0x3b, 0x8f, 0x2f, 0x04,
  0x54, 0x51, 0x10, 0x51, 0xe9, 0x00, 0x43, 0x49, 0x18, 0x80, 0x80, 0xf9,
  0xc5, 0x6d, 0xdb, 0x81, 0x34, 0x5c, 0xbe, 0xf3, 0xf8, 0x42, 0x44, 0x00,
  0x13, 0x11, 0x02, 0xcd, 0xb0, 0x10, 0x36, 0xe0, 0x0c, 0x97, 0xef, 0x3c,
  0xfe, 0xe0, 0x4c, 0xb7, 0x5f, 0xdc, 0xb6, 0x05, 0x4c, 0xc3, 0xe5, 0x3b,
  0x8f, 0xbf, 0x38, 0xc0, 0x20, 0x36, 0x0f, 0x35, 0xf9, 0xc5, 0x6d, 0x9b,
  0x40, 0x35, 0x5c, 0xbe, 0xf3, 0xf8, 0xd2, 0xe4, 0x44, 0x04, 0x4a, 0x4d,
  0x0f, 0x35, 0xf9, 0xc5, 0x6d, 0x9b, 0x81, 0x34, 0x5c, 0xbe, 0xf3, 0xf8,
  0x13, 0x11, 0x4d, 0x08, 0x10, 0x61, 0x7e, 0x71, 0xdb, 0x46, 0xf0, 0x0c,
  0x97, 0xef, 0x3c, 0x3e, 0xd5, 0x00, 0x11, 0xe6, 0x17, 0xb7, 0x0d, 0x00,
  0x61, 0x20, 0x00, 0x00, 0x7e, 0x01, 0x00, 0x00, 0x13, 0x04, 0x41, 0x2c,
  0x10, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x54, 0x8d, 0x00, 0x10,
  0x51, 0x5c, 0x65, 0x37, 0x03, 0x50, 0x72, 0x25, 0x51, 0x14, 0x65, 0x51,
  0x6e, 0x25, 0x53, 0x2c, 0x85, 0x51, 0x1a, 0xc5, 0x41, 0x45, 0x09, 0xd0,
  0x30, 0x46, 0x00, 0x82, 0x20, 0x88, 0x7f, 0x00, 0x23, 0x06, 0x09, 0x00,
  0x82, 0x60, 0x60, 0x8d, 0x01, 0x33, 0x85, 0x41, 0x18, 0x40, 0x23, 0x06,
  0x09, 0x00, 0x82, 0x60, 0x60, 0xa8, 0x81, 0xb6, 0x89, 0xc1, 0xe5, 0x8c,
  0x18, 0x24, 0x00, 0x08, 0x82, 0x81, 0xb1, 0x06, 0x1b, 0x37, 0x06, 0xc4,
  0x33, 0x62, 0x90, 0x00, 0x20, 0x08, 0x06, 0x06, 0x1b, 0x70, 0x65, 0x40,
  0x06, 0x19, 0x34, 0x62, 0x90, 0x00, 0x20, 0x08, 0x06, 0x46, 0x1b, 0x74,
  0x66, 0x50, 0x06, 0x46, 0x34, 0x62, 0x90, 0x00, 0x20, 0x08, 0x06, 0x86,
  0x1b, 0x78, 0x67, 0x60, 0x06, 0x98, 0x34, 0x62, 0x90, 0x00, 0x20, 0x08,
  0x06, 0xc6, 0x1b, 0x7c, 0x67, 0x70, 0x06, 0xdc, 0x34, 0x62, 0x90, 0x00,
  0x20, 0x08, 0x06, 0x06, 0x1c, 0x80, 0x01, 0x1a, 0xa0, 0x41, 0x42, 0x8d,
  0x18, 0x24, 0x00, 0x08, 0x82, 0x81, 0x11, 0x07, 0x61, 0x90, 0x06, 0x69,
  0xb0, 0x55, 0x23, 0x06, 0x09, 0x00, 0x82, 0x60, 0x60, 0xc8, 0x81, 0x18,
  0xa8, 0x81, 0x1a, 0x74, 0xd6, 0x88, 0xc1, 0x01, 0x80, 0x20, 0x18, 0x44,
  0x6f, 0x80, 0x29, 0x6a, 0x30, 0x9a, 0x10, 0x00, 0xa3, 0x09, 0x42, 0x30,
  0x9a, 0x30, 0x08, 0xa3, 0x09, 0xc4, 0x30, 0x62, 0x70, 0x00, 0x20, 0x08,
  0x06, 0x11, 0x1d, 0x74, 0x8f, 0x36, 0x9a, 0x10, 0x00, 0xa3, 0x09, 0x42,
  0x30, 0x9a, 0x30, 0x08, 0xa3, 0x09, 0xc4, 0x30, 0x62, 0x70, 0x00, 0x20,
  0x08, 0x06, 0x51, 0x1e, 0x88, 0x01, 0xe5, 0x8d, 0x26, 0x04, 0xc0, 0x68,
  0x82, 0x10, 0x8c, 0x26, 0x0c, 0xc2, 0x68, 0x02, 0x31, 0x8c, 0x18, 0x1c,
  0x00, 0x08, 0x82, 0x41, 0xe4, 0x07, 0x67, 0x90, 0x89, 0xc1, 0x68, 0x42,
  0x00, 0x8c, 0x26, 0x08, 0xc1, 0x68, 0xc2, 0x20, 0x8c, 0x26, 0x10, 0x83,
  0x4d, 0x98, 0x7c, 0x46, 0x0c, 0x10, 0x00, 0x04, 0xc1, 0x60, 0x1a, 0x05,
  0x37, 0xc0, 0xa6, 0x60, 0xc4, 0x00, 0x01, 0x40, 0x10, 0x0c, 0x26, 0x52,
  0x78, 0x03, 0x6c, 0x0a, 0x46, 0x0c, 0x10, 0x00, 0x04, 0xc1, 0x60, 0x2a,
  0x05, 0x38, 0xc0, 0xa6, 0xc0, 0x24, 0x4e, 0x3e, 0x23, 0x06, 0x08, 0x00,
  0x82, 0x60, 0x30, 0x9d, 0x82, 0x1c, 0x70, 0x52, 0x30, 0x62, 0x80, 0x00,
  0x20, 0x08, 0x06, 0x13, 0x2a, 0xcc, 0x01, 0x27, 0x05, 0x23, 0x06, 0x08,
  0x00, 0x82, 0x60, 0x30, 0xa5, 0x02, 0x1d, 0x70, 0x52, 0x60, 0x11, 0x18,
  0xc8, 0x67, 0xc4, 0x00, 0x01, 0x40, 0x10, 0x0c, 0xa6, 0x55, 0xb0, 0x03,
  0x30, 0x88, 0x82, 0x11, 0x03, 0x04, 0x00, 0x41, 0x30, 0x98, 0x58, 0xe1,
  0x0e, 0xc0, 0x20, 0x0a, 0x46, 0x0c, 0x10, 0x00, 0x04, 0xc1, 0x60, 0x6a,
  0x05, 0x3c, 0x00, 0x83, 0x28, 0x30, 0x88, 0x0c, 0xe4, 0x33, 0x62, 0x80,
  0x00, 0x20, 0x08, 0x06, 0xd3, 0x2b, 0xe8, 0x01, 0x19, 0x40, 0xc1, 0x88,
  0x01, 0x02, 0x80, 0x20, 0x18, 0x4c, 0xb0, 0xb0, 0x07, 0x64, 0x00, 0x05,
  0x23, 0x06, 0x08, 0x00, 0x82, 0x60, 0x30, 0xc5, 0x02, 0x1f, 0x90, 0x01,
  0x14, 0x8c, 0x18, 0x1c, 0x00, 0x08, 0x82, 0x41, 0x34, 0x0b, 0x7c, 0xe0,
  0x06, 0xb0, 0x30, 0x9a, 0x10, 0x00, 0xa3, 0x09, 0x42, 0x30, 0x9a, 0x30,
  0x08, 0xa3, 0x09, 0xc4, 0x30, 0x62, 0x70, 0x00, 0x20, 0x08, 0x06, 0x11,
  0x2e, 0x84, 0xc2, 0x1c, 0xb4, 0xc2, 0x68, 0x42, 0x00, 0x8c, 0x26, 0x08,
  0xc1, 0x68, 0xc2, 0x20, 0x8c, 0x26, 0x10, 0xc3, 0x88, 0xc1, 0x01, 0x80,
  0x20, 0x18, 0x44, 0xbd, 0x60, 0x0a, 0x78, 0x50, 0x0b, 0xa3, 0x09, 0x01,
  0x30, 0x9a, 0x20, 0x04, 0xa3, 0x09, 0x83, 0x30, 0x9a, 0x40, 0x0c, 0xe6,
  0xdc, 0x81, 0x7c, 0x46, 0x0c, 0x10, 0x00, 0x04, 0xc1, 0x60, 0x12, 0x87,
  0x56, 0xb8, 0x03, 0x27, 0x18, 0x31, 0x40, 0x00, 0x10, 0x04, 0x83, 0x69,
  0x1c, 0x5c, 0xe1, 0x0e, 0x9c, 0x60, 0xc4, 0x00, 0x01, 0x40, 0x10, 0x0c,
  0x26, 0x72, 0x78, 0x85, 0x3b, 0x70, 0x02, 0x6b, 0xf6, 0x40, 0x3e, 0x23,
  0x06, 0x08, 0x00, 0x82, 0x60, 0x30, 0x99, 0x43, 0x2c, 0xec, 0x41, 0x13,
  0x8c, 0x18, 0x20, 0x00, 0x08, 0x82, 0xc1, 0x74, 0x0e, 0xb2, 0xb0, 0x07,
  0x4d, 0x30, 0x62, 0x80, 0x00, 0x20, 0x08, 0x06, 0x13, 0x3a, 0xcc, 0xc2,
  0x1e, 0x34, 0x81, 0x31, 0x7f, 0x20, 0x9f, 0x11, 0x03, 0x04, 0x00, 0x41,
  0x30, 0x98, 0xd4, 0xa1, 0x16, 0xfe, 0x80, 0x09, 0x46, 0x0c, 0x10, 0x00,
  0x04, 0xc1, 0x60, 0x5a, 0x07, 0x5b, 0xf8, 0x03, 0x26, 0x18, 0x31, 0x40,
  0x00, 0x10, 0x04, 0x83, 0x89, 0x1d, 0x6e, 0xe1, 0x0f, 0x98, 0x60, 0xc4,
  0xe0, 0x00, 0x40, 0x10, 0x0c, 0x22, 0x77, 0xb8, 0x85, 0x54, 0x08, 0x87,
  0xd1, 0x84, 0x00, 0x18, 0x4d, 0x10, 0x82, 0xd1, 0x84, 0x41, 0x18, 0x31,
  0x38, 0x00, 0x10, 0x04, 0x83, 0x48, 0x1e, 0x76, 0xa1, 0x15, 0xd8, 0x61,
  0x34, 0x21, 0x00, 0x46, 0x13, 0x84, 0x60, 0x34, 0x61, 0x10, 0x46, 0x0c,
  0x0e, 0x00, 0x04, 0xc1, 0x20, 0xb2, 0x87, 0x5f, 0x88, 0x05, 0x76, 0x18,
  0x4d, 0x08, 0x80, 0xd1, 0x04, 0x21, 0x18, 0x4d, 0x18, 0x04, 0x5b, 0x64,
  0x41, 0x3e, 0x23, 0x06, 0x08, 0x00, 0x82, 0x60, 0x30, 0xe9, 0x43, 0x39,
  0xc8, 0xc2, 0x12, 0x8c, 0x18, 0x20, 0x00, 0x08, 0x82, 0xc1, 0xb4, 0x0f,
  0xe6, 0x20, 0x0b, 0x4b, 0x60, 0x4a, 0x2d, 0xc8, 0x67, 0xc4, 0x00, 0x01,
  0x40, 0x10, 0x0c, 0xa6, 0x7e, 0x40, 0x87, 0x5a, 0x50, 0x82, 0x11, 0x03,
  0x04, 0x00, 0x41, 0x30, 0x98, 0xfc, 0x21, 0x1d, 0x6a, 0x41, 0x09, 0x2c,
  0xc1, 0x05, 0xf9, 0x8c, 0x18, 0x20, 0x00, 0x08, 0x82, 0xc1, 0x04, 0x12,
  0xeb, 0x80, 0x0b, 0x49, 0x30, 0x62, 0x80, 0x00, 0x20, 0x08, 0x06, 0x53,
  0x48, 0xb0, 0x03, 0x2e, 0x24, 0xc1, 0x88, 0xc1, 0x02, 0x80, 0x20, 0x18,
  0x28, 0x25, 0x61, 0x0e, 0x07, 0x11, 0x1c, 0x44, 0x30, 0x62, 0x60, 0x00,
  0x20, 0x08, 0x06, 0x4c, 0x49, 0x98, 0x43, 0x60, 0x41, 0x22, 0x1f, 0x13,
  0x0e, 0xf9, 0xd8, 0x50, 0xc8, 0x67, 0xc4, 0xe0, 0x00, 0x40, 0x10, 0x0c,
  0x22, 0x94, 0x88, 0x87, 0x71, 0x48, 0x87, 0xd1, 0x84, 0x00, 0x18, 0x4d,
  0x10, 0x82, 0xd1, 0x84, 0x41, 0x18, 0x4d, 0x20, 0x86, 0x11, 0x83, 0x03,
  0x00, 0x41, 0x30, 0x88, 0x5a, 0xc2, 0x1e, 0xd0, 0xa1, 0x1d, 0x46, 0x13,
  0x02, 0x60, 0x34, 0x41, 0x08, 0x46, 0x13, 0x06, 0x61, 0x34, 0x81, 0x18,
  0x46, 0x0c, 0x0e, 0x00, 0x04, 0xc1, 0x20, 0x92, 0x89, 0x7d, 0x68, 0x87,
  0x78, 0x18, 0x4d, 0x08, 0x80, 0xd1, 0x04, 0x21, 0x18, 0x4d, 0x18, 0x84,
  0xd1, 0x04, 0x62, 0x18, 0x31, 0x38, 0x00, 0x10, 0x04, 0x83, 0xe8, 0x26,
  0x40, 0x42, 0x1e, 0xea, 0x61, 0x34, 0x21, 0x00, 0x46, 0x13, 0x84, 0x60,
  0x34, 0x61, 0x10, 0x46, 0x13, 0x88, 0x61, 0xc4, 0xe0, 0x00, 0x40, 0x10,
  0x0c, 0x22, 0x9e, 0x28, 0x89, 0x7b, 0x98, 0x89, 0xd1, 0x84, 0x00, 0x18,
  0x4d, 0x10, 0x82, 0xd1, 0x84, 0x41, 0x18, 0x4d, 0x20, 0x06, 0x9b, 0xec,
  0x41, 0x3e, 0x23, 0x06, 0x08, 0x00, 0x82, 0x60, 0x30, 0x85, 0x05, 0x4b,
  0xd8, 0xc3, 0x14, 0x8c, 0x18, 0x20, 0x00, 0x08, 0x82, 0xc1, 0x24, 0x16,
  0x2d, 0x61, 0x0f, 0x53, 0x30, 0x62, 0x80, 0x00, 0x20, 0x08, 0x06, 0xd3,
  0x58, 0xb8, 0x84, 0x3d, 0x4c, 0x81, 0x49, 0xfa, 0x20, 0x9f, 0x11, 0x03,
  0x04, 0x00, 0x41, 0x30, 0x98, 0xca, 0x02, 0x26, 0xf4, 0x41, 0x0a, 0x46,
  0x0c, 0x10, 0x00, 0x04, 0xc1, 0x60, 0x32, 0x8b, 0x98, 0xd0, 0x07, 0x29,
  0x18, 0x31, 0x40, 0x00, 0x10, 0x04, 0x83, 0xe9, 0x2c, 0x64, 0x42, 0x1f,
  0xa4, 0xc0, 0x22, 0x7f, 0x90, 0xcf, 0x88, 0x01, 0x02, 0x80, 0x20, 0x18,
  0x4c, 0x69, 0x41, 0x13, 0xfe, 0x10, 0x05, 0x23, 0x06, 0x08, 0x00, 0x82,
  0x60, 0x30, 0xa9, 0x45, 0x4d, 0xf8, 0x43, 0x14, 0x8c, 0x18, 0x20, 0x00,
  0x08, 0x82, 0xc1, 0xb4, 0x16, 0x36, 0xe1, 0x0f, 0x51, 0x60, 0x90, 0x48,
  0xc8, 0x67, 0xc4, 0x00, 0x01, 0x40, 0x10, 0x0c, 0xa6, 0xb6, 0xc0, 0x09,
  0x91, 0x80, 0x82, 0x11, 0x03, 0x04, 0x00, 0x41, 0x30, 0x98, 0xdc, 0x22,
  0x27, 0x44, 0x02, 0x0a, 0x46, 0x0c, 0x10, 0x00, 0x04, 0xc1, 0x60, 0x7a,
  0x0b, 0x9d, 0x10, 0x09, 0x28, 0x18, 0x31, 0x48, 0x00, 0x10, 0x04, 0x03,
  0x84, 0x2e, 0xc8, 0xa2, 0x2d, 0xda, 0x42, 0x2c, 0x56, 0x62, 0xc4, 0x20,
  0x01, 0x40, 0x10, 0x0c, 0x10, 0xba, 0x20, 0x8b, 0xb6, 0x68, 0x0b, 0x97,
  0x50, 0x89, 0x11, 0x83, 0x04, 0x00, 0x41, 0x30, 0x40, 0xe8, 0x82, 0x2c,
  0xdc, 0xa2, 0x2d, 0xc4, 0x82, 0x15, 0x46, 0x0c, 0x12, 0x00, 0x04, 0xc1,
  0x00, 0xa1, 0x0b, 0xb2, 0x70, 0x8b, 0xb6, 0x70, 0x09, 0x54, 0x18, 0x31,
  0x48, 0x00, 0x10, 0x04, 0x03, 0x84, 0x2e, 0xc8, 0xc2, 0x2d, 0xda, 0xe2,
  0x27, 0x48, 0x61, 0xc4, 0x20, 0x01, 0x40, 0x10, 0x0c, 0x10, 0xba, 0x20,
  0x0b, 0xb7, 0x68, 0x0b, 0xb0, 0x68, 0x89, 0x11, 0x83, 0x04, 0x00, 0x41,
  0x30, 0x40, 0xe8, 0x82, 0x2c, 0xcc, 0xa2, 0x2d, 0xc4, 0x82, 0x0d, 0x46,
  0x0c, 0x12, 0x00, 0x04, 0xc1, 0x00, 0xa1, 0x0b, 0xb2, 0x30, 0x8b, 0xb6,
  0x70, 0x89, 0x35, 0x18, 0x31, 0x48, 0x00, 0x10, 0x04, 0x03, 0x84, 0x2e,
  0xc8, 0xc2, 0x2c, 0xda, 0xe2, 0x27, 0xd4, 0x60, 0xc4, 0x20, 0x01, 0x40,
  0x10, 0x0c, 0x10, 0xba, 0x20, 0x8b, 0xb4, 0x68, 0x0b, 0xb1, 0x40, 0x83,
  0x11, 0x83, 0x04, 0x00, 0x41, 0x30, 0x40, 0xe8, 0x82, 0x2c, 0xd2, 0xa2,
  0x2d, 0x5c, 0xe2, 0x0c, 0x46, 0x0c, 0x12, 0x00, 0x04, 0xc1, 0x00, 0xa1,
  0x0b, 0xb2, 0x48, 0x8b, 0xb6, 0xf8, 0x09, 0x33, 0x18, 0x31, 0x48, 0x00,
  0x10, 0x04, 0x03, 0x84, 0x2e, 0xc8, 0x22, 0x2d, 0xda, 0x02, 0x2c, 0xca,
  0x60, 0xc4, 0x20, 0x01, 0x40, 0x10, 0x0c, 0x10, 0xba, 0x20, 0x8b, 0xb2,
  0x68, 0x0b, 0xb1, 0x58, 0x87, 0x11, 0x83, 0x04, 0x00, 0x41, 0x30, 0x40,
  0xe8, 0x82, 0x2c, 0xca, 0xa2, 0x2d, 0x5c, 0xe2, 0x1c, 0x46, 0x0c, 0x12,
  0x00, 0x04, 0xc1, 0x00, 0xa1, 0x0b, 0xb2, 0x28, 0x8b, 0xb6, 0xf8, 0x89,
  0x71, 0x18, 0x31, 0x48, 0x00, 0x10, 0x04, 0x03, 0x84, 0x2e, 0xc8, 0xa2,
  0x2c, 0xda, 0x02, 0x2c, 0x7e, 0x61, 0xc4, 0x20, 0x01, 0x40, 0x10, 0x0c,
  0x10, 0xba, 0x20, 0x0b, 0xb2, 0x68, 0x0b, 0xb1, 0x68, 0x46, 0x0c, 0x12,
  0x00, 0x04, 0xc1, 0x00, 0xa1, 0x0b, 0xb2, 0x20, 0x8b, 0xb6, 0x70, 0x89,
  0x64, 0xc4, 0x20, 0x01, 0x40, 0x10, 0x0c, 0x10, 0xba, 0x20, 0x0b, 0xb2,
  0x68, 0x8b, 0x9f, 0x28, 0x46, 0x0c, 0x12, 0x00, 0x04, 0xc1, 0x00, 0xa1,
  0x0b, 0xb2, 0x20, 0x8b, 0xb6, 0x00, 0x8b, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xaf, 0x26, 0xa2, 0xe7, 0x9d, 0x8c, 0xfe, 0x0c,
  0x6c, 0xdc, 0x63, 0xa5, 0x2e, 0xa6, 0xa0, 0x7a, 0x17, 0x00, 0x01, 0x00,
  0x20, 0x5c, 0x17, 0x00, 0x78, 0x01, 0xed, 0x98, 0x3d, 0x6f, 0x13, 0x41,
  0x10, 0x86, 0x67, 0xf7, 0xee, 0xd6, 0xeb, 0xf5, 0x78, 0xbd, 0xb9, 0x5c,
  0x1c, 0x12, 0x8c, 0xe3, 0xb3, 0x8c, 0x91, 0x28, 0x20, 0x42, 0x48, 0x34,
  0x40, 0x00, 0xd1, 0xa7, 0xa5, 0x80, 0x2a, 0x50, 0x20, 0x51, 0xa4, 0x46,
  0xc8, 0x31, 0x5f, 0x82, 0x22, 0x15, 0x1d, 0x05, 0x52, 0x14, 0x3e, 0x2a,
  0x24, 0xf8, 0x05, 0x0e, 0x38, 0x8a, 0x94, 0x02, 0x89, 0x1f, 0x00, 0x3d,
  0x05, 0x1d, 0xa2, 0x70, 0x45, 0x98, 0x39, 0xdb, 0x89, 0x63, 0xb9, 0x06,
  0x81, 0xf6, 0x91, 0xe6, 0x1d, 0xdf, 0x78, 0x3f, 0xe6, 0x6e, 0xb7, 0x7a,
  0xaf, 0xcf, 0x42, 0xc6, 0xe3, 0xef, 0x5f, 0x6e, 0x73, 0xbe, 0x79, 0x66,
  0xe7, 0xdc, 0x7b, 0x04, 0x88, 0xf8, 0x81, 0x08, 0x59, 0x88, 0xd5, 0x84,
  0x15, 0xa0, 0x57, 0x66, 0x05, 0x30, 0x2c, 0x03, 0xf8, 0xaf, 0x93, 0x14,
  0xcc, 0x25, 0x96, 0x01, 0x82, 0x05, 0xda, 0x17, 0x29, 0x96, 0xf8, 0xd7,
  0x38, 0x79, 0x8a, 0x2b, 0x14, 0x97, 0x29, 0x98, 0xfe, 0xf8, 0x3e, 0x39,
  0x96, 0x09, 0x28, 0x96, 0x31, 0xb8, 0x47, 0x9e, 0x1b, 0x0c, 0xf2, 0x28,
  0x8b, 0xcf, 0x1f, 0x5e, 0xa0, 0x74, 0x95, 0x02, 0xee, 0xad, 0xbd, 0xa2,
  0x5e, 0x00, 0x76, 0x6f, 0xed, 0x70, 0x0d, 0x56, 0x36, 0xc2, 0x89, 0x7d,
  0xfd, 0xcb, 0x0c, 0xcf, 0x89, 0x79, 0x34, 0xfe, 0x31, 0x08, 0xc9, 0x42,
  0xfc, 0x9c, 0x61, 0x05, 0x28, 0xb0, 0x10, 0x95, 0xc1, 0xb9, 0x0e, 0xcf,
  0xf2, 0x03, 0xc5, 0x84, 0xe9, 0x19, 0x7b, 0x04, 0xe7, 0x49, 0xf0, 0x19,
  0x28, 0x58, 0x5e, 0x54, 0xe2, 0x49, 0x4d, 0xc9, 0x6d, 0x47, 0x8f, 0x7f,
  0x1c, 0xbe, 0xbb, 0xc3, 0x7b, 0xa2, 0x44, 0xff, 0x2d, 0x94, 0xec, 0xbf,
  0xb9, 0x0a, 0xb8, 0x43, 0xca, 0xd1, 0xf0, 0x66, 0xff, 0x9f, 0xf0, 0x37,
  0xa8, 0x52, 0x30, 0x9a, 0x62, 0xf4, 0x6d, 0x47, 0xae, 0x88, 0xc7, 0xe3,
  0xf1, 0x78, 0x3c, 0x1e, 0x8f, 0xc7, 0xe3, 0xf1, 0x78, 0x3c, 0x1e, 0xcf,
  0xdf, 0x23, 0x6d, 0x77, 0x70, 0x2f, 0x7d, 0x0a, 0xe0, 0xa0, 0x10, 0x6c,
  0x74, 0x3e, 0x06, 0x9b, 0x9d, 0xbd, 0xe0, 0x65, 0xe7, 0xed, 0xb2, 0x84,
  0x30, 0xfd, 0xd4, 0xc5, 0xf4, 0x59, 0x37, 0x49, 0x61, 0x7b, 0x15, 0xd6,
  0xb7, 0x8e, 0xe8, 0xb2, 0xad, 0xe8, 0x8a, 0x45, 0x0d, 0xb6, 0x68, 0x00,
  0xc1, 0x49, 0x1b, 0xba, 0xd0, 0x6a, 0xa7, 0xac, 0x45, 0x40, 0x11, 0x4b,
  0x8c, 0xe2, 0x10, 0xf3, 0xb1, 0x42, 0x95, 0x84, 0x58, 0xb2, 0x80, 0x32,
  0x91, 0x68, 0x12, 0x85, 0x0d, 0x5a, 0xe3, 0x6c, 0xba, 0xdb, 0x95, 0x51,
  0xcd, 0x8a, 0xa0, 0x86, 0x41, 0xae, 0x86, 0x6b, 0xb4, 0x26, 0x68, 0x67,
  0x43, 0x1d, 0x5b, 0x61, 0x1c, 0x46, 0x26, 0x46, 0x89, 0x0e, 0x15, 0xc6,
  0x18, 0x58, 0x87, 0x39, 0x1b, 0xe3, 0xf9, 0xb4, 0xdd, 0xd5, 0x3a, 0xb1,
  0x79, 0x93, 0xe0, 0xb5, 0xf4, 0x41, 0xd7, 0xdd, 0xa8, 0xb5, 0x0c, 0x26,
  0xd8, 0xd0, 0x55, 0xea, 0xa3, 0x6e, 0x9d, 0x6e, 0xd8, 0x44, 0x37, 0x6d,
  0x7f, 0x2d, 0x6d, 0x0b, 0x36, 0xc1, 0xcf, 0x1a, 0x7a, 0xa0, 0xf3, 0x66,
  0xce, 0x94, 0xf1, 0x98, 0xa9, 0xe0, 0x71, 0x53, 0xc5, 0xa2, 0xa9, 0xe3,
  0x94, 0x69, 0xe0, 0x8c, 0x69, 0xa2, 0x30, 0x1a, 0xe7, 0xb1, 0x8c, 0x55,
  0xac, 0x60, 0x93, 0xd4, 0x62, 0x9d, 0x76, 0x6c, 0x50, 0xa5, 0x49, 0xfb,
  0x6b, 0x3c, 0x6a, 0xcb, 0xb8, 0x60, 0x2b, 0x78, 0xc2, 0x56, 0xd1, 0x05,
  0xd2, 0xba, 0x28, 0xb4, 0x2e, 0xa7, 0x6c, 0x28, 0x6b, 0xad, 0x48, 0x9a,
  0x96, 0x92, 0xd8, 0x2a, 0xd9, 0x3a, 0x4e, 0xdb, 0x06, 0xce, 0xda, 0x26,
  0xf5, 0xaa, 0x31, 0x27, 0x6d, 0xab, 0x54, 0x5a, 0xdf, 0x6a, 0x4b, 0x68,
  0xfd, 0x90, 0xae, 0x55, 0x92, 0xd0, 0xc3, 0x22, 0xe8, 0x05, 0xca, 0x05,
  0x5b, 0xd2, 0xa7, 0x29, 0x0b, 0x19, 0xe8, 0x25, 0xca, 0x2e, 0x52, 0x39,
  0xfa, 0xbc, 0xbd, 0xa9, 0x78, 0x3a, 0x04, 0xb8, 0xbf, 0x95, 0x59, 0x84,
  0x63, 0x26, 0x60, 0x66, 0xe8, 0x8d, 0xd5, 0xe6, 0x59, 0x44, 0xe6, 0xab,
  0x2d, 0xb2, 0x30, 0xf3, 0x34, 0x46, 0x88, 0xcc, 0x75, 0x3a, 0xa8, 0x49,
  0x00, 0x29, 0xd8, 0x99, 0x1a, 0xa9, 0xd1, 0xb4, 0x40, 0x64, 0x6e, 0xdd,
  0x41, 0x8d, 0xa6, 0x85, 0x22, 0x73, 0x80, 0x0f, 0x6a, 0x34, 0x2d, 0x12,
  0xec, 0x64, 0x8d, 0xd4, 0x28, 0x94, 0x60, 0x17, 0x79, 0xa4, 0x46, 0xfb,
  0xe6, 0x44, 0xe6, 0x4e, 0x1f, 0x1a, 0xa7, 0x65, 0x81, 0x7b, 0xdf, 0xb7,
  0xa7, 0x79, 0x5c, 0x5e, 0x16, 0x0f, 0xd5, 0xd8, 0x21, 0xd4, 0x61, 0xe6,
  0x88, 0xee, 0xd7, 0x86, 0xb8, 0x81, 0x4f, 0xde, 0xa0, 0xe0, 0x1d, 0x45,
  0xe6, 0x74, 0x02, 0xcc, 0x51, 0x84, 0x03, 0xb7, 0xf1, 0x5d, 0x73, 0xf3,
  0xdb, 0x8b, 0xf5, 0x5f, 0x78, 0xe7, 0xeb, 0xca, 0xeb, 0x53, 0x6f, 0x36,
  0xee, 0xfe, 0x06, 0xbe, 0x60, 0x60, 0x31, 0x00, 0x17, 0x00, 0x01, 0x00,
  0x10, 0xf8, 0x17, 0x00, 0x78, 0x01, 0xed, 0x98, 0x3f, 0x6c, 0xd3, 0x40,
  0x14, 0xc6, 0xcf, 0x17, 0xc7, 0xbd, 0x38, 0xaf, 0x77, 0x8e, 0xeb, 0xa6,
  0x7f, 0x08, 0x21, 0x49, 0x43, 0x15, 0xa2, 0x50, 0x4a, 0x5b, 0x48, 0x81,
  0x1a, 0xae, 0x50, 0x21, 0x06, 0xa4, 0x32, 0x30, 0x74, 0x80, 0x09, 0x06,
  0x06, 0x86, 0xce, 0x0c, 0xa1, 0x1d, 0x10, 0x1d, 0x3a, 0x32, 0x82, 0x54,
  0x21, 0xc1, 0x54, 0x09, 0x06, 0x06, 0x06, 0x94, 0x94, 0x44, 0x6c, 0x6c,
  0x2c, 0x0c, 0x0c, 0x6c, 0xec, 0x4c, 0x9d, 0x28, 0xef, 0xb9, 0x76, 0x9b,
  0x86, 0x4a, 0x6c, 0x20, 0x90, 0x7f, 0xd2, 0xf7, 0x3e, 0xfb, 0xf9, 0x9d,
  0x7c, 0xfe, 0x33, 0x7d, 0xdb, 0x43, 0x2c, 0x60, 0xed, 0xcd, 0xc0, 0x47,
  0xf2, 0xbb, 0x53, 0x1f, 0xea, 0xaf, 0x81, 0xb1, 0x24, 0x9d, 0x20, 0x9c,
  0x0a, 0xb2, 0xec, 0x51, 0x65, 0xec, 0x49, 0x38, 0xdf, 0x47, 0x25, 0x84,
  0x5a, 0x57, 0x51, 0x84, 0xa6, 0x12, 0x62, 0xa0, 0xa6, 0xa7, 0xa7, 0x2f,
  0xa2, 0x2e, 0xe1, 0xe1, 0x2f, 0x08, 0xd4, 0x3c, 0x2a, 0x5a, 0x43, 0xf3,
  0x11, 0x74, 0x6d, 0x30, 0xd4, 0xef, 0xa0, 0x3d, 0xd2, 0xda, 0x68, 0xaf,
  0xdd, 0xd4, 0x5b, 0x8f, 0x7c, 0xb4, 0x05, 0x14, 0xeb, 0x64, 0x3e, 0x5d,
  0x24, 0x8f, 0xa8, 0xb7, 0x92, 0x87, 0xee, 0xeb, 0x5f, 0x26, 0xfa, 0x4e,
  0xc4, 0x76, 0xf7, 0x0b, 0x0d, 0x31, 0xa9, 0x20, 0xf7, 0xb2, 0x54, 0x19,
  0x4b, 0x53, 0x41, 0xde, 0x86, 0xe7, 0xd1, 0xb7, 0xdc, 0x42, 0x1d, 0xb2,
  0x3c, 0x60, 0x07, 0x21, 0x3f, 0x8c, 0x04, 0xca, 0x62, 0x8b, 0x93, 0x96,
  0xf1, 0xb8, 0x60, 0xf1, 0x8e, 0x83, 0xa7, 0x7f, 0x1c, 0x2b, 0x14, 0x61,
  0x19, 0xbb, 0x4f, 0x61, 0xf1, 0xdd, 0xbf, 0xc3, 0x4a, 0xd0, 0x0e, 0x11,
  0x73, 0xf7, 0x4d, 0x58, 0xc9, 0xe8, 0x4f, 0xff, 0xbf, 0xa0, 0xe7, 0xcf,
  0xa3, 0x22, 0xa2, 0xef, 0x4e, 0x0c, 0x87, 0x8a, 0x89, 0x89, 0x89, 0x89,
  0x89, 0x89, 0x89, 0x89, 0x89, 0x89, 0x89, 0x89, 0x89, 0x89, 0x89, 0xf9,
  0xab, 0x14, 0x57, 0x9a, 0xb0, 0xe3, 0xaf, 0x31, 0xe6, 0xb0, 0x74, 0xe2,
  0x5d, 0xf3, 0x7d, 0xa2, 0xd9, 0xdc, 0x49, 0xb4, 0x9a, 0x9b, 0x8b, 0x9c,
  0x99, 0xfe, 0xe7, 0x36, 0xf8, 0x1b, 0x6d, 0xcf, 0x77, 0x3a, 0x65, 0x5f,
  0x74, 0x66, 0xfc, 0x76, 0x7b, 0xce, 0x7f, 0xda, 0x5e, 0x49, 0xac, 0x36,
  0x97, 0xd9, 0x7a, 0xab, 0xec, 0x94, 0x64, 0xc1, 0x29, 0xc8, 0xe3, 0x6e,
  0x09, 0x1c, 0xc1, 0x65, 0xd1, 0x2d, 0x40, 0xc5, 0x71, 0xe4, 0xb8, 0x57,
  0x82, 0x13, 0xae, 0x03, 0x19, 0x9b, 0x43, 0xc9, 0x2b, 0x40, 0x66, 0xcc,
  0x95, 0x2e, 0x70, 0xa8, 0x7a, 0x0e, 0x38, 0x45, 0x17, 0x44, 0xc6, 0x85,
  0x01, 0xc9, 0x61, 0xc9, 0x5f, 0x6b, 0x0b, 0x63, 0x65, 0xab, 0x26, 0x98,
  0xf4, 0x84, 0x29, 0x87, 0x85, 0x25, 0x27, 0x45, 0x56, 0xce, 0x88, 0x9c,
  0xd4, 0x22, 0x2f, 0x53, 0xb7, 0xdd, 0xc6, 0x49, 0x9b, 0xc1, 0xa0, 0x6d,
  0xc2, 0x88, 0x6d, 0xc1, 0x69, 0x3b, 0x0b, 0x67, 0xec, 0x1c, 0xcc, 0xdb,
  0x79, 0xc8, 0x89, 0x8a, 0x34, 0x45, 0x55, 0x0a, 0x51, 0x93, 0xb3, 0x42,
  0xc8, 0x09, 0x60, 0x90, 0x05, 0x13, 0x46, 0xc1, 0x82, 0x29, 0x3c, 0x3a,
  0x0b, 0x39, 0xb8, 0x0c, 0x79, 0x38, 0x6a, 0x57, 0x20, 0x69, 0x57, 0x21,
  0x65, 0xd7, 0xe0, 0x9c, 0x2d, 0xb0, 0x53, 0xc1, 0x89, 0x2a, 0xd8, 0x50,
  0x83, 0xf3, 0x20, 0xe0, 0x94, 0x64, 0x30, 0x24, 0x4d, 0x38, 0x22, 0x2d,
  0x98, 0x96, 0x59, 0xa8, 0xcb, 0x1c, 0x5c, 0x91, 0x79, 0x48, 0x15, 0x3d,
  0x99, 0x1a, 0x2b, 0xc8, 0x54, 0xc6, 0x91, 0x0f, 0xf1, 0x59, 0xb5, 0x5e,
  0xfe, 0xca, 0x98, 0x56, 0x0b, 0xe4, 0x86, 0x56, 0xd7, 0xc8, 0xb9, 0x56,
  0xd7, 0xc9, 0x13, 0x5a, 0x31, 0x72, 0xd0, 0xca, 0x24, 0xef, 0xd7, 0xca,
  0x21, 0x4f, 0x6b, 0xe5, 0x91, 0x4b, 0xad, 0x86, 0xc9, 0x95, 0x56, 0xdf,
  0x39, 0x6b, 0x38, 0xdc, 0x6d, 0x64, 0x78, 0xa9, 0xe1, 0xf2, 0x72, 0x63,
  0x80, 0x8f, 0x37, 0x8e, 0xc9, 0x0a, 0xf4, 0xc9, 0x2a, 0xa4, 0x65, 0x0d,
  0x2e, 0x48, 0x01, 0x39, 0x9a, 0xc5, 0x7b, 0x15, 0xc8, 0x6d, 0xad, 0xca,
  0xe4, 0x8e, 0x56, 0x15, 0x72, 0xa1, 0xd5, 0x24, 0x79, 0x4a, 0xab, 0x19,
  0xf2, 0x8c, 0x56, 0xb3, 0xe4, 0xae, 0x56, 0x73, 0xe4, 0x03, 0x5a, 0xdd,
  0x20, 0xf7, 0xb4, 0xba, 0x49, 0x3e, 0xa8, 0xd5, 0x12, 0x79, 0x56, 0xab,
  0x5b, 0xe4, 0x26, 0xee, 0x95, 0xad, 0xb6, 0x82, 0xbc, 0xb7, 0x27, 0x78,
  0x1c, 0xa1, 0xd2, 0xd3, 0x0b, 0xf2, 0xab, 0x9e, 0x5e, 0x10, 0x36, 0xf6,
  0xf4, 0x46, 0xa9, 0x18, 0x41, 0xe6, 0x37, 0x49, 0x85, 0x18, 0xc5, 0x19,
  0xc3, 0x08, 0x12, 0xb1, 0xfd, 0x1e, 0x67, 0x8c, 0x1b, 0x41, 0x16, 0xb8,
  0xdf, 0xc3, 0x65, 0x09, 0x23, 0x48, 0x12, 0xf7, 0x7b, 0xb8, 0xcc, 0x34,
  0x82, 0xf4, 0x7b, 0xbf, 0x87, 0xcb, 0x92, 0x06, 0x25, 0xd6, 0x5d, 0x3d,
  0x94, 0x65, 0xa4, 0xb0, 0x76, 0xf5, 0xf0, 0xbe, 0x7d, 0x86, 0x4d, 0x87,
  0x07, 0xe6, 0x04, 0x4f, 0xd3, 0xde, 0xf7, 0xa2, 0x73, 0x9a, 0x4b, 0xf1,
  0xfe, 0x03, 0x3d, 0x4a, 0x2f, 0x85, 0x19, 0xa4, 0xb5, 0x7b, 0xbd, 0x88,
  0x4d, 0x0a, 0x6d, 0x91, 0x32, 0x8a, 0xee, 0x68, 0x04, 0x29, 0xec, 0xee,
  0x7b, 0x33, 0xc3, 0x24, 0xf4, 0xd5, 0xf8, 0xf3, 0x6f, 0xcf, 0xd6, 0x7f,
  0xc0, 0xfd, 0x2f, 0x77, 0x5e, 0x4c, 0xbc, 0xdc, 0x78, 0xf0, 0x13, 0x98,
  0x08, 0x89, 0xa8, 0x00, 0x17, 0x00, 0x01, 0x00, 0x00, 0x80, 0x17, 0x00,
  0x78, 0x01, 0xed, 0x98, 0xcf, 0x4f, 0x13, 0x41, 0x14, 0xc7, 0xdf, 0xcc,
  0x4e, 0xb7, 0xd3, 0xed, 0x63, 0x58, 0xda, 0xed, 0x16, 0x08, 0x12, 0xd0,
  0x05, 0xd1, 0x28, 0x41, 0xc2, 0x46, 0xfc, 0x05, 0x68, 0xf4, 0x60, 0x62,
  0xc2, 0x51, 0x2f, 0x46, 0x12, 0x4d, 0xbc, 0x78, 0xe0, 0xec, 0xa1, 0x16,
  0x2f, 0x7a, 0xe0, 0x0f, 0xf0, 0xa0, 0x09, 0x9a, 0x68, 0x3c, 0x98, 0xc8,
  0xc1, 0x1f, 0xb7, 0x22, 0x25, 0xde, 0x34, 0x31, 0xc4, 0x18, 0x4d, 0xbc,
  0x7b, 0x45, 0xcf, 0x46, 0x7c, 0x6f, 0xdb, 0xd2, 0x52, 0xf1, 0xaa, 0xd1,
  0xcc, 0x27, 0xf9, 0xbe, 0xe9, 0x7c, 0xf7, 0xbd, 0xe9, 0xec, 0xce, 0x9c,
  0x5e, 0xb9, 0x08, 0x09, 0xcf, 0xcf, 0x9e, 0x99, 0xe1, 0xf1, 0xca, 0xf8,
  0xeb, 0xc3, 0xcb, 0x08, 0x90, 0xe2, 0x49, 0x0b, 0xf3, 0x01, 0x47, 0x80,
  0xbe, 0x7a, 0xbe, 0xe6, 0x50, 0xa7, 0x40, 0x9a, 0x22, 0x31, 0xc9, 0x22,
  0x75, 0x04, 0xe9, 0xed, 0x9b, 0x73, 0x53, 0xa4, 0x69, 0xfa, 0xf9, 0x0b,
  0x19, 0xd2, 0x29, 0xd2, 0x49, 0x12, 0xc3, 0xf9, 0x0d, 0xd2, 0x1c, 0x5a,
  0x70, 0x39, 0xfc, 0x06, 0x49, 0xe2, 0x5a, 0x1e, 0xdb, 0x59, 0x28, 0x97,
  0x4f, 0xd0, 0x70, 0x9a, 0x04, 0xf7, 0x97, 0x96, 0xa6, 0xbe, 0x6e, 0x6c,
  0xf0, 0x3c, 0xe1, 0xe6, 0x82, 0xd8, 0x71, 0x5f, 0xff, 0x32, 0x8d, 0x73,
  0x62, 0x1e, 0xb7, 0x7e, 0xd0, 0x3a, 0x8d, 0x6f, 0xd4, 0x1d, 0x72, 0x04,
  0xc8, 0x72, 0x20, 0x66, 0xea, 0xf3, 0xc6, 0x59, 0xbe, 0x22, 0xed, 0x50,
  0x9e, 0xb0, 0x49, 0xf0, 0xb8, 0x13, 0x0e, 0xc9, 0x85, 0xd9, 0x31, 0x57,
  0xdc, 0x1a, 0x70, 0xe5, 0x9a, 0x4f, 0xd3, 0x3f, 0x0e, 0xdf, 0x95, 0xc6,
  0x7d, 0x71, 0x45, 0xed, 0x2d, 0x5c, 0x59, 0x7b, 0x73, 0xd7, 0xe1, 0x1d,
  0x12, 0x4a, 0x71, 0x04, 0x37, 0xd5, 0x7e, 0xd3, 0xff, 0x0f, 0xf8, 0xfd,
  0xfb, 0x49, 0x0d, 0x6a, 0x6f, 0x5b, 0x3b, 0xd3, 0x6e, 0x12, 0x33, 0xc7,
  0xc1, 0x62, 0xb1, 0x58, 0x2c, 0x16, 0x8b, 0xc5, 0x62, 0xb1, 0x58, 0x2c,
  0x16, 0x8b, 0xe5, 0x6f, 0x31, 0x58, 0xae, 0xe0, 0x66, 0x7c, 0x1b, 0xc0,
  0x87, 0xac, 0xf3, 0xac, 0xb2, 0xea, 0xbc, 0xa8, 0x6c, 0x3a, 0x2f, 0x2b,
  0x4f, 0x66, 0x25, 0xa8, 0xf8, 0x7d, 0x15, 0xe3, 0xbb, 0xd5, 0x20, 0xd6,
  0x6b, 0x51, 0x0c, 0x6b, 0x13, 0xf1, 0xbb, 0xea, 0xf1, 0xf8, 0x4e, 0x75,
  0xd5, 0xf9, 0x5e, 0x99, 0x87, 0xc5, 0x95, 0x3e, 0x0d, 0x66, 0x97, 0x07,
  0xd8, 0x8f, 0x80, 0x12, 0xca, 0xeb, 0xe9, 0x69, 0x50, 0x40, 0x9e, 0x20,
  0x4f, 0x92, 0xe7, 0xb0, 0x97, 0x06, 0xa5, 0xc8, 0x4b, 0x91, 0x17, 0xf8,
  0x91, 0x71, 0xc9, 0xf7, 0xfd, 0xd0, 0x14, 0x72, 0x11, 0x76, 0xfb, 0xbe,
  0x31, 0x9c, 0xd3, 0x09, 0x4a, 0x53, 0x4e, 0x86, 0x72, 0xba, 0x72, 0x21,
  0x86, 0x41, 0x84, 0x3d, 0x39, 0x1f, 0x3d, 0xca, 0xcd, 0x05, 0x21, 0x7a,
  0x94, 0xe3, 0xc5, 0x03, 0x2a, 0x37, 0xe4, 0x9b, 0x6c, 0xd1, 0xc7, 0x4e,
  0xae, 0x29, 0x82, 0x1a, 0xa1, 0x9a, 0x7d, 0x54, 0xe3, 0x15, 0x7c, 0xd4,
  0x17, 0x87, 0x4b, 0xfb, 0x79, 0x6d, 0x7e, 0x76, 0x1e, 0xd4, 0x01, 0x7a,
  0x76, 0x90, 0x9e, 0x8d, 0x92, 0xd7, 0xc5, 0xde, 0x25, 0x50, 0x93, 0xe4,
  0xe5, 0x8b, 0xbe, 0x19, 0xd0, 0xa1, 0xc9, 0x0f, 0xe5, 0x4c, 0xa4, 0x23,
  0x93, 0x2f, 0x8c, 0x18, 0xd4, 0x81, 0x19, 0xd3, 0xda, 0x1c, 0xf2, 0x34,
  0x8e, 0xa3, 0xc6, 0x0b, 0x71, 0xb9, 0x3a, 0x07, 0x6a, 0x39, 0xcf, 0x75,
  0x57, 0x7d, 0xa5, 0xe0, 0xc3, 0xba, 0xc8, 0x00, 0x1c, 0xa1, 0xf5, 0x8e,
  0xd2, 0x7a, 0x1d, 0x5e, 0x80, 0x83, 0x5e, 0x88, 0x43, 0x5e, 0x84, 0x06,
  0x03, 0xdc, 0x8d, 0x21, 0x0e, 0x63, 0x84, 0xc7, 0x0c, 0xe0, 0x37, 0x29,
  0x4b, 0x3a, 0x33, 0xf9, 0x49, 0x49, 0x03, 0xe0, 0xd0, 0x88, 0x00, 0x23,
  0x30, 0xf1, 0x51, 0x05, 0x00, 0x52, 0xd1, 0xdc, 0xd7, 0xd0, 0x69, 0x02,
  0xdc, 0x63, 0x42, 0xdc, 0x6b, 0x22, 0xbc, 0x41, 0xdf, 0x51, 0x4a, 0x28,
  0x39, 0x54, 0x47, 0x09, 0x25, 0x21, 0xdd, 0x92, 0x9b, 0xa6, 0x3c, 0x09,
  0xe0, 0x65, 0x69, 0xf4, 0x72, 0x74, 0x48, 0x0b, 0x2b, 0xdc, 0x2f, 0x6c,
  0x6f, 0x14, 0x26, 0x4d, 0xbf, 0x36, 0xaf, 0x97, 0x83, 0x48, 0x7a, 0x6f,
  0x63, 0x1c, 0x98, 0x5e, 0xca, 0x11, 0x22, 0xe9, 0x4c, 0x35, 0x3d, 0x5a,
  0x5f, 0x8a, 0xa4, 0x27, 0xd7, 0xf4, 0xa8, 0xcc, 0x11, 0x49, 0x47, 0xaf,
  0xe9, 0x51, 0x99, 0x12, 0x49, 0x97, 0xb8, 0xe9, 0x51, 0x59, 0x4a, 0x24,
  0x9d, 0xe9, 0xa6, 0x47, 0x72, 0xf9, 0x23, 0xb5, 0x7a, 0xf4, 0xbf, 0x69,
  0xba, 0x0c, 0xc4, 0xb6, 0x3c, 0x2d, 0xb3, 0xbc, 0xf7, 0xad, 0x16, 0x36,
  0xe7, 0x65, 0x64, 0xc7, 0x36, 0x8f, 0xb6, 0x07, 0x5a, 0x25, 0x5d, 0xd3,
  0x2d, 0xaf, 0xc1, 0x44, 0xbd, 0x37, 0x1e, 0x91, 0xf8, 0x1f, 0x45, 0xd2,
  0x0d, 0x05, 0xe8, 0x21, 0xa9, 0x7a, 0x47, 0xf2, 0xe9, 0xf0, 0x83, 0x2f,
  0xf7, 0x16, 0x7f, 0xe0, 0xb5, 0xcf, 0x97, 0x1f, 0x8e, 0x3e, 0x5a, 0xba,
  0xfe, 0x13, 0x6b, 0x01, 0x70, 0x57, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x0a, 0x00, 0x00, 0x00, 0x03, 0x00, 0x03, 0x00, 0x08, 0x02, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x04, 0x02, 0x08, 0x02, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x05, 0x04,
  0x08, 0x02, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x06, 0x06, 0x08, 0x02, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x07, 0x08, 0x08, 0x02, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x08, 0x0a,
  0x08, 0x02, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x03, 0x01, 0x09, 0x0c, 0x04, 0x02, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x03, 0x01, 0x0a, 0x0e, 0x04, 0x02, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x02, 0x0b, 0x10,
  0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x02, 0x0d, 0x12, 0x00, 0x04, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x01, 0x00, 0x78, 0x01, 0x4d, 0x8c,
  0xbb, 0x09, 0x42, 0x51, 0x10, 0x05, 0xd7, 0x1f, 0x88, 0x15, 0x18, 0x68,
  0x66, 0x11, 0x86, 0x16, 0x61, 0xf8, 0x8a, 0x30, 0x34, 0xb4, 0x04, 0x43,
  0x8b, 0x30, 0xb4, 0x08, 0x43, 0x8b, 0x30, 0xb4, 0x07, 0x9d, 0xc1, 0x3d,
  0xf0, 0x06, 0xce, 0xe7, 0xde, 0x03, 0x3b, 0xa9, 0xaa, 0x15, 0x5a, 0x23,
  0xb9, 0xf0, 0xb1, 0xb5, 0x34, 0x57, 0xad, 0xb9, 0x6b, 0xcd, 0x53, 0x6b,
  0xde, 0x5a, 0xf0, 0x60, 0xb3, 0x19, 0xf5, 0xfd, 0xa8, 0x1f, 0xe9, 0x53,
  0x0b, 0x9c, 0xba, 0x13, 0x75, 0xc6, 0xcc, 0x1b, 0x12, 0x7b, 0xf8, 0x82,
  0xef, 0x07, 0x12, 0xbb, 0x92, 0x6c, 0x2f, 0x24, 0xf6, 0xdc, 0xcf, 0xf6,
  0x41, 0x62, 0x9f, 0x21, 0xc9, 0xb6, 0xd4, 0xc0, 0x98, 0x23, 0xc9, 0xb6,
  0xd3, 0xc0, 0x58, 0x20, 0xc9, 0x76, 0xc0, 0xbc, 0x65, 0x0f, 0xd9, 0x06,
  0x2c, 0x9b, 0x12, 0x37, 0x53, 0xfe, 0x7f, 0x55, 0x3f, 0x81, 0x42, 0x29,
  0x20, 0x00, 0x00, 0x00, 0x78, 0x62, 0x6f, 0x70, 0x01, 0x00, 0x00, 0x00,
  0x7e, 0x02, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00
};
