#if 0
;
; Input signature:
;
; Name                 Index   Mask Register SysValue  Format   Used
; -------------------- ----- ------ -------- -------- ------- ------
; SV_VertexID              0   x           0   VERTID    uint   x   
;
;
; Output signature:
;
; Name                 Index   Mask Register SysValue  Format   Used
; -------------------- ----- ------ -------- -------- ------- ------
; SV_Position              0   xyzw        0      POS   float   xyzw
; TEXCOORD                 0   xy          1     NONE   float   xy  
;
; shader debug name: C:\Users\marcu\Downloads\DirectXTK12-main\DirectXTK12-main\Src/Shaders/Compiled\XboxGamingScarlettToneMap_VSQuad.pdb
; shader hash: 7116e4edad72d7c02291ab004617fcfa
;
; Pipeline Runtime Information: 
;
;PSVRuntimeInfo:
; Vertex Shader
; OutputPositionPresent=1
; MinimumExpectedWaveLaneCount: 0
; MaximumExpectedWaveLaneCount: 4294967295
; UsesViewID: false
; SigInputElements: 1
; SigOutputElements: 2
; SigPatchConstOrPrimElements: 0
; SigInputVectors: 1
; SigOutputVectors[0]: 2
; SigOutputVectors[1]: 0
; SigOutputVectors[2]: 0
; SigOutputVectors[3]: 0
; EntryFunctionName: VSQuad
;
;
; Input signature:
;
; Name                 Index             InterpMode DynIdx
; -------------------- ----- ---------------------- ------
; SV_VertexID              0                              
;
; Output signature:
;
; Name                 Index             InterpMode DynIdx
; -------------------- ----- ---------------------- ------
; SV_Position              0          noperspective       
; TEXCOORD                 0                 linear       
;
; Buffer Definitions:
;
;
; Resource Bindings:
;
; Name                                 Type  Format         Dim      ID      HLSL Bind  Count
; ------------------------------ ---------- ------- ----------- ------- -------------- ------
;
;
; ViewId state:
;
; Number of inputs: 1, outputs: 6
; Outputs dependent on ViewId: {  }
; Inputs contributing to computation of Outputs:
;   output 0 depends on inputs: { 0 }
;   output 1 depends on inputs: { 0 }
;   output 4 depends on inputs: { 0 }
;   output 5 depends on inputs: { 0 }
;
target datalayout = "e-m:e-p:32:32-i1:32-i8:32-i16:32-i32:32-i64:64-f16:32-f32:32-f64:64-n8:16:32:64"
target triple = "dxil-ms-xb2"

define void @VSQuad() {
  %1 = call i32 @dx.op.loadInput.i32(i32 4, i32 0, i32 0, i8 0, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %2 = shl i32 %1, 1
  %3 = and i32 %2, 2
  %4 = uitofp i32 %3 to float
  %5 = and i32 %1, 2
  %6 = uitofp i32 %5 to float
  %7 = fmul fast float %4, 2.000000e+00
  %8 = fadd fast float %7, -1.000000e+00
  %9 = fmul fast float %6, 2.000000e+00
  %10 = fsub fast float 1.000000e+00, %9
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 0, float %8)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 1, float %10)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 2, float 0.000000e+00)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 3, float 1.000000e+00)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 1, i32 0, i8 0, float %4)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 1, i32 0, i8 1, float %6)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  ret void
}

; Function Attrs: nounwind readnone
declare i32 @dx.op.loadInput.i32(i32, i32, i32, i8, i32) #0

; Function Attrs: nounwind
declare void @dx.op.storeOutput.f32(i32, i32, i32, i8, float) #1

attributes #0 = { nounwind readnone }
attributes #1 = { nounwind }

!xbox.compiler.options = !{!0}
!llvm.ident = !{!1}
!dx.version = !{!2}
!dx.valver = !{!3}
!dx.shaderModel = !{!4}
!dx.viewIdState = !{!5}
!dx.entryPoints = !{!6}

!0 = !{!"__XBOX_PER_THREAD_SCRATCH_SIZE_LIMIT_IN_BYTES", !"0"}
!1 = !{!"dxcxbox 2410.2410.11116.10741"}
!2 = !{i32 1, i32 0}
!3 = !{i32 1, i32 8}
!4 = !{!"vs", i32 6, i32 0}
!5 = !{[3 x i32] [i32 1, i32 6, i32 51]}
!6 = !{void ()* @VSQuad, !"VSQuad", !7, null, null}
!7 = !{!8, !12, null}
!8 = !{!9}
!9 = !{i32 0, !"SV_VertexID", i8 5, i8 1, !10, i8 0, i32 1, i8 1, i32 0, i8 0, !11}
!10 = !{i32 0}
!11 = !{i32 3, i32 1}
!12 = !{!13, !15}
!13 = !{i32 0, !"SV_Position", i8 9, i8 3, !10, i8 4, i32 1, i8 4, i32 0, i8 0, !14}
!14 = !{i32 3, i32 15}
!15 = !{i32 1, !"TEXCOORD", i8 9, i8 0, !10, i8 2, i32 1, i8 2, i32 1, i8 0, !16}
!16 = !{i32 3, i32 3}
; 
; ----------------------------------------------------------------
; ----------------------XBOX SHADER COMPILER----------------------
; ----------------------------------------------------------------
; 
; 
; Dumping Xbox Precompiled Shaders (Found 1 Shader)
; 
; Shader #1
; version: 6
; 
; PipelineCompileOptions { 
;   asic: GFX10
;   compiler: NB
;   pipeline: GCN
;   mesh_shader_pipeline: 0
;   enable_fast_launch: 0
;   disable_embedded_option_parsing: 1
;   enable_recompile_warnings: 0
;   disable_minprec_to_native_16bit: 0
;   slience_recompile_warnings: 1
;   override_ngg_pipeline_confg: 0
;   ngg_enable_user_gs: 0
;   disable_inst_stats: 0
; }
; 
; LS: null
; HS: null
; ES: null
; GS: null
; VS {
;   // -------------------  COMMON FIELDS --------------------//
;   // shader info 
;   hw_shader_stage: VS
;   dx_shader_stage: VERTEX
;   isa: GFX10
;   compiler: NB
;   num_vgprs: 8
;   num_shared_vgprs: 0
;   num_sgprs: 11
;   float_mode: 192
;   dx10_clamp: 1
;   ieee_mode: 0
;   uses_prim_id: 0
;   flat_ptr_32: 0
;   scratch_size: 0
;   lds_byte_size: 0
;   has_indirect_calls: 0
;   precompiled_shader: 0
; 
;   // code info 
;   code_size_in_bytes: 256
; shader main
;   asic(GFX10_A)
;   type(VS)
; 
;   v_nop_xbox_data 0xede41671, 0xc0d772ad                // 000000000000: D5801671 03FFDBE4 C0D772AD
;   v_nop_xbox_data 0x00ab9122, 0xfafc1746                // 00000000000C: D5809122 03FE01AB FAFC1746
;   s_inst_prefetch  0x0003                               // 000000000018: BFA00003
;   v_lshlrev_b32  v1, 1, v0                              // 00000000001C: 34020081
;   v_and_b32     v0, 2, v0                               // 000000000020: 36000082
;   v_mov_b32     v2, 0                                   // 000000000024: 7E040280
;   v_mov_b32     v5, 1.0                                 // 000000000028: 7E0A02F2
;   v_and_b32     v1, 2, v1                               // 00000000002C: 36020282
;   v_cvt_f32_ubyte0  v0, v0                              // 000000000030: 7E002300
;   v_cvt_f32_ubyte0  v7, v1                              // 000000000034: 7E0E2301
;   v_fma_f32     v3, v0, -2.0, 1.0                       // 000000000038: D54B0003 03C9EB00
;   v_fma_f32     v4, v7, 2.0, -1.0                       // 000000000040: D54B0004 03CDE907
;   exp           pos0, v4, v3, v2, v5 done               // 000000000048: F80008CF 05020304
;   exp           param0, v7, v0, v2, v5                  // 000000000050: F800020F 05020007
;   s_endpgm                                              // 000000000058: BF810000
;   s_code_end                                            // 00000000005C: BF9F0000
;   s_code_end                                            // 000000000060: BF9F0000
;   s_code_end                                            // 000000000064: BF9F0000
;   s_code_end                                            // 000000000068: BF9F0000
;   s_code_end                                            // 00000000006C: BF9F0000
;   s_code_end                                            // 000000000070: BF9F0000
;   s_code_end                                            // 000000000074: BF9F0000
;   s_code_end                                            // 000000000078: BF9F0000
;   s_code_end                                            // 00000000007C: BF9F0000
;   s_code_end                                            // 000000000080: BF9F0000
;   s_code_end                                            // 000000000084: BF9F0000
;   s_code_end                                            // 000000000088: BF9F0000
;   s_code_end                                            // 00000000008C: BF9F0000
;   s_code_end                                            // 000000000090: BF9F0000
;   s_code_end                                            // 000000000094: BF9F0000
;   s_code_end                                            // 000000000098: BF9F0000
;   s_code_end                                            // 00000000009C: BF9F0000
;   s_code_end                                            // 0000000000A0: BF9F0000
;   s_code_end                                            // 0000000000A4: BF9F0000
;   s_code_end                                            // 0000000000A8: BF9F0000
;   s_code_end                                            // 0000000000AC: BF9F0000
;   s_code_end                                            // 0000000000B0: BF9F0000
;   s_code_end                                            // 0000000000B4: BF9F0000
;   s_code_end                                            // 0000000000B8: BF9F0000
;   s_code_end                                            // 0000000000BC: BF9F0000
;   s_code_end                                            // 0000000000C0: BF9F0000
;   s_code_end                                            // 0000000000C4: BF9F0000
;   s_code_end                                            // 0000000000C8: BF9F0000
;   s_code_end                                            // 0000000000CC: BF9F0000
;   s_code_end                                            // 0000000000D0: BF9F0000
;   s_code_end                                            // 0000000000D4: BF9F0000
;   s_code_end                                            // 0000000000D8: BF9F0000
;   s_code_end                                            // 0000000000DC: BF9F0000
;   s_code_end                                            // 0000000000E0: BF9F0000
;   s_code_end                                            // 0000000000E4: BF9F0000
;   s_code_end                                            // 0000000000E8: BF9F0000
;   s_code_end                                            // 0000000000EC: BF9F0000
;   s_code_end                                            // 0000000000F0: BF9F0000
;   s_code_end                                            // 0000000000F4: BF9F0000
;   s_code_end                                            // 0000000000F8: BF9F0000
;   s_code_end                                            // 0000000000FC: BF9F0000
; end
; 
;   // abi info 
;   uses_global_table: 0
;   uses_streamout_table: 0
;   uses_fetch_shader: 0
;   fetch_shader_address_reg: 0
;   fetch_shader_return_reg: 0
;   uses_gds_memory_range: 0
;   uses_gds_counter_range: 0
;   uses_lds_es_gs_size: 0
;   enable_wave32: 0
;   top_root_signature_dword_used: 11
;   es_or_ls_part_size_bytes: 0
; 
;   // pix info 
;   root_signature_layout_count: 2
;     rootsig_layout[0] {
;       root_type: DX12_DESCRIPTOR_TABLE_RANGE
;       table_offset_dwords: 0
;       num_user_regs: 1
;       resource_base_register: 0
;       allocated_offset: 8
;       orig_rootsig_slot_id: 0
;     }
;     rootsig_layout[1] {
;       root_type: DX12_ROOT_DESCRIPTOR_64
;       table_offset_dwords: 0
;       num_user_regs: 2
;       resource_base_register: 0
;       allocated_offset: 9
;       orig_rootsig_slot_id: 1
;     }
; 
;   // entry used resources info
;   used_resources_count: 0
; 
;   // symbol info
;   num_entries: 1
;   entries_data_allocation_size_bytes: 26
;     entry[0] {
;       offset_in_code_bytes: 0
;       name_offset_bytes: 0 (VSQuad)
;       num_vgprs_minus_one: 0
;       num_sgprs: 0
;       scratch_dwords_per_lane: 0
;       size_bytes: 4294967295
;       lds_dwords_per_threadgroup: 0
;       has_indirect_calls: 0
;     }
; 
;   // -------------------  VS FIELDS --------------------//
;   // Input and output semantics
;   num_input_semantics: 0
; 
;   num_output_semantics: 1
;     output_semantic[0] {
;       usage: GENERIC
;       usage_idx: 1
;       param_idx: 0
;       fp16_mode: 0
;       fp16_pack2: 0
;       usage_idx2: 0
;       param_slot: 0
;     }
; 
;   // Hardware registers
;   reg_spi_shader_pgm_rsrc2_LS: 22 {
;     scratch_en: 0
;     user_sgpr: 11
;     trap_present: 0
;     lds_size: 0
;     excp_en: 0
;   }
;   reg_spi_shader_pgm_rsrc2_ES: 22 {
;     scratch_en: 0
;     user_sgpr: 11
;     trap_present: 0
;     oc_lds_en: 0
;     excp_en: 0
;     lds_size: 0
;   }
;   reg_spi_shader_pgm_rsrc2_VS: 22 {
;     scratch_en: 0
;     user_sgpr: 11
;     trap_present: 0
;     oc_lds_en: 0
;     so_base0_en: 0
;     so_base1_en: 0
;     so_base2_en: 0
;     so_base3_en: 0
;     so_en: 0
;     excp_en: 0
;     pc_base_en: 0
;     dispatch_draw_en: 0
;     user_sgpr_msb: 0
;     shared_vgpr_cnt: 0
;   }
;   reg_spi_vs_out_config: 0 {
;     vs_export_count: 0
;     vs_half_pack: 0
;     no_pc_export: 0
;     prim_export_count: 0
;   }
;   reg_spi_shader_pos_format: 4 {
;     pos0_export_format: 4 (4Component)
;     pos1_export_format: 0 (None)
;     pos2_export_format: 0 (None)
;     pos3_export_format: 0 (None)
;     pos4_export_format: 0 (None)
;   }
;   reg_pa_cl_vs_out_cntl: 0 {
;     clip_dist_ena_0: 0
;     clip_dist_ena_1: 0
;     clip_dist_ena_2: 0
;     clip_dist_ena_3: 0
;     clip_dist_ena_4: 0
;     clip_dist_ena_5: 0
;     clip_dist_ena_6: 0
;     clip_dist_ena_7: 0
;     cull_dist_ena_0: 0
;     cull_dist_ena_1: 0
;     cull_dist_ena_2: 0
;     cull_dist_ena_3: 0
;     cull_dist_ena_4: 0
;     cull_dist_ena_5: 0
;     cull_dist_ena_6: 0
;     cull_dist_ena_7: 0
;     use_vtx_point_size: 0
;     use_vtx_edge_flag: 0
;     use_vtx_render_target_indx: 0
;     use_vtx_viewport_indx: 0
;     use_vtx_kill_flag: 0
;     vs_out_misc_vec_ena: 0
;     vs_out_ccdist0_vec_ena: 0
;     vs_out_ccdist1_vec_ena: 0
;     vs_out_misc_side_bus_ena: 0
;     use_vtx_gs_cut_flag: 0
;     use_vtx_line_width: 0
;     use_vtx_vrs_rate: 0
;   }
;   reg_vgt_strmout_config: 0 {
;     streamout_0_en: 0
;     streamout_1_en: 0
;     streamout_2_en: 0
;     streamout_3_en: 0
;     rast_stream: 0
;     en_prims_needed_cnt: 0
;     rast_stream_mask: 0
;     use_rast_stream_mask: 0
;   }
; 
;   // VS shader info
;   vgpr_comp_cnt: 0
;   export_vertex_size: 4
;   es_gs_ring_item_size: 0
;   ls_stride: 0
;   uses_vertex_id: 1
; 
;   // Fetch shader live reg info
;   LiveRegInfo {
;     sgpr[31:0]    = 00000000000000000000000000000000
;     sgpr[63:32]   = 00000000000000000000000000000000
;     sgpr[95:64]   = 00000000000000000000000000000000
;     sgpr[127:96]  = 00000000000000000000000000000000
; 
;     vgpr[31:0]    = 00000000000000000000000000000000
;     vgpr[63:32]   = 00000000000000000000000000000000
;     vgpr[95:64]   = 00000000000000000000000000000000
;     vgpr[127:96]  = 00000000000000000000000000000000
;     vgpr[159:128] = 00000000000000000000000000000000
;     vgpr[191:160] = 00000000000000000000000000000000
;     vgpr[223:192] = 00000000000000000000000000000000
;     vgpr[255:224] = 00000000000000000000000000000000
;   }
; }
; 
; VS NumVGPR=8,NumSGPR=11,LDS=0,Scratch=0,WaveSize=64,Occupancy=20
; VAlu:9,SAlu:2,VMem:0,SMem:0,LDS:0,WaitCntOnVMem:0,UncondBranch:0,CondBranch:0
; 
; PS: null

#endif

const unsigned char ToneMap_VSQuad[] = {
  0x44, 0x58, 0x42, 0x43, 0x3f, 0x45, 0x16, 0xfa, 0xbd, 0xd5, 0xcd, 0x6d,
  0x80, 0xaa, 0xc3, 0x4c, 0xb5, 0x40, 0x97, 0xd0, 0x01, 0x00, 0x00, 0x00,
  0xe8, 0x09, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00,
  0x50, 0x00, 0x00, 0x00, 0x8c, 0x00, 0x00, 0x00, 0xf4, 0x00, 0x00, 0x00,
  0x9c, 0x01, 0x00, 0x00, 0x34, 0x02, 0x00, 0x00, 0xb8, 0x02, 0x00, 0x00,
  0xd4, 0x02, 0x00, 0x00, 0x53, 0x46, 0x49, 0x30, 0x08, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x49, 0x53, 0x47, 0x31,
  0x34, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x28, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x06, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x53, 0x56, 0x5f, 0x56,
  0x65, 0x72, 0x74, 0x65, 0x78, 0x49, 0x44, 0x00, 0x4f, 0x53, 0x47, 0x31,
  0x60, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x48, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x54, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x03, 0x0c, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x53, 0x56, 0x5f, 0x50, 0x6f, 0x73, 0x69, 0x74,
  0x69, 0x6f, 0x6e, 0x00, 0x54, 0x45, 0x58, 0x43, 0x4f, 0x4f, 0x52, 0x44,
  0x00, 0x00, 0x00, 0x00, 0x50, 0x53, 0x56, 0x30, 0xa0, 0x00, 0x00, 0x00,
  0x34, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xff, 0xff, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x01, 0x02, 0x00, 0x01,
  0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x14, 0x00, 0x00, 0x00, 0x00, 0x54, 0x45, 0x58, 0x43, 0x4f, 0x4f, 0x52,
  0x44, 0x00, 0x56, 0x53, 0x51, 0x75, 0x61, 0x64, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x41, 0x01,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x44, 0x03, 0x03, 0x04, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x42, 0x00, 0x03, 0x02, 0x00, 0x00,
  0x33, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x52, 0x54, 0x53, 0x30, 0x90, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x5c, 0x00, 0x00, 0x00, 0x1e, 0x03, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x50, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x7f, 0x7f,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00,
  0x49, 0x4c, 0x44, 0x4e, 0x7c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x74, 0x00,
  0x43, 0x3a, 0x5c, 0x55, 0x73, 0x65, 0x72, 0x73, 0x5c, 0x6d, 0x61, 0x72,
  0x63, 0x75, 0x5c, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x73,
  0x5c, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x58, 0x54, 0x4b, 0x31, 0x32,
  0x2d, 0x6d, 0x61, 0x69, 0x6e, 0x5c, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74,
  0x58, 0x54, 0x4b, 0x31, 0x32, 0x2d, 0x6d, 0x61, 0x69, 0x6e, 0x5c, 0x53,
  0x72, 0x63, 0x2f, 0x53, 0x68, 0x61, 0x64, 0x65, 0x72, 0x73, 0x2f, 0x43,
  0x6f, 0x6d, 0x70, 0x69, 0x6c, 0x65, 0x64, 0x5c, 0x58, 0x62, 0x6f, 0x78,
  0x47, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x53, 0x63, 0x61, 0x72, 0x6c, 0x65,
  0x74, 0x74, 0x54, 0x6f, 0x6e, 0x65, 0x4d, 0x61, 0x70, 0x5f, 0x56, 0x53,
  0x51, 0x75, 0x61, 0x64, 0x2e, 0x70, 0x64, 0x62, 0x00, 0x00, 0x00, 0x00,
  0x48, 0x41, 0x53, 0x48, 0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x71, 0x16, 0xe4, 0xed, 0xad, 0x72, 0xd7, 0xc0, 0x22, 0x91, 0xab, 0x00,
  0x46, 0x17, 0xfc, 0xfa, 0x44, 0x58, 0x49, 0x4c, 0x0c, 0x07, 0x00, 0x00,
  0x60, 0x00, 0x01, 0x00, 0xc3, 0x01, 0x00, 0x00, 0x44, 0x58, 0x49, 0x4c,
  0x00, 0x01, 0x00, 0x00, 0x70, 0x00, 0x00, 0x00, 0x64, 0x05, 0x00, 0x00,
  0x58, 0x44, 0x41, 0x54, 0x05, 0x00, 0x00, 0x00, 0x24, 0x00, 0x00, 0x00,
  0x07, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x7c, 0x05, 0x00, 0x00,
  0x0a, 0x00, 0x00, 0x00, 0xdc, 0x05, 0x00, 0x00, 0x11, 0x00, 0x00, 0x00,
  0x12, 0x00, 0x00, 0x00, 0xf0, 0x05, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00,
  0x0d, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0xfb, 0x00, 0x00, 0x00,
  0x10, 0x00, 0x00, 0x00, 0xfc, 0x06, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00,
  0x60, 0x00, 0x01, 0x00, 0x5f, 0x01, 0x00, 0x00, 0x44, 0x58, 0x49, 0x4c,
  0x00, 0x01, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x64, 0x05, 0x00, 0x00,
  0x42, 0x43, 0xc0, 0xde, 0x21, 0x0c, 0x00, 0x00, 0x56, 0x01, 0x00, 0x00,
  0x0b, 0x82, 0x20, 0x00, 0x02, 0x00, 0x00, 0x00, 0x13, 0x00, 0x00, 0x00,
  0x07, 0x81, 0x23, 0x91, 0x41, 0xc8, 0x04, 0x49, 0x06, 0x10, 0x32, 0x39,
  0x92, 0x01, 0x84, 0x0c, 0x25, 0x05, 0x08, 0x19, 0x1e, 0x04, 0x8b, 0x62,
  0x80, 0x10, 0x45, 0x02, 0x42, 0x92, 0x0b, 0x42, 0x84, 0x10, 0x32, 0x14,
  0x38, 0x08, 0x18, 0x4b, 0x0a, 0x32, 0x42, 0x88, 0x48, 0x90, 0x14, 0x20,
  0x43, 0x46, 0x88, 0xa5, 0x00, 0x19, 0x32, 0x42, 0xe4, 0x48, 0x0e, 0x90,
  0x11, 0x22, 0xc4, 0x50, 0x41, 0x51, 0x81, 0x8c, 0xe1, 0x83, 0xe5, 0x8a,
  0x04, 0x21, 0x46, 0x06, 0x51, 0x18, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00,
  0x1b, 0x8c, 0xe0, 0xff, 0xff, 0xff, 0xff, 0x07, 0x40, 0x02, 0xa8, 0x0d,
  0x84, 0xf0, 0xff, 0xff, 0xff, 0xff, 0x03, 0x20, 0x01, 0x00, 0x00, 0x00,
  0x49, 0x18, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x13, 0x82, 0x60, 0x42,
  0x20, 0x00, 0x00, 0x00, 0x89, 0x20, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00,
  0x32, 0x22, 0x08, 0x09, 0x20, 0x64, 0x85, 0x04, 0x13, 0x22, 0xa4, 0x84,
  0x04, 0x13, 0x22, 0xe3, 0x84, 0xa1, 0x90, 0x14, 0x12, 0x4c, 0x88, 0x8c,
  0x0b, 0x84, 0x84, 0x4c, 0x10, 0x30, 0x23, 0x00, 0x25, 0x00, 0x8a, 0x39,
  0x02, 0x30, 0x98, 0x23, 0x40, 0x8a, 0x31, 0x33, 0x43, 0x43, 0x35, 0x03,
  0x50, 0x0c, 0x98, 0x19, 0x3a, 0xc2, 0x81, 0x80, 0x1c, 0x18, 0x00, 0x00,
  0x13, 0x16, 0x72, 0xc0, 0x87, 0x74, 0x60, 0x87, 0x36, 0x68, 0x87, 0x79,
  0x68, 0x03, 0x7c, 0x10, 0x07, 0x39, 0xd8, 0xf0, 0x0a, 0xe5, 0xd0, 0x06,
  0xed, 0xa0, 0x07, 0xe5, 0xd0, 0x06, 0xf0, 0xa0, 0x07, 0x73, 0x20, 0x07,
  0x7a, 0x30, 0x07, 0x72, 0xd0, 0x06, 0xe9, 0x10, 0x07, 0x7a, 0x30, 0x07,
  0x72, 0xd0, 0x06, 0xe9, 0x80, 0x07, 0x7a, 0x30, 0x07, 0x72, 0xd0, 0x06,
  0xe9, 0x10, 0x07, 0x76, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x90, 0x0e,
  0x73, 0x20, 0x07, 0x7a, 0x30, 0x07, 0x72, 0xd0, 0x06, 0xe9, 0x60, 0x07,
  0x74, 0xa0, 0x07, 0x76, 0x40, 0x07, 0x6d, 0x60, 0x0e, 0x71, 0x60, 0x07,
  0x7a, 0x30, 0x07, 0x72, 0xd0, 0x06, 0xe6, 0x30, 0x07, 0x72, 0xa0, 0x07,
  0x73, 0x20, 0x07, 0x6d, 0x60, 0x0e, 0x76, 0x40, 0x07, 0x7a, 0x60, 0x07,
  0x74, 0xd0, 0x06, 0xee, 0x80, 0x07, 0x7a, 0x10, 0x07, 0x76, 0xa0, 0x07,
  0x73, 0x20, 0x07, 0x7a, 0x60, 0x07, 0x74, 0x30, 0xe4, 0x09, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0xc8, 0x53, 0x00,
  0x01, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x90, 0x07,
  0x01, 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x2c,
  0x10, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x32, 0x1e, 0x98, 0x14,
  0x19, 0x11, 0x4c, 0x90, 0x8c, 0x09, 0x26, 0x47, 0xc6, 0x04, 0x43, 0x9a,
  0x12, 0x18, 0x01, 0x28, 0x88, 0x62, 0x28, 0x83, 0xf2, 0x20, 0x2a, 0x85,
  0x12, 0x18, 0x01, 0x28, 0x89, 0x32, 0x28, 0x84, 0x22, 0xa0, 0x1d, 0x6b,
  0x08, 0x8c, 0x39, 0x00, 0x79, 0x18, 0x00, 0x00, 0x61, 0x00, 0x00, 0x00,
  0x1a, 0x03, 0x4c, 0x90, 0x46, 0x02, 0x13, 0xc4, 0x36, 0xf8, 0xfa, 0xc2,
  0x12, 0x7a, 0xc2, 0xfa, 0x82, 0x2a, 0x92, 0xfa, 0xa2, 0x42, 0x92, 0x2a,
  0x0a, 0x22, 0xfa, 0x9a, 0x1a, 0x92, 0x0a, 0xa2, 0x1a, 0x42, 0xfa, 0x9a,
  0x4a, 0xd2, 0x2a, 0xfa, 0x62, 0x4a, 0x6a, 0x4a, 0xa2, 0xfa, 0x4a, 0x72,
  0xfa, 0x12, 0xca, 0xa2, 0x2a, 0x9a, 0x62, 0x00, 0xb3, 0x41, 0x08, 0x04,
  0x76, 0x64, 0x78, 0x63, 0x78, 0x62, 0x6f, 0x78, 0x20, 0x32, 0x34, 0x31,
  0x30, 0x2e, 0x32, 0x34, 0x31, 0x30, 0x2e, 0x31, 0x31, 0x31, 0x31, 0x36,
  0x2e, 0x31, 0x30, 0x37, 0x34, 0x31, 0x1b, 0x02, 0x62, 0x82, 0x30, 0x0c,
  0x13, 0x84, 0x81, 0xd8, 0x20, 0x18, 0xc7, 0x04, 0x61, 0x28, 0x36, 0x08,
  0x46, 0x42, 0xc1, 0x6e, 0x6e, 0x82, 0x30, 0x18, 0x1b, 0x86, 0x85, 0x39,
  0x26, 0x08, 0x0b, 0xb4, 0x21, 0x70, 0x26, 0x08, 0x02, 0x40, 0xc3, 0x6a,
  0x2a, 0xaa, 0x2e, 0x8c, 0x8c, 0xcb, 0x94, 0xd5, 0x97, 0x55, 0x99, 0x1c,
  0x5d, 0x19, 0x5e, 0x12, 0xd1, 0x04, 0x81, 0x48, 0x26, 0x08, 0x84, 0xb2,
  0x21, 0x38, 0x26, 0x08, 0xc4, 0x32, 0x41, 0x18, 0x8e, 0x0d, 0xc2, 0x65,
  0x6c, 0x58, 0x0e, 0x69, 0xa2, 0x2a, 0xcb, 0xa0, 0x0e, 0x0b, 0xdb, 0x10,
  0x64, 0x5c, 0xa6, 0xac, 0xbe, 0xa0, 0xde, 0xe6, 0xd2, 0xe8, 0xd2, 0xde,
  0xdc, 0x26, 0x08, 0x04, 0x33, 0x41, 0x20, 0x9a, 0x09, 0x02, 0xe1, 0x4c,
  0x10, 0x06, 0x64, 0x83, 0x70, 0x7d, 0x1b, 0x96, 0x63, 0xe3, 0xba, 0xca,
  0x33, 0xbc, 0xc3, 0x02, 0x03, 0x22, 0x54, 0x45, 0x58, 0x43, 0x4f, 0x4f,
  0x52, 0x44, 0x13, 0x04, 0xe2, 0xd9, 0x20, 0x5c, 0xd7, 0x86, 0xc5, 0x10,
  0x03, 0xce, 0xaa, 0xc6, 0xc0, 0x18, 0x03, 0xc3, 0x22, 0x83, 0x0d, 0x42,
  0x18, 0x94, 0xc1, 0x86, 0x41, 0x33, 0x03, 0x60, 0x43, 0x01, 0x45, 0x67,
  0x00, 0x00, 0xad, 0xf0, 0xc4, 0xde, 0xf0, 0x5c, 0xc6, 0xde, 0xda, 0xe0,
  0xd2, 0xd8, 0xca, 0xe4, 0x5c, 0xde, 0xe0, 0xe8, 0xd2, 0xde, 0xdc, 0xe6,
  0xa6, 0x04, 0x42, 0x15, 0x36, 0x36, 0xbb, 0x36, 0x97, 0x34, 0xb2, 0x32,
  0x37, 0xba, 0x29, 0x01, 0x51, 0x85, 0x0c, 0xcf, 0xc5, 0xae, 0x4c, 0x6e,
  0x2e, 0xed, 0xcd, 0x6d, 0x4a, 0x70, 0x34, 0x21, 0xc3, 0x73, 0xb1, 0x0b,
  0x63, 0xb3, 0x2b, 0x93, 0x9b, 0x12, 0x24, 0x75, 0xc8, 0xf0, 0x5c, 0xe6,
  0xd0, 0xc2, 0xc8, 0xca, 0xe4, 0x9a, 0xde, 0xc8, 0xca, 0xd8, 0xa6, 0x04,
  0x4c, 0x1d, 0x32, 0x3c, 0x17, 0xbb, 0xb4, 0xb2, 0xbb, 0x24, 0xb2, 0x29,
  0xba, 0x30, 0xba, 0xb2, 0x29, 0x81, 0x53, 0x87, 0x0c, 0xcf, 0xa5, 0xcc,
  0x8d, 0x4e, 0x2e, 0x0f, 0xea, 0x2d, 0xcd, 0x8d, 0x6e, 0x6e, 0x4a, 0x70,
  0x06, 0x00, 0x00, 0x00, 0x79, 0x18, 0x00, 0x00, 0x4c, 0x00, 0x00, 0x00,
  0x33, 0x08, 0x80, 0x1c, 0xc4, 0xe1, 0x1c, 0x66, 0x14, 0x01, 0x3d, 0x88,
  0x43, 0x38, 0x84, 0xc3, 0x8c, 0x42, 0x80, 0x07, 0x79, 0x78, 0x07, 0x73,
  0x98, 0x71, 0x0c, 0xe6, 0x00, 0x0f, 0xed, 0x10, 0x0e, 0xf4, 0x80, 0x0e,
  0x33, 0x0c, 0x42, 0x1e, 0xc2, 0xc1, 0x1d, 0xce, 0xa1, 0x1c, 0x66, 0x30,
  0x05, 0x3d, 0x88, 0x43, 0x38, 0x84, 0x83, 0x1b, 0xcc, 0x03, 0x3d, 0xc8,
  0x43, 0x3d, 0x8c, 0x03, 0x3d, 0xcc, 0x78, 0x8c, 0x74, 0x70, 0x07, 0x7b,
  0x08, 0x07, 0x79, 0x48, 0x87, 0x70, 0x70, 0x07, 0x7a, 0x70, 0x03, 0x76,
  0x78, 0x87, 0x70, 0x20, 0x87, 0x19, 0xcc, 0x11, 0x0e, 0xec, 0x90, 0x0e,
  0xe1, 0x30, 0x0f, 0x6e, 0x30, 0x0f, 0xe3, 0xf0, 0x0e, 0xf0, 0x50, 0x0e,
  0x33, 0x10, 0xc4, 0x1d, 0xde, 0x21, 0x1c, 0xd8, 0x21, 0x1d, 0xc2, 0x61,
  0x1e, 0x66, 0x30, 0x89, 0x3b, 0xbc, 0x83, 0x3b, 0xd0, 0x43, 0x39, 0xb4,
  0x03, 0x3c, 0xbc, 0x83, 0x3c, 0x84, 0x03, 0x3b, 0xcc, 0xf0, 0x14, 0x76,
  0x60, 0x07, 0x7b, 0x68, 0x07, 0x37, 0x68, 0x87, 0x72, 0x68, 0x07, 0x37,
  0x80, 0x87, 0x70, 0x90, 0x87, 0x70, 0x60, 0x07, 0x76, 0x28, 0x07, 0x76,
  0xf8, 0x05, 0x76, 0x78, 0x87, 0x77, 0x80, 0x87, 0x5f, 0x08, 0x87, 0x71,
  0x18, 0x87, 0x72, 0x98, 0x87, 0x79, 0x98, 0x81, 0x2c, 0xee, 0xf0, 0x0e,
  0xee, 0xe0, 0x0e, 0xf5, 0xc0, 0x0e, 0xec, 0x30, 0x03, 0x62, 0xc8, 0xa1,
  0x1c, 0xe4, 0xa1, 0x1c, 0xcc, 0xa1, 0x1c, 0xe4, 0xa1, 0x1c, 0xdc, 0x61,
  0x1c, 0xca, 0x21, 0x1c, 0xc4, 0x81, 0x1d, 0xca, 0x61, 0x06, 0xd6, 0x90,
  0x43, 0x39, 0xc8, 0x43, 0x39, 0x98, 0x43, 0x39, 0xc8, 0x43, 0x39, 0xb8,
  0xc3, 0x38, 0x94, 0x43, 0x38, 0x88, 0x03, 0x3b, 0x94, 0xc3, 0x2f, 0xbc,
  0x83, 0x3c, 0xfc, 0x82, 0x3b, 0xd4, 0x03, 0x3b, 0xb0, 0xc3, 0x0c, 0xc4,
  0x21, 0x07, 0x7c, 0x70, 0x03, 0x7a, 0x28, 0x87, 0x76, 0x80, 0x87, 0x19,
  0xd1, 0x43, 0x0e, 0xf8, 0xe0, 0x06, 0xe4, 0x20, 0x0e, 0xe7, 0xe0, 0x06,
  0xf6, 0x10, 0x0e, 0xf2, 0xc0, 0x0e, 0xe1, 0x90, 0x0f, 0xef, 0x50, 0x0f,
  0xf4, 0x00, 0x00, 0x00, 0x71, 0x20, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x00,
  0x06, 0x60, 0xbc, 0xac, 0x4a, 0x01, 0x83, 0x05, 0x4c, 0xc3, 0xe5, 0x3b,
  0x8f, 0xbf, 0x38, 0xc0, 0x20, 0x36, 0x0f, 0x35, 0xf9, 0xc8, 0x6d, 0x9b,
  0x40, 0x35, 0x5c, 0xbe, 0xf3, 0xf8, 0xd2, 0xe4, 0x44, 0x04, 0x4a, 0x4d,
  0x0f, 0x35, 0xf9, 0xc5, 0x6d, 0x03, 0x00, 0x00, 0x61, 0x20, 0x00, 0x00,
  0x28, 0x00, 0x00, 0x00, 0x13, 0x04, 0x41, 0x2c, 0x10, 0x00, 0x00, 0x00,
  0x08, 0x00, 0x00, 0x00, 0x34, 0xa5, 0x50, 0x04, 0x85, 0x30, 0x03, 0x40,
  0x37, 0x46, 0x00, 0x82, 0x20, 0x08, 0x82, 0xc1, 0x18, 0x01, 0x08, 0x82,
  0x20, 0xfe, 0x8d, 0x11, 0x80, 0x20, 0x08, 0xe2, 0xbf, 0x30, 0x02, 0x00,
  0x23, 0x06, 0x09, 0x00, 0x82, 0x60, 0x50, 0x60, 0x46, 0x55, 0x39, 0x45,
  0x05, 0xd7, 0x55, 0x90, 0xe8, 0x05, 0x57, 0x45, 0x2c, 0x7a, 0xc1, 0x95,
  0x0d, 0x8a, 0x7c, 0x2c, 0x48, 0xe0, 0x63, 0x03, 0x23, 0x1f, 0x63, 0x82,
  0xf8, 0x8c, 0x18, 0x24, 0x00, 0x08, 0x82, 0x01, 0x12, 0x06, 0xd2, 0xf7,
  0x61, 0xc3, 0x88, 0x41, 0x02, 0x80, 0x20, 0x18, 0x20, 0x61, 0x20, 0x7d,
  0x5f, 0x16, 0x8c, 0x18, 0x24, 0x00, 0x08, 0x82, 0x01, 0x12, 0x06, 0xd2,
  0xf7, 0x51, 0xcb, 0x88, 0x41, 0x02, 0x80, 0x20, 0x18, 0x20, 0x61, 0x20,
  0x7d, 0x9f, 0xd5, 0x8c, 0x18, 0x24, 0x00, 0x08, 0x82, 0x01, 0x12, 0x06,
  0x12, 0x18, 0x7c, 0xd8, 0x31, 0x62, 0x90, 0x00, 0x20, 0x08, 0x06, 0x48,
  0x18, 0x48, 0x60, 0xf0, 0x65, 0x05, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x78, 0x62, 0x6f, 0x70, 0x01, 0x00, 0x00, 0x00, 0x7e, 0x02, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0xf1, 0x3d, 0x48, 0x52,
  0x05, 0x26, 0x0b, 0xe0, 0x97, 0x40, 0x7f, 0xdf, 0x13, 0x67, 0xad, 0xa9,
  0x58, 0x42, 0x43, 0x48, 0x03, 0x00, 0x00, 0x00, 0xe3, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x4a, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x78, 0x9c, 0x73, 0x0b, 0x0e, 0xf6, 0x65, 0x64, 0x64, 0x60, 0xb0, 0x62,
  0x61, 0x00, 0x03, 0x36, 0x08, 0xc5, 0xf0, 0x7e, 0xdf, 0xda, 0x7b, 0xf8,
  0xf0, 0x06, 0x22, 0xd5, 0xe1, 0xc2, 0x4c, 0x50, 0xfd, 0x2e, 0x0c, 0xe4,
  0x01, 0x98, 0x39, 0x3f, 0x60, 0x06, 0x31, 0x22, 0xcb, 0x72, 0x63, 0xa8,
  0xff, 0xc1, 0x8c, 0xaa, 0x0f, 0xa6, 0x8d, 0x85, 0x81, 0x89, 0xe1, 0x00,
  0x92, 0x3a, 0x0e, 0x86, 0x0d, 0x28, 0x46, 0x29, 0xb0, 0x20, 0x8c, 0x97,
  0x42, 0xd2, 0xcf, 0x30, 0x04, 0x00, 0x1b, 0x23, 0xc3, 0x90, 0x06, 0x20,
  0xe7, 0x8b, 0x21, 0x61, 0x10, 0x60, 0x41, 0x53, 0xc3, 0x82, 0xa6, 0x9e,
  0x5c, 0x50, 0x28, 0xd6, 0x70, 0xf5, 0xc9, 0xed, 0xff, 0xcc, 0x6b, 0x8b,
  0xae, 0x1f, 0x50, 0x9a, 0xd8, 0x70, 0x75, 0x35, 0xe3, 0x3f, 0x66, 0x37,
  0xf1, 0x3f, 0xbf, 0x98, 0x19, 0x16, 0xec, 0x6f, 0x64, 0x60, 0x32, 0x69,
  0x62, 0x60, 0x30, 0x6b, 0x60, 0x62, 0xa9, 0xfb, 0xc4, 0xc4, 0x55, 0xd7,
  0xc4, 0xc4, 0x64, 0xc6, 0xa0, 0xcc, 0x50, 0xc7, 0xa8, 0xcc, 0x57, 0xc7,
  0xcc, 0xe0, 0x7d, 0x95, 0xe1, 0xf5, 0x49, 0x66, 0x16, 0x20, 0xcd, 0xfe,
  0xf2, 0x2c, 0xf3, 0x79, 0x0e, 0x86, 0x1f, 0x2c, 0xcc, 0x4c, 0xac, 0xfc,
  0x4c, 0x0c, 0x3f, 0xd8, 0x19, 0x98, 0x58, 0x19, 0x18, 0x1a, 0xf7, 0x33,
  0x30, 0xcc, 0x1f, 0xf4, 0x98, 0x19, 0x2d, 0x0c, 0x39, 0x90, 0xd8, 0xb0,
  0xbc, 0xc2, 0x89, 0x14, 0xc0, 0xff, 0x81, 0x00, 0xc2, 0x62, 0x63, 0x08,
  0x0b, 0x0e, 0x2c, 0x4d, 0x4c, 0x01, 0x00, 0x1a, 0xc5, 0xbd, 0xb2, 0x00,
  0x71, 0x16, 0xe4, 0xed, 0xad, 0x72, 0xd7, 0xc0, 0x22, 0x91, 0xab, 0x00,
  0x46, 0x17, 0xfc, 0xfa
};
