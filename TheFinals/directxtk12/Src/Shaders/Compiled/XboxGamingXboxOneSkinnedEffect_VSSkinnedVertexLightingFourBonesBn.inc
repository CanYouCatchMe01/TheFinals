#if 0
;
; Input signature:
;
; Name                 Index   Mask Register SysValue  Format   Used
; -------------------- ----- ------ -------- -------- ------- ------
; SV_Position              0   xyzw        0     NONE   float   xyzw
; NORMAL                   0   xyz         1     NONE   float   xyz 
; TEXCOORD                 0   xy          2     NONE   float   xy  
; BLENDINDICES             0   xyzw        3     NONE    uint   xyzw
; BLENDWEIGHT              0   xyzw        4     NONE   float   xyzw
;
;
; Output signature:
;
; Name                 Index   Mask Register SysValue  Format   Used
; -------------------- ----- ------ -------- -------- ------- ------
; COLOR                    0   xyzw        0     NONE   float   xyzw
; COLOR                    1   xyzw        1     NONE   float   xyzw
; TEXCOORD                 0   xy          2     NONE   float   xy  
; SV_Position              0   xyzw        3      POS   float   xyzw
;
; shader debug name: C:\Users\marcu\Downloads\DirectXTK12-main\DirectXTK12-main\Src/Shaders/Compiled\XboxGamingXboxOneSkinnedEffect_VSSkinnedVertexLightingFourBonesBn.pdb
; shader hash: c2444370efbdd68045e763cb2c97e922
;
; Pipeline Runtime Information: 
;
;PSVRuntimeInfo:
; Vertex Shader
; OutputPositionPresent=1
; MinimumExpectedWaveLaneCount: 0
; MaximumExpectedWaveLaneCount: 4294967295
; UsesViewID: false
; SigInputElements: 5
; SigOutputElements: 4
; SigPatchConstOrPrimElements: 0
; SigInputVectors: 5
; SigOutputVectors[0]: 4
; SigOutputVectors[1]: 0
; SigOutputVectors[2]: 0
; SigOutputVectors[3]: 0
; EntryFunctionName: VSSkinnedVertexLightingFourBonesBn
;
;
; Input signature:
;
; Name                 Index             InterpMode DynIdx
; -------------------- ----- ---------------------- ------
; SV_Position              0                              
; NORMAL                   0                              
; TEXCOORD                 0                              
; BLENDINDICES             0                              
; BLENDWEIGHT              0                              
;
; Output signature:
;
; Name                 Index             InterpMode DynIdx
; -------------------- ----- ---------------------- ------
; COLOR                    0                 linear       
; COLOR                    1                 linear       
; TEXCOORD                 0                 linear       
; SV_Position              0          noperspective       
;
; Buffer Definitions:
;
; cbuffer 
; {
;
;   [3872 x i8] (type annotation not present)
;
; }
;
;
; Resource Bindings:
;
; Name                                 Type  Format         Dim      ID      HLSL Bind  Count
; ------------------------------ ---------- ------- ----------- ------- -------------- ------
;                                   cbuffer      NA          NA     CB0            cb0     1
;
;
; ViewId state:
;
; Number of inputs: 20, outputs: 16
; Outputs dependent on ViewId: {  }
; Inputs contributing to computation of Outputs:
;   output 0 depends on inputs: { 4, 5, 6, 12, 13, 14, 15, 16, 17, 18, 19 }
;   output 1 depends on inputs: { 4, 5, 6, 12, 13, 14, 15, 16, 17, 18, 19 }
;   output 2 depends on inputs: { 4, 5, 6, 12, 13, 14, 15, 16, 17, 18, 19 }
;   output 4 depends on inputs: { 0, 1, 2, 3, 4, 5, 6, 12, 13, 14, 15, 16, 17, 18, 19 }
;   output 5 depends on inputs: { 0, 1, 2, 3, 4, 5, 6, 12, 13, 14, 15, 16, 17, 18, 19 }
;   output 6 depends on inputs: { 0, 1, 2, 3, 4, 5, 6, 12, 13, 14, 15, 16, 17, 18, 19 }
;   output 7 depends on inputs: { 0, 1, 2, 3, 12, 13, 14, 15, 16, 17, 18, 19 }
;   output 8 depends on inputs: { 8 }
;   output 9 depends on inputs: { 9 }
;   output 12 depends on inputs: { 0, 1, 2, 3, 12, 13, 14, 15, 16, 17, 18, 19 }
;   output 13 depends on inputs: { 0, 1, 2, 3, 12, 13, 14, 15, 16, 17, 18, 19 }
;   output 14 depends on inputs: { 0, 1, 2, 3, 12, 13, 14, 15, 16, 17, 18, 19 }
;   output 15 depends on inputs: { 0, 1, 2, 3, 12, 13, 14, 15, 16, 17, 18, 19 }
;
target datalayout = "e-m:e-p:32:32-i1:32-i8:32-i16:32-i32:32-i64:64-f16:32-f32:32-f64:64-n8:16:32:64"
target triple = "dxil-ms-xb1"

%dx.types.Handle = type { i8* }
%dx.types.CBufRet.f32 = type { float, float, float, float }
%hostlayout.Parameters = type { <4 x float>, <3 x float>, <3 x float>, float, [3 x <3 x float>], [3 x <3 x float>], [3 x <3 x float>], <3 x float>, <3 x float>, <4 x float>, [4 x <4 x float>], [3 x <3 x float>], [4 x <4 x float>], [72 x [3 x <4 x float>]] }

define void @VSSkinnedVertexLightingFourBonesBn() {
  %1 = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 2, i32 0, i32 0, i1 false)  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %2 = call float @dx.op.loadInput.f32(i32 4, i32 4, i32 0, i8 0, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %3 = call float @dx.op.loadInput.f32(i32 4, i32 4, i32 0, i8 1, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %4 = call float @dx.op.loadInput.f32(i32 4, i32 4, i32 0, i8 2, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %5 = call float @dx.op.loadInput.f32(i32 4, i32 4, i32 0, i8 3, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %6 = call i32 @dx.op.loadInput.i32(i32 4, i32 3, i32 0, i8 0, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %7 = call i32 @dx.op.loadInput.i32(i32 4, i32 3, i32 0, i8 1, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %8 = call i32 @dx.op.loadInput.i32(i32 4, i32 3, i32 0, i8 2, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %9 = call i32 @dx.op.loadInput.i32(i32 4, i32 3, i32 0, i8 3, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %10 = call float @dx.op.loadInput.f32(i32 4, i32 2, i32 0, i8 0, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %11 = call float @dx.op.loadInput.f32(i32 4, i32 2, i32 0, i8 1, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %12 = call float @dx.op.loadInput.f32(i32 4, i32 1, i32 0, i8 0, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %13 = call float @dx.op.loadInput.f32(i32 4, i32 1, i32 0, i8 1, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %14 = call float @dx.op.loadInput.f32(i32 4, i32 1, i32 0, i8 2, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %15 = call float @dx.op.loadInput.f32(i32 4, i32 0, i32 0, i8 0, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %16 = call float @dx.op.loadInput.f32(i32 4, i32 0, i32 0, i8 1, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %17 = call float @dx.op.loadInput.f32(i32 4, i32 0, i32 0, i8 2, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %18 = call float @dx.op.loadInput.f32(i32 4, i32 0, i32 0, i8 3, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %19 = fmul fast float %12, 2.000000e+00
  %20 = fmul fast float %13, 2.000000e+00
  %21 = fmul fast float %14, 2.000000e+00
  %22 = fadd fast float %19, -1.000000e+00
  %23 = fadd fast float %20, -1.000000e+00
  %24 = fadd fast float %21, -1.000000e+00
  %25 = mul i32 %6, 3
  %26 = add i32 %25, 26
  %27 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 %26)  ; CBufferLoadLegacy(handle,regIndex)
  %28 = extractvalue %dx.types.CBufRet.f32 %27, 0
  %29 = extractvalue %dx.types.CBufRet.f32 %27, 1
  %30 = extractvalue %dx.types.CBufRet.f32 %27, 2
  %31 = extractvalue %dx.types.CBufRet.f32 %27, 3
  %32 = add i32 %25, 27
  %33 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 %32)  ; CBufferLoadLegacy(handle,regIndex)
  %34 = extractvalue %dx.types.CBufRet.f32 %33, 0
  %35 = extractvalue %dx.types.CBufRet.f32 %33, 1
  %36 = extractvalue %dx.types.CBufRet.f32 %33, 2
  %37 = extractvalue %dx.types.CBufRet.f32 %33, 3
  %38 = add i32 %25, 28
  %39 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 %38)  ; CBufferLoadLegacy(handle,regIndex)
  %40 = extractvalue %dx.types.CBufRet.f32 %39, 0
  %41 = extractvalue %dx.types.CBufRet.f32 %39, 1
  %42 = extractvalue %dx.types.CBufRet.f32 %39, 2
  %43 = extractvalue %dx.types.CBufRet.f32 %39, 3
  %44 = fmul fast float %28, %2
  %45 = fmul fast float %34, %2
  %46 = fmul fast float %40, %2
  %47 = fmul fast float %29, %2
  %48 = fmul fast float %35, %2
  %49 = fmul fast float %41, %2
  %50 = fmul fast float %30, %2
  %51 = fmul fast float %36, %2
  %52 = fmul fast float %42, %2
  %53 = fmul fast float %31, %2
  %54 = fmul fast float %37, %2
  %55 = fmul fast float %43, %2
  %56 = mul i32 %7, 3
  %57 = add i32 %56, 26
  %58 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 %57)  ; CBufferLoadLegacy(handle,regIndex)
  %59 = extractvalue %dx.types.CBufRet.f32 %58, 0
  %60 = extractvalue %dx.types.CBufRet.f32 %58, 1
  %61 = extractvalue %dx.types.CBufRet.f32 %58, 2
  %62 = extractvalue %dx.types.CBufRet.f32 %58, 3
  %63 = add i32 %56, 27
  %64 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 %63)  ; CBufferLoadLegacy(handle,regIndex)
  %65 = extractvalue %dx.types.CBufRet.f32 %64, 0
  %66 = extractvalue %dx.types.CBufRet.f32 %64, 1
  %67 = extractvalue %dx.types.CBufRet.f32 %64, 2
  %68 = extractvalue %dx.types.CBufRet.f32 %64, 3
  %69 = add i32 %56, 28
  %70 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 %69)  ; CBufferLoadLegacy(handle,regIndex)
  %71 = extractvalue %dx.types.CBufRet.f32 %70, 0
  %72 = extractvalue %dx.types.CBufRet.f32 %70, 1
  %73 = extractvalue %dx.types.CBufRet.f32 %70, 2
  %74 = extractvalue %dx.types.CBufRet.f32 %70, 3
  %75 = fmul fast float %59, %3
  %76 = fmul fast float %65, %3
  %77 = fmul fast float %71, %3
  %78 = fmul fast float %60, %3
  %79 = fmul fast float %66, %3
  %80 = fmul fast float %72, %3
  %81 = fmul fast float %61, %3
  %82 = fmul fast float %67, %3
  %83 = fmul fast float %73, %3
  %84 = fmul fast float %62, %3
  %85 = fmul fast float %68, %3
  %86 = fmul fast float %74, %3
  %87 = fadd fast float %75, %44
  %88 = fadd fast float %76, %45
  %89 = fadd fast float %77, %46
  %90 = fadd fast float %78, %47
  %91 = fadd fast float %79, %48
  %92 = fadd fast float %80, %49
  %93 = fadd fast float %81, %50
  %94 = fadd fast float %82, %51
  %95 = fadd fast float %83, %52
  %96 = fadd fast float %84, %53
  %97 = fadd fast float %85, %54
  %98 = fadd fast float %86, %55
  %99 = mul i32 %8, 3
  %100 = add i32 %99, 26
  %101 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 %100)  ; CBufferLoadLegacy(handle,regIndex)
  %102 = extractvalue %dx.types.CBufRet.f32 %101, 0
  %103 = extractvalue %dx.types.CBufRet.f32 %101, 1
  %104 = extractvalue %dx.types.CBufRet.f32 %101, 2
  %105 = extractvalue %dx.types.CBufRet.f32 %101, 3
  %106 = add i32 %99, 27
  %107 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 %106)  ; CBufferLoadLegacy(handle,regIndex)
  %108 = extractvalue %dx.types.CBufRet.f32 %107, 0
  %109 = extractvalue %dx.types.CBufRet.f32 %107, 1
  %110 = extractvalue %dx.types.CBufRet.f32 %107, 2
  %111 = extractvalue %dx.types.CBufRet.f32 %107, 3
  %112 = add i32 %99, 28
  %113 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 %112)  ; CBufferLoadLegacy(handle,regIndex)
  %114 = extractvalue %dx.types.CBufRet.f32 %113, 0
  %115 = extractvalue %dx.types.CBufRet.f32 %113, 1
  %116 = extractvalue %dx.types.CBufRet.f32 %113, 2
  %117 = extractvalue %dx.types.CBufRet.f32 %113, 3
  %118 = fmul fast float %102, %4
  %119 = fmul fast float %108, %4
  %120 = fmul fast float %114, %4
  %121 = fmul fast float %103, %4
  %122 = fmul fast float %109, %4
  %123 = fmul fast float %115, %4
  %124 = fmul fast float %104, %4
  %125 = fmul fast float %110, %4
  %126 = fmul fast float %116, %4
  %127 = fmul fast float %105, %4
  %128 = fmul fast float %111, %4
  %129 = fmul fast float %117, %4
  %130 = fadd fast float %87, %118
  %131 = fadd fast float %88, %119
  %132 = fadd fast float %89, %120
  %133 = fadd fast float %90, %121
  %134 = fadd fast float %91, %122
  %135 = fadd fast float %92, %123
  %136 = fadd fast float %93, %124
  %137 = fadd fast float %94, %125
  %138 = fadd fast float %95, %126
  %139 = fadd fast float %96, %127
  %140 = fadd fast float %97, %128
  %141 = fadd fast float %98, %129
  %142 = mul i32 %9, 3
  %143 = add i32 %142, 26
  %144 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 %143)  ; CBufferLoadLegacy(handle,regIndex)
  %145 = extractvalue %dx.types.CBufRet.f32 %144, 0
  %146 = extractvalue %dx.types.CBufRet.f32 %144, 1
  %147 = extractvalue %dx.types.CBufRet.f32 %144, 2
  %148 = extractvalue %dx.types.CBufRet.f32 %144, 3
  %149 = add i32 %142, 27
  %150 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 %149)  ; CBufferLoadLegacy(handle,regIndex)
  %151 = extractvalue %dx.types.CBufRet.f32 %150, 0
  %152 = extractvalue %dx.types.CBufRet.f32 %150, 1
  %153 = extractvalue %dx.types.CBufRet.f32 %150, 2
  %154 = extractvalue %dx.types.CBufRet.f32 %150, 3
  %155 = add i32 %142, 28
  %156 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 %155)  ; CBufferLoadLegacy(handle,regIndex)
  %157 = extractvalue %dx.types.CBufRet.f32 %156, 0
  %158 = extractvalue %dx.types.CBufRet.f32 %156, 1
  %159 = extractvalue %dx.types.CBufRet.f32 %156, 2
  %160 = extractvalue %dx.types.CBufRet.f32 %156, 3
  %161 = fmul fast float %145, %5
  %162 = fmul fast float %151, %5
  %163 = fmul fast float %157, %5
  %164 = fmul fast float %146, %5
  %165 = fmul fast float %152, %5
  %166 = fmul fast float %158, %5
  %167 = fmul fast float %147, %5
  %168 = fmul fast float %153, %5
  %169 = fmul fast float %159, %5
  %170 = fmul fast float %148, %5
  %171 = fmul fast float %154, %5
  %172 = fmul fast float %160, %5
  %173 = fadd fast float %130, %161
  %174 = fadd fast float %131, %162
  %175 = fadd fast float %132, %163
  %176 = fadd fast float %133, %164
  %177 = fadd fast float %134, %165
  %178 = fadd fast float %135, %166
  %179 = fadd fast float %136, %167
  %180 = fadd fast float %137, %168
  %181 = fadd fast float %138, %169
  %182 = fadd fast float %139, %170
  %183 = fadd fast float %140, %171
  %184 = fadd fast float %141, %172
  %185 = fmul fast float %173, %15
  %186 = call float @dx.op.tertiary.f32(i32 46, float %16, float %176, float %185)  ; FMad(a,b,c)
  %187 = call float @dx.op.tertiary.f32(i32 46, float %17, float %179, float %186)  ; FMad(a,b,c)
  %188 = call float @dx.op.tertiary.f32(i32 46, float %18, float %182, float %187)  ; FMad(a,b,c)
  %189 = fmul fast float %174, %15
  %190 = call float @dx.op.tertiary.f32(i32 46, float %16, float %177, float %189)  ; FMad(a,b,c)
  %191 = call float @dx.op.tertiary.f32(i32 46, float %17, float %180, float %190)  ; FMad(a,b,c)
  %192 = call float @dx.op.tertiary.f32(i32 46, float %18, float %183, float %191)  ; FMad(a,b,c)
  %193 = fmul fast float %175, %15
  %194 = call float @dx.op.tertiary.f32(i32 46, float %16, float %178, float %193)  ; FMad(a,b,c)
  %195 = call float @dx.op.tertiary.f32(i32 46, float %17, float %181, float %194)  ; FMad(a,b,c)
  %196 = call float @dx.op.tertiary.f32(i32 46, float %18, float %184, float %195)  ; FMad(a,b,c)
  %197 = fmul fast float %173, %22
  %198 = call float @dx.op.tertiary.f32(i32 46, float %23, float %176, float %197)  ; FMad(a,b,c)
  %199 = call float @dx.op.tertiary.f32(i32 46, float %24, float %179, float %198)  ; FMad(a,b,c)
  %200 = fmul fast float %174, %22
  %201 = call float @dx.op.tertiary.f32(i32 46, float %23, float %177, float %200)  ; FMad(a,b,c)
  %202 = call float @dx.op.tertiary.f32(i32 46, float %24, float %180, float %201)  ; FMad(a,b,c)
  %203 = fmul fast float %175, %22
  %204 = call float @dx.op.tertiary.f32(i32 46, float %23, float %178, float %203)  ; FMad(a,b,c)
  %205 = call float @dx.op.tertiary.f32(i32 46, float %24, float %181, float %204)  ; FMad(a,b,c)
  %206 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 15)  ; CBufferLoadLegacy(handle,regIndex)
  %207 = extractvalue %dx.types.CBufRet.f32 %206, 0
  %208 = extractvalue %dx.types.CBufRet.f32 %206, 1
  %209 = extractvalue %dx.types.CBufRet.f32 %206, 2
  %210 = extractvalue %dx.types.CBufRet.f32 %206, 3
  %211 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 16)  ; CBufferLoadLegacy(handle,regIndex)
  %212 = extractvalue %dx.types.CBufRet.f32 %211, 0
  %213 = extractvalue %dx.types.CBufRet.f32 %211, 1
  %214 = extractvalue %dx.types.CBufRet.f32 %211, 2
  %215 = extractvalue %dx.types.CBufRet.f32 %211, 3
  %216 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 17)  ; CBufferLoadLegacy(handle,regIndex)
  %217 = extractvalue %dx.types.CBufRet.f32 %216, 0
  %218 = extractvalue %dx.types.CBufRet.f32 %216, 1
  %219 = extractvalue %dx.types.CBufRet.f32 %216, 2
  %220 = extractvalue %dx.types.CBufRet.f32 %216, 3
  %221 = fmul fast float %207, %188
  %222 = call float @dx.op.tertiary.f32(i32 46, float %192, float %208, float %221)  ; FMad(a,b,c)
  %223 = call float @dx.op.tertiary.f32(i32 46, float %196, float %209, float %222)  ; FMad(a,b,c)
  %224 = call float @dx.op.tertiary.f32(i32 46, float %18, float %210, float %223)  ; FMad(a,b,c)
  %225 = fmul fast float %212, %188
  %226 = call float @dx.op.tertiary.f32(i32 46, float %192, float %213, float %225)  ; FMad(a,b,c)
  %227 = call float @dx.op.tertiary.f32(i32 46, float %196, float %214, float %226)  ; FMad(a,b,c)
  %228 = call float @dx.op.tertiary.f32(i32 46, float %18, float %215, float %227)  ; FMad(a,b,c)
  %229 = fmul fast float %217, %188
  %230 = call float @dx.op.tertiary.f32(i32 46, float %192, float %218, float %229)  ; FMad(a,b,c)
  %231 = call float @dx.op.tertiary.f32(i32 46, float %196, float %219, float %230)  ; FMad(a,b,c)
  %232 = call float @dx.op.tertiary.f32(i32 46, float %18, float %220, float %231)  ; FMad(a,b,c)
  %233 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 12)  ; CBufferLoadLegacy(handle,regIndex)
  %234 = extractvalue %dx.types.CBufRet.f32 %233, 0
  %235 = extractvalue %dx.types.CBufRet.f32 %233, 1
  %236 = extractvalue %dx.types.CBufRet.f32 %233, 2
  %237 = fsub fast float %234, %224
  %238 = fsub fast float %235, %228
  %239 = fsub fast float %236, %232
  %240 = call float @dx.op.dot3.f32(i32 55, float %237, float %238, float %239, float %237, float %238, float %239)  ; Dot3(ax,ay,az,bx,by,bz)
  %241 = call float @dx.op.unary.f32(i32 25, float %240)  ; Rsqrt(value)
  %242 = fmul fast float %237, %241
  %243 = fmul fast float %238, %241
  %244 = fmul fast float %239, %241
  %245 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 19)  ; CBufferLoadLegacy(handle,regIndex)
  %246 = extractvalue %dx.types.CBufRet.f32 %245, 0
  %247 = extractvalue %dx.types.CBufRet.f32 %245, 1
  %248 = extractvalue %dx.types.CBufRet.f32 %245, 2
  %249 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 20)  ; CBufferLoadLegacy(handle,regIndex)
  %250 = extractvalue %dx.types.CBufRet.f32 %249, 0
  %251 = extractvalue %dx.types.CBufRet.f32 %249, 1
  %252 = extractvalue %dx.types.CBufRet.f32 %249, 2
  %253 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 21)  ; CBufferLoadLegacy(handle,regIndex)
  %254 = extractvalue %dx.types.CBufRet.f32 %253, 0
  %255 = extractvalue %dx.types.CBufRet.f32 %253, 1
  %256 = extractvalue %dx.types.CBufRet.f32 %253, 2
  %257 = fmul fast float %246, %199
  %258 = call float @dx.op.tertiary.f32(i32 46, float %202, float %247, float %257)  ; FMad(a,b,c)
  %259 = call float @dx.op.tertiary.f32(i32 46, float %205, float %248, float %258)  ; FMad(a,b,c)
  %260 = fmul fast float %250, %199
  %261 = call float @dx.op.tertiary.f32(i32 46, float %202, float %251, float %260)  ; FMad(a,b,c)
  %262 = call float @dx.op.tertiary.f32(i32 46, float %205, float %252, float %261)  ; FMad(a,b,c)
  %263 = fmul fast float %254, %199
  %264 = call float @dx.op.tertiary.f32(i32 46, float %202, float %255, float %263)  ; FMad(a,b,c)
  %265 = call float @dx.op.tertiary.f32(i32 46, float %205, float %256, float %264)  ; FMad(a,b,c)
  %266 = call float @dx.op.dot3.f32(i32 55, float %259, float %262, float %265, float %259, float %262, float %265)  ; Dot3(ax,ay,az,bx,by,bz)
  %267 = call float @dx.op.unary.f32(i32 25, float %266)  ; Rsqrt(value)
  %268 = fmul fast float %267, %259
  %269 = fmul fast float %267, %262
  %270 = fmul fast float %267, %265
  %271 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 3)  ; CBufferLoadLegacy(handle,regIndex)
  %272 = extractvalue %dx.types.CBufRet.f32 %271, 0
  %273 = extractvalue %dx.types.CBufRet.f32 %271, 1
  %274 = extractvalue %dx.types.CBufRet.f32 %271, 2
  %275 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 6)  ; CBufferLoadLegacy(handle,regIndex)
  %276 = extractvalue %dx.types.CBufRet.f32 %275, 0
  %277 = extractvalue %dx.types.CBufRet.f32 %275, 1
  %278 = extractvalue %dx.types.CBufRet.f32 %275, 2
  %279 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 9)  ; CBufferLoadLegacy(handle,regIndex)
  %280 = extractvalue %dx.types.CBufRet.f32 %279, 0
  %281 = extractvalue %dx.types.CBufRet.f32 %279, 1
  %282 = extractvalue %dx.types.CBufRet.f32 %279, 2
  %283 = fsub fast float %242, %272
  %284 = fsub fast float %243, %273
  %285 = fsub fast float %244, %274
  %286 = call float @dx.op.dot3.f32(i32 55, float %283, float %284, float %285, float %283, float %284, float %285)  ; Dot3(ax,ay,az,bx,by,bz)
  %287 = call float @dx.op.unary.f32(i32 25, float %286)  ; Rsqrt(value)
  %288 = fmul fast float %287, %284
  %289 = fmul fast float %287, %285
  %290 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 4)  ; CBufferLoadLegacy(handle,regIndex)
  %291 = extractvalue %dx.types.CBufRet.f32 %290, 0
  %292 = extractvalue %dx.types.CBufRet.f32 %290, 1
  %293 = extractvalue %dx.types.CBufRet.f32 %290, 2
  %294 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 7)  ; CBufferLoadLegacy(handle,regIndex)
  %295 = extractvalue %dx.types.CBufRet.f32 %294, 0
  %296 = extractvalue %dx.types.CBufRet.f32 %294, 1
  %297 = extractvalue %dx.types.CBufRet.f32 %294, 2
  %298 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 10)  ; CBufferLoadLegacy(handle,regIndex)
  %299 = extractvalue %dx.types.CBufRet.f32 %298, 0
  %300 = extractvalue %dx.types.CBufRet.f32 %298, 1
  %301 = extractvalue %dx.types.CBufRet.f32 %298, 2
  %302 = fsub fast float %242, %291
  %303 = fsub fast float %243, %292
  %304 = fsub fast float %244, %293
  %305 = call float @dx.op.dot3.f32(i32 55, float %302, float %303, float %304, float %302, float %303, float %304)  ; Dot3(ax,ay,az,bx,by,bz)
  %306 = call float @dx.op.unary.f32(i32 25, float %305)  ; Rsqrt(value)
  %307 = fmul fast float %306, %303
  %308 = fmul fast float %306, %304
  %309 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 5)  ; CBufferLoadLegacy(handle,regIndex)
  %310 = extractvalue %dx.types.CBufRet.f32 %309, 0
  %311 = extractvalue %dx.types.CBufRet.f32 %309, 1
  %312 = extractvalue %dx.types.CBufRet.f32 %309, 2
  %313 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 8)  ; CBufferLoadLegacy(handle,regIndex)
  %314 = extractvalue %dx.types.CBufRet.f32 %313, 0
  %315 = extractvalue %dx.types.CBufRet.f32 %313, 1
  %316 = extractvalue %dx.types.CBufRet.f32 %313, 2
  %317 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 11)  ; CBufferLoadLegacy(handle,regIndex)
  %318 = extractvalue %dx.types.CBufRet.f32 %317, 0
  %319 = extractvalue %dx.types.CBufRet.f32 %317, 1
  %320 = extractvalue %dx.types.CBufRet.f32 %317, 2
  %321 = fsub fast float %242, %310
  %322 = fsub fast float %243, %311
  %323 = fsub fast float %244, %312
  %324 = call float @dx.op.dot3.f32(i32 55, float %321, float %322, float %323, float %321, float %322, float %323)  ; Dot3(ax,ay,az,bx,by,bz)
  %325 = call float @dx.op.unary.f32(i32 25, float %324)  ; Rsqrt(value)
  %326 = fmul fast float %325, %322
  %327 = fmul fast float %325, %323
  %328 = fsub fast float -0.000000e+00, %273
  %329 = fsub fast float -0.000000e+00, %274
  %330 = fsub fast float -0.000000e+00, %292
  %331 = fsub fast float -0.000000e+00, %293
  %332 = fsub fast float -0.000000e+00, %311
  %333 = fsub fast float -0.000000e+00, %312
  %334 = fmul fast float %268, %272
  %335 = fsub fast float -0.000000e+00, %334
  %336 = call float @dx.op.tertiary.f32(i32 46, float %328, float %269, float %335)  ; FMad(a,b,c)
  %337 = call float @dx.op.tertiary.f32(i32 46, float %329, float %270, float %336)  ; FMad(a,b,c)
  %338 = fmul fast float %268, %291
  %339 = fsub fast float -0.000000e+00, %338
  %340 = call float @dx.op.tertiary.f32(i32 46, float %330, float %269, float %339)  ; FMad(a,b,c)
  %341 = call float @dx.op.tertiary.f32(i32 46, float %331, float %270, float %340)  ; FMad(a,b,c)
  %342 = fmul fast float %268, %310
  %343 = fsub fast float -0.000000e+00, %342
  %344 = call float @dx.op.tertiary.f32(i32 46, float %332, float %269, float %343)  ; FMad(a,b,c)
  %345 = call float @dx.op.tertiary.f32(i32 46, float %333, float %270, float %344)  ; FMad(a,b,c)
  %346 = fmul fast float %283, %268
  %347 = fmul fast float %346, %287
  %348 = call float @dx.op.tertiary.f32(i32 46, float %288, float %269, float %347)  ; FMad(a,b,c)
  %349 = call float @dx.op.tertiary.f32(i32 46, float %289, float %270, float %348)  ; FMad(a,b,c)
  %350 = fmul fast float %302, %268
  %351 = fmul fast float %350, %306
  %352 = call float @dx.op.tertiary.f32(i32 46, float %307, float %269, float %351)  ; FMad(a,b,c)
  %353 = call float @dx.op.tertiary.f32(i32 46, float %308, float %270, float %352)  ; FMad(a,b,c)
  %354 = fmul fast float %321, %268
  %355 = fmul fast float %354, %325
  %356 = call float @dx.op.tertiary.f32(i32 46, float %326, float %269, float %355)  ; FMad(a,b,c)
  %357 = call float @dx.op.tertiary.f32(i32 46, float %327, float %270, float %356)  ; FMad(a,b,c)
  %358 = fcmp fast olt float %337, 0.000000e+00
  %359 = fcmp fast olt float %341, 0.000000e+00
  %360 = fcmp fast olt float %345, 0.000000e+00
  %361 = select i1 %358, float 0.000000e+00, float 1.000000e+00
  %362 = select i1 %359, float 0.000000e+00, float 1.000000e+00
  %363 = select i1 %360, float 0.000000e+00, float 1.000000e+00
  %364 = fmul fast float %361, %337
  %365 = fmul fast float %362, %341
  %366 = fmul fast float %363, %345
  %367 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 2)  ; CBufferLoadLegacy(handle,regIndex)
  %368 = extractvalue %dx.types.CBufRet.f32 %367, 3
  %369 = call float @dx.op.binary.f32(i32 35, float %349, float 0.000000e+00)  ; FMax(a,b)
  %370 = call float @dx.op.binary.f32(i32 35, float %353, float 0.000000e+00)  ; FMax(a,b)
  %371 = call float @dx.op.binary.f32(i32 35, float %357, float 0.000000e+00)  ; FMax(a,b)
  %372 = fmul fast float %369, %361
  %373 = fmul fast float %370, %362
  %374 = fmul fast float %371, %363
  %375 = call float @dx.op.unary.f32(i32 23, float %372)  ; Log(value)
  %376 = call float @dx.op.unary.f32(i32 23, float %373)  ; Log(value)
  %377 = call float @dx.op.unary.f32(i32 23, float %374)  ; Log(value)
  %378 = fmul fast float %375, %368
  %379 = fmul fast float %376, %368
  %380 = fmul fast float %377, %368
  %381 = call float @dx.op.unary.f32(i32 21, float %378)  ; Exp(value)
  %382 = call float @dx.op.unary.f32(i32 21, float %379)  ; Exp(value)
  %383 = call float @dx.op.unary.f32(i32 21, float %380)  ; Exp(value)
  %384 = fmul fast float %381, %337
  %385 = fmul fast float %382, %341
  %386 = fmul fast float %383, %345
  %387 = fmul fast float %364, %276
  %388 = call float @dx.op.tertiary.f32(i32 46, float %365, float %295, float %387)  ; FMad(a,b,c)
  %389 = call float @dx.op.tertiary.f32(i32 46, float %366, float %314, float %388)  ; FMad(a,b,c)
  %390 = fmul fast float %364, %277
  %391 = call float @dx.op.tertiary.f32(i32 46, float %365, float %296, float %390)  ; FMad(a,b,c)
  %392 = call float @dx.op.tertiary.f32(i32 46, float %366, float %315, float %391)  ; FMad(a,b,c)
  %393 = fmul fast float %364, %278
  %394 = call float @dx.op.tertiary.f32(i32 46, float %365, float %297, float %393)  ; FMad(a,b,c)
  %395 = call float @dx.op.tertiary.f32(i32 46, float %366, float %316, float %394)  ; FMad(a,b,c)
  %396 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 0)  ; CBufferLoadLegacy(handle,regIndex)
  %397 = extractvalue %dx.types.CBufRet.f32 %396, 0
  %398 = extractvalue %dx.types.CBufRet.f32 %396, 1
  %399 = extractvalue %dx.types.CBufRet.f32 %396, 2
  %400 = fmul fast float %397, %389
  %401 = fmul fast float %398, %392
  %402 = fmul fast float %399, %395
  %403 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 1)  ; CBufferLoadLegacy(handle,regIndex)
  %404 = extractvalue %dx.types.CBufRet.f32 %403, 0
  %405 = extractvalue %dx.types.CBufRet.f32 %403, 1
  %406 = extractvalue %dx.types.CBufRet.f32 %403, 2
  %407 = fadd fast float %400, %404
  %408 = fadd fast float %401, %405
  %409 = fadd fast float %402, %406
  %410 = fmul fast float %384, %280
  %411 = call float @dx.op.tertiary.f32(i32 46, float %385, float %299, float %410)  ; FMad(a,b,c)
  %412 = call float @dx.op.tertiary.f32(i32 46, float %386, float %318, float %411)  ; FMad(a,b,c)
  %413 = fmul fast float %384, %281
  %414 = call float @dx.op.tertiary.f32(i32 46, float %385, float %300, float %413)  ; FMad(a,b,c)
  %415 = call float @dx.op.tertiary.f32(i32 46, float %386, float %319, float %414)  ; FMad(a,b,c)
  %416 = fmul fast float %384, %282
  %417 = call float @dx.op.tertiary.f32(i32 46, float %385, float %301, float %416)  ; FMad(a,b,c)
  %418 = call float @dx.op.tertiary.f32(i32 46, float %386, float %320, float %417)  ; FMad(a,b,c)
  %419 = extractvalue %dx.types.CBufRet.f32 %367, 0
  %420 = extractvalue %dx.types.CBufRet.f32 %367, 1
  %421 = extractvalue %dx.types.CBufRet.f32 %367, 2
  %422 = fmul fast float %419, %412
  %423 = fmul fast float %420, %415
  %424 = fmul fast float %421, %418
  %425 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 22)  ; CBufferLoadLegacy(handle,regIndex)
  %426 = extractvalue %dx.types.CBufRet.f32 %425, 0
  %427 = extractvalue %dx.types.CBufRet.f32 %425, 1
  %428 = extractvalue %dx.types.CBufRet.f32 %425, 2
  %429 = extractvalue %dx.types.CBufRet.f32 %425, 3
  %430 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 23)  ; CBufferLoadLegacy(handle,regIndex)
  %431 = extractvalue %dx.types.CBufRet.f32 %430, 0
  %432 = extractvalue %dx.types.CBufRet.f32 %430, 1
  %433 = extractvalue %dx.types.CBufRet.f32 %430, 2
  %434 = extractvalue %dx.types.CBufRet.f32 %430, 3
  %435 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 24)  ; CBufferLoadLegacy(handle,regIndex)
  %436 = extractvalue %dx.types.CBufRet.f32 %435, 0
  %437 = extractvalue %dx.types.CBufRet.f32 %435, 1
  %438 = extractvalue %dx.types.CBufRet.f32 %435, 2
  %439 = extractvalue %dx.types.CBufRet.f32 %435, 3
  %440 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 25)  ; CBufferLoadLegacy(handle,regIndex)
  %441 = extractvalue %dx.types.CBufRet.f32 %440, 0
  %442 = extractvalue %dx.types.CBufRet.f32 %440, 1
  %443 = extractvalue %dx.types.CBufRet.f32 %440, 2
  %444 = extractvalue %dx.types.CBufRet.f32 %440, 3
  %445 = fmul fast float %426, %188
  %446 = call float @dx.op.tertiary.f32(i32 46, float %192, float %427, float %445)  ; FMad(a,b,c)
  %447 = call float @dx.op.tertiary.f32(i32 46, float %196, float %428, float %446)  ; FMad(a,b,c)
  %448 = call float @dx.op.tertiary.f32(i32 46, float %18, float %429, float %447)  ; FMad(a,b,c)
  %449 = fmul fast float %431, %188
  %450 = call float @dx.op.tertiary.f32(i32 46, float %192, float %432, float %449)  ; FMad(a,b,c)
  %451 = call float @dx.op.tertiary.f32(i32 46, float %196, float %433, float %450)  ; FMad(a,b,c)
  %452 = call float @dx.op.tertiary.f32(i32 46, float %18, float %434, float %451)  ; FMad(a,b,c)
  %453 = fmul fast float %436, %188
  %454 = call float @dx.op.tertiary.f32(i32 46, float %192, float %437, float %453)  ; FMad(a,b,c)
  %455 = call float @dx.op.tertiary.f32(i32 46, float %196, float %438, float %454)  ; FMad(a,b,c)
  %456 = call float @dx.op.tertiary.f32(i32 46, float %18, float %439, float %455)  ; FMad(a,b,c)
  %457 = fmul fast float %441, %188
  %458 = call float @dx.op.tertiary.f32(i32 46, float %192, float %442, float %457)  ; FMad(a,b,c)
  %459 = call float @dx.op.tertiary.f32(i32 46, float %196, float %443, float %458)  ; FMad(a,b,c)
  %460 = call float @dx.op.tertiary.f32(i32 46, float %18, float %444, float %459)  ; FMad(a,b,c)
  %461 = extractvalue %dx.types.CBufRet.f32 %396, 3
  %462 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 14)  ; CBufferLoadLegacy(handle,regIndex)
  %463 = extractvalue %dx.types.CBufRet.f32 %462, 0
  %464 = extractvalue %dx.types.CBufRet.f32 %462, 1
  %465 = extractvalue %dx.types.CBufRet.f32 %462, 2
  %466 = extractvalue %dx.types.CBufRet.f32 %462, 3
  %467 = call float @dx.op.dot4.f32(i32 56, float %188, float %192, float %196, float %18, float %463, float %464, float %465, float %466)  ; Dot4(ax,ay,az,aw,bx,by,bz,bw)
  %468 = call float @dx.op.unary.f32(i32 7, float %467)  ; Saturate(value)
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 0, float %407)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 1, float %408)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 2, float %409)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 3, float %461)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 1, i32 0, i8 0, float %422)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 1, i32 0, i8 1, float %423)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 1, i32 0, i8 2, float %424)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 1, i32 0, i8 3, float %468)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 2, i32 0, i8 0, float %10)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 2, i32 0, i8 1, float %11)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 3, i32 0, i8 0, float %448)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 3, i32 0, i8 1, float %452)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 3, i32 0, i8 2, float %456)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 3, i32 0, i8 3, float %460)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  ret void
}

; Function Attrs: nounwind readnone
declare float @dx.op.loadInput.f32(i32, i32, i32, i8, i32) #0

; Function Attrs: nounwind readnone
declare i32 @dx.op.loadInput.i32(i32, i32, i32, i8, i32) #0

; Function Attrs: nounwind
declare void @dx.op.storeOutput.f32(i32, i32, i32, i8, float) #1

; Function Attrs: nounwind readnone
declare float @dx.op.dot3.f32(i32, float, float, float, float, float, float) #0

; Function Attrs: nounwind readnone
declare float @dx.op.unary.f32(i32, float) #0

; Function Attrs: nounwind readnone
declare float @dx.op.binary.f32(i32, float, float) #0

; Function Attrs: nounwind readnone
declare float @dx.op.dot4.f32(i32, float, float, float, float, float, float, float, float) #0

; Function Attrs: nounwind readonly
declare %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32, %dx.types.Handle, i32) #2

; Function Attrs: nounwind readnone
declare float @dx.op.tertiary.f32(i32, float, float, float) #0

; Function Attrs: nounwind readonly
declare %dx.types.Handle @dx.op.createHandle(i32, i8, i32, i32, i1) #2

attributes #0 = { nounwind readnone }
attributes #1 = { nounwind }
attributes #2 = { nounwind readonly }

!xbox.compiler.options = !{!0}
!llvm.ident = !{!1}
!dx.version = !{!2}
!dx.valver = !{!3}
!dx.shaderModel = !{!4}
!dx.resources = !{!5}
!dx.viewIdState = !{!8}
!dx.entryPoints = !{!9}

!0 = !{!"__XBOX_PER_THREAD_SCRATCH_SIZE_LIMIT_IN_BYTES", !"0"}
!1 = !{!"dxcxbox 2410.2410.11116.10741"}
!2 = !{i32 1, i32 0}
!3 = !{i32 1, i32 8}
!4 = !{!"vs", i32 6, i32 0}
!5 = !{null, null, !6, null}
!6 = !{!7}
!7 = !{i32 0, %hostlayout.Parameters* undef, !"", i32 0, i32 0, i32 1, i32 3872, null}
!8 = !{[22 x i32] [i32 20, i32 16, i32 61680, i32 61680, i32 61680, i32 61680, i32 119, i32 119, i32 119, i32 0, i32 256, i32 512, i32 0, i32 0, i32 61687, i32 61687, i32 61687, i32 61687, i32 61687, i32 61687, i32 61687, i32 61687]}
!9 = !{void ()* @VSSkinnedVertexLightingFourBonesBn, !"VSSkinnedVertexLightingFourBonesBn", !10, !5, null}
!10 = !{!11, !21, null}
!11 = !{!12, !15, !17, !19, !20}
!12 = !{i32 0, !"SV_Position", i8 9, i8 0, !13, i8 0, i32 1, i8 4, i32 0, i8 0, !14}
!13 = !{i32 0}
!14 = !{i32 3, i32 15}
!15 = !{i32 1, !"NORMAL", i8 9, i8 0, !13, i8 0, i32 1, i8 3, i32 1, i8 0, !16}
!16 = !{i32 3, i32 7}
!17 = !{i32 2, !"TEXCOORD", i8 9, i8 0, !13, i8 0, i32 1, i8 2, i32 2, i8 0, !18}
!18 = !{i32 3, i32 3}
!19 = !{i32 3, !"BLENDINDICES", i8 5, i8 0, !13, i8 0, i32 1, i8 4, i32 3, i8 0, !14}
!20 = !{i32 4, !"BLENDWEIGHT", i8 9, i8 0, !13, i8 0, i32 1, i8 4, i32 4, i8 0, !14}
!21 = !{!22, !23, !25, !26}
!22 = !{i32 0, !"COLOR", i8 9, i8 0, !13, i8 2, i32 1, i8 4, i32 0, i8 0, !14}
!23 = !{i32 1, !"COLOR", i8 9, i8 0, !24, i8 2, i32 1, i8 4, i32 1, i8 0, !14}
!24 = !{i32 1}
!25 = !{i32 2, !"TEXCOORD", i8 9, i8 0, !13, i8 2, i32 1, i8 2, i32 2, i8 0, !18}
!26 = !{i32 3, !"SV_Position", i8 9, i8 3, !13, i8 4, i32 1, i8 4, i32 3, i8 0, !14}

;
; DUMPING SHADER HARDWARE INSTRUCTIONS 
;
// Shader Type               : (VS)
// Shader Hw Stage           : (VS)

// Shader Instructions:
shader main
  asic(CI)
  type(VS)
  s_swappc_b64  s[0:1], s[0:1]
  s_waitcnt     vmcnt(0)
  v_mul_lo_i32  v14, v16, 3
  s_or_b32      s65, s4, 0x00100000 // wrscc
  s_mov_b32     s64, s3
  s_mov_b32     s66, -1
  s_mov_b32     s67, 0x00024fac
  v_add_i32     v0, vcc, 26, v14
  buffer_load_dwordx4  v[0:3], v0, s[64:67], 0 idxen
  v_mul_lo_i32  v15, v17, 3
  v_mad_f32     v28, v8, 2.0, -1.0
  v_add_i32     v8, vcc, 27, v14
  v_mad_f32     v29, v9, 2.0, -1.0
  v_mad_f32     v30, v10, 2.0, -1.0
  buffer_load_dwordx4  v[8:11], v8, s[64:67], 0 idxen
  v_add_i32     v14, vcc, 28, v14
  v_add_i32     v24, vcc, 26, v15
  v_add_i32     v31, vcc, 27, v15
  v_add_i32     v32, vcc, 28, v15
  buffer_load_dwordx4  v[14:17], v14, s[64:67], 0 idxen
  buffer_load_dwordx4  v[24:27], v24, s[64:67], 0 idxen
  v_mul_lo_i32  v18, v18, 3
  v_mul_lo_i32  v19, v19, 3
  s_buffer_load_dwordx16  s[16:31], s[64:67], 0x00
  s_buffer_load_dwordx16  s[48:63], s[64:67], 0x10
  s_buffer_load_dwordx4  s[32:35], s[64:67], 0x30
  s_buffer_load_dwordx16  s[0:15], s[64:67], 0x38
  s_waitcnt     vmcnt(3)
  v_mul_legacy_f32  v33, v0, v20
  v_mul_legacy_f32  v34, v1, v20
  v_mul_legacy_f32  v35, v2, v20
  v_mul_legacy_f32  v36, v3, v20
  buffer_load_dwordx4  v[0:3], v31, s[64:67], 0 idxen
  v_add_i32     v31, vcc, 27, v18
  s_waitcnt     vmcnt(3)
  v_mul_legacy_f32  v37, v8, v20
  v_mul_legacy_f32  v8, v11, v20
  v_mul_legacy_f32  v38, v9, v20
  v_mul_legacy_f32  v39, v10, v20
  s_waitcnt     vmcnt(1)
  v_mad_legacy_f32  v26, v26, v21, v35
  v_mad_legacy_f32  v24, v24, v21, v33
  v_mad_legacy_f32  v25, v25, v21, v34
  v_mad_legacy_f32  v27, v27, v21, v36
  v_add_i32     v36, vcc, 26, v19
  s_waitcnt     vmcnt(0)
  v_mad_legacy_f32  v35, v3, v21, v8
  buffer_load_dwordx4  v[8:11], v32, s[64:67], 0 idxen
  v_mad_legacy_f32  v33, v1, v21, v38
  v_mul_legacy_f32  v1, v14, v20
  v_add_i32     v14, vcc, 26, v18
  v_mul_legacy_f32  v3, v16, v20
  v_mad_legacy_f32  v32, v0, v21, v37
  v_mad_legacy_f32  v34, v2, v21, v39
  v_mul_legacy_f32  v39, v15, v20
  v_mul_legacy_f32  v20, v17, v20
  buffer_load_dwordx4  v[14:17], v14, s[64:67], 0 idxen
  v_add_i32     v18, vcc, 28, v18
  v_add_i32     v37, vcc, 27, v19
  v_add_i32     v19, vcc, 28, v19
  s_waitcnt     vmcnt(1)
  v_mad_legacy_f32  v38, v8, v21, v1
  v_mad_legacy_f32  v40, v10, v21, v3
  buffer_load_dwordx4  v[0:3], v31, s[64:67], 0 idxen
  v_mac_legacy_f32  v39, v9, v21
  v_mac_legacy_f32  v20, v11, v21
  buffer_load_dwordx4  v[8:11], v18, s[64:67], 0 idxen
  s_waitcnt     vmcnt(2)
  v_mad_legacy_f32  v21, v14, v22, v24
  v_mad_legacy_f32  v14, v15, v22, v25
  v_mad_legacy_f32  v25, v16, v22, v26
  v_mac_legacy_f32  v27, v17, v22
  s_waitcnt     vmcnt(1)
  v_mad_legacy_f32  v24, v0, v22, v32
  v_mad_legacy_f32  v18, v1, v22, v33
  v_mad_legacy_f32  v26, v2, v22, v34
  v_mad_legacy_f32  v31, v3, v22, v35
  buffer_load_dwordx4  v[0:3], v36, s[64:67], 0 idxen
  s_waitcnt     vmcnt(1)
  v_mad_legacy_f32  v34, v10, v22, v40
  v_mad_legacy_f32  v32, v8, v22, v38
  v_mad_legacy_f32  v33, v9, v22, v39
  v_mac_legacy_f32  v20, v11, v22
  buffer_load_dwordx4  v[8:11], v19, s[64:67], 0 idxen
  s_waitcnt     vmcnt(1)
  v_mad_legacy_f32  v1, v1, v23, v14
  buffer_load_dwordx4  v[14:17], v37, s[64:67], 0 idxen
  v_mad_legacy_f32  v0, v0, v23, v21
  v_mad_legacy_f32  v2, v2, v23, v25
  v_mad_legacy_f32  v3, v3, v23, v27
  s_waitcnt     vmcnt(1)
  v_mad_legacy_f32  v8, v8, v23, v32
  v_mad_legacy_f32  v9, v9, v23, v33
  v_mad_legacy_f32  v10, v10, v23, v34
  v_mad_legacy_f32  v11, v11, v23, v20
  s_waitcnt     vmcnt(0)
  v_mad_legacy_f32  v15, v15, v23, v18
  v_mul_legacy_f32  v18, v0, v4
  v_mac_legacy_f32  v18, v5, v1
  v_mac_legacy_f32  v18, v6, v2
  v_mad_legacy_f32  v14, v14, v23, v24
  v_mad_legacy_f32  v3, v7, v3, v18
  v_mul_legacy_f32  v18, v14, v4
  v_mul_legacy_f32  v0, v0, v28
  v_mul_legacy_f32  v4, v8, v4
  v_mad_legacy_f32  v16, v16, v23, v26
  v_mac_legacy_f32  v18, v5, v15
  v_mac_legacy_f32  v4, v5, v9
  v_mac_legacy_f32  v0, v29, v1
  v_mad_legacy_f32  v17, v17, v23, v31
  v_mac_legacy_f32  v18, v6, v16
  v_mac_legacy_f32  v4, v6, v10
  v_mac_legacy_f32  v0, v30, v2
  v_mul_legacy_f32  v2, v8, v28
  v_mad_legacy_f32  v17, v7, v17, v18
  s_waitcnt     lgkmcnt(0)
  v_mul_legacy_f32  v5, s4, v3
  v_mul_legacy_f32  v6, s8, v3
  v_mul_legacy_f32  v8, s12, v3
  v_mac_legacy_f32  v4, v7, v11
  v_mac_legacy_f32  v5, s5, v17
  v_mac_legacy_f32  v6, s9, v17
  v_mac_legacy_f32  v8, s13, v17
  v_mac_legacy_f32  v5, s6, v4
  v_mac_legacy_f32  v6, s10, v4
  v_mac_legacy_f32  v8, s14, v4
  v_mac_legacy_f32  v5, s7, v7
  v_mac_legacy_f32  v6, s11, v7
  v_mac_legacy_f32  v8, s15, v7
  v_sub_f32     v5, s32, v5
  v_sub_f32     v6, s33, v6
  v_sub_f32     v8, s34, v8
  s_buffer_load_dwordx16  s[32:47], s[64:67], 0x4c
  v_mul_legacy_f32  v1, v14, v28
  v_mac_legacy_f32  v1, v29, v15
  v_mac_legacy_f32  v2, v29, v9
  v_mac_legacy_f32  v1, v30, v16
  s_waitcnt     lgkmcnt(0)
  v_mul_legacy_f32  v11, s36, v0
  v_mac_legacy_f32  v2, v30, v10
  v_mul_legacy_f32  v10, s32, v0
  v_mac_legacy_f32  v11, s37, v1
  v_mac_legacy_f32  v10, s33, v1
  v_mul_legacy_f32  v0, s40, v0
  v_mac_legacy_f32  v11, s38, v2
  v_mac_legacy_f32  v0, s41, v1
  v_mac_legacy_f32  v10, s34, v2
  v_mul_legacy_f32  v1, v11, v11
  v_mul_legacy_f32  v9, v6, v6
  v_mac_legacy_f32  v0, s42, v2
  v_mac_legacy_f32  v1, v10, v10
  v_mac_legacy_f32  v1, v0, v0
  v_mad_legacy_f32  v2, v5, v5, v9
  v_rsq_f32     v1, v1
  v_mac_legacy_f32  v2, v8, v8
  v_rsq_f32     v2, v2
  s_buffer_load_dwordx8  s[4:11], s[64:67], 0x5c
  v_mul_legacy_f32  v9, v1, v10
  v_mul_legacy_f32  v10, v1, v11
  v_mul_legacy_f32  v0, v1, v0
  v_mad_legacy_f32  v11, v6, v2, -s29
  v_mad_legacy_f32  v18, v6, v2, -s49
  v_mad_legacy_f32  v6, v6, v2, -s53
  v_mad_legacy_f32  v1, v5, v2, -s28
  v_mad_legacy_f32  v16, v5, v2, -s48
  v_mad_legacy_f32  v14, v8, v2, -s30
  v_mad_legacy_f32  v19, v8, v2, -s50
  v_mad_legacy_f32  v5, v5, v2, -s52
  v_mad_legacy_f32  v2, v8, v2, -s54
  v_mul_legacy_f32  v8, s28, v9
  v_mad_legacy_f32  v8, -s29, v10, -v8
  v_mul_legacy_f32  v20, s48, v9
  v_mac_legacy_f32  v8, v0, -s30
  v_mad_legacy_f32  v20, -s49, v10, -v20
  v_cmp_gt_f32  vcc, 0, v8
  v_mac_legacy_f32  v20, v0, -s50
  v_cndmask_b32  v22, 1.0, 0, vcc
  v_cmp_gt_f32  vcc, 0, v20
  v_mul_legacy_f32  v15, v11, v11
  v_mul_legacy_f32  v24, v22, v8
  v_cndmask_b32  v23, 1.0, 0, vcc
  v_mac_legacy_f32  v15, v1, v1
  v_mul_legacy_f32  v25, v23, v20
  v_mul_legacy_f32  v26, s56, v24
  v_mul_legacy_f32  v27, s57, v24
  v_mul_legacy_f32  v24, s58, v24
  v_mac_legacy_f32  v15, v14, v14
  v_mac_legacy_f32  v26, s60, v25
  v_mac_legacy_f32  v27, s61, v25
  v_mac_legacy_f32  v24, s62, v25
  v_mul_legacy_f32  v25, v18, v18
  v_rsq_f32     v15, v15
  v_mac_legacy_f32  v25, v16, v16
  v_mul_legacy_f32  v28, v6, v6
  v_mac_legacy_f32  v28, v5, v5
  v_mac_legacy_f32  v25, v19, v19
  v_rsq_f32     v25, v25
  v_mac_legacy_f32  v28, v2, v2
  v_rsq_f32     v28, v28
  v_mul_legacy_f32  v1, v1, v9
  v_mul_legacy_f32  v11, v15, v11
  v_mul_legacy_f32  v1, v1, v15
  v_mac_legacy_f32  v1, v11, v10
  v_mul_legacy_f32  v11, v16, v9
  v_mul_legacy_f32  v21, s52, v9
  v_mul_legacy_f32  v5, v5, v9
  v_mul_legacy_f32  v14, v15, v14
  v_mul_legacy_f32  v18, v25, v18
  v_mul_legacy_f32  v11, v11, v25
  v_mad_legacy_f32  v21, -s53, v10, -v21
  v_mac_legacy_f32  v1, v14, v0
  v_mul_legacy_f32  v19, v25, v19
  v_mac_legacy_f32  v11, v18, v10
  v_mul_legacy_f32  v6, v28, v6
  v_mul_legacy_f32  v5, v5, v28
  v_max_f32     v1, 0, v1
  v_mac_legacy_f32  v21, v0, -s54
  v_mul_legacy_f32  v2, v28, v2
  v_mac_legacy_f32  v11, v19, v0
  v_mac_legacy_f32  v5, v6, v10
  v_mad_legacy_f32  v0, v2, v0, v5
  v_max_f32     v6, 0, v11
  v_mul_legacy_f32  v1, v1, v22
  v_cmp_gt_f32  vcc, 0, v21
  v_mul_legacy_f32  v6, v6, v23
  v_log_f32     v1, v1
  v_cndmask_b32  v5, 1.0, 0, vcc
  v_max_f32     v0, 0, v0
  v_mul_legacy_f32  v0, v0, v5
  v_log_f32     v6, v6
  v_log_f32     v0, v0
  v_mul_legacy_f32  v1, s27, v1
  v_exp_f32     v1, v1
  v_mul_legacy_f32  v6, s27, v6
  s_buffer_load_dwordx16  s[28:43], s[64:67], 0x20
  v_mul_legacy_f32  v0, s27, v0
  v_exp_f32     v6, v6
  v_exp_f32     v0, v0
  s_buffer_load_dwordx4  s[12:15], s[64:67], 0x64
  v_mul_legacy_f32  v1, v1, v8
  v_mul_legacy_f32  v6, v6, v20
  s_waitcnt     lgkmcnt(0)
  v_mul_legacy_f32  v14, s32, v1
  v_mul_legacy_f32  v15, s33, v1
  v_mul_legacy_f32  v1, s34, v1
  v_mul_legacy_f32  v0, v0, v21
  v_mac_legacy_f32  v14, s36, v6
  v_mac_legacy_f32  v15, s37, v6
  v_mac_legacy_f32  v14, s40, v0
  v_mac_legacy_f32  v15, s41, v0
  v_mac_legacy_f32  v1, s38, v6
  v_mad_legacy_f32  v0, v0, s42, v1
  v_mul_legacy_f32  v16, s8, v3
  v_mul_legacy_f32  v18, s12, v3
  v_mul_legacy_f32  v1, s24, v14
  v_mul_legacy_f32  v14, s44, v3
  v_mul_legacy_f32  v6, s25, v15
  v_mul_legacy_f32  v15, s4, v3
  v_mac_legacy_f32  v14, s45, v17
  v_mac_legacy_f32  v15, s5, v17
  v_mac_legacy_f32  v16, s9, v17
  v_mac_legacy_f32  v18, s13, v17
  v_mac_legacy_f32  v14, s46, v4
  v_mac_legacy_f32  v15, s6, v4
  v_mac_legacy_f32  v16, s10, v4
  v_mac_legacy_f32  v18, s14, v4
  v_mul_legacy_f32  v5, v5, v21
  v_mac_legacy_f32  v14, s47, v7
  v_mac_legacy_f32  v15, s7, v7
  v_mac_legacy_f32  v16, s11, v7
  v_mac_legacy_f32  v18, s15, v7
  v_mad_legacy_f32  v8, v5, s28, v26
  v_mad_legacy_f32  v10, v5, s29, v27
  v_mad_legacy_f32  v5, v5, s30, v24
  v_mul_legacy_f32  v17, s1, v17
  v_mul_legacy_f32  v7, s3, v7
  exp           pos0, v14, v15, v16, v18 done
  v_mul_legacy_f32  v8, s16, v8
  v_mul_legacy_f32  v10, s17, v10
  v_mul_legacy_f32  v5, s18, v5
  v_mad_legacy_f32  v3, v3, s0, v17
  v_mad_legacy_f32  v4, v4, s2, v7
  v_mov_b32     v2, 1.0
  v_mov_b32     v9, 0
  v_mov_b32     v11, s19
  v_add_f32     v8, s20, v8
  v_add_f32     v10, s21, v10
  v_add_f32     v5, s22, v5
  v_mul_legacy_f32  v0, s26, v0
  v_add_f32     v3, v3, v4 clamp
  exp           param0, v8, v10, v5, v11
  exp           param1, v1, v6, v0, v3
  exp           param2, v12, v13, v9, v2
  s_endpgm      
end


NumVGPR=41,NumSGPR=70,LDS=0,Scratch=0,Occpancy=5

// Shader Type               : (VS)
// Shader Hw Stage           : (ES)

// Shader Instructions:
shader main
  asic(CI)
  type(VS)
  s_swappc_b64  s[0:1], s[0:1]
  s_waitcnt     vmcnt(0)
  v_mul_lo_i32  v11, v16, 3
  v_mul_lo_i32  v44, v17, 3
  v_mul_lo_i32  v18, v18, 3
  v_mul_lo_i32  v19, v19, 3
  s_mov_b32     s71, 0x00024fac
  s_mov_b32     s70, -1
  s_mov_b32     s68, s3
  s_or_b32      s69, s4, 0x00100000 // wrscc
  v_add_i32     v14, vcc, 26, v11
  buffer_load_dwordx4  v[14:17], v14, s[68:71], 0 idxen
  v_add_i32     v24, vcc, 26, v44
  buffer_load_dwordx4  v[24:27], v24, s[68:71], 0 idxen
  v_add_i32     v28, vcc, 27, v18
  v_add_i32     v32, vcc, 26, v18
  v_add_i32     v0, vcc, 27, v11
  buffer_load_dwordx4  v[28:31], v28, s[68:71], 0 idxen
  buffer_load_dwordx4  v[32:35], v32, s[68:71], 0 idxen
  v_add_i32     v36, vcc, 26, v19
  v_add_i32     v11, vcc, 28, v11
  buffer_load_dwordx4  v[36:39], v36, s[68:71], 0 idxen
  buffer_load_dwordx4  v[40:43], v11, s[68:71], 0 idxen
  v_add_i32     v11, vcc, 28, v44
  buffer_load_dwordx4  v[48:51], v11, s[68:71], 0 idxen
  buffer_load_dwordx4  v[0:3], v0, s[68:71], 0 idxen
  v_add_i32     v18, vcc, 28, v18
  s_buffer_load_dwordx16  s[8:23], s[68:71], 0x38
  s_buffer_load_dwordx4  s[24:27], s[68:71], 0x30
  s_buffer_load_dwordx16  s[44:59], s[68:71], 0x4c
  v_mad_f32     v8, v8, 2.0, -1.0
  v_mad_f32     v9, v9, 2.0, -1.0
  v_mad_f32     v10, v10, 2.0, -1.0
  s_mov_b32     s1, 0
  s_buffer_load_dwordx16  s[28:43], s[68:71], 0x10
  s_buffer_load_dwordx8  s[60:67], s[68:71], 0x5c
  s_waitcnt     vmcnt(7)
  v_mul_legacy_f32  v14, v14, v20
  v_mul_legacy_f32  v15, v15, v20
  s_waitcnt     vmcnt(6)
  v_mac_legacy_f32  v14, v24, v21
  v_add_i32     v24, vcc, 27, v44
  v_mac_legacy_f32  v15, v25, v21
  buffer_load_dwordx4  v[44:47], v24, s[68:71], 0 idxen
  v_mul_legacy_f32  v11, v16, v20
  s_waitcnt     vmcnt(5)
  v_mac_legacy_f32  v14, v32, v22
  v_mad_legacy_f32  v24, v33, v22, v15
  v_mul_legacy_f32  v15, v17, v20
  s_waitcnt     vmcnt(4)
  v_mad_legacy_f32  v32, v36, v23, v14
  s_waitcnt     vmcnt(3)
  v_mul_legacy_f32  v14, v41, v20
  v_mul_legacy_f32  v25, v40, v20
  v_mad_legacy_f32  v36, v27, v21, v15
  s_waitcnt     vmcnt(2)
  v_mad_legacy_f32  v40, v49, v21, v14
  buffer_load_dwordx4  v[14:17], v18, s[68:71], 0 idxen
  s_waitcnt     vmcnt(2)
  v_mul_legacy_f32  v1, v1, v20
  v_mul_legacy_f32  v0, v0, v20
  v_mul_legacy_f32  v2, v2, v20
  v_add_i32     v33, vcc, 28, v19
  v_add_i32     v19, vcc, 27, v19
  v_mad_legacy_f32  v37, v37, v23, v24
  v_mul_legacy_f32  v41, v32, v4
  s_waitcnt     vmcnt(1)
  v_mad_legacy_f32  v18, v46, v21, v2
  v_mad_legacy_f32  v2, v26, v21, v11
  v_mad_legacy_f32  v11, v48, v21, v25
  v_mac_legacy_f32  v0, v44, v21
  v_mac_legacy_f32  v1, v45, v21
  buffer_load_dwordx4  v[24:27], v19, s[68:71], 0 idxen
  v_mad_legacy_f32  v19, v29, v22, v1
  v_mul_legacy_f32  v29, v3, v20
  v_mad_legacy_f32  v28, v28, v22, v0
  v_mac_legacy_f32  v18, v30, v22
  s_waitcnt     vmcnt(1)
  v_mac_legacy_f32  v11, v14, v22
  v_mad_legacy_f32  v14, v34, v22, v2
  buffer_load_dwordx4  v[0:3], v33, s[68:71], 0 idxen
  v_mul_legacy_f32  v34, v42, v20
  v_mul_legacy_f32  v20, v43, v20
  v_mad_legacy_f32  v33, v50, v21, v34
  v_mad_legacy_f32  v15, v15, v22, v40
  v_mac_legacy_f32  v29, v47, v21
  v_mad_legacy_f32  v30, v35, v22, v36
  v_mac_legacy_f32  v14, v38, v23
  v_mac_legacy_f32  v20, v51, v21
  v_mad_legacy_f32  v16, v16, v22, v33
  v_mad_legacy_f32  v21, v31, v22, v29
  s_waitcnt     vmcnt(1)
  v_mad_legacy_f32  v24, v24, v23, v28
  v_mad_legacy_f32  v28, v5, v37, v41
  v_mac_legacy_f32  v19, v25, v23
  v_mul_legacy_f32  v25, v24, v4
  v_mac_legacy_f32  v25, v5, v19
  v_mac_legacy_f32  v28, v6, v14
  v_mac_legacy_f32  v18, v26, v23
  s_waitcnt     vmcnt(0)
  v_mad_legacy_f32  v0, v0, v23, v11
  v_mad_legacy_f32  v11, v39, v23, v30
  v_mad_legacy_f32  v1, v1, v23, v15
  v_mul_legacy_f32  v4, v0, v4
  v_mad_legacy_f32  v15, v17, v22, v20
  v_mac_legacy_f32  v4, v5, v1
  v_mad_legacy_f32  v2, v2, v23, v16
  v_mad_legacy_f32  v5, v6, v18, v25
  v_mad_legacy_f32  v17, v27, v23, v21
  v_mad_legacy_f32  v11, v7, v11, v28
  v_mac_legacy_f32  v4, v6, v2
  v_mad_legacy_f32  v3, v3, v23, v15
  v_mac_legacy_f32  v5, v7, v17
  s_waitcnt     lgkmcnt(0)
  v_mul_legacy_f32  v6, s16, v11
  v_mad_legacy_f32  v3, v7, v3, v4
  v_mac_legacy_f32  v6, s17, v5
  v_mul_legacy_f32  v4, s12, v11
  v_mac_legacy_f32  v4, s13, v5
  v_mac_legacy_f32  v6, s18, v3
  v_mul_legacy_f32  v15, s20, v11
  v_mac_legacy_f32  v15, s21, v5
  v_mac_legacy_f32  v4, s14, v3
  v_mac_legacy_f32  v6, s19, v7
  v_mac_legacy_f32  v15, s22, v3
  v_mac_legacy_f32  v4, s15, v7
  v_mul_legacy_f32  v16, v32, v8
  v_sub_f32     v6, s25, v6
  v_mac_legacy_f32  v15, s23, v7
  v_mac_legacy_f32  v16, v9, v37
  v_mul_legacy_f32  v20, v24, v8
  v_sub_f32     v4, s24, v4
  v_mul_legacy_f32  v17, v6, v6
  v_mul_legacy_f32  v0, v0, v8
  v_sub_f32     v15, s26, v15
  v_mac_legacy_f32  v17, v4, v4
  v_mad_legacy_f32  v19, v9, v19, v20
  v_mad_legacy_f32  v14, v10, v14, v16
  v_mac_legacy_f32  v0, v9, v1
  v_mad_legacy_f32  v8, v15, v15, v17
  s_buffer_load_dwordx16  s[12:27], s[68:71], 0x00
  v_mad_legacy_f32  v1, v10, v18, v19
  v_mul_legacy_f32  v9, s48, v14
  v_rsq_f32     v8, v8
  v_mac_legacy_f32  v0, v10, v2
  v_mac_legacy_f32  v9, s49, v1
  v_mul_legacy_f32  v2, s44, v14
  v_mac_legacy_f32  v2, s45, v1
  v_mul_legacy_f32  v10, s52, v14
  v_mac_legacy_f32  v9, s50, v0
  v_mad_legacy_f32  v1, v1, s53, v10
  v_mac_legacy_f32  v2, s46, v0
  v_mul_legacy_f32  v10, v9, v9
  v_mac_legacy_f32  v10, v2, v2
  v_mad_legacy_f32  v0, v0, s54, v1
  s_load_dwordx4  s[0:3], s[0:1], 0x08
  v_mac_legacy_f32  v10, v0, v0
  s_waitcnt     lgkmcnt(0)
  v_mad_legacy_f32  v1, v6, v8, -s25
  v_mad_legacy_f32  v14, v6, v8, -s29
  v_rsq_f32     v10, v10
  v_mad_legacy_f32  v6, v6, v8, -s33
  v_mad_legacy_f32  v16, v4, v8, -s24
  v_mul_legacy_f32  v17, v1, v1
  v_mad_legacy_f32  v19, v4, v8, -s28
  v_mul_legacy_f32  v20, v14, v14
  v_mac_legacy_f32  v17, v16, v16
  v_mad_legacy_f32  v18, v15, v8, -s26
  v_mac_legacy_f32  v20, v19, v19
  v_mad_legacy_f32  v21, v15, v8, -s30
  v_mad_legacy_f32  v4, v4, v8, -s32
  v_mul_legacy_f32  v22, v6, v6
  v_mac_legacy_f32  v17, v18, v18
  v_mac_legacy_f32  v22, v4, v4
  v_mac_legacy_f32  v20, v21, v21
  v_mad_legacy_f32  v8, v15, v8, -s34
  v_rsq_f32     v15, v20
  v_mad_legacy_f32  v20, v8, v8, v22
  v_rsq_f32     v17, v17
  v_mul_legacy_f32  v2, v10, v2
  v_rsq_f32     v20, v20
  v_mul_legacy_f32  v9, v10, v9
  v_mul_legacy_f32  v22, s24, v2
  v_mul_legacy_f32  v16, v16, v2
  v_mul_legacy_f32  v0, v10, v0
  v_mad_legacy_f32  v22, -s25, v9, -v22
  v_mul_legacy_f32  v10, s28, v2
  v_mad_legacy_f32  v10, -s29, v9, -v10
  v_mac_legacy_f32  v22, v0, -s26
  v_mul_legacy_f32  v4, v4, v2
  v_mul_legacy_f32  v19, v19, v2
  v_mul_legacy_f32  v2, s32, v2
  v_mul_legacy_f32  v16, v16, v17
  v_mul_legacy_f32  v1, v17, v1
  v_mad_legacy_f32  v2, -s33, v9, -v2
  v_mad_legacy_f32  v1, v1, v9, v16
  v_mul_legacy_f32  v17, v17, v18
  v_mul_legacy_f32  v16, v19, v15
  v_mul_legacy_f32  v14, v15, v14
  v_mul_legacy_f32  v18, s56, v11
  v_mac_legacy_f32  v10, v0, -s30
  v_cmp_gt_f32  vcc, 0, v22
  v_mul_legacy_f32  v4, v4, v20
  v_mul_legacy_f32  v6, v20, v6
  v_mac_legacy_f32  v1, v17, v0
  v_mad_legacy_f32  v14, v14, v9, v16
  v_mad_legacy_f32  v16, v5, s57, v18
  v_cndmask_b32  v18, 1.0, 0, vcc
  v_mac_legacy_f32  v4, v6, v9
  v_mul_legacy_f32  v15, v15, v21
  v_mac_legacy_f32  v2, v0, -s34
  v_cmp_gt_f32  vcc, 0, v10
  v_mul_legacy_f32  v8, v20, v8
  v_mad_legacy_f32  v6, v15, v0, v14
  v_mad_legacy_f32  v0, v8, v0, v4
  v_max_f32     v1, 0, v1
  v_mad_legacy_f32  v9, v3, s58, v16
  v_cndmask_b32  v16, 1.0, 0, vcc
  v_mul_legacy_f32  v15, s64, v11
  v_cmp_gt_f32  vcc, 0, v2
  v_max_f32     v4, 0, v6
  v_mad_legacy_f32  v6, v7, s59, v9
  v_mul_legacy_f32  v1, v1, v18
  v_mad_legacy_f32  v9, v5, s65, v15
  v_cndmask_b32  v15, 1.0, 0, vcc
  v_max_f32     v0, 0, v0
  v_log_f32     v1, v1
  v_mul_legacy_f32  v4, v4, v16
  v_mul_legacy_f32  v0, v0, v15
  s_buffer_load_dwordx4  s[24:27], s[68:71], 0x64
  v_log_f32     v4, v4
  v_log_f32     v0, v0
  s_buffer_load_dwordx16  s[44:59], s[68:71], 0x20
  v_mul_legacy_f32  v17, s60, v11
  v_mad_legacy_f32  v14, v5, s61, v17
  v_mul_legacy_f32  v17, v18, v22
  v_mul_legacy_f32  v1, s23, v1
  v_exp_f32     v1, v1
  v_mul_legacy_f32  v4, s23, v4
  v_mul_legacy_f32  v0, s23, v0
  v_mad_legacy_f32  v8, v3, s62, v14
  v_mul_legacy_f32  v18, v16, v10
  s_waitcnt     lgkmcnt(0)
  v_mul_legacy_f32  v14, s24, v11
  v_mul_legacy_f32  v19, s36, v17
  v_exp_f32     v4, v4
  v_exp_f32     v0, v0
  buffer_store_dword  v6, v0, s[0:3], s7 offset:48 glc slc
  v_mad_legacy_f32  v6, v7, s63, v8
  v_mad_legacy_f32  v8, v3, s66, v9
  v_mad_legacy_f32  v9, v5, s25, v14
  v_mad_legacy_f32  v14, v18, s40, v19
  v_mul_legacy_f32  v16, v15, v2
  v_mul_legacy_f32  v19, s37, v17
  buffer_store_dword  v6, v0, s[0:3], s7 offset:52 glc slc
  v_mad_legacy_f32  v6, v7, s67, v8
  v_mad_legacy_f32  v8, v3, s26, v9
  v_mad_legacy_f32  v9, v16, s44, v14
  v_mad_legacy_f32  v14, v18, s41, v19
  v_mul_legacy_f32  v15, s38, v17
  buffer_store_dword  v6, v0, s[0:3], s7 offset:56 glc slc
  v_mad_legacy_f32  v6, v7, s27, v8
  v_mul_legacy_f32  v8, s12, v9
  v_mad_legacy_f32  v9, v16, s45, v14
  v_mad_legacy_f32  v14, v18, s42, v15
  buffer_store_dword  v6, v0, s[0:3], s7 offset:60 glc slc
  v_add_f32     v6, s16, v8
  v_mul_legacy_f32  v8, s13, v9
  v_mad_legacy_f32  v9, v16, s46, v14
  v_mul_legacy_f32  v1, v1, v22
  buffer_store_dword  v6, v0, s[0:3], s7 glc slc
  v_add_f32     v6, s17, v8
  v_mul_legacy_f32  v8, s14, v9
  v_mul_legacy_f32  v0, v0, v2
  v_mul_legacy_f32  v4, v4, v10
  v_mul_legacy_f32  v2, s49, v1
  v_mul_legacy_f32  v9, s48, v1
  v_mul_legacy_f32  v1, s50, v1
  v_mac_legacy_f32  v2, s53, v4
  buffer_store_dword  v6, v0, s[0:3], s7 offset:4 glc slc
  v_add_f32     v6, s18, v8
  v_mad_legacy_f32  v8, v4, s52, v9
  v_mac_legacy_f32  v1, s54, v4
  v_mul_legacy_f32  v4, s11, v7
  v_mul_legacy_f32  v5, s9, v5
  v_mac_legacy_f32  v2, s57, v0
  buffer_store_dword  v6, v0, s[0:3], s7 offset:8 glc slc
  v_mad_legacy_f32  v6, v0, s56, v8
  v_mad_legacy_f32  v0, v0, s58, v1
  v_mad_legacy_f32  v1, v11, s8, v5
  v_mad_legacy_f32  v3, v3, s10, v4
  v_mov_b32     v9, s15
  v_mul_legacy_f32  v6, s20, v6
  v_mul_legacy_f32  v2, s21, v2
  v_mul_legacy_f32  v0, s22, v0
  v_add_f32     v1, v1, v3 clamp
  buffer_store_dword  v9, v0, s[0:3], s7 offset:12 glc slc
  buffer_store_dword  v6, v0, s[0:3], s7 offset:16 glc slc
  buffer_store_dword  v2, v0, s[0:3], s7 offset:20 glc slc
  buffer_store_dword  v0, v0, s[0:3], s7 offset:24 glc slc
  buffer_store_dword  v1, v0, s[0:3], s7 offset:28 glc slc
  buffer_store_dword  v12, v0, s[0:3], s7 offset:32 glc slc
  buffer_store_dword  v13, v0, s[0:3], s7 offset:36 glc slc
  s_endpgm      
end


NumVGPR=52,NumSGPR=74,LDS=0,Scratch=0,Occpancy=4

// Shader Type               : (VS)
// Shader Hw Stage           : (LS)

// Shader Instructions:
shader main
  asic(CI)
  type(VS)
  s_swappc_b64  s[0:1], s[0:1]
  s_waitcnt     vmcnt(0)
  v_mul_lo_i32  v0, v16, 3
  s_or_b32      s53, s4, 0x00100000 // wrscc
  s_mov_b32     s52, s3
  s_mov_b32     s54, -1
  s_mov_b32     s55, 0x00024fac
  v_add_i32     v2, vcc, 26, v0
  buffer_load_dwordx4  v[24:27], v2, s[52:55], 0 idxen
  v_mad_f32     v2, v8, 2.0, -1.0
  v_add_i32     v8, vcc, 27, v0
  v_mad_f32     v3, v9, 2.0, -1.0
  v_mad_f32     v32, v10, 2.0, -1.0
  buffer_load_dwordx4  v[8:11], v8, s[52:55], 0 idxen
  v_mul_lo_i32  v33, v17, 3
  v_add_i32     v0, vcc, 28, v0
  v_mul_lo_i32  v19, v19, 3
  v_mul_lo_i32  v18, v18, 3
  v_add_i32     v28, vcc, 26, v33
  buffer_load_dwordx4  v[14:17], v0, s[52:55], 0 idxen
  buffer_load_dwordx4  v[28:31], v28, s[52:55], 0 idxen
  s_buffer_load_dwordx16  s[0:15], s[52:55], 0x00
  s_buffer_load_dwordx16  s[36:51], s[52:55], 0x10
  s_buffer_load_dwordx4  s[32:35], s[52:55], 0x30
  s_buffer_load_dwordx16  s[16:31], s[52:55], 0x38
  s_mov_b32     m0, -1
  s_waitcnt     vmcnt(3)
  v_mul_legacy_f32  v0, v24, v20
  v_mul_legacy_f32  v24, v25, v20
  v_mul_legacy_f32  v25, v26, v20
  v_mul_legacy_f32  v26, v27, v20
  v_add_i32     v27, vcc, 27, v33
  s_waitcnt     vmcnt(2)
  v_mul_legacy_f32  v34, v8, v20
  v_mul_legacy_f32  v35, v9, v20
  v_mul_legacy_f32  v36, v10, v20
  v_mul_legacy_f32  v37, v11, v20
  buffer_load_dwordx4  v[8:11], v27, s[52:55], 0 idxen
  v_add_i32     v27, vcc, 26, v18
  s_waitcnt     vmcnt(2)
  v_mul_legacy_f32  v38, v14, v20
  v_add_i32     v14, vcc, 28, v33
  s_waitcnt     vmcnt(1)
  v_mac_legacy_f32  v24, v29, v21
  v_mac_legacy_f32  v25, v30, v21
  v_mul_legacy_f32  v39, v15, v20
  v_add_i32     v33, vcc, 26, v19
  v_mac_legacy_f32  v0, v28, v21
  v_mac_legacy_f32  v26, v31, v21
  s_waitcnt     vmcnt(0)
  v_mad_legacy_f32  v29, v8, v21, v34
  v_mad_legacy_f32  v30, v9, v21, v35
  v_add_i32     v34, vcc, 27, v19
  v_add_i32     v35, vcc, 28, v19
  v_mul_legacy_f32  v19, v16, v20
  v_mul_legacy_f32  v20, v17, v20
  buffer_load_dwordx4  v[14:17], v14, s[52:55], 0 idxen
  v_mad_legacy_f32  v28, v11, v21, v37
  v_mad_legacy_f32  v31, v10, v21, v36
  buffer_load_dwordx4  v[8:11], v27, s[52:55], 0 idxen
  v_add_i32     v27, vcc, 27, v18
  v_add_i32     v18, vcc, 28, v18
  s_waitcnt     vmcnt(1)
  v_mad_legacy_f32  v36, v14, v21, v38
  v_mad_legacy_f32  v37, v15, v21, v39
  v_mad_legacy_f32  v38, v16, v21, v19
  v_mad_legacy_f32  v39, v17, v21, v20
  buffer_load_dwordx4  v[14:17], v27, s[52:55], 0 idxen
  buffer_load_dwordx4  v[18:21], v18, s[52:55], 0 idxen
  s_waitcnt     vmcnt(2)
  v_mac_legacy_f32  v0, v8, v22
  v_mac_legacy_f32  v25, v10, v22
  v_mac_legacy_f32  v26, v11, v22
  s_waitcnt     vmcnt(1)
  v_mad_legacy_f32  v27, v14, v22, v29
  v_mad_legacy_f32  v14, v9, v22, v24
  buffer_load_dwordx4  v[8:11], v33, s[52:55], 0 idxen
  v_mad_legacy_f32  v24, v15, v22, v30
  v_mad_legacy_f32  v29, v16, v22, v31
  v_mac_legacy_f32  v28, v17, v22
  s_waitcnt     vmcnt(1)
  v_mad_legacy_f32  v30, v18, v22, v36
  v_mad_legacy_f32  v31, v19, v22, v37
  v_mad_legacy_f32  v33, v20, v22, v38
  v_mad_legacy_f32  v22, v21, v22, v39
  buffer_load_dwordx4  v[18:21], v35, s[52:55], 0 idxen
  s_waitcnt     vmcnt(1)
  v_mad_legacy_f32  v9, v9, v23, v14
  buffer_load_dwordx4  v[14:17], v34, s[52:55], 0 idxen
  v_mac_legacy_f32  v0, v8, v23
  v_mad_legacy_f32  v10, v10, v23, v25
  v_mad_legacy_f32  v11, v11, v23, v26
  s_waitcnt     vmcnt(1)
  v_mad_legacy_f32  v8, v21, v23, v22
  v_mul_legacy_f32  v21, v0, v4
  v_mac_legacy_f32  v21, v5, v9
  v_mac_legacy_f32  v21, v6, v10
  v_mac_legacy_f32  v21, v7, v11
  v_mad_legacy_f32  v19, v19, v23, v31
  v_mad_legacy_f32  v20, v20, v23, v33
  v_mul_legacy_f32  v0, v0, v2
  v_mac_legacy_f32  v0, v3, v9
  v_mac_legacy_f32  v0, v32, v10
  s_waitcnt     vmcnt(0)
  v_mad_legacy_f32  v11, v14, v23, v27
  v_mad_legacy_f32  v15, v15, v23, v24
  v_mul_legacy_f32  v14, v11, v4
  v_mad_legacy_f32  v16, v16, v23, v29
  v_mac_legacy_f32  v14, v5, v15
  v_mad_legacy_f32  v17, v17, v23, v28
  v_mac_legacy_f32  v14, v6, v16
  v_mac_legacy_f32  v14, v7, v17
  v_mad_legacy_f32  v17, v18, v23, v30
  v_mul_legacy_f32  v4, v17, v4
  v_mac_legacy_f32  v4, v5, v19
  v_mac_legacy_f32  v4, v6, v20
  s_waitcnt     lgkmcnt(0)
  v_mul_legacy_f32  v5, s24, v21
  v_mad_legacy_f32  v18, v7, v8, v4
  v_mul_legacy_f32  v4, v11, v2
  v_mul_legacy_f32  v2, v17, v2
  v_mac_legacy_f32  v4, v3, v15
  v_mac_legacy_f32  v2, v3, v19
  v_mul_legacy_f32  v3, s20, v21
  v_mac_legacy_f32  v5, s25, v14
  v_mul_legacy_f32  v6, s28, v21
  v_mac_legacy_f32  v3, s21, v14
  v_mac_legacy_f32  v5, s26, v18
  v_mac_legacy_f32  v6, s29, v14
  v_mac_legacy_f32  v3, s22, v18
  v_mac_legacy_f32  v5, s27, v7
  v_mac_legacy_f32  v6, s30, v18
  v_mac_legacy_f32  v3, s23, v7
  v_mac_legacy_f32  v6, s31, v7
  v_sub_f32     v5, s33, v5
  v_sub_f32     v3, s32, v3
  v_mul_legacy_f32  v8, v5, v5
  v_sub_f32     v6, s34, v6
  s_buffer_load_dwordx16  s[20:35], s[52:55], 0x4c
  v_mac_legacy_f32  v8, v3, v3
  v_mac_legacy_f32  v8, v6, v6
  v_rsq_f32     v8, v8
  v_mac_legacy_f32  v4, v32, v16
  s_waitcnt     lgkmcnt(0)
  v_mul_legacy_f32  v10, s24, v0
  v_mul_legacy_f32  v9, s20, v0
  v_mul_legacy_f32  v0, s28, v0
  v_mac_legacy_f32  v2, v32, v20
  v_mac_legacy_f32  v10, s25, v4
  v_mac_legacy_f32  v9, s21, v4
  v_mac_legacy_f32  v0, s29, v4
  v_mad_legacy_f32  v11, v5, v8, -s13
  v_mac_legacy_f32  v10, s26, v2
  v_mac_legacy_f32  v9, s22, v2
  v_mac_legacy_f32  v0, s30, v2
  v_mul_legacy_f32  v2, v10, v10
  v_mad_legacy_f32  v4, v3, v8, -s12
  v_mul_legacy_f32  v16, v11, v11
  v_mac_legacy_f32  v2, v9, v9
  v_mad_legacy_f32  v15, v6, v8, -s14
  v_mac_legacy_f32  v16, v4, v4
  v_mac_legacy_f32  v2, v0, v0
  v_mac_legacy_f32  v16, v15, v15
  v_rsq_f32     v2, v2
  v_rsq_f32     v16, v16
  v_mad_legacy_f32  v17, v5, v8, -s37
  v_mad_legacy_f32  v5, v5, v8, -s41
  v_mul_legacy_f32  v9, v2, v9
  v_mad_legacy_f32  v19, v6, v8, -s38
  v_mul_legacy_f32  v10, v2, v10
  v_mul_legacy_f32  v0, v2, v0
  v_mul_legacy_f32  v2, v16, v11
  v_mad_legacy_f32  v11, v3, v8, -s36
  v_mul_legacy_f32  v20, v17, v17
  v_mad_legacy_f32  v3, v3, v8, -s40
  v_mad_legacy_f32  v6, v6, v8, -s42
  v_mul_legacy_f32  v8, v5, v5
  v_mac_legacy_f32  v8, v3, v3
  v_mac_legacy_f32  v20, v11, v11
  v_mac_legacy_f32  v20, v19, v19
  v_mac_legacy_f32  v8, v6, v6
  v_rsq_f32     v20, v20
  v_rsq_f32     v8, v8
  v_mul_legacy_f32  v4, v4, v9
  v_mul_legacy_f32  v22, s12, v9
  v_mul_legacy_f32  v4, v4, v16
  v_mad_legacy_f32  v22, -s13, v10, -v22
  v_mul_legacy_f32  v23, s36, v9
  v_mul_legacy_f32  v3, v3, v9
  v_mad_legacy_f32  v2, v2, v10, v4
  v_mul_legacy_f32  v4, v11, v9
  v_mad_legacy_f32  v23, -s37, v10, -v23
  v_mul_legacy_f32  v24, s40, v9
  v_mac_legacy_f32  v22, v0, -s14
  v_mul_legacy_f32  v17, v20, v17
  v_mul_legacy_f32  v4, v4, v20
  v_mul_legacy_f32  v5, v8, v5
  v_mul_legacy_f32  v3, v3, v8
  v_mad_legacy_f32  v24, -s41, v10, -v24
  v_mul_legacy_f32  v15, v16, v15
  v_mul_legacy_f32  v19, v20, v19
  v_mac_legacy_f32  v4, v17, v10
  v_mul_legacy_f32  v6, v8, v6
  v_mac_legacy_f32  v23, v0, -s38
  v_mac_legacy_f32  v3, v5, v10
  v_cmp_gt_f32  vcc, 0, v22
  v_mac_legacy_f32  v2, v15, v0
  v_mac_legacy_f32  v4, v19, v0
  v_mac_legacy_f32  v24, v0, -s42
  v_mad_legacy_f32  v0, v6, v0, v3
  v_cndmask_b32  v3, 1.0, 0, vcc
  v_cmp_gt_f32  vcc, 0, v23
  v_cndmask_b32  v5, 1.0, 0, vcc
  v_cmp_gt_f32  vcc, 0, v24
  v_cndmask_b32  v6, 1.0, 0, vcc
  v_max_f32     v0, 0, v0
  v_mul_legacy_f32  v0, v0, v6
  v_max_f32     v2, 0, v2
  v_max_f32     v4, 0, v4
  v_mul_legacy_f32  v2, v2, v3
  v_log_f32     v0, v0
  v_mul_legacy_f32  v8, v3, v22
  v_mul_legacy_f32  v3, v4, v5
  v_log_f32     v3, v3
  v_log_f32     v2, v2
  v_mul_legacy_f32  v9, v5, v23
  v_mul_legacy_f32  v4, s44, v8
  v_mul_legacy_f32  v5, s45, v8
  v_mul_legacy_f32  v8, s46, v8
  v_mul_legacy_f32  v0, s11, v0
  v_mac_legacy_f32  v4, s48, v9
  v_mac_legacy_f32  v5, s49, v9
  v_mac_legacy_f32  v8, s50, v9
  s_buffer_load_dwordx16  s[36:51], s[52:55], 0x20
  v_mul_legacy_f32  v3, s11, v3
  v_exp_f32     v0, v0
  v_mul_legacy_f32  v2, s11, v2
  v_exp_f32     v3, v3
  v_exp_f32     v2, v2
  v_mul_legacy_f32  v6, v6, v24
  v_mul_legacy_f32  v11, v0, v24
  s_waitcnt     lgkmcnt(0)
  v_mad_legacy_f32  v0, v6, s36, v4
  v_mul_legacy_f32  v10, v3, v23
  v_mad_legacy_f32  v3, v6, s37, v5
  v_mul_legacy_f32  v0, s0, v0
  v_mul_legacy_f32  v9, v2, v22
  v_mad_legacy_f32  v4, v6, s38, v8
  v_add_f32     v2, s4, v0
  v_mul_legacy_f32  v0, s1, v3
  v_mul_legacy_f32  v5, s41, v9
  v_mul_legacy_f32  v6, s42, v9
  v_add_f32     v3, s5, v0
  v_mul_legacy_f32  v0, s2, v4
  v_mul_legacy_f32  v4, s40, v9
  v_mac_legacy_f32  v4, s44, v10
  v_mac_legacy_f32  v5, s45, v10
  v_mac_legacy_f32  v6, s46, v10
  v_mac_legacy_f32  v4, s48, v11
  v_mac_legacy_f32  v5, s49, v11
  v_mac_legacy_f32  v6, s50, v11
  v_add_f32     v0, s6, v0
  v_mul_legacy_f32  v4, s8, v4
  v_mul_legacy_f32  v5, s9, v5
  v_mul_legacy_f32  v6, s10, v6
  s_buffer_load_dwordx8  s[4:11], s[52:55], 0x5c
  s_buffer_load_dwordx4  s[12:15], s[52:55], 0x64
  v_mul_legacy_f32  v8, s32, v21
  v_mac_legacy_f32  v8, s33, v14
  v_mac_legacy_f32  v8, s34, v18
  s_waitcnt     lgkmcnt(0)
  v_mul_legacy_f32  v9, s4, v21
  v_mul_legacy_f32  v10, s8, v21
  v_mul_legacy_f32  v11, s12, v21
  v_mac_legacy_f32  v9, s5, v14
  v_mac_legacy_f32  v10, s9, v14
  v_mac_legacy_f32  v11, s13, v14
  v_mac_legacy_f32  v9, s6, v18
  v_mac_legacy_f32  v10, s10, v18
  v_mac_legacy_f32  v11, s14, v18
  v_mul_legacy_f32  v14, s17, v14
  v_mac_legacy_f32  v8, s35, v7
  v_mac_legacy_f32  v9, s7, v7
  v_mac_legacy_f32  v10, s11, v7
  v_mac_legacy_f32  v11, s15, v7
  v_mul_legacy_f32  v7, s19, v7
  v_mac_legacy_f32  v14, s16, v21
  v_mac_legacy_f32  v7, s18, v18
  v_add_f32     v7, v14, v7 clamp
  v_lshlrev_b32  v14, 6, v1
  v_mov_b32     v1, s3
  ds_write2_b64  v14, v[8:9], v[10:11] offset0:6 offset1:7
  ds_write2_b64  v14, v[2:3], v[0:1] offset1:1
  ds_write2_b64  v14, v[4:5], v[6:7] offset0:2 offset1:3
  ds_write_b64  v14, v[12:13] offset:32
  s_endpgm      
end


NumVGPR=40,NumSGPR=58,LDS=0,Scratch=0,Occpancy=6


#endif

const unsigned char SkinnedEffect_VSSkinnedVertexLightingFourBonesBn[] = {
  0x44, 0x58, 0x42, 0x43, 0xe7, 0x65, 0xe7, 0x75, 0xdd, 0x29, 0x28, 0x41,
  0xc3, 0xdd, 0x66, 0xa0, 0x49, 0x18, 0xb0, 0xaa, 0x01, 0x00, 0x00, 0x00,
  0xc4, 0x2c, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00,
  0x50, 0x00, 0x00, 0x00, 0x38, 0x01, 0x00, 0x00, 0xe4, 0x01, 0x00, 0x00,
  0xa8, 0x03, 0x00, 0x00, 0x2c, 0x04, 0x00, 0x00, 0xd0, 0x04, 0x00, 0x00,
  0xec, 0x04, 0x00, 0x00, 0x53, 0x46, 0x49, 0x30, 0x08, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x49, 0x53, 0x47, 0x31,
  0xe0, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xa8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x0f, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xb4, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x07, 0x07, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xbb, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x03, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xc4, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x0f, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xd1, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x0f, 0x0f, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x53, 0x56, 0x5f, 0x50, 0x6f, 0x73, 0x69, 0x74,
  0x69, 0x6f, 0x6e, 0x00, 0x4e, 0x4f, 0x52, 0x4d, 0x41, 0x4c, 0x00, 0x54,
  0x45, 0x58, 0x43, 0x4f, 0x4f, 0x52, 0x44, 0x00, 0x42, 0x4c, 0x45, 0x4e,
  0x44, 0x49, 0x4e, 0x44, 0x49, 0x43, 0x45, 0x53, 0x00, 0x42, 0x4c, 0x45,
  0x4e, 0x44, 0x57, 0x45, 0x49, 0x47, 0x48, 0x54, 0x00, 0x00, 0x00, 0x00,
  0x4f, 0x53, 0x47, 0x31, 0xa4, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00,
  0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x88, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x88, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x8e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x03, 0x0c, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x97, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x43, 0x4f, 0x4c, 0x4f, 0x52, 0x00, 0x54, 0x45, 0x58, 0x43, 0x4f, 0x4f,
  0x52, 0x44, 0x00, 0x53, 0x56, 0x5f, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69,
  0x6f, 0x6e, 0x00, 0x00, 0x50, 0x53, 0x56, 0x30, 0xbc, 0x01, 0x00, 0x00,
  0x34, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xff, 0xff, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x05, 0x04, 0x00, 0x05,
  0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x4b, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x18, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x70, 0x00, 0x00, 0x00, 0x00, 0x53, 0x56, 0x5f,
  0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x00, 0x4e, 0x4f, 0x52,
  0x4d, 0x41, 0x4c, 0x00, 0x54, 0x45, 0x58, 0x43, 0x4f, 0x4f, 0x52, 0x44,
  0x00, 0x42, 0x4c, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x44, 0x49, 0x43, 0x45,
  0x53, 0x00, 0x42, 0x4c, 0x45, 0x4e, 0x44, 0x57, 0x45, 0x49, 0x47, 0x48,
  0x54, 0x00, 0x43, 0x4f, 0x4c, 0x4f, 0x52, 0x00, 0x43, 0x4f, 0x4c, 0x4f,
  0x52, 0x00, 0x54, 0x45, 0x58, 0x43, 0x4f, 0x4f, 0x52, 0x44, 0x00, 0x56,
  0x53, 0x53, 0x6b, 0x69, 0x6e, 0x6e, 0x65, 0x64, 0x56, 0x65, 0x72, 0x74,
  0x65, 0x78, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x46, 0x6f,
  0x75, 0x72, 0x42, 0x6f, 0x6e, 0x65, 0x73, 0x42, 0x6e, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x10, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x44, 0x00, 0x03, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x43, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x02, 0x42, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x03, 0x44, 0x00, 0x01, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x04, 0x44, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x36, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x44, 0x00,
  0x03, 0x02, 0x00, 0x00, 0x3c, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x01, 0x01, 0x44, 0x00, 0x03, 0x02, 0x00, 0x00, 0x42, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x02, 0x42, 0x00, 0x03, 0x02, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x03, 0x44, 0x03,
  0x03, 0x04, 0x00, 0x00, 0xf0, 0xf0, 0x00, 0x00, 0xf0, 0xf0, 0x00, 0x00,
  0xf0, 0xf0, 0x00, 0x00, 0xf0, 0xf0, 0x00, 0x00, 0x77, 0x00, 0x00, 0x00,
  0x77, 0x00, 0x00, 0x00, 0x77, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xf7, 0xf0, 0x00, 0x00, 0xf7, 0xf0, 0x00, 0x00,
  0xf7, 0xf0, 0x00, 0x00, 0xf7, 0xf0, 0x00, 0x00, 0xf7, 0xf0, 0x00, 0x00,
  0xf7, 0xf0, 0x00, 0x00, 0xf7, 0xf0, 0x00, 0x00, 0xf7, 0xf0, 0x00, 0x00,
  0x52, 0x54, 0x53, 0x30, 0x7c, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x7c, 0x00, 0x00, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x05, 0x00, 0x00, 0x00, 0x44, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x05, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x4c, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00,
  0x68, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff,
  0x49, 0x4c, 0x44, 0x4e, 0x9c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x95, 0x00,
  0x43, 0x3a, 0x5c, 0x55, 0x73, 0x65, 0x72, 0x73, 0x5c, 0x6d, 0x61, 0x72,
  0x63, 0x75, 0x5c, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x73,
  0x5c, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x58, 0x54, 0x4b, 0x31, 0x32,
  0x2d, 0x6d, 0x61, 0x69, 0x6e, 0x5c, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74,
  0x58, 0x54, 0x4b, 0x31, 0x32, 0x2d, 0x6d, 0x61, 0x69, 0x6e, 0x5c, 0x53,
  0x72, 0x63, 0x2f, 0x53, 0x68, 0x61, 0x64, 0x65, 0x72, 0x73, 0x2f, 0x43,
  0x6f, 0x6d, 0x70, 0x69, 0x6c, 0x65, 0x64, 0x5c, 0x58, 0x62, 0x6f, 0x78,
  0x47, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x58, 0x62, 0x6f, 0x78, 0x4f, 0x6e,
  0x65, 0x53, 0x6b, 0x69, 0x6e, 0x6e, 0x65, 0x64, 0x45, 0x66, 0x66, 0x65,
  0x63, 0x74, 0x5f, 0x56, 0x53, 0x53, 0x6b, 0x69, 0x6e, 0x6e, 0x65, 0x64,
  0x56, 0x65, 0x72, 0x74, 0x65, 0x78, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69,
  0x6e, 0x67, 0x46, 0x6f, 0x75, 0x72, 0x42, 0x6f, 0x6e, 0x65, 0x73, 0x42,
  0x6e, 0x2e, 0x70, 0x64, 0x62, 0x00, 0x00, 0x00, 0x48, 0x41, 0x53, 0x48,
  0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc2, 0x44, 0x43, 0x70,
  0xef, 0xbd, 0xd6, 0x80, 0x45, 0xe7, 0x63, 0xcb, 0x2c, 0x97, 0xe9, 0x22,
  0x44, 0x58, 0x49, 0x4c, 0xd0, 0x27, 0x00, 0x00, 0x60, 0x00, 0x01, 0x00,
  0xf4, 0x09, 0x00, 0x00, 0x44, 0x58, 0x49, 0x4c, 0x00, 0x01, 0x00, 0x00,
  0x94, 0x00, 0x00, 0x00, 0xe8, 0x14, 0x00, 0x00, 0x58, 0x44, 0x41, 0x54,
  0x08, 0x00, 0x00, 0x00, 0x24, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00,
  0x84, 0x00, 0x00, 0x00, 0x00, 0x15, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00,
  0x84, 0x15, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x94, 0x15, 0x00, 0x00, 0xaf, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x44, 0x1b, 0x00, 0x00, 0xed, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x34, 0x21, 0x00, 0x00, 0x8b, 0x05, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0xc0, 0x26, 0x00, 0x00, 0xb0, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00,
  0x70, 0x27, 0x00, 0x00, 0x4a, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00,
  0xbc, 0x27, 0x00, 0x00, 0x11, 0x00, 0x00, 0x00, 0x60, 0x00, 0x01, 0x00,
  0x40, 0x05, 0x00, 0x00, 0x44, 0x58, 0x49, 0x4c, 0x00, 0x01, 0x00, 0x00,
  0x10, 0x00, 0x00, 0x00, 0xe8, 0x14, 0x00, 0x00, 0x42, 0x43, 0xc0, 0xde,
  0x21, 0x0c, 0x00, 0x00, 0x37, 0x05, 0x00, 0x00, 0x0b, 0x82, 0x20, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x13, 0x00, 0x00, 0x00, 0x07, 0x81, 0x23, 0x91,
  0x41, 0xc8, 0x04, 0x49, 0x06, 0x10, 0x32, 0x39, 0x92, 0x01, 0x84, 0x0c,
  0x25, 0x05, 0x08, 0x19, 0x1e, 0x04, 0x8b, 0x62, 0x80, 0x18, 0x45, 0x02,
  0x42, 0x92, 0x0b, 0x42, 0xc4, 0x10, 0x32, 0x14, 0x38, 0x08, 0x18, 0x4b,
  0x0a, 0x32, 0x62, 0x88, 0x48, 0x90, 0x14, 0x20, 0x43, 0x46, 0x88, 0xa5,
  0x00, 0x19, 0x32, 0x42, 0xe4, 0x48, 0x0e, 0x90, 0x11, 0x23, 0xc4, 0x50,
  0x41, 0x51, 0x81, 0x8c, 0xe1, 0x83, 0xe5, 0x8a, 0x04, 0x31, 0x46, 0x06,
  0x51, 0x18, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x1b, 0x8c, 0xe0, 0xff,
  0xff, 0xff, 0xff, 0x07, 0x40, 0x02, 0xa8, 0x0d, 0x84, 0xf0, 0xff, 0xff,
  0xff, 0xff, 0x03, 0x20, 0x6d, 0x30, 0x86, 0xff, 0xff, 0xff, 0xff, 0x1f,
  0x00, 0x09, 0xa8, 0x00, 0x49, 0x18, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x13, 0x82, 0x60, 0x42, 0x20, 0x4c, 0x08, 0x06, 0x00, 0x00, 0x00, 0x00,
  0x89, 0x20, 0x00, 0x00, 0x34, 0x00, 0x00, 0x00, 0x32, 0x22, 0x88, 0x09,
  0x20, 0x64, 0x85, 0x04, 0x13, 0x23, 0xa4, 0x84, 0x04, 0x13, 0x23, 0xe3,
  0x84, 0xa1, 0x90, 0x14, 0x12, 0x4c, 0x8c, 0x8c, 0x0b, 0x84, 0xc4, 0x4c,
  0x10, 0xa0, 0xc1, 0x08, 0x40, 0x09, 0x00, 0x0a, 0x66, 0x00, 0xe6, 0x08,
  0xc0, 0x60, 0x8e, 0x00, 0x29, 0xc6, 0x40, 0x10, 0x44, 0x41, 0x90, 0x51,
  0x0c, 0x82, 0x20, 0x88, 0x82, 0x20, 0xa4, 0x18, 0x00, 0x41, 0x10, 0xc5,
  0x40, 0x4a, 0x41, 0x06, 0x62, 0x18, 0x86, 0x61, 0x18, 0x88, 0x29, 0xc3,
  0x40, 0x0c, 0xe4, 0x14, 0x62, 0x20, 0x86, 0x81, 0xa0, 0xa2, 0x0c, 0xc4,
  0x30, 0x0c, 0xc3, 0x30, 0x0c, 0x03, 0x49, 0x47, 0x0d, 0x97, 0x3f, 0x61,
  0x0f, 0x21, 0xf9, 0xdc, 0x46, 0x15, 0x2b, 0x31, 0xf9, 0xc5, 0x6d, 0x23,
  0x62, 0x18, 0x86, 0x81, 0x8a, 0x7b, 0x86, 0xcb, 0x9f, 0xb0, 0x87, 0x90,
  0xfc, 0x10, 0x68, 0x86, 0x85, 0x40, 0x41, 0x55, 0x08, 0x8a, 0xb0, 0x08,
  0xba, 0x4a, 0x31, 0x10, 0xc3, 0x30, 0x50, 0x36, 0x47, 0x10, 0x14, 0xc3,
  0x22, 0x0a, 0x82, 0xd8, 0x88, 0x1b, 0x08, 0x18, 0x46, 0x20, 0x86, 0x61,
  0x84, 0x61, 0xc8, 0x01, 0x30, 0x09, 0xbe, 0x1c, 0xf8, 0x12, 0x69, 0xbc,
  0xea, 0x70, 0xa4, 0x69, 0x01, 0x30, 0x87, 0x9a, 0xfc, 0x14, 0x88, 0x00,
  0x86, 0x98, 0x88, 0x48, 0x42, 0xce, 0x07, 0x82, 0x43, 0x18, 0x86, 0x20,
  0xf8, 0x89, 0xa1, 0x48, 0x52, 0x99, 0x16, 0x04, 0x00, 0x00, 0x00, 0x00,
  0x13, 0x16, 0x72, 0xc0, 0x87, 0x74, 0x60, 0x87, 0x36, 0x68, 0x87, 0x79,
  0x68, 0x03, 0x7c, 0x10, 0x87, 0x38, 0xd8, 0xf0, 0x0a, 0xe5, 0xd0, 0x06,
  0xed, 0xa0, 0x07, 0xe5, 0xd0, 0x06, 0xf0, 0xa0, 0x07, 0x73, 0x20, 0x07,
  0x7a, 0x30, 0x07, 0x72, 0xd0, 0x06, 0xe9, 0x10, 0x07, 0x7a, 0x30, 0x07,
  0x72, 0xd0, 0x06, 0xe9, 0x80, 0x07, 0x7a, 0x30, 0x07, 0x72, 0xd0, 0x06,
  0xe9, 0x10, 0x07, 0x76, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x90, 0x0e,
  0x73, 0x20, 0x07, 0x7a, 0x30, 0x07, 0x72, 0xd0, 0x06, 0xe9, 0x60, 0x07,
  0x74, 0xa0, 0x07, 0x76, 0x40, 0x07, 0x6d, 0x60, 0x0e, 0x71, 0x60, 0x07,
  0x7a, 0x30, 0x07, 0x72, 0xd0, 0x06, 0xe6, 0x30, 0x07, 0x72, 0xa0, 0x07,
  0x73, 0x20, 0x07, 0x6d, 0x60, 0x0e, 0x76, 0x40, 0x07, 0x7a, 0x60, 0x07,
  0x74, 0xd0, 0x06, 0xee, 0x80, 0x07, 0x7a, 0x10, 0x07, 0x76, 0xa0, 0x07,
  0x73, 0x20, 0x07, 0x7a, 0x60, 0x07, 0x74, 0x30, 0xe4, 0x09, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0xc8, 0x63, 0x00,
  0x01, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x90, 0x07,
  0x01, 0x02, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x21,
  0x8f, 0x02, 0x04, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x43, 0x1e, 0x06, 0x08, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x86, 0x3c, 0x0e, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x0c, 0x79, 0x20, 0x20, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x18, 0xf2, 0x48, 0x40, 0x00, 0x04, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x30, 0xe4, 0xb9, 0x80, 0x00, 0x18, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0xc8, 0x93, 0x01, 0x01, 0x10, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x90, 0x87, 0x03, 0x02, 0x60,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x2c, 0x10, 0x00, 0x00,
  0x19, 0x00, 0x00, 0x00, 0x32, 0x1e, 0x98, 0x14, 0x19, 0x11, 0x4c, 0x90,
  0x8c, 0x09, 0x26, 0x47, 0xc6, 0x04, 0x43, 0x22, 0x4a, 0x60, 0x04, 0xa0,
  0x20, 0x8a, 0xa1, 0x80, 0x79, 0xca, 0xa0, 0x3c, 0xca, 0xa1, 0x08, 0x0a,
  0x81, 0x8a, 0x92, 0x18, 0x01, 0x28, 0x84, 0x32, 0x28, 0x82, 0x52, 0x20,
  0x73, 0x06, 0x80, 0xce, 0xb1, 0x2c, 0x0a, 0x82, 0x4f, 0x3e, 0x80, 0x4f,
  0x3e, 0x80, 0x4f, 0x3e, 0x80, 0x4f, 0x3e, 0xb8, 0x87, 0x7b, 0xb8, 0x07,
  0x00, 0x44, 0x40, 0x08, 0x00, 0xee, 0x93, 0x0f, 0xee, 0x93, 0x0f, 0xee,
  0x93, 0x0f, 0xee, 0x93, 0x0f, 0xee, 0x93, 0x0f, 0xee, 0x93, 0x0f, 0xee,
  0x93, 0x0f, 0xee, 0x93, 0x0f, 0x00, 0x00, 0x00, 0x79, 0x18, 0x00, 0x00,
  0x91, 0x00, 0x00, 0x00, 0x1a, 0x03, 0x4c, 0x90, 0x46, 0x02, 0x13, 0xc4,
  0x36, 0xf8, 0xfa, 0xc2, 0x12, 0x7a, 0xc2, 0xfa, 0x82, 0x2a, 0x92, 0xfa,
  0xa2, 0x42, 0x92, 0x2a, 0x0a, 0x22, 0xfa, 0x9a, 0x1a, 0x92, 0x0a, 0xa2,
  0x1a, 0x42, 0xfa, 0x9a, 0x4a, 0xd2, 0x2a, 0xfa, 0x62, 0x4a, 0x6a, 0x4a,
  0xa2, 0xfa, 0x4a, 0x72, 0xfa, 0x12, 0xca, 0xa2, 0x2a, 0x9a, 0x62, 0x00,
  0xb3, 0x41, 0x08, 0x04, 0x76, 0x64, 0x78, 0x63, 0x78, 0x62, 0x6f, 0x78,
  0x20, 0x32, 0x34, 0x31, 0x30, 0x2e, 0x32, 0x34, 0x31, 0x30, 0x2e, 0x31,
  0x31, 0x31, 0x31, 0x36, 0x2e, 0x31, 0x30, 0x37, 0x34, 0x31, 0x1b, 0x02,
  0x62, 0x82, 0x40, 0x2c, 0x13, 0x04, 0x82, 0xd9, 0x20, 0x18, 0xc7, 0x04,
  0x81, 0x68, 0x36, 0x08, 0x46, 0x42, 0xc1, 0x6e, 0x6e, 0x82, 0x40, 0x38,
  0x1b, 0x86, 0x85, 0x39, 0x26, 0x08, 0x66, 0xb0, 0x11, 0x98, 0x20, 0x10,
  0xcf, 0x06, 0xe4, 0x70, 0x9e, 0xe3, 0x30, 0x20, 0x60, 0x43, 0x10, 0x6d,
  0x20, 0x00, 0x40, 0x02, 0x26, 0x08, 0x67, 0xc0, 0x6d, 0x08, 0xa8, 0x09,
  0x82, 0x00, 0x50, 0x0c, 0xac, 0xa6, 0xa6, 0xd6, 0xd2, 0xdc, 0xdc, 0xca,
  0xc8, 0xac, 0xca, 0xe4, 0xe8, 0xca, 0xf0, 0x98, 0xd2, 0xce, 0xd0, 0xe8,
  0xd2, 0xdc, 0xce, 0x8c, 0xde, 0xea, 0xe4, 0x84, 0xde, 0xdc, 0xca, 0xe6,
  0x84, 0xdc, 0xb8, 0x4c, 0x59, 0x7d, 0x41, 0xbd, 0xcd, 0xa5, 0xd1, 0xa5,
  0xbd, 0xb9, 0x4d, 0x10, 0x8a, 0x6a, 0x82, 0x50, 0x58, 0x1b, 0x82, 0x63,
  0x82, 0x50, 0x5c, 0x13, 0x04, 0x02, 0x9a, 0x20, 0x10, 0xd1, 0x06, 0xa1,
  0xf3, 0x36, 0x2c, 0x07, 0x96, 0x69, 0x9b, 0x66, 0x70, 0x87, 0xf6, 0xd1,
  0x70, 0x7a, 0x92, 0x6a, 0x0a, 0x62, 0x9a, 0x20, 0x14, 0xd8, 0x04, 0x81,
  0x90, 0x36, 0x08, 0xdd, 0x18, 0x6c, 0x58, 0x8c, 0x30, 0xc8, 0xb4, 0x4d,
  0x33, 0xc4, 0xc0, 0xd0, 0xc8, 0x60, 0x82, 0x40, 0x4c, 0x44, 0xa8, 0x8a,
  0xb0, 0x86, 0x9e, 0x9e, 0xa4, 0x88, 0x26, 0x08, 0x45, 0xb6, 0x41, 0xe8,
  0xba, 0x0d, 0x8b, 0x19, 0x9c, 0x41, 0xa6, 0x6d, 0x9a, 0x81, 0x06, 0x66,
  0xa0, 0xa5, 0x01, 0x19, 0x21, 0xa6, 0x22, 0x27, 0xa2, 0x24, 0x27, 0xa2,
  0xa4, 0xa1, 0xa2, 0xa9, 0x09, 0x42, 0xa1, 0x6d, 0x58, 0xba, 0x35, 0x60,
  0x03, 0x6d, 0xd3, 0x0c, 0xae, 0xd3, 0xbe, 0x09, 0x02, 0x41, 0x71, 0x11,
  0x62, 0x2a, 0x72, 0x22, 0xba, 0x2a, 0x4a, 0x3a, 0x42, 0xa2, 0xda, 0xb0,
  0xb8, 0xc1, 0x1b, 0x64, 0xda, 0xa6, 0x19, 0x9c, 0x1b, 0x68, 0xdf, 0x86,
  0x02, 0x0c, 0xca, 0x40, 0x0d, 0xda, 0x00, 0x0e, 0x58, 0x0c, 0x3d, 0x31,
  0x3d, 0x49, 0x6d, 0x58, 0x0e, 0x39, 0xc8, 0xb4, 0x0d, 0x0d, 0x0c, 0xee,
  0xd0, 0xbe, 0x0d, 0x81, 0xb1, 0x61, 0x31, 0xe4, 0x20, 0xd3, 0xe8, 0x00,
  0x0d, 0x0c, 0xce, 0xd0, 0xbe, 0x0d, 0x8b, 0x19, 0x9c, 0x41, 0xa6, 0x6d,
  0x68, 0x60, 0xa0, 0x81, 0x19, 0x68, 0x69, 0xb0, 0x61, 0xe9, 0xb0, 0x4c,
  0x0c, 0x36, 0xce, 0xe0, 0x3a, 0xed, 0xdb, 0x40, 0xcc, 0x41, 0x1d, 0xd8,
  0xc1, 0x1d, 0x6c, 0x18, 0xe2, 0x00, 0x0f, 0x80, 0x0d, 0x85, 0x75, 0xe5,
  0xc1, 0x04, 0xb4, 0xc2, 0x13, 0x7b, 0xc3, 0x73, 0x19, 0x7b, 0x6b, 0x83,
  0x4b, 0x63, 0x2b, 0x93, 0x73, 0x79, 0x83, 0xa3, 0x4b, 0x7b, 0x73, 0x9b,
  0x9b, 0x12, 0x08, 0x55, 0xd8, 0xd8, 0xec, 0xda, 0x5c, 0xd2, 0xc8, 0xca,
  0xdc, 0xe8, 0xa6, 0x04, 0x44, 0x15, 0x32, 0x3c, 0x17, 0xbb, 0x32, 0xb9,
  0xb9, 0xb4, 0x37, 0xb7, 0x29, 0xc1, 0xd1, 0x84, 0x0c, 0xcf, 0xc5, 0x2e,
  0x8c, 0xcd, 0xae, 0x4c, 0x6e, 0x4a, 0x90, 0xd4, 0x21, 0xc3, 0x73, 0x99,
  0x43, 0x0b, 0x23, 0x2b, 0x93, 0x6b, 0x7a, 0x23, 0x2b, 0x63, 0x9b, 0x12,
  0x30, 0x65, 0xc8, 0xf0, 0x5c, 0xe4, 0xca, 0xe6, 0xde, 0xea, 0xe4, 0xc6,
  0xca, 0xe6, 0xa6, 0x04, 0x52, 0x1d, 0x32, 0x3c, 0x17, 0xbb, 0xb4, 0xb2,
  0xbb, 0x24, 0xb2, 0x29, 0xba, 0x30, 0xba, 0xb2, 0x29, 0x01, 0x55, 0x87,
  0x0c, 0xcf, 0xa5, 0xcc, 0x8d, 0x4e, 0x2e, 0x0f, 0xea, 0x2d, 0xcd, 0x8d,
  0x6e, 0x6e, 0x4a, 0x90, 0x07, 0x00, 0x00, 0x00, 0x79, 0x18, 0x00, 0x00,
  0x50, 0x00, 0x00, 0x00, 0x33, 0x08, 0x80, 0x1c, 0xc4, 0xe1, 0x1c, 0x66,
  0x14, 0x01, 0x3d, 0x88, 0x43, 0x38, 0x84, 0xc3, 0x8c, 0x42, 0x80, 0x07,
  0x79, 0x78, 0x07, 0x73, 0x98, 0x71, 0x0c, 0xe6, 0x00, 0x0f, 0xed, 0x10,
  0x0e, 0xf4, 0x80, 0x0e, 0x33, 0x0c, 0x42, 0x1e, 0xc2, 0xc1, 0x1d, 0xce,
  0xa1, 0x1c, 0x66, 0x30, 0x05, 0x3d, 0x88, 0x43, 0x38, 0x84, 0x83, 0x1b,
  0xcc, 0x03, 0x3d, 0xc8, 0x43, 0x3d, 0x8c, 0x03, 0x3d, 0xcc, 0x78, 0x8c,
  0x74, 0x70, 0x07, 0x7b, 0x08, 0x07, 0x79, 0x48, 0x87, 0x70, 0x70, 0x07,
  0x7a, 0x70, 0x03, 0x76, 0x78, 0x87, 0x70, 0x20, 0x87, 0x19, 0xcc, 0x11,
  0x0e, 0xec, 0x90, 0x0e, 0xe1, 0x30, 0x0f, 0x6e, 0x30, 0x0f, 0xe3, 0xf0,
  0x0e, 0xf0, 0x50, 0x0e, 0x33, 0x10, 0xc4, 0x1d, 0xde, 0x21, 0x1c, 0xd8,
  0x21, 0x1d, 0xc2, 0x61, 0x1e, 0x66, 0x30, 0x89, 0x3b, 0xbc, 0x83, 0x3b,
  0xd0, 0x43, 0x39, 0xb4, 0x03, 0x3c, 0xbc, 0x83, 0x3c, 0x84, 0x03, 0x3b,
  0xcc, 0xf0, 0x14, 0x76, 0x60, 0x07, 0x7b, 0x68, 0x07, 0x37, 0x68, 0x87,
  0x72, 0x68, 0x07, 0x37, 0x80, 0x87, 0x70, 0x90, 0x87, 0x70, 0x60, 0x07,
  0x76, 0x28, 0x07, 0x76, 0xf8, 0x05, 0x76, 0x78, 0x87, 0x77, 0x80, 0x87,
  0x5f, 0x08, 0x87, 0x71, 0x18, 0x87, 0x72, 0x98, 0x87, 0x79, 0x98, 0x81,
  0x2c, 0xee, 0xf0, 0x0e, 0xee, 0xe0, 0x0e, 0xf5, 0xc0, 0x0e, 0xec, 0x30,
  0x03, 0x62, 0xc8, 0xa1, 0x1c, 0xe4, 0xa1, 0x1c, 0xcc, 0xa1, 0x1c, 0xe4,
  0xa1, 0x1c, 0xdc, 0x61, 0x1c, 0xca, 0x21, 0x1c, 0xc4, 0x81, 0x1d, 0xca,
  0x61, 0x06, 0xd6, 0x90, 0x43, 0x39, 0xc8, 0x43, 0x39, 0x98, 0x43, 0x39,
  0xc8, 0x43, 0x39, 0xb8, 0xc3, 0x38, 0x94, 0x43, 0x38, 0x88, 0x03, 0x3b,
  0x94, 0xc3, 0x2f, 0xbc, 0x83, 0x3c, 0xfc, 0x82, 0x3b, 0xd4, 0x03, 0x3b,
  0xb0, 0xc3, 0x0c, 0xc4, 0x21, 0x07, 0x7c, 0x70, 0x03, 0x7a, 0x28, 0x87,
  0x76, 0x80, 0x87, 0x19, 0xca, 0xc3, 0x0e, 0xec, 0x60, 0x0f, 0xed, 0xe0,
  0x06, 0xec, 0xf0, 0x0e, 0xef, 0x00, 0x0f, 0x33, 0x22, 0x88, 0x1c, 0xf0,
  0xc1, 0x0d, 0xc8, 0x41, 0x1c, 0xce, 0xc1, 0x0d, 0xec, 0x21, 0x1c, 0xe4,
  0x81, 0x1d, 0xc2, 0x21, 0x1f, 0xde, 0xa1, 0x1e, 0xe8, 0x01, 0x00, 0x00,
  0x71, 0x20, 0x00, 0x00, 0x2f, 0x00, 0x00, 0x00, 0x06, 0x20, 0x06, 0x2f,
  0xcb, 0x2a, 0x48, 0xd3, 0x10, 0xc3, 0x4b, 0x44, 0x13, 0x71, 0x95, 0x88,
  0x71, 0x4c, 0x48, 0x63, 0x7c, 0x0e, 0x15, 0x6d, 0x4e, 0x43, 0x48, 0x5b,
  0x63, 0x06, 0xd0, 0x70, 0xf9, 0xce, 0xe3, 0x07, 0x48, 0x03, 0x44, 0x98,
  0x5f, 0xdc, 0xb6, 0x21, 0x6c, 0xc3, 0xe5, 0x3b, 0x8f, 0x2f, 0x04, 0x54,
  0x51, 0x10, 0x51, 0xe9, 0x00, 0x43, 0x49, 0x18, 0x80, 0x80, 0xf9, 0xc5,
  0x6d, 0x9b, 0x82, 0x34, 0x5c, 0xbe, 0xf3, 0xf8, 0x42, 0x44, 0x00, 0x13,
  0x11, 0x02, 0xcd, 0xb0, 0x10, 0x46, 0xe0, 0x0c, 0x97, 0xef, 0x3c, 0xfe,
  0xe0, 0x4c, 0xb7, 0x5f, 0xdc, 0xb6, 0x1d, 0x38, 0xc3, 0xe5, 0x3b, 0x8f,
  0x3f, 0x38, 0x13, 0xee, 0x17, 0xb7, 0x6d, 0x01, 0xd3, 0x70, 0xf9, 0xce,
  0xe3, 0x2f, 0x0e, 0x30, 0x88, 0xcd, 0x43, 0x4d, 0x7e, 0x71, 0xdb, 0x26,
  0x30, 0x0d, 0x97, 0xef, 0x3c, 0xfe, 0xe2, 0x00, 0x83, 0xd8, 0x3c, 0xd4,
  0xe4, 0x23, 0xb7, 0x6d, 0x03, 0xd5, 0x70, 0xf9, 0xce, 0xe3, 0x4b, 0x93,
  0x13, 0x11, 0x28, 0x35, 0x3d, 0xd4, 0xe4, 0x17, 0xb7, 0x6d, 0x09, 0xd2,
  0x70, 0xf9, 0xce, 0xe3, 0x4f, 0x44, 0x34, 0x21, 0x40, 0x84, 0xf9, 0xc5,
  0x6d, 0x5b, 0xc1, 0x33, 0x5c, 0xbe, 0xf3, 0xf8, 0x54, 0x03, 0x44, 0x98,
  0x5f, 0xdc, 0x36, 0x00, 0x61, 0x20, 0x00, 0x00, 0x61, 0x03, 0x00, 0x00,
  0x13, 0x04, 0x41, 0x2c, 0x10, 0x00, 0x00, 0x00, 0x14, 0x00, 0x00, 0x00,
  0xb4, 0x8d, 0x00, 0x50, 0x51, 0x02, 0x44, 0x14, 0x5c, 0x71, 0x14, 0x4c,
  0x71, 0x95, 0xdd, 0x0c, 0x40, 0x29, 0x94, 0x4c, 0xb9, 0x15, 0x4d, 0xd9,
  0x14, 0x4e, 0xa9, 0x94, 0x4b, 0x19, 0x95, 0x5c, 0x81, 0x94, 0x48, 0x61,
  0x94, 0x49, 0xa1, 0x94, 0x44, 0x51, 0x94, 0x45, 0xb1, 0xd0, 0x30, 0x46,
  0x00, 0x82, 0x20, 0x88, 0x7f, 0x63, 0x04, 0x20, 0x08, 0x82, 0xf8, 0x2f,
  0x8c, 0x11, 0x80, 0x20, 0x08, 0x82, 0x60, 0x30, 0x02, 0x30, 0x46, 0x00,
  0x82, 0x20, 0x08, 0x82, 0x02, 0x00, 0x00, 0x00, 0x23, 0x06, 0x09, 0x00,
  0x82, 0x60, 0xc0, 0xcd, 0xc1, 0x43, 0x06, 0x71, 0x10, 0x07, 0x60, 0x30,
  0x62, 0x90, 0x00, 0x20, 0x08, 0x06, 0x46, 0x1f, 0xa8, 0x81, 0x1a, 0xc8,
  0x01, 0x1a, 0x68, 0x23, 0x06, 0x09, 0x00, 0x82, 0x60, 0x60, 0xf8, 0xc1,
  0x1a, 0xac, 0xc1, 0x1c, 0x84, 0xc1, 0x36, 0x62, 0x90, 0x00, 0x20, 0x08,
  0x06, 0xc6, 0x1f, 0xb0, 0x01, 0x1b, 0xd0, 0xc1, 0x19, 0x70, 0x23, 0x06,
  0x09, 0x00, 0x82, 0x60, 0x60, 0x80, 0x42, 0x1b, 0xb4, 0x41, 0x1d, 0xa4,
  0x41, 0x37, 0x62, 0x90, 0x00, 0x20, 0x08, 0x06, 0x08, 0x28, 0xb8, 0x81,
  0x1c, 0xd8, 0x01, 0x1b, 0x78, 0x23, 0x06, 0x09, 0x00, 0x82, 0x60, 0x80,
  0x84, 0xc2, 0x1b, 0xcc, 0xc1, 0x1d, 0x94, 0xc1, 0x37, 0x62, 0x90, 0x00,
  0x20, 0x08, 0x06, 0x88, 0x28, 0xc0, 0x01, 0x1d, 0xe0, 0xc1, 0x1a, 0x80,
  0xc1, 0x88, 0x41, 0x02, 0x80, 0x20, 0x18, 0x20, 0xa3, 0x10, 0x07, 0x75,
  0x90, 0x07, 0x6d, 0x10, 0x06, 0x23, 0x06, 0x09, 0x00, 0x82, 0x60, 0x60,
  0x94, 0x82, 0x1c, 0xcc, 0x81, 0x1e, 0xc0, 0x81, 0x18, 0x8c, 0x18, 0x24,
  0x00, 0x08, 0x82, 0x81, 0x61, 0x0a, 0x73, 0x40, 0x07, 0x7b, 0x90, 0x06,
  0x63, 0x30, 0x62, 0x90, 0x00, 0x20, 0x08, 0x06, 0xc6, 0x29, 0xd0, 0x41,
  0x1f, 0xf0, 0x81, 0x1c, 0x90, 0xc1, 0x88, 0x41, 0x02, 0x80, 0x20, 0x18,
  0x18, 0xa8, 0x50, 0x07, 0x7e, 0xd0, 0x07, 0x6b, 0x50, 0x06, 0x23, 0x06,
  0x09, 0x00, 0x82, 0x60, 0x60, 0xa4, 0x82, 0x1d, 0xfc, 0x81, 0x1f, 0xc4,
  0x81, 0x19, 0x8c, 0x18, 0x24, 0x00, 0x08, 0x82, 0x81, 0xa1, 0x0a, 0x77,
  0xf0, 0x07, 0x7f, 0x50, 0x07, 0x67, 0x30, 0x62, 0x90, 0x00, 0x20, 0x08,
  0x06, 0xc6, 0x2a, 0xe0, 0x01, 0x28, 0x80, 0x82, 0x1b, 0xa0, 0xc1, 0x88,
  0x41, 0x02, 0x80, 0x20, 0x18, 0x18, 0xac, 0x90, 0x07, 0xa1, 0x10, 0x0a,
  0x74, 0x90, 0x06, 0x23, 0x06, 0x09, 0x00, 0x82, 0x60, 0x60, 0xb4, 0x82,
  0x1e, 0x88, 0x82, 0x28, 0xd8, 0x81, 0x1a, 0xd8, 0x51, 0xc9, 0xc7, 0x0e,
  0x4b, 0x3e, 0x76, 0x5c, 0xf2, 0xb1, 0x21, 0x83, 0x8f, 0x0d, 0x1a, 0x7c,
  0x6c, 0xd8, 0xe0, 0x53, 0x53, 0x29, 0x48, 0x05, 0x6e, 0x00, 0x23, 0x06,
  0x07, 0x00, 0x82, 0x60, 0x70, 0xbd, 0x02, 0x1d, 0x68, 0xc1, 0x68, 0x42,
  0x00, 0x8c, 0x26, 0x08, 0xc1, 0x68, 0xc2, 0x20, 0x8c, 0x26, 0x10, 0x43,
  0x1d, 0x73, 0x00, 0x23, 0x06, 0x07, 0x00, 0x82, 0x60, 0x70, 0xd5, 0x82,
  0x1e, 0x80, 0x41, 0x30, 0x9a, 0x10, 0x00, 0xa3, 0x09, 0x42, 0x30, 0x9a,
  0x30, 0x08, 0xa3, 0x09, 0xc4, 0x50, 0x0d, 0x1e, 0xc0, 0x88, 0xc1, 0x01,
  0x80, 0x20, 0x18, 0x5c, 0xbb, 0x00, 0x0a, 0x66, 0x10, 0x8c, 0x26, 0x04,
  0xc0, 0x68, 0x82, 0x10, 0x8c, 0x26, 0x0c, 0xc2, 0x68, 0x02, 0x31, 0x18,
  0xa4, 0x06, 0xf2, 0xb1, 0x65, 0x0d, 0xe4, 0x63, 0x06, 0x1b, 0xc8, 0xc7,
  0xa4, 0x36, 0x90, 0x8f, 0x35, 0x6e, 0x20, 0x1f, 0x43, 0xde, 0x40, 0x3e,
  0x46, 0xc1, 0x81, 0x7c, 0xec, 0x89, 0x03, 0xf9, 0x98, 0x22, 0x07, 0xf2,
  0x31, 0x6b, 0x0e, 0xe4, 0x63, 0x11, 0x1d, 0xc8, 0xc7, 0x98, 0x3a, 0x90,
  0x4f, 0xc5, 0x01, 0x39, 0x48, 0x05, 0xad, 0x00, 0x23, 0x06, 0x07, 0x00,
  0x82, 0x60, 0x70, 0xb9, 0xc3, 0x2c, 0xe4, 0x41, 0x30, 0x9a, 0x10, 0x00,
  0xa3, 0x09, 0x42, 0x30, 0x9a, 0x30, 0x08, 0xa3, 0x09, 0xc4, 0x50, 0x87,
  0x2c, 0xc0, 0x88, 0xc1, 0x01, 0x80, 0x20, 0x18, 0x5c, 0xf4, 0x90, 0x0b,
  0x7f, 0x10, 0x8c, 0x26, 0x04, 0xc0, 0x68, 0x82, 0x10, 0x8c, 0x26, 0x0c,
  0xc2, 0x68, 0x02, 0x31, 0x54, 0x73, 0x0b, 0x30, 0x62, 0x70, 0x00, 0x20,
  0x08, 0x06, 0x97, 0x3e, 0xfc, 0x42, 0x29, 0x04, 0xa3, 0x09, 0x01, 0x30,
  0x9a, 0x20, 0x04, 0xa3, 0x09, 0x83, 0x30, 0x9a, 0x40, 0x0c, 0x06, 0xa1,
  0x82, 0x7c, 0x6c, 0x49, 0x05, 0xf9, 0x98, 0xa1, 0x0a, 0xf2, 0x31, 0x69,
  0x15, 0xe4, 0x63, 0x0d, 0x2b, 0xc8, 0xc7, 0x90, 0x56, 0x90, 0x8f, 0x51,
  0xae, 0x20, 0x1f, 0x7b, 0x5e, 0x41, 0x3e, 0xa6, 0xc0, 0x82, 0x7c, 0xcc,
  0x8a, 0x05, 0xf9, 0x58, 0x24, 0x0b, 0xf2, 0x31, 0x66, 0x16, 0xe4, 0x63,
  0xcc, 0x1a, 0xc0, 0xc7, 0x98, 0x35, 0x80, 0x8f, 0x31, 0x6b, 0x00, 0x1f,
  0x63, 0xd6, 0x00, 0x3e, 0xc6, 0xac, 0x01, 0x7c, 0x8c, 0x59, 0x03, 0xf8,
  0x18, 0xb3, 0x06, 0xf0, 0x31, 0x66, 0x0d, 0xe0, 0x63, 0xcc, 0x1a, 0xc0,
  0xc7, 0x98, 0x35, 0x80, 0x8f, 0x31, 0x6b, 0x00, 0x1f, 0x63, 0xd6, 0x00,
  0x3e, 0xb5, 0x0b, 0x2f, 0x21, 0x15, 0xe0, 0x03, 0x8c, 0x18, 0x1c, 0x00,
  0x08, 0x82, 0xc1, 0x95, 0x13, 0xfe, 0x40, 0x0e, 0xc1, 0x68, 0x42, 0x00,
  0x8c, 0x26, 0x08, 0xc1, 0x68, 0xc2, 0x20, 0x8c, 0x26, 0x10, 0x43, 0x1d,
  0xfd, 0x00, 0x23, 0x06, 0x07, 0x00, 0x82, 0x60, 0x70, 0xfd, 0x04, 0x49,
  0xa8, 0x43, 0x30, 0x9a, 0x10, 0x00, 0xa3, 0x09, 0x42, 0x30, 0x9a, 0x30,
  0x08, 0xa3, 0x09, 0xc4, 0x50, 0x8d, 0x48, 0xc0, 0x88, 0xc1, 0x01, 0x80,
  0x20, 0x18, 0x5c, 0x65, 0xa1, 0x12, 0xf0, 0x10, 0x8c, 0x26, 0x04, 0xc0,
  0x68, 0x82, 0x10, 0x8c, 0x26, 0x0c, 0xc2, 0x68, 0x02, 0x31, 0x18, 0x24,
  0x0f, 0xf2, 0xb1, 0x65, 0x1e, 0xe4, 0x63, 0x06, 0x3d, 0xc8, 0xc7, 0xa4,
  0x7a, 0x90, 0x8f, 0x35, 0xf6, 0x20, 0x1f, 0x43, 0xee, 0x41, 0x3e, 0x46,
  0xe1, 0x83, 0x7c, 0xec, 0xc9, 0x07, 0xf9, 0x98, 0xa2, 0x0f, 0xf2, 0x31,
  0x6b, 0x1f, 0xe4, 0x63, 0x11, 0x3f, 0xc8, 0xc7, 0x98, 0x7e, 0x90, 0x8f,
  0xad, 0x01, 0x03, 0x1f, 0x5b, 0x03, 0x06, 0x3e, 0xb6, 0x06, 0x0c, 0x7c,
  0x6c, 0x0d, 0x18, 0xf8, 0xd8, 0x1a, 0x30, 0xf0, 0xb1, 0x35, 0x60, 0xe0,
  0x63, 0x6b, 0xc0, 0xc0, 0xc7, 0xd6, 0x80, 0x81, 0x8f, 0xad, 0x01, 0x03,
  0x1f, 0x5b, 0x03, 0x06, 0x3e, 0xb6, 0x06, 0x0c, 0x7c, 0x6c, 0x0d, 0x18,
  0xf8, 0x54, 0x49, 0xe8, 0x85, 0x54, 0x30, 0x16, 0x30, 0x62, 0x70, 0x00,
  0x20, 0x08, 0x06, 0x17, 0x69, 0xa4, 0xc5, 0x4b, 0x04, 0xa3, 0x09, 0x01,
  0x30, 0x9a, 0x20, 0x04, 0xa3, 0x09, 0x83, 0x30, 0x9a, 0x40, 0x0c, 0x75,
  0xa0, 0x05, 0x8c, 0x18, 0x1c, 0x00, 0x08, 0x82, 0xc1, 0xa5, 0x1a, 0x6f,
  0x51, 0x13, 0xc1, 0x68, 0x42, 0x00, 0x8c, 0x26, 0x08, 0xc1, 0x68, 0xc2,
  0x20, 0x8c, 0x26, 0x10, 0x43, 0x35, 0x6d, 0x01, 0x23, 0x06, 0x07, 0x00,
  0x82, 0x60, 0x70, 0xc1, 0x46, 0x5d, 0xec, 0x44, 0x30, 0x9a, 0x10, 0x00,
  0xa3, 0x09, 0x42, 0x30, 0x9a, 0x30, 0x08, 0xa3, 0x09, 0xc4, 0x60, 0x10,
  0x4f, 0xc8, 0xc7, 0x96, 0x9e, 0x90, 0x8f, 0x19, 0x3e, 0x21, 0x1f, 0x93,
  0x7e, 0x42, 0x3e, 0xd6, 0x80, 0x85, 0x7c, 0x0c, 0x09, 0x0b, 0xf9, 0x18,
  0x25, 0x16, 0xf2, 0xb1, 0x67, 0x2c, 0xe4, 0x63, 0x0a, 0x59, 0xc8, 0xc7,
  0xac, 0xb2, 0x90, 0x8f, 0x45, 0x66, 0x21, 0x1f, 0x63, 0xce, 0x42, 0x3e,
  0xb6, 0x06, 0x0c, 0x7c, 0x6c, 0x0d, 0x18, 0xf8, 0xd8, 0x1a, 0x30, 0xf0,
  0xb1, 0x35, 0x60, 0xe0, 0x63, 0x6b, 0xc0, 0xc0, 0xc7, 0xd6, 0x80, 0x81,
  0x8f, 0xad, 0x01, 0x03, 0x1f, 0x5b, 0x03, 0x06, 0x3e, 0xb6, 0x06, 0x0c,
  0x7c, 0x6c, 0x0d, 0x18, 0xf8, 0xd8, 0x1a, 0x30, 0xf0, 0xb1, 0x35, 0x60,
  0xe0, 0x63, 0x8c, 0x5a, 0xc8, 0x67, 0xc4, 0x00, 0x01, 0x40, 0x10, 0x0c,
  0xb2, 0xf6, 0xa0, 0x0d, 0xb5, 0x50, 0x82, 0x11, 0x03, 0x04, 0x00, 0x41,
  0x30, 0xc8, 0xdc, 0xa3, 0x36, 0xd4, 0x02, 0x09, 0x46, 0x0c, 0x10, 0x00,
  0x04, 0xc1, 0x20, 0x7b, 0x0f, 0xdb, 0x50, 0x0b, 0x23, 0xb0, 0xc7, 0x2d,
  0xe4, 0x33, 0x62, 0x80, 0x00, 0x20, 0x08, 0x06, 0x59, 0x7c, 0xe0, 0x86,
  0x5b, 0x34, 0xc1, 0x88, 0x01, 0x02, 0x80, 0x20, 0x18, 0x64, 0xf2, 0x91,
  0x1b, 0x6e, 0xb1, 0x04, 0x23, 0x06, 0x08, 0x00, 0x82, 0x60, 0x90, 0xcd,
  0x87, 0x6e, 0xb8, 0x45, 0x12, 0x98, 0x24, 0x17, 0xf2, 0x19, 0x31, 0x40,
  0x00, 0x10, 0x04, 0x83, 0xac, 0x3e, 0x78, 0x43, 0x2e, 0xa0, 0x60, 0xc4,
  0x00, 0x01, 0x40, 0x10, 0x0c, 0x32, 0xfb, 0xe8, 0x0d, 0xb9, 0x70, 0x82,
  0x11, 0x03, 0x04, 0x00, 0x41, 0x30, 0xc8, 0xee, 0xc3, 0x37, 0xe4, 0x82,
  0x09, 0x0c, 0x7b, 0x0b, 0xf9, 0x8c, 0x18, 0x20, 0x00, 0x08, 0x82, 0x41,
  0x96, 0x1f, 0xe0, 0xf1, 0x16, 0x56, 0x30, 0x62, 0x80, 0x00, 0x20, 0x08,
  0x06, 0x99, 0x7e, 0x84, 0xc7, 0x5b, 0x50, 0x81, 0x69, 0x72, 0x21, 0x9f,
  0x11, 0x03, 0x04, 0x00, 0x41, 0x30, 0xc8, 0xf8, 0x63, 0x3c, 0xe4, 0x02,
  0x0b, 0x46, 0x0c, 0x10, 0x00, 0x04, 0xc1, 0x20, 0xeb, 0x0f, 0xf2, 0x90,
  0x0b, 0x2b, 0x30, 0xae, 0x2e, 0xe4, 0x33, 0x62, 0x80, 0x00, 0x20, 0x08,
  0x06, 0xd9, 0x7f, 0x98, 0x47, 0x5d, 0x68, 0xc1, 0x88, 0x01, 0x02, 0x80,
  0x20, 0x18, 0x64, 0x20, 0x72, 0x1e, 0x75, 0x81, 0x05, 0x23, 0x06, 0x07,
  0x00, 0x82, 0x60, 0x70, 0x89, 0xc8, 0x79, 0xb4, 0x46, 0x7e, 0x8c, 0x26,
  0x04, 0xc0, 0x68, 0x82, 0x10, 0x8c, 0x26, 0x0c, 0xc2, 0x68, 0x02, 0x31,
  0x8c, 0x18, 0x1c, 0x00, 0x08, 0x82, 0xc1, 0x75, 0x22, 0xec, 0x21, 0x1b,
  0xe0, 0x31, 0x9a, 0x10, 0x00, 0xa3, 0x09, 0x42, 0x30, 0x9a, 0x30, 0x08,
  0xa3, 0x09, 0xc4, 0x30, 0x62, 0x70, 0x00, 0x20, 0x08, 0x06, 0x17, 0x8b,
  0xc4, 0xc7, 0x6d, 0x90, 0xc7, 0x68, 0x42, 0x00, 0x8c, 0x26, 0x08, 0xc1,
  0x68, 0xc2, 0x20, 0x8c, 0x26, 0x10, 0x83, 0x39, 0x61, 0x20, 0x9f, 0x11,
  0x03, 0x04, 0x00, 0x41, 0x30, 0xc8, 0x62, 0x04, 0x3f, 0x3c, 0x27, 0x18,
  0x31, 0x40, 0x00, 0x10, 0x04, 0x83, 0x4c, 0x46, 0xf2, 0x63, 0x73, 0x82,
  0x11, 0x03, 0x04, 0x00, 0x41, 0x30, 0xc8, 0x66, 0x44, 0x3f, 0x5c, 0xc3,
  0x09, 0xac, 0x29, 0x03, 0xf9, 0x8c, 0x18, 0x20, 0x00, 0x08, 0x82, 0x41,
  0x56, 0x23, 0xfc, 0x21, 0x06, 0x4d, 0x30, 0x62, 0x80, 0x00, 0x20, 0x08,
  0x06, 0x99, 0x8d, 0xf4, 0xc7, 0xd7, 0x04, 0x23, 0x06, 0x08, 0x00, 0x82,
  0x60, 0x90, 0xdd, 0x88, 0x7f, 0xc8, 0x46, 0x13, 0x18, 0x93, 0x06, 0xf2,
  0x19, 0x31, 0x40, 0x00, 0x10, 0x04, 0x83, 0x2c, 0x47, 0x40, 0xc4, 0x0c,
  0x98, 0x60, 0xc4, 0x00, 0x01, 0x40, 0x10, 0x0c, 0x32, 0x1d, 0x09, 0x91,
  0x31, 0x60, 0x82, 0x11, 0x03, 0x04, 0x00, 0x41, 0x30, 0xc8, 0x76, 0x44,
  0x44, 0x6c, 0x83, 0x09, 0x46, 0x0c, 0x0e, 0x00, 0x04, 0xc1, 0xe0, 0xea,
  0x11, 0x11, 0x41, 0x0f, 0xfa, 0x18, 0x4d, 0x08, 0x80, 0xd1, 0x04, 0x21,
  0x18, 0x4d, 0x18, 0x04, 0x1b, 0x9a, 0xf8, 0xd8, 0xa0, 0xc4, 0xc7, 0x86,
  0x23, 0x3e, 0x23, 0x06, 0x0b, 0x00, 0x82, 0x60, 0xc0, 0xa0, 0x49, 0x89,
  0x0c, 0x42, 0x30, 0x08, 0xc1, 0x88, 0x81, 0x01, 0x80, 0x20, 0x18, 0x38,
  0x68, 0x72, 0x22, 0x81, 0x15, 0x81, 0x7c, 0xac, 0x10, 0xe4, 0x63, 0xc5,
  0x20, 0x9f, 0x11, 0x83, 0x03, 0x00, 0x41, 0x30, 0xb8, 0xd2, 0xc4, 0x45,
  0xe8, 0xe3, 0x3f, 0x46, 0x13, 0x02, 0x60, 0x34, 0x41, 0x08, 0x46, 0x13,
  0x06, 0x61, 0xc4, 0xe0, 0x00, 0x40, 0x10, 0x0c, 0xae, 0x36, 0x91, 0x11,
  0xfc, 0x10, 0x91, 0xd1, 0x84, 0x00, 0x18, 0x4d, 0x10, 0x82, 0xd1, 0x84,
  0x41, 0x18, 0x31, 0x38, 0x00, 0x10, 0x04, 0x83, 0x2b, 0x4e, 0x6c, 0x84,
  0x3f, 0x5c, 0x64, 0x34, 0x21, 0x00, 0x46, 0x13, 0x84, 0x60, 0x34, 0x61,
  0x10, 0x6c, 0xd1, 0x03, 0xf9, 0x8c, 0x18, 0x20, 0x00, 0x08, 0x82, 0x41,
  0x56, 0x27, 0x3c, 0x82, 0x07, 0x4b, 0x30, 0x62, 0x80, 0x00, 0x20, 0x08,
  0x06, 0x99, 0x9d, 0xf4, 0x88, 0x1d, 0x2c, 0x81, 0x29, 0x7d, 0x20, 0x9f,
  0x11, 0x03, 0x04, 0x00, 0x41, 0x30, 0xc8, 0xf0, 0xe4, 0x47, 0xf6, 0x40,
  0x09, 0x46, 0x0c, 0x10, 0x00, 0x04, 0xc1, 0x20, 0xcb, 0x13, 0x30, 0xc9,
  0x03, 0x25, 0xb0, 0x04, 0x14, 0xe4, 0x33, 0x62, 0x80, 0x00, 0x20, 0x08,
  0x06, 0xd9, 0x9e, 0x88, 0x89, 0x1f, 0x24, 0xc1, 0x88, 0x01, 0x02, 0x80,
  0x20, 0x18, 0x64, 0x7c, 0x32, 0x26, 0x7c, 0x90, 0x04, 0x23, 0x06, 0x0b,
  0x00, 0x82, 0x60, 0xc0, 0x88, 0xca, 0x8f, 0x1c, 0x44, 0x70, 0x10, 0xc1,
  0x88, 0x81, 0x01, 0x80, 0x20, 0x18, 0x38, 0xa2, 0x12, 0x26, 0x81, 0x05,
  0x89, 0x7c, 0x4c, 0x38, 0xe4, 0x63, 0x43, 0x21, 0x9f, 0x11, 0x83, 0x03,
  0x00, 0x41, 0x30, 0xb8, 0x46, 0x05, 0x4d, 0x5c, 0x64, 0x4f, 0x46, 0x13,
  0x02, 0x60, 0x34, 0x41, 0x08, 0x46, 0x13, 0x06, 0x61, 0xc4, 0xe0, 0x00,
  0x40, 0x10, 0x0c, 0xae, 0x53, 0x61, 0x13, 0x19, 0x09, 0x95, 0xd1, 0x84,
  0x00, 0x18, 0x4d, 0x10, 0x82, 0xd1, 0x84, 0x41, 0x18, 0x31, 0x38, 0x00,
  0x10, 0x04, 0x83, 0x6b, 0x55, 0xe0, 0xc4, 0x46, 0x7e, 0x64, 0x34, 0x21,
  0x00, 0x46, 0x13, 0x84, 0x60, 0x34, 0x61, 0x10, 0x2c, 0x0d, 0x96, 0xf8,
  0x58, 0x1a, 0x2c, 0xf1, 0xb1, 0x34, 0x58, 0xe2, 0x33, 0x62, 0xb0, 0x00,
  0x20, 0x08, 0x06, 0x8c, 0xad, 0xcc, 0xc9, 0x20, 0x04, 0x83, 0x10, 0x8c,
  0x18, 0x18, 0x00, 0x08, 0x82, 0x81, 0x63, 0x2b, 0x75, 0x12, 0x58, 0x40,
  0xc8, 0xc7, 0x04, 0x42, 0x3e, 0x23, 0x06, 0x07, 0x00, 0x82, 0x60, 0x70,
  0xd9, 0xca, 0x9e, 0x84, 0x89, 0xaa, 0x8c, 0x26, 0x04, 0xc0, 0x68, 0x82,
  0x10, 0x8c, 0x26, 0x0c, 0xc2, 0x88, 0xc1, 0x01, 0x80, 0x20, 0x18, 0x5c,
  0xba, 0xf2, 0x27, 0x65, 0x02, 0x2b, 0xa3, 0x09, 0x01, 0x30, 0x9a, 0x20,
  0x04, 0xa3, 0x09, 0x83, 0x30, 0x62, 0x70, 0x00, 0x20, 0x08, 0x06, 0x97,
  0xaf, 0x8c, 0x4a, 0x9a, 0xc4, 0xc9, 0x68, 0x42, 0x00, 0x8c, 0x26, 0x08,
  0xc1, 0x68, 0xc2, 0x20, 0x18, 0x1f, 0x2c, 0xf1, 0x31, 0x3e, 0x58, 0xe2,
  0x63, 0x7c, 0xb0, 0xc4, 0x67, 0xc4, 0x60, 0x01, 0x40, 0x10, 0x0c, 0x98,
  0x74, 0x31, 0x95, 0x41, 0x08, 0x06, 0x21, 0x18, 0x31, 0x30, 0x00, 0x10,
  0x04, 0x03, 0x27, 0x5d, 0x50, 0x25, 0xb0, 0x80, 0x90, 0x8f, 0x09, 0x84,
  0x7c, 0x46, 0x0c, 0x0e, 0x00, 0x04, 0xc1, 0xe0, 0x4a, 0x17, 0x57, 0xa1,
  0x13, 0x56, 0x19, 0x4d, 0x08, 0x80, 0xd1, 0x04, 0x21, 0x18, 0x4d, 0x18,
  0x84, 0x11, 0x83, 0x03, 0x00, 0x41, 0x30, 0xb8, 0xda, 0x45, 0x56, 0xf0,
  0x04, 0x5d, 0x46, 0x13, 0x02, 0x60, 0x34, 0x41, 0x08, 0x46, 0x13, 0x06,
  0x61, 0xc4, 0xe0, 0x00, 0x40, 0x10, 0x0c, 0xae, 0x78, 0xb1, 0x15, 0x3e,
  0x19, 0x95, 0xd1, 0x84, 0x00, 0x18, 0x4d, 0x10, 0x82, 0xd1, 0x84, 0x41,
  0xb0, 0x57, 0x58, 0xe2, 0x63, 0xaf, 0xb0, 0xc4, 0xc7, 0x5e, 0x61, 0x89,
  0xcf, 0x88, 0xc1, 0x02, 0x80, 0x20, 0x18, 0x30, 0xfc, 0x92, 0x2b, 0x83,
  0x10, 0x0c, 0x42, 0x30, 0x62, 0x60, 0x00, 0x20, 0x08, 0x06, 0x0e, 0xbf,
  0xec, 0x4a, 0x60, 0x01, 0x21, 0x1f, 0x13, 0x08, 0xf9, 0x18, 0xaa, 0xdc,
  0x41, 0x7c, 0x2c, 0x55, 0xee, 0x20, 0x3e, 0xa6, 0x2a, 0x66, 0x10, 0x1f,
  0x5b, 0x15, 0x33, 0x88, 0x8f, 0xb1, 0x4a, 0x15, 0x1f, 0x6b, 0x95, 0x2a,
  0x3e, 0x26, 0x0a, 0x7e, 0x20, 0x1f, 0x7b, 0x95, 0x20, 0x3e, 0x23, 0x06,
  0x08, 0x00, 0x82, 0x60, 0x90, 0x8d, 0x8c, 0xba, 0x20, 0xa3, 0x10, 0x8c,
  0x18, 0x20, 0x00, 0x08, 0x82, 0x41, 0x46, 0x32, 0xeb, 0x82, 0x8c, 0x42,
  0x60, 0xa6, 0xf0, 0x06, 0xf2, 0xb1, 0x59, 0x09, 0xe2, 0x33, 0x62, 0x80,
  0x00, 0x20, 0x08, 0x06, 0xd9, 0xc9, 0xb8, 0x8b, 0x72, 0x0a, 0xc1, 0x88,
  0x01, 0x02, 0x80, 0x20, 0x18, 0x64, 0x28, 0xf3, 0x2e, 0xca, 0x29, 0x04,
  0xa6, 0x0a, 0x60, 0x20, 0x1f, 0xbb, 0x95, 0x20, 0x3e, 0x23, 0x06, 0x08,
  0x00, 0x82, 0x60, 0x90, 0xad, 0x8c, 0xbc, 0x30, 0xab, 0x10, 0x8c, 0x18,
  0x20, 0x00, 0x08, 0x82, 0x41, 0xc6, 0x32, 0xf3, 0xc2, 0xac, 0x42, 0x60,
  0x7f, 0xe0, 0x0a, 0xf2, 0xb1, 0x80, 0x0f, 0xe4, 0x33, 0x62, 0x80, 0x00,
  0x20, 0x08, 0x06, 0xd9, 0xcb, 0xd8, 0x0b, 0x1f, 0xbc, 0x42, 0x30, 0x62,
  0x80, 0x00, 0x20, 0x08, 0x06, 0x19, 0xcc, 0xdc, 0x0b, 0x1f, 0xbc, 0x42,
  0x60, 0x70, 0x20, 0x0b, 0xf2, 0xb1, 0xa0, 0x0d, 0xe4, 0x33, 0x62, 0x80,
  0x00, 0x20, 0x08, 0x06, 0xd9, 0xcc, 0xe8, 0x4b, 0x1b, 0xcc, 0x42, 0x30,
  0x62, 0x80, 0x00, 0x20, 0x08, 0x06, 0x19, 0xcd, 0xec, 0x4b, 0x1b, 0xcc,
  0x42, 0x60, 0x61, 0x60, 0x0b, 0xf2, 0xb1, 0xc0, 0x93, 0xcf, 0x88, 0x01,
  0x02, 0x80, 0x20, 0x18, 0x64, 0x37, 0xe3, 0x2f, 0xde, 0x2d, 0x04, 0x23,
  0x06, 0x08, 0x00, 0x82, 0x60, 0x90, 0xe1, 0xcc, 0xbf, 0x78, 0xb7, 0x10,
  0x0c, 0x47, 0x54, 0xe7, 0x42, 0x7c, 0xc3, 0x11, 0x12, 0xba, 0x10, 0xdf,
  0x70, 0xc4, 0x93, 0x2e, 0xc4, 0x37, 0xdd, 0xa0, 0x2e, 0xed, 0x32, 0x4c,
  0x37, 0xac, 0x8b, 0xbb, 0x0c, 0xd3, 0x0d, 0xec, 0xf2, 0x2e, 0x83, 0x0d,
  0x9b, 0x7c, 0x6c, 0xc0, 0xe4, 0x63, 0x43, 0x25, 0x9f, 0x11, 0x83, 0x03,
  0x00, 0x41, 0x30, 0xb8, 0xc6, 0x06, 0x65, 0xdc, 0x05, 0x67, 0x46, 0x13,
  0x82, 0x61, 0xc4, 0xe0, 0x00, 0x40, 0x10, 0x0c, 0xa0, 0xb3, 0x01, 0x19,
  0x4a, 0x5e, 0x46, 0x0c, 0x0e, 0x00, 0x04, 0xc1, 0x00, 0x42, 0x9b, 0x90,
  0x89, 0xe6, 0x65, 0xc4, 0xe0, 0x00, 0x40, 0x10, 0x0c, 0xa0, 0xb4, 0x11,
  0x19, 0x87, 0x5e, 0x6c, 0x58, 0xe4, 0x63, 0xc3, 0x22, 0x1f, 0x1b, 0x16,
  0xf9, 0x8c, 0x18, 0x18, 0x00, 0x08, 0x82, 0x81, 0xe3, 0x36, 0x27, 0x33,
  0x8c, 0x18, 0x18, 0x00, 0x08, 0x82, 0x81, 0xf3, 0x36, 0x28, 0x33, 0x8c,
  0x18, 0x18, 0x00, 0x08, 0x82, 0x81, 0x03, 0x37, 0x29, 0x33, 0xd8, 0xa0,
  0xc8, 0xc7, 0x86, 0x45, 0x3e, 0x36, 0x30, 0xf2, 0x19, 0x31, 0x30, 0x00,
  0x10, 0x04, 0x03, 0x87, 0x6e, 0x5c, 0x66, 0x18, 0x31, 0x30, 0x00, 0x10,
  0x04, 0x03, 0xa7, 0x6e, 0x5e, 0x66, 0x18, 0x31, 0x30, 0x00, 0x10, 0x04,
  0x03, 0xc7, 0x6e, 0x60, 0x66, 0xb0, 0xe1, 0x0d, 0xe4, 0x63, 0x03, 0x1b,
  0xc8, 0xc7, 0x86, 0x34, 0x90, 0x8f, 0x5d, 0xef, 0x20, 0x9f, 0x11, 0x03,
  0x04, 0x00, 0x41, 0x30, 0xc8, 0xee, 0xc6, 0x67, 0xae, 0x5e, 0x08, 0x46,
  0x0c, 0x10, 0x00, 0x04, 0xc1, 0x20, 0xc3, 0x9b, 0x9f, 0xb9, 0x56, 0x21,
  0x30, 0x2d, 0x1e, 0xe4, 0x33, 0x62, 0x80, 0x00, 0x20, 0x08, 0x06, 0x99,
  0xde, 0x84, 0x8d, 0xf6, 0x0b, 0xc1, 0x88, 0x01, 0x02, 0x80, 0x20, 0x18,
  0x64, 0x7b, 0x23, 0x36, 0x5a, 0x2b, 0x04, 0xd6, 0xcd, 0x83, 0x7c, 0x46,
  0x0c, 0x10, 0x00, 0x04, 0xc1, 0x20, 0xeb, 0x1b, 0xb2, 0xe9, 0xc2, 0x21,
  0x18, 0x31, 0x40, 0x00, 0x10, 0x04, 0x83, 0xcc, 0x6f, 0xca, 0xa6, 0x7b,
  0x85, 0x60, 0xc4, 0xe0, 0x00, 0x40, 0x10, 0x0c, 0x2e, 0xd0, 0x29, 0x9b,
  0x95, 0xe1, 0x9b, 0xd1, 0x84, 0x00, 0x18, 0x4d, 0x10, 0x82, 0xd1, 0x84,
  0x41, 0xb0, 0x61, 0x91, 0x8f, 0x0d, 0x89, 0x7c, 0x6c, 0x38, 0xe4, 0x33,
  0x62, 0x70, 0x00, 0x20, 0x08, 0x06, 0xd7, 0xe9, 0xb0, 0x8d, 0xcc, 0x90,
  0xce, 0x68, 0x42, 0x00, 0x8c, 0x26, 0x08, 0xc1, 0x68, 0xc2, 0x20, 0xd8,
  0x31, 0xc0, 0xc7, 0x8e, 0x01, 0x3e, 0x76, 0x0c, 0xf0, 0x31, 0x4d, 0x24,
  0xe4, 0x33, 0x62, 0x80, 0x00, 0x20, 0x08, 0x06, 0x99, 0xeb, 0xd4, 0x8d,
  0x06, 0x0f, 0xc1, 0x88, 0x01, 0x02, 0x80, 0x20, 0x18, 0x64, 0xaf, 0x63,
  0x37, 0x9a, 0x2f, 0x04, 0xd6, 0x91, 0x84, 0x7c, 0x46, 0x0c, 0x10, 0x00,
  0x04, 0xc1, 0x20, 0x8b, 0x1d, 0xbc, 0xe9, 0xe4, 0x21, 0x18, 0x31, 0x40,
  0x00, 0x10, 0x04, 0x83, 0x4c, 0x76, 0xf2, 0xa6, 0x03, 0x87, 0xc0, 0xc0,
  0xc0, 0x24, 0xe4, 0x33, 0x62, 0x80, 0x00, 0x20, 0x08, 0x06, 0x19, 0xed,
  0xec, 0x0d, 0x18, 0xd0, 0x43, 0x30, 0x62, 0x80, 0x00, 0x20, 0x08, 0x06,
  0x59, 0xed, 0xf0, 0x0d, 0x18, 0x88, 0x43, 0x30, 0x9a, 0x40, 0x07, 0xc0,
  0x68, 0x42, 0x1d, 0x04, 0xa3, 0x09, 0x76, 0x20, 0xd8, 0xa0, 0xc8, 0xc7,
  0x06, 0x44, 0x3e, 0x36, 0x18, 0xf2, 0x19, 0x31, 0x38, 0x00, 0x10, 0x04,
  0x83, 0xab, 0x77, 0x44, 0x07, 0x6d, 0xdc, 0x66, 0x34, 0x21, 0x00, 0x46,
  0x13, 0x84, 0x60, 0x34, 0x61, 0x10, 0x46, 0x13, 0x88, 0x61, 0xc4, 0xe0,
  0x00, 0x40, 0x10, 0x0c, 0x2e, 0xf1, 0x39, 0x9d, 0xb6, 0xf1, 0x9b, 0xd1,
  0x84, 0x00, 0x18, 0x4d, 0x10, 0x82, 0xd1, 0x84, 0x41, 0x18, 0x4d, 0x20,
  0x86, 0x11, 0x83, 0x03, 0x00, 0x41, 0x30, 0xb8, 0xce, 0x87, 0x75, 0xe4,
  0xc6, 0x75, 0x46, 0x13, 0x02, 0x60, 0x34, 0x41, 0x08, 0x46, 0x13, 0x06,
  0x61, 0x34, 0x81, 0x18, 0x46, 0x0c, 0x0e, 0x00, 0x04, 0xc1, 0xe0, 0x62,
  0x9f, 0xd8, 0xb9, 0x1b, 0xd7, 0x19, 0x4d, 0x08, 0x80, 0xd1, 0x04, 0x21,
  0x18, 0x4d, 0x18, 0x84, 0xd1, 0x04, 0x62, 0xb0, 0x29, 0x44, 0xe4, 0x33,
  0x62, 0x80, 0x00, 0x20, 0x08, 0x06, 0x59, 0xfc, 0xe0, 0x8e, 0x7f, 0x4c,
  0xc1, 0x88, 0x01, 0x02, 0x80, 0x20, 0x18, 0x64, 0xf2, 0x93, 0x3b, 0xfb,
  0x31, 0x05, 0x23, 0x06, 0x08, 0x00, 0x82, 0x60, 0x90, 0xcd, 0x8f, 0xee,
  0xb8, 0xcd, 0x14, 0x98, 0x54, 0x22, 0xf2, 0x19, 0x31, 0x40, 0x00, 0x10,
  0x04, 0x83, 0xac, 0x7e, 0x78, 0x47, 0x44, 0xa4, 0x60, 0xc4, 0x00, 0x01,
  0x40, 0x10, 0x0c, 0x32, 0xfb, 0xe9, 0x9d, 0xff, 0x90, 0x82, 0x11, 0x03,
  0x04, 0x00, 0x41, 0x30, 0xc8, 0xee, 0xc7, 0x77, 0xe4, 0x46, 0x0a, 0x2c,
  0x4a, 0x11, 0xf9, 0x8c, 0x18, 0x20, 0x00, 0x08, 0x82, 0x41, 0x96, 0x3f,
  0xe0, 0x63, 0x22, 0x51, 0x30, 0x62, 0x80, 0x00, 0x20, 0x08, 0x06, 0x99,
  0xfe, 0x84, 0xcf, 0x88, 0x44, 0xc1, 0x88, 0x01, 0x02, 0x80, 0x20, 0x18,
  0x64, 0xfb, 0x23, 0x3e, 0x76, 0x13, 0x05, 0x06, 0xb5, 0x88, 0x7c, 0x46,
  0x0c, 0x10, 0x00, 0x04, 0xc1, 0x20, 0xeb, 0x1f, 0xf2, 0x51, 0x11, 0x28,
  0x18, 0x31, 0x40, 0x00, 0x10, 0x04, 0x83, 0xcc, 0x7f, 0xca, 0xe7, 0x44,
  0xa0, 0x60, 0xc4, 0x00, 0x01, 0x40, 0x10, 0x0c, 0xb2, 0xff, 0x31, 0x1f,
  0xbd, 0x81, 0x82, 0xd1, 0x84, 0x50, 0x18, 0x46, 0x0c, 0x0e, 0x00, 0x04,
  0xc1, 0xe0, 0x12, 0xa1, 0xf3, 0x69, 0x1d, 0xf5, 0x19, 0x4d, 0x08, 0x80,
  0xd1, 0x04, 0x21, 0x18, 0x4d, 0x18, 0x84, 0xd1, 0x04, 0x62, 0x18, 0x31,
  0x68, 0x00, 0x10, 0x04, 0x03, 0x09, 0x85, 0xe0, 0xe7, 0x46, 0x66, 0xe4,
  0x45, 0x42, 0x87, 0x18, 0x84, 0x60, 0xc4, 0xc0, 0x00, 0x40, 0x10, 0x0c,
  0x9c, 0x15, 0xf2, 0x9f, 0x60, 0xc4, 0x20, 0x01, 0x40, 0x10, 0x0c, 0x14,
  0x17, 0x62, 0x9f, 0x12, 0x2a, 0xa1, 0xfd, 0xf1, 0x83, 0x11, 0x83, 0x04,
  0x00, 0x41, 0x30, 0x50, 0x5c, 0x88, 0x7d, 0x4a, 0xa8, 0x84, 0xe6, 0xa7,
  0x0f, 0x46, 0x0c, 0x12, 0x00, 0x04, 0xc1, 0x40, 0x71, 0x21, 0xf6, 0x29,
  0xa1, 0x12, 0xc2, 0x1f, 0x3e, 0x18, 0x31, 0x48, 0x00, 0x10, 0x04, 0x03,
  0xc5, 0x85, 0xd8, 0xa7, 0x84, 0x4a, 0x28, 0x7f, 0x90, 0x11, 0x83, 0x04,
  0x00, 0x41, 0x30, 0x50, 0x5c, 0x88, 0x7d, 0x4c, 0xa8, 0x84, 0xf6, 0xe7,
  0x0d, 0x46, 0x0c, 0x12, 0x00, 0x04, 0xc1, 0x40, 0x71, 0x21, 0xf6, 0x31,
  0xa1, 0x12, 0x9a, 0x1f, 0x37, 0x18, 0x31, 0x48, 0x00, 0x10, 0x04, 0x03,
  0xc5, 0x85, 0xd8, 0xc7, 0x84, 0x4a, 0x08, 0x7f, 0xda, 0x60, 0xc4, 0x20,
  0x01, 0x40, 0x10, 0x0c, 0x14, 0x17, 0x62, 0x1f, 0x13, 0x2a, 0xa1, 0xfc,
  0x09, 0x46, 0x0c, 0x12, 0x00, 0x04, 0xc1, 0x40, 0x71, 0x21, 0xf6, 0xf1,
  0x9f, 0x12, 0xda, 0x9f, 0xd5, 0x19, 0x31, 0x48, 0x00, 0x10, 0x04, 0x03,
  0xc5, 0x85, 0xd8, 0xc7, 0x7f, 0x4a, 0x68, 0x7e, 0x54, 0x67, 0xc4, 0x20,
  0x01, 0x40, 0x10, 0x0c, 0x14, 0x17, 0x62, 0x9f, 0x10, 0x2a, 0xa1, 0xfd,
  0xa9, 0x46, 0x0c, 0x12, 0x00, 0x04, 0xc1, 0x40, 0x71, 0x21, 0xf6, 0x09,
  0xa1, 0x12, 0x9a, 0x9f, 0x68, 0xc4, 0x20, 0x01, 0x40, 0x10, 0x0c, 0x14,
  0x17, 0x62, 0x9f, 0x10, 0x2a, 0x21, 0xfc, 0x69, 0x46, 0x0c, 0x12, 0x00,
  0x04, 0xc1, 0x40, 0x71, 0x21, 0xf6, 0x09, 0xa1, 0x12, 0xca, 0x9f, 0x04,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc2, 0x44, 0x43, 0x70,
  0xef, 0xbd, 0xd6, 0x80, 0x45, 0xe7, 0x63, 0xcb, 0x2c, 0x97, 0xe9, 0x22,
  0x17, 0x00, 0x01, 0x00, 0x20, 0x30, 0x1b, 0x00, 0x78, 0x01, 0xed, 0x99,
  0xcf, 0x6b, 0x5c, 0x55, 0x14, 0xc7, 0xcf, 0xbb, 0xef, 0xbe, 0x97, 0x3b,
  0x6f, 0x4e, 0xce, 0xbc, 0xf9, 0x99, 0xa4, 0x79, 0x79, 0x99, 0x4c, 0x27,
  0xd3, 0x4c, 0xa7, 0xe3, 0x4c, 0x62, 0x2d, 0x49, 0xb5, 0x31, 0xa3, 0x6d,
  0x29, 0xd3, 0xd2, 0x40, 0xc5, 0xae, 0x0c, 0x94, 0xaa, 0xa5, 0x14, 0x95,
  0x5a, 0xc1, 0x85, 0x94, 0xf1, 0xd9, 0x45, 0x2d, 0xa5, 0x14, 0x71, 0xa1,
  0x90, 0x84, 0x22, 0xda, 0x8d, 0xe0, 0xbf, 0x60, 0x5a, 0x13, 0x70, 0xa1,
  0x88, 0x10, 0xb0, 0x88, 0x2b, 0x71, 0x53, 0xba, 0xb1, 0xa5, 0x0b, 0xa9,
  0x1b, 0xeb, 0x39, 0xaf, 0x93, 0x1a, 0x5a, 0xd7, 0x0a, 0x3a, 0x1f, 0x38,
  0xf7, 0xfb, 0xee, 0xb9, 0xf7, 0xdd, 0x7b, 0xee, 0x3d, 0x67, 0xb2, 0xc8,
  0x6b, 0x0e, 0x43, 0xcc, 0xed, 0x4f, 0xf6, 0xd5, 0x44, 0x6f, 0xe6, 0x3e,
  0x6b, 0x40, 0x1e, 0xc0, 0x91, 0x0e, 0xa3, 0xa5, 0x61, 0x4e, 0xe7, 0xa4,
  0x05, 0xf8, 0x71, 0x8b, 0xb4, 0x7f, 0x8d, 0x0b, 0x55, 0xb6, 0xfd, 0x6c,
  0xc2, 0x9c, 0x34, 0x5d, 0x2c, 0x69, 0x00, 0x66, 0xd9, 0x9e, 0x65, 0x7b,
  0x0c, 0x59, 0xf2, 0x77, 0xb6, 0x5f, 0xd9, 0x84, 0xa4, 0x34, 0x5d, 0x0c,
  0x1b, 0x76, 0x6d, 0x33, 0x1b, 0xf1, 0x6c, 0x26, 0xc5, 0x26, 0xf3, 0x6c,
  0xb6, 0x47, 0xf9, 0xe1, 0xe0, 0xa9, 0x67, 0x58, 0xf6, 0xb2, 0xc1, 0xc9,
  0xda, 0x1f, 0x12, 0x0b, 0x4c, 0xfe, 0xe2, 0x88, 0x0f, 0xb6, 0xbd, 0xf0,
  0x5b, 0xdc, 0xff, 0x2f, 0xb1, 0x91, 0x27, 0xe1, 0xce, 0xe6, 0x24, 0x75,
  0x51, 0xd2, 0x30, 0xc7, 0xba, 0x79, 0xdc, 0xb8, 0xcf, 0x0b, 0xdd, 0xfe,
  0x46, 0x2e, 0xaf, 0xb3, 0x75, 0xf3, 0xf7, 0x18, 0xf7, 0x19, 0xd1, 0xbf,
  0x43, 0xb6, 0x74, 0x61, 0xbe, 0xe9, 0x5a, 0xef, 0x17, 0x5d, 0xb5, 0xe6,
  0xbb, 0x76, 0x6a, 0xd2, 0xd5, 0xf3, 0x93, 0xec, 0xfe, 0xc7, 0x90, 0x3a,
  0x70, 0xd9, 0x04, 0xd7, 0x7a, 0x70, 0x0a, 0x57, 0x6d, 0x9c, 0xfc, 0xff,
  0x81, 0xdc, 0x01, 0xb1, 0x09, 0x92, 0xe3, 0x8d, 0x3c, 0x0b, 0x8f, 0xfe,
  0xa6, 0x7a, 0xf4, 0xe8, 0xd1, 0xa3, 0x47, 0x8f, 0x1e, 0x3d, 0x7a, 0xf4,
  0xe8, 0xd1, 0xa3, 0x47, 0x8f, 0x1e, 0x3d, 0xfe, 0x15, 0xc6, 0xa2, 0x95,
  0xd3, 0xa9, 0x4b, 0xd7, 0x08, 0x6e, 0xac, 0xfb, 0x7d, 0x16, 0xe8, 0xfb,
  0xad, 0x0b, 0x00, 0x3e, 0xd8, 0xf6, 0xf5, 0x95, 0xaf, 0xec, 0xd5, 0x95,
  0xfb, 0xf6, 0xda, 0xca, 0x17, 0xf3, 0x0a, 0x16, 0x03, 0x68, 0x43, 0x71,
  0xfa, 0x67, 0x1e, 0x8b, 0x52, 0x3c, 0x37, 0xcd, 0x73, 0x03, 0x38, 0xb7,
  0x6e, 0x6e, 0x7d, 0x67, 0x2f, 0x05, 0x7e, 0x7b, 0x84, 0x9f, 0x13, 0xfc,
  0x1c, 0xb2, 0x7a, 0xac, 0x32, 0xd7, 0x18, 0x3f, 0x5a, 0x0e, 0x82, 0xf6,
  0x62, 0xd8, 0x6c, 0x2f, 0x85, 0xb3, 0xed, 0xe5, 0x70, 0x2e, 0x5e, 0x83,
  0xc8, 0x8f, 0x44, 0x07, 0x07, 0xfd, 0x28, 0xc3, 0x6b, 0x65, 0x78, 0xad,
  0x2c, 0x6b, 0x96, 0x15, 0x5a, 0x66, 0xcd, 0x6f, 0x0d, 0xae, 0x35, 0x5b,
  0x1f, 0xac, 0x4e, 0xb7, 0x60, 0xed, 0x2d, 0x8e, 0x0d, 0xaa, 0xcf, 0x91,
  0x55, 0xdd, 0x4b, 0xaa, 0xba, 0x9f, 0xec, 0xea, 0x01, 0x92, 0x77, 0x47,
  0x39, 0x8e, 0xa5, 0xf2, 0x6c, 0x5b, 0xc6, 0x4d, 0xb5, 0x4d, 0xc9, 0xaa,
  0x4f, 0x89, 0xea, 0x21, 0xf2, 0xaa, 0x87, 0xe9, 0x4d, 0xf6, 0x6d, 0x81,
  0x68, 0x7d, 0x4b, 0xed, 0xb2, 0x1e, 0x64, 0x1d, 0xac, 0x9d, 0xd7, 0x43,
  0xac, 0x43, 0xb5, 0x8b, 0x7a, 0x98, 0x75, 0xb8, 0xf6, 0xa1, 0x5e, 0xac,
  0x1c, 0x68, 0xcb, 0xb9, 0xb7, 0x72, 0xdf, 0xae, 0x95, 0xb4, 0xac, 0x59,
  0xe4, 0x78, 0xc7, 0xb8, 0x6f, 0xd5, 0x16, 0x35, 0x55, 0x15, 0x2d, 0x96,
  0x83, 0xb6, 0x5f, 0x75, 0xa9, 0xc8, 0x3e, 0xa8, 0x7d, 0xa4, 0x4b, 0xac,
  0xaa, 0x76, 0x45, 0xa7, 0x78, 0x8f, 0x74, 0x75, 0x22, 0x8e, 0x43, 0xce,
  0xb2, 0x5c, 0x2e, 0xb7, 0x97, 0x2a, 0xed, 0xf6, 0x72, 0xa5, 0xd2, 0x96,
  0xbd, 0x2b, 0x3c, 0xcf, 0xd4, 0x5c, 0x3d, 0xc1, 0xea, 0xd5, 0x28, 0x5e,
  0x5b, 0xe2, 0x4d, 0xd4, 0x0e, 0x63, 0xb2, 0x36, 0x81, 0xd2, 0xcf, 0xf0,
  0x5e, 0x67, 0x78, 0x6e, 0x9e, 0xe7, 0x50, 0xfd, 0xb8, 0x26, 0xd6, 0x54,
  0xfd, 0x44, 0x1c, 0xa7, 0x5f, 0x3f, 0xa5, 0xd3, 0xf5, 0x5d, 0x28, 0x6b,
  0x49, 0xfc, 0x50, 0x3f, 0xa7, 0x33, 0xac, 0x56, 0xfd, 0xbc, 0x96, 0x73,
  0xa9, 0xfa, 0x45, 0x3d, 0xca, 0x6a, 0xd7, 0x2f, 0xc7, 0x6b, 0x97, 0x79,
  0x6d, 0x99, 0x2b, 0xf1, 0x79, 0xf5, 0x4f, 0xb5, 0xc4, 0x6b, 0xea, 0x8b,
  0x5a, 0xce, 0x92, 0xa8, 0x5f, 0xd1, 0xc9, 0xfa, 0x83, 0x3d, 0xb3, 0xbc,
  0xa7, 0xcc, 0xb3, 0xd8, 0x6f, 0x35, 0x76, 0xc7, 0xef, 0x8e, 0x4b, 0x2e,
  0xb8, 0x0f, 0x8d, 0xa3, 0x5a, 0xb1, 0xaa, 0xc6, 0x09, 0x6d, 0xb3, 0xda,
  0x8d, 0x37, 0xb4, 0xcc, 0x35, 0xfc, 0x6c, 0x1a, 0xe7, 0x74, 0x82, 0x35,
  0xd1, 0x38, 0xaf, 0x3d, 0x56, 0xaf, 0x71, 0x51, 0x27, 0x59, 0x93, 0x8d,
  0x23, 0x5a, 0xee, 0x30, 0xc5, 0xcf, 0xa9, 0x46, 0x5b, 0x43, 0xa2, 0x4c,
  0x8e, 0x5d, 0x46, 0xd7, 0x29, 0xa3, 0x9c, 0x87, 0x1a, 0xc7, 0xe3, 0xb5,
  0xfa, 0xfa, 0xda, 0x9a, 0x78, 0x0c, 0x66, 0x80, 0x4c, 0xc2, 0x90, 0xcf,
  0x3e, 0xbf, 0x71, 0x4a, 0x3b, 0xa3, 0x65, 0x74, 0xb2, 0x06, 0x47, 0x6c,
  0xc0, 0x34, 0xfb, 0xd2, 0x8d, 0x8e, 0x76, 0xc7, 0xf8, 0xfd, 0xbc, 0xc1,
  0xd0, 0x01, 0x34, 0x33, 0x9a, 0xc4, 0xdf, 0xb7, 0xb5, 0xad, 0xdf, 0x85,
  0x4b, 0xd7, 0xb4, 0xeb, 0x91, 0x71, 0x91, 0xd0, 0xf5, 0xa9, 0x6f, 0xc0,
  0xa0, 0x53, 0xf2, 0x30, 0x51, 0x42, 0xec, 0x2f, 0xf9, 0xe8, 0x1a, 0x0f,
  0x3d, 0x83, 0x48, 0xc6, 0xc7, 0x3e, 0xf2, 0x30, 0x49, 0x88, 0x29, 0xf2,
  0xb1, 0xe8, 0x79, 0x66, 0x0c, 0xd1, 0x94, 0x7c, 0xdf, 0x1c, 0x6a, 0xf9,
  0x6b, 0x34, 0xa3, 0x68, 0x64, 0x54, 0xe1, 0x48, 0x56, 0x63, 0x38, 0xa6,
  0x50, 0xd6, 0x2d, 0x43, 0x81, 0xc2, 0xbc, 0xc6, 0x22, 0xe4, 0x68, 0x5c,
  0x15, 0x70, 0x4c, 0xe5, 0x70, 0x02, 0x80, 0x2a, 0xba, 0x80, 0x55, 0x05,
  0x58, 0xd2, 0x39, 0x4c, 0x0e, 0x28, 0x72, 0xfb, 0x33, 0xb4, 0x5d, 0x03,
  0x7a, 0x79, 0x85, 0x60, 0x29, 0x94, 0xfb, 0x72, 0x92, 0x15, 0x6d, 0x2d,
  0xa8, 0x8e, 0x49, 0x6b, 0x54, 0x0b, 0xba, 0xf3, 0x52, 0x6b, 0x75, 0xd5,
  0xca, 0x67, 0xc8, 0x1a, 0xc8, 0x91, 0x65, 0x01, 0xc9, 0x3d, 0xb9, 0xce,
  0xdb, 0x5c, 0xe7, 0xa2, 0x5f, 0x47, 0x6e, 0xac, 0x37, 0x22, 0xc9, 0x81,
  0xe3, 0x9c, 0x89, 0xe4, 0x2e, 0x1c, 0x67, 0x35, 0x92, 0xfb, 0x32, 0xce,
  0x3b, 0x51, 0x36, 0xd6, 0x6f, 0x22, 0x87, 0xd5, 0x71, 0xd6, 0x23, 0xd9,
  0xc3, 0x38, 0x3f, 0x45, 0x41, 0xc6, 0x27, 0xc9, 0xc5, 0x48, 0xae, 0x74,
  0xb5, 0x99, 0x99, 0xe0, 0x67, 0x5c, 0x87, 0x3d, 0x30, 0x97, 0x63, 0xdf,
  0x64, 0xee, 0xc8, 0xd5, 0xc8, 0x37, 0x67, 0x73, 0xe2, 0x7b, 0x15, 0xe6,
  0x0a, 0x00, 0xeb, 0x77, 0xe1, 0x73, 0x2b, 0x9a, 0x30, 0x67, 0x93, 0x03,
  0x21, 0x15, 0xd2, 0x4d, 0x1a, 0xe8, 0xfa, 0x2c, 0x3b, 0xc4, 0x81, 0xea,
  0x14, 0x4d, 0x37, 0x77, 0xd2, 0x4c, 0x73, 0x17, 0xed, 0x6e, 0x36, 0x89,
  0x46, 0x42, 0x7c, 0x66, 0x6a, 0x27, 0xee, 0x99, 0xda, 0x85, 0xb3, 0x53,
  0x4d, 0xcc, 0x8c, 0x4f, 0x51, 0x6a, 0x21, 0xec, 0xf8, 0x63, 0x53, 0xe8,
  0xf6, 0x4f, 0x93, 0x93, 0x9c, 0xc6, 0xec, 0xb6, 0x29, 0x1c, 0x5a, 0x98,
  0xea, 0x28, 0x67, 0x1a, 0x83, 0x85, 0xe9, 0x8e, 0x95, 0x55, 0x94, 0x1a,
  0x28, 0x90, 0x35, 0xaa, 0x28, 0xc9, 0xf7, 0xe1, 0x67, 0x0b, 0xb4, 0x33,
  0xb3, 0x9d, 0x9c, 0xac, 0x47, 0xa9, 0x91, 0x80, 0x86, 0xc6, 0xcb, 0x94,
  0x7c, 0xb2, 0x40, 0x52, 0xdf, 0x4f, 0xe5, 0x8e, 0x5e, 0x25, 0xbe, 0xaf,
  0xa1, 0x6d, 0x15, 0xca, 0xe4, 0x0b, 0x18, 0xf4, 0x23, 0x39, 0x33, 0x1e,
  0x45, 0x4a, 0x15, 0xf3, 0x12, 0xf3, 0xeb, 0x30, 0x17, 0x38, 0x9a, 0xb2,
  0x56, 0x81, 0x73, 0xef, 0xa1, 0xd4, 0xa3, 0xb2, 0x0a, 0x3a, 0x2a, 0x60,
  0xd1, 0xaa, 0x2b, 0x8a, 0xb6, 0x9b, 0xb3, 0x6e, 0x03, 0xc9, 0x9a, 0x57,
  0x1d, 0x67, 0xe3, 0x6c, 0x00, 0x45, 0x48, 0x02, 0xb9, 0xf3, 0xd8, 0x81,
  0x79, 0xe8, 0x0c, 0x2b, 0x45, 0xd6, 0x41, 0xd5, 0x19, 0xe6, 0x12, 0x28,
  0xb6, 0x68, 0x6d, 0x98, 0xf3, 0xe7, 0x1e, 0xe4, 0xb1, 0x83, 0xd0, 0x79,
  0xa5, 0x75, 0x7e, 0xd5, 0x4a, 0x73, 0xfe, 0xaa, 0x48, 0x92, 0xef, 0xa2,
  0x0a, 0x68, 0x4c, 0x85, 0x54, 0xe2, 0x77, 0xa0, 0x06, 0x54, 0xc6, 0x00,
  0xc7, 0x31, 0xe4, 0x9c, 0x07, 0x58, 0x85, 0x10, 0x2b, 0xc8, 0xf9, 0xe5,
  0x18, 0xe0, 0x45, 0xad, 0x8d, 0x5b, 0xe4, 0x7a, 0x2b, 0xd3, 0x60, 0xa0,
  0x68, 0x87, 0xcb, 0xe7, 0x0a, 0x91, 0xb4, 0x1b, 0x52, 0xbd, 0x14, 0x70,
  0xfd, 0x85, 0x5c, 0x7f, 0x45, 0xae, 0xbf, 0x32, 0x3e, 0x61, 0x02, 0xae,
  0xc1, 0x90, 0x6b, 0xb0, 0xc8, 0x35, 0xc8, 0x75, 0x5d, 0xf3, 0xa8, 0x41,
  0x01, 0xd7, 0x62, 0xc8, 0xb5, 0x58, 0xe4, 0x5a, 0x2c, 0xa3, 0xe4, 0xcf,
  0x99, 0x39, 0x19, 0xff, 0x86, 0x9c, 0xa7, 0x5f, 0xd3, 0x71, 0x8e, 0xf7,
  0x1c, 0xd3, 0x56, 0xa9, 0x44, 0x36, 0x11, 0x7d, 0x6f, 0xe0, 0x1e, 0xa5,
  0xfc, 0x8c, 0xef, 0xfb, 0x94, 0xce, 0xe5, 0x28, 0xe3, 0x79, 0x14, 0xff,
  0x16, 0xad, 0xbd, 0x5a, 0xb3, 0x6a, 0x27, 0xd0, 0x77, 0x95, 0xee, 0x44,
  0x2a, 0xd3, 0xc9, 0xaa, 0x42, 0x27, 0xe7, 0xfb, 0x6e, 0x3e, 0x97, 0x73,
  0x0b, 0x9e, 0xe7, 0x6e, 0xe1, 0xf3, 0xda, 0xc6, 0x5d, 0xb7, 0x13, 0x0a,
  0x52, 0x0a, 0xee, 0x19, 0xcf, 0x49, 0x8e, 0xb2, 0x5a, 0x2e, 0xd8, 0x0d,
  0x56, 0xec, 0xe7, 0x01, 0x78, 0x8f, 0xff, 0xde, 0x30, 0x0f, 0xfe, 0x55,
  0xff, 0x10, 0x5f, 0x9a, 0x47, 0x7c, 0xf1, 0x67, 0x0a, 0x65, 0xcb, 0xd8,
  0xc3, 0x4f, 0x4d, 0xe2, 0xb3, 0x2c, 0xf9, 0xf2, 0x00, 0x4d, 0x69, 0x04,
  0xf1, 0x29, 0xde, 0x84, 0x79, 0xe8, 0x8b, 0xbf, 0x00, 0xf0, 0x2f, 0x9f,
  0xd9, 0xfc, 0x99, 0x2a, 0xe6, 0x8e, 0xbc, 0xc0, 0x0c, 0xb2, 0x25, 0xd8,
  0x74, 0xf7, 0x0b, 0xc2, 0xea, 0xde, 0xe7, 0x4f, 0xdf, 0xfe, 0xf2, 0x46,
  0xb4, 0xef, 0xe6, 0xcb, 0xdf, 0xee, 0xf8, 0xf8, 0x56, 0xe9, 0x4f, 0x97,
  0x4d, 0x54, 0x0c, 0x00, 0x17, 0x00, 0x01, 0x00, 0x10, 0xf8, 0x1b, 0x00,
  0x78, 0x01, 0xed, 0x59, 0xcd, 0x6f, 0x1b, 0x45, 0x14, 0x9f, 0xdd, 0x7d,
  0x5e, 0x8f, 0x37, 0x93, 0xe7, 0xdd, 0xf5, 0xc6, 0x71, 0xda, 0x8d, 0xbb,
  0x71, 0x37, 0x8e, 0x5d, 0xdb, 0xb5, 0x93, 0xb6, 0x60, 0xaa, 0xb4, 0x58,
  0xa1, 0x46, 0x90, 0x54, 0x04, 0xca, 0x87, 0x4a, 0x21, 0x97, 0x82, 0x2a,
  0x01, 0x42, 0x0a, 0x85, 0xb6, 0x52, 0x5b, 0xdc, 0x6d, 0x11, 0x2d, 0xaa,
  0x7a, 0x40, 0x5c, 0x90, 0xda, 0x22, 0x21, 0xa8, 0x90, 0x2a, 0xf1, 0x07,
  0x70, 0x21, 0x2d, 0x0d, 0x82, 0x03, 0x70, 0x20, 0x07, 0x8e, 0x88, 0x1b,
  0xaa, 0x84, 0x84, 0xc4, 0x01, 0xb8, 0x95, 0xf7, 0x36, 0x9b, 0xaa, 0x84,
  0x4a, 0xdc, 0x40, 0x20, 0xff, 0xa4, 0x37, 0xbf, 0xb7, 0x6f, 0xde, 0xcc,
  0xbe, 0x8f, 0x59, 0x1f, 0x3c, 0xbf, 0x6f, 0x14, 0x31, 0xfc, 0xab, 0x4f,
  0xf8, 0xcc, 0x3f, 0x7a, 0x1f, 0x36, 0xc5, 0x90, 0x10, 0x29, 0x7e, 0x20,
  0xe8, 0x3c, 0x10, 0x16, 0x3d, 0x1e, 0x85, 0x78, 0x3f, 0xf1, 0x07, 0x1e,
  0x12, 0x6c, 0x27, 0x99, 0x25, 0x61, 0x74, 0x78, 0x48, 0xa0, 0x91, 0x7c,
  0xf3, 0xf5, 0xd7, 0xbb, 0x48, 0x76, 0x93, 0xfa, 0x17, 0xd0, 0x6b, 0xc4,
  0x6f, 0x24, 0x3f, 0x91, 0x30, 0x06, 0x78, 0x48, 0x90, 0x21, 0xd9, 0x90,
  0xc8, 0xdf, 0x21, 0x4b, 0xa2, 0x48, 0x0c, 0x92, 0xf5, 0xf8, 0xf6, 0xe1,
  0x13, 0xd3, 0x44, 0x7b, 0x48, 0x84, 0xa5, 0xb4, 0xfb, 0x99, 0xd7, 0xf0,
  0xde, 0xe0, 0xaf, 0x77, 0x8d, 0xeb, 0xbf, 0x8c, 0xb5, 0x3e, 0x31, 0xde,
  0x36, 0x79, 0xfc, 0x33, 0x6e, 0xf7, 0x6d, 0x5d, 0x1f, 0x1f, 0x4d, 0x9e,
  0xd7, 0x7a, 0x79, 0x9d, 0x84, 0xfb, 0x77, 0x37, 0xdc, 0x22, 0x30, 0xdf,
  0x0d, 0x7c, 0x6e, 0x4c, 0x31, 0xdf, 0x32, 0xb5, 0x73, 0x81, 0xa9, 0x2f,
  0xdb, 0xa6, 0x91, 0x9d, 0x34, 0x61, 0x7e, 0x92, 0xcc, 0xff, 0x18, 0x38,
  0xa7, 0xb5, 0xd4, 0x4d, 0x6d, 0x35, 0x0b, 0x53, 0x4f, 0x4e, 0xb2, 0x71,
  0xb7, 0x53, 0xf2, 0xff, 0x03, 0xd7, 0x00, 0x49, 0xd6, 0xc0, 0xcf, 0x6b,
  0xb0, 0x13, 0xe9, 0xa3, 0x8f, 0x3e, 0xfa, 0xe8, 0xa3, 0x8f, 0x3e, 0xfa,
  0xe8, 0xa3, 0x8f, 0x3e, 0xfa, 0xe8, 0xa3, 0x8f, 0x3e, 0xfa, 0xf8, 0x57,
  0x31, 0x16, 0x2d, 0x2d, 0x66, 0x2f, 0x5c, 0x1b, 0x10, 0xdf, 0xad, 0xd8,
  0x69, 0x4d, 0xd4, 0x89, 0x1d, 0x62, 0x97, 0xd8, 0x25, 0xce, 0x11, 0xe7,
  0x88, 0x6f, 0x19, 0x5f, 0x2e, 0x7d, 0x3c, 0xaf, 0x8b, 0xcf, 0x8c, 0x2f,
  0x96, 0x0c, 0xe3, 0xf3, 0x25, 0xb8, 0xd5, 0x7d, 0x8b, 0xff, 0xdd, 0xb8,
  0x98, 0xf7, 0x67, 0x45, 0xd0, 0xfe, 0x01, 0xd1, 0x89, 0x2e, 0xee, 0x6f,
  0xc5, 0x7a, 0xa1, 0xe0, 0x44, 0x97, 0xc2, 0xf6, 0xec, 0xc5, 0xb0, 0x33,
  0x7b, 0x29, 0x2f, 0x62, 0x9b, 0xef, 0x3b, 0x11, 0x73, 0x10, 0x90, 0x5f,
  0xf9, 0xa1, 0xd9, 0xcb, 0xf9, 0x7c, 0x6c, 0x0f, 0xc3, 0x55, 0xfb, 0x40,
  0xc5, 0x89, 0x2e, 0xef, 0x5f, 0xb5, 0x0d, 0xb4, 0x56, 0x6d, 0x42, 0x90,
  0x2d, 0x0c, 0x67, 0xdb, 0x5d, 0x58, 0x6e, 0x75, 0x2f, 0xdc, 0xd8, 0xdb,
  0xcd, 0x2f, 0x4b, 0x71, 0x66, 0x45, 0xde, 0xfc, 0xc6, 0xc8, 0x10, 0x67,
  0x88, 0x2d, 0x62, 0x8b, 0x38, 0x32, 0x4e, 0x2f, 0xd9, 0x5d, 0x5c, 0x7e,
  0xb6, 0xfb, 0xfd, 0x8d, 0x63, 0x94, 0x0f, 0x56, 0x7d, 0xcc, 0x56, 0x8b,
  0x78, 0x94, 0xf4, 0x42, 0xcd, 0x57, 0x97, 0x28, 0xb6, 0x91, 0x5a, 0x51,
  0xf1, 0xbe, 0x85, 0xba, 0x13, 0xd9, 0xd5, 0x3c, 0x1e, 0xa1, 0xb9, 0xa0,
  0xe1, 0xab, 0x82, 0x88, 0x56, 0xc6, 0x1a, 0xbb, 0xc1, 0x21, 0xff, 0xd7,
  0xd8, 0x46, 0xcf, 0x61, 0x73, 0x27, 0xbc, 0x4a, 0x7a, 0x95, 0xf6, 0xa9,
  0x54, 0xa7, 0x30, 0x24, 0xdb, 0xc6, 0xda, 0x6e, 0x38, 0x4c, 0xb6, 0x0a,
  0xe9, 0x93, 0xb5, 0x9d, 0xc0, 0x7b, 0xb9, 0x94, 0x37, 0xdb, 0xb4, 0xaa,
  0x8e, 0xa2, 0x2a, 0x50, 0xaf, 0x02, 0x5e, 0x2e, 0xcf, 0xcc, 0x5e, 0x2a,
  0x97, 0x67, 0xc7, 0xc9, 0x6f, 0xbc, 0x79, 0x10, 0x82, 0xcc, 0x3e, 0x7c,
  0x85, 0x7c, 0x5c, 0x7a, 0xde, 0x5a, 0xb3, 0x40, 0x27, 0xde, 0x50, 0xdb,
  0x0a, 0x03, 0xc4, 0xad, 0xda, 0x21, 0xa8, 0xd7, 0x84, 0x6a, 0xd4, 0xf4,
  0x38, 0xb6, 0x1c, 0xd5, 0x2e, 0x47, 0xf6, 0xd1, 0x86, 0x09, 0x46, 0x75,
  0x27, 0xfa, 0xa4, 0xfb, 0x0d, 0x1d, 0x8a, 0x8d, 0x50, 0xf1, 0x1e, 0xd8,
  0xc8, 0x2b, 0x24, 0x5b, 0xa9, 0x61, 0xc5, 0xef, 0x1f, 0xa3, 0x1a, 0x6d,
  0xa9, 0xee, 0xc1, 0x5a, 0xb5, 0x82, 0x63, 0x64, 0x9f, 0xaa, 0x9d, 0x87,
  0x2c, 0x71, 0xb6, 0xf1, 0x01, 0x34, 0x6b, 0x3b, 0x55, 0x91, 0xf4, 0xcd,
  0x8d, 0x77, 0xa0, 0xdc, 0xf4, 0xd5, 0xb6, 0x5a, 0x45, 0xd9, 0xf4, 0x6c,
  0x37, 0xce, 0xc2, 0x10, 0xf1, 0xa6, 0xc6, 0x51, 0xe0, 0x3d, 0x39, 0xff,
  0x42, 0xf3, 0x30, 0xf0, 0xbb, 0x52, 0x73, 0x1f, 0xc1, 0x48, 0xb3, 0xac,
  0x0a, 0x99, 0x29, 0x4c, 0x4d, 0x4c, 0x29, 0x73, 0xb4, 0xad, 0x36, 0x34,
  0x43, 0xc5, 0x67, 0x44, 0xd0, 0xbc, 0x68, 0xae, 0xc6, 0x3d, 0xd1, 0x3c,
  0x0e, 0x1a, 0xb1, 0xd6, 0xdc, 0x0d, 0x22, 0x23, 0x91, 0xdf, 0xe9, 0x34,
  0xf6, 0x41, 0xca, 0x90, 0x8a, 0xf3, 0xd3, 0x9b, 0x33, 0x90, 0x22, 0x36,
  0xc7, 0x0f, 0x81, 0x43, 0xbc, 0xb1, 0xf9, 0x54, 0xbc, 0x2e, 0x3d, 0x7c,
  0x18, 0xcc, 0x94, 0x54, 0x06, 0xe9, 0x06, 0xad, 0x4d, 0x6f, 0xb6, 0xd4,
  0x29, 0x71, 0xe1, 0x9a, 0x4d, 0x69, 0xb1, 0x2d, 0x9d, 0x76, 0xc1, 0xb1,
  0x94, 0x52, 0x79, 0x89, 0x83, 0x96, 0x54, 0xae, 0xa9, 0x94, 0x97, 0x2f,
  0xe2, 0x90, 0x55, 0x54, 0x68, 0x4a, 0x95, 0x43, 0x9a, 0x32, 0x8b, 0x2a,
  0x8b, 0x52, 0x05, 0x4e, 0x80, 0x23, 0x4a, 0xc9, 0x61, 0x2c, 0xaa, 0xcc,
  0x5c, 0xa0, 0x0a, 0x4e, 0x05, 0x0b, 0x52, 0x4a, 0x73, 0xb0, 0x84, 0xc2,
  0x11, 0xb8, 0xa1, 0x58, 0x94, 0x90, 0x29, 0x29, 0xae, 0x67, 0x66, 0x62,
  0x1f, 0x70, 0xdd, 0xac, 0xd1, 0x19, 0xc8, 0x18, 0x42, 0x49, 0xd2, 0xb3,
  0x9b, 0x1e, 0x04, 0xd1, 0x35, 0x97, 0x39, 0x0f, 0x6b, 0xfc, 0x11, 0x68,
  0xf9, 0x2e, 0xca, 0x05, 0xbb, 0x67, 0xa5, 0x84, 0x9a, 0xd4, 0x5d, 0x55,
  0xf7, 0x01, 0xa9, 0xf4, 0x6a, 0xbb, 0xef, 0xe1, 0x94, 0x70, 0x55, 0x9c,
  0xef, 0x4b, 0x15, 0xd8, 0x2a, 0x40, 0x65, 0x72, 0x1e, 0xea, 0x29, 0x4f,
  0xc5, 0x35, 0x79, 0x19, 0x40, 0x6a, 0xd1, 0x75, 0xa1, 0x79, 0x71, 0x2e,
  0xec, 0x67, 0x3a, 0x87, 0x22, 0x7e, 0x9f, 0xe9, 0x1c, 0x8d, 0xac, 0x05,
  0xaf, 0x67, 0xc6, 0xfa, 0xd9, 0x88, 0xeb, 0x0f, 0xce, 0xc1, 0x48, 0x33,
  0x4a, 0xc8, 0x71, 0x81, 0x73, 0x38, 0xc2, 0xd1, 0x0a, 0xda, 0x63, 0x25,
  0xc5, 0xe7, 0x23, 0xeb, 0xbc, 0x18, 0xe5, 0x26, 0x2a, 0x8a, 0xfb, 0x93,
  0x75, 0x8e, 0x47, 0x40, 0x0c, 0xce, 0x99, 0xc8, 0x1c, 0xac, 0xa3, 0x3b,
  0x5e, 0x52, 0x90, 0xa9, 0xab, 0x21, 0xea, 0x63, 0x1c, 0xbf, 0x73, 0x3e,
  0xf2, 0x16, 0x8a, 0x3d, 0x8f, 0x74, 0xe9, 0x1c, 0x00, 0x67, 0xa1, 0x44,
  0xb1, 0x03, 0x7a, 0x0b, 0x95, 0x9e, 0x95, 0x73, 0xb1, 0x00, 0x75, 0xb4,
  0x53, 0x01, 0x5a, 0x9a, 0xc0, 0x3c, 0xf9, 0x8c, 0xb8, 0x07, 0xae, 0xf8,
  0xe0, 0xa1, 0x45, 0xfa, 0xa8, 0xbb, 0xe5, 0x4a, 0x5e, 0xa8, 0x15, 0xb1,
  0x43, 0x74, 0x20, 0x25, 0x31, 0x97, 0x2a, 0x63, 0x00, 0x80, 0xf6, 0xe6,
  0x00, 0x1d, 0x43, 0x47, 0xee, 0xe1, 0x98, 0x6b, 0x5d, 0x89, 0x73, 0xce,
  0xcd, 0x80, 0x33, 0x4e, 0xf1, 0x6e, 0x0a, 0x30, 0x3b, 0xea, 0x63, 0x3b,
  0x1f, 0xd2, 0x1e, 0xb4, 0x76, 0x97, 0xe8, 0x44, 0x75, 0x79, 0x12, 0xaa,
  0x12, 0xbd, 0x41, 0x85, 0x8e, 0xa6, 0xc7, 0x67, 0x13, 0xc9, 0x9f, 0xf3,
  0x4c, 0xbd, 0xfa, 0x10, 0xb8, 0x42, 0xac, 0xfc, 0x22, 0xae, 0x6a, 0x66,
  0x4e, 0xaa, 0x6c, 0xad, 0x48, 0xfb, 0xd2, 0xba, 0x2e, 0xad, 0xf3, 0xe4,
  0x49, 0xcf, 0xb1, 0x91, 0xeb, 0x92, 0xd5, 0xe8, 0x5b, 0x22, 0x96, 0x9a,
  0x0b, 0x91, 0xae, 0x07, 0x19, 0xd2, 0x8d, 0x23, 0x1d, 0xda, 0x63, 0x75,
  0x6d, 0x87, 0xfa, 0x1f, 0x81, 0x3c, 0x19, 0x29, 0x19, 0xb0, 0x7f, 0xfa,
  0x58, 0x08, 0xda, 0xb8, 0x8e, 0xec, 0x97, 0x7a, 0x63, 0x9a, 0xce, 0xfb,
  0xaa, 0x5f, 0x24, 0x44, 0xa0, 0xcd, 0xeb, 0x3d, 0x18, 0x93, 0x28, 0x36,
  0x09, 0x7c, 0x9e, 0x7e, 0x33, 0x60, 0x5e, 0xf6, 0xc4, 0xbc, 0xe8, 0x05,
  0xf4, 0xdb, 0x31, 0x9d, 0x2f, 0x21, 0xc7, 0x97, 0x3a, 0xb1, 0x07, 0xdc,
  0x46, 0x09, 0x87, 0x75, 0x1d, 0xb5, 0x39, 0xbd, 0x37, 0x2c, 0x25, 0x0e,
  0x0b, 0x81, 0x5c, 0x53, 0xe3, 0xf5, 0x36, 0xd8, 0x43, 0x21, 0x72, 0x1f,
  0x0b, 0x79, 0x1f, 0xc3, 0x52, 0x19, 0x61, 0x8e, 0xf6, 0x98, 0x13, 0xbd,
  0x56, 0x67, 0xf1, 0x07, 0x61, 0x76, 0xd2, 0x71, 0x0c, 0xa7, 0x02, 0x88,
  0xfd, 0xdf, 0x0c, 0x21, 0x8e, 0x63, 0x5b, 0x3b, 0x3e, 0x5f, 0xee, 0x63,
  0x7b, 0x21, 0x4b, 0x35, 0x1f, 0xa7, 0x75, 0xdb, 0xef, 0xf4, 0x3f, 0x97,
  0xf8, 0xef, 0x58, 0xf5, 0xb7, 0x9f, 0x4e, 0xfc, 0x1f, 0xdf, 0x0b, 0xe5,
  0x52, 0x11, 0xdb, 0x77, 0xfa, 0xde, 0x1b, 0x80, 0x72, 0xed, 0x38, 0x3f,
  0xfb, 0x99, 0xc4, 0xef, 0xc9, 0x69, 0x98, 0x4e, 0x7c, 0x6c, 0x5b, 0x99,
  0x83, 0x6b, 0xf3, 0x0b, 0x6d, 0xd0, 0x1a, 0xf4, 0xdb, 0x93, 0xcc, 0x39,
  0x34, 0x87, 0x34, 0x27, 0x52, 0x02, 0x61, 0x48, 0xe2, 0xa4, 0x0e, 0xd8,
  0xd2, 0x5d, 0x9c, 0xa2, 0x5c, 0x77, 0x48, 0x50, 0x90, 0xf8, 0xb9, 0xe4,
  0xc7, 0xf1, 0xc0, 0x0b, 0x21, 0xdc, 0x23, 0x75, 0x35, 0x80, 0x12, 0x33,
  0x96, 0x85, 0xf7, 0xd1, 0xd9, 0x96, 0x89, 0x0f, 0xc7, 0x22, 0x5e, 0x09,
  0xe2, 0xde, 0x88, 0x23, 0x10, 0x7f, 0xef, 0x03, 0x8e, 0x07, 0xf1, 0xb7,
  0x3b, 0x64, 0x43, 0x56, 0x77, 0x7b, 0x9e, 0x52, 0x38, 0x44, 0xe7, 0x26,
  0x4f, 0xf5, 0xd3, 0xa4, 0xb9, 0xa2, 0xa5, 0xa9, 0xc3, 0xbc, 0x3e, 0x43,
  0x71, 0x26, 0xfb, 0x78, 0xcc, 0x7a, 0x27, 0x5d, 0x60, 0x16, 0x9d, 0xb4,
  0xcf, 0xac, 0x75, 0xd2, 0x01, 0xb3, 0xea, 0xa4, 0x43, 0xe6, 0xc1, 0x4e,
  0x5a, 0x88, 0xd3, 0xd7, 0xf8, 0xae, 0x6a, 0xfd, 0x85, 0xc8, 0x08, 0x0f,
  0xeb, 0x6c, 0x05, 0x1e, 0xd6, 0xd9, 0xe2, 0xff, 0xda, 0xd7, 0xd9, 0xe2,
  0x7b, 0x2d, 0xdd, 0xe0, 0xb9, 0xdb, 0x57, 0x66, 0x6c, 0xd3, 0xb4, 0xf8,
  0xe6, 0xad, 0xc5, 0x03, 0x83, 0x6d, 0xba, 0x16, 0xdf, 0x66, 0xdc, 0xb6,
  0xc5, 0x37, 0x19, 0x94, 0x2d, 0xe1, 0xce, 0xeb, 0xb6, 0x18, 0x9f, 0x24,
  0xf7, 0x38, 0x1c, 0x07, 0xdf, 0xa1, 0x41, 0x72, 0x13, 0x72, 0x63, 0xcf,
  0x03, 0x8b, 0x3f, 0x7f, 0xfa, 0x5d, 0xd4, 0xfd, 0xf1, 0xb9, 0xaf, 0xea,
  0xef, 0xde, 0x2c, 0xfd, 0x01, 0x1f, 0xb3, 0x89, 0x03, 0x00, 0x00, 0x00,
  0x17, 0x00, 0x01, 0x00, 0x00, 0x14, 0x1b, 0x00, 0x78, 0x01, 0xed, 0x59,
  0x4f, 0x68, 0x1c, 0x55, 0x18, 0x7f, 0x3b, 0xf3, 0xe6, 0xed, 0xdb, 0xd9,
  0x6f, 0xbf, 0x9d, 0x99, 0x9d, 0xdd, 0xfc, 0x9b, 0x24, 0xb3, 0xc9, 0x36,
  0xd9, 0xd9, 0xcd, 0x64, 0x37, 0x21, 0x5b, 0x42, 0x91, 0xb6, 0xc4, 0x58,
  0x74, 0xd3, 0x36, 0x22, 0x78, 0x29, 0x8d, 0x87, 0x2a, 0x1e, 0x44, 0xa4,
  0x56, 0x28, 0x52, 0xc2, 0x3a, 0x7a, 0x68, 0x45, 0x44, 0xa4, 0x87, 0x8a,
  0x9b, 0xd0, 0x83, 0x16, 0x41, 0xf1, 0xe6, 0xbf, 0x8b, 0xa6, 0x36, 0x39,
  0x8a, 0x97, 0x50, 0x0a, 0xc5, 0x83, 0x7a, 0x2a, 0x45, 0x44, 0xf0, 0xe4,
  0x41, 0xa8, 0xdf, 0x9b, 0xec, 0x96, 0x52, 0xe3, 0xd5, 0x43, 0x99, 0x1f,
  0x7c, 0xef, 0xf7, 0xbd, 0xef, 0xfd, 0xf9, 0xde, 0xf7, 0x7d, 0x6f, 0xf7,
  0xf0, 0xc6, 0x1d, 0x61, 0x31, 0x2e, 0x9d, 0xfe, 0xf9, 0x0b, 0xc5, 0x77,
  0xdc, 0x8f, 0x1b, 0xac, 0xc8, 0x98, 0xa1, 0x3a, 0x0f, 0xe0, 0xac, 0xab,
  0x5a, 0xc6, 0xbe, 0x1d, 0x56, 0x2d, 0x63, 0x42, 0x35, 0x3d, 0x54, 0x49,
  0x0e, 0x91, 0x28, 0x1c, 0x55, 0x4d, 0x0f, 0x29, 0x92, 0xee, 0x87, 0x43,
  0x87, 0x49, 0x8e, 0x90, 0xfa, 0x2f, 0x0c, 0x90, 0xfc, 0x45, 0xf2, 0x3b,
  0x89, 0x42, 0x56, 0x35, 0x3d, 0x48, 0x12, 0xe8, 0x89, 0x02, 0x57, 0xcd,
  0x7f, 0xc0, 0x26, 0xc9, 0x91, 0xec, 0x37, 0xe7, 0xf0, 0xfa, 0xeb, 0x8f,
  0x11, 0x2d, 0x93, 0xb0, 0x5f, 0x6f, 0xe8, 0x47, 0xaa, 0x4f, 0xfb, 0xaa,
  0x1f, 0xe3, 0xa7, 0xaf, 0x7e, 0x3b, 0xac, 0xf8, 0x51, 0x42, 0xbf, 0x4e,
  0x0a, 0x37, 0x1f, 0x2e, 0x22, 0x41, 0x53, 0x0d, 0x61, 0xb9, 0x57, 0xc7,
  0x7e, 0xce, 0x5e, 0xee, 0xf5, 0xfb, 0xb5, 0xfc, 0x9e, 0x44, 0xd5, 0x6f,
  0x3f, 0xdc, 0x23, 0x28, 0xde, 0x0f, 0xca, 0xa5, 0x60, 0xab, 0x4d, 0x91,
  0xba, 0xe4, 0x0b, 0x6d, 0xc7, 0x12, 0x7a, 0x7e, 0x4e, 0xf0, 0xd5, 0x39,
  0x32, 0xff, 0x6f, 0x50, 0x31, 0xf5, 0xef, 0xa7, 0x48, 0xed, 0x45, 0x21,
  0xb4, 0x5e, 0xe4, 0xba, 0xae, 0xda, 0x47, 0x1e, 0x2a, 0x07, 0x48, 0xd2,
  0x87, 0xea, 0x2b, 0xa8, 0x6c, 0x58, 0x24, 0x0a, 0x0f, 0xfe, 0x56, 0x13,
  0x24, 0x48, 0x90, 0x20, 0x41, 0x82, 0x04, 0x09, 0x12, 0x24, 0x48, 0x90,
  0x20, 0x41, 0x82, 0x04, 0x09, 0xfe, 0x77, 0x94, 0xa3, 0xad, 0xb3, 0xf9,
  0x77, 0xaf, 0x33, 0x76, 0x6b, 0xd7, 0x4a, 0xa7, 0x18, 0xbf, 0xd7, 0x7a,
  0x5b, 0xbd, 0x5c, 0xe8, 0xfa, 0x97, 0x5b, 0x37, 0xf4, 0xaf, 0xb7, 0xee,
  0xe9, 0xdf, 0x6c, 0x7d, 0xbe, 0xaa, 0xb1, 0x2e, 0xe3, 0x6d, 0xe6, 0x2f,
  0xfe, 0xa2, 0x0d, 0xe6, 0x22, 0x8d, 0xbd, 0xb5, 0x2b, 0xef, 0xfe, 0xa8,
  0x6f, 0x30, 0xab, 0xad, 0x93, 0x9e, 0x21, 0xdd, 0x27, 0x36, 0x89, 0xd5,
  0x1c, 0x29, 0x73, 0x51, 0x99, 0xf6, 0xb3, 0x69, 0xbf, 0x4d, 0xc6, 0xda,
  0x05, 0xd2, 0x0b, 0xa4, 0x3b, 0xc4, 0x0e, 0x71, 0x77, 0x69, 0x31, 0xde,
  0x8b, 0x61, 0x2e, 0x52, 0xec, 0x79, 0xc4, 0x2d, 0xb6, 0x63, 0xb5, 0x9c,
  0x9d, 0x66, 0xeb, 0xfd, 0xed, 0xc5, 0x96, 0xdc, 0xb9, 0xa1, 0xff, 0xbd,
  0xf5, 0x1a, 0x9d, 0x6b, 0x30, 0x60, 0x38, 0x14, 0x34, 0x71, 0x38, 0x98,
  0xc7, 0x91, 0x60, 0x01, 0x37, 0x96, 0x0e, 0xb6, 0xcf, 0x91, 0x5d, 0x06,
  0xcb, 0x98, 0x09, 0x8e, 0xa1, 0x19, 0x3c, 0x89, 0xd9, 0xa0, 0x8d, 0x6a,
  0x9f, 0x11, 0xf2, 0xdb, 0xad, 0xec, 0x8d, 0x63, 0x70, 0x1c, 0x37, 0x97,
  0xbc, 0xf6, 0xab, 0xa4, 0x8f, 0xd6, 0x9b, 0x30, 0x56, 0x9f, 0x87, 0x7c,
  0x70, 0x12, 0xbb, 0x53, 0x4b, 0x6d, 0xaf, 0xce, 0x60, 0xbc, 0xbe, 0x00,
  0x2a, 0xee, 0x51, 0x16, 0xed, 0xca, 0xfa, 0x3b, 0x7c, 0x8c, 0x38, 0x53,
  0x7f, 0x8f, 0x6f, 0x4c, 0x2d, 0xb7, 0x37, 0xa7, 0x8e, 0xb5, 0xad, 0x60,
  0x0a, 0xed, 0xa0, 0x1a, 0xef, 0x8b, 0x74, 0x4e, 0x8f, 0xc6, 0xb3, 0xf5,
  0x2b, 0x7c, 0x9c, 0xd8, 0xac, 0x5f, 0xe6, 0x7d, 0x7f, 0x1b, 0xe4, 0x6f,
  0xb3, 0x52, 0x89, 0xfd, 0x54, 0x68, 0x0c, 0xeb, 0x5d, 0x7e, 0x80, 0x38,
  0x5f, 0xbf, 0xca, 0xa7, 0x88, 0xad, 0xfa, 0x49, 0x3e, 0x4d, 0x6c, 0xd7,
  0x9f, 0xd9, 0x5b, 0xd3, 0x8b, 0xd9, 0x71, 0x72, 0x51, 0x1c, 0x47, 0xc8,
  0xc0, 0x0c, 0xe7, 0x21, 0x1b, 0x2e, 0x80, 0xda, 0x63, 0x84, 0xe6, 0x62,
  0x78, 0x9e, 0x23, 0x71, 0x26, 0x3c, 0x13, 0xaf, 0x29, 0x93, 0x9f, 0x41,
  0xea, 0xe7, 0xc3, 0x0b, 0x5c, 0x9d, 0xd7, 0x0a, 0x3b, 0xdc, 0x0e, 0x17,
  0xe3, 0xf9, 0xea, 0xdc, 0x4e, 0x78, 0x39, 0x3e, 0x57, 0x21, 0xbc, 0xc2,
  0xcb, 0xc4, 0x6e, 0xd8, 0xe5, 0x25, 0xe2, 0x62, 0x78, 0x35, 0x5e, 0x3f,
  0x49, 0xbe, 0xd4, 0xdc, 0x0c, 0xd9, 0x32, 0x8d, 0x43, 0xb1, 0x6d, 0x82,
  0xce, 0x21, 0x1b, 0xe4, 0x9b, 0x6c, 0x66, 0xe3, 0x45, 0x9e, 0x25, 0xce,
  0x36, 0x5e, 0xe2, 0x6a, 0x9e, 0x24, 0xbd, 0xd8, 0x38, 0xc5, 0x59, 0xa6,
  0x86, 0x46, 0xa1, 0x06, 0xa2, 0x58, 0x83, 0xf4, 0x40, 0x0d, 0x0a, 0x64,
  0x2f, 0x34, 0x3a, 0xdc, 0x25, 0x76, 0x1b, 0x17, 0x39, 0x33, 0x18, 0xea,
  0x05, 0x06, 0x7e, 0x91, 0xc5, 0xb9, 0x54, 0x7b, 0x60, 0xe3, 0x15, 0x9e,
  0x27, 0xce, 0x37, 0xce, 0xf0, 0x6c, 0xc6, 0x43, 0x8b, 0x74, 0xab, 0x71,
  0x9e, 0x1b, 0xe3, 0x1e, 0xd8, 0xa4, 0xdb, 0x8d, 0x73, 0x5c, 0x94, 0x3d,
  0x48, 0x4f, 0xee, 0xf5, 0x9d, 0xc6, 0x05, 0x6e, 0x67, 0x24, 0x1a, 0xd3,
  0x12, 0x44, 0x20, 0xe1, 0x0d, 0x46, 0x35, 0xaf, 0x99, 0xe8, 0xd0, 0x58,
  0xda, 0x76, 0x78, 0xd6, 0x90, 0x68, 0x1b, 0x1c, 0xf5, 0x71, 0x09, 0xfa,
  0x34, 0x07, 0xb7, 0x26, 0x70, 0xc8, 0x33, 0xc1, 0xab, 0x01, 0x16, 0x3d,
  0x01, 0xc3, 0x15, 0x13, 0x46, 0x3d, 0x80, 0x52, 0x45, 0xc0, 0x08, 0x9a,
  0x30, 0x56, 0x01, 0x18, 0x40, 0x01, 0xe3, 0x08, 0x50, 0x36, 0x4d, 0xe9,
  0x0b, 0x21, 0x8d, 0xac, 0x85, 0x13, 0x00, 0xf2, 0x78, 0xcb, 0xdc, 0xd1,
  0xd3, 0x16, 0x88, 0x9c, 0x05, 0x72, 0xcd, 0xea, 0xf8, 0xe5, 0x9e, 0x3f,
  0xe6, 0xa2, 0xcb, 0x1c, 0xf4, 0x18, 0x43, 0x3f, 0xe0, 0x30, 0x24, 0x5d,
  0x28, 0x4a, 0x07, 0x46, 0x25, 0x03, 0x15, 0x93, 0x61, 0x1f, 0x8c, 0x86,
  0xb9, 0x0b, 0x25, 0xee, 0xc0, 0x18, 0xa7, 0x9c, 0x15, 0x39, 0x72, 0xb2,
  0xeb, 0xf6, 0x7c, 0x94, 0x1d, 0xf0, 0x31, 0x53, 0xe0, 0xa0, 0x62, 0x16,
  0xf6, 0xa1, 0x88, 0x67, 0x7c, 0x60, 0x29, 0xea, 0x8f, 0xfb, 0xa0, 0xad,
  0xf1, 0x8e, 0xb5, 0xe6, 0x77, 0x54, 0x9c, 0x86, 0x7d, 0x25, 0x32, 0x62,
  0xfe, 0x24, 0xd2, 0x0a, 0x0e, 0xaa, 0x5c, 0x0a, 0xbb, 0x1b, 0x69, 0x45,
  0x17, 0xb5, 0x14, 0x43, 0x6b, 0x80, 0xa3, 0xf2, 0xa5, 0xdb, 0x97, 0x23,
  0x7b, 0xb2, 0x8a, 0x7a, 0xac, 0x7f, 0x14, 0x09, 0x62, 0x61, 0x7f, 0x16,
  0xa9, 0x18, 0xd4, 0xd9, 0xb3, 0x03, 0x55, 0x28, 0x4c, 0x57, 0xe3, 0x18,
  0xdc, 0xb5, 0x6a, 0x47, 0xc5, 0xc1, 0x0b, 0x12, 0xc1, 0x99, 0x41, 0x5e,
  0x96, 0xa8, 0xea, 0x9e, 0x73, 0x4f, 0x5d, 0xab, 0x38, 0xb3, 0x54, 0x1b,
  0x81, 0x1a, 0xf5, 0xb5, 0x22, 0xe5, 0x91, 0xe6, 0x0c, 0x90, 0x7e, 0xc0,
  0x7d, 0xee, 0x5a, 0xd5, 0x69, 0xd2, 0x3c, 0xd8, 0x65, 0xa3, 0xec, 0xa8,
  0x3b, 0x39, 0x81, 0x3c, 0x90, 0x28, 0xb3, 0x26, 0xea, 0xb6, 0x40, 0x75,
  0xcf, 0x02, 0xf7, 0xcc, 0x35, 0x6b, 0x7c, 0x0c, 0xdd, 0x69, 0xfa, 0x0d,
  0x14, 0x25, 0xc8, 0x1c, 0xd0, 0x5a, 0x9a, 0x7f, 0x82, 0x1d, 0x35, 0x8a,
  0x02, 0xa2, 0x19, 0xb9, 0x9e, 0xa7, 0x18, 0x0b, 0x29, 0x09, 0x83, 0xca,
  0xfe, 0xac, 0x7a, 0xe2, 0xa4, 0x73, 0xa6, 0x90, 0xeb, 0x8c, 0xed, 0xfe,
  0xc9, 0x3e, 0x4d, 0x45, 0xb3, 0x72, 0xdd, 0xe8, 0xeb, 0x4d, 0xb9, 0x2e,
  0xfa, 0x3a, 0x63, 0x3e, 0xcb, 0x31, 0x8c, 0x38, 0xf7, 0x23, 0x29, 0x7d,
  0x2d, 0x4d, 0x57, 0x7d, 0x95, 0x75, 0xf4, 0xd0, 0x42, 0x9e, 0x15, 0xa8,
  0xaf, 0x8a, 0x8e, 0xb6, 0xca, 0x3b, 0x46, 0xc3, 0xc1, 0x19, 0x4b, 0x62,
  0x68, 0x99, 0x38, 0x6b, 0x59, 0x94, 0x1b, 0x86, 0x4d, 0x47, 0xc2, 0x9c,
  0x63, 0xc2, 0xbc, 0x63, 0x81, 0x4f, 0xff, 0x15, 0x59, 0x21, 0x90, 0xad,
  0xb0, 0x4e, 0x96, 0xd3, 0xfd, 0x58, 0xa1, 0x75, 0x2b, 0xbc, 0x23, 0xe6,
  0x00, 0xd9, 0x5c, 0x09, 0x55, 0x5d, 0xe3, 0x33, 0x3d, 0x65, 0x71, 0xbd,
  0xe1, 0xc6, 0xf9, 0x14, 0x2b, 0x6e, 0xfc, 0x5c, 0xab, 0x85, 0x4e, 0x5c,
  0x3f, 0x71, 0xc2, 0xe7, 0x9c, 0x71, 0x91, 0x12, 0x0c, 0x03, 0xc7, 0xc4,
  0x9a, 0x03, 0x68, 0x30, 0x21, 0x34, 0xc9, 0xb0, 0xea, 0x48, 0x9c, 0x71,
  0x25, 0x84, 0xae, 0x09, 0xb3, 0x2e, 0x40, 0xb3, 0x44, 0xbe, 0x4b, 0xe4,
  0xbb, 0x04, 0x40, 0xb1, 0x08, 0x29, 0x25, 0x66, 0x4c, 0x93, 0x6e, 0x1c,
  0xe0, 0xe9, 0xd6, 0xf6, 0xf6, 0x0b, 0xad, 0x8b, 0xdb, 0x7e, 0xcd, 0xc2,
  0xb2, 0x67, 0xc1, 0x44, 0xc5, 0x8a, 0xef, 0x15, 0xaf, 0x39, 0x28, 0x6b,
  0x2e, 0x42, 0xad, 0x84, 0x86, 0xe7, 0x40, 0xc6, 0x73, 0x21, 0xe7, 0x95,
  0x40, 0x54, 0x1c, 0x30, 0x2b, 0x2e, 0x60, 0xa5, 0x04, 0xb6, 0xe7, 0xe1,
  0x24, 0x5a, 0x90, 0x46, 0x07, 0xb2, 0xe8, 0x42, 0x1e, 0x4b, 0x50, 0x40,
  0x44, 0xab, 0xe6, 0x81, 0x53, 0x41, 0x48, 0x4b, 0xb1, 0x8b, 0x79, 0x8d,
  0x5d, 0xd4, 0xbc, 0x05, 0x5d, 0xd3, 0x3a, 0x22, 0xbd, 0x78, 0x1b, 0xa5,
  0xc9, 0x58, 0x8a, 0x58, 0x63, 0x4c, 0xd3, 0x89, 0xb9, 0xa0, 0xa4, 0x2e,
  0xdc, 0xc6, 0xf8, 0x23, 0xce, 0x9b, 0xd7, 0x8b, 0x8a, 0xf6, 0x9e, 0xe3,
  0xef, 0x23, 0x7e, 0x8b, 0x7e, 0xc8, 0x16, 0x7f, 0x8a, 0xd0, 0x74, 0x35,
  0x76, 0xff, 0x89, 0x5a, 0xd9, 0x52, 0x29, 0xf5, 0x75, 0x81, 0x35, 0x55,
  0xa3, 0xa0, 0x6c, 0x1a, 0x25, 0x89, 0x70, 0xdf, 0x16, 0xbf, 0xf2, 0xab,
  0x6a, 0xef, 0xf3, 0xbc, 0x7d, 0x53, 0x2d, 0x20, 0x0c, 0x92, 0x64, 0x48,
  0x78, 0xef, 0x2b, 0xc1, 0xf6, 0xf2, 0xe3, 0x67, 0xff, 0xf8, 0xee, 0x56,
  0xf4, 0xc4, 0x9d, 0xe7, 0x7f, 0x98, 0xf9, 0xe0, 0xee, 0xc4, 0x3f, 0xa5,
  0xaa, 0x47, 0x8c, 0x00, 0x02, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x01, 0x02, 0x03, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x05, 0x03,
  0x08, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x03, 0x01, 0x06, 0x05, 0x04, 0x02, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x7c, 0x00, 0x00, 0x78, 0x01, 0x63, 0x64,
  0x60, 0x60, 0x60, 0x06, 0x62, 0x09, 0x20, 0x06, 0x81, 0x1a, 0x20, 0x96,
  0x05, 0x62, 0x26, 0x20, 0x06, 0x01, 0x1b, 0x10, 0x01, 0x04, 0xac, 0x40,
  0xec, 0x02, 0xc4, 0x20, 0x00, 0x62, 0x27, 0x00, 0x31, 0x0c, 0x80, 0xcc,
  0xf0, 0x01, 0x62, 0x10, 0x00, 0xb1, 0x61, 0xe0, 0x3f, 0x10, 0x80, 0xf8,
  0x19, 0x40, 0x0c, 0xb2, 0x03, 0x55, 0xee, 0xff, 0x7f, 0x00, 0x33, 0x03,
  0x0a, 0x55, 0x00, 0x00, 0x78, 0x62, 0x6f, 0x70, 0x01, 0x00, 0x00, 0x00,
  0x7e, 0x02, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00
};
