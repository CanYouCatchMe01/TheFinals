#if 0
;
; Input signature:
;
; Name                 Index   Mask Register SysValue  Format   Used
; -------------------- ----- ------ -------- -------- ------- ------
; TEXCOORD                 0   xy          0     NONE   float   xy  
; TEXCOORD                 1   xyzw        1     NONE   float   xyz 
; TEXCOORD                 2   xyz         2     NONE   float   xyz 
; COLOR                    0   xyzw        3     NONE   float       
; SV_Position              0   xyzw        4      POS   float   xyz 
; TEXCOORD                 4   xyzw        5     NONE   float   xyzw
;
;
; Output signature:
;
; Name                 Index   Mask Register SysValue  Format   Used
; -------------------- ----- ------ -------- -------- ------- ------
; SV_Target                0   xyzw        0   TARGET   float   xyzw
; SV_Target                1   x           1   TARGET    uint   x   
;
; shader debug name: C:\Users\marcu\Downloads\DirectXTK12-main\DirectXTK12-main\Src/Shaders/Compiled\XboxGamingXboxOnePBREffect_PSTexturedEmissiveVelocity.pdb
; shader hash: 8585e87bb128ddc248de4471edb732f4
;
; Pipeline Runtime Information: 
;
;PSVRuntimeInfo:
; Pixel Shader
; DepthOutput=0
; SampleFrequency=0
; MinimumExpectedWaveLaneCount: 0
; MaximumExpectedWaveLaneCount: 4294967295
; UsesViewID: false
; SigInputElements: 6
; SigOutputElements: 2
; SigPatchConstOrPrimElements: 0
; SigInputVectors: 6
; SigOutputVectors[0]: 2
; SigOutputVectors[1]: 0
; SigOutputVectors[2]: 0
; SigOutputVectors[3]: 0
; EntryFunctionName: PSTexturedEmissiveVelocity
;
;
; Input signature:
;
; Name                 Index             InterpMode DynIdx
; -------------------- ----- ---------------------- ------
; TEXCOORD                 0                 linear       
; TEXCOORD                 1                 linear       
; TEXCOORD                 2                 linear       
; COLOR                    0                 linear       
; SV_Position              0          noperspective       
; TEXCOORD                 4                 linear       
;
; Output signature:
;
; Name                 Index             InterpMode DynIdx
; -------------------- ----- ---------------------- ------
; SV_Target                0                              
; SV_Target                1                              
;
; Buffer Definitions:
;
; cbuffer 
; {
;
;   [388 x i8] (type annotation not present)
;
; }
;
;
; Resource Bindings:
;
; Name                                 Type  Format         Dim      ID      HLSL Bind  Count
; ------------------------------ ---------- ------- ----------- ------- -------------- ------
;                                   cbuffer      NA          NA     CB0            cb0     1
;                                   sampler      NA          NA      S0             s0     1
;                                   sampler      NA          NA      S1             s1     1
;                                   texture     f32          2d      T0             t0     1
;                                   texture     f32          2d      T1             t1     1
;                                   texture     f32          2d      T2             t2     1
;                                   texture     f32          2d      T3             t3     1
;                                   texture     f32        cube      T4             t4     1
;                                   texture     f32        cube      T5             t5     1
;
;
; ViewId state:
;
; Number of inputs: 24, outputs: 5
; Outputs dependent on ViewId: {  }
; Inputs contributing to computation of Outputs:
;   output 0 depends on inputs: { 0, 1, 4, 5, 6, 8, 9, 10 }
;   output 1 depends on inputs: { 0, 1, 4, 5, 6, 8, 9, 10 }
;   output 2 depends on inputs: { 0, 1, 4, 5, 6, 8, 9, 10 }
;   output 3 depends on inputs: { 0, 1 }
;   output 4 depends on inputs: { 16, 17, 18, 20, 21, 22, 23 }
;
target datalayout = "e-m:e-p:32:32-i1:32-i8:32-i16:32-i32:32-i64:64-f16:32-f32:32-f64:64-n8:16:32:64"
target triple = "dxil-ms-xb1"

%dx.types.Handle = type { i8* }
%dx.types.CBufRet.f32 = type { float, float, float, float }
%dx.types.ResRet.f32 = type { float, float, float, float, i32 }
%dx.types.CBufRet.i32 = type { i32, i32, i32, i32 }
%"class.Texture2D<vector<float, 4> >" = type { <4 x float>, %"class.Texture2D<vector<float, 4> >::mips_type" }
%"class.Texture2D<vector<float, 4> >::mips_type" = type { i32 }
%"class.Texture2D<vector<float, 3> >" = type { <3 x float>, %"class.Texture2D<vector<float, 3> >::mips_type" }
%"class.Texture2D<vector<float, 3> >::mips_type" = type { i32 }
%"class.TextureCube<vector<float, 3> >" = type { <3 x float> }
%hostlayout.Constants = type { <3 x float>, [4 x <4 x float>], [3 x <3 x float>], [4 x <4 x float>], [4 x <4 x float>], [3 x <3 x float>], [3 x <3 x float>], <3 x float>, float, float, float, i32, float, float }
%struct.SamplerState = type { i32 }

define void @PSTexturedEmissiveVelocity() {
  %1 = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 0, i32 5, i32 5, i1 false)  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %2 = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 0, i32 4, i32 4, i1 false)  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %3 = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 0, i32 3, i32 3, i1 false)  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %4 = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 0, i32 2, i32 2, i1 false)  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %5 = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 0, i32 1, i32 1, i1 false)  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %6 = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 0, i32 0, i32 0, i1 false)  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %7 = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 3, i32 1, i32 1, i1 false)  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %8 = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 3, i32 0, i32 0, i1 false)  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %9 = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 2, i32 0, i32 0, i1 false)  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %10 = call float @dx.op.loadInput.f32(i32 4, i32 5, i32 0, i8 1, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %11 = call float @dx.op.loadInput.f32(i32 4, i32 5, i32 0, i8 3, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %12 = call float @dx.op.loadInput.f32(i32 4, i32 4, i32 0, i8 1, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %13 = call float @dx.op.loadInput.f32(i32 4, i32 2, i32 0, i8 0, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %14 = call float @dx.op.loadInput.f32(i32 4, i32 2, i32 0, i8 1, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %15 = call float @dx.op.loadInput.f32(i32 4, i32 2, i32 0, i8 2, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %16 = call float @dx.op.loadInput.f32(i32 4, i32 1, i32 0, i8 0, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %17 = call float @dx.op.loadInput.f32(i32 4, i32 1, i32 0, i8 1, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %18 = call float @dx.op.loadInput.f32(i32 4, i32 1, i32 0, i8 2, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %19 = call float @dx.op.loadInput.f32(i32 4, i32 0, i32 0, i8 0, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %20 = call float @dx.op.loadInput.f32(i32 4, i32 0, i32 0, i8 1, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %21 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %9, i32 0)  ; CBufferLoadLegacy(handle,regIndex)
  %22 = extractvalue %dx.types.CBufRet.f32 %21, 0
  %23 = extractvalue %dx.types.CBufRet.f32 %21, 1
  %24 = extractvalue %dx.types.CBufRet.f32 %21, 2
  %25 = fsub fast float %22, %16
  %26 = fsub fast float %23, %17
  %27 = fsub fast float %24, %18
  %28 = call float @dx.op.dot3.f32(i32 55, float %25, float %26, float %27, float %25, float %26, float %27)  ; Dot3(ax,ay,az,bx,by,bz)
  %29 = call float @dx.op.unary.f32(i32 25, float %28)  ; Rsqrt(value)
  %30 = fmul fast float %25, %29
  %31 = fmul fast float %26, %29
  %32 = fmul fast float %27, %29
  %33 = call %dx.types.ResRet.f32 @dx.op.sample.f32(i32 60, %dx.types.Handle %5, %dx.types.Handle %8, float %19, float %20, float undef, float undef, i32 0, i32 0, i32 undef, float undef)  ; Sample(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,clamp)
  %34 = extractvalue %dx.types.ResRet.f32 %33, 0
  %35 = extractvalue %dx.types.ResRet.f32 %33, 1
  %36 = fmul fast float %34, 2.000000e+00
  %37 = fmul fast float %35, 2.000000e+00
  %38 = fadd fast float %36, -1.000000e+00
  %39 = fadd fast float %37, -1.000000e+00
  %40 = call float @dx.op.dot2.f32(i32 54, float %38, float %39, float %38, float %39)  ; Dot2(ax,ay,bx,by)
  %41 = fsub fast float 1.000000e+00, %40
  %42 = call float @dx.op.unary.f32(i32 24, float %41)  ; Sqrt(value)
  %43 = call float @dx.op.unary.f32(i32 83, float %16)  ; DerivCoarseX(value)
  %44 = call float @dx.op.unary.f32(i32 83, float %17)  ; DerivCoarseX(value)
  %45 = call float @dx.op.unary.f32(i32 83, float %18)  ; DerivCoarseX(value)
  %46 = call float @dx.op.unary.f32(i32 84, float %16)  ; DerivCoarseY(value)
  %47 = call float @dx.op.unary.f32(i32 84, float %17)  ; DerivCoarseY(value)
  %48 = call float @dx.op.unary.f32(i32 84, float %18)  ; DerivCoarseY(value)
  %49 = call float @dx.op.unary.f32(i32 83, float %19)  ; DerivCoarseX(value)
  %50 = call float @dx.op.unary.f32(i32 83, float %20)  ; DerivCoarseX(value)
  %51 = call float @dx.op.unary.f32(i32 84, float %19)  ; DerivCoarseY(value)
  %52 = call float @dx.op.unary.f32(i32 84, float %20)  ; DerivCoarseY(value)
  %53 = fmul fast float %48, %44
  %54 = fmul fast float %47, %45
  %55 = fsub fast float %53, %54
  %56 = fmul fast float %46, %45
  %57 = fmul fast float %48, %43
  %58 = fsub fast float %56, %57
  %59 = fmul fast float %47, %43
  %60 = fmul fast float %46, %44
  %61 = fsub fast float %59, %60
  %62 = fmul fast float %61, %47
  %63 = fmul fast float %58, %48
  %64 = fsub fast float %62, %63
  %65 = fmul fast float %55, %48
  %66 = fmul fast float %61, %46
  %67 = fsub fast float %65, %66
  %68 = fmul fast float %58, %46
  %69 = fmul fast float %55, %47
  %70 = fsub fast float %68, %69
  %71 = fmul fast float %58, %45
  %72 = fmul fast float %61, %44
  %73 = fsub fast float %71, %72
  %74 = fmul fast float %61, %43
  %75 = fmul fast float %55, %45
  %76 = fsub fast float %74, %75
  %77 = fmul fast float %55, %44
  %78 = fmul fast float %58, %43
  %79 = fsub fast float %77, %78
  %80 = fmul fast float %64, %49
  %81 = call float @dx.op.tertiary.f32(i32 46, float %51, float %73, float %80)  ; FMad(a,b,c)
  %82 = fmul fast float %67, %49
  %83 = call float @dx.op.tertiary.f32(i32 46, float %51, float %76, float %82)  ; FMad(a,b,c)
  %84 = fmul fast float %70, %49
  %85 = call float @dx.op.tertiary.f32(i32 46, float %51, float %79, float %84)  ; FMad(a,b,c)
  %86 = call float @dx.op.dot3.f32(i32 55, float %81, float %83, float %85, float %81, float %83, float %85)  ; Dot3(ax,ay,az,bx,by,bz)
  %87 = call float @dx.op.unary.f32(i32 25, float %86)  ; Rsqrt(value)
  %88 = fmul fast float %64, %50
  %89 = call float @dx.op.tertiary.f32(i32 46, float %52, float %73, float %88)  ; FMad(a,b,c)
  %90 = fmul fast float %67, %50
  %91 = call float @dx.op.tertiary.f32(i32 46, float %52, float %76, float %90)  ; FMad(a,b,c)
  %92 = fmul fast float %70, %50
  %93 = call float @dx.op.tertiary.f32(i32 46, float %52, float %79, float %92)  ; FMad(a,b,c)
  %94 = call float @dx.op.dot3.f32(i32 55, float %89, float %91, float %93, float %89, float %91, float %93)  ; Dot3(ax,ay,az,bx,by,bz)
  %95 = call float @dx.op.unary.f32(i32 25, float %94)  ; Rsqrt(value)
  %96 = fmul fast float %95, %89
  %97 = fmul fast float %95, %91
  %98 = fmul fast float %95, %93
  %99 = fmul fast float %81, %38
  %100 = fmul fast float %99, %87
  %101 = call float @dx.op.tertiary.f32(i32 46, float %39, float %96, float %100)  ; FMad(a,b,c)
  %102 = call float @dx.op.tertiary.f32(i32 46, float %42, float %13, float %101)  ; FMad(a,b,c)
  %103 = fmul fast float %83, %38
  %104 = fmul fast float %103, %87
  %105 = call float @dx.op.tertiary.f32(i32 46, float %39, float %97, float %104)  ; FMad(a,b,c)
  %106 = call float @dx.op.tertiary.f32(i32 46, float %42, float %14, float %105)  ; FMad(a,b,c)
  %107 = fmul fast float %85, %38
  %108 = fmul fast float %107, %87
  %109 = call float @dx.op.tertiary.f32(i32 46, float %39, float %98, float %108)  ; FMad(a,b,c)
  %110 = call float @dx.op.tertiary.f32(i32 46, float %42, float %15, float %109)  ; FMad(a,b,c)
  %111 = call float @dx.op.dot3.f32(i32 55, float %102, float %106, float %110, float %102, float %106, float %110)  ; Dot3(ax,ay,az,bx,by,bz)
  %112 = call float @dx.op.unary.f32(i32 25, float %111)  ; Rsqrt(value)
  %113 = fmul fast float %112, %102
  %114 = fmul fast float %112, %106
  %115 = fmul fast float %112, %110
  %116 = call %dx.types.ResRet.f32 @dx.op.sample.f32(i32 60, %dx.types.Handle %6, %dx.types.Handle %8, float %19, float %20, float undef, float undef, i32 0, i32 0, i32 undef, float undef)  ; Sample(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,clamp)
  %117 = extractvalue %dx.types.ResRet.f32 %116, 0
  %118 = extractvalue %dx.types.ResRet.f32 %116, 1
  %119 = extractvalue %dx.types.ResRet.f32 %116, 2
  %120 = call %dx.types.ResRet.f32 @dx.op.sample.f32(i32 60, %dx.types.Handle %4, %dx.types.Handle %8, float %19, float %20, float undef, float undef, i32 0, i32 0, i32 undef, float undef)  ; Sample(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,clamp)
  %121 = extractvalue %dx.types.ResRet.f32 %120, 0
  %122 = extractvalue %dx.types.ResRet.f32 %120, 1
  %123 = extractvalue %dx.types.ResRet.f32 %120, 2
  %124 = call float @dx.op.dot3.f32(i32 55, float %113, float %114, float %115, float %30, float %31, float %32)  ; Dot3(ax,ay,az,bx,by,bz)
  %125 = call float @dx.op.unary.f32(i32 7, float %124)  ; Saturate(value)
  %126 = fmul fast float %122, %122
  %127 = fmul fast float %123, %117
  %128 = fmul fast float %123, %118
  %129 = fmul fast float %123, %119
  %130 = fsub fast float %117, %127
  %131 = fsub fast float %118, %128
  %132 = fsub fast float %119, %129
  %133 = fmul fast float %130, %121
  %134 = fmul fast float %131, %121
  %135 = fmul fast float %132, %121
  %136 = fadd fast float %117, 0xBFA47AE140000000
  %137 = fadd fast float %118, 0xBFA47AE140000000
  %138 = fadd fast float %119, 0xBFA47AE140000000
  %139 = fmul fast float %123, %136
  %140 = fmul fast float %123, %137
  %141 = fmul fast float %123, %138
  %142 = fadd fast float %139, 0x3FA47AE140000000
  %143 = fadd fast float %140, 0x3FA47AE140000000
  %144 = fadd fast float %141, 0x3FA47AE140000000
  %145 = fmul fast float %142, %121
  %146 = fmul fast float %143, %121
  %147 = fmul fast float %144, %121
  br label %148

; <label>:148                                     ; preds = %148, %0
  %149 = phi float [ 0.000000e+00, %0 ], [ %245, %148 ]
  %150 = phi float [ 0.000000e+00, %0 ], [ %246, %148 ]
  %151 = phi float [ 0.000000e+00, %0 ], [ %247, %148 ]
  %152 = phi i32 [ 0, %0 ], [ %248, %148 ]
  %153 = add nuw nsw i32 %152, 16
  %154 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %9, i32 %153)  ; CBufferLoadLegacy(handle,regIndex)
  %155 = extractvalue %dx.types.CBufRet.f32 %154, 0
  %156 = extractvalue %dx.types.CBufRet.f32 %154, 1
  %157 = extractvalue %dx.types.CBufRet.f32 %154, 2
  %158 = fsub fast float -0.000000e+00, %155
  %159 = fsub fast float -0.000000e+00, %156
  %160 = fsub fast float -0.000000e+00, %157
  %161 = call float @dx.op.dot3.f32(i32 55, float %158, float %159, float %160, float %158, float %159, float %160)  ; Dot3(ax,ay,az,bx,by,bz)
  %162 = call float @dx.op.unary.f32(i32 25, float %161)  ; Rsqrt(value)
  %163 = fmul fast float %162, %158
  %164 = fmul fast float %162, %159
  %165 = fmul fast float %162, %160
  %166 = fadd fast float %163, %30
  %167 = fadd fast float %164, %31
  %168 = fadd fast float %165, %32
  %169 = call float @dx.op.dot3.f32(i32 55, float %166, float %167, float %168, float %166, float %167, float %168)  ; Dot3(ax,ay,az,bx,by,bz)
  %170 = call float @dx.op.unary.f32(i32 25, float %169)  ; Rsqrt(value)
  %171 = fmul fast float %166, %170
  %172 = fmul fast float %167, %170
  %173 = fmul fast float %168, %170
  %174 = call float @dx.op.dot3.f32(i32 55, float %113, float %114, float %115, float %163, float %164, float %165)  ; Dot3(ax,ay,az,bx,by,bz)
  %175 = call float @dx.op.unary.f32(i32 7, float %174)  ; Saturate(value)
  %176 = call float @dx.op.dot3.f32(i32 55, float %163, float %164, float %165, float %171, float %172, float %173)  ; Dot3(ax,ay,az,bx,by,bz)
  %177 = call float @dx.op.unary.f32(i32 7, float %176)  ; Saturate(value)
  %178 = call float @dx.op.dot3.f32(i32 55, float %113, float %114, float %115, float %171, float %172, float %173)  ; Dot3(ax,ay,az,bx,by,bz)
  %179 = call float @dx.op.unary.f32(i32 7, float %178)  ; Saturate(value)
  %180 = fmul fast float %122, 2.000000e+00
  %181 = fmul fast float %177, %177
  %182 = fmul fast float %181, %180
  %183 = fadd fast float %182, -5.000000e-01
  %184 = fsub fast float 1.000000e+00, %175
  %185 = fmul fast float %184, %184
  %186 = fmul fast float %185, %185
  %187 = fmul fast float %186, %184
  %188 = fmul fast float %187, %183
  %189 = fadd fast float %188, 1.000000e+00
  %190 = fsub fast float 1.000000e+00, %125
  %191 = fmul fast float %190, %190
  %192 = fmul fast float %191, %191
  %193 = fmul fast float %192, %190
  %194 = fmul fast float %193, %183
  %195 = fadd fast float %194, 1.000000e+00
  %196 = fmul fast float %189, %195
  %197 = fmul fast float %126, %126
  %198 = fadd fast float %197, -1.000000e+00
  %199 = fmul fast float %179, %179
  %200 = fmul fast float %199, %198
  %201 = fadd fast float %200, 1.000000e+00
  %202 = fmul fast float %201, %201
  %203 = fmul fast float %202, 0x400921FB60000000
  %204 = call float @dx.op.binary.f32(i32 35, float 0x3EB0C6F7A0000000, float %203)  ; FMax(a,b)
  %205 = fdiv fast float %197, %204
  %206 = fsub fast float 1.000000e+00, %145
  %207 = fsub fast float 1.000000e+00, %146
  %208 = fsub fast float 1.000000e+00, %147
  %209 = fsub fast float 1.000000e+00, %177
  %210 = fmul fast float %209, %209
  %211 = fmul fast float %210, %210
  %212 = fmul fast float %211, %209
  %213 = fmul fast float %212, %206
  %214 = fmul fast float %212, %207
  %215 = fmul fast float %212, %208
  %216 = fadd fast float %213, %145
  %217 = fadd fast float %214, %146
  %218 = fadd fast float %215, %147
  %219 = fsub fast float 1.000000e+00, %181
  %220 = fmul fast float %197, 2.500000e-01
  %221 = fmul fast float %220, %219
  %222 = fadd fast float %221, %181
  %223 = fdiv fast float 1.000000e+00, %222
  %224 = fmul fast float %223, %205
  %225 = fmul fast float %224, %216
  %226 = fmul fast float %224, %217
  %227 = fmul fast float %224, %218
  %228 = add nuw nsw i32 %152, 19
  %229 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %9, i32 %228)  ; CBufferLoadLegacy(handle,regIndex)
  %230 = extractvalue %dx.types.CBufRet.f32 %229, 0
  %231 = extractvalue %dx.types.CBufRet.f32 %229, 1
  %232 = extractvalue %dx.types.CBufRet.f32 %229, 2
  %233 = fmul fast float %230, %175
  %234 = fmul fast float %231, %175
  %235 = fmul fast float %232, %175
  %236 = fmul fast float %196, %133
  %237 = fmul fast float %196, %134
  %238 = fmul fast float %196, %135
  %239 = fadd fast float %225, %236
  %240 = fadd fast float %226, %237
  %241 = fadd fast float %227, %238
  %242 = fmul fast float %233, %239
  %243 = fmul fast float %234, %240
  %244 = fmul fast float %235, %241
  %245 = fadd fast float %242, %149
  %246 = fadd fast float %243, %150
  %247 = fadd fast float %244, %151
  %248 = add nuw nsw i32 %152, 1
  %249 = icmp eq i32 %248, 3
  br i1 %249, label %250, label %148

; <label>:250                                     ; preds = %148
  %251 = call float @dx.op.loadInput.f32(i32 4, i32 5, i32 0, i8 0, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %252 = call float @dx.op.loadInput.f32(i32 4, i32 5, i32 0, i8 2, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %253 = call float @dx.op.loadInput.f32(i32 4, i32 4, i32 0, i8 0, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %254 = call float @dx.op.loadInput.f32(i32 4, i32 4, i32 0, i8 2, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %255 = extractvalue %dx.types.ResRet.f32 %116, 3
  %256 = call %dx.types.ResRet.f32 @dx.op.sample.f32(i32 60, %dx.types.Handle %1, %dx.types.Handle %7, float %113, float %114, float %115, float undef, i32 undef, i32 undef, i32 undef, float undef)  ; Sample(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,clamp)
  %257 = extractvalue %dx.types.ResRet.f32 %256, 0
  %258 = extractvalue %dx.types.ResRet.f32 %256, 1
  %259 = extractvalue %dx.types.ResRet.f32 %256, 2
  %260 = fmul fast float %257, %133
  %261 = fmul fast float %258, %134
  %262 = fmul fast float %259, %135
  %263 = fadd fast float %260, %245
  %264 = fadd fast float %261, %246
  %265 = fadd fast float %262, %247
  %266 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %9, i32 23)  ; CBufferLoadLegacy(handle,regIndex)
  %267 = extractvalue %dx.types.CBufRet.i32 %266, 2
  %268 = sitofp i32 %267 to float
  %269 = fmul fast float %268, %122
  %270 = fsub fast float -0.000000e+00, %30
  %271 = fsub fast float -0.000000e+00, %31
  %272 = fsub fast float -0.000000e+00, %32
  %273 = call float @dx.op.dot3.f32(i32 55, float %270, float %271, float %272, float %113, float %114, float %115)  ; Dot3(ax,ay,az,bx,by,bz)
  %274 = fmul fast float %273, 2.000000e+00
  %275 = fmul fast float %274, %113
  %276 = fmul fast float %274, %114
  %277 = fmul fast float %274, %115
  %278 = fsub fast float %270, %275
  %279 = fsub fast float %271, %276
  %280 = fsub fast float %272, %277
  %281 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %2, %dx.types.Handle %7, float %278, float %279, float %280, float undef, i32 undef, i32 undef, i32 undef, float %269)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %282 = extractvalue %dx.types.ResRet.f32 %281, 0
  %283 = extractvalue %dx.types.ResRet.f32 %281, 1
  %284 = extractvalue %dx.types.ResRet.f32 %281, 2
  %285 = fmul fast float %282, %145
  %286 = fmul fast float %283, %146
  %287 = fmul fast float %284, %147
  %288 = fadd fast float %263, %285
  %289 = fadd fast float %264, %286
  %290 = fadd fast float %265, %287
  %291 = call %dx.types.ResRet.f32 @dx.op.sample.f32(i32 60, %dx.types.Handle %3, %dx.types.Handle %8, float %19, float %20, float undef, float undef, i32 0, i32 0, i32 undef, float undef)  ; Sample(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,clamp)
  %292 = extractvalue %dx.types.ResRet.f32 %291, 0
  %293 = extractvalue %dx.types.ResRet.f32 %291, 1
  %294 = extractvalue %dx.types.ResRet.f32 %291, 2
  %295 = fadd fast float %288, %292
  %296 = fadd fast float %289, %293
  %297 = fadd fast float %290, %294
  %298 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %9, i32 22)  ; CBufferLoadLegacy(handle,regIndex)
  %299 = extractvalue %dx.types.CBufRet.f32 %298, 3
  %300 = fmul fast float %299, %255
  %301 = fdiv fast float %251, %11
  %302 = fdiv fast float %10, %11
  %303 = fdiv fast float %252, %11
  %304 = fmul fast float %301, 5.000000e-01
  %305 = fmul fast float %302, 5.000000e-01
  %306 = fadd fast float %304, 5.000000e-01
  %307 = fsub fast float 5.000000e-01, %305
  %308 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %9, i32 23)  ; CBufferLoadLegacy(handle,regIndex)
  %309 = extractvalue %dx.types.CBufRet.f32 %308, 3
  %310 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %9, i32 24)  ; CBufferLoadLegacy(handle,regIndex)
  %311 = extractvalue %dx.types.CBufRet.f32 %310, 0
  %312 = fmul fast float %309, %306
  %313 = fmul fast float %311, %307
  %314 = fsub fast float %312, %253
  %315 = fsub fast float %313, %12
  %316 = fsub fast float %303, %254
  %317 = bitcast float %314 to i32
  %318 = lshr i32 %317, 31
  %319 = fmul fast float %314, 0x3F00000000000000
  %320 = call float @dx.op.unary.f32(i32 6, float %319)  ; FAbs(value)
  %321 = call float @xbox.Med3_F32(i32 10, float %320, float 0.000000e+00, float 0x3F7FFC0000000000)
  %322 = call i32 @dx.op.legacyF32ToF16(i32 130, float %321)  ; LegacyF32ToF16(value)
  %323 = add i32 %322, 8
  %324 = lshr i32 %323, 4
  %325 = shl nuw nsw i32 %318, 9
  %326 = or i32 %324, %325
  %327 = bitcast float %315 to i32
  %328 = lshr i32 %327, 31
  %329 = fmul fast float %315, 0x3F00000000000000
  %330 = call float @dx.op.unary.f32(i32 6, float %329)  ; FAbs(value)
  %331 = call float @xbox.Med3_F32(i32 10, float %330, float 0.000000e+00, float 0x3F7FFC0000000000)
  %332 = call i32 @dx.op.legacyF32ToF16(i32 130, float %331)  ; LegacyF32ToF16(value)
  %333 = add i32 %332, 8
  %334 = lshr i32 %333, 4
  %335 = shl nuw nsw i32 %328, 9
  %336 = or i32 %334, %335
  %337 = shl i32 %336, 10
  %338 = or i32 %326, %337
  %339 = bitcast float %316 to i32
  %340 = lshr i32 %339, 31
  %341 = fmul fast float %316, 7.812500e-03
  %342 = call float @dx.op.unary.f32(i32 6, float %341)  ; FAbs(value)
  %343 = call float @xbox.Med3_F32(i32 10, float %342, float 0.000000e+00, float 0x3F7FFC0000000000)
  %344 = call i32 @dx.op.legacyF32ToF16(i32 130, float %343)  ; LegacyF32ToF16(value)
  %345 = add i32 %344, 2
  %346 = lshr i32 %345, 2
  %347 = shl nuw nsw i32 %340, 11
  %348 = or i32 %346, %347
  %349 = shl i32 %348, 20
  %350 = or i32 %338, %349
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 0, float %295)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 1, float %296)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 2, float %297)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 3, float %300)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.i32(i32 5, i32 1, i32 0, i8 0, i32 %350)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  ret void
}

; Function Attrs: nounwind readnone
declare float @dx.op.loadInput.f32(i32, i32, i32, i8, i32) #0

; Function Attrs: nounwind
declare void @dx.op.storeOutput.f32(i32, i32, i32, i8, float) #1

; Function Attrs: nounwind
declare void @dx.op.storeOutput.i32(i32, i32, i32, i8, i32) #1

; Function Attrs: nounwind readnone
declare float @dx.op.dot3.f32(i32, float, float, float, float, float, float) #0

; Function Attrs: nounwind readnone
declare float @dx.op.unary.f32(i32, float) #0

; Function Attrs: nounwind readonly
declare %dx.types.ResRet.f32 @dx.op.sample.f32(i32, %dx.types.Handle, %dx.types.Handle, float, float, float, float, i32, i32, i32, float) #2

; Function Attrs: nounwind readnone
declare float @dx.op.dot2.f32(i32, float, float, float, float) #0

; Function Attrs: nounwind readnone
declare float @dx.op.binary.f32(i32, float, float) #0

; Function Attrs: nounwind readnone
declare float @xbox.Med3_F32(i32, float, float, float) #0

; Function Attrs: nounwind readonly
declare %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32, %dx.types.Handle, %dx.types.Handle, float, float, float, float, i32, i32, i32, float) #2

; Function Attrs: nounwind readnone
declare i32 @dx.op.legacyF32ToF16(i32, float) #0

; Function Attrs: nounwind readonly
declare %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32, %dx.types.Handle, i32) #2

; Function Attrs: nounwind readonly
declare %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32, %dx.types.Handle, i32) #2

; Function Attrs: nounwind readnone
declare float @dx.op.tertiary.f32(i32, float, float, float) #0

; Function Attrs: nounwind readonly
declare %dx.types.Handle @dx.op.createHandle(i32, i8, i32, i32, i1) #2

attributes #0 = { nounwind readnone }
attributes #1 = { nounwind }
attributes #2 = { nounwind readonly }

!xbox.compiler.options = !{!0}
!llvm.ident = !{!1}
!dx.version = !{!2}
!dx.valver = !{!3}
!dx.shaderModel = !{!4}
!dx.resources = !{!5}
!dx.viewIdState = !{!19}
!dx.entryPoints = !{!20}

!0 = !{!"__XBOX_PER_THREAD_SCRATCH_SIZE_LIMIT_IN_BYTES", !"0"}
!1 = !{!"dxcxbox 2410.2410.11116.10741"}
!2 = !{i32 1, i32 0}
!3 = !{i32 1, i32 8}
!4 = !{!"ps", i32 6, i32 0}
!5 = !{!6, null, !14, !16}
!6 = !{!7, !9, !10, !11, !12, !13}
!7 = !{i32 0, %"class.Texture2D<vector<float, 4> >"* undef, !"", i32 0, i32 0, i32 1, i32 2, i32 0, !8}
!8 = !{i32 0, i32 9}
!9 = !{i32 1, %"class.Texture2D<vector<float, 3> >"* undef, !"", i32 0, i32 1, i32 1, i32 2, i32 0, !8}
!10 = !{i32 2, %"class.Texture2D<vector<float, 3> >"* undef, !"", i32 0, i32 2, i32 1, i32 2, i32 0, !8}
!11 = !{i32 3, %"class.Texture2D<vector<float, 3> >"* undef, !"", i32 0, i32 3, i32 1, i32 2, i32 0, !8}
!12 = !{i32 4, %"class.TextureCube<vector<float, 3> >"* undef, !"", i32 0, i32 4, i32 1, i32 5, i32 0, !8}
!13 = !{i32 5, %"class.TextureCube<vector<float, 3> >"* undef, !"", i32 0, i32 5, i32 1, i32 5, i32 0, !8}
!14 = !{!15}
!15 = !{i32 0, %hostlayout.Constants* undef, !"", i32 0, i32 0, i32 1, i32 388, null}
!16 = !{!17, !18}
!17 = !{i32 0, %struct.SamplerState* undef, !"", i32 0, i32 0, i32 1, i32 0, null}
!18 = !{i32 1, %struct.SamplerState* undef, !"", i32 0, i32 1, i32 1, i32 0, null}
!19 = !{[26 x i32] [i32 24, i32 5, i32 15, i32 15, i32 0, i32 0, i32 7, i32 7, i32 7, i32 0, i32 7, i32 7, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0, i32 16, i32 16, i32 16, i32 0, i32 16, i32 16, i32 16, i32 16]}
!20 = !{void ()* @PSTexturedEmissiveVelocity, !"PSTexturedEmissiveVelocity", !21, !5, null}
!21 = !{!22, !36, null}
!22 = !{!23, !26, !29, !31, !32, !33}
!23 = !{i32 0, !"TEXCOORD", i8 9, i8 0, !24, i8 2, i32 1, i8 2, i32 0, i8 0, !25}
!24 = !{i32 0}
!25 = !{i32 3, i32 3}
!26 = !{i32 1, !"TEXCOORD", i8 9, i8 0, !27, i8 2, i32 1, i8 4, i32 1, i8 0, !28}
!27 = !{i32 1}
!28 = !{i32 3, i32 7}
!29 = !{i32 2, !"TEXCOORD", i8 9, i8 0, !30, i8 2, i32 1, i8 3, i32 2, i8 0, !28}
!30 = !{i32 2}
!31 = !{i32 3, !"COLOR", i8 9, i8 0, !24, i8 2, i32 1, i8 4, i32 3, i8 0, null}
!32 = !{i32 4, !"SV_Position", i8 9, i8 3, !24, i8 4, i32 1, i8 4, i32 4, i8 0, !28}
!33 = !{i32 5, !"TEXCOORD", i8 9, i8 0, !34, i8 2, i32 1, i8 4, i32 5, i8 0, !35}
!34 = !{i32 4}
!35 = !{i32 3, i32 15}
!36 = !{!37, !38}
!37 = !{i32 0, !"SV_Target", i8 9, i8 16, !24, i8 0, i32 1, i8 4, i32 0, i8 0, !35}
!38 = !{i32 1, !"SV_Target", i8 5, i8 16, !27, i8 0, i32 1, i8 1, i32 1, i8 0, !39}
!39 = !{i32 3, i32 1}

;
; DUMPING SHADER HARDWARE INSTRUCTIONS 
;
// Shader Type               : (PS)
// Shader Hw Stage           : (PS)

// Shader Instructions:
shader main
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  s_mov_b64     s[56:57], exec
  s_wqm_b64     exec, exec // wrscc
  s_mov_b32     s49, s12
  s_mov_b32     s48, s11
  s_mov_b32     s12, s9
  s_mov_b32     s16, s7
  s_mov_b32     s50, s5
  s_mov_b32     s5, 0
  s_mov_b32     s17, 0
  s_mov_b32     s9, 0
  s_mov_b32     s13, 0
  s_mov_b32     s11, 0
  s_mov_b32     m0, s15
  s_load_dwordx8  s[32:39], s[8:9], 0x00
  s_load_dwordx8  s[24:31], s[16:17], 0x00
  s_load_dwordx4  s[40:43], s[12:13], 0x00
  s_load_dwordx4  s[44:47], s[10:11], 0x00
  s_load_dwordx8  s[8:15], s[4:5], 0x00
  v_interp_p1_f32  v13, v0, attr0.x
  v_interp_p1_f32  v14, v0, attr0.y
  v_interp_p2_f32  v13, v1, attr0.x
  v_interp_p2_f32  v14, v1, attr0.y
  s_waitcnt     lgkmcnt(0)
  image_sample  v[15:18], v[13:14], s[8:15], s[40:43] dmask:0x3
  s_mov_b32     s2, s3
  s_mov_b32     s3, 0
  s_mov_b32     s7, 0
  s_load_dwordx8  s[16:23], s[6:7], 0x00
  s_load_dwordx8  s[0:7], s[2:3], 0x00
  s_mov_b32     s51, 0
  s_bitset1_b32  s49, 20
  v_interp_p1_f32  v9, v0, attr1.x
  v_interp_p1_f32  v17, v0, attr1.y
  s_waitcnt     lgkmcnt(0)
  image_sample  v[5:8], v[13:14], s[0:7], s[40:43] dmask:0xf
  s_load_dwordx8  s[0:7], s[50:51], 0x00
  s_mov_b32     s50, -1
  s_mov_b32     s51, 0x00024fac
  v_interp_p1_f32  v18, v0, attr1.z
  v_interp_p2_f32  v9, v1, attr1.x
  s_waitcnt     lgkmcnt(0)
  image_sample  v[10:13], v[13:14], s[0:7], s[40:43] dmask:0x7
  s_buffer_load_dwordx4  s[52:55], s[48:51], 0x00
  v_interp_p2_f32  v17, v1, attr1.y
  v_interp_p2_f32  v18, v1, attr1.z
  s_buffer_load_dwordx16  s[0:15], s[48:51], 0x40
  ds_swizzle_b32  v25, v9 offset:32768
  ds_swizzle_b32  v26, v9 offset:32853
  s_waitcnt     lgkmcnt(0)
  v_sub_f32     v19, s52, v9
  ds_swizzle_b32  v9, v9 offset:32938
  v_sub_f32     v21, s54, v18
  ds_swizzle_b32  v27, v17 offset:32768
  ds_swizzle_b32  v28, v17 offset:32853
  ds_swizzle_b32  v29, v18 offset:32768
  ds_swizzle_b32  v30, v18 offset:32853
  ds_swizzle_b32  v18, v18 offset:32938
  v_sub_f32     v20, s53, v17
  ds_swizzle_b32  v17, v17 offset:32938
  v_sub_f32     v26, v26, v25
  s_waitcnt     lgkmcnt(4)
  v_sub_f32     v28, v28, v27
  v_sub_f32     v9, v9, v25
  s_waitcnt     lgkmcnt(1)
  v_sub_f32     v18, v18, v29
  v_sub_f32     v30, v30, v29
  s_waitcnt     lgkmcnt(0)
  v_sub_f32     v17, v17, v27
  v_mul_legacy_f32  v27, v18, v26
  v_mul_legacy_f32  v29, v9, v28
  v_mul_legacy_f32  v25, v17, v30
  v_mad_legacy_f32  v27, v9, v30, -v27
  v_mad_legacy_f32  v29, v17, v26, -v29
  v_mul_legacy_f32  v31, v27, v18
  v_mul_legacy_f32  v32, v29, v28
  v_mad_legacy_f32  v25, v18, v28, -v25
  v_mad_legacy_f32  v31, v29, v17, -v31
  v_mul_legacy_f32  v17, v25, v17
  v_mad_legacy_f32  v32, v27, v30, -v32
  v_mul_legacy_f32  v30, v25, v30
  v_mad_legacy_f32  v17, v27, v9, -v17
  v_mul_legacy_f32  v9, v29, v9
  v_mad_legacy_f32  v29, v29, v26, -v30
  ds_swizzle_b32  v33, v13 offset:32768
  ds_swizzle_b32  v30, v13 offset:32853
  v_mul_legacy_f32  v26, v27, v26
  v_mad_legacy_f32  v9, v25, v18, -v9
  ds_swizzle_b32  v27, v14 offset:32768
  ds_swizzle_b32  v18, v14 offset:32853
  ds_swizzle_b32  v34, v13 offset:32938
  v_mad_legacy_f32  v25, v25, v28, -v26
  ds_swizzle_b32  v28, v14 offset:32938
  s_waitcnt     lgkmcnt(4)
  v_sub_f32     v26, v30, v33
  s_waitcnt     lgkmcnt(2)
  v_sub_f32     v18, v18, v27
  s_waitcnt     lgkmcnt(1)
  v_sub_f32     v30, v34, v33
  v_mul_legacy_f32  v33, v31, v26
  s_waitcnt     lgkmcnt(0)
  v_sub_f32     v27, v28, v27
  v_mul_legacy_f32  v28, v31, v18
  v_mad_legacy_f32  v31, v30, v32, v33
  v_mul_legacy_f32  v33, v9, v26
  v_mul_legacy_f32  v9, v9, v18
  v_mac_legacy_f32  v28, v27, v32
  v_mad_legacy_f32  v32, v30, v29, v33
  v_mul_legacy_f32  v26, v17, v26
  v_mul_legacy_f32  v17, v17, v18
  v_mul_legacy_f32  v33, v20, v20
  v_mac_legacy_f32  v9, v27, v29
  v_mac_legacy_f32  v17, v27, v25
  v_mad_legacy_f32  v27, v19, v19, v33
  v_mul_legacy_f32  v33, v9, v9
  v_mul_legacy_f32  v18, v32, v32
  v_mac_legacy_f32  v33, v28, v28
  v_mac_legacy_f32  v33, v17, v17
  s_waitcnt     vmcnt(2)
  v_mad_f32     v16, v16, 2.0, -1.0
  v_mac_legacy_f32  v18, v31, v31
  v_mad_legacy_f32  v25, v30, v25, v26
  v_rsq_f32     v33, v33
  v_mac_legacy_f32  v18, v25, v25
  v_mul_legacy_f32  v29, v16, v16
  v_mad_f32     v15, v15, 2.0, -1.0
  v_mac_legacy_f32  v29, v15, v15
  v_rsq_f32     v18, v18
  v_sub_f32     v29, 1.0, v29
  v_sqrt_f32    v29, v29
  v_mul_legacy_f32  v26, v33, v28
  v_mul_legacy_f32  v28, v31, v15
  v_interp_p1_f32  v22, v0, attr2.x
  v_mul_legacy_f32  v28, v28, v18
  v_interp_p2_f32  v22, v1, attr2.x
  v_mad_legacy_f32  v26, v16, v26, v28
  v_mad_legacy_f32  v22, v29, v22, v26
  v_mul_legacy_f32  v26, v32, v15
  v_interp_p1_f32  v23, v0, attr2.y
  v_mul_legacy_f32  v9, v33, v9
  v_mul_legacy_f32  v26, v26, v18
  v_interp_p2_f32  v23, v1, attr2.y
  v_mad_legacy_f32  v9, v16, v9, v26
  v_mac_legacy_f32  v9, v29, v23
  v_mul_legacy_f32  v23, s0, s0
  v_mac_legacy_f32  v27, v21, v21
  v_mac_legacy_f32  v23, s1, s1
  v_mac_legacy_f32  v23, s2, s2
  v_rsq_f32     v27, v27
  v_rsq_f32     v23, v23
  v_mul_legacy_f32  v15, v25, v15
  v_interp_p1_f32  v24, v0, attr2.z
  v_mul_legacy_f32  v15, v15, v18
  v_mul_legacy_f32  v17, v33, v17
  v_mul_legacy_f32  v18, v20, v27
  v_mac_legacy_f32  v15, v16, v17
  v_mul_legacy_f32  v16, v9, v9
  v_mul_legacy_f32  v17, v19, v27
  v_interp_p2_f32  v24, v1, attr2.z
  v_mad_legacy_f32  v26, v23, -s1, v18
  v_mul_legacy_f32  v19, v21, v27
  v_mac_legacy_f32  v15, v29, v24
  v_mac_legacy_f32  v16, v22, v22
  v_mad_legacy_f32  v25, v23, -s0, v17
  v_mul_legacy_f32  v28, v26, v26
  v_mac_legacy_f32  v16, v15, v15
  v_mad_legacy_f32  v27, v23, -s2, v19
  v_mac_legacy_f32  v28, v25, v25
  v_rsq_f32     v16, v16
  v_mac_legacy_f32  v28, v27, v27
  v_rsq_f32     v28, v28
  v_mul_legacy_f32  v31, v23, -s1
  v_mul_legacy_f32  v21, v16, v9
  v_mul_legacy_f32  v20, v16, v22
  v_mul_legacy_f32  v30, v23, -s0
  v_mul_legacy_f32  v26, v26, v28
  v_mul_legacy_f32  v15, v16, v15
  v_mul_legacy_f32  v16, v21, v31
  v_mul_legacy_f32  v22, v21, v18
  v_mul_legacy_f32  v32, v31, v26
  v_mul_legacy_f32  v25, v25, v28
  v_mul_legacy_f32  v23, v23, -s2
  v_mac_legacy_f32  v16, v20, v30
  v_mad_legacy_f32  v9, v20, v17, v22
  v_mac_legacy_f32  v32, v30, v25
  v_mul_legacy_f32  v27, v27, v28
  v_mac_legacy_f32  v16, v15, v23
  v_mad_legacy_f32  v28, v23, v27, v32
  v_mul_legacy_f32  v23, v21, v26
  v_mac_legacy_f32  v9, v15, v19
  v_sub_f32     v26, 1.0, v16 clamp
  v_mac_legacy_f32  v23, v20, v25
  v_mul_legacy_f32  v25, v26, v26
  v_sub_f32     v9, 1.0, v9 clamp
  v_mac_legacy_f32  v23, v27, v15 clamp
  v_max_f32     v32, v28, v28 clamp
  v_mul_legacy_f32  v25, v25, v25
  v_mul_legacy_f32  v27, v9, v9
  v_mul_legacy_f32  v25, v25, v26
  v_mul_legacy_f32  v26, v27, v27
  v_mul_legacy_f32  v33, v32, v32
  s_waitcnt     vmcnt(0)
  v_add_f32     v31, v11, v11
  v_mad_legacy_f32  v30, v33, v31, -0.5
  v_mul_legacy_f32  v9, v26, v9
  v_sub_f32     v28, 1.0, v28 clamp
  v_mul_legacy_f32  v27, v11, v11
  v_mad_legacy_f32  v25, v25, v30, 1.0
  v_mad_legacy_f32  v26, v9, v30, 1.0
  v_mul_legacy_f32  v30, v28, v28
  v_mul_legacy_f32  v25, v25, v26
  v_mul_legacy_f32  v26, v30, v30
  v_mul_legacy_f32  v30, v27, v27
  v_mad_legacy_f32  v27, v27, v27, -1.0
  v_mul_legacy_f32  v23, v23, v23
  v_mad_legacy_f32  v23, v23, v27, 1.0
  v_mul_legacy_f32  v23, v23, v23
  v_mul_legacy_f32  v23, 0x40490fdb, v23
  v_max_f32     v23, 0x358637bd, v23
  v_mul_legacy_f32  v26, v26, v28
  v_mad_legacy_f32  v28, -v32, v32, 1.0
  v_mul_legacy_f32  v32, 0x3e800000, v30
  v_mad_legacy_f32  v28, v32, v28, v33
  v_rcp_f32     v23, v23
  v_rcp_f32     v28, v28
  v_add_f32     v24, 0xbd23d70a, v5
  s_mov_b32     s3, 0x3d23d70a
  v_mul_legacy_f32  v23, v30, v23
  v_mad_legacy_f32  v24, v12, v24, s3
  v_mac_legacy_f32  v5, v5, -v12
  v_mul_legacy_f32  v29, v24, v10
  v_mad_legacy_f32  v24, -v24, v10, 1.0
  v_mul_legacy_f32  v23, v28, v23
  v_mul_legacy_f32  v28, v5, v10
  v_mad_legacy_f32  v33, v26, v24, v29
  v_mul_legacy_f32  v5, v25, v28
  v_mac_legacy_f32  v5, v23, v33
  v_mad_legacy_f32  v33, -v12, v6, v6
  v_add_f32     v6, 0xbd23d70a, v6
  v_mad_legacy_f32  v6, v12, v6, s3
  v_mul_legacy_f32  v33, v33, v10
  v_mul_legacy_f32  v34, v6, v10
  v_mad_legacy_f32  v6, -v6, v10, 1.0
  v_mad_legacy_f32  v35, v26, v6, v34
  v_mul_legacy_f32  v36, v25, v33
  v_mad_legacy_f32  v35, v23, v35, v36
  v_mad_legacy_f32  v36, -v12, v7, v7
  v_add_f32     v7, 0xbd23d70a, v7
  v_mad_legacy_f32  v7, v12, v7, s3
  v_mul_legacy_f32  v36, v36, v10
  v_mul_legacy_f32  v12, v7, v10
  v_mad_legacy_f32  v7, -v7, v10, 1.0
  v_mad_legacy_f32  v10, v26, v7, v12
  v_mul_legacy_f32  v25, v25, v36
  v_mad_legacy_f32  v10, v23, v10, v25
  v_mul_legacy_f32  v23, s4, s4
  v_mac_legacy_f32  v23, s5, s5
  v_mac_legacy_f32  v23, s6, s6
  v_rsq_f32     v23, v23
  v_max_f32     v16, v16, v16 clamp
  v_mul_legacy_f32  v25, v23, -s4
  v_readfirstlane_b32  s0, v25
  v_mul_legacy_f32  v25, v23, -s5
  v_readfirstlane_b32  s1, v25
  v_mul_legacy_f32  v25, v23, -s6
  v_mad_legacy_f32  v26, v23, -s5, v18
  v_readfirstlane_b32  s2, v25
  v_mad_legacy_f32  v25, v23, -s4, v17
  v_mul_legacy_f32  v37, v26, v26
  v_mad_legacy_f32  v23, v23, -s6, v19
  v_mac_legacy_f32  v37, v25, v25
  v_mac_legacy_f32  v37, v23, v23
  v_rsq_f32     v37, v37
  v_mul_legacy_f32  v26, v26, v37
  v_mul_legacy_f32  v25, v25, v37
  v_mul_legacy_f32  v23, v23, v37
  v_mul_legacy_f32  v37, s1, v26
  v_mac_legacy_f32  v37, s0, v25
  v_mul_legacy_f32  v26, v21, v26
  v_mad_legacy_f32  v25, v20, v25, v26
  v_mad_legacy_f32  v26, s2, v23, v37
  v_mad_legacy_f32  v23, v15, v23, v25 clamp
  v_max_f32     v25, v26, v26 clamp
  v_mul_legacy_f32  v37, v25, v25
  v_mad_legacy_f32  v25, -v25, v25, 1.0
  v_mul_legacy_f32  v23, v23, v23
  v_mad_legacy_f32  v25, v32, v25, v37
  v_mul_legacy_f32  v32, s1, v21
  v_mad_legacy_f32  v23, v23, v27, 1.0
  v_mac_legacy_f32  v32, s0, v20
  v_mul_legacy_f32  v23, v23, v23
  v_mul_legacy_f32  v23, 0x40490fdb, v23
  v_mac_legacy_f32  v32, s2, v15
  v_max_f32     v23, 0x358637bd, v23
  v_mad_legacy_f32  v31, v37, v31, -0.5
  v_sub_f32     v37, 1.0, v32 clamp
  v_mul_legacy_f32  v27, v37, v37
  v_rcp_f32     v23, v23
  v_mul_legacy_f32  v27, v27, v27
  v_sub_f32     v26, 1.0, v26 clamp
  v_rcp_f32     v25, v25
  v_mul_legacy_f32  v37, v27, v37
  v_mul_legacy_f32  v27, v26, v26
  v_mad_legacy_f32  v37, v37, v31, 1.0
  v_mad_legacy_f32  v31, v9, v31, 1.0
  v_mul_legacy_f32  v27, v27, v27
  v_mul_legacy_f32  v23, v30, v23
  v_mul_legacy_f32  v31, v37, v31
  v_mul_legacy_f32  v26, v27, v26
  s_buffer_load_dwordx8  s[0:7], s[48:51], 0x50
  v_mul_legacy_f32  v23, v25, v23
  v_mad_legacy_f32  v25, v26, v24, v29
  v_mul_legacy_f32  v27, v31, v28
  v_mad_legacy_f32  v25, v23, v25, v27
  v_mad_legacy_f32  v27, v26, v6, v34
  v_mul_legacy_f32  v30, v31, v33
  v_mad_legacy_f32  v27, v23, v27, v30
  v_mul_legacy_f32  v30, v31, v36
  v_mad_legacy_f32  v26, v26, v7, v12
  v_mad_legacy_f32  v23, v23, v26, v30
  v_max_f32     v26, v32, v32 clamp
  v_mul_legacy_f32  v30, s12, v16
  v_mul_legacy_f32  v5, v30, v5
  s_waitcnt     lgkmcnt(0)
  v_mul_legacy_f32  v32, s0, v26
  v_mul_legacy_f32  v37, s8, s8
  v_mac_legacy_f32  v5, v32, v25
  v_mad_legacy_f32  v25, s9, s9, v37
  v_mac_legacy_f32  v25, s10, s10
  v_rsq_f32     v25, v25
  v_mul_legacy_f32  v31, s13, v16
  v_mul_legacy_f32  v16, s14, v16
  v_mul_legacy_f32  v31, v31, v35
  v_mul_legacy_f32  v30, s1, v26
  v_mul_legacy_f32  v10, v16, v10
  v_mul_legacy_f32  v16, s2, v26
  v_mad_legacy_f32  v26, v25, -s9, v18
  v_mad_legacy_f32  v27, v30, v27, v31
  v_mac_legacy_f32  v10, v16, v23
  v_mad_legacy_f32  v30, v25, -s8, v17
  v_mul_legacy_f32  v16, v26, v26
  v_mul_legacy_f32  v32, v25, -s8
  v_mul_legacy_f32  v35, v25, -s9
  v_mul_legacy_f32  v37, v25, -s10
  v_mad_legacy_f32  v25, v25, -s10, v19
  v_mac_legacy_f32  v16, v30, v30
  v_mac_legacy_f32  v16, v25, v25
  v_rsq_f32     v16, v16
  v_readfirstlane_b32  s1, v37
  v_mul_legacy_f32  v26, v26, v16
  v_mul_legacy_f32  v23, v30, v16
  v_mul_legacy_f32  v16, v25, v16
  v_mul_legacy_f32  v25, v35, v26
  v_mac_legacy_f32  v25, v32, v23
  v_mul_legacy_f32  v26, v21, v26
  v_mul_legacy_f32  v30, v11, v11
  v_mad_legacy_f32  v23, v20, v23, v26
  v_mac_legacy_f32  v25, s1, v16
  v_mad_legacy_f32  v16, v15, v16, v23 clamp
  v_max_f32     v23, v25, v25 clamp
  v_mul_legacy_f32  v30, v30, v30
  v_mul_legacy_f32  v26, v23, v23
  v_mad_legacy_f32  v23, -v23, v23, 1.0
  v_mul_legacy_f32  v30, 0x3e800000, v30
  v_mad_legacy_f32  v23, v30, v23, v26
  v_add_f32     v30, v11, v11
  v_mad_legacy_f32  v26, v26, v30, -0.5
  v_mul_legacy_f32  v30, v35, v21
  v_mac_legacy_f32  v30, v20, v32
  v_mac_legacy_f32  v30, s1, v15
  v_sub_f32     v31, 1.0, v30 clamp
  v_mul_legacy_f32  v32, v31, v31
  v_mul_legacy_f32  v32, v32, v32
  v_mul_legacy_f32  v31, v32, v31
  v_mad_legacy_f32  v31, v31, v26, 1.0
  v_mad_legacy_f32  v9, v9, v26, 1.0
  v_mul_legacy_f32  v26, v11, v11
  v_mul_legacy_f32  v16, v16, v16
  v_mad_legacy_f32  v26, v26, v26, -1.0
  v_mad_legacy_f32  v16, v16, v26, 1.0
  v_mul_legacy_f32  v16, v16, v16
  v_mul_legacy_f32  v16, 0x40490fdb, v16
  v_max_f32     v16, 0x358637bd, v16
  v_rcp_f32     v16, v16
  v_mul_legacy_f32  v26, v11, v11
  v_mul_legacy_f32  v26, v26, v26
  v_sub_f32     v25, 1.0, v25 clamp
  v_rcp_f32     v23, v23
  v_mul_legacy_f32  v16, v26, v16
  v_mul_legacy_f32  v26, v25, v25
  v_mul_legacy_f32  v26, v26, v26
  v_mul_legacy_f32  v25, v26, v25
  v_mul_legacy_f32  v9, v31, v9
  v_mul_legacy_f32  v16, v23, v16
  v_mad_legacy_f32  v24, v25, v24, v29
  v_mul_legacy_f32  v23, v9, v28
  v_mac_legacy_f32  v23, v16, v24
  v_mul_legacy_f32  v24, v9, v33
  v_mad_legacy_f32  v7, v25, v7, v12
  v_mul_legacy_f32  v9, v9, v36
  v_mad_legacy_f32  v6, v25, v6, v34
  v_mad_legacy_f32  v7, v16, v7, v9
  v_max_f32     v9, v30, v30 clamp
  v_mad_legacy_f32  v6, v16, v6, v24
  v_mul_legacy_f32  v16, s4, v9
  v_mad_legacy_f32  v16, v16, v23, v5
  v_mul_legacy_f32  v5, s5, v9
  v_mad_legacy_f32  v23, v5, v6, v27
  v_mul_legacy_f32  v5, s6, v9
  v_mad_legacy_f32  v24, v5, v7, v10
  v_cubema_f32  v5, v20, v21, v15
  v_rcp_f32     v6, abs(v5)
  v_cubesc_f32  v5, v20, v21, v15
  v_cubetc_f32  v7, v20, v21, v15
  v_interp_p1_f32  v25, v0, attr3.y
  v_madak_f32   v5, v5, v6, 0x3fc00000
  v_madak_f32   v6, v7, v6, 0x3fc00000
  v_interp_p1_f32  v7, v0, attr3.w
  v_interp_p1_f32  v26, v0, attr3.x
  v_interp_p1_f32  v0, v0, attr3.z
  v_interp_p2_f32  v7, v1, attr3.w
  v_interp_p2_f32  v25, v1, attr3.y
  v_interp_p2_f32  v26, v1, attr3.x
  v_interp_p2_f32  v0, v1, attr3.z
  v_rcp_f32     v1, v7
  v_cubeid_f32  v7, v20, v21, v15
  v_mov_b32     v9, 0x3fc00000
  s_and_b64     exec, exec, s[56:57] // wrscc
  image_sample  v[5:8], v[5:6], s[32:39], s[44:47] dmask:0x7 da
  s_buffer_load_dword  s4, s[48:51], 0x5b
  s_buffer_load_dwordx4  s[0:3], s[48:51], 0x5e
  v_mad_legacy_f32  v4, v0, v1, -v4
  v_mad_legacy_f32  v0, -v17, v20, -v22
  v_mac_legacy_f32  v0, v19, -v15 mul:2
  s_waitcnt     vmcnt(0)
  v_mad_legacy_f32  v6, v6, v33, v23
  s_waitcnt     lgkmcnt(0)
  v_mul_legacy_f32  v23, s4, v8
  v_mad_legacy_f32  v8, -v0, v20, -v17
  v_mad_legacy_f32  v17, -v0, v21, -v18
  v_mad_legacy_f32  v0, -v0, v15, -v19
  v_mad_legacy_f32  v15, v5, v28, v16
  v_mul_legacy_f32  v5, v25, v1
  v_mul_legacy_f32  v1, v26, v1
  v_mad_legacy_f32  v5, -v5, 0.5, 0.5
  v_mad_legacy_f32  v1, v1, 0.5, 0.5
  v_mad_legacy_f32  v3, s2, v5, -v3
  v_mad_legacy_f32  v5, s1, v1, -v2
  v_cubema_f32  v1, v8, v17, v0
  v_cvt_f32_i32  v2, s0
  v_rcp_f32     v1, abs(v1)
  v_cubeid_f32  v10, v8, v17, v0
  s_brev_b32    s1, 28
  v_mul_legacy_f32  v11, v2, v11
  v_cubesc_f32  v2, v8, v17, v0
  v_cubetc_f32  v0, v8, v17, v0
  v_madak_f32   v8, v2, v1, 0x3fc00000
  v_mac_f32     v9, v0, v1
  image_sample_l  v[0:3], v[8:9], s[24:31], s[44:47] dmask:0x7 da
  v_mul_legacy_f32  v9, abs(v3), s1
  v_mov_b32     v8, 0x3bffe000
  v_med3_f32    v9, v9, 0, v8
  v_cvt_f16_f32  v9, v9
  v_lshrrev_b32  v3, 22, v3
  v_and_b32     v3, 0x00000200, v3
  s_brev_b32    s0, 60
  v_add_i32     v9, vcc, 8, v9
  v_lshrrev_b32  v9, 4, v9
  v_or_b32      v9, v9, v3
  v_mul_legacy_f32  v3, abs(v5), s1
  v_med3_f32    v3, v3, 0, v8
  v_cvt_f16_f32  v3, v3
  v_lshrrev_b32  v5, 22, v5
  v_and_b32     v5, 0x00000200, v5
  v_mad_legacy_f32  v7, v7, v36, v24
  v_add_i32     v3, vcc, 8, v3
  v_lshrrev_b32  v3, 4, v3
  v_or_b32      v10, v3, v5
  v_mul_legacy_f32  v3, abs(v4), s0
  v_med3_f32    v3, v3, 0, v8
  v_cvt_f16_f32  v3, v3
  v_lshrrev_b32  v4, 20, v4
  v_and_b32     v4, 0x00000800, v4
  v_lshlrev_b32  v9, 10, v9
  v_add_i32     v3, vcc, 2, v3
  v_lshrrev_b32  v3, 2, v3
  v_or_b32      v8, v3, v4
  image_sample  v[3:6], v[13:14], s[16:23], s[40:43] dmask:0x7
  v_lshlrev_b32  v8, 20, v8
  v_or_b32      v9, v10, v9
  v_or_b32      v8, v9, v8
  s_waitcnt     vmcnt(1)
  v_mad_legacy_f32  v1, v1, v34, v6
  v_mad_legacy_f32  v0, v0, v29, v15
  v_mad_legacy_f32  v2, v2, v12, v7
  s_waitcnt     vmcnt(0)
  v_add_f32     v4, v1, v4
  v_add_f32     v5, v2, v5
  v_add_f32     v6, v0, v3
  v_cvt_pkrtz_f16_f32  v0, v6, v4
  v_cvt_pkrtz_f16_f32  v1, v5, v23
  exp           mrt0, v0, v0, v1, v1 compr
  v_cvt_pkrtz_f16_f32  v2, v8, v8
  s_nop         0x0000
  exp           mrt1, v2, v2, off, off done compr vm
  s_endpgm      
end


NumVGPR=38,NumSGPR=60,LDS=0,Scratch=0,Occpancy=6


#endif

const unsigned char PBREffect_PSTexturedEmissiveVelocity[] = {
  0x44, 0x58, 0x42, 0x43, 0x43, 0x57, 0x01, 0xd7, 0xfc, 0x63, 0x23, 0xeb,
  0xab, 0x64, 0x9b, 0xa6, 0x3c, 0xec, 0xd6, 0x5e, 0x01, 0x00, 0x00, 0x00,
  0xac, 0x27, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00,
  0x50, 0x00, 0x00, 0x00, 0x3c, 0x01, 0x00, 0x00, 0x98, 0x01, 0x00, 0x00,
  0xfc, 0x03, 0x00, 0x00, 0x84, 0x05, 0x00, 0x00, 0x1c, 0x06, 0x00, 0x00,
  0x38, 0x06, 0x00, 0x00, 0x53, 0x46, 0x49, 0x30, 0x08, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x49, 0x53, 0x47, 0x31,
  0xe4, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xc8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x03, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xc8, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0f, 0x07, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc8, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x07, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xd1, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xd7, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x0f, 0x07, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc8, 0x00, 0x00, 0x00,
  0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x05, 0x00, 0x00, 0x00, 0x0f, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x54, 0x45, 0x58, 0x43, 0x4f, 0x4f, 0x52, 0x44, 0x00, 0x43, 0x4f, 0x4c,
  0x4f, 0x52, 0x00, 0x53, 0x56, 0x5f, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69,
  0x6f, 0x6e, 0x00, 0x00, 0x4f, 0x53, 0x47, 0x31, 0x54, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x48, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x48, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x01, 0x0e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x53, 0x56, 0x5f, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x00, 0x00, 0x00,
  0x50, 0x53, 0x56, 0x30, 0x5c, 0x02, 0x00, 0x00, 0x34, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff,
  0x00, 0x00, 0x00, 0x00, 0x06, 0x02, 0x00, 0x06, 0x02, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x2b, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00,
  0x04, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00,
  0x05, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x48, 0x00, 0x00, 0x00, 0x00, 0x54, 0x45, 0x58, 0x43, 0x4f, 0x4f, 0x52,
  0x44, 0x00, 0x54, 0x45, 0x58, 0x43, 0x4f, 0x4f, 0x52, 0x44, 0x00, 0x54,
  0x45, 0x58, 0x43, 0x4f, 0x4f, 0x52, 0x44, 0x00, 0x43, 0x4f, 0x4c, 0x4f,
  0x52, 0x00, 0x54, 0x45, 0x58, 0x43, 0x4f, 0x4f, 0x52, 0x44, 0x00, 0x50,
  0x53, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x64, 0x45, 0x6d, 0x69,
  0x73, 0x73, 0x69, 0x76, 0x65, 0x56, 0x65, 0x6c, 0x6f, 0x63, 0x69, 0x74,
  0x79, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00,
  0x10, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x42, 0x00, 0x03, 0x02, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x01, 0x01, 0x44, 0x00, 0x03, 0x02, 0x00, 0x00,
  0x13, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x02, 0x43, 0x00,
  0x03, 0x02, 0x00, 0x00, 0x1c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x03, 0x44, 0x00, 0x03, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x04, 0x44, 0x03, 0x03, 0x04, 0x00, 0x00,
  0x22, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x01, 0x05, 0x44, 0x00,
  0x03, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x44, 0x10, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x01, 0x01, 0x41, 0x10, 0x01, 0x00, 0x00, 0x00,
  0x0f, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00,
  0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00,
  0x07, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00,
  0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00,
  0x10, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00,
  0x52, 0x54, 0x53, 0x30, 0x80, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x0a, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x80, 0x01, 0x00, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x90, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xac, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xc8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xe4, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x1c, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x38, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x54, 0x01, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x70, 0x01, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x78, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x98, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff,
  0x01, 0x00, 0x00, 0x00, 0xb4, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xff, 0xff, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0xd0, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00,
  0xec, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff,
  0x01, 0x00, 0x00, 0x00, 0x08, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xff, 0xff, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x24, 0x01, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00,
  0x40, 0x01, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff,
  0x01, 0x00, 0x00, 0x00, 0x5c, 0x01, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x49, 0x4c, 0x44, 0x4e,
  0x90, 0x00, 0x00, 0x00, 0x00, 0x00, 0x89, 0x00, 0x43, 0x3a, 0x5c, 0x55,
  0x73, 0x65, 0x72, 0x73, 0x5c, 0x6d, 0x61, 0x72, 0x63, 0x75, 0x5c, 0x44,
  0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x73, 0x5c, 0x44, 0x69, 0x72,
  0x65, 0x63, 0x74, 0x58, 0x54, 0x4b, 0x31, 0x32, 0x2d, 0x6d, 0x61, 0x69,
  0x6e, 0x5c, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x58, 0x54, 0x4b, 0x31,
  0x32, 0x2d, 0x6d, 0x61, 0x69, 0x6e, 0x5c, 0x53, 0x72, 0x63, 0x2f, 0x53,
  0x68, 0x61, 0x64, 0x65, 0x72, 0x73, 0x2f, 0x43, 0x6f, 0x6d, 0x70, 0x69,
  0x6c, 0x65, 0x64, 0x5c, 0x58, 0x62, 0x6f, 0x78, 0x47, 0x61, 0x6d, 0x69,
  0x6e, 0x67, 0x58, 0x62, 0x6f, 0x78, 0x4f, 0x6e, 0x65, 0x50, 0x42, 0x52,
  0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x5f, 0x50, 0x53, 0x54, 0x65, 0x78,
  0x74, 0x75, 0x72, 0x65, 0x64, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x76,
  0x65, 0x56, 0x65, 0x6c, 0x6f, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x70, 0x64,
  0x62, 0x00, 0x00, 0x00, 0x48, 0x41, 0x53, 0x48, 0x14, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x85, 0x85, 0xe8, 0x7b, 0xb1, 0x28, 0xdd, 0xc2,
  0x48, 0xde, 0x44, 0x71, 0xed, 0xb7, 0x32, 0xf4, 0x44, 0x58, 0x49, 0x4c,
  0x6c, 0x21, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x5b, 0x08, 0x00, 0x00,
  0x44, 0x58, 0x49, 0x4c, 0x00, 0x01, 0x00, 0x00, 0x7c, 0x00, 0x00, 0x00,
  0xe4, 0x13, 0x00, 0x00, 0x58, 0x44, 0x41, 0x54, 0x06, 0x00, 0x00, 0x00,
  0x24, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x6c, 0x00, 0x00, 0x00,
  0xfc, 0x13, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x68, 0x14, 0x00, 0x00,
  0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0x14, 0x00, 0x00,
  0x14, 0x0a, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x8c, 0x1e, 0x00, 0x00,
  0x38, 0x02, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0xc4, 0x20, 0x00, 0x00,
  0x91, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x58, 0x21, 0x00, 0x00,
  0x11, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0xff, 0x04, 0x00, 0x00,
  0x44, 0x58, 0x49, 0x4c, 0x00, 0x01, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00,
  0xe4, 0x13, 0x00, 0x00, 0x42, 0x43, 0xc0, 0xde, 0x21, 0x0c, 0x00, 0x00,
  0xf6, 0x04, 0x00, 0x00, 0x0b, 0x82, 0x20, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x13, 0x00, 0x00, 0x00, 0x07, 0x81, 0x23, 0x91, 0x41, 0xc8, 0x04, 0x49,
  0x06, 0x10, 0x32, 0x39, 0x92, 0x01, 0x84, 0x0c, 0x25, 0x05, 0x08, 0x19,
  0x1e, 0x04, 0x8b, 0x62, 0x80, 0x18, 0x45, 0x02, 0x42, 0x92, 0x0b, 0x42,
  0xc4, 0x10, 0x32, 0x14, 0x38, 0x08, 0x18, 0x4b, 0x0a, 0x32, 0x62, 0x88,
  0x48, 0x90, 0x14, 0x20, 0x43, 0x46, 0x88, 0xa5, 0x00, 0x19, 0x32, 0x42,
  0xe4, 0x48, 0x0e, 0x90, 0x11, 0x23, 0xc4, 0x50, 0x41, 0x51, 0x81, 0x8c,
  0xe1, 0x83, 0xe5, 0x8a, 0x04, 0x31, 0x46, 0x06, 0x51, 0x18, 0x00, 0x00,
  0x08, 0x00, 0x00, 0x00, 0x1b, 0x8c, 0xe0, 0xff, 0xff, 0xff, 0xff, 0x07,
  0x40, 0x02, 0xa8, 0x0d, 0x84, 0xf0, 0xff, 0xff, 0xff, 0xff, 0x03, 0x20,
  0x6d, 0x30, 0x86, 0xff, 0xff, 0xff, 0xff, 0x1f, 0x00, 0x09, 0xa8, 0x00,
  0x49, 0x18, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x13, 0x82, 0x60, 0x42,
  0x20, 0x4c, 0x08, 0x06, 0x00, 0x00, 0x00, 0x00, 0x89, 0x20, 0x00, 0x00,
  0x97, 0x00, 0x00, 0x00, 0x32, 0x22, 0x88, 0x09, 0x20, 0x64, 0x85, 0x04,
  0x13, 0x23, 0xa4, 0x84, 0x04, 0x13, 0x23, 0xe3, 0x84, 0xa1, 0x90, 0x14,
  0x12, 0x4c, 0x8c, 0x8c, 0x0b, 0x84, 0xc4, 0x4c, 0x10, 0xe4, 0xc1, 0x08,
  0x40, 0x09, 0x00, 0x0a, 0x66, 0x00, 0xe6, 0x08, 0xc0, 0x60, 0x8e, 0x00,
  0x29, 0xc6, 0x40, 0x10, 0x44, 0x41, 0x90, 0x51, 0x0c, 0x80, 0x20, 0x88,
  0x62, 0x20, 0xa4, 0x18, 0x00, 0x41, 0x10, 0x05, 0x41, 0x4a, 0x41, 0x06,
  0x62, 0x18, 0x86, 0x61, 0x18, 0x88, 0x29, 0xc3, 0x40, 0x0c, 0xe4, 0xdc,
  0x34, 0x5c, 0xfe, 0x84, 0x3d, 0x84, 0xe4, 0xaf, 0x84, 0xb4, 0x12, 0x93,
  0x5f, 0xdc, 0x36, 0x2a, 0x86, 0x61, 0x18, 0x08, 0x2a, 0xee, 0x19, 0x2e,
  0x7f, 0xc2, 0x1e, 0x42, 0xf2, 0x43, 0xa0, 0x19, 0x16, 0x02, 0x05, 0x51,
  0x61, 0x20, 0x42, 0x92, 0x86, 0x61, 0x18, 0x08, 0x82, 0x18, 0x68, 0x2a,
  0xc6, 0x40, 0x0c, 0xc3, 0x30, 0x50, 0x55, 0x88, 0x81, 0x18, 0x06, 0xba,
  0x4a, 0x31, 0x10, 0xc3, 0x30, 0x50, 0x56, 0x06, 0x82, 0x18, 0x68, 0x3b,
  0x6a, 0xb8, 0xfc, 0x09, 0x7b, 0x08, 0xc9, 0xe7, 0x36, 0xaa, 0x58, 0x89,
  0xc9, 0x47, 0x6e, 0x1b, 0x11, 0x04, 0x41, 0x10, 0x85, 0xe8, 0x08, 0x89,
  0x20, 0xef, 0xa8, 0xe1, 0xf2, 0x27, 0xec, 0x21, 0x24, 0x9f, 0xdb, 0xa8,
  0x62, 0x25, 0x26, 0xbf, 0xb8, 0x6d, 0x44, 0x0c, 0xc3, 0x30, 0x14, 0x02,
  0x24, 0x24, 0x82, 0xc2, 0x39, 0x82, 0xa0, 0x18, 0x12, 0x51, 0x10, 0xc4,
  0x48, 0xe4, 0x40, 0xc0, 0x30, 0x02, 0x31, 0xcc, 0xd4, 0x06, 0xe3, 0xc0,
  0x0e, 0xe1, 0x30, 0x0f, 0xf3, 0xe0, 0x06, 0xb4, 0x50, 0x0e, 0xf8, 0x40,
  0x0f, 0xf5, 0x20, 0x0f, 0xe5, 0x20, 0x07, 0xa4, 0xc0, 0x07, 0xf6, 0x50,
  0x0e, 0xe3, 0x40, 0x0f, 0xef, 0x20, 0x0f, 0x7c, 0x60, 0x0e, 0xec, 0xf0,
  0x0e, 0xe1, 0x40, 0x0f, 0x6c, 0x00, 0x06, 0x74, 0xe0, 0x07, 0x60, 0xe0,
  0x07, 0x7a, 0xa0, 0x07, 0xed, 0x90, 0x0e, 0xf0, 0x30, 0x0f, 0xbf, 0x40,
  0x0f, 0xf9, 0x00, 0x0f, 0xe5, 0x80, 0x02, 0x62, 0x26, 0x31, 0x18, 0x07,
  0x76, 0x08, 0x87, 0x79, 0x98, 0x07, 0x37, 0xa0, 0x85, 0x72, 0xc0, 0x07,
  0x7a, 0xa8, 0x07, 0x79, 0x28, 0x07, 0x39, 0x20, 0x05, 0x3e, 0xb0, 0x87,
  0x72, 0x18, 0x07, 0x7a, 0x78, 0x07, 0x79, 0xe0, 0x03, 0x73, 0x60, 0x87,
  0x77, 0x08, 0x07, 0x7a, 0x60, 0x03, 0x30, 0xa0, 0x03, 0x3f, 0x00, 0x03,
  0x3f, 0x40, 0xc2, 0x89, 0x52, 0x3a, 0x8c, 0x30, 0x0c, 0x33, 0xb5, 0xc1,
  0x38, 0xb0, 0x43, 0x38, 0xcc, 0xc3, 0x3c, 0xb8, 0x01, 0x2d, 0x94, 0x03,
  0x3e, 0xd0, 0x43, 0x3d, 0xc8, 0x43, 0x39, 0xc8, 0x01, 0x29, 0xf0, 0x81,
  0x3d, 0x94, 0xc3, 0x38, 0xd0, 0xc3, 0x3b, 0xc8, 0x03, 0x1f, 0x98, 0x03,
  0x3b, 0xbc, 0x43, 0x38, 0xd0, 0x03, 0x1b, 0x80, 0xc1, 0x1c, 0xf8, 0x01,
  0x18, 0xf8, 0x81, 0x1e, 0xe8, 0x41, 0x3b, 0xa4, 0x03, 0x3c, 0xcc, 0xc3,
  0x2f, 0xd0, 0x43, 0x3e, 0xc0, 0x43, 0x39, 0xa0, 0x80, 0x98, 0x49, 0x0c,
  0xc6, 0x81, 0x1d, 0xc2, 0x61, 0x1e, 0xe6, 0xc1, 0x0d, 0x68, 0xa1, 0x1c,
  0xf0, 0x81, 0x1e, 0xea, 0x41, 0x1e, 0xca, 0x41, 0x0e, 0x48, 0x81, 0x0f,
  0xec, 0xa1, 0x1c, 0xc6, 0x81, 0x1e, 0xde, 0x41, 0x1e, 0xf8, 0xc0, 0x1c,
  0xd8, 0xe1, 0x1d, 0xc2, 0x81, 0x1e, 0xd8, 0x00, 0x0c, 0xe6, 0xc0, 0x0f,
  0xc0, 0xc0, 0x0f, 0x90, 0xb0, 0xb2, 0xd4, 0xce, 0x44, 0x06, 0xe3, 0xc0,
  0x0e, 0xe1, 0x30, 0x0f, 0xf3, 0xe0, 0x06, 0xb4, 0x50, 0x0e, 0xf8, 0x40,
  0x0f, 0xf5, 0x20, 0x0f, 0xe5, 0x30, 0x0a, 0xf5, 0x20, 0x0e, 0xe5, 0xc0,
  0x07, 0xf6, 0x50, 0x0e, 0xe3, 0x40, 0x0f, 0xef, 0x20, 0x0f, 0x7c, 0x60,
  0x0e, 0xec, 0xf0, 0x0e, 0xe1, 0x40, 0x0f, 0x6c, 0x00, 0x06, 0x73, 0xe0,
  0x07, 0x60, 0xe0, 0x07, 0x28, 0x58, 0xe9, 0x4d, 0x82, 0x33, 0x07, 0xd6,
  0xa3, 0x0e, 0x47, 0x9a, 0x16, 0x00, 0x73, 0xa8, 0xc9, 0xe7, 0x9c, 0x46,
  0x9a, 0x80, 0x66, 0x92, 0x90, 0xb3, 0xc6, 0x72, 0x1c, 0xcb, 0xf2, 0x3a,
  0x0c, 0x03, 0x31, 0x0c, 0x34, 0xdf, 0x24, 0x4d, 0x11, 0x25, 0x4c, 0x3e,
  0x0b, 0x30, 0xcf, 0x42, 0x44, 0xec, 0x04, 0x4c, 0x04, 0x0a, 0x08, 0xaa,
  0x53, 0x83, 0x98, 0x02, 0x00, 0x00, 0x00, 0x00, 0x13, 0x16, 0x72, 0xc0,
  0x87, 0x74, 0x60, 0x87, 0x36, 0x68, 0x87, 0x79, 0x68, 0x03, 0x7c, 0x10,
  0x87, 0x38, 0xd8, 0xf0, 0x0a, 0xe5, 0xd0, 0x06, 0xed, 0xa0, 0x07, 0xe5,
  0xd0, 0x06, 0xf0, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x7a, 0x30, 0x07, 0x72,
  0xd0, 0x06, 0xe9, 0x10, 0x07, 0x7a, 0x30, 0x07, 0x72, 0xd0, 0x06, 0xe9,
  0x80, 0x07, 0x7a, 0x30, 0x07, 0x72, 0xd0, 0x06, 0xe9, 0x10, 0x07, 0x76,
  0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x90, 0x0e, 0x73, 0x20, 0x07, 0x7a,
  0x30, 0x07, 0x72, 0xd0, 0x06, 0xe9, 0x60, 0x07, 0x74, 0xa0, 0x07, 0x76,
  0x40, 0x07, 0x6d, 0x60, 0x0e, 0x71, 0x60, 0x07, 0x7a, 0x30, 0x07, 0x72,
  0xd0, 0x06, 0xe6, 0x30, 0x07, 0x72, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d,
  0x60, 0x0e, 0x76, 0x40, 0x07, 0x7a, 0x60, 0x07, 0x74, 0xd0, 0x06, 0xee,
  0x80, 0x07, 0x7a, 0x10, 0x07, 0x76, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x7a,
  0x60, 0x07, 0x74, 0x30, 0xe4, 0x09, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x60, 0xc8, 0x63, 0x00, 0x01, 0x10, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x90, 0x07, 0x01, 0x02, 0x40, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x21, 0x8f, 0x02, 0x04, 0x80,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x43, 0x1e, 0x06, 0x08,
  0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x86, 0x3c, 0x0e,
  0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x79,
  0x26, 0x20, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18,
  0xf2, 0x54, 0x40, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x30, 0xe4, 0xb9, 0x80, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x60, 0xc8, 0x93, 0x01, 0x01, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0xc0, 0x90, 0x67, 0x02, 0x02, 0x60, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x80, 0x21, 0xcf, 0x06, 0x04, 0x40, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x43, 0x1e, 0x0f, 0x08, 0x80, 0x01, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x86, 0x3c, 0x61, 0x00, 0x04, 0xc0,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x43, 0x9e, 0x0c, 0x08,
  0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x86, 0x3c, 0x64,
  0x00, 0x04, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x59,
  0x20, 0x00, 0x00, 0x00, 0x17, 0x00, 0x00, 0x00, 0x32, 0x1e, 0x98, 0x18,
  0x19, 0x11, 0x4c, 0x90, 0x8c, 0x09, 0x26, 0x47, 0xc6, 0x04, 0x43, 0x22,
  0x4a, 0x60, 0x04, 0xa0, 0x20, 0x8a, 0xa1, 0x08, 0x4a, 0xa2, 0x0c, 0x0a,
  0xa1, 0x14, 0x0a, 0xd1, 0xa0, 0x1c, 0xca, 0x83, 0x8a, 0x92, 0x18, 0x01,
  0x28, 0x82, 0x42, 0x28, 0x83, 0x02, 0x29, 0x85, 0x12, 0x20, 0x75, 0x06,
  0x80, 0xdc, 0x19, 0x00, 0x82, 0x67, 0x00, 0x88, 0x9e, 0x01, 0x20, 0x7b,
  0x06, 0x80, 0xee, 0xb1, 0x34, 0xac, 0x78, 0x1e, 0x00, 0x38, 0x8e, 0x03,
  0x38, 0x8e, 0x03, 0x00, 0x00, 0x00, 0x80, 0x20, 0x08, 0x80, 0x20, 0x08,
  0x02, 0x00, 0x00, 0x00, 0x79, 0x18, 0x00, 0x00, 0xb0, 0x00, 0x00, 0x00,
  0x1a, 0x03, 0x4c, 0x90, 0x46, 0x02, 0x13, 0xc4, 0x36, 0xf8, 0xfa, 0xc2,
  0x12, 0x7a, 0xc2, 0xfa, 0x82, 0x2a, 0x92, 0xfa, 0xa2, 0x42, 0x92, 0x2a,
  0x0a, 0x22, 0xfa, 0x9a, 0x1a, 0x92, 0x0a, 0xa2, 0x1a, 0x42, 0xfa, 0x9a,
  0x4a, 0xd2, 0x2a, 0xfa, 0x62, 0x4a, 0x6a, 0x4a, 0xa2, 0xfa, 0x4a, 0x72,
  0xfa, 0x12, 0xca, 0xa2, 0x2a, 0x9a, 0x62, 0x00, 0xb3, 0x41, 0x08, 0x04,
  0x76, 0x64, 0x78, 0x63, 0x78, 0x62, 0x6f, 0x78, 0x20, 0x32, 0x34, 0x31,
  0x30, 0x2e, 0x32, 0x34, 0x31, 0x30, 0x2e, 0x31, 0x31, 0x31, 0x31, 0x36,
  0x2e, 0x31, 0x30, 0x37, 0x34, 0x31, 0x1b, 0x02, 0x62, 0x82, 0x40, 0x40,
  0x13, 0x04, 0x22, 0xda, 0x20, 0x18, 0xc7, 0x04, 0x81, 0x90, 0x36, 0x08,
  0x46, 0x42, 0x01, 0x6e, 0x6e, 0x82, 0x40, 0x4c, 0x1b, 0x86, 0x85, 0x39,
  0x26, 0x08, 0x6a, 0x40, 0x06, 0x04, 0x26, 0x08, 0x04, 0x35, 0x41, 0x20,
  0xaa, 0x0d, 0xc2, 0x11, 0x6d, 0x48, 0x0e, 0xe7, 0x39, 0x0e, 0x03, 0x3a,
  0xa4, 0x09, 0x82, 0x1b, 0x94, 0xc1, 0x86, 0xc4, 0xa0, 0x9e, 0xc3, 0x30,
  0xa0, 0x43, 0xda, 0x90, 0x40, 0xd4, 0x73, 0x40, 0x06, 0x74, 0x48, 0x13,
  0x04, 0xc2, 0xda, 0x90, 0x5c, 0xd4, 0x73, 0x5c, 0x06, 0x74, 0x48, 0x13,
  0x04, 0xe2, 0x9a, 0x20, 0xc0, 0x81, 0x19, 0x4c, 0x10, 0x08, 0x6c, 0x43,
  0x92, 0x69, 0xcf, 0x91, 0x19, 0xdb, 0x21, 0x6d, 0x48, 0x36, 0xed, 0x39,
  0x36, 0x63, 0x3b, 0xa4, 0x0d, 0xc6, 0x54, 0x59, 0x18, 0xd7, 0x4d, 0x10,
  0xe8, 0xe0, 0x0c, 0x26, 0x08, 0x44, 0xb6, 0x01, 0x39, 0xbe, 0xe7, 0x38,
  0x0c, 0x30, 0x00, 0x36, 0x04, 0x61, 0x30, 0x41, 0xb0, 0x03, 0x34, 0xd8,
  0x80, 0x1c, 0x63, 0xf0, 0x1c, 0x87, 0x71, 0x00, 0x1b, 0x10, 0x63, 0x0c,
  0x9e, 0xc3, 0x30, 0x0e, 0x60, 0x83, 0x40, 0x06, 0x65, 0xb0, 0x81, 0xf0,
  0x00, 0x31, 0x30, 0x83, 0x09, 0xc2, 0x1d, 0xa4, 0xc1, 0x86, 0x00, 0x0d,
  0x26, 0x08, 0x02, 0x40, 0x0d, 0x6a, 0x8a, 0xaa, 0x0c, 0x8f, 0xae, 0x4e,
  0xae, 0x8c, 0xac, 0xa8, 0x2d, 0x6d, 0x6e, 0x2e, 0xcd, 0xae, 0xcc, 0xaa,
  0x8c, 0xed, 0x6d, 0x2c, 0x8d, 0x2e, 0x8f, 0x08, 0x55, 0x11, 0xd6, 0xd0,
  0xd3, 0x93, 0x14, 0xd1, 0x04, 0xa1, 0xe0, 0x26, 0x08, 0x45, 0xb7, 0x21,
  0x38, 0x26, 0x08, 0x85, 0xb7, 0x41, 0xb8, 0xae, 0x0d, 0xcb, 0xc1, 0x06,
  0x6d, 0xe0, 0x06, 0x6f, 0x00, 0x07, 0x06, 0x1c, 0x1c, 0x6e, 0x10, 0x07,
  0x1b, 0x02, 0x63, 0x82, 0x50, 0x7c, 0x13, 0x04, 0x42, 0xdb, 0x20, 0x5c,
  0x75, 0xb0, 0x61, 0x31, 0xd8, 0xa0, 0x0d, 0xdc, 0x60, 0x0e, 0xe0, 0xc0,
  0xa0, 0x03, 0xc3, 0x0d, 0xec, 0x60, 0x43, 0x00, 0x4d, 0x10, 0x0a, 0x30,
  0xd8, 0xb0, 0x40, 0x6c, 0xd0, 0x06, 0x6e, 0x80, 0x07, 0x70, 0x60, 0xe4,
  0x01, 0xe4, 0x06, 0x76, 0xc0, 0x62, 0xe8, 0x89, 0xe9, 0x49, 0x6a, 0xc3,
  0x72, 0xed, 0x41, 0x1b, 0xb8, 0xc1, 0x1b, 0xc0, 0x81, 0x41, 0x07, 0x97,
  0x1b, 0x00, 0x5c, 0xa6, 0xac, 0xbe, 0xa0, 0xde, 0xe6, 0xd2, 0xe8, 0xd2,
  0xde, 0xdc, 0x36, 0x2c, 0x59, 0x1f, 0xb4, 0x41, 0x1e, 0xbc, 0x01, 0x1d,
  0x18, 0x74, 0x90, 0xb9, 0x81, 0x1d, 0x6c, 0x08, 0xb2, 0x09, 0x02, 0xb1,
  0x6d, 0x10, 0x2e, 0x50, 0xd8, 0xb0, 0x6c, 0x6c, 0xd0, 0x06, 0x6e, 0xf0,
  0x07, 0x70, 0x60, 0xd0, 0xc1, 0xe6, 0x06, 0xa1, 0xb0, 0xc1, 0x90, 0x83,
  0x3b, 0xd0, 0x03, 0x3e, 0xf0, 0x03, 0x51, 0x60, 0x32, 0x65, 0xf5, 0x45,
  0x15, 0x26, 0x77, 0x56, 0x46, 0x37, 0x41, 0x28, 0xc2, 0x60, 0xc3, 0x72,
  0x90, 0x42, 0x1b, 0x94, 0xc2, 0x1b, 0xb8, 0x81, 0x41, 0x07, 0x87, 0x1b,
  0x84, 0xc2, 0x04, 0xa1, 0x10, 0x83, 0x09, 0x42, 0x31, 0x06, 0x1b, 0x84,
  0xcb, 0xd8, 0xb0, 0x18, 0xa4, 0x70, 0x0a, 0xa5, 0x30, 0x07, 0x6e, 0x60,
  0xa0, 0x82, 0xe1, 0x06, 0xa9, 0xb0, 0x41, 0x30, 0x05, 0x55, 0xd8, 0x30,
  0x8c, 0xc2, 0x2a, 0x00, 0x1b, 0x0a, 0x35, 0x58, 0x03, 0x56, 0x38, 0x03,
  0xa0, 0x15, 0x9e, 0xd8, 0x1b, 0x9e, 0xcb, 0xd8, 0x5b, 0x1b, 0x5c, 0x1a,
  0x5b, 0x99, 0x9c, 0xcb, 0x1b, 0x1c, 0x5d, 0xda, 0x9b, 0xdb, 0xdc, 0x94,
  0x40, 0xa8, 0xc2, 0xc6, 0x66, 0xd7, 0xe6, 0x92, 0x46, 0x56, 0xe6, 0x46,
  0x37, 0x25, 0x20, 0xaa, 0x90, 0xe1, 0xb9, 0xd8, 0x95, 0xc9, 0xcd, 0xa5,
  0xbd, 0xb9, 0x4d, 0x09, 0x8e, 0x26, 0x64, 0x78, 0x2e, 0x76, 0x61, 0x6c,
  0x76, 0x65, 0x72, 0x53, 0x82, 0xa4, 0x0e, 0x19, 0x9e, 0xcb, 0x1c, 0x5a,
  0x18, 0x59, 0x99, 0x5c, 0xd3, 0x1b, 0x59, 0x19, 0xdb, 0x94, 0x80, 0x29,
  0x43, 0x86, 0xe7, 0x22, 0x57, 0x36, 0xf7, 0x56, 0x27, 0x37, 0x56, 0x36,
  0x37, 0x25, 0x30, 0x83, 0x3a, 0x64, 0x78, 0x2e, 0x76, 0x69, 0x65, 0x77,
  0x49, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x53, 0x02, 0x34, 0xa8, 0x43,
  0x86, 0xe7, 0x52, 0xe6, 0x46, 0x27, 0x97, 0x07, 0xf5, 0x96, 0xe6, 0x46,
  0x37, 0x37, 0x25, 0x60, 0x05, 0x00, 0x00, 0x00, 0x79, 0x18, 0x00, 0x00,
  0x51, 0x00, 0x00, 0x00, 0x33, 0x08, 0x80, 0x1c, 0xc4, 0xe1, 0x1c, 0x66,
  0x14, 0x01, 0x3d, 0x88, 0x43, 0x38, 0x84, 0xc3, 0x8c, 0x42, 0x80, 0x07,
  0x79, 0x78, 0x07, 0x73, 0x98, 0x71, 0x0c, 0xe6, 0x00, 0x0f, 0xed, 0x10,
  0x0e, 0xf4, 0x80, 0x0e, 0x33, 0x0c, 0x42, 0x1e, 0xc2, 0xc1, 0x1d, 0xce,
  0xa1, 0x1c, 0x66, 0x30, 0x05, 0x3d, 0x88, 0x43, 0x38, 0x84, 0x83, 0x1b,
  0xcc, 0x03, 0x3d, 0xc8, 0x43, 0x3d, 0x8c, 0x03, 0x3d, 0xcc, 0x78, 0x8c,
  0x74, 0x70, 0x07, 0x7b, 0x08, 0x07, 0x79, 0x48, 0x87, 0x70, 0x70, 0x07,
  0x7a, 0x70, 0x03, 0x76, 0x78, 0x87, 0x70, 0x20, 0x87, 0x19, 0xcc, 0x11,
  0x0e, 0xec, 0x90, 0x0e, 0xe1, 0x30, 0x0f, 0x6e, 0x30, 0x0f, 0xe3, 0xf0,
  0x0e, 0xf0, 0x50, 0x0e, 0x33, 0x10, 0xc4, 0x1d, 0xde, 0x21, 0x1c, 0xd8,
  0x21, 0x1d, 0xc2, 0x61, 0x1e, 0x66, 0x30, 0x89, 0x3b, 0xbc, 0x83, 0x3b,
  0xd0, 0x43, 0x39, 0xb4, 0x03, 0x3c, 0xbc, 0x83, 0x3c, 0x84, 0x03, 0x3b,
  0xcc, 0xf0, 0x14, 0x76, 0x60, 0x07, 0x7b, 0x68, 0x07, 0x37, 0x68, 0x87,
  0x72, 0x68, 0x07, 0x37, 0x80, 0x87, 0x70, 0x90, 0x87, 0x70, 0x60, 0x07,
  0x76, 0x28, 0x07, 0x76, 0xf8, 0x05, 0x76, 0x78, 0x87, 0x77, 0x80, 0x87,
  0x5f, 0x08, 0x87, 0x71, 0x18, 0x87, 0x72, 0x98, 0x87, 0x79, 0x98, 0x81,
  0x2c, 0xee, 0xf0, 0x0e, 0xee, 0xe0, 0x0e, 0xf5, 0xc0, 0x0e, 0xec, 0x30,
  0x03, 0x62, 0xc8, 0xa1, 0x1c, 0xe4, 0xa1, 0x1c, 0xcc, 0xa1, 0x1c, 0xe4,
  0xa1, 0x1c, 0xdc, 0x61, 0x1c, 0xca, 0x21, 0x1c, 0xc4, 0x81, 0x1d, 0xca,
  0x61, 0x06, 0xd6, 0x90, 0x43, 0x39, 0xc8, 0x43, 0x39, 0x98, 0x43, 0x39,
  0xc8, 0x43, 0x39, 0xb8, 0xc3, 0x38, 0x94, 0x43, 0x38, 0x88, 0x03, 0x3b,
  0x94, 0xc3, 0x2f, 0xbc, 0x83, 0x3c, 0xfc, 0x82, 0x3b, 0xd4, 0x03, 0x3b,
  0xb0, 0xc3, 0x0c, 0xc4, 0x21, 0x07, 0x7c, 0x70, 0x03, 0x7a, 0x28, 0x87,
  0x76, 0x80, 0x87, 0x19, 0xd1, 0x43, 0x0e, 0xf8, 0xe0, 0x06, 0xe4, 0x20,
  0x0e, 0xe7, 0xe0, 0x06, 0xf6, 0x10, 0x0e, 0xf2, 0xc0, 0x0e, 0xe1, 0x90,
  0x0f, 0xef, 0x50, 0x0f, 0xf4, 0x30, 0x83, 0x81, 0xc8, 0x01, 0x1f, 0xdc,
  0x40, 0x1c, 0xe4, 0xa1, 0x1c, 0xc2, 0x61, 0x1d, 0xdc, 0x40, 0x1c, 0xe4,
  0x01, 0x00, 0x00, 0x00, 0x71, 0x20, 0x00, 0x00, 0x43, 0x00, 0x00, 0x00,
  0x06, 0xa0, 0xa5, 0x6c, 0x4b, 0x5c, 0x13, 0x15, 0x11, 0x83, 0xc7, 0x20,
  0x92, 0x84, 0x54, 0xc4, 0x4b, 0x2c, 0x8e, 0x80, 0x4c, 0x98, 0x21, 0x40,
  0xc3, 0xe5, 0x3b, 0x8f, 0x1f, 0x20, 0x0d, 0x10, 0x61, 0x7e, 0x71, 0xdb,
  0xd6, 0xb0, 0x0d, 0x97, 0xef, 0x3c, 0xbe, 0x10, 0x50, 0x45, 0x41, 0x44,
  0xa5, 0x03, 0x0c, 0x25, 0x61, 0x00, 0x02, 0xe6, 0x17, 0xb7, 0x6d, 0x0c,
  0xdb, 0x70, 0xf9, 0xce, 0xe3, 0x0b, 0x01, 0x55, 0x14, 0x44, 0x54, 0x3a,
  0xc0, 0x50, 0x12, 0x06, 0x20, 0x60, 0x3e, 0x72, 0xdb, 0xf6, 0x20, 0x0d,
  0x97, 0xef, 0x3c, 0xbe, 0x10, 0x11, 0xc0, 0x44, 0x84, 0x40, 0x33, 0x2c,
  0x84, 0x1d, 0x38, 0xc3, 0xe5, 0x3b, 0x8f, 0x3f, 0x38, 0x93, 0xed, 0x17,
  0xb7, 0x6d, 0x04, 0xce, 0x70, 0xf9, 0xce, 0xe3, 0x0f, 0xce, 0x74, 0xfb,
  0xc5, 0x6d, 0xdb, 0x02, 0x35, 0x5c, 0xbe, 0xf3, 0xf8, 0x0b, 0x61, 0x00,
  0x02, 0xf6, 0xdd, 0x76, 0xeb, 0x7c, 0xb5, 0x6e, 0x01, 0xd3, 0x70, 0xf9,
  0xce, 0xe3, 0x2f, 0x0e, 0x30, 0x88, 0xcd, 0x43, 0x4d, 0x7e, 0x71, 0xdb,
  0x66, 0x00, 0x0d, 0x97, 0xef, 0x3c, 0xbe, 0x04, 0x30, 0xcf, 0x42, 0xf8,
  0xc5, 0x6d, 0x9b, 0x42, 0x35, 0x5c, 0xbe, 0xf3, 0xf8, 0x12, 0xc0, 0x3c,
  0x0b, 0x51, 0x12, 0x15, 0xb1, 0xf8, 0xc5, 0x6d, 0x9b, 0x40, 0x35, 0x5c,
  0xbe, 0xf3, 0xf8, 0xd2, 0xe4, 0x44, 0x04, 0x4a, 0x4d, 0x0f, 0x35, 0xf9,
  0xc5, 0x6d, 0xdb, 0x40, 0x35, 0x5c, 0xbe, 0xf3, 0xf8, 0xd2, 0xe4, 0x44,
  0x04, 0x4a, 0x4d, 0x0f, 0x35, 0xf9, 0xc8, 0x6d, 0x9b, 0x83, 0x34, 0x5c,
  0xbe, 0xf3, 0xf8, 0x13, 0x11, 0x4d, 0x08, 0x10, 0x61, 0x7e, 0x71, 0xdb,
  0x56, 0xf0, 0x0c, 0x97, 0xef, 0x3c, 0x3e, 0xd5, 0x00, 0x11, 0xe6, 0x17,
  0xb7, 0x6d, 0x09, 0xcd, 0x15, 0x38, 0x97, 0x6f, 0x12, 0xc3, 0xfd, 0x7f,
  0xb7, 0x0d, 0x00, 0x00, 0x61, 0x20, 0x00, 0x00, 0x7a, 0x02, 0x00, 0x00,
  0x13, 0x04, 0x43, 0x2c, 0x10, 0x00, 0x00, 0x00, 0x24, 0x00, 0x00, 0x00,
  0x34, 0x8e, 0x00, 0x10, 0x51, 0x28, 0x65, 0x51, 0x2c, 0xc5, 0x57, 0x26,
  0x65, 0x54, 0x20, 0xc5, 0x56, 0x2e, 0x05, 0x53, 0x84, 0x02, 0xe5, 0x53,
  0x14, 0x85, 0x1a, 0x50, 0xa6, 0x01, 0x33, 0x00, 0xc5, 0x55, 0x6e, 0x25,
  0x57, 0x76, 0x25, 0x53, 0x78, 0x34, 0x8c, 0x11, 0x80, 0x20, 0x08, 0x82,
  0xde, 0x18, 0x01, 0x08, 0x82, 0x20, 0xfa, 0x8d, 0x11, 0xf4, 0x7d, 0xcb,
  0xe2, 0xda, 0x18, 0xc1, 0xee, 0x8f, 0x32, 0x09, 0x06, 0x63, 0x04, 0x20,
  0x08, 0x82, 0xf0, 0x2f, 0x8c, 0x11, 0x80, 0x20, 0x08, 0x82, 0xdc, 0x18,
  0x01, 0x08, 0xe2, 0xff, 0xdf, 0x8d, 0x11, 0xa8, 0x78, 0x7d, 0xca, 0xde,
  0x18, 0x81, 0x8a, 0xd7, 0xa7, 0xec, 0x0b, 0x63, 0x04, 0x20, 0x08, 0x82,
  0xf8, 0x2f, 0x8c, 0x11, 0x80, 0x20, 0x08, 0xc2, 0xdf, 0x18, 0x01, 0x08,
  0x82, 0x20, 0x08, 0x06, 0x63, 0x04, 0x20, 0x08, 0x82, 0x20, 0x28, 0x8c,
  0x00, 0x8c, 0x11, 0x80, 0x20, 0x08, 0xe2, 0xdf, 0x0c, 0x00, 0x00, 0x00,
  0x23, 0x06, 0x09, 0x00, 0x82, 0x60, 0x40, 0x06, 0xa2, 0x40, 0xd1, 0x41,
  0x1e, 0xe4, 0xc1, 0x19, 0x8c, 0x18, 0x24, 0x00, 0x08, 0x82, 0x01, 0x19,
  0x8c, 0x42, 0x55, 0x07, 0x7b, 0xb0, 0x07, 0x68, 0x30, 0x62, 0x90, 0x00,
  0x20, 0x08, 0x06, 0x64, 0x40, 0x0a, 0x96, 0x1d, 0xf4, 0x41, 0x1f, 0xa4,
  0xc1, 0x88, 0x41, 0x02, 0x80, 0x20, 0x18, 0x90, 0x41, 0x29, 0x5c, 0x77,
  0x00, 0x0a, 0xa0, 0xa0, 0x06, 0x23, 0x06, 0x09, 0x00, 0x82, 0x60, 0x40,
  0x06, 0xa6, 0x80, 0xe1, 0x41, 0x29, 0x94, 0xc2, 0x1a, 0x8c, 0x18, 0x24,
  0x00, 0x08, 0x82, 0x01, 0x19, 0x9c, 0x42, 0x96, 0x07, 0xa5, 0x50, 0x0a,
  0x6c, 0x30, 0x62, 0x90, 0x00, 0x20, 0x08, 0x06, 0x64, 0x80, 0x0a, 0xda,
  0x1d, 0x9c, 0xc2, 0x29, 0xb4, 0xc1, 0x88, 0x41, 0x02, 0x80, 0x20, 0x18,
  0x90, 0x41, 0x2a, 0x6c, 0x78, 0x70, 0x0a, 0xa7, 0xe0, 0x06, 0x23, 0x06,
  0x09, 0x00, 0x82, 0x60, 0x40, 0x06, 0xaa, 0xc0, 0xed, 0x01, 0x2a, 0xa0,
  0xc2, 0x1b, 0x8c, 0x18, 0x24, 0x00, 0x08, 0x82, 0x81, 0x91, 0x0b, 0xa3,
  0x20, 0x0a, 0xa9, 0x70, 0x07, 0x60, 0x30, 0x62, 0x90, 0x00, 0x20, 0x08,
  0x06, 0x86, 0x2e, 0x90, 0xc2, 0x28, 0xa8, 0xc2, 0x1e, 0x84, 0xc1, 0x88,
  0x41, 0x02, 0x80, 0x20, 0x18, 0x18, 0xbb, 0x50, 0x0a, 0xa5, 0xb0, 0x0a,
  0x79, 0x20, 0x06, 0x23, 0x06, 0x09, 0x00, 0x82, 0x60, 0x60, 0xf0, 0x82,
  0x29, 0xa4, 0x02, 0x2b, 0x80, 0xc2, 0x18, 0x8c, 0x18, 0x24, 0x00, 0x08,
  0x82, 0x81, 0xd1, 0x0b, 0xa7, 0xa0, 0x0a, 0xad, 0xb0, 0x07, 0x64, 0x30,
  0x62, 0x90, 0x00, 0x20, 0x08, 0x06, 0x86, 0x2f, 0xa0, 0xc2, 0x2a, 0xb8,
  0x42, 0x28, 0x94, 0xc1, 0x88, 0x41, 0x02, 0x80, 0x20, 0x18, 0x18, 0xbf,
  0x90, 0x0a, 0xb0, 0xf0, 0x0a, 0xa3, 0x60, 0x06, 0x23, 0x06, 0x09, 0x00,
  0x82, 0x60, 0x60, 0x80, 0x83, 0x2a, 0xc4, 0x02, 0x2c, 0xf8, 0xc1, 0x19,
  0x8c, 0x18, 0x24, 0x00, 0x08, 0x82, 0x81, 0x11, 0x0e, 0xab, 0x20, 0x0b,
  0xb1, 0x40, 0x0a, 0x68, 0x30, 0x62, 0x90, 0x00, 0x20, 0x08, 0x06, 0x86,
  0x38, 0xb0, 0x82, 0x2c, 0xc8, 0x82, 0x29, 0xa4, 0xc1, 0x88, 0x41, 0x02,
  0x80, 0x20, 0x18, 0x18, 0xe3, 0xd0, 0x0a, 0xb3, 0x30, 0x0b, 0xa1, 0xa0,
  0x06, 0x23, 0x06, 0x07, 0x00, 0x82, 0x60, 0x10, 0x06, 0xb8, 0x70, 0x06,
  0x0c, 0x2d, 0x8c, 0x26, 0x04, 0xc0, 0x68, 0x82, 0x10, 0x8c, 0x26, 0x0c,
  0x82, 0x0d, 0x49, 0x7c, 0x6c, 0x48, 0xe2, 0x63, 0x43, 0x12, 0x9f, 0x11,
  0x83, 0x05, 0x00, 0x41, 0x30, 0x60, 0xd0, 0x01, 0x0e, 0x06, 0x21, 0x18,
  0x84, 0x60, 0xc4, 0xc0, 0x00, 0x40, 0x10, 0x0c, 0x1c, 0x74, 0x70, 0x83,
  0xc0, 0x8a, 0x40, 0x3e, 0x56, 0x08, 0xf2, 0xb1, 0x62, 0x90, 0xcf, 0x88,
  0xc1, 0x03, 0x80, 0x20, 0x18, 0x4c, 0xeb, 0x10, 0x07, 0x5c, 0xe6, 0x34,
  0x61, 0x10, 0x06, 0xe0, 0x00, 0x0e, 0x77, 0x10, 0x06, 0xa3, 0x09, 0x01,
  0x30, 0x9a, 0x20, 0x04, 0x26, 0xa0, 0x81, 0x7c, 0x4c, 0x48, 0x03, 0xf9,
  0x98, 0xc0, 0x06, 0xf0, 0x31, 0xa1, 0x0d, 0xe0, 0x33, 0x62, 0x90, 0x00,
  0x20, 0x08, 0x06, 0x55, 0x3c, 0x98, 0x82, 0x10, 0x08, 0x81, 0xa9, 0x41,
  0x10, 0x9f, 0x11, 0x03, 0x03, 0x00, 0x41, 0x30, 0x70, 0xea, 0xc1, 0x14,
  0x82, 0x11, 0x03, 0x03, 0x00, 0x41, 0x30, 0x70, 0xec, 0x41, 0x14, 0xb6,
  0x11, 0x03, 0x03, 0x00, 0x41, 0x30, 0x70, 0xee, 0x61, 0x14, 0xb6, 0x11,
  0x03, 0x03, 0x00, 0x41, 0x30, 0x70, 0xf0, 0x81, 0x14, 0xb6, 0x11, 0x03,
  0x03, 0x00, 0x41, 0x30, 0x70, 0xf2, 0xc1, 0x14, 0xbc, 0x11, 0x03, 0x03,
  0x00, 0x41, 0x30, 0x70, 0xf4, 0xe1, 0x14, 0xbc, 0x11, 0x03, 0x03, 0x00,
  0x41, 0x30, 0x70, 0xf6, 0x01, 0x15, 0xbc, 0x11, 0x03, 0x03, 0x00, 0x41,
  0x30, 0x70, 0xf8, 0x01, 0x15, 0xbc, 0x11, 0x03, 0x03, 0x00, 0x41, 0x30,
  0x70, 0xfa, 0x21, 0x15, 0xbc, 0x11, 0x03, 0x03, 0x00, 0x41, 0x30, 0x70,
  0xfc, 0x61, 0x15, 0xc0, 0x60, 0xc4, 0xc0, 0x00, 0x40, 0x10, 0x0c, 0x9c,
  0x7f, 0x60, 0x05, 0x30, 0xb0, 0x22, 0x91, 0x8f, 0x1d, 0x89, 0x7c, 0x4c,
  0x08, 0xe2, 0x63, 0xca, 0x22, 0x1f, 0x4b, 0x1c, 0xf9, 0x98, 0x10, 0xc4,
  0xc7, 0x18, 0x48, 0x3e, 0xe6, 0x40, 0xf2, 0x31, 0x21, 0x88, 0x8f, 0x05,
  0x8f, 0x7c, 0xac, 0x78, 0xe4, 0x63, 0x42, 0x10, 0x1f, 0x53, 0x22, 0xf9,
  0x58, 0x41, 0xc9, 0xc7, 0x84, 0x20, 0x3e, 0xa6, 0x58, 0xf2, 0x31, 0xc7,
  0x92, 0x8f, 0x09, 0x41, 0x7c, 0xac, 0xd1, 0xe4, 0x63, 0x0b, 0x27, 0x1f,
  0x13, 0x82, 0xf8, 0x58, 0xf3, 0xc9, 0xc7, 0x28, 0x4f, 0x3e, 0x26, 0x04,
  0xf1, 0x31, 0x2b, 0x0c, 0xe4, 0x63, 0xd4, 0x18, 0xc8, 0xc7, 0x84, 0x20,
  0x3e, 0x06, 0x7d, 0xf2, 0x19, 0x31, 0x40, 0x00, 0x10, 0x04, 0x83, 0x6c,
  0x26, 0xcc, 0xc1, 0x43, 0x02, 0x7b, 0xc2, 0x40, 0x3e, 0x23, 0x06, 0x08,
  0x00, 0x82, 0x60, 0x90, 0xd5, 0x04, 0x3a, 0x80, 0xc1, 0x11, 0x98, 0x33,
  0x06, 0xf2, 0x19, 0x31, 0x40, 0x00, 0x10, 0x04, 0x83, 0xec, 0x26, 0xd4,
  0x41, 0x0c, 0x8c, 0x60, 0xc4, 0x60, 0x01, 0x40, 0x10, 0x0c, 0x18, 0xb1,
  0x50, 0x87, 0x62, 0x08, 0x8a, 0x21, 0x18, 0x31, 0x30, 0x00, 0x10, 0x04,
  0x03, 0x47, 0x2c, 0xd0, 0x21, 0x30, 0xcc, 0x0c, 0xe4, 0x33, 0x62, 0x80,
  0x00, 0x20, 0x08, 0x06, 0xd9, 0x4e, 0xb8, 0x43, 0x19, 0x40, 0x81, 0x5d,
  0x68, 0x20, 0x9f, 0x11, 0x03, 0x04, 0x00, 0x41, 0x30, 0xc8, 0x7a, 0x02,
  0x1e, 0xce, 0xe0, 0x09, 0xcc, 0x52, 0x03, 0xf9, 0x8c, 0x18, 0x20, 0x00,
  0x08, 0x82, 0x41, 0xf6, 0x13, 0xf2, 0x90, 0x06, 0x4e, 0x30, 0x62, 0xb0,
  0x00, 0x20, 0x08, 0x06, 0x8c, 0x5a, 0xc8, 0x43, 0x31, 0x04, 0xc5, 0x10,
  0x8c, 0x18, 0x18, 0x00, 0x08, 0x82, 0x81, 0xa3, 0x16, 0xf0, 0x10, 0x58,
  0x70, 0xc8, 0xc7, 0x04, 0x43, 0x3e, 0x36, 0x14, 0xf2, 0x31, 0xa9, 0x0f,
  0xe4, 0x63, 0x41, 0x23, 0x9f, 0x11, 0x03, 0x04, 0x00, 0x41, 0x30, 0xc8,
  0xce, 0x42, 0x1f, 0xfc, 0xa0, 0x08, 0x46, 0x0c, 0x10, 0x00, 0x04, 0xc1,
  0x20, 0x43, 0x8b, 0x7d, 0xe0, 0x83, 0x5c, 0x08, 0x8c, 0x0a, 0x05, 0xf9,
  0x58, 0x10, 0xc9, 0x67, 0xc4, 0x00, 0x01, 0x40, 0x10, 0x0c, 0xb2, 0xb5,
  0xf0, 0x07, 0x51, 0x40, 0x82, 0x11, 0x03, 0x04, 0x00, 0x41, 0x30, 0xc8,
  0xd8, 0xe2, 0x1f, 0x40, 0x81, 0x17, 0x02, 0xb3, 0x4a, 0x41, 0x3e, 0x16,
  0x54, 0xf2, 0x19, 0x31, 0x40, 0x00, 0x10, 0x04, 0x83, 0xec, 0x2d, 0x44,
  0xc2, 0x14, 0x96, 0x60, 0xc4, 0x00, 0x01, 0x40, 0x10, 0x0c, 0x32, 0xb8,
  0x18, 0x09, 0x52, 0xf8, 0x85, 0x60, 0xc4, 0x60, 0x01, 0x40, 0x10, 0x0c,
  0x98, 0xbd, 0x18, 0x89, 0xa4, 0x08, 0x92, 0x22, 0x18, 0x31, 0x30, 0x00,
  0x10, 0x04, 0x03, 0x67, 0x2f, 0x42, 0x22, 0xb0, 0x60, 0x91, 0x8f, 0x09,
  0x88, 0x7c, 0x6c, 0x28, 0xe4, 0x33, 0x62, 0xf0, 0x00, 0x20, 0x08, 0x06,
  0x93, 0x5f, 0x90, 0x84, 0x3b, 0xb0, 0x43, 0x38, 0x80, 0x03, 0x3d, 0xd0,
  0xc3, 0x5c, 0xcc, 0x85, 0x4a, 0xd0, 0xc3, 0x68, 0x42, 0x00, 0x8c, 0x26,
  0x08, 0xc1, 0x68, 0xc2, 0x20, 0x8c, 0x18, 0x3c, 0x00, 0x08, 0x82, 0xc1,
  0x24, 0x1a, 0x28, 0x41, 0x0f, 0xf0, 0x50, 0x0e, 0xe4, 0x80, 0x0f, 0xf8,
  0x70, 0x17, 0x77, 0xe1, 0x12, 0xf8, 0x30, 0x9a, 0x10, 0x00, 0xa3, 0x09,
  0x42, 0x30, 0x9a, 0x30, 0x08, 0x23, 0x06, 0x0b, 0x00, 0x82, 0x60, 0xc0,
  0xa0, 0x06, 0x4c, 0x2c, 0x4a, 0xe2, 0x0b, 0xbd, 0xc0, 0x0b, 0x23, 0x06,
  0x06, 0x00, 0x82, 0x60, 0xe0, 0xa0, 0xc6, 0x5c, 0x04, 0x46, 0x10, 0xf2,
  0x31, 0x42, 0x91, 0x8f, 0x15, 0x8a, 0x7c, 0xcc, 0x50, 0xe4, 0x63, 0xcd,
  0x10, 0x1f, 0x6b, 0x86, 0xf8, 0x58, 0x33, 0xc4, 0xc7, 0x06, 0x46, 0x3e,
  0x36, 0x34, 0xf2, 0xb1, 0xc1, 0x91, 0x8f, 0x4d, 0x2f, 0x01, 0x1f, 0x9b,
  0x60, 0x02, 0x3e, 0x36, 0xc5, 0x04, 0x7c, 0x0c, 0x1a, 0xe4, 0x63, 0xd1,
  0x20, 0x1f, 0x93, 0x06, 0xf9, 0xd8, 0x60, 0x13, 0xf0, 0xb1, 0xe1, 0x26,
  0xe0, 0x63, 0x03, 0x4e, 0xc0, 0xc7, 0x06, 0x4c, 0x3e, 0x36, 0x64, 0xf2,
  0xb1, 0x41, 0x93, 0xcf, 0x2c, 0x41, 0x30, 0x50, 0x31, 0xb0, 0x09, 0x10,
  0x1a, 0xc1, 0x40, 0xc5, 0xe0, 0x26, 0x40, 0x68, 0x04, 0x03, 0x15, 0x03,
  0x9c, 0x00, 0xa1, 0x11, 0x0c, 0x54, 0x10, 0x6c, 0x03, 0x84, 0x46, 0x60,
  0xc1, 0x5d, 0xc0, 0x60, 0xc4, 0xe0, 0x00, 0x40, 0x10, 0x0c, 0xc2, 0x80,
  0x37, 0xd6, 0x02, 0x26, 0x82, 0xd1, 0x84, 0x00, 0x18, 0x4d, 0x10, 0x82,
  0xd1, 0x84, 0x41, 0x30, 0xb0, 0x18, 0xe2, 0x63, 0x61, 0x31, 0xc4, 0xc7,
  0xc4, 0x62, 0x88, 0xcf, 0x88, 0xc1, 0x02, 0x80, 0x20, 0x18, 0x30, 0xec,
  0x41, 0x17, 0x83, 0x10, 0x0c, 0x42, 0x30, 0x62, 0x60, 0x00, 0x20, 0x08,
  0x06, 0x0e, 0x7b, 0xc8, 0x45, 0x60, 0x41, 0x21, 0x1f, 0x13, 0x0a, 0xf9,
  0xd8, 0x50, 0xc8, 0xc7, 0x86, 0x93, 0x80, 0x8f, 0x0d, 0x27, 0x01, 0x1f,
  0x1b, 0x4e, 0x02, 0x3e, 0x23, 0x06, 0x0b, 0x00, 0x82, 0x60, 0xc0, 0xd0,
  0x07, 0x5f, 0x0c, 0x42, 0x30, 0x08, 0xc1, 0x88, 0x81, 0x01, 0x80, 0x20,
  0x18, 0x38, 0xf4, 0xa1, 0x17, 0x81, 0x15, 0x81, 0x7c, 0xac, 0x10, 0xe4,
  0x63, 0xc5, 0x20, 0x9f, 0x11, 0x83, 0x05, 0x00, 0x41, 0x30, 0x60, 0xf2,
  0x23, 0x34, 0xf8, 0x60, 0x0f, 0xf4, 0x60, 0x51, 0x92, 0x11, 0x03, 0x03,
  0x00, 0x41, 0x30, 0x70, 0xf2, 0x83, 0x3c, 0x82, 0x11, 0x83, 0x05, 0x00,
  0x41, 0x30, 0x60, 0xf6, 0x63, 0x34, 0x1a, 0x66, 0x29, 0x88, 0x61, 0xc4,
  0xc0, 0x00, 0x40, 0x10, 0x0c, 0x9c, 0xfd, 0x30, 0x8f, 0x60, 0xc4, 0x60,
  0x01, 0x40, 0x10, 0x0c, 0x98, 0xfe, 0x28, 0x0d, 0x50, 0xf8, 0x03, 0x3f,
  0x38, 0x8c, 0x62, 0xc4, 0xc0, 0x00, 0x40, 0x10, 0x0c, 0x9c, 0xfe, 0x40,
  0x8f, 0xc0, 0xf2, 0xe0, 0x2e, 0xe4, 0x63, 0x04, 0x21, 0x1f, 0x0b, 0x04,
  0xf9, 0x58, 0x10, 0x1a, 0xf0, 0x31, 0xbc, 0x48, 0xe2, 0x63, 0x41, 0x20,
  0x1f, 0x0b, 0x02, 0xf9, 0x58, 0x30, 0xc8, 0xc7, 0x82, 0x42, 0x3e, 0x16,
  0xf4, 0x05, 0x7c, 0xcc, 0x2f, 0x40, 0x21, 0x3e, 0x16, 0x04, 0xf2, 0xb1,
  0x20, 0x90, 0x8f, 0x05, 0x83, 0x7c, 0x2c, 0x58, 0xe4, 0x63, 0xc1, 0x68,
  0xc0, 0xc7, 0x8e, 0x40, 0x3e, 0x66, 0x0a, 0xa6, 0x20, 0x1f, 0x0b, 0x56,
  0x03, 0x3e, 0x46, 0x51, 0xf2, 0xb1, 0x40, 0x90, 0x8f, 0x05, 0xa9, 0x01,
  0x1f, 0x0b, 0x02, 0xf9, 0x58, 0x60, 0x1b, 0xf2, 0x19, 0x31, 0x38, 0x00,
  0x10, 0x04, 0x83, 0x6b, 0x46, 0xd6, 0x03, 0x37, 0x02, 0x43, 0x02, 0xfa,
  0x98, 0x6b, 0xf0, 0x41, 0x7c, 0xec, 0x35, 0xf8, 0x20, 0x3e, 0x06, 0x1b,
  0x7c, 0x10, 0x1f, 0x8b, 0x0d, 0x30, 0x88, 0x8f, 0x05, 0x81, 0x7c, 0x2c,
  0x08, 0xe4, 0x63, 0xc1, 0x20, 0x1f, 0x0b, 0x0e, 0xf9, 0x98, 0x70, 0xc8,
  0xc7, 0x86, 0x43, 0x3e, 0x36, 0x98, 0x02, 0x7c, 0x6c, 0x30, 0x05, 0xf8,
  0xd8, 0x60, 0x0a, 0xf0, 0xb1, 0xdd, 0x30, 0x83, 0xf8, 0xd8, 0x95, 0x1e,
  0xf2, 0xb1, 0x40, 0x90, 0x8f, 0x05, 0x69, 0x00, 0x1f, 0xfb, 0x8d, 0x80,
  0x3e, 0x16, 0x4c, 0xf2, 0xb1, 0x20, 0x91, 0x8f, 0x09, 0x89, 0x7c, 0x6c,
  0x48, 0xe4, 0x63, 0xac, 0x40, 0x22, 0x30, 0x18, 0x31, 0x38, 0x00, 0x10,
  0x04, 0x83, 0x30, 0x38, 0x13, 0xfb, 0xd8, 0x8d, 0x60, 0x34, 0x21, 0x00,
  0x46, 0x13, 0x84, 0x60, 0x34, 0x61, 0x10, 0x6c, 0xd0, 0x03, 0xf9, 0xd8,
  0xb0, 0x07, 0xf2, 0xb1, 0x81, 0x0f, 0xe4, 0x63, 0x68, 0x60, 0x0e, 0xf2,
  0xb1, 0x34, 0x30, 0x07, 0xf9, 0x98, 0x1a, 0x98, 0x83, 0x7c, 0xcc, 0x19,
  0xe0, 0x63, 0xce, 0x00, 0x1f, 0x73, 0x06, 0xf8, 0x58, 0x32, 0xc8, 0xc7,
  0x92, 0x41, 0x3e, 0x96, 0x0c, 0xf2, 0xb1, 0x01, 0x1c, 0xe0, 0x63, 0x03,
  0x38, 0xc0, 0xc7, 0x06, 0x70, 0x80, 0x8f, 0x81, 0xc3, 0x9d, 0xc0, 0x60,
  0xb8, 0x21, 0x90, 0x13, 0x30, 0x98, 0x65, 0x10, 0x82, 0x60, 0xc4, 0x20,
  0x01, 0x40, 0x10, 0x0c, 0x0c, 0x54, 0x91, 0x93, 0x38, 0xc1, 0x13, 0x36,
  0x79, 0x91, 0x11, 0x83, 0x04, 0x00, 0x41, 0x30, 0x30, 0x52, 0x65, 0x4e,
  0xe4, 0x24, 0x4f, 0xd8, 0x04, 0x46, 0x46, 0x0c, 0x12, 0x00, 0x04, 0xc1,
  0xc0, 0x50, 0x15, 0x3a, 0xa1, 0x13, 0x3d, 0x71, 0x93, 0x18, 0x19, 0x31,
  0x48, 0x00, 0x10, 0x04, 0x03, 0x63, 0x55, 0xea, 0xa4, 0x4e, 0xf6, 0xc4,
  0x4d, 0x64, 0x64, 0x34, 0x21, 0x25, 0x86, 0x11, 0x83, 0x07, 0x00, 0x41,
  0x30, 0x98, 0x50, 0xc5, 0x45, 0xfa, 0xe3, 0x3e, 0x5a, 0x82, 0x25, 0x56,
  0xc2, 0x3f, 0x68, 0x84, 0x46, 0x68, 0xc4, 0x3f, 0x46, 0x13, 0x02, 0x60,
  0x34, 0x41, 0x08, 0x46, 0x13, 0x06, 0xc1, 0x86, 0x7e, 0x90, 0x8f, 0x0d,
  0xfd, 0x20, 0x1f, 0x1b, 0xfa, 0x41, 0x3e, 0x36, 0x44, 0xf0, 0xb1, 0x21,
  0x82, 0x8f, 0x0d, 0x11, 0x7c, 0x46, 0x0c, 0x0e, 0x00, 0x04, 0xc1, 0xc0,
  0x63, 0x15, 0x1d, 0xf9, 0x8f, 0x32, 0x19, 0x4d, 0x08, 0x84, 0x0b, 0x06,
  0xb3, 0x20, 0x26, 0xe4, 0x63, 0x2f, 0xe2, 0x1e, 0xf1, 0x31, 0x18, 0x71,
  0x8f, 0xf8, 0x58, 0x8c, 0xb8, 0x47, 0x7c, 0x46, 0x0c, 0x16, 0x00, 0x04,
  0xc1, 0x80, 0xd9, 0x95, 0x31, 0x19, 0x84, 0xc0, 0x27, 0x7a, 0x82, 0x27,
  0x2c, 0xa0, 0x11, 0xf9, 0x58, 0x00, 0x16, 0xf2, 0x31, 0x01, 0x2c, 0xe4,
  0x63, 0x03, 0x58, 0xc8, 0xc7, 0x90, 0x21, 0x3e, 0x86, 0x0c, 0xf1, 0x31,
  0x64, 0x88, 0xcf, 0x88, 0xc1, 0x03, 0x80, 0x20, 0x18, 0x4c, 0xbd, 0x92,
  0x27, 0x35, 0x02, 0x23, 0x83, 0x10, 0xdc, 0x48, 0x9b, 0xb4, 0x49, 0x9b,
  0x30, 0xa3, 0x09, 0x01, 0x30, 0x9a, 0x20, 0x04, 0xa3, 0x09, 0x83, 0x60,
  0x83, 0x4a, 0xc8, 0xc7, 0x06, 0x95, 0x90, 0x8f, 0x0d, 0x2a, 0x21, 0x1f,
  0xcb, 0x06, 0xf8, 0x58, 0x36, 0xc0, 0xc7, 0xb2, 0x01, 0x3e, 0x23, 0x06,
  0x0f, 0x00, 0x82, 0x60, 0x30, 0xad, 0x4b, 0x9c, 0xf8, 0x48, 0x8e, 0xb8,
  0x48, 0x8b, 0x84, 0x49, 0x98, 0x80, 0x0b, 0xb8, 0xdc, 0x49, 0x98, 0x8c,
  0x26, 0x04, 0xc0, 0x68, 0x82, 0x10, 0x8c, 0x26, 0x0c, 0x82, 0x1d, 0x03,
  0x7c, 0xec, 0x18, 0xe0, 0x63, 0xc7, 0x00, 0x9f, 0x11, 0x83, 0x03, 0x00,
  0x41, 0x30, 0x08, 0x83, 0x75, 0xd1, 0x93, 0x1f, 0x59, 0x95, 0xd1, 0x84,
  0x60, 0xb0, 0xa0, 0x0d, 0xe4, 0x63, 0x72, 0x00, 0x26, 0xf4, 0x31, 0x31,
  0x09, 0x13, 0xfa, 0xd8, 0x1c, 0x88, 0x09, 0x7d, 0x6c, 0x98, 0x13, 0xf9,
  0xd8, 0x40, 0x27, 0xf2, 0x31, 0xa1, 0x4e, 0xe0, 0x63, 0x76, 0x22, 0xc4,
  0x67, 0xc4, 0xe0, 0x00, 0x40, 0x10, 0x0c, 0xc2, 0xa0, 0x5e, 0x48, 0x25,
  0x4d, 0x5e, 0x65, 0x34, 0x21, 0x18, 0x46, 0x0c, 0x0e, 0x00, 0x04, 0xc1,
  0x20, 0x0c, 0xee, 0xc5, 0x54, 0xd6, 0x04, 0x56, 0x46, 0x13, 0x02, 0xc0,
  0x06, 0x43, 0x3e, 0x26, 0x18, 0xf2, 0x31, 0xa1, 0x0f, 0xe2, 0x63, 0x42,
  0x9b, 0xc4, 0xc7, 0x1a, 0x3f, 0x88, 0xcf, 0x0d, 0xc4, 0x56, 0x60, 0x2b,
  0x68, 0xc5, 0xa9, 0xc8, 0x67, 0xc4, 0xc0, 0x00, 0x40, 0x10, 0x0c, 0x9c,
  0x94, 0xd9, 0x97, 0x60, 0xc4, 0x00, 0x01, 0x40, 0x10, 0x0c, 0x32, 0x93,
  0xc1, 0x95, 0x20, 0x54, 0x50, 0x65, 0xc4, 0xc0, 0x00, 0x40, 0x10, 0x0c,
  0xb6, 0x92, 0xd9, 0x95, 0xa0, 0x82, 0x7f, 0x81, 0x0a, 0xf6, 0x05, 0xed,
  0xf0, 0x97, 0x1b, 0x94, 0x10, 0xec, 0x31, 0xc4, 0x56, 0x00, 0x2e, 0x68,
  0x4e, 0xac, 0xc8, 0x67, 0xc4, 0xc0, 0x00, 0x40, 0x10, 0x0c, 0x9c, 0x99,
  0x29, 0x99, 0x60, 0xc4, 0x00, 0x01, 0x40, 0x10, 0x0c, 0x32, 0x98, 0x11,
  0x97, 0x60, 0x55, 0x64, 0x65, 0xc4, 0xc0, 0x00, 0x40, 0x10, 0x0c, 0xb6,
  0x97, 0x29, 0x97, 0xa0, 0x82, 0x94, 0x81, 0x0a, 0x4a, 0x06, 0xed, 0x40,
  0x99, 0x1b, 0x94, 0x10, 0x6c, 0x05, 0xe8, 0x72, 0xc5, 0x04, 0x7b, 0x17,
  0xb1, 0x15, 0xb0, 0x0b, 0x5a, 0x26, 0x2e, 0xf2, 0x19, 0x31, 0x30, 0x00,
  0x10, 0x04, 0x03, 0xe7, 0x67, 0x62, 0x26, 0x18, 0x31, 0x40, 0x00, 0x10,
  0x04, 0x83, 0x8c, 0x67, 0xdc, 0x25, 0xb8, 0x15, 0x5f, 0x19, 0x31, 0x30,
  0x00, 0x10, 0x04, 0x83, 0x6d, 0x67, 0xe2, 0x25, 0xa8, 0x60, 0x66, 0xa0,
  0x02, 0x9a, 0x41, 0x3b, 0xfa, 0xe5, 0x06, 0x25, 0x04, 0x5b, 0x01, 0xc8,
  0x5c, 0x31, 0xc1, 0x8e, 0x18, 0x24, 0x00, 0x08, 0x82, 0x01, 0xb2, 0x36,
  0x35, 0xc3, 0x33, 0x3c, 0x03, 0x33, 0x78, 0x30, 0x62, 0x90, 0x00, 0x20,
  0x08, 0x06, 0xc8, 0xda, 0xd4, 0x0c, 0xcf, 0xf0, 0x8c, 0xca, 0xdc, 0xc1,
  0x88, 0x41, 0x02, 0x80, 0x20, 0x18, 0x20, 0x6b, 0x53, 0x33, 0x3c, 0xc3,
  0x33, 0x2f, 0x63, 0x07, 0x23, 0x06, 0x09, 0x00, 0x82, 0x60, 0x80, 0xac,
  0x4d, 0xcd, 0xf0, 0x0c, 0xcf, 0xb4, 0xcc, 0x1c, 0x8c, 0x18, 0x24, 0x00,
  0x08, 0x82, 0x81, 0xa2, 0x36, 0x35, 0xd3, 0x33, 0x3c, 0x03, 0x33, 0x01,
  0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x85, 0x85, 0xe8, 0x7b,
  0xb1, 0x28, 0xdd, 0xc2, 0x48, 0xde, 0x44, 0x71, 0xed, 0xb7, 0x32, 0xf4,
  0x17, 0x00, 0x01, 0x00, 0x29, 0xd0, 0x1a, 0x00, 0x78, 0x01, 0xed, 0x59,
  0x5d, 0x6c, 0x23, 0x57, 0x15, 0xbe, 0xf3, 0xeb, 0x19, 0x7b, 0x7c, 0x3d,
  0x1e, 0xdb, 0x3b, 0x3b, 0xb6, 0x33, 0x1e, 0xc7, 0xf1, 0x76, 0xbb, 0x9b,
  0x26, 0x4d, 0x6c, 0xc7, 0x76, 0xe2, 0x24, 0xce, 0x4f, 0xbb, 0xd9, 0x6c,
  0x55, 0x40, 0x62, 0x25, 0x58, 0x36, 0xab, 0x65, 0x55, 0x96, 0xb2, 0x48,
  0x55, 0x5b, 0x55, 0x15, 0x2a, 0x92, 0xeb, 0x2e, 0xe9, 0xb6, 0x94, 0x05,
  0x2d, 0x55, 0x58, 0xd1, 0xaa, 0x8f, 0x15, 0x0f, 0x80, 0x80, 0xd2, 0x07,
  0x78, 0xa0, 0xde, 0x74, 0x41, 0x95, 0x15, 0x41, 0x55, 0x0c, 0x12, 0x20,
  0x7e, 0xd4, 0xbe, 0x01, 0x12, 0x52, 0x55, 0xf5, 0xa1, 0x0f, 0x55, 0xcd,
  0x77, 0xae, 0x37, 0xdd, 0x24, 0x94, 0x3e, 0xf5, 0x81, 0xa2, 0x1c, 0xe9,
  0xdc, 0x73, 0xbf, 0x3b, 0xe7, 0xdc, 0x7b, 0xce, 0x3d, 0xe7, 0x5e, 0xdb,
  0xe3, 0xd7, 0xd2, 0x4c, 0xd0, 0x83, 0x7f, 0xfa, 0xcb, 0xdd, 0x24, 0xa7,
  0xfe, 0x79, 0xcf, 0x77, 0xde, 0x4d, 0x30, 0xa6, 0xa1, 0x2f, 0x81, 0x49,
  0x12, 0x7d, 0x37, 0x4a, 0x2d, 0x63, 0x6f, 0x7b, 0xd4, 0x32, 0xa6, 0x53,
  0x73, 0x83, 0x0e, 0x81, 0x1b, 0x60, 0xa2, 0x26, 0x35, 0x37, 0x88, 0xec,
  0x9f, 0x7d, 0xc6, 0x9b, 0x03, 0xcf, 0xa3, 0xfb, 0x1f, 0x34, 0x0a, 0xfe,
  0x1e, 0x94, 0x9e, 0x26, 0x45, 0x50, 0x92, 0x9a, 0x1b, 0x44, 0xcb, 0x6d,
  0xaf, 0x41, 0x32, 0x06, 0x26, 0x92, 0xa9, 0xd9, 0x43, 0x0e, 0x98, 0xfc,
  0xbc, 0xe1, 0xa2, 0x20, 0x93, 0x1a, 0xd0, 0x43, 0x1b, 0xbf, 0x25, 0xd7,
  0x96, 0xc1, 0xec, 0xe2, 0x33, 0xd3, 0x73, 0x3f, 0x78, 0xc3, 0x9c, 0x3d,
  0xf5, 0xa9, 0x2f, 0xcf, 0x10, 0xbe, 0xb2, 0xb4, 0xf0, 0x81, 0x7e, 0x7d,
  0x5c, 0xe8, 0xc6, 0xb6, 0xed, 0xa2, 0xed, 0x3c, 0x11, 0xbd, 0x1e, 0xa6,
  0xf6, 0xc3, 0x09, 0xa9, 0x16, 0xf4, 0x95, 0x83, 0xd4, 0xde, 0xcc, 0xe5,
  0x26, 0xf8, 0x83, 0xe6, 0x27, 0xea, 0x83, 0x48, 0x7e, 0x10, 0xa9, 0x60,
  0x9d, 0x29, 0x6d, 0x08, 0xa6, 0x4b, 0xb9, 0x36, 0x33, 0x20, 0xe5, 0x5b,
  0xda, 0xcc, 0x86, 0xd4, 0xe6, 0xdb, 0xec, 0x30, 0x3d, 0xf9, 0xff, 0x26,
  0x9f, 0x1a, 0x10, 0xed, 0x85, 0x1c, 0x62, 0x14, 0x3a, 0xdb, 0xb9, 0x61,
  0x34, 0x4e, 0xf4, 0x63, 0x51, 0xcc, 0xed, 0x6b, 0xc4, 0x57, 0x6c, 0xf6,
  0x0e, 0xa1, 0x6d, 0x8c, 0xbd, 0x7f, 0x67, 0x50, 0xff, 0x03, 0xac, 0x10,
  0x16, 0x86, 0x3b, 0xb0, 0x8b, 0x3d, 0x35, 0xd9, 0x19, 0x6d, 0x5c, 0x3e,
  0x13, 0x53, 0x61, 0x0f, 0x23, 0xe0, 0xd3, 0xc0, 0xa7, 0x77, 0xe0, 0x53,
  0xc0, 0xa7, 0x76, 0xe0, 0xb3, 0xc0, 0x67, 0x77, 0xe0, 0x73, 0xc0, 0xe7,
  0xb6, 0xf1, 0xf6, 0xfc, 0x38, 0x6f, 0x58, 0x4f, 0x73, 0x5f, 0xdc, 0xe9,
  0xe3, 0x41, 0xe8, 0x08, 0x1a, 0xe0, 0x38, 0x30, 0xd2, 0x0b, 0xfa, 0x70,
  0x6c, 0xc4, 0xd5, 0x33, 0x84, 0x13, 0x59, 0xf6, 0x0e, 0x4d, 0x07, 0x7c,
  0x7a, 0x0f, 0x3e, 0xb5, 0x07, 0x9f, 0xdd, 0x83, 0xcf, 0xed, 0xc4, 0xd4,
  0x27, 0xde, 0x9e, 0xff, 0xc3, 0xea, 0xf1, 0x7f, 0x85, 0xf6, 0x7d, 0xfc,
  0x68, 0x68, 0xdf, 0xc7, 0x8f, 0x86, 0x3e, 0x0e, 0x3e, 0xee, 0xd3, 0x3e,
  0xed, 0xd3, 0x3e, 0xed, 0xd3, 0x7f, 0xa7, 0x96, 0xfa, 0xf3, 0x4e, 0x2b,
  0xfc, 0x5e, 0xc7, 0x52, 0x5e, 0xe8, 0x44, 0x94, 0x9f, 0x74, 0x4c, 0xe5,
  0x72, 0x27, 0xa4, 0x5c, 0xe9, 0x68, 0xca, 0x4f, 0x3b, 0x6d, 0xe5, 0x71,
  0xf0, 0xb7, 0xc1, 0x5f, 0x07, 0x7f, 0x13, 0xfc, 0x8d, 0x4e, 0x4c, 0x79,
  0xb7, 0xc3, 0xcc, 0xd7, 0x36, 0x59, 0xfc, 0xd7, 0x9b, 0x2c, 0xba, 0xb1,
  0xc9, 0x22, 0x57, 0x37, 0x99, 0xf6, 0x2b, 0x7c, 0xdd, 0x2f, 0x77, 0x99,
  0x54, 0xeb, 0x4a, 0xac, 0xd2, 0x95, 0xa4, 0x7a, 0xf7, 0x51, 0x76, 0xf9,
  0x1a, 0xbe, 0xc6, 0xbf, 0x19, 0x8d, 0x2d, 0x4a, 0x8a, 0x72, 0x11, 0xb6,
  0x5f, 0x03, 0x3f, 0xd1, 0x61, 0xa1, 0xee, 0x26, 0x53, 0x36, 0x37, 0xdb,
  0xca, 0x8b, 0x9d, 0x8d, 0xa1, 0x17, 0x3a, 0x4c, 0x1d, 0xe9, 0x32, 0x6d,
  0x79, 0xa0, 0x1f, 0x83, 0xbe, 0xd6, 0x94, 0x58, 0x69, 0x73, 0xf3, 0x65,
  0xac, 0xdf, 0x87, 0xce, 0x0f, 0x3f, 0x81, 0x6f, 0x6c, 0xfa, 0x4a, 0x57,
  0x52, 0x8b, 0x03, 0x9d, 0x10, 0x74, 0xc2, 0xd0, 0x99, 0x78, 0xf6, 0xba,
  0xa4, 0xdd, 0xd1, 0x95, 0xf4, 0xe3, 0xdd, 0xe6, 0x04, 0xfb, 0x25, 0x6b,
  0xff, 0xfe, 0x8f, 0xf8, 0xcd, 0xe6, 0x9d, 0x1c, 0xc8, 0x34, 0xe9, 0x96,
  0x9d, 0x43, 0xc6, 0xf7, 0x07, 0xd8, 0x9c, 0x1a, 0x39, 0x62, 0x90, 0x4e,
  0x9c, 0xb1, 0x0c, 0xe9, 0x40, 0x66, 0x09, 0xe3, 0xb7, 0xdf, 0x10, 0x61,
  0x48, 0x9f, 0x74, 0x21, 0x9d, 0xca, 0xf0, 0x61, 0x61, 0x07, 0x9d, 0x78,
  0xba, 0x54, 0x36, 0x1e, 0x55, 0x2f, 0x5f, 0xcb, 0x56, 0x6b, 0x86, 0x59,
  0x72, 0x8c, 0x47, 0xa5, 0xcb, 0xd7, 0x9c, 0x99, 0x11, 0xc3, 0x9f, 0x69,
  0x18, 0xb4, 0x46, 0xbc, 0x3a, 0x6c, 0x38, 0x95, 0x29, 0x6e, 0xd6, 0xa7,
  0x79, 0x7c, 0x76, 0x92, 0x67, 0x58, 0xbb, 0x67, 0xce, 0xde, 0xb7, 0x3e,
  0x04, 0x19, 0xaf, 0x3c, 0xbc, 0x9e, 0x29, 0xce, 0xf1, 0xa1, 0x7a, 0x93,
  0x7b, 0xc0, 0x4e, 0xfd, 0xfc, 0x7a, 0x0e, 0x72, 0xa8, 0xd0, 0x5a, 0xf7,
  0x0a, 0xc3, 0x3c, 0x40, 0x3f, 0x33, 0x7b, 0x71, 0xdd, 0x9b, 0x6d, 0xf0,
  0x38, 0xf5, 0x13, 0x77, 0xae, 0x0f, 0x25, 0x1c, 0x4e, 0xb6, 0x43, 0x95,
  0x47, 0xd6, 0xc9, 0x3f, 0xfc, 0x1c, 0xcb, 0x93, 0x7f, 0x90, 0x7e, 0xa6,
  0x52, 0xe6, 0x26, 0x9e, 0x79, 0xc5, 0x43, 0xe2, 0x19, 0xbf, 0x11, 0x0b,
  0xa4, 0x43, 0xfe, 0x42, 0x67, 0x98, 0xd6, 0xf1, 0xea, 0x17, 0xd6, 0x09,
  0x63, 0x3c, 0x4b, 0xbe, 0xfb, 0x4b, 0x88, 0x41, 0x86, 0xdf, 0xd5, 0x11,
  0xe1, 0xff, 0xf0, 0x52, 0xc3, 0xc8, 0x55, 0x16, 0x39, 0xf9, 0x9f, 0xad,
  0x4e, 0x19, 0xb9, 0x62, 0x8d, 0x93, 0x5f, 0xfe, 0xc2, 0x25, 0xd5, 0xc4,
  0xb8, 0x59, 0x74, 0x78, 0x66, 0xa1, 0x66, 0x91, 0x7f, 0xfe, 0xcc, 0x25,
  0x35, 0x8e, 0x75, 0xe3, 0xc5, 0x61, 0x9e, 0xbc, 0x75, 0x91, 0x67, 0x66,
  0x1c, 0x2b, 0x53, 0x1a, 0xb6, 0x28, 0xce, 0xc4, 0x2d, 0xd0, 0x4f, 0x2c,
  0xf2, 0x60, 0x61, 0x84, 0x67, 0xeb, 0x8b, 0x56, 0xbc, 0xb0, 0x68, 0x3d,
  0x18, 0xbb, 0x7c, 0xcd, 0x66, 0x17, 0x7b, 0xf6, 0x3f, 0x7e, 0xa3, 0xe4,
  0xe6, 0x47, 0x2c, 0xf2, 0xc7, 0x2f, 0x5d, 0x50, 0xf3, 0x6b, 0x8b, 0x2d,
  0xaf, 0x34, 0x62, 0xd9, 0xf9, 0x69, 0x1e, 0xc3, 0xf3, 0x18, 0x9e, 0xc7,
  0x72, 0xd3, 0x96, 0xb3, 0x36, 0xd2, 0x7a, 0x6b, 0x7a, 0xda, 0x18, 0xfa,
  0xe2, 0x74, 0x2b, 0x5f, 0x2f, 0xf3, 0x5c, 0xae, 0xc6, 0x99, 0xf1, 0x99,
  0x6e, 0x16, 0x3e, 0x49, 0xc6, 0x67, 0xbb, 0x69, 0xd8, 0xdb, 0x95, 0x07,
  0xd5, 0x03, 0x90, 0x43, 0xb7, 0x5d, 0x50, 0x83, 0x5c, 0x99, 0x33, 0xf3,
  0x74, 0x37, 0x8f, 0x7d, 0x4a, 0x17, 0xcb, 0x5c, 0x32, 0xd7, 0xba, 0xb4,
  0x27, 0x76, 0xe2, 0x82, 0x3a, 0x34, 0xee, 0x58, 0x2e, 0xe3, 0x3d, 0xaa,
  0xeb, 0xd4, 0xd1, 0x29, 0xf4, 0xad, 0x9e, 0x84, 0xf2, 0x21, 0x29, 0xe3,
  0xb7, 0x4f, 0x66, 0x6d, 0xaa, 0xe5, 0xae, 0x8d, 0xb5, 0xbc, 0x9c, 0xcf,
  0x59, 0xf8, 0x6c, 0x37, 0x56, 0xf4, 0x79, 0x1e, 0x79, 0x48, 0x56, 0x47,
  0xb8, 0x5d, 0xf0, 0x2d, 0x33, 0x11, 0xf0, 0x44, 0x75, 0x98, 0x4b, 0xe1,
  0xcf, 0x8b, 0x75, 0x5d, 0x65, 0x65, 0x39, 0x55, 0x3d, 0xc4, 0x87, 0x26,
  0x7c, 0xeb, 0xc0, 0x6d, 0x81, 0x88, 0xc5, 0x95, 0x96, 0x97, 0xd3, 0x95,
  0x1a, 0x8f, 0xe5, 0x02, 0xb1, 0x07, 0xae, 0x76, 0xd7, 0xb2, 0x57, 0xaa,
  0x59, 0xf6, 0x5a, 0xd0, 0xca, 0x54, 0x6b, 0x56, 0x76, 0xad, 0xd6, 0xca,
  0xc1, 0x07, 0x57, 0x61, 0x4d, 0x3b, 0x71, 0x84, 0xdb, 0xb7, 0x1d, 0xe6,
  0x3e, 0x61, 0x89, 0x35, 0xd3, 0x88, 0xcf, 0xc6, 0xda, 0xa9, 0xf9, 0x80,
  0xa7, 0x8a, 0xa3, 0x3c, 0x57, 0x41, 0x5d, 0xd4, 0x27, 0x39, 0xf9, 0xec,
  0x6a, 0xac, 0x99, 0x9c, 0x0d, 0x2c, 0x8a, 0x25, 0x59, 0x38, 0xa5, 0xfa,
  0xa5, 0xa6, 0x95, 0xa9, 0x4f, 0xf1, 0xd8, 0x78, 0x60, 0xa1, 0x50, 0x7b,
  0x6e, 0xf5, 0xa2, 0x9a, 0xaa, 0x8c, 0xf1, 0xd8, 0x2d, 0x8e, 0x95, 0x36,
  0x8c, 0xde, 0x5b, 0x81, 0xcc, 0x92, 0xa5, 0x31, 0x2b, 0x5d, 0x99, 0xe4,
  0x26, 0x61, 0x47, 0x66, 0xae, 0x61, 0xf5, 0x32, 0x39, 0x99, 0x05, 0x46,
  0xd0, 0xcb, 0xd6, 0x65, 0xe6, 0x95, 0xf0, 0x2c, 0x31, 0xc5, 0x3d, 0xe8,
  0x64, 0xaa, 0x65, 0xe4, 0x69, 0x91, 0xdf, 0x8f, 0xfc, 0x44, 0xdc, 0x39,
  0xdd, 0xc7, 0x9c, 0xf9, 0xf9, 0x57, 0x94, 0x34, 0xf6, 0x31, 0x4b, 0xf6,
  0x35, 0x99, 0x45, 0x5c, 0xe8, 0x62, 0xdc, 0x9b, 0xdd, 0x52, 0x28, 0x7e,
  0x13, 0x32, 0x5b, 0x6f, 0x08, 0x7b, 0x7f, 0xb6, 0x8c, 0x39, 0x1a, 0xa2,
  0xbe, 0x33, 0xd5, 0x57, 0x15, 0x77, 0x7c, 0x0c, 0x7e, 0x93, 0x5f, 0x5b,
  0xa2, 0xdf, 0x1f, 0x1b, 0xe3, 0x7f, 0x8e, 0x1d, 0x6f, 0x42, 0x06, 0x2f,
  0x55, 0x2f, 0x55, 0x28, 0x56, 0xf2, 0x3b, 0x58, 0xd8, 0x2a, 0xf4, 0x1b,
  0x4d, 0x94, 0x62, 0x7b, 0x4e, 0xe0, 0xfa, 0x25, 0xd5, 0x3d, 0x39, 0xd6,
  0xca, 0x9e, 0xac, 0xb5, 0xfa, 0xe1, 0xdb, 0xf5, 0xf0, 0x1f, 0x0a, 0x2f,
  0xf5, 0x71, 0x37, 0x40, 0xce, 0xfa, 0x98, 0xe7, 0x20, 0x74, 0xac, 0x09,
  0xce, 0x34, 0xe4, 0x4c, 0xf3, 0xe4, 0xe6, 0xc1, 0xd4, 0xb4, 0x18, 0x3b,
  0x98, 0xda, 0x2a, 0x64, 0xf1, 0x5c, 0x4b, 0xd5, 0x78, 0x1e, 0x38, 0x3d,
  0xf1, 0xb0, 0xea, 0xd5, 0xc3, 0xdc, 0x5d, 0x0a, 0x5b, 0x84, 0xad, 0x68,
  0x7a, 0xa4, 0x6f, 0x59, 0x62, 0x3e, 0x5d, 0x60, 0xce, 0xf2, 0xa9, 0x45,
  0xae, 0xa7, 0x96, 0x39, 0x61, 0x1d, 0xf6, 0x05, 0xc8, 0x74, 0xf4, 0x29,
  0xd5, 0x5b, 0x5a, 0xe1, 0xd4, 0x77, 0x8f, 0x3d, 0xad, 0x8e, 0x40, 0x5a,
  0x31, 0x7f, 0xa4, 0xcf, 0xb9, 0xb0, 0x0d, 0x09, 0xcc, 0xd9, 0x48, 0x6a,
  0x85, 0x87, 0x52, 0x07, 0x39, 0xe1, 0x10, 0x6c, 0xc3, 0x90, 0xe9, 0xd8,
  0xa4, 0xea, 0x1d, 0x9f, 0xe4, 0xd4, 0x77, 0x53, 0xe7, 0x55, 0xca, 0x9b,
  0x8a, 0x1f, 0x90, 0x54, 0x5f, 0x5a, 0x78, 0x20, 0x75, 0x0b, 0x12, 0x35,
  0x66, 0x23, 0x07, 0x76, 0x1e, 0x39, 0xa0, 0xdc, 0x9a, 0xac, 0xe9, 0x69,
  0xac, 0x25, 0xfa, 0x11, 0xea, 0xcb, 0x83, 0x7e, 0x14, 0x35, 0x41, 0x73,
  0x45, 0x56, 0x96, 0x3d, 0x4d, 0xc5, 0x18, 0xfa, 0x26, 0xd5, 0xd7, 0xea,
  0x60, 0x6f, 0xa3, 0x54, 0x5b, 0xab, 0x96, 0x3b, 0xbe, 0x6a, 0x15, 0xd7,
  0x56, 0x5b, 0xe9, 0x13, 0x65, 0xee, 0x9d, 0x40, 0xbd, 0x9c, 0x18, 0xe3,
  0x52, 0x79, 0x95, 0xb3, 0xc9, 0x55, 0x2b, 0x85, 0xb3, 0x49, 0x76, 0x49,
  0x9c, 0x31, 0x9a, 0x4b, 0x1e, 0xbb, 0xaa, 0xba, 0x46, 0xbb, 0x17, 0x1b,
  0x3f, 0xaf, 0x7a, 0xf0, 0x21, 0x5d, 0xa1, 0x3a, 0x58, 0x1d, 0xe4, 0xb5,
  0xb4, 0x55, 0xa0, 0x5c, 0x51, 0x3f, 0x28, 0x5d, 0x55, 0xa5, 0x23, 0xcd,
  0xf7, 0x73, 0xc8, 0x0e, 0x37, 0xb1, 0xce, 0xcd, 0x3c, 0xca, 0x7e, 0xd3,
  0xda, 0xce, 0x25, 0xdd, 0x0d, 0x45, 0xd4, 0x4a, 0x91, 0xea, 0xa4, 0x29,
  0xb3, 0xe2, 0x89, 0x29, 0x4e, 0x39, 0xcc, 0x54, 0xa7, 0xb8, 0xa8, 0xc5,
  0x32, 0xd6, 0x38, 0x39, 0xd9, 0xca, 0x9c, 0x58, 0xe5, 0x69, 0xdc, 0x85,
  0x45, 0xa1, 0xbf, 0xa5, 0x90, 0x9d, 0x09, 0x49, 0x7a, 0x94, 0xdb, 0xe2,
  0xfc, 0x1c, 0xa7, 0x3b, 0xec, 0x93, 0x13, 0x9b, 0xd7, 0x3d, 0x60, 0xf2,
  0x83, 0xf2, 0x98, 0x43, 0x9d, 0x53, 0xdf, 0x2d, 0xdd, 0xa7, 0x52, 0x7d,
  0x51, 0x8e, 0x72, 0x4b, 0x83, 0x5a, 0x73, 0xab, 0x8f, 0xa8, 0xb9, 0xe3,
  0x0d, 0x4e, 0xb1, 0xd1, 0xfe, 0x0b, 0x7f, 0x2b, 0x8f, 0xa8, 0x69, 0xc4,
  0x16, 0x2c, 0xc8, 0xcc, 0x0a, 0x1a, 0xdc, 0x8f, 0x84, 0xc5, 0x5d, 0xc6,
  0xca, 0x4d, 0xac, 0xcd, 0x7b, 0x86, 0xcd, 0x58, 0x50, 0x0a, 0x8b, 0xf3,
  0x6a, 0x3a, 0x1b, 0xaa, 0x87, 0xbc, 0x84, 0x93, 0xf8, 0x70, 0x58, 0x9b,
  0x6c, 0x45, 0x83, 0x39, 0xce, 0x83, 0x80, 0xe7, 0x8e, 0xcd, 0x61, 0x0f,
  0x1b, 0xdc, 0x4e, 0x25, 0xb9, 0x5c, 0x0e, 0xc4, 0xfc, 0x5e, 0x62, 0x65,
  0x99, 0xd6, 0xf4, 0xab, 0x2d, 0xd5, 0x1e, 0x4f, 0x5a, 0x74, 0x46, 0xbc,
  0x38, 0xe5, 0x23, 0xc0, 0x5d, 0xcd, 0xd1, 0x67, 0xcd, 0x02, 0xc9, 0x04,
  0x6b, 0xd2, 0x3a, 0x5e, 0x0a, 0xb9, 0x24, 0x9d, 0xd4, 0x5d, 0xcb, 0x3e,
  0xce, 0xae, 0x57, 0x0a, 0xc4, 0x3d, 0x50, 0x44, 0x7e, 0xd3, 0xf9, 0x32,
  0xf7, 0xf3, 0x88, 0x31, 0x1f, 0xf0, 0x02, 0xce, 0x4f, 0x30, 0x3e, 0x29,
  0x72, 0x15, 0x71, 0x1b, 0x62, 0xcf, 0x93, 0xe3, 0x17, 0x54, 0x29, 0x98,
  0xb4, 0x6c, 0xca, 0x55, 0xfe, 0x0c, 0x72, 0x16, 0x20, 0x3f, 0x32, 0xf3,
  0xf1, 0x59, 0xe0, 0x8e, 0x97, 0x07, 0x79, 0x19, 0xa7, 0xb3, 0xd3, 0x10,
  0x67, 0x87, 0xb0, 0x0f, 0x1b, 0xd8, 0xeb, 0x62, 0x2f, 0x66, 0x5f, 0x51,
  0x0a, 0x47, 0x1b, 0x3c, 0xb9, 0xd0, 0xb0, 0x24, 0xbf, 0x61, 0xe5, 0x28,
  0x0f, 0x0d, 0x99, 0xe5, 0xe6, 0x9b, 0x38, 0xe7, 0x60, 0xec, 0x35, 0xed,
  0x7f, 0xae, 0xb2, 0xa5, 0xd0, 0x9d, 0x62, 0x42, 0x46, 0x5c, 0xdc, 0x3f,
  0xf0, 0x47, 0xd8, 0x57, 0x5e, 0x55, 0x6c, 0x48, 0x1b, 0xe3, 0x34, 0xd6,
  0xc7, 0x9e, 0x88, 0xf3, 0x1b, 0x04, 0x22, 0xe7, 0xf6, 0xc9, 0xa0, 0x45,
  0xfa, 0x69, 0xf8, 0xec, 0xd1, 0xdc, 0x93, 0xb8, 0x5f, 0x90, 0xf3, 0x34,
  0x74, 0xbd, 0xd2, 0x60, 0x3c, 0x8d, 0xfb, 0x25, 0x87, 0xfb, 0xc3, 0xc5,
  0x18, 0x9d, 0x51, 0x0f, 0xb9, 0x34, 0xeb, 0x63, 0xdc, 0x9e, 0x18, 0xb3,
  0xcc, 0xa5, 0xdb, 0xc5, 0xd9, 0xf1, 0x90, 0x33, 0xf3, 0xb8, 0x23, 0xce,
  0xa0, 0x87, 0xbc, 0xd2, 0x98, 0x1d, 0x3b, 0xa4, 0x9a, 0x88, 0xd7, 0x9f,
  0x95, 0x19, 0x8d, 0xdb, 0xd1, 0x73, 0xaa, 0xea, 0x04, 0x5c, 0xf8, 0x33,
  0x7e, 0x40, 0xd5, 0x1c, 0x9c, 0x6b, 0xf4, 0xb5, 0xe8, 0x7d, 0xaa, 0x8e,
  0x3e, 0xcd, 0xad, 0xc5, 0x8e, 0xa8, 0x1a, 0xfb, 0x56, 0x2f, 0x79, 0x74,
  0x4e, 0xd5, 0xa5, 0x4f, 0xff, 0x4e, 0x93, 0xe8, 0x9d, 0xed, 0x53, 0x02,
  0x87, 0xd8, 0x65, 0x21, 0x59, 0xf4, 0x9e, 0xae, 0x16, 0x0d, 0x2f, 0x32,
  0xb6, 0x39, 0x1f, 0x8a, 0x5a, 0x42, 0xb2, 0x58, 0xb6, 0xcb, 0xac, 0x7b,
  0xbb, 0x8c, 0xb3, 0xae, 0x14, 0x1b, 0xea, 0x4a, 0xd1, 0x2f, 0x74, 0x25,
  0xeb, 0x4b, 0x5d, 0x89, 0x4b, 0xdd, 0xd0, 0x49, 0xb9, 0x15, 0x62, 0x4f,
  0x0a, 0xdb, 0xbe, 0xec, 0xb4, 0x48, 0xbf, 0x55, 0x7b, 0xef, 0x09, 0x76,
  0xac, 0xfd, 0xa6, 0xa6, 0xdd, 0x2b, 0x7d, 0x6e, 0x42, 0xbe, 0x7e, 0x66,
  0xa2, 0x7d, 0x5d, 0xc5, 0xfa, 0x4c, 0x71, 0xd6, 0x91, 0x87, 0x5e, 0xfc,
  0xd6, 0x53, 0xcf, 0x33, 0xd4, 0x53, 0x22, 0x27, 0xaf, 0xd0, 0x5d, 0x4a,
  0xfe, 0xeb, 0x4b, 0x67, 0x54, 0xaa, 0x3f, 0xd5, 0x1e, 0xe3, 0xf8, 0x92,
  0xd1, 0x63, 0xb7, 0xde, 0xf9, 0x3c, 0x7d, 0x9e, 0xb3, 0xa3, 0xab, 0xd0,
  0x85, 0xcc, 0xdd, 0xfd, 0x7c, 0x0c, 0x52, 0xab, 0x2f, 0xaa, 0x9e, 0x12,
  0xe6, 0x69, 0x45, 0xe6, 0x1a, 0xe1, 0x37, 0x5e, 0x2e, 0x48, 0x90, 0xd2,
  0x1b, 0x2f, 0x2b, 0x0a, 0xa4, 0x1c, 0xe6, 0xeb, 0x34, 0x2e, 0xc9, 0xe1,
  0x75, 0x09, 0xb1, 0x1a, 0x05, 0x7c, 0x6a, 0x85, 0xd5, 0x96, 0x84, 0x78,
  0x25, 0xc4, 0x1b, 0x86, 0xaf, 0x34, 0xf6, 0x5c, 0xe4, 0xb1, 0x8e, 0xec,
  0x1e, 0xe0, 0x32, 0xe2, 0x17, 0x3a, 0x88, 0x9f, 0xa4, 0xac, 0xd8, 0x83,
  0x98, 0x15, 0x67, 0x8e, 0x1d, 0xbb, 0xf2, 0xa6, 0xc1, 0xce, 0x4b, 0xa6,
  0xc4, 0x7b, 0x98, 0x9c, 0xf5, 0x65, 0xbb, 0xc5, 0x5e, 0xef, 0xcf, 0x98,
  0xec, 0x47, 0x3d, 0x53, 0xca, 0xab, 0x66, 0xca, 0x69, 0x5d, 0xd5, 0xf5,
  0xd1, 0xbe, 0xae, 0x4f, 0xd1, 0x4b, 0xf1, 0x5f, 0x44, 0xda, 0x9d, 0x27,
  0x1d, 0x67, 0x75, 0xdd, 0x71, 0x46, 0xcd, 0x90, 0x53, 0x53, 0x60, 0xa7,
  0xc1, 0x4e, 0x81, 0xbe, 0x02, 0x7d, 0x25, 0xa5, 0xb7, 0xae, 0x86, 0xc3,
  0xa3, 0xfd, 0x70, 0x58, 0xe8, 0x53, 0x1e, 0x43, 0xc7, 0xcf, 0xa9, 0x4f,
  0xea, 0xfa, 0xea, 0x3a, 0xe6, 0x51, 0x22, 0x49, 0x61, 0xa3, 0xc2, 0xcf,
  0x9d, 0x36, 0x1b, 0x86, 0x31, 0xda, 0x37, 0x8c, 0x29, 0x86, 0x7b, 0xf2,
  0x29, 0xc7, 0x29, 0x5f, 0x84, 0x3e, 0x78, 0x54, 0x31, 0xed, 0x9a, 0xf8,
  0x2e, 0xa7, 0x2c, 0x4b, 0x1b, 0xb6, 0x5d, 0x0e, 0x27, 0x9c, 0x9a, 0x19,
  0xb7, 0x6b, 0x0f, 0x60, 0x4f, 0xc5, 0x9e, 0xdc, 0x91, 0x46, 0x5c, 0xd8,
  0xbb, 0x99, 0x39, 0x55, 0x86, 0x94, 0x3d, 0x5f, 0xa5, 0xfd, 0x96, 0x4c,
  0x43, 0x97, 0x23, 0x61, 0x9d, 0x85, 0x2c, 0x5d, 0xdf, 0xf3, 0xee, 0xd2,
  0xd8, 0xf3, 0x9e, 0x90, 0xb1, 0xc7, 0xae, 0x89, 0xbf, 0x27, 0x24, 0x04,
  0xc2, 0xd8, 0xed, 0xd4, 0x10, 0xa5, 0xa1, 0x2b, 0x49, 0x98, 0x7e, 0xe7,
  0x18, 0x0c, 0x64, 0x49, 0xfc, 0x5b, 0x71, 0x73, 0x8c, 0xe2, 0x97, 0xc4,
  0x5b, 0xd4, 0x9b, 0x63, 0x30, 0x53, 0xa5, 0x10, 0x75, 0x6f, 0x8e, 0xc1,
  0x4c, 0x93, 0x10, 0xe0, 0xce, 0x31, 0xb0, 0x2e, 0xe1, 0x9b, 0xe7, 0xce,
  0x31, 0xac, 0x1b, 0x92, 0xc4, 0x4b, 0xf5, 0x5d, 0x7a, 0x86, 0x1c, 0xa1,
  0x77, 0xbc, 0xef, 0xff, 0xf5, 0x41, 0x7a, 0xa6, 0x1c, 0xdd, 0x35, 0x26,
  0xc8, 0xd8, 0x1d, 0x07, 0xc5, 0x2c, 0x19, 0xbb, 0xe3, 0xa0, 0xdc, 0xc8,
  0xc6, 0xee, 0x38, 0x90, 0x10, 0xa6, 0x18, 0xbb, 0xe3, 0xa0, 0x97, 0xc8,
  0xaa, 0xb1, 0x3b, 0x0e, 0x1c, 0x28, 0xa6, 0x19, 0xbb, 0xe3, 0xc0, 0x12,
  0x4c, 0x57, 0x77, 0xc7, 0x41, 0xb5, 0x18, 0x52, 0x77, 0xc7, 0x81, 0x65,
  0x99, 0xa1, 0x46, 0xd0, 0xee, 0xf1, 0x19, 0x64, 0x51, 0x90, 0xa0, 0xe7,
  0xc0, 0x34, 0x93, 0xce, 0xf2, 0xac, 0x0c, 0x29, 0x61, 0x41, 0xe1, 0x29,
  0xa8, 0x06, 0x26, 0x2c, 0xa2, 0x01, 0xd1, 0x7f, 0x08, 0x92, 0x82, 0xab,
  0xef, 0x06, 0xd1, 0xa4, 0x84, 0xc9, 0x1f, 0x22, 0xfa, 0x43, 0x46, 0xc2,
  0xaa, 0xdb, 0xf8, 0x7e, 0x30, 0x61, 0xb1, 0x43, 0xa0, 0x87, 0xc0, 0x84,
  0xb7, 0x69, 0x03, 0x4c, 0x78, 0x7b, 0x44, 0x85, 0x17, 0x44, 0x8f, 0x3f,
  0xfe, 0xf7, 0xaf, 0xbe, 0x70, 0xf8, 0xaf, 0xd7, 0x57, 0xfe, 0xb6, 0xfc,
  0xc0, 0xbf, 0x7e, 0x36, 0xf9, 0xf6, 0xbf, 0x01, 0x2b, 0xd8, 0x15, 0xad,
  0x02, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x03, 0x00, 0x03, 0x00,
  0x08, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x04, 0x02, 0x08, 0x02, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x05, 0x04, 0x08, 0x02, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x06, 0x06,
  0x08, 0x02, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x07, 0x08, 0x08, 0x02, 0x00, 0x00,
  0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x08, 0x0a, 0x08, 0x02, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x01, 0x09, 0x0c,
  0x04, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x03, 0x01, 0x0a, 0x0e, 0x04, 0x02, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x02, 0x0b, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x02, 0x0d, 0x13,
  0x00, 0x04, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x01, 0x00,
  0x78, 0x01, 0x4d, 0x8c, 0xbb, 0x09, 0x42, 0x51, 0x10, 0x05, 0xd7, 0x1f,
  0x88, 0x15, 0x18, 0x68, 0x66, 0x11, 0x86, 0x16, 0x61, 0xf8, 0x8a, 0x30,
  0x34, 0xb4, 0x04, 0x43, 0x8b, 0x30, 0xb4, 0x08, 0x43, 0x8b, 0x30, 0xb4,
  0x07, 0x9d, 0xc1, 0x3d, 0xf0, 0x06, 0xce, 0xe7, 0xde, 0x03, 0x3b, 0xa9,
  0xaa, 0x15, 0x5a, 0x23, 0xb9, 0xf0, 0xb1, 0xb5, 0x34, 0x57, 0xad, 0xb9,
  0x6b, 0xcd, 0x53, 0x6b, 0xde, 0x5a, 0xf0, 0x60, 0xb3, 0x19, 0xf5, 0xfd,
  0xa8, 0x1f, 0xe9, 0x53, 0x0b, 0x9c, 0xba, 0x13, 0x75, 0xc6, 0xcc, 0x1b,
  0x12, 0x7b, 0xf8, 0x82, 0xef, 0x07, 0x12, 0xbb, 0x92, 0x6c, 0x2f, 0x24,
  0xf6, 0xdc, 0xcf, 0xf6, 0x41, 0x62, 0x9f, 0x21, 0xc9, 0xb6, 0xd4, 0xc0,
  0x98, 0x23, 0xc9, 0xb6, 0xd3, 0xc0, 0x58, 0x20, 0xc9, 0x76, 0xc0, 0xbc,
  0x65, 0x0f, 0xd9, 0x06, 0x2c, 0x9b, 0x12, 0x37, 0x53, 0xfe, 0x7f, 0x55,
  0x3f, 0x81, 0x42, 0x29, 0x20, 0x00, 0x00, 0x00, 0x78, 0x62, 0x6f, 0x70,
  0x01, 0x00, 0x00, 0x00, 0x7e, 0x02, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x30, 0x00, 0x00, 0x00
};
