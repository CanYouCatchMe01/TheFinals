#if 0
;
; Input signature:
;
; Name                 Index   Mask Register SysValue  Format   Used
; -------------------- ----- ------ -------- -------- ------- ------
; TEXCOORD                 0   xy          0     NONE   float   xy  
; TEXCOORD                 1   xyzw        1     NONE   float   xyz 
; TEXCOORD                 2   xyz         2     NONE   float   xyz 
; COLOR                    0   xyzw        3     NONE   float       
;
;
; Output signature:
;
; Name                 Index   Mask Register SysValue  Format   Used
; -------------------- ----- ------ -------- -------- ------- ------
; SV_Target                0   xyzw        0   TARGET   float   xyzw
;
; shader debug name: C:\Users\marcu\Downloads\DirectXTK12-main\DirectXTK12-main\Src/Shaders/Compiled\XboxGamingXboxOnePBREffect_PSTexturedEmissive.pdb
; shader hash: 82820d8236a8387ba631238d2064acee
;
; Pipeline Runtime Information: 
;
;PSVRuntimeInfo:
; Pixel Shader
; DepthOutput=0
; SampleFrequency=0
; MinimumExpectedWaveLaneCount: 0
; MaximumExpectedWaveLaneCount: 4294967295
; UsesViewID: false
; SigInputElements: 4
; SigOutputElements: 1
; SigPatchConstOrPrimElements: 0
; SigInputVectors: 4
; SigOutputVectors[0]: 1
; SigOutputVectors[1]: 0
; SigOutputVectors[2]: 0
; SigOutputVectors[3]: 0
; EntryFunctionName: PSTexturedEmissive
;
;
; Input signature:
;
; Name                 Index             InterpMode DynIdx
; -------------------- ----- ---------------------- ------
; TEXCOORD                 0                 linear       
; TEXCOORD                 1                 linear       
; TEXCOORD                 2                 linear       
; COLOR                    0                 linear       
;
; Output signature:
;
; Name                 Index             InterpMode DynIdx
; -------------------- ----- ---------------------- ------
; SV_Target                0                              
;
; Buffer Definitions:
;
; cbuffer 
; {
;
;   [388 x i8] (type annotation not present)
;
; }
;
;
; Resource Bindings:
;
; Name                                 Type  Format         Dim      ID      HLSL Bind  Count
; ------------------------------ ---------- ------- ----------- ------- -------------- ------
;                                   cbuffer      NA          NA     CB0            cb0     1
;                                   sampler      NA          NA      S0             s0     1
;                                   sampler      NA          NA      S1             s1     1
;                                   texture     f32          2d      T0             t0     1
;                                   texture     f32          2d      T1             t1     1
;                                   texture     f32          2d      T2             t2     1
;                                   texture     f32          2d      T3             t3     1
;                                   texture     f32        cube      T4             t4     1
;                                   texture     f32        cube      T5             t5     1
;
;
; ViewId state:
;
; Number of inputs: 16, outputs: 4
; Outputs dependent on ViewId: {  }
; Inputs contributing to computation of Outputs:
;   output 0 depends on inputs: { 0, 1, 4, 5, 6, 8, 9, 10 }
;   output 1 depends on inputs: { 0, 1, 4, 5, 6, 8, 9, 10 }
;   output 2 depends on inputs: { 0, 1, 4, 5, 6, 8, 9, 10 }
;   output 3 depends on inputs: { 0, 1 }
;
target datalayout = "e-m:e-p:32:32-i1:32-i8:32-i16:32-i32:32-i64:64-f16:32-f32:32-f64:64-n8:16:32:64"
target triple = "dxil-ms-xb1"

%dx.types.Handle = type { i8* }
%dx.types.CBufRet.f32 = type { float, float, float, float }
%dx.types.ResRet.f32 = type { float, float, float, float, i32 }
%dx.types.CBufRet.i32 = type { i32, i32, i32, i32 }
%"class.Texture2D<vector<float, 4> >" = type { <4 x float>, %"class.Texture2D<vector<float, 4> >::mips_type" }
%"class.Texture2D<vector<float, 4> >::mips_type" = type { i32 }
%"class.Texture2D<vector<float, 3> >" = type { <3 x float>, %"class.Texture2D<vector<float, 3> >::mips_type" }
%"class.Texture2D<vector<float, 3> >::mips_type" = type { i32 }
%"class.TextureCube<vector<float, 3> >" = type { <3 x float> }
%hostlayout.Constants = type { <3 x float>, [4 x <4 x float>], [3 x <3 x float>], [4 x <4 x float>], [4 x <4 x float>], [3 x <3 x float>], [3 x <3 x float>], <3 x float>, float, float, float, i32, float, float }
%struct.SamplerState = type { i32 }

define void @PSTexturedEmissive() {
  %1 = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 0, i32 5, i32 5, i1 false)  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %2 = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 0, i32 4, i32 4, i1 false)  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %3 = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 0, i32 3, i32 3, i1 false)  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %4 = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 0, i32 2, i32 2, i1 false)  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %5 = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 0, i32 1, i32 1, i1 false)  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %6 = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 0, i32 0, i32 0, i1 false)  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %7 = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 3, i32 1, i32 1, i1 false)  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %8 = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 3, i32 0, i32 0, i1 false)  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %9 = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 2, i32 0, i32 0, i1 false)  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %10 = call float @dx.op.loadInput.f32(i32 4, i32 2, i32 0, i8 0, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %11 = call float @dx.op.loadInput.f32(i32 4, i32 2, i32 0, i8 1, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %12 = call float @dx.op.loadInput.f32(i32 4, i32 2, i32 0, i8 2, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %13 = call float @dx.op.loadInput.f32(i32 4, i32 1, i32 0, i8 0, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %14 = call float @dx.op.loadInput.f32(i32 4, i32 1, i32 0, i8 1, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %15 = call float @dx.op.loadInput.f32(i32 4, i32 1, i32 0, i8 2, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %16 = call float @dx.op.loadInput.f32(i32 4, i32 0, i32 0, i8 0, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %17 = call float @dx.op.loadInput.f32(i32 4, i32 0, i32 0, i8 1, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %18 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %9, i32 0)  ; CBufferLoadLegacy(handle,regIndex)
  %19 = extractvalue %dx.types.CBufRet.f32 %18, 0
  %20 = extractvalue %dx.types.CBufRet.f32 %18, 1
  %21 = extractvalue %dx.types.CBufRet.f32 %18, 2
  %22 = fsub fast float %19, %13
  %23 = fsub fast float %20, %14
  %24 = fsub fast float %21, %15
  %25 = call float @dx.op.dot3.f32(i32 55, float %22, float %23, float %24, float %22, float %23, float %24)  ; Dot3(ax,ay,az,bx,by,bz)
  %26 = call float @dx.op.unary.f32(i32 25, float %25)  ; Rsqrt(value)
  %27 = fmul fast float %22, %26
  %28 = fmul fast float %23, %26
  %29 = fmul fast float %24, %26
  %30 = call %dx.types.ResRet.f32 @dx.op.sample.f32(i32 60, %dx.types.Handle %5, %dx.types.Handle %8, float %16, float %17, float undef, float undef, i32 0, i32 0, i32 undef, float undef)  ; Sample(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,clamp)
  %31 = extractvalue %dx.types.ResRet.f32 %30, 0
  %32 = extractvalue %dx.types.ResRet.f32 %30, 1
  %33 = fmul fast float %31, 2.000000e+00
  %34 = fmul fast float %32, 2.000000e+00
  %35 = fadd fast float %33, -1.000000e+00
  %36 = fadd fast float %34, -1.000000e+00
  %37 = call float @dx.op.dot2.f32(i32 54, float %35, float %36, float %35, float %36)  ; Dot2(ax,ay,bx,by)
  %38 = fsub fast float 1.000000e+00, %37
  %39 = call float @dx.op.unary.f32(i32 24, float %38)  ; Sqrt(value)
  %40 = call float @dx.op.unary.f32(i32 83, float %13)  ; DerivCoarseX(value)
  %41 = call float @dx.op.unary.f32(i32 83, float %14)  ; DerivCoarseX(value)
  %42 = call float @dx.op.unary.f32(i32 83, float %15)  ; DerivCoarseX(value)
  %43 = call float @dx.op.unary.f32(i32 84, float %13)  ; DerivCoarseY(value)
  %44 = call float @dx.op.unary.f32(i32 84, float %14)  ; DerivCoarseY(value)
  %45 = call float @dx.op.unary.f32(i32 84, float %15)  ; DerivCoarseY(value)
  %46 = call float @dx.op.unary.f32(i32 83, float %16)  ; DerivCoarseX(value)
  %47 = call float @dx.op.unary.f32(i32 83, float %17)  ; DerivCoarseX(value)
  %48 = call float @dx.op.unary.f32(i32 84, float %16)  ; DerivCoarseY(value)
  %49 = call float @dx.op.unary.f32(i32 84, float %17)  ; DerivCoarseY(value)
  %50 = fmul fast float %45, %41
  %51 = fmul fast float %44, %42
  %52 = fsub fast float %50, %51
  %53 = fmul fast float %43, %42
  %54 = fmul fast float %45, %40
  %55 = fsub fast float %53, %54
  %56 = fmul fast float %44, %40
  %57 = fmul fast float %43, %41
  %58 = fsub fast float %56, %57
  %59 = fmul fast float %58, %44
  %60 = fmul fast float %55, %45
  %61 = fsub fast float %59, %60
  %62 = fmul fast float %52, %45
  %63 = fmul fast float %58, %43
  %64 = fsub fast float %62, %63
  %65 = fmul fast float %55, %43
  %66 = fmul fast float %52, %44
  %67 = fsub fast float %65, %66
  %68 = fmul fast float %55, %42
  %69 = fmul fast float %58, %41
  %70 = fsub fast float %68, %69
  %71 = fmul fast float %58, %40
  %72 = fmul fast float %52, %42
  %73 = fsub fast float %71, %72
  %74 = fmul fast float %52, %41
  %75 = fmul fast float %55, %40
  %76 = fsub fast float %74, %75
  %77 = fmul fast float %61, %46
  %78 = call float @dx.op.tertiary.f32(i32 46, float %48, float %70, float %77)  ; FMad(a,b,c)
  %79 = fmul fast float %64, %46
  %80 = call float @dx.op.tertiary.f32(i32 46, float %48, float %73, float %79)  ; FMad(a,b,c)
  %81 = fmul fast float %67, %46
  %82 = call float @dx.op.tertiary.f32(i32 46, float %48, float %76, float %81)  ; FMad(a,b,c)
  %83 = call float @dx.op.dot3.f32(i32 55, float %78, float %80, float %82, float %78, float %80, float %82)  ; Dot3(ax,ay,az,bx,by,bz)
  %84 = call float @dx.op.unary.f32(i32 25, float %83)  ; Rsqrt(value)
  %85 = fmul fast float %61, %47
  %86 = call float @dx.op.tertiary.f32(i32 46, float %49, float %70, float %85)  ; FMad(a,b,c)
  %87 = fmul fast float %64, %47
  %88 = call float @dx.op.tertiary.f32(i32 46, float %49, float %73, float %87)  ; FMad(a,b,c)
  %89 = fmul fast float %67, %47
  %90 = call float @dx.op.tertiary.f32(i32 46, float %49, float %76, float %89)  ; FMad(a,b,c)
  %91 = call float @dx.op.dot3.f32(i32 55, float %86, float %88, float %90, float %86, float %88, float %90)  ; Dot3(ax,ay,az,bx,by,bz)
  %92 = call float @dx.op.unary.f32(i32 25, float %91)  ; Rsqrt(value)
  %93 = fmul fast float %92, %86
  %94 = fmul fast float %92, %88
  %95 = fmul fast float %92, %90
  %96 = fmul fast float %78, %35
  %97 = fmul fast float %96, %84
  %98 = call float @dx.op.tertiary.f32(i32 46, float %36, float %93, float %97)  ; FMad(a,b,c)
  %99 = call float @dx.op.tertiary.f32(i32 46, float %39, float %10, float %98)  ; FMad(a,b,c)
  %100 = fmul fast float %80, %35
  %101 = fmul fast float %100, %84
  %102 = call float @dx.op.tertiary.f32(i32 46, float %36, float %94, float %101)  ; FMad(a,b,c)
  %103 = call float @dx.op.tertiary.f32(i32 46, float %39, float %11, float %102)  ; FMad(a,b,c)
  %104 = fmul fast float %82, %35
  %105 = fmul fast float %104, %84
  %106 = call float @dx.op.tertiary.f32(i32 46, float %36, float %95, float %105)  ; FMad(a,b,c)
  %107 = call float @dx.op.tertiary.f32(i32 46, float %39, float %12, float %106)  ; FMad(a,b,c)
  %108 = call float @dx.op.dot3.f32(i32 55, float %99, float %103, float %107, float %99, float %103, float %107)  ; Dot3(ax,ay,az,bx,by,bz)
  %109 = call float @dx.op.unary.f32(i32 25, float %108)  ; Rsqrt(value)
  %110 = fmul fast float %109, %99
  %111 = fmul fast float %109, %103
  %112 = fmul fast float %109, %107
  %113 = call %dx.types.ResRet.f32 @dx.op.sample.f32(i32 60, %dx.types.Handle %6, %dx.types.Handle %8, float %16, float %17, float undef, float undef, i32 0, i32 0, i32 undef, float undef)  ; Sample(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,clamp)
  %114 = extractvalue %dx.types.ResRet.f32 %113, 0
  %115 = extractvalue %dx.types.ResRet.f32 %113, 1
  %116 = extractvalue %dx.types.ResRet.f32 %113, 2
  %117 = call %dx.types.ResRet.f32 @dx.op.sample.f32(i32 60, %dx.types.Handle %4, %dx.types.Handle %8, float %16, float %17, float undef, float undef, i32 0, i32 0, i32 undef, float undef)  ; Sample(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,clamp)
  %118 = extractvalue %dx.types.ResRet.f32 %117, 0
  %119 = extractvalue %dx.types.ResRet.f32 %117, 1
  %120 = extractvalue %dx.types.ResRet.f32 %117, 2
  %121 = call float @dx.op.dot3.f32(i32 55, float %110, float %111, float %112, float %27, float %28, float %29)  ; Dot3(ax,ay,az,bx,by,bz)
  %122 = call float @dx.op.unary.f32(i32 7, float %121)  ; Saturate(value)
  %123 = fmul fast float %119, %119
  %124 = fmul fast float %120, %114
  %125 = fmul fast float %120, %115
  %126 = fmul fast float %120, %116
  %127 = fsub fast float %114, %124
  %128 = fsub fast float %115, %125
  %129 = fsub fast float %116, %126
  %130 = fmul fast float %127, %118
  %131 = fmul fast float %128, %118
  %132 = fmul fast float %129, %118
  %133 = fadd fast float %114, 0xBFA47AE140000000
  %134 = fadd fast float %115, 0xBFA47AE140000000
  %135 = fadd fast float %116, 0xBFA47AE140000000
  %136 = fmul fast float %120, %133
  %137 = fmul fast float %120, %134
  %138 = fmul fast float %120, %135
  %139 = fadd fast float %136, 0x3FA47AE140000000
  %140 = fadd fast float %137, 0x3FA47AE140000000
  %141 = fadd fast float %138, 0x3FA47AE140000000
  %142 = fmul fast float %139, %118
  %143 = fmul fast float %140, %118
  %144 = fmul fast float %141, %118
  br label %145

; <label>:145                                     ; preds = %145, %0
  %146 = phi float [ 0.000000e+00, %0 ], [ %242, %145 ]
  %147 = phi float [ 0.000000e+00, %0 ], [ %243, %145 ]
  %148 = phi float [ 0.000000e+00, %0 ], [ %244, %145 ]
  %149 = phi i32 [ 0, %0 ], [ %245, %145 ]
  %150 = add nuw nsw i32 %149, 16
  %151 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %9, i32 %150)  ; CBufferLoadLegacy(handle,regIndex)
  %152 = extractvalue %dx.types.CBufRet.f32 %151, 0
  %153 = extractvalue %dx.types.CBufRet.f32 %151, 1
  %154 = extractvalue %dx.types.CBufRet.f32 %151, 2
  %155 = fsub fast float -0.000000e+00, %152
  %156 = fsub fast float -0.000000e+00, %153
  %157 = fsub fast float -0.000000e+00, %154
  %158 = call float @dx.op.dot3.f32(i32 55, float %155, float %156, float %157, float %155, float %156, float %157)  ; Dot3(ax,ay,az,bx,by,bz)
  %159 = call float @dx.op.unary.f32(i32 25, float %158)  ; Rsqrt(value)
  %160 = fmul fast float %159, %155
  %161 = fmul fast float %159, %156
  %162 = fmul fast float %159, %157
  %163 = fadd fast float %160, %27
  %164 = fadd fast float %161, %28
  %165 = fadd fast float %162, %29
  %166 = call float @dx.op.dot3.f32(i32 55, float %163, float %164, float %165, float %163, float %164, float %165)  ; Dot3(ax,ay,az,bx,by,bz)
  %167 = call float @dx.op.unary.f32(i32 25, float %166)  ; Rsqrt(value)
  %168 = fmul fast float %163, %167
  %169 = fmul fast float %164, %167
  %170 = fmul fast float %165, %167
  %171 = call float @dx.op.dot3.f32(i32 55, float %110, float %111, float %112, float %160, float %161, float %162)  ; Dot3(ax,ay,az,bx,by,bz)
  %172 = call float @dx.op.unary.f32(i32 7, float %171)  ; Saturate(value)
  %173 = call float @dx.op.dot3.f32(i32 55, float %160, float %161, float %162, float %168, float %169, float %170)  ; Dot3(ax,ay,az,bx,by,bz)
  %174 = call float @dx.op.unary.f32(i32 7, float %173)  ; Saturate(value)
  %175 = call float @dx.op.dot3.f32(i32 55, float %110, float %111, float %112, float %168, float %169, float %170)  ; Dot3(ax,ay,az,bx,by,bz)
  %176 = call float @dx.op.unary.f32(i32 7, float %175)  ; Saturate(value)
  %177 = fmul fast float %119, 2.000000e+00
  %178 = fmul fast float %174, %174
  %179 = fmul fast float %178, %177
  %180 = fadd fast float %179, -5.000000e-01
  %181 = fsub fast float 1.000000e+00, %172
  %182 = fmul fast float %181, %181
  %183 = fmul fast float %182, %182
  %184 = fmul fast float %183, %181
  %185 = fmul fast float %184, %180
  %186 = fadd fast float %185, 1.000000e+00
  %187 = fsub fast float 1.000000e+00, %122
  %188 = fmul fast float %187, %187
  %189 = fmul fast float %188, %188
  %190 = fmul fast float %189, %187
  %191 = fmul fast float %190, %180
  %192 = fadd fast float %191, 1.000000e+00
  %193 = fmul fast float %186, %192
  %194 = fmul fast float %123, %123
  %195 = fadd fast float %194, -1.000000e+00
  %196 = fmul fast float %176, %176
  %197 = fmul fast float %196, %195
  %198 = fadd fast float %197, 1.000000e+00
  %199 = fmul fast float %198, %198
  %200 = fmul fast float %199, 0x400921FB60000000
  %201 = call float @dx.op.binary.f32(i32 35, float 0x3EB0C6F7A0000000, float %200)  ; FMax(a,b)
  %202 = fdiv fast float %194, %201
  %203 = fsub fast float 1.000000e+00, %142
  %204 = fsub fast float 1.000000e+00, %143
  %205 = fsub fast float 1.000000e+00, %144
  %206 = fsub fast float 1.000000e+00, %174
  %207 = fmul fast float %206, %206
  %208 = fmul fast float %207, %207
  %209 = fmul fast float %208, %206
  %210 = fmul fast float %209, %203
  %211 = fmul fast float %209, %204
  %212 = fmul fast float %209, %205
  %213 = fadd fast float %210, %142
  %214 = fadd fast float %211, %143
  %215 = fadd fast float %212, %144
  %216 = fsub fast float 1.000000e+00, %178
  %217 = fmul fast float %194, 2.500000e-01
  %218 = fmul fast float %217, %216
  %219 = fadd fast float %218, %178
  %220 = fdiv fast float 1.000000e+00, %219
  %221 = fmul fast float %220, %202
  %222 = fmul fast float %221, %213
  %223 = fmul fast float %221, %214
  %224 = fmul fast float %221, %215
  %225 = add nuw nsw i32 %149, 19
  %226 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %9, i32 %225)  ; CBufferLoadLegacy(handle,regIndex)
  %227 = extractvalue %dx.types.CBufRet.f32 %226, 0
  %228 = extractvalue %dx.types.CBufRet.f32 %226, 1
  %229 = extractvalue %dx.types.CBufRet.f32 %226, 2
  %230 = fmul fast float %227, %172
  %231 = fmul fast float %228, %172
  %232 = fmul fast float %229, %172
  %233 = fmul fast float %193, %130
  %234 = fmul fast float %193, %131
  %235 = fmul fast float %193, %132
  %236 = fadd fast float %222, %233
  %237 = fadd fast float %223, %234
  %238 = fadd fast float %224, %235
  %239 = fmul fast float %230, %236
  %240 = fmul fast float %231, %237
  %241 = fmul fast float %232, %238
  %242 = fadd fast float %239, %146
  %243 = fadd fast float %240, %147
  %244 = fadd fast float %241, %148
  %245 = add nuw nsw i32 %149, 1
  %246 = icmp eq i32 %245, 3
  br i1 %246, label %247, label %145

; <label>:247                                     ; preds = %145
  %248 = extractvalue %dx.types.ResRet.f32 %113, 3
  %249 = call %dx.types.ResRet.f32 @dx.op.sample.f32(i32 60, %dx.types.Handle %1, %dx.types.Handle %7, float %110, float %111, float %112, float undef, i32 undef, i32 undef, i32 undef, float undef)  ; Sample(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,clamp)
  %250 = extractvalue %dx.types.ResRet.f32 %249, 0
  %251 = extractvalue %dx.types.ResRet.f32 %249, 1
  %252 = extractvalue %dx.types.ResRet.f32 %249, 2
  %253 = fmul fast float %250, %130
  %254 = fmul fast float %251, %131
  %255 = fmul fast float %252, %132
  %256 = fadd fast float %253, %242
  %257 = fadd fast float %254, %243
  %258 = fadd fast float %255, %244
  %259 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %9, i32 23)  ; CBufferLoadLegacy(handle,regIndex)
  %260 = extractvalue %dx.types.CBufRet.i32 %259, 2
  %261 = sitofp i32 %260 to float
  %262 = fmul fast float %261, %119
  %263 = fsub fast float -0.000000e+00, %27
  %264 = fsub fast float -0.000000e+00, %28
  %265 = fsub fast float -0.000000e+00, %29
  %266 = call float @dx.op.dot3.f32(i32 55, float %263, float %264, float %265, float %110, float %111, float %112)  ; Dot3(ax,ay,az,bx,by,bz)
  %267 = fmul fast float %266, 2.000000e+00
  %268 = fmul fast float %267, %110
  %269 = fmul fast float %267, %111
  %270 = fmul fast float %267, %112
  %271 = fsub fast float %263, %268
  %272 = fsub fast float %264, %269
  %273 = fsub fast float %265, %270
  %274 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %2, %dx.types.Handle %7, float %271, float %272, float %273, float undef, i32 undef, i32 undef, i32 undef, float %262)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %275 = extractvalue %dx.types.ResRet.f32 %274, 0
  %276 = extractvalue %dx.types.ResRet.f32 %274, 1
  %277 = extractvalue %dx.types.ResRet.f32 %274, 2
  %278 = fmul fast float %275, %142
  %279 = fmul fast float %276, %143
  %280 = fmul fast float %277, %144
  %281 = fadd fast float %256, %278
  %282 = fadd fast float %257, %279
  %283 = fadd fast float %258, %280
  %284 = call %dx.types.ResRet.f32 @dx.op.sample.f32(i32 60, %dx.types.Handle %3, %dx.types.Handle %8, float %16, float %17, float undef, float undef, i32 0, i32 0, i32 undef, float undef)  ; Sample(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,clamp)
  %285 = extractvalue %dx.types.ResRet.f32 %284, 0
  %286 = extractvalue %dx.types.ResRet.f32 %284, 1
  %287 = extractvalue %dx.types.ResRet.f32 %284, 2
  %288 = fadd fast float %281, %285
  %289 = fadd fast float %282, %286
  %290 = fadd fast float %283, %287
  %291 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %9, i32 22)  ; CBufferLoadLegacy(handle,regIndex)
  %292 = extractvalue %dx.types.CBufRet.f32 %291, 3
  %293 = fmul fast float %292, %248
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 0, float %288)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 1, float %289)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 2, float %290)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 3, float %293)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  ret void
}

; Function Attrs: nounwind readnone
declare float @dx.op.loadInput.f32(i32, i32, i32, i8, i32) #0

; Function Attrs: nounwind
declare void @dx.op.storeOutput.f32(i32, i32, i32, i8, float) #1

; Function Attrs: nounwind readnone
declare float @dx.op.dot3.f32(i32, float, float, float, float, float, float) #0

; Function Attrs: nounwind readnone
declare float @dx.op.unary.f32(i32, float) #0

; Function Attrs: nounwind readonly
declare %dx.types.ResRet.f32 @dx.op.sample.f32(i32, %dx.types.Handle, %dx.types.Handle, float, float, float, float, i32, i32, i32, float) #2

; Function Attrs: nounwind readnone
declare float @dx.op.dot2.f32(i32, float, float, float, float) #0

; Function Attrs: nounwind readnone
declare float @dx.op.binary.f32(i32, float, float) #0

; Function Attrs: nounwind readonly
declare %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32, %dx.types.Handle, %dx.types.Handle, float, float, float, float, i32, i32, i32, float) #2

; Function Attrs: nounwind readonly
declare %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32, %dx.types.Handle, i32) #2

; Function Attrs: nounwind readonly
declare %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32, %dx.types.Handle, i32) #2

; Function Attrs: nounwind readnone
declare float @dx.op.tertiary.f32(i32, float, float, float) #0

; Function Attrs: nounwind readonly
declare %dx.types.Handle @dx.op.createHandle(i32, i8, i32, i32, i1) #2

attributes #0 = { nounwind readnone }
attributes #1 = { nounwind }
attributes #2 = { nounwind readonly }

!xbox.compiler.options = !{!0}
!llvm.ident = !{!1}
!dx.version = !{!2}
!dx.valver = !{!3}
!dx.shaderModel = !{!4}
!dx.resources = !{!5}
!dx.viewIdState = !{!19}
!dx.entryPoints = !{!20}

!0 = !{!"__XBOX_PER_THREAD_SCRATCH_SIZE_LIMIT_IN_BYTES", !"0"}
!1 = !{!"dxcxbox 2410.2410.11116.10741"}
!2 = !{i32 1, i32 0}
!3 = !{i32 1, i32 8}
!4 = !{!"ps", i32 6, i32 0}
!5 = !{!6, null, !14, !16}
!6 = !{!7, !9, !10, !11, !12, !13}
!7 = !{i32 0, %"class.Texture2D<vector<float, 4> >"* undef, !"", i32 0, i32 0, i32 1, i32 2, i32 0, !8}
!8 = !{i32 0, i32 9}
!9 = !{i32 1, %"class.Texture2D<vector<float, 3> >"* undef, !"", i32 0, i32 1, i32 1, i32 2, i32 0, !8}
!10 = !{i32 2, %"class.Texture2D<vector<float, 3> >"* undef, !"", i32 0, i32 2, i32 1, i32 2, i32 0, !8}
!11 = !{i32 3, %"class.Texture2D<vector<float, 3> >"* undef, !"", i32 0, i32 3, i32 1, i32 2, i32 0, !8}
!12 = !{i32 4, %"class.TextureCube<vector<float, 3> >"* undef, !"", i32 0, i32 4, i32 1, i32 5, i32 0, !8}
!13 = !{i32 5, %"class.TextureCube<vector<float, 3> >"* undef, !"", i32 0, i32 5, i32 1, i32 5, i32 0, !8}
!14 = !{!15}
!15 = !{i32 0, %hostlayout.Constants* undef, !"", i32 0, i32 0, i32 1, i32 388, null}
!16 = !{!17, !18}
!17 = !{i32 0, %struct.SamplerState* undef, !"", i32 0, i32 0, i32 1, i32 0, null}
!18 = !{i32 1, %struct.SamplerState* undef, !"", i32 0, i32 1, i32 1, i32 0, null}
!19 = !{[18 x i32] [i32 16, i32 4, i32 15, i32 15, i32 0, i32 0, i32 7, i32 7, i32 7, i32 0, i32 7, i32 7, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0]}
!20 = !{void ()* @PSTexturedEmissive, !"PSTexturedEmissive", !21, !5, null}
!21 = !{!22, !32, null}
!22 = !{!23, !26, !29, !31}
!23 = !{i32 0, !"TEXCOORD", i8 9, i8 0, !24, i8 2, i32 1, i8 2, i32 0, i8 0, !25}
!24 = !{i32 0}
!25 = !{i32 3, i32 3}
!26 = !{i32 1, !"TEXCOORD", i8 9, i8 0, !27, i8 2, i32 1, i8 4, i32 1, i8 0, !28}
!27 = !{i32 1}
!28 = !{i32 3, i32 7}
!29 = !{i32 2, !"TEXCOORD", i8 9, i8 0, !30, i8 2, i32 1, i8 3, i32 2, i8 0, !28}
!30 = !{i32 2}
!31 = !{i32 3, !"COLOR", i8 9, i8 0, !24, i8 2, i32 1, i8 4, i32 3, i8 0, null}
!32 = !{!33}
!33 = !{i32 0, !"SV_Target", i8 9, i8 16, !24, i8 0, i32 1, i8 4, i32 0, i8 0, !34}
!34 = !{i32 3, i32 15}

;
; DUMPING SHADER HARDWARE INSTRUCTIONS 
;
// Shader Type               : (PS)
// Shader Hw Stage           : (PS)

// Shader Instructions:
shader main
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  s_mov_b64     s[68:69], exec
  s_wqm_b64     exec, exec // wrscc
  s_mov_b32     s56, s9
  s_mov_b32     s16, s7
  s_mov_b32     s40, s5
  s_mov_b32     s2, s3
  s_mov_b32     s3, 0
  s_mov_b32     s5, 0
  s_mov_b32     s41, 0
  s_mov_b32     s7, 0
  s_mov_b32     s17, 0
  s_mov_b32     s9, 0
  s_mov_b32     s57, 0
  s_mov_b32     s13, s12
  s_mov_b32     s12, s11
  s_load_dwordx8  s[32:39], s[8:9], 0x00
  s_load_dwordx8  s[16:23], s[16:17], 0x00
  s_load_dwordx8  s[24:31], s[6:7], 0x00
  s_load_dwordx8  s[40:47], s[40:41], 0x00
  s_load_dwordx8  s[48:55], s[4:5], 0x00
  s_mov_b32     s11, 0
  s_load_dwordx8  s[0:7], s[2:3], 0x00
  s_load_dwordx4  s[56:59], s[56:57], 0x00
  s_mov_b32     m0, s15
  v_interp_p1_f32  v10, v0, attr0.x
  v_interp_p1_f32  v11, v0, attr0.y
  v_interp_p2_f32  v10, v1, attr0.x
  v_interp_p2_f32  v11, v1, attr0.y
  s_load_dwordx4  s[60:63], s[10:11], 0x00
  s_waitcnt     lgkmcnt(0)
  image_sample  v[6:9], v[10:11], s[48:55], s[56:59] dmask:0x3
  v_interp_p1_f32  v8, v0, attr2.x
  v_interp_p1_f32  v9, v0, attr2.y
  v_interp_p1_f32  v12, v0, attr2.z
  v_interp_p1_f32  v13, v0, attr1.x
  v_interp_p1_f32  v14, v0, attr1.y
  v_interp_p1_f32  v0, v0, attr1.z
  v_interp_p2_f32  v14, v1, attr1.y
  v_interp_p2_f32  v0, v1, attr1.z
  v_interp_p2_f32  v13, v1, attr1.x
  s_or_b32      s65, s13, 0x00100000 // wrscc
  s_mov_b32     s64, s12
  s_mov_b32     s66, -1
  s_mov_b32     s67, 0x00024fac
  image_sample  v[2:5], v[10:11], s[0:7], s[56:59] dmask:0xf
  s_buffer_load_dwordx4  s[48:51], s[64:67], 0x00
  v_interp_p2_f32  v8, v1, attr2.x
  v_interp_p2_f32  v9, v1, attr2.y
  v_interp_p2_f32  v12, v1, attr2.z
  ds_swizzle_b32  v1, v13 offset:32768
  ds_swizzle_b32  v15, v13 offset:32853
  ds_swizzle_b32  v16, v14 offset:32768
  ds_swizzle_b32  v17, v14 offset:32853
  ds_swizzle_b32  v18, v0 offset:32768
  ds_swizzle_b32  v19, v0 offset:32853
  ds_swizzle_b32  v20, v13 offset:32938
  ds_swizzle_b32  v22, v0 offset:32938
  ds_swizzle_b32  v21, v14 offset:32938
  ds_swizzle_b32  v23, v10 offset:32768
  ds_swizzle_b32  v25, v11 offset:32768
  ds_swizzle_b32  v26, v11 offset:32853
  ds_swizzle_b32  v27, v10 offset:32938
  ds_swizzle_b32  v24, v10 offset:32853
  ds_swizzle_b32  v28, v11 offset:32938
  s_buffer_load_dwordx16  s[0:15], s[64:67], 0x40
  s_waitcnt     lgkmcnt(0)
  v_sub_f32     v14, s49, v14
  v_sub_f32     v15, v15, v1
  v_sub_f32     v17, v17, v16
  v_sub_f32     v19, v19, v18
  v_sub_f32     v1, v20, v1
  v_sub_f32     v18, v22, v18
  v_sub_f32     v16, v21, v16
  v_sub_f32     v21, v26, v25
  v_mul_legacy_f32  v26, v18, v15
  v_sub_f32     v22, v27, v23
  v_mul_legacy_f32  v27, v1, v17
  v_sub_f32     v13, s48, v13
  v_mul_legacy_f32  v29, v14, v14
  v_sub_f32     v20, v24, v23
  v_sub_f32     v23, v28, v25
  v_mul_legacy_f32  v25, v16, v19
  v_mad_legacy_f32  v26, v1, v19, -v26
  v_mad_legacy_f32  v27, v16, v15, -v27
  v_sub_f32     v0, s50, v0
  v_mac_legacy_f32  v29, v13, v13
  v_mad_legacy_f32  v24, v0, v0, v29
  v_mad_legacy_f32  v25, v18, v17, -v25
  v_mul_legacy_f32  v28, v26, v18
  v_mul_legacy_f32  v29, v27, v1
  v_mul_legacy_f32  v30, v25, v16
  v_mad_legacy_f32  v16, v27, v16, -v28
  v_mad_legacy_f32  v18, v25, v18, -v29
  v_mul_legacy_f32  v28, v25, v19
  v_mul_legacy_f32  v31, v27, v17
  v_mul_legacy_f32  v29, v26, v15
  v_mad_legacy_f32  v15, v27, v15, -v28
  v_mul_legacy_f32  v27, v18, v20
  v_mad_legacy_f32  v1, v26, v1, -v30
  v_mul_legacy_f32  v18, v18, v21
  v_mad_legacy_f32  v17, v25, v17, -v29
  v_mul_legacy_f32  v25, v16, v20
  v_mul_legacy_f32  v20, v1, v20
  v_mul_legacy_f32  v1, v1, v21
  v_mad_legacy_f32  v19, v26, v19, -v31
  v_mul_legacy_f32  v16, v16, v21
  v_mac_legacy_f32  v27, v22, v15
  v_mad_legacy_f32  v15, v23, v15, v18
  v_mac_legacy_f32  v20, v22, v17
  v_mac_legacy_f32  v1, v23, v17
  v_mac_legacy_f32  v16, v23, v19
  v_mul_legacy_f32  v17, v15, v15
  v_mac_legacy_f32  v25, v22, v19
  v_mac_legacy_f32  v17, v16, v16
  v_mul_legacy_f32  v22, v27, v27
  v_mac_legacy_f32  v17, v1, v1
  v_mad_legacy_f32  v18, v25, v25, v22
  s_waitcnt     vmcnt(1)
  v_mad_f32     v7, v7, 2.0, -1.0
  v_rsq_f32     v17, v17
  v_mac_legacy_f32  v18, v20, v20
  v_mul_legacy_f32  v26, v7, v7
  v_mad_f32     v6, v6, 2.0, -1.0
  v_mac_legacy_f32  v26, v6, v6
  v_rsq_f32     v18, v18
  v_sub_f32     v26, 1.0, v26
  v_sqrt_f32    v26, v26
  v_mul_legacy_f32  v16, v17, v16
  v_mul_legacy_f32  v15, v17, v15
  v_mul_legacy_f32  v1, v17, v1
  v_mul_legacy_f32  v17, v25, v6
  v_mul_legacy_f32  v17, v17, v18
  v_mad_legacy_f32  v16, v7, v16, v17
  v_mac_legacy_f32  v16, v26, v8
  v_mul_legacy_f32  v8, v27, v6
  v_mul_legacy_f32  v8, v8, v18
  v_mul_legacy_f32  v6, v20, v6
  v_mac_legacy_f32  v8, v7, v15
  v_mul_legacy_f32  v6, v6, v18
  v_mad_legacy_f32  v1, v7, v1, v6
  v_mad_legacy_f32  v15, v26, v9, v8
  image_sample  v[7:10], v[10:11], s[40:47], s[56:59] dmask:0x7
  v_mul_legacy_f32  v6, v15, v15
  v_mac_legacy_f32  v1, v26, v12
  v_mac_legacy_f32  v6, v16, v16
  v_mac_legacy_f32  v6, v1, v1
  v_rsq_f32     v6, v6
  v_mul_legacy_f32  v19, s0, s0
  v_mac_legacy_f32  v19, s1, s1
  v_rsq_f32     v24, v24
  v_mul_legacy_f32  v16, v6, v16
  v_mul_legacy_f32  v15, v6, v15
  v_mul_legacy_f32  v6, v6, v1
  v_mac_legacy_f32  v19, s2, s2
  v_mul_legacy_f32  v12, v13, v24
  v_mul_legacy_f32  v13, v14, v24
  v_mul_legacy_f32  v14, v0, v24
  v_mul_legacy_f32  v17, v15, v13
  v_mad_legacy_f32  v0, v16, v12, v17
  v_mac_legacy_f32  v0, v6, v14
  v_sub_f32     v0, 1.0, v0 clamp
  s_mov_b32     s3, 0x3d23d70a
  s_waitcnt     vmcnt(0)
  v_mad_legacy_f32  v1, -v9, v3, v3
  v_mul_legacy_f32  v18, v1, v7
  v_add_f32     v1, 0xbd23d70a, v2
  v_mac_legacy_f32  v2, v2, -v9
  v_mul_legacy_f32  v20, v2, v7
  v_rsq_f32     v2, v19
  v_mad_legacy_f32  v1, v9, v1, s3
  v_add_f32     v3, 0xbd23d70a, v3
  v_mul_legacy_f32  v19, v1, v7
  v_mad_legacy_f32  v22, v2, -s1, v13
  v_mad_legacy_f32  v21, v2, -s0, v12
  v_mul_legacy_f32  v24, v22, v22
  v_mad_legacy_f32  v23, v2, -s2, v14
  v_mac_legacy_f32  v24, v21, v21
  v_mac_legacy_f32  v24, v23, v23
  v_rsq_f32     v24, v24
  v_mul_legacy_f32  v26, v2, -s1
  v_mul_legacy_f32  v25, v2, -s0
  v_mul_legacy_f32  v2, v2, -s2
  v_mul_legacy_f32  v21, v21, v24
  v_mul_legacy_f32  v22, v22, v24
  v_mul_legacy_f32  v23, v23, v24
  v_mul_legacy_f32  v24, v15, v26
  v_mac_legacy_f32  v24, v16, v25
  v_mac_legacy_f32  v24, v6, v2
  v_sub_f32     v27, 1.0, v24 clamp
  v_mul_legacy_f32  v28, v27, v27
  v_mul_legacy_f32  v26, v26, v22
  v_mul_legacy_f32  v28, v28, v28
  v_mad_legacy_f32  v25, v25, v21, v26
  v_mul_legacy_f32  v22, v15, v22
  v_mul_legacy_f32  v27, v28, v27
  v_mul_legacy_f32  v28, v0, v0
  v_mad_legacy_f32  v2, v2, v23, v25
  v_mad_legacy_f32  v21, v16, v21, v22
  v_mul_legacy_f32  v28, v28, v28
  v_mac_legacy_f32  v21, v23, v6 clamp
  v_max_f32     v25, v2, v2 clamp
  v_mul_legacy_f32  v0, v28, v0
  v_mul_legacy_f32  v28, v8, v8
  v_mul_legacy_f32  v22, v25, v25
  v_add_f32     v23, v8, v8
  v_mad_legacy_f32  v29, v28, v28, -1.0
  v_mul_legacy_f32  v21, v21, v21
  v_mad_legacy_f32  v21, v21, v29, 1.0
  v_mad_legacy_f32  v26, v22, v23, -0.5
  v_mul_legacy_f32  v21, v21, v21
  v_mad_legacy_f32  v27, v27, v26, 1.0
  v_mad_legacy_f32  v26, v0, v26, 1.0
  v_mul_legacy_f32  v21, 0x40490fdb, v21
  v_mul_legacy_f32  v26, v27, v26
  v_mul_legacy_f32  v27, v28, v28
  v_max_f32     v21, 0x358637bd, v21
  v_mad_legacy_f32  v25, -v25, v25, 1.0
  v_mul_legacy_f32  v28, 0x3e800000, v27
  v_rcp_f32     v21, v21
  v_mac_legacy_f32  v22, v28, v25
  v_sub_f32     v2, 1.0, v2 clamp
  v_rcp_f32     v22, v22
  v_mul_legacy_f32  v25, v2, v2
  v_mul_legacy_f32  v25, v25, v25
  v_mul_legacy_f32  v21, v27, v21
  v_mad_legacy_f32  v1, -v1, v7, 1.0
  v_mul_legacy_f32  v2, v25, v2
  v_mul_legacy_f32  v21, v22, v21
  v_mad_legacy_f32  v3, v9, v3, s3
  v_mad_legacy_f32  v25, v2, v1, v19
  v_mul_legacy_f32  v22, v26, v20
  v_mac_legacy_f32  v22, v21, v25
  v_mul_legacy_f32  v25, v3, v7
  v_mad_legacy_f32  v3, -v3, v7, 1.0
  v_mad_legacy_f32  v30, v2, v3, v25
  v_mul_legacy_f32  v31, v26, v18
  v_mad_legacy_f32  v30, v21, v30, v31
  v_mad_legacy_f32  v31, -v9, v4, v4
  v_add_f32     v4, 0xbd23d70a, v4
  v_mad_legacy_f32  v4, v9, v4, s3
  v_mul_legacy_f32  v32, v4, v7
  v_mad_legacy_f32  v4, -v4, v7, 1.0
  v_mul_legacy_f32  v31, v31, v7
  v_mad_legacy_f32  v2, v2, v4, v32
  v_mul_legacy_f32  v7, v26, v31
  v_mad_legacy_f32  v2, v21, v2, v7
  v_mul_legacy_f32  v7, s4, s4
  v_mac_legacy_f32  v7, s5, s5
  v_mac_legacy_f32  v7, s6, s6
  v_rsq_f32     v7, v7
  v_mul_legacy_f32  v9, v7, -s4
  v_readfirstlane_b32  s0, v9
  v_mul_legacy_f32  v9, v7, -s6
  v_mad_legacy_f32  v21, v7, -s5, v13
  v_readfirstlane_b32  s1, v9
  v_mad_legacy_f32  v9, v7, -s4, v12
  v_mul_legacy_f32  v26, v21, v21
  v_mad_legacy_f32  v33, v7, -s6, v14
  v_mac_legacy_f32  v26, v9, v9
  v_mac_legacy_f32  v26, v33, v33
  v_rsq_f32     v26, v26
  v_mul_legacy_f32  v7, v7, -s5
  v_mul_legacy_f32  v21, v21, v26
  v_mul_legacy_f32  v9, v9, v26
  v_mul_legacy_f32  v26, v33, v26
  v_mul_legacy_f32  v33, v7, v21
  v_mul_legacy_f32  v21, v15, v21
  v_mac_legacy_f32  v33, s0, v9
  v_mad_legacy_f32  v9, v16, v9, v21
  v_mac_legacy_f32  v9, v26, v6 clamp
  v_mul_legacy_f32  v9, v9, v9
  v_mad_legacy_f32  v9, v9, v29, 1.0
  v_mul_legacy_f32  v9, v9, v9
  v_mad_legacy_f32  v21, s1, v26, v33
  v_mul_legacy_f32  v7, v15, v7
  v_mul_legacy_f32  v9, 0x40490fdb, v9
  v_max_f32     v26, v21, v21 clamp
  v_mac_legacy_f32  v7, s0, v16
  v_max_f32     v9, 0x358637bd, v9
  v_mul_legacy_f32  v33, v26, v26
  v_mad_legacy_f32  v26, -v26, v26, 1.0
  v_rcp_f32     v9, v9
  v_mac_legacy_f32  v7, s1, v6
  v_mad_legacy_f32  v26, v28, v26, v33
  v_sub_f32     v28, 1.0, v7 clamp
  v_mad_legacy_f32  v23, v33, v23, -0.5
  v_mul_legacy_f32  v33, v28, v28
  v_mul_legacy_f32  v33, v33, v33
  v_sub_f32     v21, 1.0, v21 clamp
  v_rcp_f32     v26, v26
  v_mul_legacy_f32  v9, v27, v9
  v_mul_legacy_f32  v28, v33, v28
  v_mul_legacy_f32  v27, v21, v21
  v_mad_legacy_f32  v28, v28, v23, 1.0
  v_mad_legacy_f32  v23, v0, v23, 1.0
  v_mul_legacy_f32  v27, v27, v27
  v_mul_legacy_f32  v23, v28, v23
  v_mul_legacy_f32  v21, v27, v21
  s_buffer_load_dwordx8  s[0:7], s[64:67], 0x50
  v_mul_legacy_f32  v9, v26, v9
  v_mad_legacy_f32  v26, v21, v1, v19
  v_mul_legacy_f32  v27, v23, v20
  v_mad_legacy_f32  v26, v9, v26, v27
  v_mad_legacy_f32  v27, v21, v3, v25
  v_mul_legacy_f32  v28, v23, v18
  v_mad_legacy_f32  v21, v21, v4, v32
  v_mul_legacy_f32  v23, v23, v31
  v_mad_legacy_f32  v27, v9, v27, v28
  v_mad_legacy_f32  v9, v9, v21, v23
  v_max_f32     v21, v24, v24 clamp
  v_mul_legacy_f32  v23, s12, v21
  v_max_f32     v7, v7, v7 clamp
  v_mul_legacy_f32  v22, v23, v22
  s_waitcnt     lgkmcnt(0)
  v_mul_legacy_f32  v23, s0, v7
  v_mac_legacy_f32  v22, v23, v26
  v_mul_legacy_f32  v23, s13, v21
  v_mul_legacy_f32  v21, s14, v21
  v_mul_legacy_f32  v2, v21, v2
  v_mul_legacy_f32  v21, s8, s8
  v_mac_legacy_f32  v21, s9, s9
  v_mac_legacy_f32  v21, s10, s10
  v_rsq_f32     v21, v21
  v_mul_legacy_f32  v24, s1, v7
  v_mul_legacy_f32  v7, s2, v7
  v_mul_legacy_f32  v23, v23, v30
  v_mac_legacy_f32  v2, v7, v9
  v_mad_legacy_f32  v9, v21, -s9, v13
  v_mac_legacy_f32  v23, v24, v27
  v_mad_legacy_f32  v7, v21, -s8, v12
  v_mul_legacy_f32  v24, v9, v9
  v_mac_legacy_f32  v24, v7, v7
  v_mad_legacy_f32  v26, v21, -s10, v14
  v_mac_legacy_f32  v24, v26, v26
  v_rsq_f32     v24, v24
  v_mul_legacy_f32  v29, v21, -s8
  v_mul_legacy_f32  v28, v21, -s10
  v_mul_legacy_f32  v21, v21, -s9
  v_mul_legacy_f32  v9, v9, v24
  v_mul_legacy_f32  v7, v7, v24
  v_mul_legacy_f32  v24, v26, v24
  v_mul_legacy_f32  v26, v21, v9
  v_mac_legacy_f32  v26, v29, v7
  v_mul_legacy_f32  v9, v15, v9
  v_mad_legacy_f32  v7, v16, v7, v9
  v_mul_legacy_f32  v27, v8, v8
  v_mad_legacy_f32  v9, v28, v24, v26
  v_mac_legacy_f32  v7, v24, v6 clamp
  v_max_f32     v24, v9, v9 clamp
  v_mul_legacy_f32  v27, v27, v27
  v_mul_legacy_f32  v21, v15, v21
  v_mac_legacy_f32  v21, v16, v29
  v_mul_legacy_f32  v26, v24, v24
  v_mad_legacy_f32  v24, -v24, v24, 1.0
  v_mul_legacy_f32  v27, 0x3e800000, v27
  v_mad_legacy_f32  v24, v27, v24, v26
  v_add_f32     v27, v8, v8
  v_mac_legacy_f32  v21, v6, v28
  v_mad_legacy_f32  v26, v26, v27, -0.5
  v_sub_f32     v27, 1.0, v21 clamp
  v_mul_legacy_f32  v28, v27, v27
  v_mul_legacy_f32  v28, v28, v28
  v_mul_legacy_f32  v27, v28, v27
  v_mad_legacy_f32  v27, v27, v26, 1.0
  v_mad_legacy_f32  v0, v0, v26, 1.0
  v_mul_legacy_f32  v26, v8, v8
  v_mul_legacy_f32  v7, v7, v7
  v_mad_legacy_f32  v26, v26, v26, -1.0
  v_mad_legacy_f32  v7, v7, v26, 1.0
  v_mul_legacy_f32  v7, v7, v7
  v_mul_legacy_f32  v7, 0x40490fdb, v7
  v_max_f32     v7, 0x358637bd, v7
  v_rcp_f32     v7, v7
  v_mul_legacy_f32  v26, v8, v8
  v_mul_legacy_f32  v26, v26, v26
  v_sub_f32     v9, 1.0, v9 clamp
  v_mul_legacy_f32  v7, v26, v7
  v_mul_legacy_f32  v26, v9, v9
  v_mul_legacy_f32  v26, v26, v26
  v_mul_legacy_f32  v9, v26, v9
  v_mad_legacy_f32  v1, v9, v1, v19
  v_mad_legacy_f32  v3, v9, v3, v25
  v_mad_legacy_f32  v4, v9, v4, v32
  v_rcp_f32     v9, v24
  v_mul_legacy_f32  v0, v27, v0
  v_max_f32     v21, v21, v21 clamp
  v_mul_legacy_f32  v7, v9, v7
  v_mul_legacy_f32  v9, v0, v20
  v_mad_legacy_f32  v1, v7, v1, v9
  v_mul_legacy_f32  v9, v0, v18
  v_mul_legacy_f32  v0, v0, v31
  v_mad_legacy_f32  v3, v7, v3, v9
  v_mul_legacy_f32  v9, s4, v21
  v_mac_legacy_f32  v0, v7, v4
  v_mul_legacy_f32  v4, s5, v21
  v_mul_legacy_f32  v7, s6, v21
  v_mad_legacy_f32  v21, v9, v1, v22
  v_cubema_f32  v1, v16, v15, v6
  v_rcp_f32     v1, abs(v1)
  v_mad_legacy_f32  v3, v4, v3, v23
  v_mad_legacy_f32  v4, v7, v0, v2
  v_cubesc_f32  v0, v16, v15, v6
  v_cubetc_f32  v7, v16, v15, v6
  v_madak_f32   v0, v0, v1, 0x3fc00000
  v_madak_f32   v1, v7, v1, 0x3fc00000
  v_cubeid_f32  v2, v16, v15, v6
  v_mov_b32     v7, 0x3fc00000
  s_and_b64     exec, exec, s[68:69] // wrscc
  s_buffer_load_dword  s0, s[64:67], 0x5b
  s_buffer_load_dword  s1, s[64:67], 0x5e
  v_mad_legacy_f32  v9, -v12, v16, -v17
  v_mac_legacy_f32  v9, v14, -v6 mul:2
  v_mad_legacy_f32  v6, -v9, v6, -v14
  v_mad_legacy_f32  v12, -v9, v16, -v12
  v_mad_legacy_f32  v13, -v9, v15, -v13
  v_cubema_f32  v9, v12, v13, v6
  s_waitcnt     lgkmcnt(0)
  v_cvt_f32_i32  v14, s1
  v_rcp_f32     v15, abs(v9)
  v_cubetc_f32  v17, v12, v13, v6
  v_cubesc_f32  v16, v12, v13, v6
  image_sample  v[0:3], v[0:1], s[32:39], s[60:63] dmask:0x7 da
  v_mul_legacy_f32  v9, v14, v8
  v_cubeid_f32  v8, v12, v13, v6
  v_madak_f32   v6, v16, v15, 0x3fc00000
  v_mac_f32     v7, v17, v15
  image_sample_l  v[6:9], v[6:7], s[16:23], s[60:63] dmask:0x7 da
  image_sample  v[9:12], v[10:11], s[24:31], s[56:59] dmask:0x7
  v_mul_legacy_f32  v5, s0, v5
  s_waitcnt     vmcnt(2)
  v_mad_legacy_f32  v0, v0, v20, v21
  v_mad_legacy_f32  v1, v1, v18, v3
  v_mad_legacy_f32  v2, v2, v31, v4
  s_waitcnt     vmcnt(1)
  v_mac_legacy_f32  v2, v8, v32
  v_mac_legacy_f32  v0, v6, v19
  v_mac_legacy_f32  v1, v7, v25
  s_waitcnt     vmcnt(0)
  v_add_f32     v3, v1, v10
  v_add_f32     v2, v2, v11
  v_add_f32     v4, v0, v9
  v_cvt_pkrtz_f16_f32  v0, v4, v3
  v_cvt_pkrtz_f16_f32  v1, v2, v5
  exp           mrt0, v0, v0, v1, v1 done compr vm
  s_endpgm      
end


NumVGPR=34,NumSGPR=72,LDS=0,Scratch=0,Occpancy=7


#endif

const unsigned char PBREffect_PSTexturedEmissive[] = {
  0x44, 0x58, 0x42, 0x43, 0xdf, 0x38, 0xa2, 0x6e, 0x2b, 0xdf, 0xa9, 0xb4,
  0xa7, 0x8b, 0x9c, 0xeb, 0xe0, 0xfe, 0x14, 0xc5, 0x01, 0x00, 0x00, 0x00,
  0x1c, 0x23, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00,
  0x50, 0x00, 0x00, 0x00, 0xf0, 0x00, 0x00, 0x00, 0x2c, 0x01, 0x00, 0x00,
  0x2c, 0x03, 0x00, 0x00, 0xb4, 0x04, 0x00, 0x00, 0x44, 0x05, 0x00, 0x00,
  0x60, 0x05, 0x00, 0x00, 0x53, 0x46, 0x49, 0x30, 0x08, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x49, 0x53, 0x47, 0x31,
  0x98, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x88, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x03, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x88, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0f, 0x07, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x88, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x07, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x91, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x54, 0x45, 0x58, 0x43,
  0x4f, 0x4f, 0x52, 0x44, 0x00, 0x43, 0x4f, 0x4c, 0x4f, 0x52, 0x00, 0x00,
  0x4f, 0x53, 0x47, 0x31, 0x34, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x28, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x53, 0x56, 0x5f, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x00, 0x00, 0x00,
  0x50, 0x53, 0x56, 0x30, 0xf8, 0x01, 0x00, 0x00, 0x34, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff,
  0x00, 0x00, 0x00, 0x00, 0x04, 0x01, 0x00, 0x04, 0x01, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x22, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00,
  0x04, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00,
  0x05, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x38, 0x00, 0x00, 0x00, 0x00, 0x54, 0x45, 0x58, 0x43, 0x4f, 0x4f, 0x52,
  0x44, 0x00, 0x54, 0x45, 0x58, 0x43, 0x4f, 0x4f, 0x52, 0x44, 0x00, 0x54,
  0x45, 0x58, 0x43, 0x4f, 0x4f, 0x52, 0x44, 0x00, 0x43, 0x4f, 0x4c, 0x4f,
  0x52, 0x00, 0x50, 0x53, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x64,
  0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x76, 0x65, 0x00, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x42, 0x00, 0x03, 0x02, 0x00, 0x00,
  0x0a, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x01, 0x44, 0x00,
  0x03, 0x02, 0x00, 0x00, 0x13, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x01, 0x02, 0x43, 0x00, 0x03, 0x02, 0x00, 0x00, 0x1c, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x03, 0x44, 0x00, 0x03, 0x02, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x44, 0x10,
  0x03, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00,
  0x07, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x07, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x52, 0x54, 0x53, 0x30,
  0x80, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x00,
  0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x01, 0x00, 0x00,
  0x1d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x90, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xac, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xc8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xe4, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x1c, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x38, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x54, 0x01, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x70, 0x01, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x78, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x98, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00,
  0xb4, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff,
  0x01, 0x00, 0x00, 0x00, 0xd0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xff, 0xff, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0xec, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00,
  0x08, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff,
  0x01, 0x00, 0x00, 0x00, 0x24, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xff, 0xff, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x40, 0x01, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00,
  0x5c, 0x01, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x49, 0x4c, 0x44, 0x4e, 0x88, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x81, 0x00, 0x43, 0x3a, 0x5c, 0x55, 0x73, 0x65, 0x72, 0x73,
  0x5c, 0x6d, 0x61, 0x72, 0x63, 0x75, 0x5c, 0x44, 0x6f, 0x77, 0x6e, 0x6c,
  0x6f, 0x61, 0x64, 0x73, 0x5c, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x58,
  0x54, 0x4b, 0x31, 0x32, 0x2d, 0x6d, 0x61, 0x69, 0x6e, 0x5c, 0x44, 0x69,
  0x72, 0x65, 0x63, 0x74, 0x58, 0x54, 0x4b, 0x31, 0x32, 0x2d, 0x6d, 0x61,
  0x69, 0x6e, 0x5c, 0x53, 0x72, 0x63, 0x2f, 0x53, 0x68, 0x61, 0x64, 0x65,
  0x72, 0x73, 0x2f, 0x43, 0x6f, 0x6d, 0x70, 0x69, 0x6c, 0x65, 0x64, 0x5c,
  0x58, 0x62, 0x6f, 0x78, 0x47, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x58, 0x62,
  0x6f, 0x78, 0x4f, 0x6e, 0x65, 0x50, 0x42, 0x52, 0x45, 0x66, 0x66, 0x65,
  0x63, 0x74, 0x5f, 0x50, 0x53, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65,
  0x64, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x76, 0x65, 0x2e, 0x70, 0x64,
  0x62, 0x00, 0x00, 0x00, 0x48, 0x41, 0x53, 0x48, 0x14, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x82, 0x82, 0x0d, 0x82, 0x36, 0xa8, 0x38, 0x7b,
  0xa6, 0x31, 0x23, 0x8d, 0x20, 0x64, 0xac, 0xee, 0x44, 0x58, 0x49, 0x4c,
  0xb4, 0x1d, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x6d, 0x07, 0x00, 0x00,
  0x44, 0x58, 0x49, 0x4c, 0x00, 0x01, 0x00, 0x00, 0x7c, 0x00, 0x00, 0x00,
  0x54, 0x11, 0x00, 0x00, 0x58, 0x44, 0x41, 0x54, 0x06, 0x00, 0x00, 0x00,
  0x24, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x6c, 0x00, 0x00, 0x00,
  0x6c, 0x11, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0xd8, 0x11, 0x00, 0x00,
  0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe8, 0x11, 0x00, 0x00,
  0xeb, 0x08, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0xd4, 0x1a, 0x00, 0x00,
  0x38, 0x02, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x0c, 0x1d, 0x00, 0x00,
  0x91, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0xa0, 0x1d, 0x00, 0x00,
  0x11, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x5b, 0x04, 0x00, 0x00,
  0x44, 0x58, 0x49, 0x4c, 0x00, 0x01, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00,
  0x54, 0x11, 0x00, 0x00, 0x42, 0x43, 0xc0, 0xde, 0x21, 0x0c, 0x00, 0x00,
  0x52, 0x04, 0x00, 0x00, 0x0b, 0x82, 0x20, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x13, 0x00, 0x00, 0x00, 0x07, 0x81, 0x23, 0x91, 0x41, 0xc8, 0x04, 0x49,
  0x06, 0x10, 0x32, 0x39, 0x92, 0x01, 0x84, 0x0c, 0x25, 0x05, 0x08, 0x19,
  0x1e, 0x04, 0x8b, 0x62, 0x80, 0x18, 0x45, 0x02, 0x42, 0x92, 0x0b, 0x42,
  0xc4, 0x10, 0x32, 0x14, 0x38, 0x08, 0x18, 0x4b, 0x0a, 0x32, 0x62, 0x88,
  0x48, 0x90, 0x14, 0x20, 0x43, 0x46, 0x88, 0xa5, 0x00, 0x19, 0x32, 0x42,
  0xe4, 0x48, 0x0e, 0x90, 0x11, 0x23, 0xc4, 0x50, 0x41, 0x51, 0x81, 0x8c,
  0xe1, 0x83, 0xe5, 0x8a, 0x04, 0x31, 0x46, 0x06, 0x51, 0x18, 0x00, 0x00,
  0x08, 0x00, 0x00, 0x00, 0x1b, 0x8c, 0xe0, 0xff, 0xff, 0xff, 0xff, 0x07,
  0x40, 0x02, 0xa8, 0x0d, 0x84, 0xf0, 0xff, 0xff, 0xff, 0xff, 0x03, 0x20,
  0x6d, 0x30, 0x86, 0xff, 0xff, 0xff, 0xff, 0x1f, 0x00, 0x09, 0xa8, 0x00,
  0x49, 0x18, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x13, 0x82, 0x60, 0x42,
  0x20, 0x4c, 0x08, 0x06, 0x00, 0x00, 0x00, 0x00, 0x89, 0x20, 0x00, 0x00,
  0x94, 0x00, 0x00, 0x00, 0x32, 0x22, 0x88, 0x09, 0x20, 0x64, 0x85, 0x04,
  0x13, 0x23, 0xa4, 0x84, 0x04, 0x13, 0x23, 0xe3, 0x84, 0xa1, 0x90, 0x14,
  0x12, 0x4c, 0x8c, 0x8c, 0x0b, 0x84, 0xc4, 0x4c, 0x10, 0xd4, 0xc1, 0x08,
  0x40, 0x09, 0x00, 0x0a, 0x66, 0x00, 0xe6, 0x08, 0xc0, 0x60, 0x8e, 0x00,
  0x29, 0xc6, 0x40, 0x10, 0x44, 0x41, 0x90, 0x51, 0x0c, 0x80, 0x20, 0x88,
  0x62, 0x20, 0xa4, 0x20, 0x03, 0x31, 0x0c, 0xc3, 0x30, 0x0c, 0xa4, 0x94,
  0x61, 0x20, 0x06, 0x62, 0x6e, 0x1a, 0x2e, 0x7f, 0xc2, 0x1e, 0x42, 0xf2,
  0x57, 0x42, 0x5a, 0x89, 0xc9, 0x2f, 0x6e, 0x1b, 0x15, 0xc3, 0x30, 0x0c,
  0x04, 0x15, 0xf7, 0x0c, 0x97, 0x3f, 0x61, 0x0f, 0x21, 0xf9, 0x21, 0xd0,
  0x0c, 0x0b, 0x81, 0x82, 0xa7, 0x30, 0x0e, 0x01, 0x41, 0xc3, 0x30, 0x0c,
  0x04, 0x41, 0x0c, 0x14, 0x15, 0x63, 0x20, 0x86, 0x61, 0x18, 0x68, 0x2a,
  0xc4, 0x40, 0x0c, 0x03, 0x55, 0x47, 0x0d, 0x97, 0x3f, 0x61, 0x0f, 0x21,
  0xf9, 0xdc, 0x46, 0x15, 0x2b, 0x31, 0xf9, 0xc8, 0x6d, 0x23, 0x82, 0x20,
  0x08, 0xa2, 0x10, 0x17, 0x01, 0x11, 0x84, 0x1d, 0x35, 0x5c, 0xfe, 0x84,
  0x3d, 0x84, 0xe4, 0x73, 0x1b, 0x55, 0xac, 0xc4, 0xe4, 0x17, 0xb7, 0x8d,
  0x88, 0x61, 0x18, 0x86, 0x42, 0x68, 0x04, 0x44, 0xd0, 0x56, 0x8a, 0x81,
  0x18, 0x86, 0x81, 0xba, 0x39, 0x82, 0xa0, 0x18, 0x10, 0x51, 0x10, 0xc4,
  0x47, 0xe0, 0x40, 0xc0, 0x30, 0x02, 0x31, 0xcc, 0xd4, 0x06, 0xe3, 0xc0,
  0x0e, 0xe1, 0x30, 0x0f, 0xf3, 0xe0, 0x06, 0xb4, 0x50, 0x0e, 0xf8, 0x40,
  0x0f, 0xf5, 0x20, 0x0f, 0xe5, 0x20, 0x07, 0xa4, 0xc0, 0x07, 0xf6, 0x50,
  0x0e, 0xe3, 0x40, 0x0f, 0xef, 0x20, 0x0f, 0x7c, 0x60, 0x0e, 0xec, 0xf0,
  0x0e, 0xe1, 0x40, 0x0f, 0x6c, 0x00, 0x06, 0x74, 0xe0, 0x07, 0x60, 0xe0,
  0x07, 0x7a, 0xa0, 0x07, 0xed, 0x90, 0x0e, 0xf0, 0x30, 0x0f, 0xbf, 0x40,
  0x0f, 0xf9, 0x00, 0x0f, 0xe5, 0x80, 0x02, 0x62, 0x26, 0x31, 0x18, 0x07,
  0x76, 0x08, 0x87, 0x79, 0x98, 0x07, 0x37, 0xa0, 0x85, 0x72, 0xc0, 0x07,
  0x7a, 0xa8, 0x07, 0x79, 0x28, 0x07, 0x39, 0x20, 0x05, 0x3e, 0xb0, 0x87,
  0x72, 0x18, 0x07, 0x7a, 0x78, 0x07, 0x79, 0xe0, 0x03, 0x73, 0x60, 0x87,
  0x77, 0x08, 0x07, 0x7a, 0x60, 0x03, 0x30, 0xa0, 0x03, 0x3f, 0x00, 0x03,
  0x3f, 0x40, 0xc2, 0x48, 0x52, 0x39, 0x8c, 0x30, 0x0c, 0x33, 0xb5, 0xc1,
  0x38, 0xb0, 0x43, 0x38, 0xcc, 0xc3, 0x3c, 0xb8, 0x01, 0x2d, 0x94, 0x03,
  0x3e, 0xd0, 0x43, 0x3d, 0xc8, 0x43, 0x39, 0xc8, 0x01, 0x29, 0xf0, 0x81,
  0x3d, 0x94, 0xc3, 0x38, 0xd0, 0xc3, 0x3b, 0xc8, 0x03, 0x1f, 0x98, 0x03,
  0x3b, 0xbc, 0x43, 0x38, 0xd0, 0x03, 0x1b, 0x80, 0xc1, 0x1c, 0xf8, 0x01,
  0x18, 0xf8, 0x81, 0x1e, 0xe8, 0x41, 0x3b, 0xa4, 0x03, 0x3c, 0xcc, 0xc3,
  0x2f, 0xd0, 0x43, 0x3e, 0xc0, 0x43, 0x39, 0xa0, 0x80, 0x98, 0x49, 0x0c,
  0xc6, 0x81, 0x1d, 0xc2, 0x61, 0x1e, 0xe6, 0xc1, 0x0d, 0x68, 0xa1, 0x1c,
  0xf0, 0x81, 0x1e, 0xea, 0x41, 0x1e, 0xca, 0x41, 0x0e, 0x48, 0x81, 0x0f,
  0xec, 0xa1, 0x1c, 0xc6, 0x81, 0x1e, 0xde, 0x41, 0x1e, 0xf8, 0xc0, 0x1c,
  0xd8, 0xe1, 0x1d, 0xc2, 0x81, 0x1e, 0xd8, 0x00, 0x0c, 0xe6, 0xc0, 0x0f,
  0xc0, 0xc0, 0x0f, 0x90, 0x70, 0xa2, 0x94, 0xce, 0x44, 0x06, 0xe3, 0xc0,
  0x0e, 0xe1, 0x30, 0x0f, 0xf3, 0xe0, 0x06, 0xb4, 0x50, 0x0e, 0xf8, 0x40,
  0x0f, 0xf5, 0x20, 0x0f, 0xe5, 0x30, 0x0a, 0xf5, 0x20, 0x0e, 0xe5, 0xc0,
  0x07, 0xf6, 0x50, 0x0e, 0xe3, 0x40, 0x0f, 0xef, 0x20, 0x0f, 0x7c, 0x60,
  0x0e, 0xec, 0xf0, 0x0e, 0xe1, 0x40, 0x0f, 0x6c, 0x00, 0x06, 0x73, 0xe0,
  0x07, 0x60, 0xe0, 0x07, 0x28, 0x38, 0x69, 0x4d, 0x82, 0x31, 0x07, 0xce,
  0xa3, 0x0e, 0x47, 0x9a, 0x16, 0x00, 0x73, 0xa8, 0xc9, 0xe7, 0x9c, 0x46,
  0x9a, 0x80, 0x66, 0x92, 0x90, 0x73, 0xb6, 0x6e, 0xdb, 0xba, 0xee, 0x39,
  0x0c, 0x03, 0x31, 0x0c, 0xf4, 0xde, 0x24, 0x4d, 0x11, 0x25, 0x4c, 0x3e,
  0x0b, 0x30, 0xcf, 0x42, 0x44, 0xec, 0x04, 0x4c, 0x04, 0x0a, 0x08, 0x8a,
  0x53, 0x82, 0x98, 0x02, 0x00, 0x00, 0x00, 0x00, 0x13, 0x16, 0x72, 0xc0,
  0x87, 0x74, 0x60, 0x87, 0x36, 0x68, 0x87, 0x79, 0x68, 0x03, 0x7c, 0x10,
  0x87, 0x38, 0xd8, 0xf0, 0x0a, 0xe5, 0xd0, 0x06, 0xed, 0xa0, 0x07, 0xe5,
  0xd0, 0x06, 0xf0, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x7a, 0x30, 0x07, 0x72,
  0xd0, 0x06, 0xe9, 0x10, 0x07, 0x7a, 0x30, 0x07, 0x72, 0xd0, 0x06, 0xe9,
  0x80, 0x07, 0x7a, 0x30, 0x07, 0x72, 0xd0, 0x06, 0xe9, 0x10, 0x07, 0x76,
  0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x90, 0x0e, 0x73, 0x20, 0x07, 0x7a,
  0x30, 0x07, 0x72, 0xd0, 0x06, 0xe9, 0x60, 0x07, 0x74, 0xa0, 0x07, 0x76,
  0x40, 0x07, 0x6d, 0x60, 0x0e, 0x71, 0x60, 0x07, 0x7a, 0x30, 0x07, 0x72,
  0xd0, 0x06, 0xe6, 0x30, 0x07, 0x72, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d,
  0x60, 0x0e, 0x76, 0x40, 0x07, 0x7a, 0x60, 0x07, 0x74, 0xd0, 0x06, 0xee,
  0x80, 0x07, 0x7a, 0x10, 0x07, 0x76, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x7a,
  0x60, 0x07, 0x74, 0x30, 0xe4, 0x09, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x60, 0xc8, 0x63, 0x00, 0x01, 0x10, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x90, 0x07, 0x01, 0x02, 0x40, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x21, 0x8f, 0x02, 0x04, 0x40,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x43, 0x1e, 0x06, 0x08,
  0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x86, 0x3c, 0x11,
  0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x79,
  0x26, 0x20, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18,
  0xf2, 0x54, 0x40, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x30, 0xe4, 0x89, 0x80, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x60, 0xc8, 0x83, 0x01, 0x01, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0xc0, 0x90, 0x67, 0x03, 0x02, 0x60, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x80, 0x21, 0x4f, 0x07, 0x04, 0x40, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x43, 0x1e, 0x30, 0x00, 0x02, 0x60, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x2c, 0x10, 0x00, 0x00, 0x00,
  0x14, 0x00, 0x00, 0x00, 0x32, 0x1e, 0x98, 0x18, 0x19, 0x11, 0x4c, 0x90,
  0x8c, 0x09, 0x26, 0x47, 0xc6, 0x04, 0x43, 0x22, 0x4a, 0x60, 0x04, 0xa0,
  0x20, 0x8a, 0xa1, 0x08, 0x4a, 0xa2, 0x0c, 0x0a, 0xa1, 0x14, 0x0a, 0xd1,
  0xa0, 0x1c, 0xca, 0x83, 0x8a, 0x92, 0x18, 0x01, 0x28, 0x82, 0x42, 0x28,
  0x83, 0x02, 0x21, 0x73, 0x06, 0x80, 0xd4, 0x19, 0x00, 0x62, 0x67, 0x00,
  0x08, 0x9e, 0x01, 0x20, 0x79, 0x06, 0x80, 0xe6, 0xb1, 0x24, 0x88, 0x78,
  0x1e, 0x00, 0x38, 0x8e, 0x03, 0x38, 0x8e, 0x03, 0x00, 0x00, 0x00, 0x00,
  0x79, 0x18, 0x00, 0x00, 0x99, 0x00, 0x00, 0x00, 0x1a, 0x03, 0x4c, 0x90,
  0x46, 0x02, 0x13, 0xc4, 0x36, 0xf8, 0xfa, 0xc2, 0x12, 0x7a, 0xc2, 0xfa,
  0x82, 0x2a, 0x92, 0xfa, 0xa2, 0x42, 0x92, 0x2a, 0x0a, 0x22, 0xfa, 0x9a,
  0x1a, 0x92, 0x0a, 0xa2, 0x1a, 0x42, 0xfa, 0x9a, 0x4a, 0xd2, 0x2a, 0xfa,
  0x62, 0x4a, 0x6a, 0x4a, 0xa2, 0xfa, 0x4a, 0x72, 0xfa, 0x12, 0xca, 0xa2,
  0x2a, 0x9a, 0x62, 0x00, 0xb3, 0x41, 0x08, 0x04, 0x76, 0x64, 0x78, 0x63,
  0x78, 0x62, 0x6f, 0x78, 0x20, 0x32, 0x34, 0x31, 0x30, 0x2e, 0x32, 0x34,
  0x31, 0x30, 0x2e, 0x31, 0x31, 0x31, 0x31, 0x36, 0x2e, 0x31, 0x30, 0x37,
  0x34, 0x31, 0x1b, 0x02, 0x62, 0x82, 0x40, 0x34, 0x13, 0x04, 0xc2, 0xd9,
  0x20, 0x18, 0xc7, 0x04, 0x81, 0x78, 0x36, 0x08, 0x46, 0x42, 0x01, 0x6e,
  0x6e, 0x82, 0x40, 0x40, 0x1b, 0x86, 0x85, 0x39, 0x26, 0x08, 0x66, 0xf0,
  0x11, 0x98, 0x20, 0x10, 0xd1, 0x04, 0x81, 0x90, 0x36, 0x08, 0x47, 0xb4,
  0x21, 0x39, 0x9c, 0xe7, 0x38, 0x0c, 0xe8, 0x90, 0x26, 0x08, 0x6a, 0x00,
  0x06, 0x1b, 0x12, 0x83, 0x7a, 0x0e, 0xc3, 0x80, 0x0e, 0x69, 0x43, 0x02,
  0x51, 0xcf, 0x01, 0x19, 0xd0, 0x21, 0x4d, 0x10, 0x88, 0x69, 0x43, 0x72,
  0x51, 0xcf, 0x71, 0x19, 0xd0, 0x21, 0x4d, 0x10, 0x08, 0x6a, 0x82, 0xc0,
  0x06, 0x61, 0x30, 0x41, 0x20, 0xaa, 0x0d, 0x49, 0xa6, 0x3d, 0x47, 0x66,
  0x6c, 0x87, 0xb4, 0x21, 0xd9, 0xb4, 0xe7, 0xd8, 0x8c, 0xed, 0x90, 0x36,
  0x18, 0x53, 0x65, 0x61, 0x5c, 0x37, 0x41, 0x80, 0x03, 0x31, 0x98, 0x20,
  0x10, 0xd6, 0x06, 0xe4, 0xf8, 0x9e, 0xe3, 0x30, 0xc0, 0x00, 0xd8, 0x10,
  0x84, 0xc1, 0x04, 0x41, 0x0e, 0xc6, 0x60, 0x03, 0x72, 0x8c, 0xc1, 0x73,
  0x1c, 0xc6, 0x01, 0x6c, 0x40, 0x8c, 0x31, 0x78, 0x0e, 0xc3, 0x38, 0x80,
  0x0d, 0x02, 0x19, 0x94, 0xc1, 0x06, 0xc2, 0x03, 0xc4, 0xc0, 0x0c, 0x26,
  0x08, 0x73, 0x40, 0x06, 0x1b, 0x02, 0x34, 0x98, 0x20, 0x08, 0x00, 0x25,
  0xa8, 0x29, 0xaa, 0x32, 0x3c, 0xba, 0x3a, 0xb9, 0x32, 0xb2, 0xa2, 0xb6,
  0xb4, 0xb9, 0xb9, 0x34, 0xbb, 0x32, 0x22, 0x54, 0x45, 0x58, 0x43, 0x4f,
  0x4f, 0x52, 0x44, 0x13, 0x84, 0x22, 0x9b, 0x20, 0x14, 0xda, 0x86, 0xe0,
  0x98, 0x20, 0x14, 0xdb, 0x06, 0xe1, 0xba, 0x36, 0x2c, 0x07, 0x1b, 0xb4,
  0x81, 0x1b, 0xbc, 0x01, 0x1c, 0x18, 0x70, 0x70, 0xb8, 0x41, 0x1c, 0x6c,
  0x08, 0x8c, 0x09, 0x42, 0xc1, 0x4d, 0x10, 0x88, 0x6b, 0x83, 0x70, 0xd5,
  0xc1, 0x86, 0xc5, 0x60, 0x83, 0x36, 0x70, 0x83, 0x39, 0x80, 0x03, 0x83,
  0x0e, 0x0c, 0x37, 0xb0, 0x83, 0x0d, 0x01, 0x34, 0x41, 0x28, 0xba, 0x0d,
  0x0b, 0xc4, 0x06, 0x6d, 0xe0, 0x06, 0x78, 0x00, 0x07, 0x46, 0x1e, 0x40,
  0x6e, 0x60, 0x07, 0x2c, 0x86, 0x9e, 0x98, 0x9e, 0xa4, 0x36, 0x2c, 0xd7,
  0x1e, 0xb4, 0x81, 0x1b, 0xbc, 0x01, 0x1c, 0x18, 0x74, 0x70, 0xb9, 0x01,
  0xb0, 0x81, 0x90, 0x83, 0x3b, 0xd0, 0x03, 0x3e, 0x60, 0x32, 0x65, 0xf5,
  0x45, 0x15, 0x26, 0x77, 0x56, 0x46, 0x37, 0x41, 0x28, 0xbc, 0x09, 0x02,
  0x81, 0x6d, 0x10, 0x2e, 0x50, 0xd8, 0xb0, 0x1c, 0x7e, 0xd0, 0x06, 0x7f,
  0xf0, 0x06, 0x6e, 0x60, 0xd0, 0xc1, 0xe1, 0x06, 0xa1, 0xb0, 0x21, 0x10,
  0x85, 0x0d, 0x43, 0x1f, 0x8c, 0x02, 0xb0, 0xa1, 0x50, 0x83, 0x35, 0x20,
  0x85, 0x33, 0x00, 0x5a, 0xe1, 0x89, 0xbd, 0xe1, 0xb9, 0x8c, 0xbd, 0xb5,
  0xc1, 0xa5, 0xb1, 0x95, 0xc9, 0xb9, 0xbc, 0xc1, 0xd1, 0xa5, 0xbd, 0xb9,
  0xcd, 0x4d, 0x09, 0x84, 0x2a, 0x6c, 0x6c, 0x76, 0x6d, 0x2e, 0x69, 0x64,
  0x65, 0x6e, 0x74, 0x53, 0x02, 0xa2, 0x0a, 0x19, 0x9e, 0x8b, 0x5d, 0x99,
  0xdc, 0x5c, 0xda, 0x9b, 0xdb, 0x94, 0xe0, 0x68, 0x42, 0x86, 0xe7, 0x62,
  0x17, 0xc6, 0x66, 0x57, 0x26, 0x37, 0x25, 0x48, 0xea, 0x90, 0xe1, 0xb9,
  0xcc, 0xa1, 0x85, 0x91, 0x95, 0xc9, 0x35, 0xbd, 0x91, 0x95, 0xb1, 0x4d,
  0x09, 0x98, 0x32, 0x64, 0x78, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
  0x63, 0x65, 0x73, 0x53, 0x02, 0x33, 0xa8, 0x43, 0x86, 0xe7, 0x62, 0x97,
  0x56, 0x76, 0x97, 0x44, 0x36, 0x45, 0x17, 0x46, 0x57, 0x36, 0x25, 0x40,
  0x83, 0x3a, 0x64, 0x78, 0x2e, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x50, 0x6f,
  0x69, 0x6e, 0x74, 0x73, 0x53, 0x02, 0x52, 0x00, 0x79, 0x18, 0x00, 0x00,
  0x51, 0x00, 0x00, 0x00, 0x33, 0x08, 0x80, 0x1c, 0xc4, 0xe1, 0x1c, 0x66,
  0x14, 0x01, 0x3d, 0x88, 0x43, 0x38, 0x84, 0xc3, 0x8c, 0x42, 0x80, 0x07,
  0x79, 0x78, 0x07, 0x73, 0x98, 0x71, 0x0c, 0xe6, 0x00, 0x0f, 0xed, 0x10,
  0x0e, 0xf4, 0x80, 0x0e, 0x33, 0x0c, 0x42, 0x1e, 0xc2, 0xc1, 0x1d, 0xce,
  0xa1, 0x1c, 0x66, 0x30, 0x05, 0x3d, 0x88, 0x43, 0x38, 0x84, 0x83, 0x1b,
  0xcc, 0x03, 0x3d, 0xc8, 0x43, 0x3d, 0x8c, 0x03, 0x3d, 0xcc, 0x78, 0x8c,
  0x74, 0x70, 0x07, 0x7b, 0x08, 0x07, 0x79, 0x48, 0x87, 0x70, 0x70, 0x07,
  0x7a, 0x70, 0x03, 0x76, 0x78, 0x87, 0x70, 0x20, 0x87, 0x19, 0xcc, 0x11,
  0x0e, 0xec, 0x90, 0x0e, 0xe1, 0x30, 0x0f, 0x6e, 0x30, 0x0f, 0xe3, 0xf0,
  0x0e, 0xf0, 0x50, 0x0e, 0x33, 0x10, 0xc4, 0x1d, 0xde, 0x21, 0x1c, 0xd8,
  0x21, 0x1d, 0xc2, 0x61, 0x1e, 0x66, 0x30, 0x89, 0x3b, 0xbc, 0x83, 0x3b,
  0xd0, 0x43, 0x39, 0xb4, 0x03, 0x3c, 0xbc, 0x83, 0x3c, 0x84, 0x03, 0x3b,
  0xcc, 0xf0, 0x14, 0x76, 0x60, 0x07, 0x7b, 0x68, 0x07, 0x37, 0x68, 0x87,
  0x72, 0x68, 0x07, 0x37, 0x80, 0x87, 0x70, 0x90, 0x87, 0x70, 0x60, 0x07,
  0x76, 0x28, 0x07, 0x76, 0xf8, 0x05, 0x76, 0x78, 0x87, 0x77, 0x80, 0x87,
  0x5f, 0x08, 0x87, 0x71, 0x18, 0x87, 0x72, 0x98, 0x87, 0x79, 0x98, 0x81,
  0x2c, 0xee, 0xf0, 0x0e, 0xee, 0xe0, 0x0e, 0xf5, 0xc0, 0x0e, 0xec, 0x30,
  0x03, 0x62, 0xc8, 0xa1, 0x1c, 0xe4, 0xa1, 0x1c, 0xcc, 0xa1, 0x1c, 0xe4,
  0xa1, 0x1c, 0xdc, 0x61, 0x1c, 0xca, 0x21, 0x1c, 0xc4, 0x81, 0x1d, 0xca,
  0x61, 0x06, 0xd6, 0x90, 0x43, 0x39, 0xc8, 0x43, 0x39, 0x98, 0x43, 0x39,
  0xc8, 0x43, 0x39, 0xb8, 0xc3, 0x38, 0x94, 0x43, 0x38, 0x88, 0x03, 0x3b,
  0x94, 0xc3, 0x2f, 0xbc, 0x83, 0x3c, 0xfc, 0x82, 0x3b, 0xd4, 0x03, 0x3b,
  0xb0, 0xc3, 0x0c, 0xc4, 0x21, 0x07, 0x7c, 0x70, 0x03, 0x7a, 0x28, 0x87,
  0x76, 0x80, 0x87, 0x19, 0xd1, 0x43, 0x0e, 0xf8, 0xe0, 0x06, 0xe4, 0x20,
  0x0e, 0xe7, 0xe0, 0x06, 0xf6, 0x10, 0x0e, 0xf2, 0xc0, 0x0e, 0xe1, 0x90,
  0x0f, 0xef, 0x50, 0x0f, 0xf4, 0x30, 0x83, 0x81, 0xc8, 0x01, 0x1f, 0xdc,
  0x40, 0x1c, 0xe4, 0xa1, 0x1c, 0xc2, 0x61, 0x1d, 0xdc, 0x40, 0x1c, 0xe4,
  0x01, 0x00, 0x00, 0x00, 0x71, 0x20, 0x00, 0x00, 0x36, 0x00, 0x00, 0x00,
  0x06, 0x20, 0xa5, 0x6c, 0x4b, 0x5c, 0x13, 0x15, 0x11, 0x83, 0xc7, 0x20,
  0x92, 0x84, 0x54, 0x84, 0x1d, 0x40, 0xc3, 0xe5, 0x3b, 0x8f, 0x1f, 0x20,
  0x0d, 0x10, 0x61, 0x7e, 0x71, 0xdb, 0xa6, 0xb0, 0x0d, 0x97, 0xef, 0x3c,
  0xbe, 0x10, 0x50, 0x45, 0x41, 0x44, 0xa5, 0x03, 0x0c, 0x25, 0x61, 0x00,
  0x02, 0xe6, 0x17, 0xb7, 0x6d, 0x09, 0xdb, 0x70, 0xf9, 0xce, 0xe3, 0x0b,
  0x01, 0x55, 0x14, 0x44, 0x54, 0x3a, 0xc0, 0x50, 0x12, 0x06, 0x20, 0x60,
  0x3e, 0x72, 0xdb, 0xc6, 0x20, 0x0d, 0x97, 0xef, 0x3c, 0xbe, 0x10, 0x11,
  0xc0, 0x44, 0x84, 0x40, 0x33, 0x2c, 0x84, 0x19, 0x38, 0xc3, 0xe5, 0x3b,
  0x8f, 0x3f, 0x38, 0x93, 0xed, 0x17, 0xb7, 0x6d, 0x03, 0xce, 0x70, 0xf9,
  0xce, 0xe3, 0x0f, 0xce, 0x74, 0xfb, 0xc5, 0x6d, 0x5b, 0xc0, 0x34, 0x5c,
  0xbe, 0xf3, 0xf8, 0x8b, 0x03, 0x0c, 0x62, 0xf3, 0x50, 0x93, 0x5f, 0xdc,
  0xb6, 0x15, 0x40, 0xc3, 0xe5, 0x3b, 0x8f, 0x2f, 0x01, 0xcc, 0xb3, 0x10,
  0x7e, 0x71, 0xdb, 0x86, 0x50, 0x0d, 0x97, 0xef, 0x3c, 0xbe, 0x04, 0x30,
  0xcf, 0x42, 0x94, 0x44, 0x45, 0x2c, 0x7e, 0x71, 0xdb, 0x26, 0x50, 0x0d,
  0x97, 0xef, 0x3c, 0xbe, 0x34, 0x39, 0x11, 0x81, 0x52, 0xd3, 0x43, 0x4d,
  0x7e, 0x71, 0xdb, 0xb6, 0x20, 0x0d, 0x97, 0xef, 0x3c, 0xfe, 0x44, 0x44,
  0x13, 0x02, 0x44, 0x98, 0x5f, 0xdc, 0xb6, 0x11, 0x3c, 0xc3, 0xe5, 0x3b,
  0x8f, 0x4f, 0x35, 0x40, 0x84, 0xf9, 0xc5, 0x6d, 0x03, 0x00, 0x00, 0x00,
  0x61, 0x20, 0x00, 0x00, 0x0a, 0x02, 0x00, 0x00, 0x13, 0x04, 0x43, 0x2c,
  0x10, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x00, 0x00, 0xf4, 0x8d, 0x00, 0x50,
  0x51, 0x02, 0x44, 0x14, 0x4b, 0xf1, 0x95, 0x4b, 0x99, 0x94, 0x51, 0x81,
  0x14, 0x4c, 0xb1, 0x15, 0x6a, 0x40, 0x99, 0x06, 0xcc, 0x00, 0x14, 0x57,
  0xb9, 0x95, 0x5c, 0xc9, 0x94, 0x5d, 0xe1, 0xd1, 0x30, 0x46, 0x00, 0x82,
  0x20, 0x88, 0x7e, 0x63, 0x04, 0x7d, 0xdf, 0xb2, 0xb8, 0x36, 0x46, 0xb0,
  0xfb, 0xa3, 0x4c, 0x82, 0xc1, 0x18, 0x01, 0x08, 0x82, 0x20, 0xfc, 0x0b,
  0x23, 0x00, 0x63, 0x04, 0x2a, 0x5e, 0x9f, 0xb2, 0x37, 0x46, 0xa0, 0xe2,
  0xf5, 0x29, 0xfb, 0xc2, 0x18, 0x01, 0x08, 0x82, 0x20, 0xfe, 0x0b, 0x63,
  0x04, 0x20, 0x08, 0x82, 0x20, 0x18, 0x8c, 0x11, 0x80, 0x20, 0x08, 0x82,
  0xa0, 0x30, 0x46, 0x00, 0x82, 0x20, 0x88, 0x7f, 0x33, 0x00, 0x00, 0x00,
  0x23, 0x06, 0x09, 0x00, 0x82, 0x60, 0x00, 0x06, 0x78, 0x00, 0xa9, 0xc1,
  0x1b, 0xbc, 0xc1, 0x37, 0x62, 0x90, 0x00, 0x20, 0x08, 0x06, 0x60, 0x90,
  0x07, 0xd1, 0x1a, 0xc4, 0x41, 0x1c, 0x80, 0xc1, 0x88, 0x41, 0x02, 0x80,
  0x20, 0x18, 0x80, 0x81, 0x1e, 0x48, 0x6c, 0x30, 0x07, 0x73, 0x10, 0x06,
  0x23, 0x06, 0x09, 0x00, 0x82, 0x60, 0x00, 0x06, 0x7b, 0x30, 0xb5, 0x81,
  0x1d, 0xd8, 0x81, 0x18, 0x8c, 0x18, 0x24, 0x00, 0x08, 0x82, 0x01, 0x18,
  0xf0, 0x01, 0xe5, 0x06, 0x7b, 0xb0, 0x07, 0x63, 0x30, 0x62, 0x90, 0x00,
  0x20, 0x08, 0x06, 0x60, 0xd0, 0x07, 0xd5, 0x1b, 0xec, 0xc1, 0x1e, 0x90,
  0xc1, 0x88, 0x41, 0x02, 0x80, 0x20, 0x18, 0x80, 0x81, 0x1f, 0x58, 0x6d,
  0xd0, 0x07, 0x7d, 0x50, 0x06, 0x23, 0x06, 0x09, 0x00, 0x82, 0x60, 0x00,
  0x06, 0x7f, 0x70, 0xb9, 0x41, 0x1f, 0xf4, 0x81, 0x19, 0x8c, 0x18, 0x24,
  0x00, 0x08, 0x82, 0x01, 0x18, 0x80, 0x02, 0x16, 0x07, 0x7e, 0xe0, 0x07,
  0x67, 0x30, 0x62, 0x90, 0x00, 0x20, 0x08, 0x06, 0x06, 0x2b, 0xe4, 0x01,
  0x1f, 0xfc, 0xc1, 0x1c, 0x70, 0x23, 0x06, 0x09, 0x00, 0x82, 0x60, 0x60,
  0xb4, 0x82, 0x1e, 0xf4, 0x01, 0x28, 0xa0, 0x41, 0x37, 0x62, 0x90, 0x00,
  0x20, 0x08, 0x06, 0x86, 0x2b, 0xec, 0x81, 0x1f, 0x84, 0x02, 0x1d, 0x78,
  0x23, 0x06, 0x09, 0x00, 0x82, 0x60, 0x60, 0xbc, 0x02, 0x1f, 0x8c, 0x82,
  0x28, 0xd8, 0xc1, 0x37, 0x62, 0x90, 0x00, 0x20, 0x08, 0x06, 0x06, 0x2c,
  0xf4, 0x01, 0x29, 0x8c, 0xc2, 0x1a, 0x80, 0xc1, 0x88, 0x41, 0x02, 0x80,
  0x20, 0x18, 0x18, 0xb1, 0xe0, 0x07, 0xa5, 0x40, 0x0a, 0x77, 0x10, 0x06,
  0x23, 0x06, 0x09, 0x00, 0x82, 0x60, 0x60, 0xc8, 0xc2, 0x1f, 0x94, 0x42,
  0x29, 0xe4, 0x81, 0x18, 0x8c, 0x18, 0x24, 0x00, 0x08, 0x82, 0x81, 0x31,
  0x0b, 0xa0, 0x60, 0x0a, 0xa6, 0xe0, 0x06, 0x63, 0x30, 0x62, 0x70, 0x00,
  0x20, 0x08, 0x06, 0xdb, 0x2a, 0x7c, 0xc9, 0x29, 0x8c, 0x26, 0x04, 0xc0,
  0x68, 0x82, 0x10, 0x8c, 0x26, 0x0c, 0x82, 0x0d, 0x49, 0x7c, 0x6c, 0x48,
  0xe2, 0x63, 0x43, 0x12, 0x9f, 0x11, 0x83, 0x05, 0x00, 0x41, 0x30, 0x50,
  0x72, 0x21, 0x0d, 0x06, 0x21, 0x18, 0x84, 0x60, 0xc4, 0xc0, 0x00, 0x40,
  0x10, 0x0c, 0x98, 0x5c, 0x40, 0x83, 0xc0, 0x8a, 0x40, 0x3e, 0x56, 0x08,
  0xf2, 0xb1, 0x62, 0x90, 0xcf, 0x88, 0xc1, 0x03, 0x80, 0x20, 0x18, 0x44,
  0xbc, 0xa0, 0x06, 0x99, 0xe5, 0x34, 0x9e, 0x37, 0x0b, 0xb3, 0x00, 0x07,
  0xde, 0x68, 0x42, 0x00, 0x8c, 0x26, 0x08, 0x81, 0x09, 0x64, 0x20, 0x1f,
  0x13, 0xca, 0x40, 0x3e, 0x26, 0x9c, 0x01, 0x7c, 0x4c, 0x40, 0x03, 0xf8,
  0x8c, 0x18, 0x24, 0x00, 0x08, 0x82, 0xc1, 0x24, 0x0e, 0x7a, 0x20, 0x04,
  0x42, 0x60, 0x67, 0x10, 0xc4, 0x67, 0xc4, 0xc0, 0x00, 0x40, 0x10, 0x0c,
  0x18, 0x73, 0xe8, 0x83, 0x60, 0xc4, 0xc0, 0x00, 0x40, 0x10, 0x0c, 0x98,
  0x73, 0xd8, 0x83, 0x6d, 0xc4, 0xc0, 0x00, 0x40, 0x10, 0x0c, 0x18, 0x74,
  0xe0, 0x83, 0x6d, 0xc4, 0xc0, 0x00, 0x40, 0x10, 0x0c, 0x98, 0x74, 0xe8,
  0x83, 0x6d, 0xc4, 0xc0, 0x00, 0x40, 0x10, 0x0c, 0x18, 0x75, 0xf8, 0x03,
  0x6f, 0xc4, 0xc0, 0x00, 0x40, 0x10, 0x0c, 0x98, 0x75, 0x00, 0x05, 0x6f,
  0xc4, 0xc0, 0x00, 0x40, 0x10, 0x0c, 0x18, 0x76, 0x08, 0x05, 0x6f, 0xc4,
  0xc0, 0x00, 0x40, 0x10, 0x0c, 0x98, 0x76, 0x08, 0x05, 0x6f, 0xc4, 0xc0,
  0x00, 0x40, 0x10, 0x0c, 0x18, 0x77, 0x10, 0x05, 0x6f, 0xc4, 0xc0, 0x00,
  0x40, 0x10, 0x0c, 0x98, 0x77, 0x20, 0x05, 0x30, 0x18, 0x31, 0x30, 0x00,
  0x10, 0x04, 0x03, 0x06, 0x1e, 0x4a, 0x01, 0x0c, 0xac, 0x48, 0xe4, 0x63,
  0x47, 0x22, 0x1f, 0x13, 0x82, 0xf8, 0x98, 0xb2, 0xc8, 0xc7, 0x12, 0x47,
  0x3e, 0x26, 0x04, 0xf1, 0x31, 0x06, 0x92, 0x8f, 0x39, 0x90, 0x7c, 0x4c,
  0x08, 0xe2, 0x63, 0xc1, 0x23, 0x1f, 0x2b, 0x1e, 0xf9, 0x98, 0x10, 0xc4,
  0xc7, 0x94, 0x48, 0x3e, 0x56, 0x50, 0xf2, 0x31, 0x21, 0x88, 0x8f, 0x29,
  0x96, 0x7c, 0xcc, 0xb1, 0xe4, 0x63, 0x42, 0x10, 0x1f, 0x6b, 0x34, 0xf9,
  0xd8, 0xc2, 0xc9, 0xc7, 0x84, 0x20, 0x3e, 0xd6, 0x7c, 0xf2, 0x31, 0xca,
  0x93, 0x8f, 0x09, 0x41, 0x7c, 0xcc, 0x0a, 0x03, 0xf9, 0x18, 0x35, 0x06,
  0xf2, 0x31, 0x21, 0x88, 0x8f, 0x41, 0x9f, 0x7c, 0x46, 0x0c, 0x10, 0x00,
  0x04, 0xc1, 0xa0, 0x33, 0x89, 0x5f, 0xf0, 0x90, 0xc0, 0x9e, 0x30, 0x90,
  0xcf, 0x88, 0x01, 0x02, 0x80, 0x20, 0x18, 0x74, 0x28, 0x11, 0x0e, 0x60,
  0x70, 0x04, 0xe6, 0x8c, 0x81, 0x7c, 0x46, 0x0c, 0x10, 0x00, 0x04, 0xc1,
  0xa0, 0x53, 0x89, 0x71, 0x10, 0x03, 0x23, 0x18, 0x31, 0x58, 0x00, 0x10,
  0x04, 0x03, 0x65, 0x26, 0xc6, 0xa1, 0x18, 0x82, 0x62, 0x08, 0x46, 0x0c,
  0x0c, 0x00, 0x04, 0xc1, 0x80, 0x99, 0x09, 0x71, 0x08, 0x0c, 0x33, 0x03,
  0xf9, 0x8c, 0x18, 0x20, 0x00, 0x08, 0x82, 0x41, 0xe7, 0x12, 0xe7, 0x50,
  0x06, 0x50, 0x60, 0x17, 0x1a, 0xc8, 0x67, 0xc4, 0x00, 0x01, 0x40, 0x10,
  0x0c, 0x3a, 0x98, 0x48, 0x87, 0x33, 0x78, 0x02, 0xb3, 0xd4, 0x40, 0x3e,
  0x23, 0x06, 0x08, 0x00, 0x82, 0x60, 0xd0, 0xc9, 0xc4, 0x3a, 0xa4, 0x81,
  0x13, 0x8c, 0x18, 0x2c, 0x00, 0x08, 0x82, 0x81, 0xb2, 0x13, 0xeb, 0x50,
  0x0c, 0x41, 0x31, 0x04, 0x23, 0x06, 0x06, 0x00, 0x82, 0x60, 0xc0, 0xec,
  0x84, 0x3a, 0x04, 0x16, 0x1c, 0xf2, 0x31, 0xc1, 0x90, 0x8f, 0x0d, 0x85,
  0x7c, 0x4c, 0xea, 0x03, 0xf9, 0x58, 0xd0, 0xc8, 0x67, 0xc4, 0x00, 0x01,
  0x40, 0x10, 0x0c, 0x3a, 0x9d, 0x98, 0x07, 0x3f, 0x28, 0x82, 0x11, 0x03,
  0x04, 0x00, 0x41, 0x30, 0xe8, 0x76, 0x82, 0x1e, 0xf8, 0x20, 0x17, 0x02,
  0xa3, 0x42, 0x41, 0x3e, 0x16, 0x44, 0xf2, 0x19, 0x31, 0x40, 0x00, 0x10,
  0x04, 0x83, 0xce, 0x27, 0xee, 0x41, 0x14, 0x90, 0x60, 0xc4, 0x00, 0x01,
  0x40, 0x10, 0x0c, 0xba, 0x9f, 0xc0, 0x07, 0x50, 0xe0, 0x85, 0xc0, 0xac,
  0x52, 0x90, 0x8f, 0x05, 0x95, 0x7c, 0x46, 0x0c, 0x10, 0x00, 0x04, 0xc1,
  0xa0, 0x13, 0x8b, 0x7d, 0x30, 0x85, 0x25, 0x18, 0x31, 0x40, 0x00, 0x10,
  0x04, 0x83, 0x6e, 0x2c, 0xf8, 0x81, 0x14, 0x7e, 0x21, 0x18, 0x31, 0x58,
  0x00, 0x10, 0x04, 0x03, 0x85, 0x2d, 0xf8, 0x21, 0x29, 0x82, 0xa4, 0x08,
  0x46, 0x0c, 0x0c, 0x00, 0x04, 0xc1, 0x80, 0x61, 0x8b, 0x7d, 0x08, 0x2c,
  0x58, 0xe4, 0x63, 0x02, 0x22, 0x1f, 0x1b, 0x0a, 0xf9, 0x8c, 0x18, 0x3c,
  0x00, 0x08, 0x82, 0x41, 0xf4, 0x16, 0xfd, 0xb0, 0x0e, 0xe9, 0x10, 0x0e,
  0xe0, 0x10, 0x0f, 0xf1, 0x60, 0x16, 0x66, 0x31, 0x12, 0xf1, 0x30, 0x9a,
  0x10, 0x00, 0xa3, 0x09, 0x42, 0x30, 0x9a, 0x30, 0x08, 0x23, 0x06, 0x0f,
  0x00, 0x82, 0x60, 0x10, 0xcd, 0x45, 0x48, 0xc4, 0x43, 0x3b, 0x94, 0x03,
  0x39, 0xd4, 0x43, 0x3d, 0xa8, 0x85, 0x5a, 0x9c, 0x44, 0x3d, 0x8c, 0x26,
  0x04, 0xc0, 0x68, 0x82, 0x10, 0x8c, 0x26, 0x0c, 0xc2, 0x88, 0xc1, 0x02,
  0x80, 0x20, 0x18, 0x28, 0x79, 0x91, 0x12, 0x8b, 0x92, 0xf8, 0x42, 0x2f,
  0xf0, 0xc2, 0x88, 0x81, 0x01, 0x80, 0x20, 0x18, 0x30, 0x79, 0x61, 0x16,
  0x81, 0x11, 0x84, 0x7c, 0x8c, 0x50, 0xe4, 0x63, 0x85, 0x22, 0x1f, 0x33,
  0x14, 0xf9, 0x58, 0x33, 0xc4, 0xc7, 0x9a, 0x21, 0x3e, 0xd6, 0x0c, 0xf1,
  0xb1, 0x81, 0x91, 0x8f, 0x0d, 0x8d, 0x7c, 0x6c, 0x70, 0xe4, 0x63, 0x93,
  0x4a, 0xc0, 0xc7, 0xa6, 0x95, 0x80, 0x8f, 0x4d, 0x2c, 0x01, 0x1f, 0x83,
  0x06, 0xf9, 0x58, 0x34, 0xc8, 0xc7, 0xa4, 0x41, 0x3e, 0x36, 0xc4, 0x04,
  0x7c, 0x6c, 0x90, 0x09, 0xf8, 0xd8, 0x30, 0x13, 0xf0, 0xb1, 0x01, 0x93,
  0x8f, 0x0d, 0x99, 0x7c, 0x6c, 0xd0, 0xe4, 0x33, 0x4b, 0x10, 0x0c, 0x54,
  0x0c, 0x70, 0x02, 0x84, 0x46, 0x30, 0x50, 0x31, 0xc8, 0x09, 0x10, 0x1a,
  0xc1, 0x40, 0xc5, 0x40, 0x27, 0x40, 0x68, 0x04, 0x03, 0x15, 0x84, 0xcc,
  0x00, 0xa1, 0x11, 0x58, 0xc0, 0x16, 0x30, 0x18, 0x31, 0x38, 0x00, 0x10,
  0x04, 0x83, 0xed, 0x35, 0xc6, 0xa2, 0x25, 0x82, 0xd1, 0x84, 0x00, 0x18,
  0x4d, 0x10, 0x82, 0xd1, 0x84, 0x41, 0x30, 0x9e, 0x18, 0xe2, 0x63, 0x3d,
  0x31, 0xc4, 0xc7, 0x7c, 0x62, 0x88, 0xcf, 0x88, 0xc1, 0x02, 0x80, 0x20,
  0x18, 0x28, 0xbd, 0xd1, 0x16, 0x83, 0x10, 0x0c, 0x42, 0x30, 0x62, 0x60,
  0x00, 0x20, 0x08, 0x06, 0x4c, 0x6f, 0xb0, 0x45, 0x60, 0x41, 0x21, 0x1f,
  0x13, 0x0a, 0xf9, 0xd8, 0x50, 0xc8, 0xc7, 0x86, 0x93, 0x80, 0x8f, 0x0d,
  0x27, 0x01, 0x1f, 0x1b, 0x4e, 0x02, 0x3e, 0x23, 0x06, 0x0b, 0x00, 0x82,
  0x60, 0xa0, 0x94, 0x47, 0x5d, 0x0c, 0x42, 0x30, 0x08, 0xc1, 0x88, 0x81,
  0x01, 0x80, 0x20, 0x18, 0x30, 0xe5, 0x41, 0x17, 0x81, 0x15, 0x81, 0x7c,
  0xac, 0x10, 0xe4, 0x63, 0xc5, 0x20, 0x9f, 0x11, 0x83, 0x05, 0x00, 0x41,
  0x30, 0x50, 0xd4, 0x43, 0x2f, 0xf8, 0x60, 0x0f, 0xf4, 0x60, 0x51, 0x92,
  0x11, 0x03, 0x03, 0x00, 0x41, 0x30, 0x60, 0xd4, 0xe3, 0x36, 0x82, 0x11,
  0x83, 0x05, 0x00, 0x41, 0x30, 0x50, 0xd8, 0x83, 0x2f, 0x1a, 0x66, 0x29,
  0x88, 0x61, 0xc4, 0xc0, 0x00, 0x40, 0x10, 0x0c, 0x18, 0xf6, 0xc8, 0x8d,
  0x60, 0xc4, 0x60, 0x01, 0x40, 0x10, 0x0c, 0x14, 0xf7, 0xf0, 0x0b, 0x50,
  0xf8, 0x03, 0x3f, 0x38, 0x8c, 0x62, 0xc4, 0xc0, 0x00, 0x40, 0x10, 0x0c,
  0x18, 0xf7, 0xd8, 0x8d, 0xc0, 0xf2, 0x60, 0x2e, 0xe4, 0x63, 0x04, 0x21,
  0x1f, 0x0b, 0x04, 0xf9, 0x58, 0xb0, 0x17, 0xf0, 0xb1, 0xba, 0x48, 0xe2,
  0x63, 0x41, 0x20, 0x1f, 0x0b, 0x02, 0xf9, 0x58, 0x30, 0xc8, 0xc7, 0x82,
  0x42, 0x3e, 0x16, 0xe8, 0x05, 0x7c, 0x6c, 0x2f, 0x40, 0x21, 0x3e, 0x16,
  0x04, 0xf2, 0xb1, 0x20, 0x90, 0x8f, 0x05, 0x83, 0x7c, 0x2c, 0x58, 0xe4,
  0x63, 0x01, 0x68, 0xc0, 0xc7, 0x8e, 0x40, 0x3e, 0x66, 0x0a, 0xa6, 0x20,
  0x1f, 0x0b, 0x4c, 0x03, 0x3e, 0x46, 0x51, 0xf2, 0xb1, 0x40, 0x90, 0x8f,
  0x05, 0xa6, 0x01, 0x1f, 0x0b, 0x02, 0xf9, 0x58, 0x00, 0x1b, 0xf2, 0x19,
  0x31, 0x38, 0x00, 0x10, 0x04, 0x83, 0x8a, 0x44, 0xc0, 0x43, 0x36, 0x02,
  0x43, 0x02, 0xfa, 0xd8, 0x6a, 0xf0, 0x41, 0x7c, 0x8c, 0x35, 0xf8, 0x20,
  0x3e, 0xd6, 0x1a, 0x7c, 0x10, 0x1f, 0x73, 0x0d, 0x30, 0x88, 0x8f, 0x05,
  0x81, 0x7c, 0x2c, 0x08, 0xe4, 0x63, 0xc1, 0x20, 0x1f, 0x0b, 0x0e, 0xf9,
  0x98, 0x70, 0xc8, 0xc7, 0x86, 0x43, 0x3e, 0x36, 0x98, 0x02, 0x7c, 0x6c,
  0x30, 0x05, 0xf8, 0xd8, 0x60, 0x0a, 0xf0, 0x31, 0xdc, 0x30, 0x83, 0xf8,
  0xd8, 0x35, 0x1e, 0xf2, 0xb1, 0x40, 0x90, 0x8f, 0x05, 0x69, 0x00, 0x1f,
  0xe3, 0x8d, 0x80, 0x3e, 0x16, 0x4c, 0xf2, 0xb1, 0x20, 0x91, 0x8f, 0x09,
  0x89, 0x7c, 0x6c, 0x48, 0xe4, 0x63, 0xac, 0x90, 0x1f, 0x30, 0x18, 0x31,
  0x38, 0x00, 0x10, 0x04, 0x83, 0x4d, 0x47, 0xdc, 0x03, 0x37, 0x82, 0xd1,
  0x84, 0x00, 0x18, 0x4d, 0x10, 0x82, 0xd1, 0x84, 0x41, 0xb0, 0x41, 0x0f,
  0xe4, 0x63, 0xc3, 0x1e, 0xc8, 0xc7, 0x06, 0x3e, 0x90, 0x8f, 0xa1, 0x81,
  0x39, 0xc8, 0xc7, 0xd2, 0xc0, 0x1c, 0xe4, 0x63, 0x6a, 0x60, 0x0e, 0xf2,
  0x31, 0x67, 0x80, 0x8f, 0x39, 0x03, 0x7c, 0xcc, 0x19, 0xe0, 0x63, 0xc9,
  0x20, 0x1f, 0x4b, 0x06, 0xf9, 0x58, 0x32, 0xc8, 0xc7, 0x06, 0x70, 0x80,
  0x8f, 0x0d, 0xe0, 0x00, 0x1f, 0x1b, 0xc0, 0x01, 0x3e, 0x06, 0x0e, 0x6a,
  0x02, 0x83, 0xe1, 0x86, 0xa0, 0x4c, 0xc0, 0x60, 0x96, 0x41, 0x08, 0x82,
  0xd1, 0x84, 0x92, 0x18, 0x46, 0x0c, 0x1e, 0x00, 0x04, 0xc1, 0x20, 0xaa,
  0x93, 0x11, 0xb1, 0x0f, 0xf8, 0x48, 0x09, 0x94, 0x38, 0x89, 0xfb, 0x48,
  0x91, 0x14, 0x49, 0x91, 0xfb, 0x18, 0x4d, 0x08, 0x80, 0xd1, 0x04, 0x21,
  0x18, 0x4d, 0x18, 0x04, 0x1b, 0xf2, 0x41, 0x3e, 0x36, 0xe4, 0x83, 0x7c,
  0x6c, 0xc8, 0x07, 0xf9, 0xd8, 0xd0, 0xc0, 0xc7, 0x86, 0x06, 0x3e, 0x36,
  0x34, 0xf0, 0x19, 0x31, 0x38, 0x00, 0x10, 0x04, 0x03, 0x6c, 0x4f, 0x5c,
  0x04, 0x3f, 0x76, 0x64, 0x34, 0x21, 0x10, 0x2e, 0x18, 0xcc, 0x82, 0x96,
  0x90, 0x8f, 0x9d, 0x88, 0x7a, 0xc4, 0xc7, 0x50, 0x44, 0x3d, 0xe2, 0x63,
  0x29, 0xa2, 0x1e, 0xf1, 0x19, 0x31, 0x58, 0x00, 0x10, 0x04, 0x03, 0x05,
  0x55, 0x70, 0x64, 0x10, 0x02, 0x9d, 0xc8, 0x09, 0x9c, 0xb0, 0x80, 0x45,
  0xe4, 0x63, 0x01, 0x4f, 0xc8, 0xc7, 0x04, 0x9e, 0x90, 0x8f, 0x0d, 0x3c,
  0x21, 0x1f, 0x43, 0x86, 0xf8, 0x18, 0x32, 0xc4, 0xc7, 0x90, 0x21, 0x3e,
  0x23, 0x06, 0x0f, 0x00, 0x82, 0x60, 0x10, 0xad, 0xca, 0x9a, 0xb8, 0x48,
  0x8a, 0x0c, 0x42, 0x00, 0x23, 0x62, 0x22, 0x26, 0x62, 0xc2, 0x8c, 0x26,
  0x04, 0xc0, 0x68, 0x82, 0x10, 0x8c, 0x26, 0x0c, 0x82, 0x0d, 0x26, 0x21,
  0x1f, 0x1b, 0x4c, 0x42, 0x3e, 0x36, 0x98, 0x84, 0x7c, 0x2c, 0x1b, 0xe0,
  0x63, 0xd9, 0x00, 0x1f, 0xcb, 0x06, 0xf8, 0x8c, 0x18, 0x3c, 0x00, 0x08,
  0x82, 0x41, 0x84, 0x2b, 0x66, 0x72, 0x23, 0x32, 0xa2, 0x22, 0x29, 0xa2,
  0x23, 0x3a, 0xf2, 0x2a, 0xaf, 0xc2, 0x26, 0x3a, 0x32, 0x9a, 0x10, 0x00,
  0xa3, 0x09, 0x42, 0x30, 0x9a, 0x30, 0x08, 0x76, 0x0c, 0xf0, 0xb1, 0x63,
  0x80, 0x8f, 0x1d, 0x03, 0x7c, 0x46, 0x0c, 0x0e, 0x00, 0x04, 0xc1, 0x60,
  0xd3, 0x15, 0x37, 0xc1, 0x91, 0x3e, 0x19, 0x4d, 0x08, 0x06, 0x0b, 0xda,
  0x40, 0x3e, 0x23, 0x06, 0x09, 0x00, 0x82, 0x60, 0x80, 0x94, 0x8b, 0xac,
  0xe4, 0x4a, 0xae, 0xb4, 0x8a, 0x31, 0x62, 0x90, 0x00, 0x20, 0x08, 0x06,
  0x48, 0xb9, 0xc8, 0x4a, 0xae, 0xe4, 0x4a, 0xa8, 0x14, 0x23, 0x06, 0x09,
  0x00, 0x82, 0x60, 0x80, 0x94, 0x8b, 0xac, 0xe4, 0x4a, 0xae, 0xb0, 0x0a,
  0x31, 0x62, 0x90, 0x00, 0x20, 0x08, 0x06, 0x48, 0xb9, 0xc8, 0x4a, 0xae,
  0xe4, 0x8a, 0xaa, 0x04, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x82, 0x82, 0x0d, 0x82, 0x36, 0xa8, 0x38, 0x7b, 0xa6, 0x31, 0x23, 0x8d,
  0x20, 0x64, 0xac, 0xee, 0x17, 0x00, 0x01, 0x00, 0x29, 0x98, 0x19, 0x00,
  0x78, 0x01, 0xed, 0x59, 0x5d, 0x8c, 0x5b, 0x47, 0x15, 0x9e, 0xb9, 0x77,
  0x7c, 0x7f, 0x76, 0xc7, 0xe7, 0xfa, 0x27, 0x5e, 0xdb, 0xd7, 0x4e, 0xbc,
  0xde, 0x9f, 0x6c, 0xd6, 0xbb, 0xd9, 0xb5, 0x77, 0xed, 0xfd, 0x6b, 0xb3,
  0x7f, 0xdd, 0xa6, 0xe5, 0x47, 0x85, 0x87, 0x6e, 0x84, 0x42, 0x37, 0xaa,
  0xaa, 0x12, 0xa4, 0x08, 0xaa, 0x12, 0x89, 0x20, 0x15, 0xc9, 0x2c, 0xcb,
  0x36, 0x2d, 0x90, 0x56, 0xe1, 0x2d, 0x0f, 0x15, 0x4f, 0x11, 0x0a, 0xa8,
  0x4f, 0x3c, 0x20, 0x90, 0xa8, 0xe3, 0xa6, 0x28, 0xb2, 0x56, 0xa5, 0x42,
  0x26, 0x12, 0x95, 0x78, 0xe5, 0x01, 0x5e, 0x50, 0x14, 0x5e, 0x40, 0x42,
  0x35, 0xdf, 0x19, 0xc7, 0xec, 0x2e, 0x44, 0xf0, 0x52, 0x24, 0x10, 0x7b,
  0xa4, 0x73, 0xcf, 0x9c, 0x33, 0x73, 0x66, 0xce, 0xdf, 0xcc, 0xf5, 0x1d,
  0xdf, 0xc8, 0x0a, 0x03, 0xaf, 0xaa, 0x4f, 0xfd, 0x89, 0xe9, 0xb9, 0x2f,
  0x7f, 0xf5, 0x95, 0x2f, 0xc5, 0x85, 0x88, 0xa0, 0x2d, 0x81, 0x4c, 0x19,
  0x6e, 0x44, 0xf9, 0x29, 0xc4, 0xcf, 0x33, 0xfc, 0x14, 0xc2, 0xe5, 0xc7,
  0x43, 0x18, 0x02, 0x3e, 0x0d, 0x64, 0x58, 0xe5, 0xc7, 0x43, 0x60, 0xfd,
  0xd9, 0xd9, 0xd9, 0x65, 0xe0, 0x0a, 0x9a, 0xff, 0x04, 0xac, 0xf7, 0x35,
  0x0c, 0x7a, 0x91, 0x07, 0x02, 0x92, 0xfc, 0x78, 0x08, 0xbc, 0x9c, 0x03,
  0x64, 0x60, 0x1a, 0x00, 0x19, 0x1e, 0x0e, 0x3d, 0x04, 0x3e, 0x90, 0xed,
  0x54, 0xc0, 0x1e, 0xf4, 0xec, 0x73, 0x3b, 0x3f, 0x79, 0x1c, 0x64, 0x03,
  0x28, 0xda, 0x37, 0x9e, 0x5c, 0x7e, 0x20, 0x13, 0x67, 0x7e, 0x3c, 0xfd,
  0x97, 0x25, 0xe6, 0xf3, 0x4f, 0xae, 0x3c, 0xd2, 0xae, 0xff, 0x15, 0x78,
  0x54, 0x2c, 0x7a, 0x79, 0x62, 0xb8, 0xc5, 0x81, 0xf9, 0x37, 0xd0, 0x8b,
  0xf9, 0x6a, 0x9a, 0x9f, 0xfb, 0xb9, 0x6c, 0x02, 0x1f, 0x35, 0x3f, 0x43,
  0x07, 0xc0, 0xf4, 0x51, 0x60, 0x03, 0x1d, 0x61, 0x6f, 0x83, 0x08, 0x47,
  0x16, 0xb6, 0x85, 0x07, 0x6a, 0x8d, 0x6d, 0x8b, 0x18, 0x4b, 0xfe, 0x3f,
  0xe0, 0x04, 0x3f, 0x00, 0x1c, 0x0b, 0x0b, 0xc8, 0xae, 0xf7, 0xea, 0x97,
  0xa1, 0x57, 0xa7, 0x5f, 0xe0, 0x4e, 0xb1, 0x7d, 0x9b, 0xf1, 0x7a, 0x46,
  0xfc, 0x99, 0xb9, 0x1e, 0x2f, 0xc1, 0x77, 0xc7, 0x75, 0x79, 0x9b, 0x79,
  0x9e, 0xf0, 0x20, 0x8f, 0xa2, 0x57, 0xae, 0xb8, 0x60, 0xf5, 0x5b, 0x17,
  0x82, 0x3c, 0xf4, 0x91, 0x30, 0xf0, 0xcf, 0x81, 0x7f, 0xee, 0x00, 0x7f,
  0x1e, 0xfc, 0xf9, 0x03, 0xfc, 0xf3, 0xe0, 0x9f, 0x3f, 0xc0, 0xbf, 0x00,
  0xfe, 0x85, 0x1e, 0xdf, 0x9b, 0x3f, 0x30, 0xeb, 0x59, 0x91, 0x7f, 0x95,
  0xeb, 0xff, 0x16, 0x38, 0xb2, 0xf1, 0xe3, 0x81, 0x23, 0x1b, 0x3f, 0x1e,
  0x38, 0xb2, 0xf1, 0x08, 0x8e, 0xe0, 0x08, 0x8e, 0xe0, 0x08, 0xfe, 0xd3,
  0x50, 0x57, 0xbf, 0x68, 0xd4, 0xfb, 0x3e, 0x6a, 0xf8, 0xf6, 0x4f, 0x1b,
  0xae, 0x7d, 0xbd, 0x11, 0xb1, 0x6f, 0x35, 0x6c, 0x7b, 0xa7, 0xb1, 0x6d,
  0x7f, 0x0b, 0xf8, 0x2a, 0xf0, 0x87, 0xc0, 0xd7, 0x80, 0xdf, 0x03, 0x7e,
  0x1b, 0xf8, 0xb3, 0x86, 0xb6, 0xdf, 0x68, 0xf4, 0xdb, 0xd7, 0x1a, 0xc2,
  0xff, 0x55, 0x53, 0xc4, 0x5b, 0x4d, 0xe1, 0xbe, 0xdf, 0x14, 0xe3, 0xf7,
  0x9a, 0x22, 0xf2, 0x61, 0x73, 0xdb, 0xfe, 0x6e, 0x43, 0xd8, 0xcd, 0xa6,
  0x58, 0x7c, 0xab, 0x19, 0xd8, 0x7f, 0x6d, 0x08, 0x71, 0xaa, 0x25, 0xe4,
  0x64, 0x4b, 0x8a, 0xf1, 0x96, 0x94, 0xa7, 0x5b, 0xa2, 0xff, 0xfb, 0xcd,
  0x6f, 0x88, 0x6b, 0xb7, 0xf1, 0x13, 0xff, 0x7e, 0x9f, 0xf3, 0xbe, 0x14,
  0xde, 0x60, 0x4b, 0xf8, 0x23, 0x2d, 0xd1, 0x57, 0x6e, 0x09, 0x55, 0x6d,
  0x89, 0xc8, 0x42, 0x0b, 0x1f, 0x00, 0x2d, 0x19, 0x59, 0x6c, 0x49, 0x47,
  0xb6, 0xa4, 0xaa, 0xb5, 0xa2, 0x9d, 0xb5, 0xd7, 0xf9, 0x57, 0xb0, 0xb6,
  0x9b, 0x8d, 0x77, 0xed, 0x3b, 0x8d, 0x8e, 0xfd, 0x5e, 0xe3, 0xed, 0xcf,
  0xe0, 0xc7, 0x6f, 0x80, 0x39, 0xac, 0xa6, 0x14, 0x6b, 0x37, 0xee, 0x48,
  0xaf, 0xd8, 0x92, 0xfe, 0x68, 0x4b, 0xf6, 0x55, 0x5a, 0x62, 0xfb, 0xde,
  0x87, 0xf8, 0x8c, 0x91, 0x9b, 0x5d, 0x1a, 0x30, 0x4f, 0x98, 0x80, 0x79,
  0xd0, 0x38, 0xf3, 0x70, 0x3d, 0xc1, 0x3c, 0x68, 0xf2, 0x47, 0xa0, 0x18,
  0x77, 0x8c, 0x29, 0xf8, 0x01, 0xa6, 0x18, 0x97, 0xe2, 0x71, 0x7d, 0x42,
  0xa4, 0x99, 0xf6, 0x0b, 0x91, 0xe5, 0xf1, 0xa0, 0x21, 0xf7, 0x43, 0x9e,
  0x63, 0x1e, 0x34, 0xc3, 0x3c, 0xe4, 0xf9, 0xd5, 0x35, 0xf1, 0x1e, 0xfb,
  0x56, 0xc9, 0xe7, 0xbd, 0xc0, 0x3e, 0xe1, 0xc5, 0x8b, 0x43, 0x5e, 0x72,
  0xf4, 0xa4, 0x77, 0xcc, 0xb6, 0xbc, 0x81, 0xd1, 0x11, 0x2f, 0x55, 0x1c,
  0xf4, 0xc2, 0xd9, 0x92, 0x97, 0x28, 0x54, 0x29, 0x37, 0x3d, 0xe9, 0xc9,
  0xe1, 0x39, 0x2a, 0x87, 0xa1, 0x47, 0xc7, 0x97, 0x28, 0x33, 0x7d, 0xca,
  0xcb, 0xcf, 0x4e, 0x79, 0xb1, 0xb1, 0x19, 0x0a, 0xc5, 0x76, 0x5b, 0x8e,
  0x5d, 0xda, 0xcd, 0x81, 0xc6, 0x0a, 0x2f, 0xed, 0xce, 0x08, 0xe1, 0x45,
  0x73, 0x4b, 0x3a, 0x03, 0x5e, 0xc8, 0x2b, 0x2a, 0x0b, 0x9a, 0x18, 0xbe,
  0xb8, 0x1b, 0x8e, 0x2e, 0x50, 0xce, 0x5e, 0xa2, 0x6c, 0xf1, 0x71, 0x8a,
  0x41, 0x96, 0x2b, 0x5e, 0xde, 0x4d, 0x80, 0x66, 0x47, 0xaf, 0xec, 0x66,
  0xc7, 0xd0, 0x37, 0xbc, 0x4c, 0x61, 0x61, 0x89, 0x10, 0x80, 0x76, 0xae,
  0x80, 0xbe, 0xf1, 0x39, 0x92, 0x68, 0x87, 0xf6, 0x2b, 0xbb, 0x89, 0x89,
  0x11, 0x42, 0x20, 0xda, 0xd9, 0xe1, 0x2b, 0xbb, 0xb1, 0xf1, 0x19, 0x92,
  0xe3, 0xa7, 0x48, 0x4e, 0x58, 0x94, 0xe4, 0xfe, 0xb1, 0xfa, 0x6e, 0x6c,
  0x62, 0x90, 0x06, 0x0a, 0x73, 0x9a, 0x75, 0xd3, 0x85, 0x4f, 0xaa, 0x81,
  0xe1, 0x53, 0x3a, 0x3d, 0x6c, 0xe9, 0xf4, 0xd8, 0xa0, 0x0e, 0x0a, 0x43,
  0x34, 0x30, 0x36, 0xa3, 0x63, 0xc5, 0x21, 0x9d, 0x9b, 0x9f, 0x24, 0x69,
  0x0f, 0x69, 0xb3, 0xee, 0xec, 0x79, 0xf5, 0x95, 0xe0, 0xda, 0x6d, 0x57,
  0xec, 0xb4, 0xdd, 0x3f, 0xfc, 0xd2, 0x8e, 0x6f, 0x0d, 0xd5, 0x8f, 0x8d,
  0x8f, 0x68, 0x37, 0xa8, 0x92, 0x03, 0x99, 0x03, 0x99, 0x13, 0xad, 0xea,
  0xc4, 0xd6, 0x48, 0xfd, 0x41, 0xb5, 0xea, 0x85, 0x5f, 0xac, 0xd6, 0xe3,
  0xc5, 0x41, 0x8a, 0x17, 0x4e, 0x50, 0xdc, 0xb6, 0x28, 0x1b, 0x1d, 0xa2,
  0xf8, 0xe8, 0x90, 0xf1, 0xc5, 0x2d, 0x9e, 0x55, 0x61, 0x7c, 0x50, 0xe7,
  0xa2, 0x31, 0xf2, 0x46, 0x63, 0x74, 0x2c, 0xaa, 0xc9, 0x2d, 0xc4, 0xb4,
  0x33, 0xaa, 0x8d, 0x0f, 0xae, 0x1d, 0x2a, 0xb6, 0x2d, 0x4c, 0x0e, 0x29,
  0xe1, 0xa2, 0x0e, 0xdc, 0x3d, 0x19, 0x14, 0x34, 0x85, 0x59, 0x0b, 0x76,
  0x69, 0x2d, 0x6d, 0xad, 0x9d, 0x2d, 0x5d, 0x4f, 0x0a, 0x6a, 0x23, 0xa7,
  0xf8, 0x4e, 0xd5, 0x6d, 0x89, 0x92, 0xc9, 0x6c, 0x95, 0xeb, 0x0e, 0xd6,
  0x74, 0xb0, 0xa6, 0x63, 0x6b, 0xf8, 0xab, 0xdb, 0x16, 0x3e, 0x94, 0xa2,
  0x95, 0x0c, 0x51, 0x25, 0x24, 0x51, 0xc9, 0x53, 0x90, 0x1b, 0x42, 0xfa,
  0x11, 0xfb, 0xec, 0x59, 0xe5, 0x1c, 0x17, 0x5a, 0x78, 0x5e, 0xfb, 0x01,
  0xbe, 0xc4, 0x3a, 0xd8, 0x13, 0x7d, 0xbf, 0x19, 0x3e, 0xf3, 0x32, 0x7c,
  0x64, 0x1b, 0x7c, 0x97, 0x46, 0x64, 0x30, 0x42, 0x1d, 0x65, 0x39, 0x90,
  0xbf, 0x63, 0xf1, 0x5c, 0x49, 0x6b, 0xd5, 0x0a, 0x4e, 0x51, 0x72, 0x4b,
  0xd5, 0xcd, 0x18, 0x9b, 0x44, 0xc7, 0x71, 0x4c, 0xbf, 0x0c, 0x4e, 0xd2,
  0x00, 0x64, 0x96, 0x5d, 0xdd, 0x40, 0x71, 0xb5, 0x2d, 0x59, 0xde, 0x18,
  0x38, 0x5d, 0x26, 0x14, 0x58, 0xdb, 0x8a, 0x2c, 0x6c, 0xa4, 0x26, 0xca,
  0x3a, 0x3d, 0x5d, 0xd6, 0x6c, 0x63, 0x08, 0xbb, 0x2d, 0x5b, 0xac, 0x66,
  0x99, 0x4a, 0xb1, 0x6a, 0x31, 0x8d, 0x88, 0xd5, 0x54, 0xa5, 0x44, 0x03,
  0x95, 0x49, 0x4a, 0x57, 0xa6, 0x28, 0xa8, 0x95, 0x29, 0x36, 0x5b, 0xd6,
  0x4e, 0xa4, 0xac, 0x73, 0x6c, 0x63, 0xd9, 0x12, 0xb9, 0xf9, 0x05, 0x0a,
  0x4f, 0x57, 0x29, 0xbf, 0xb8, 0x40, 0x5c, 0x27, 0xd9, 0x89, 0x4b, 0x2a,
  0x38, 0x3d, 0x49, 0xf9, 0xf9, 0x39, 0x12, 0x72, 0x81, 0x2c, 0x5e, 0x6b,
  0xfa, 0xa2, 0xe2, 0xf5, 0x63, 0x13, 0xe7, 0x15, 0x8f, 0x4b, 0x79, 0xba,
  0x9d, 0x8e, 0x5a, 0x22, 0xeb, 0x0d, 0x62, 0x0d, 0x4b, 0xe4, 0xa5, 0x20,
  0x2f, 0x0e, 0xfd, 0xd9, 0x49, 0xd0, 0x29, 0x84, 0x60, 0xbb, 0x9d, 0x5f,
  0xfc, 0xc0, 0x4e, 0x4d, 0x94, 0x88, 0xf5, 0x52, 0x8f, 0xed, 0xd9, 0x5c,
  0xa3, 0x03, 0xd3, 0x77, 0x8d, 0x8c, 0xeb, 0x34, 0x57, 0xeb, 0xca, 0x04,
  0x68, 0xa7, 0x54, 0xa2, 0xdf, 0x06, 0x9f, 0x58, 0xcd, 0xd5, 0xd8, 0x8e,
  0x39, 0x02, 0x3f, 0xf8, 0xce, 0xfc, 0xd5, 0x9a, 0xb1, 0x67, 0x76, 0x6f,
  0xb8, 0x33, 0xb7, 0xc0, 0xf1, 0x5d, 0x4e, 0x6d, 0x96, 0xea, 0xf9, 0xd9,
  0x49, 0x6d, 0xb1, 0xed, 0xca, 0x12, 0x03, 0x9b, 0x93, 0x75, 0x2b, 0x32,
  0x83, 0x75, 0x67, 0x28, 0x87, 0x79, 0x39, 0x7e, 0x32, 0xd8, 0x1b, 0xce,
  0x46, 0x14, 0x0d, 0x80, 0xb7, 0xc1, 0x23, 0xe6, 0x82, 0xe7, 0xb1, 0xec,
  0x67, 0x54, 0x38, 0x3e, 0x49, 0x29, 0xe8, 0xdb, 0xc1, 0x8c, 0xe9, 0xb3,
  0x31, 0xf6, 0x04, 0xf7, 0xb9, 0x17, 0x55, 0x38, 0xba, 0x4c, 0xdc, 0x4e,
  0x9d, 0xa9, 0xab, 0x02, 0xa8, 0xef, 0x27, 0x46, 0x3a, 0x9e, 0x67, 0xf2,
  0xa0, 0x0c, 0x4f, 0x42, 0x05, 0xab, 0xc4, 0x6d, 0x05, 0xbd, 0x42, 0xb0,
  0xdc, 0x8d, 0x8d, 0xbf, 0xa3, 0xc2, 0x15, 0x32, 0xed, 0x54, 0xe4, 0x04,
  0x3e, 0x6f, 0xa9, 0xad, 0x3c, 0xbe, 0x0f, 0xd2, 0xed, 0x08, 0x36, 0x3b,
  0x53, 0x47, 0x83, 0x6e, 0x51, 0xdd, 0x47, 0x9f, 0xeb, 0x8b, 0x55, 0x3f,
  0x22, 0xba, 0xed, 0x28, 0xf2, 0x03, 0x3d, 0xb7, 0xbf, 0xba, 0xe1, 0x47,
  0x2c, 0xc8, 0xd0, 0xf6, 0xcb, 0xc8, 0x6b, 0x95, 0x8a, 0xdc, 0x8e, 0x2e,
  0x6c, 0xf8, 0xc9, 0xaa, 0x2e, 0x3e, 0x51, 0xd5, 0xe1, 0x56, 0xb5, 0xce,
  0x73, 0xbb, 0xfd, 0xd0, 0xa9, 0x95, 0xc8, 0xaf, 0x25, 0xa8, 0x88, 0x78,
  0xb9, 0x13, 0xeb, 0x14, 0xc0, 0x57, 0x91, 0x58, 0xd7, 0xac, 0x1f, 0x4b,
  0x9e, 0x53, 0x3e, 0xf2, 0x13, 0x22, 0x3f, 0x7e, 0x32, 0x41, 0x2c, 0xf3,
  0x11, 0x7f, 0x6e, 0xf3, 0x5a, 0xb2, 0x7a, 0x55, 0x05, 0x01, 0x51, 0x27,
  0x91, 0x30, 0x31, 0x0f, 0x91, 0xc3, 0xd4, 0x04, 0x0a, 0x7d, 0x90, 0x34,
  0x64, 0x26, 0xee, 0x61, 0x6d, 0xdd, 0x9c, 0x29, 0x61, 0x6d, 0x6f, 0xd8,
  0xdf, 0x4c, 0xd4, 0xa5, 0x26, 0xcd, 0x7c, 0xbe, 0x76, 0x55, 0xe5, 0x39,
  0xf6, 0xf0, 0x96, 0x6b, 0xb0, 0x88, 0x7c, 0xe6, 0x17, 0xd7, 0xa9, 0xf8,
  0xc4, 0x3a, 0x6a, 0x02, 0xf2, 0x92, 0x25, 0xc2, 0xcd, 0x6a, 0x3d, 0x87,
  0xb5, 0x8a, 0x5c, 0x27, 0x13, 0x73, 0x94, 0x67, 0xbd, 0xe9, 0x3d, 0x9b,
  0xc7, 0x0b, 0xd0, 0x1c, 0xea, 0x2a, 0x3f, 0x3d, 0x65, 0xf2, 0xf5, 0xd9,
  0xb5, 0xe6, 0x9d, 0x10, 0x63, 0x79, 0xee, 0x14, 0xf2, 0x93, 0xc6, 0x79,
  0xc3, 0x6d, 0xbf, 0xf6, 0x92, 0xe2, 0x1a, 0x49, 0x21, 0x2f, 0x69, 0x9c,
  0x59, 0x6c, 0x77, 0x0a, 0x71, 0x4e, 0xaf, 0x40, 0x0f, 0x6d, 0x7f, 0xfe,
  0xb2, 0x32, 0x7e, 0x4d, 0x5c, 0x50, 0x29, 0xd8, 0x9f, 0xa9, 0x60, 0x27,
  0x95, 0xa6, 0xc8, 0x45, 0xdb, 0x0d, 0x60, 0x1b, 0xea, 0xd7, 0xbc, 0x33,
  0x68, 0x8a, 0xd2, 0xb5, 0x49, 0x1d, 0x45, 0x1f, 0xa1, 0xc6, 0x52, 0xa8,
  0x8b, 0x14, 0x62, 0xe8, 0xc5, 0xf8, 0xb0, 0xd6, 0x6d, 0x3f, 0xd1, 0xa5,
  0x7d, 0xc7, 0x40, 0xb7, 0x4a, 0x75, 0x49, 0x65, 0xb2, 0x88, 0x28, 0x7d,
  0x06, 0x73, 0x25, 0x95, 0x89, 0x67, 0x2a, 0x59, 0xdd, 0xc8, 0xcc, 0x4f,
  0x69, 0x97, 0xdb, 0xf1, 0x32, 0xf2, 0x51, 0x26, 0x37, 0x28, 0x9b, 0x78,
  0xa4, 0x52, 0x0b, 0x1b, 0x61, 0xad, 0xbb, 0xff, 0x8e, 0x63, 0xde, 0x54,
  0x5c, 0xac, 0xe6, 0x99, 0xa6, 0x38, 0xaf, 0xa0, 0x49, 0xe4, 0xba, 0x92,
  0x20, 0xb7, 0x42, 0x14, 0x56, 0xca, 0x84, 0xb9, 0xe8, 0x78, 0x50, 0xd5,
  0x01, 0x7c, 0xe6, 0xf9, 0x62, 0xc1, 0x49, 0xe5, 0xc5, 0xe7, 0x4c, 0x8e,
  0xf2, 0x95, 0x4b, 0xca, 0x45, 0xde, 0x32, 0xc8, 0x5b, 0x06, 0x7e, 0xf8,
  0x49, 0xde, 0x9b, 0x73, 0x26, 0xb7, 0xb1, 0xc7, 0x4a, 0x3a, 0x53, 0xa9,
  0x12, 0x9f, 0xe7, 0x99, 0x0a, 0xef, 0x07, 0xec, 0x4d, 0xec, 0x07, 0xe6,
  0x73, 0xd0, 0xc3, 0x1c, 0x8e, 0xb3, 0x58, 0x32, 0x36, 0x85, 0xf3, 0x77,
  0x6d, 0xb3, 0xb7, 0x91, 0x0b, 0xde, 0xdb, 0xbc, 0x5f, 0x79, 0x2f, 0x73,
  0xdc, 0x78, 0xcf, 0x41, 0xcf, 0xec, 0x39, 0x2f, 0x8e, 0xda, 0x41, 0x1d,
  0x18, 0x9d, 0xda, 0x07, 0x36, 0xdb, 0xe3, 0x42, 0xce, 0xb2, 0x0e, 0x62,
  0xc0, 0xb5, 0x01, 0x6a, 0xea, 0xc1, 0xdd, 0xa4, 0x3a, 0x8f, 0x0f, 0x51,
  0x6f, 0x3e, 0xcf, 0x9d, 0x40, 0x9e, 0x31, 0x0e, 0xb5, 0x69, 0x64, 0x9c,
  0xc3, 0xee, 0xd9, 0xf5, 0x8c, 0xea, 0xee, 0xb9, 0x8b, 0xaa, 0xbb, 0x67,
  0x76, 0x54, 0x06, 0xf5, 0x93, 0xc3, 0xf9, 0xc0, 0x79, 0xe2, 0x3a, 0xf3,
  0xa1, 0x27, 0xc6, 0xbb, 0xe3, 0x5d, 0xfb, 0xa4, 0x12, 0xa3, 0x09, 0x12,
  0x2b, 0xc2, 0xec, 0x47, 0xd7, 0x3d, 0xa9, 0x54, 0x09, 0xb1, 0xf1, 0x85,
  0x8e, 0x94, 0x3c, 0x72, 0x4a, 0x64, 0x72, 0xef, 0xdb, 0xe7, 0x95, 0x14,
  0x6f, 0xe2, 0xdd, 0x16, 0x2a, 0x29, 0x9f, 0xfd, 0xb5, 0x94, 0x7c, 0xd7,
  0x85, 0x7d, 0xe8, 0x5e, 0x30, 0xeb, 0xb8, 0xb2, 0x0f, 0x27, 0xf2, 0x77,
  0x4c, 0xbf, 0x2b, 0xae, 0x19, 0x8a, 0x01, 0xeb, 0x42, 0x34, 0x57, 0x5c,
  0xdb, 0x32, 0xd4, 0x12, 0xaf, 0x1b, 0x79, 0xc7, 0xa2, 0x3a, 0xf3, 0xf5,
  0x8d, 0x8f, 0x5e, 0xfb, 0xfc, 0x9a, 0xb8, 0x73, 0xe1, 0x5d, 0x71, 0x87,
  0xe3, 0xaf, 0x8b, 0x67, 0x6f, 0x62, 0xd9, 0x36, 0x45, 0xad, 0xa7, 0x1d,
  0xf0, 0x7e, 0x74, 0xe9, 0xa6, 0x66, 0x5a, 0x9c, 0xb9, 0x19, 0x65, 0x5a,
  0x98, 0x43, 0xff, 0x9b, 0x6d, 0x9d, 0x0b, 0x15, 0xd7, 0x96, 0xec, 0xcb,
  0xd7, 0x03, 0xd8, 0xe2, 0xc3, 0x96, 0x38, 0xd6, 0x64, 0x79, 0x0c, 0x36,
  0x30, 0x15, 0x4f, 0x6d, 0xdf, 0x17, 0xe2, 0xf7, 0x92, 0xe2, 0x09, 0xf2,
  0xb0, 0xae, 0xe9, 0x2b, 0x68, 0x63, 0x47, 0xbc, 0x40, 0xcb, 0xe2, 0xa9,
  0xeb, 0xf7, 0x1d, 0xe7, 0x77, 0xd2, 0xbc, 0x87, 0xfc, 0xbb, 0x52, 0xf4,
  0xf5, 0xd1, 0x65, 0xbc, 0x23, 0x4c, 0x6e, 0xc6, 0xcf, 0xc1, 0x57, 0xec,
  0xd3, 0x51, 0xc2, 0x09, 0x87, 0xf3, 0x65, 0x25, 0x61, 0xde, 0x91, 0xde,
  0x9a, 0xd2, 0xce, 0x98, 0xd0, 0xee, 0xac, 0xa5, 0xcd, 0xfb, 0x24, 0xe5,
  0x38, 0x56, 0x5a, 0x39, 0x22, 0xe9, 0x39, 0x70, 0xfa, 0xd0, 0x9d, 0x9c,
  0x10, 0xdf, 0xbc, 0x1d, 0x32, 0x91, 0xe6, 0x02, 0xaf, 0xcc, 0x0f, 0x86,
  0x10, 0x7d, 0x52, 0x22, 0x54, 0x07, 0x65, 0xd8, 0xfa, 0x96, 0x8c, 0x70,
  0x73, 0x5f, 0x06, 0x35, 0x5b, 0x9a, 0xdb, 0xf0, 0x7d, 0x19, 0xd4, 0x94,
  0x34, 0xb7, 0xdc, 0xfb, 0x32, 0xa8, 0x45, 0x24, 0x0e, 0xbb, 0x83, 0x32,
  0xa0, 0x23, 0xcd, 0x45, 0xf0, 0xbe, 0x0c, 0xeb, 0x22, 0x47, 0xdc, 0x3c,
  0x34, 0xce, 0xb3, 0xfa, 0xf9, 0xae, 0xf2, 0xef, 0x57, 0xf8, 0x3c, 0xce,
  0xb7, 0xa2, 0x87, 0x64, 0x06, 0xbc, 0xc3, 0x7e, 0xb0, 0x8f, 0xd2, 0x3b,
  0xec, 0x07, 0x5f, 0x7c, 0x5a, 0xde, 0x61, 0x3f, 0x50, 0x03, 0xc2, 0xf6,
  0x0e, 0xfb, 0xc1, 0x97, 0xa1, 0xca, 0x3b, 0xec, 0x07, 0x5f, 0xe6, 0x47,
  0xbc, 0xc3, 0x7e, 0x60, 0x09, 0xe1, 0xe0, 0x94, 0x01, 0xec, 0xcb, 0x20,
  0x74, 0xd5, 0x61, 0x3f, 0xb0, 0xac, 0xf0, 0x14, 0x7e, 0xcd, 0xfd, 0xa3,
  0xcd, 0x80, 0x7b, 0x0f, 0xff, 0xbb, 0x78, 0x0b, 0xc8, 0x33, 0x39, 0xa2,
  0x28, 0xf8, 0xcf, 0x01, 0x89, 0x05, 0x8d, 0xa5, 0x00, 0x56, 0x62, 0xde,
  0x78, 0x03, 0xe0, 0x3f, 0x0e, 0x24, 0x66, 0x35, 0x1e, 0x03, 0xf8, 0x6e,
  0x9c, 0x79, 0x5e, 0x87, 0xe1, 0xd3, 0x40, 0xe6, 0xd9, 0x3e, 0x86, 0x67,
  0x81, 0xcc, 0xf7, 0xe0, 0x73, 0x40, 0x89, 0xdf, 0x10, 0x3d, 0x78, 0x19,
  0xc8, 0x7c, 0x6f, 0xbc, 0x82, 0x15, 0x0c, 0x3b, 0x3b, 0xd1, 0x9d, 0xb9,
  0x5b, 0x0b, 0x5f, 0xff, 0x41, 0x65, 0xf8, 0x8d, 0xc1, 0x17, 0xdf, 0xfe,
  0xe3, 0xdf, 0x00, 0xe0, 0x66, 0x7a, 0xd5, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x0a, 0x00, 0x00, 0x00, 0x03, 0x00, 0x03, 0x00, 0x08, 0x02, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x04, 0x02, 0x08, 0x02, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x05, 0x04,
  0x08, 0x02, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x06, 0x06, 0x08, 0x02, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x07, 0x08, 0x08, 0x02, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x08, 0x0a,
  0x08, 0x02, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x03, 0x01, 0x09, 0x0c, 0x04, 0x02, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x03, 0x01, 0x0a, 0x0e, 0x04, 0x02, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x02, 0x0b, 0x10,
  0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x02, 0x0d, 0x13, 0x00, 0x04, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x01, 0x00, 0x78, 0x01, 0x4d, 0x8c,
  0xbb, 0x09, 0x42, 0x51, 0x10, 0x05, 0xd7, 0x1f, 0x88, 0x15, 0x18, 0x68,
  0x66, 0x11, 0x86, 0x16, 0x61, 0xf8, 0x8a, 0x30, 0x34, 0xb4, 0x04, 0x43,
  0x8b, 0x30, 0xb4, 0x08, 0x43, 0x8b, 0x30, 0xb4, 0x07, 0x9d, 0xc1, 0x3d,
  0xf0, 0x06, 0xce, 0xe7, 0xde, 0x03, 0x3b, 0xa9, 0xaa, 0x15, 0x5a, 0x23,
  0xb9, 0xf0, 0xb1, 0xb5, 0x34, 0x57, 0xad, 0xb9, 0x6b, 0xcd, 0x53, 0x6b,
  0xde, 0x5a, 0xf0, 0x60, 0xb3, 0x19, 0xf5, 0xfd, 0xa8, 0x1f, 0xe9, 0x53,
  0x0b, 0x9c, 0xba, 0x13, 0x75, 0xc6, 0xcc, 0x1b, 0x12, 0x7b, 0xf8, 0x82,
  0xef, 0x07, 0x12, 0xbb, 0x92, 0x6c, 0x2f, 0x24, 0xf6, 0xdc, 0xcf, 0xf6,
  0x41, 0x62, 0x9f, 0x21, 0xc9, 0xb6, 0xd4, 0xc0, 0x98, 0x23, 0xc9, 0xb6,
  0xd3, 0xc0, 0x58, 0x20, 0xc9, 0x76, 0xc0, 0xbc, 0x65, 0x0f, 0xd9, 0x06,
  0x2c, 0x9b, 0x12, 0x37, 0x53, 0xfe, 0x7f, 0x55, 0x3f, 0x81, 0x42, 0x29,
  0x20, 0x00, 0x00, 0x00, 0x78, 0x62, 0x6f, 0x70, 0x01, 0x00, 0x00, 0x00,
  0x7e, 0x02, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00
};
