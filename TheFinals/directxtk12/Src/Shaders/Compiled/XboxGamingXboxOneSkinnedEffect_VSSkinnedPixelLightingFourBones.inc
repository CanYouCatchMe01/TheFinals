#if 0
;
; Input signature:
;
; Name                 Index   Mask Register SysValue  Format   Used
; -------------------- ----- ------ -------- -------- ------- ------
; SV_Position              0   xyzw        0     NONE   float   xyzw
; NORMAL                   0   xyz         1     NONE   float   xyz 
; TEXCOORD                 0   xy          2     NONE   float   xy  
; BLENDINDICES             0   xyzw        3     NONE    uint   xyzw
; BLENDWEIGHT              0   xyzw        4     NONE   float   xyzw
;
;
; Output signature:
;
; Name                 Index   Mask Register SysValue  Format   Used
; -------------------- ----- ------ -------- -------- ------- ------
; TEXCOORD                 0   xy          0     NONE   float   xy  
; TEXCOORD                 1   xyzw        1     NONE   float   xyzw
; TEXCOORD                 2   xyz         2     NONE   float   xyz 
; COLOR                    0   xyzw        3     NONE   float   xyzw
; SV_Position              0   xyzw        4      POS   float   xyzw
;
; shader debug name: C:\Users\marcu\Downloads\DirectXTK12-main\DirectXTK12-main\Src/Shaders/Compiled\XboxGamingXboxOneSkinnedEffect_VSSkinnedPixelLightingFourBones.pdb
; shader hash: c4e0f877dff74cc8a39a37dd757e66dd
;
; Pipeline Runtime Information: 
;
;PSVRuntimeInfo:
; Vertex Shader
; OutputPositionPresent=1
; MinimumExpectedWaveLaneCount: 0
; MaximumExpectedWaveLaneCount: 4294967295
; UsesViewID: false
; SigInputElements: 5
; SigOutputElements: 5
; SigPatchConstOrPrimElements: 0
; SigInputVectors: 5
; SigOutputVectors[0]: 5
; SigOutputVectors[1]: 0
; SigOutputVectors[2]: 0
; SigOutputVectors[3]: 0
; EntryFunctionName: VSSkinnedPixelLightingFourBones
;
;
; Input signature:
;
; Name                 Index             InterpMode DynIdx
; -------------------- ----- ---------------------- ------
; SV_Position              0                              
; NORMAL                   0                              
; TEXCOORD                 0                              
; BLENDINDICES             0                              
; BLENDWEIGHT              0                              
;
; Output signature:
;
; Name                 Index             InterpMode DynIdx
; -------------------- ----- ---------------------- ------
; TEXCOORD                 0                 linear       
; TEXCOORD                 1                 linear       
; TEXCOORD                 2                 linear       
; COLOR                    0                 linear       
; SV_Position              0          noperspective       
;
; Buffer Definitions:
;
; cbuffer 
; {
;
;   [3872 x i8] (type annotation not present)
;
; }
;
;
; Resource Bindings:
;
; Name                                 Type  Format         Dim      ID      HLSL Bind  Count
; ------------------------------ ---------- ------- ----------- ------- -------------- ------
;                                   cbuffer      NA          NA     CB0            cb0     1
;
;
; ViewId state:
;
; Number of inputs: 20, outputs: 20
; Outputs dependent on ViewId: {  }
; Inputs contributing to computation of Outputs:
;   output 0 depends on inputs: { 8 }
;   output 1 depends on inputs: { 9 }
;   output 4 depends on inputs: { 0, 1, 2, 3, 12, 13, 14, 15, 16, 17, 18, 19 }
;   output 5 depends on inputs: { 0, 1, 2, 3, 12, 13, 14, 15, 16, 17, 18, 19 }
;   output 6 depends on inputs: { 0, 1, 2, 3, 12, 13, 14, 15, 16, 17, 18, 19 }
;   output 7 depends on inputs: { 0, 1, 2, 3, 12, 13, 14, 15, 16, 17, 18, 19 }
;   output 8 depends on inputs: { 4, 5, 6, 12, 13, 14, 15, 16, 17, 18, 19 }
;   output 9 depends on inputs: { 4, 5, 6, 12, 13, 14, 15, 16, 17, 18, 19 }
;   output 10 depends on inputs: { 4, 5, 6, 12, 13, 14, 15, 16, 17, 18, 19 }
;   output 16 depends on inputs: { 0, 1, 2, 3, 12, 13, 14, 15, 16, 17, 18, 19 }
;   output 17 depends on inputs: { 0, 1, 2, 3, 12, 13, 14, 15, 16, 17, 18, 19 }
;   output 18 depends on inputs: { 0, 1, 2, 3, 12, 13, 14, 15, 16, 17, 18, 19 }
;   output 19 depends on inputs: { 0, 1, 2, 3, 12, 13, 14, 15, 16, 17, 18, 19 }
;
target datalayout = "e-m:e-p:32:32-i1:32-i8:32-i16:32-i32:32-i64:64-f16:32-f32:32-f64:64-n8:16:32:64"
target triple = "dxil-ms-xb1"

%dx.types.Handle = type { i8* }
%dx.types.CBufRet.f32 = type { float, float, float, float }
%hostlayout.Parameters = type { <4 x float>, <3 x float>, <3 x float>, float, [3 x <3 x float>], [3 x <3 x float>], [3 x <3 x float>], <3 x float>, <3 x float>, <4 x float>, [4 x <4 x float>], [3 x <3 x float>], [4 x <4 x float>], [72 x [3 x <4 x float>]] }

define void @VSSkinnedPixelLightingFourBones() {
  %1 = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 2, i32 0, i32 0, i1 false)  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %2 = call float @dx.op.loadInput.f32(i32 4, i32 4, i32 0, i8 0, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %3 = call float @dx.op.loadInput.f32(i32 4, i32 4, i32 0, i8 1, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %4 = call float @dx.op.loadInput.f32(i32 4, i32 4, i32 0, i8 2, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %5 = call float @dx.op.loadInput.f32(i32 4, i32 4, i32 0, i8 3, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %6 = call i32 @dx.op.loadInput.i32(i32 4, i32 3, i32 0, i8 0, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %7 = call i32 @dx.op.loadInput.i32(i32 4, i32 3, i32 0, i8 1, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %8 = call i32 @dx.op.loadInput.i32(i32 4, i32 3, i32 0, i8 2, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %9 = call i32 @dx.op.loadInput.i32(i32 4, i32 3, i32 0, i8 3, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %10 = call float @dx.op.loadInput.f32(i32 4, i32 2, i32 0, i8 0, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %11 = call float @dx.op.loadInput.f32(i32 4, i32 2, i32 0, i8 1, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %12 = call float @dx.op.loadInput.f32(i32 4, i32 1, i32 0, i8 0, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %13 = call float @dx.op.loadInput.f32(i32 4, i32 1, i32 0, i8 1, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %14 = call float @dx.op.loadInput.f32(i32 4, i32 1, i32 0, i8 2, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %15 = call float @dx.op.loadInput.f32(i32 4, i32 0, i32 0, i8 0, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %16 = call float @dx.op.loadInput.f32(i32 4, i32 0, i32 0, i8 1, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %17 = call float @dx.op.loadInput.f32(i32 4, i32 0, i32 0, i8 2, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %18 = call float @dx.op.loadInput.f32(i32 4, i32 0, i32 0, i8 3, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %19 = mul i32 %6, 3
  %20 = add i32 %19, 26
  %21 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 %20)  ; CBufferLoadLegacy(handle,regIndex)
  %22 = extractvalue %dx.types.CBufRet.f32 %21, 0
  %23 = extractvalue %dx.types.CBufRet.f32 %21, 1
  %24 = extractvalue %dx.types.CBufRet.f32 %21, 2
  %25 = extractvalue %dx.types.CBufRet.f32 %21, 3
  %26 = add i32 %19, 27
  %27 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 %26)  ; CBufferLoadLegacy(handle,regIndex)
  %28 = extractvalue %dx.types.CBufRet.f32 %27, 0
  %29 = extractvalue %dx.types.CBufRet.f32 %27, 1
  %30 = extractvalue %dx.types.CBufRet.f32 %27, 2
  %31 = extractvalue %dx.types.CBufRet.f32 %27, 3
  %32 = add i32 %19, 28
  %33 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 %32)  ; CBufferLoadLegacy(handle,regIndex)
  %34 = extractvalue %dx.types.CBufRet.f32 %33, 0
  %35 = extractvalue %dx.types.CBufRet.f32 %33, 1
  %36 = extractvalue %dx.types.CBufRet.f32 %33, 2
  %37 = extractvalue %dx.types.CBufRet.f32 %33, 3
  %38 = fmul fast float %22, %2
  %39 = fmul fast float %28, %2
  %40 = fmul fast float %34, %2
  %41 = fmul fast float %23, %2
  %42 = fmul fast float %29, %2
  %43 = fmul fast float %35, %2
  %44 = fmul fast float %24, %2
  %45 = fmul fast float %30, %2
  %46 = fmul fast float %36, %2
  %47 = fmul fast float %25, %2
  %48 = fmul fast float %31, %2
  %49 = fmul fast float %37, %2
  %50 = mul i32 %7, 3
  %51 = add i32 %50, 26
  %52 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 %51)  ; CBufferLoadLegacy(handle,regIndex)
  %53 = extractvalue %dx.types.CBufRet.f32 %52, 0
  %54 = extractvalue %dx.types.CBufRet.f32 %52, 1
  %55 = extractvalue %dx.types.CBufRet.f32 %52, 2
  %56 = extractvalue %dx.types.CBufRet.f32 %52, 3
  %57 = add i32 %50, 27
  %58 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 %57)  ; CBufferLoadLegacy(handle,regIndex)
  %59 = extractvalue %dx.types.CBufRet.f32 %58, 0
  %60 = extractvalue %dx.types.CBufRet.f32 %58, 1
  %61 = extractvalue %dx.types.CBufRet.f32 %58, 2
  %62 = extractvalue %dx.types.CBufRet.f32 %58, 3
  %63 = add i32 %50, 28
  %64 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 %63)  ; CBufferLoadLegacy(handle,regIndex)
  %65 = extractvalue %dx.types.CBufRet.f32 %64, 0
  %66 = extractvalue %dx.types.CBufRet.f32 %64, 1
  %67 = extractvalue %dx.types.CBufRet.f32 %64, 2
  %68 = extractvalue %dx.types.CBufRet.f32 %64, 3
  %69 = fmul fast float %53, %3
  %70 = fmul fast float %59, %3
  %71 = fmul fast float %65, %3
  %72 = fmul fast float %54, %3
  %73 = fmul fast float %60, %3
  %74 = fmul fast float %66, %3
  %75 = fmul fast float %55, %3
  %76 = fmul fast float %61, %3
  %77 = fmul fast float %67, %3
  %78 = fmul fast float %56, %3
  %79 = fmul fast float %62, %3
  %80 = fmul fast float %68, %3
  %81 = fadd fast float %69, %38
  %82 = fadd fast float %70, %39
  %83 = fadd fast float %71, %40
  %84 = fadd fast float %72, %41
  %85 = fadd fast float %73, %42
  %86 = fadd fast float %74, %43
  %87 = fadd fast float %75, %44
  %88 = fadd fast float %76, %45
  %89 = fadd fast float %77, %46
  %90 = fadd fast float %78, %47
  %91 = fadd fast float %79, %48
  %92 = fadd fast float %80, %49
  %93 = mul i32 %8, 3
  %94 = add i32 %93, 26
  %95 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 %94)  ; CBufferLoadLegacy(handle,regIndex)
  %96 = extractvalue %dx.types.CBufRet.f32 %95, 0
  %97 = extractvalue %dx.types.CBufRet.f32 %95, 1
  %98 = extractvalue %dx.types.CBufRet.f32 %95, 2
  %99 = extractvalue %dx.types.CBufRet.f32 %95, 3
  %100 = add i32 %93, 27
  %101 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 %100)  ; CBufferLoadLegacy(handle,regIndex)
  %102 = extractvalue %dx.types.CBufRet.f32 %101, 0
  %103 = extractvalue %dx.types.CBufRet.f32 %101, 1
  %104 = extractvalue %dx.types.CBufRet.f32 %101, 2
  %105 = extractvalue %dx.types.CBufRet.f32 %101, 3
  %106 = add i32 %93, 28
  %107 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 %106)  ; CBufferLoadLegacy(handle,regIndex)
  %108 = extractvalue %dx.types.CBufRet.f32 %107, 0
  %109 = extractvalue %dx.types.CBufRet.f32 %107, 1
  %110 = extractvalue %dx.types.CBufRet.f32 %107, 2
  %111 = extractvalue %dx.types.CBufRet.f32 %107, 3
  %112 = fmul fast float %96, %4
  %113 = fmul fast float %102, %4
  %114 = fmul fast float %108, %4
  %115 = fmul fast float %97, %4
  %116 = fmul fast float %103, %4
  %117 = fmul fast float %109, %4
  %118 = fmul fast float %98, %4
  %119 = fmul fast float %104, %4
  %120 = fmul fast float %110, %4
  %121 = fmul fast float %99, %4
  %122 = fmul fast float %105, %4
  %123 = fmul fast float %111, %4
  %124 = fadd fast float %81, %112
  %125 = fadd fast float %82, %113
  %126 = fadd fast float %83, %114
  %127 = fadd fast float %84, %115
  %128 = fadd fast float %85, %116
  %129 = fadd fast float %86, %117
  %130 = fadd fast float %87, %118
  %131 = fadd fast float %88, %119
  %132 = fadd fast float %89, %120
  %133 = fadd fast float %90, %121
  %134 = fadd fast float %91, %122
  %135 = fadd fast float %92, %123
  %136 = mul i32 %9, 3
  %137 = add i32 %136, 26
  %138 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 %137)  ; CBufferLoadLegacy(handle,regIndex)
  %139 = extractvalue %dx.types.CBufRet.f32 %138, 0
  %140 = extractvalue %dx.types.CBufRet.f32 %138, 1
  %141 = extractvalue %dx.types.CBufRet.f32 %138, 2
  %142 = extractvalue %dx.types.CBufRet.f32 %138, 3
  %143 = add i32 %136, 27
  %144 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 %143)  ; CBufferLoadLegacy(handle,regIndex)
  %145 = extractvalue %dx.types.CBufRet.f32 %144, 0
  %146 = extractvalue %dx.types.CBufRet.f32 %144, 1
  %147 = extractvalue %dx.types.CBufRet.f32 %144, 2
  %148 = extractvalue %dx.types.CBufRet.f32 %144, 3
  %149 = add i32 %136, 28
  %150 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 %149)  ; CBufferLoadLegacy(handle,regIndex)
  %151 = extractvalue %dx.types.CBufRet.f32 %150, 0
  %152 = extractvalue %dx.types.CBufRet.f32 %150, 1
  %153 = extractvalue %dx.types.CBufRet.f32 %150, 2
  %154 = extractvalue %dx.types.CBufRet.f32 %150, 3
  %155 = fmul fast float %139, %5
  %156 = fmul fast float %145, %5
  %157 = fmul fast float %151, %5
  %158 = fmul fast float %140, %5
  %159 = fmul fast float %146, %5
  %160 = fmul fast float %152, %5
  %161 = fmul fast float %141, %5
  %162 = fmul fast float %147, %5
  %163 = fmul fast float %153, %5
  %164 = fmul fast float %142, %5
  %165 = fmul fast float %148, %5
  %166 = fmul fast float %154, %5
  %167 = fadd fast float %124, %155
  %168 = fadd fast float %125, %156
  %169 = fadd fast float %126, %157
  %170 = fadd fast float %127, %158
  %171 = fadd fast float %128, %159
  %172 = fadd fast float %129, %160
  %173 = fadd fast float %130, %161
  %174 = fadd fast float %131, %162
  %175 = fadd fast float %132, %163
  %176 = fadd fast float %133, %164
  %177 = fadd fast float %134, %165
  %178 = fadd fast float %135, %166
  %179 = fmul fast float %167, %15
  %180 = call float @dx.op.tertiary.f32(i32 46, float %16, float %170, float %179)  ; FMad(a,b,c)
  %181 = call float @dx.op.tertiary.f32(i32 46, float %17, float %173, float %180)  ; FMad(a,b,c)
  %182 = call float @dx.op.tertiary.f32(i32 46, float %18, float %176, float %181)  ; FMad(a,b,c)
  %183 = fmul fast float %168, %15
  %184 = call float @dx.op.tertiary.f32(i32 46, float %16, float %171, float %183)  ; FMad(a,b,c)
  %185 = call float @dx.op.tertiary.f32(i32 46, float %17, float %174, float %184)  ; FMad(a,b,c)
  %186 = call float @dx.op.tertiary.f32(i32 46, float %18, float %177, float %185)  ; FMad(a,b,c)
  %187 = fmul fast float %169, %15
  %188 = call float @dx.op.tertiary.f32(i32 46, float %16, float %172, float %187)  ; FMad(a,b,c)
  %189 = call float @dx.op.tertiary.f32(i32 46, float %17, float %175, float %188)  ; FMad(a,b,c)
  %190 = call float @dx.op.tertiary.f32(i32 46, float %18, float %178, float %189)  ; FMad(a,b,c)
  %191 = fmul fast float %167, %12
  %192 = call float @dx.op.tertiary.f32(i32 46, float %13, float %170, float %191)  ; FMad(a,b,c)
  %193 = call float @dx.op.tertiary.f32(i32 46, float %14, float %173, float %192)  ; FMad(a,b,c)
  %194 = fmul fast float %168, %12
  %195 = call float @dx.op.tertiary.f32(i32 46, float %13, float %171, float %194)  ; FMad(a,b,c)
  %196 = call float @dx.op.tertiary.f32(i32 46, float %14, float %174, float %195)  ; FMad(a,b,c)
  %197 = fmul fast float %169, %12
  %198 = call float @dx.op.tertiary.f32(i32 46, float %13, float %172, float %197)  ; FMad(a,b,c)
  %199 = call float @dx.op.tertiary.f32(i32 46, float %14, float %175, float %198)  ; FMad(a,b,c)
  %200 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 22)  ; CBufferLoadLegacy(handle,regIndex)
  %201 = extractvalue %dx.types.CBufRet.f32 %200, 0
  %202 = extractvalue %dx.types.CBufRet.f32 %200, 1
  %203 = extractvalue %dx.types.CBufRet.f32 %200, 2
  %204 = extractvalue %dx.types.CBufRet.f32 %200, 3
  %205 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 23)  ; CBufferLoadLegacy(handle,regIndex)
  %206 = extractvalue %dx.types.CBufRet.f32 %205, 0
  %207 = extractvalue %dx.types.CBufRet.f32 %205, 1
  %208 = extractvalue %dx.types.CBufRet.f32 %205, 2
  %209 = extractvalue %dx.types.CBufRet.f32 %205, 3
  %210 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 24)  ; CBufferLoadLegacy(handle,regIndex)
  %211 = extractvalue %dx.types.CBufRet.f32 %210, 0
  %212 = extractvalue %dx.types.CBufRet.f32 %210, 1
  %213 = extractvalue %dx.types.CBufRet.f32 %210, 2
  %214 = extractvalue %dx.types.CBufRet.f32 %210, 3
  %215 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 25)  ; CBufferLoadLegacy(handle,regIndex)
  %216 = extractvalue %dx.types.CBufRet.f32 %215, 0
  %217 = extractvalue %dx.types.CBufRet.f32 %215, 1
  %218 = extractvalue %dx.types.CBufRet.f32 %215, 2
  %219 = extractvalue %dx.types.CBufRet.f32 %215, 3
  %220 = fmul fast float %201, %182
  %221 = call float @dx.op.tertiary.f32(i32 46, float %186, float %202, float %220)  ; FMad(a,b,c)
  %222 = call float @dx.op.tertiary.f32(i32 46, float %190, float %203, float %221)  ; FMad(a,b,c)
  %223 = call float @dx.op.tertiary.f32(i32 46, float %18, float %204, float %222)  ; FMad(a,b,c)
  %224 = fmul fast float %206, %182
  %225 = call float @dx.op.tertiary.f32(i32 46, float %186, float %207, float %224)  ; FMad(a,b,c)
  %226 = call float @dx.op.tertiary.f32(i32 46, float %190, float %208, float %225)  ; FMad(a,b,c)
  %227 = call float @dx.op.tertiary.f32(i32 46, float %18, float %209, float %226)  ; FMad(a,b,c)
  %228 = fmul fast float %211, %182
  %229 = call float @dx.op.tertiary.f32(i32 46, float %186, float %212, float %228)  ; FMad(a,b,c)
  %230 = call float @dx.op.tertiary.f32(i32 46, float %190, float %213, float %229)  ; FMad(a,b,c)
  %231 = call float @dx.op.tertiary.f32(i32 46, float %18, float %214, float %230)  ; FMad(a,b,c)
  %232 = fmul fast float %216, %182
  %233 = call float @dx.op.tertiary.f32(i32 46, float %186, float %217, float %232)  ; FMad(a,b,c)
  %234 = call float @dx.op.tertiary.f32(i32 46, float %190, float %218, float %233)  ; FMad(a,b,c)
  %235 = call float @dx.op.tertiary.f32(i32 46, float %18, float %219, float %234)  ; FMad(a,b,c)
  %236 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 15)  ; CBufferLoadLegacy(handle,regIndex)
  %237 = extractvalue %dx.types.CBufRet.f32 %236, 0
  %238 = extractvalue %dx.types.CBufRet.f32 %236, 1
  %239 = extractvalue %dx.types.CBufRet.f32 %236, 2
  %240 = extractvalue %dx.types.CBufRet.f32 %236, 3
  %241 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 16)  ; CBufferLoadLegacy(handle,regIndex)
  %242 = extractvalue %dx.types.CBufRet.f32 %241, 0
  %243 = extractvalue %dx.types.CBufRet.f32 %241, 1
  %244 = extractvalue %dx.types.CBufRet.f32 %241, 2
  %245 = extractvalue %dx.types.CBufRet.f32 %241, 3
  %246 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 17)  ; CBufferLoadLegacy(handle,regIndex)
  %247 = extractvalue %dx.types.CBufRet.f32 %246, 0
  %248 = extractvalue %dx.types.CBufRet.f32 %246, 1
  %249 = extractvalue %dx.types.CBufRet.f32 %246, 2
  %250 = extractvalue %dx.types.CBufRet.f32 %246, 3
  %251 = fmul fast float %237, %182
  %252 = call float @dx.op.tertiary.f32(i32 46, float %186, float %238, float %251)  ; FMad(a,b,c)
  %253 = call float @dx.op.tertiary.f32(i32 46, float %190, float %239, float %252)  ; FMad(a,b,c)
  %254 = call float @dx.op.tertiary.f32(i32 46, float %18, float %240, float %253)  ; FMad(a,b,c)
  %255 = fmul fast float %242, %182
  %256 = call float @dx.op.tertiary.f32(i32 46, float %186, float %243, float %255)  ; FMad(a,b,c)
  %257 = call float @dx.op.tertiary.f32(i32 46, float %190, float %244, float %256)  ; FMad(a,b,c)
  %258 = call float @dx.op.tertiary.f32(i32 46, float %18, float %245, float %257)  ; FMad(a,b,c)
  %259 = fmul fast float %247, %182
  %260 = call float @dx.op.tertiary.f32(i32 46, float %186, float %248, float %259)  ; FMad(a,b,c)
  %261 = call float @dx.op.tertiary.f32(i32 46, float %190, float %249, float %260)  ; FMad(a,b,c)
  %262 = call float @dx.op.tertiary.f32(i32 46, float %18, float %250, float %261)  ; FMad(a,b,c)
  %263 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 19)  ; CBufferLoadLegacy(handle,regIndex)
  %264 = extractvalue %dx.types.CBufRet.f32 %263, 0
  %265 = extractvalue %dx.types.CBufRet.f32 %263, 1
  %266 = extractvalue %dx.types.CBufRet.f32 %263, 2
  %267 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 20)  ; CBufferLoadLegacy(handle,regIndex)
  %268 = extractvalue %dx.types.CBufRet.f32 %267, 0
  %269 = extractvalue %dx.types.CBufRet.f32 %267, 1
  %270 = extractvalue %dx.types.CBufRet.f32 %267, 2
  %271 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 21)  ; CBufferLoadLegacy(handle,regIndex)
  %272 = extractvalue %dx.types.CBufRet.f32 %271, 0
  %273 = extractvalue %dx.types.CBufRet.f32 %271, 1
  %274 = extractvalue %dx.types.CBufRet.f32 %271, 2
  %275 = fmul fast float %264, %193
  %276 = call float @dx.op.tertiary.f32(i32 46, float %196, float %265, float %275)  ; FMad(a,b,c)
  %277 = call float @dx.op.tertiary.f32(i32 46, float %199, float %266, float %276)  ; FMad(a,b,c)
  %278 = fmul fast float %268, %193
  %279 = call float @dx.op.tertiary.f32(i32 46, float %196, float %269, float %278)  ; FMad(a,b,c)
  %280 = call float @dx.op.tertiary.f32(i32 46, float %199, float %270, float %279)  ; FMad(a,b,c)
  %281 = fmul fast float %272, %193
  %282 = call float @dx.op.tertiary.f32(i32 46, float %196, float %273, float %281)  ; FMad(a,b,c)
  %283 = call float @dx.op.tertiary.f32(i32 46, float %199, float %274, float %282)  ; FMad(a,b,c)
  %284 = call float @dx.op.dot3.f32(i32 55, float %277, float %280, float %283, float %277, float %280, float %283)  ; Dot3(ax,ay,az,bx,by,bz)
  %285 = call float @dx.op.unary.f32(i32 25, float %284)  ; Rsqrt(value)
  %286 = fmul fast float %285, %277
  %287 = fmul fast float %285, %280
  %288 = fmul fast float %285, %283
  %289 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 14)  ; CBufferLoadLegacy(handle,regIndex)
  %290 = extractvalue %dx.types.CBufRet.f32 %289, 0
  %291 = extractvalue %dx.types.CBufRet.f32 %289, 1
  %292 = extractvalue %dx.types.CBufRet.f32 %289, 2
  %293 = extractvalue %dx.types.CBufRet.f32 %289, 3
  %294 = call float @dx.op.dot4.f32(i32 56, float %182, float %186, float %190, float %18, float %290, float %291, float %292, float %293)  ; Dot4(ax,ay,az,aw,bx,by,bz,bw)
  %295 = call float @dx.op.unary.f32(i32 7, float %294)  ; Saturate(value)
  %296 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 0)  ; CBufferLoadLegacy(handle,regIndex)
  %297 = extractvalue %dx.types.CBufRet.f32 %296, 3
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 0, float %10)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 1, float %11)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 1, i32 0, i8 0, float %254)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 1, i32 0, i8 1, float %258)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 1, i32 0, i8 2, float %262)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 1, i32 0, i8 3, float %295)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 2, i32 0, i8 0, float %286)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 2, i32 0, i8 1, float %287)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 2, i32 0, i8 2, float %288)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 3, i32 0, i8 0, float 1.000000e+00)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 3, i32 0, i8 1, float 1.000000e+00)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 3, i32 0, i8 2, float 1.000000e+00)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 3, i32 0, i8 3, float %297)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 4, i32 0, i8 0, float %223)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 4, i32 0, i8 1, float %227)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 4, i32 0, i8 2, float %231)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 4, i32 0, i8 3, float %235)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  ret void
}

; Function Attrs: nounwind readnone
declare float @dx.op.loadInput.f32(i32, i32, i32, i8, i32) #0

; Function Attrs: nounwind readnone
declare i32 @dx.op.loadInput.i32(i32, i32, i32, i8, i32) #0

; Function Attrs: nounwind
declare void @dx.op.storeOutput.f32(i32, i32, i32, i8, float) #1

; Function Attrs: nounwind readnone
declare float @dx.op.dot3.f32(i32, float, float, float, float, float, float) #0

; Function Attrs: nounwind readnone
declare float @dx.op.unary.f32(i32, float) #0

; Function Attrs: nounwind readnone
declare float @dx.op.dot4.f32(i32, float, float, float, float, float, float, float, float) #0

; Function Attrs: nounwind readonly
declare %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32, %dx.types.Handle, i32) #2

; Function Attrs: nounwind readnone
declare float @dx.op.tertiary.f32(i32, float, float, float) #0

; Function Attrs: nounwind readonly
declare %dx.types.Handle @dx.op.createHandle(i32, i8, i32, i32, i1) #2

attributes #0 = { nounwind readnone }
attributes #1 = { nounwind }
attributes #2 = { nounwind readonly }

!xbox.compiler.options = !{!0}
!llvm.ident = !{!1}
!dx.version = !{!2}
!dx.valver = !{!3}
!dx.shaderModel = !{!4}
!dx.resources = !{!5}
!dx.viewIdState = !{!8}
!dx.entryPoints = !{!9}

!0 = !{!"__XBOX_PER_THREAD_SCRATCH_SIZE_LIMIT_IN_BYTES", !"0"}
!1 = !{!"dxcxbox 2410.2410.11116.10741"}
!2 = !{i32 1, i32 0}
!3 = !{i32 1, i32 8}
!4 = !{!"vs", i32 6, i32 0}
!5 = !{null, null, !6, null}
!6 = !{!7}
!7 = !{i32 0, %hostlayout.Parameters* undef, !"", i32 0, i32 0, i32 1, i32 3872, null}
!8 = !{[22 x i32] [i32 20, i32 20, i32 983280, i32 983280, i32 983280, i32 983280, i32 1792, i32 1792, i32 1792, i32 0, i32 1, i32 2, i32 0, i32 0, i32 985072, i32 985072, i32 985072, i32 985072, i32 985072, i32 985072, i32 985072, i32 985072]}
!9 = !{void ()* @VSSkinnedPixelLightingFourBones, !"VSSkinnedPixelLightingFourBones", !10, !5, null}
!10 = !{!11, !21, null}
!11 = !{!12, !15, !17, !19, !20}
!12 = !{i32 0, !"SV_Position", i8 9, i8 0, !13, i8 0, i32 1, i8 4, i32 0, i8 0, !14}
!13 = !{i32 0}
!14 = !{i32 3, i32 15}
!15 = !{i32 1, !"NORMAL", i8 9, i8 0, !13, i8 0, i32 1, i8 3, i32 1, i8 0, !16}
!16 = !{i32 3, i32 7}
!17 = !{i32 2, !"TEXCOORD", i8 9, i8 0, !13, i8 0, i32 1, i8 2, i32 2, i8 0, !18}
!18 = !{i32 3, i32 3}
!19 = !{i32 3, !"BLENDINDICES", i8 5, i8 0, !13, i8 0, i32 1, i8 4, i32 3, i8 0, !14}
!20 = !{i32 4, !"BLENDWEIGHT", i8 9, i8 0, !13, i8 0, i32 1, i8 4, i32 4, i8 0, !14}
!21 = !{!22, !23, !25, !27, !28}
!22 = !{i32 0, !"TEXCOORD", i8 9, i8 0, !13, i8 2, i32 1, i8 2, i32 0, i8 0, !18}
!23 = !{i32 1, !"TEXCOORD", i8 9, i8 0, !24, i8 2, i32 1, i8 4, i32 1, i8 0, !14}
!24 = !{i32 1}
!25 = !{i32 2, !"TEXCOORD", i8 9, i8 0, !26, i8 2, i32 1, i8 3, i32 2, i8 0, !16}
!26 = !{i32 2}
!27 = !{i32 3, !"COLOR", i8 9, i8 0, !13, i8 2, i32 1, i8 4, i32 3, i8 0, !14}
!28 = !{i32 4, !"SV_Position", i8 9, i8 3, !13, i8 4, i32 1, i8 4, i32 4, i8 0, !14}

;
; DUMPING SHADER HARDWARE INSTRUCTIONS 
;
// Shader Type               : (VS)
// Shader Hw Stage           : (VS)

// Shader Instructions:
shader main
  asic(CI)
  type(VS)
  s_swappc_b64  s[0:1], s[0:1]
  s_waitcnt     vmcnt(0)
  v_mul_lo_i32  v11, v16, 3
  v_mul_lo_i32  v28, v17, 3
  s_mov_b32     s19, 0x00024fac
  s_mov_b32     s18, -1
  s_mov_b32     s16, s3
  s_or_b32      s17, s4, 0x00100000 // wrscc
  v_add_i32     v14, vcc, 26, v11
  buffer_load_dwordx4  v[14:17], v14, s[16:19], 0 idxen
  v_add_i32     v24, vcc, 26, v28
  buffer_load_dwordx4  v[24:27], v24, s[16:19], 0 idxen
  v_mul_lo_i32  v18, v18, 3
  v_mul_lo_i32  v19, v19, 3
  v_add_i32     v0, vcc, 27, v11
  buffer_load_dwordx4  v[0:3], v0, s[16:19], 0 idxen
  v_add_i32     v11, vcc, 28, v11
  v_add_i32     v32, vcc, 28, v28
  v_add_i32     v29, vcc, 27, v18
  v_add_i32     v40, vcc, 27, v28
  v_add_i32     v36, vcc, 26, v18
  v_add_i32     v44, vcc, 26, v19
  buffer_load_dwordx4  v[28:31], v29, s[16:19], 0 idxen
  buffer_load_dwordx4  v[32:35], v32, s[16:19], 0 idxen
  buffer_load_dwordx4  v[36:39], v36, s[16:19], 0 idxen
  buffer_load_dwordx4  v[40:43], v40, s[16:19], 0 idxen
  buffer_load_dwordx4  v[48:51], v11, s[16:19], 0 idxen
  v_add_i32     v18, vcc, 28, v18
  buffer_load_dwordx4  v[44:47], v44, s[16:19], 0 idxen
  buffer_load_dwordx4  v[60:63], v18, s[16:19], 0 idxen
  s_buffer_load_dwordx16  s[0:15], s[16:19], 0x4c
  s_buffer_load_dwordx8  s[32:39], s[16:19], 0x5c
  s_buffer_load_dwordx4  s[40:43], s[16:19], 0x64
  s_waitcnt     vmcnt(9)
  v_mul_legacy_f32  v14, v14, v20
  v_mul_legacy_f32  v15, v15, v20
  s_waitcnt     vmcnt(8)
  v_mac_legacy_f32  v14, v24, v21
  v_add_i32     v24, vcc, 28, v19
  v_add_i32     v19, vcc, 27, v19
  buffer_load_dwordx4  v[52:55], v19, s[16:19], 0 idxen
  buffer_load_dwordx4  v[56:59], v24, s[16:19], 0 idxen
  s_waitcnt     vmcnt(9)
  v_mul_legacy_f32  v0, v0, v20
  v_mac_legacy_f32  v15, v25, v21
  v_mul_legacy_f32  v1, v1, v20
  v_mul_legacy_f32  v16, v16, v20
  v_mul_legacy_f32  v2, v2, v20
  v_mad_legacy_f32  v11, v26, v21, v16
  v_mul_legacy_f32  v17, v17, v20
  v_mul_legacy_f32  v3, v3, v20
  s_waitcnt     vmcnt(6)
  v_mac_legacy_f32  v14, v36, v22
  s_waitcnt     vmcnt(5)
  v_mac_legacy_f32  v0, v40, v21
  s_waitcnt     vmcnt(4)
  v_mul_legacy_f32  v19, v48, v20
  v_mac_legacy_f32  v1, v41, v21
  v_mac_legacy_f32  v15, v37, v22
  v_mac_legacy_f32  v0, v28, v22
  v_mac_legacy_f32  v19, v32, v21
  s_waitcnt     vmcnt(3)
  v_mac_legacy_f32  v14, v44, v23
  v_mul_legacy_f32  v25, v49, v20
  v_mac_legacy_f32  v2, v42, v21
  v_mac_legacy_f32  v1, v29, v22
  v_mac_legacy_f32  v11, v38, v22
  v_mad_legacy_f32  v18, v33, v21, v25
  s_waitcnt     vmcnt(2)
  v_mac_legacy_f32  v19, v60, v22
  v_mul_legacy_f32  v24, v50, v20
  v_mul_legacy_f32  v16, v14, v8
  v_mac_legacy_f32  v15, v45, v23
  v_mac_legacy_f32  v2, v30, v22
  v_mac_legacy_f32  v18, v61, v22
  v_mac_legacy_f32  v24, v34, v21
  v_mac_legacy_f32  v11, v46, v23
  v_mac_legacy_f32  v16, v9, v15
  v_mul_legacy_f32  v14, v14, v4
  v_mac_legacy_f32  v16, v10, v11
  v_mac_legacy_f32  v24, v62, v22
  v_mac_legacy_f32  v14, v5, v15
  v_mac_legacy_f32  v17, v27, v21
  s_waitcnt     lgkmcnt(0)
  v_mul_legacy_f32  v26, s4, v16
  v_mac_legacy_f32  v3, v43, v21
  v_mac_legacy_f32  v3, v31, v22
  s_waitcnt     vmcnt(1)
  v_mac_legacy_f32  v0, v52, v23
  v_mul_legacy_f32  v25, v0, v8
  v_mac_legacy_f32  v1, v53, v23
  s_waitcnt     vmcnt(0)
  v_mac_legacy_f32  v19, v56, v23
  v_mac_legacy_f32  v2, v54, v23
  v_mac_legacy_f32  v25, v9, v1
  v_mac_legacy_f32  v18, v57, v23
  v_mul_legacy_f32  v8, v19, v8
  v_mul_legacy_f32  v0, v0, v4
  v_mac_legacy_f32  v8, v9, v18
  v_mad_legacy_f32  v15, v58, v23, v24
  v_mac_legacy_f32  v25, v10, v2
  v_mad_legacy_f32  v9, v39, v22, v17
  v_mac_legacy_f32  v0, v5, v1
  v_mul_legacy_f32  v17, v51, v20
  v_mac_legacy_f32  v8, v10, v15
  v_mul_legacy_f32  v10, s0, v16
  s_buffer_load_dword  s0, s[16:19], 0x03
  v_mad_legacy_f32  v20, v25, s5, v26
  s_buffer_load_dwordx16  s[16:31], s[16:19], 0x38
  v_mul_legacy_f32  v4, v19, v4
  v_mad_legacy_f32  v1, v6, v11, v14
  v_mad_legacy_f32  v11, v35, v21, v17
  v_mac_legacy_f32  v9, v47, v23
  v_mac_legacy_f32  v0, v6, v2
  v_mul_legacy_f32  v2, s8, v16
  v_mac_legacy_f32  v10, s1, v25
  v_mad_legacy_f32  v14, v8, s6, v20
  v_mac_legacy_f32  v4, v5, v18
  v_mac_legacy_f32  v1, v7, v9
  v_mad_legacy_f32  v5, v63, v22, v11
  v_mac_legacy_f32  v2, s9, v25
  v_mac_legacy_f32  v3, v55, v23
  v_mad_legacy_f32  v9, v8, s2, v10
  v_mul_legacy_f32  v10, v14, v14
  v_mac_legacy_f32  v4, v6, v15
  v_mac_legacy_f32  v0, v7, v3
  v_mul_legacy_f32  v3, s12, v1
  v_mul_legacy_f32  v6, s32, v1
  v_mul_legacy_f32  v11, s36, v1
  v_mul_legacy_f32  v15, s40, v1
  v_mac_legacy_f32  v5, v59, v23
  v_mac_legacy_f32  v10, v9, v9
  v_mac_legacy_f32  v2, s10, v8
  v_mac_legacy_f32  v4, v7, v5
  v_mac_legacy_f32  v6, s33, v0
  v_mac_legacy_f32  v3, s13, v0
  v_mad_legacy_f32  v5, v2, v2, v10
  v_mac_legacy_f32  v15, s41, v0
  v_mac_legacy_f32  v11, s37, v0
  v_mad_legacy_f32  v8, v4, s38, v11
  v_mad_legacy_f32  v10, v4, s42, v15
  v_mac_legacy_f32  v3, s14, v4
  v_mac_legacy_f32  v6, s34, v4
  s_waitcnt     lgkmcnt(0)
  v_mul_legacy_f32  v11, s20, v1
  v_mul_legacy_f32  v15, s24, v1
  v_mul_legacy_f32  v16, s28, v1
  v_rsq_f32     v5, v5
  v_mul_legacy_f32  v17, s19, v7
  v_mac_legacy_f32  v16, s29, v0
  v_mac_legacy_f32  v15, s25, v0
  v_mac_legacy_f32  v11, s21, v0
  v_mul_legacy_f32  v0, s17, v0
  v_mac_legacy_f32  v10, s43, v7
  v_mac_legacy_f32  v8, s39, v7
  v_mac_legacy_f32  v6, s35, v7
  v_mac_legacy_f32  v3, s15, v7
  exp           pos0, v3, v6, v8, v10 done
  s_waitcnt     expcnt(0)
  v_mad_legacy_f32  v3, v4, s26, v15
  v_mac_legacy_f32  v0, s16, v1
  v_mad_legacy_f32  v1, v4, s22, v11
  v_mad_legacy_f32  v6, v4, s30, v16
  v_mad_legacy_f32  v4, v4, s18, v17
  v_add_f32     v0, v0, v4 clamp
  v_mov_b32     v18, 1.0
  v_mov_b32     v19, 0
  v_mad_legacy_f32  v4, v7, s31, v6
  v_mac_legacy_f32  v3, s27, v7
  v_mac_legacy_f32  v1, s23, v7
  exp           param0, v12, v13, v19, v18
  exp           param1, v1, v3, v4, v0
  s_waitcnt     expcnt(0)
  v_mul_legacy_f32  v1, v5, v2
  v_mul_legacy_f32  v0, v5, v9
  v_mul_legacy_f32  v2, v5, v14
  v_mov_b32     v3, s0
  exp           param2, v0, v2, v1, v18
  exp           param3, v18, v18, v18, v3
  s_endpgm      
end


NumVGPR=64,NumSGPR=46,LDS=0,Scratch=0,Occpancy=4

// Shader Type               : (VS)
// Shader Hw Stage           : (ES)

// Shader Instructions:
shader main
  asic(CI)
  type(VS)
  s_swappc_b64  s[0:1], s[0:1]
  s_waitcnt     vmcnt(0)
  v_mul_lo_i32  v11, v16, 3
  s_or_b32      s33, s4, 0x00100000 // wrscc
  s_mov_b32     s32, s3
  s_mov_b32     s34, -1
  s_mov_b32     s35, 0x00024fac
  v_add_i32     v0, vcc, 26, v11
  buffer_load_dwordx4  v[0:3], v0, s[32:35], 0 idxen
  v_add_i32     v14, vcc, 27, v11
  buffer_load_dwordx4  v[24:27], v14, s[32:35], 0 idxen
  v_mul_lo_i32  v14, v17, 3
  v_add_i32     v11, vcc, 28, v11
  v_mul_lo_i32  v18, v18, 3
  v_mul_lo_i32  v19, v19, 3
  v_add_i32     v28, vcc, 26, v14
  v_add_i32     v32, vcc, 27, v14
  v_add_i32     v33, vcc, 28, v14
  buffer_load_dwordx4  v[14:17], v11, s[32:35], 0 idxen
  buffer_load_dwordx4  v[28:31], v28, s[32:35], 0 idxen
  v_add_i32     v41, vcc, 28, v19
  s_buffer_load_dwordx16  s[8:23], s[32:35], 0x4c
  s_buffer_load_dwordx8  s[24:31], s[32:35], 0x5c
  s_buffer_load_dwordx4  s[36:39], s[32:35], 0x64
  s_mov_b32     s1, 0
  s_load_dwordx4  s[0:3], s[0:1], 0x08
  s_waitcnt     vmcnt(3)
  v_mul_legacy_f32  v11, v0, v20
  v_mul_legacy_f32  v34, v1, v20
  v_mul_legacy_f32  v35, v2, v20
  v_mul_legacy_f32  v36, v3, v20
  buffer_load_dwordx4  v[0:3], v32, s[32:35], 0 idxen
  s_waitcnt     vmcnt(3)
  v_mul_legacy_f32  v37, v27, v20
  v_mul_legacy_f32  v24, v24, v20
  v_mul_legacy_f32  v25, v25, v20
  v_mul_legacy_f32  v26, v26, v20
  v_add_i32     v27, vcc, 26, v18
  v_add_i32     v32, vcc, 27, v18
  s_waitcnt     vmcnt(1)
  v_mac_legacy_f32  v11, v28, v21
  v_mad_legacy_f32  v28, v29, v21, v34
  v_mad_legacy_f32  v29, v30, v21, v35
  v_mad_legacy_f32  v30, v31, v21, v36
  v_mul_legacy_f32  v38, v14, v20
  v_mul_legacy_f32  v39, v15, v20
  v_mul_legacy_f32  v40, v16, v20
  v_mul_legacy_f32  v20, v17, v20
  buffer_load_dwordx4  v[14:17], v33, s[32:35], 0 idxen
  v_add_i32     v18, vcc, 28, v18
  v_add_i32     v36, vcc, 26, v19
  s_waitcnt     vmcnt(1)
  v_mad_legacy_f32  v35, v3, v21, v37
  v_mad_legacy_f32  v31, v0, v21, v24
  v_mad_legacy_f32  v34, v2, v21, v26
  v_mad_legacy_f32  v33, v1, v21, v25
  buffer_load_dwordx4  v[24:27], v27, s[32:35], 0 idxen
  buffer_load_dwordx4  v[0:3], v32, s[32:35], 0 idxen
  v_add_i32     v37, vcc, 27, v19
  s_waitcnt     vmcnt(2)
  v_mad_legacy_f32  v19, v14, v21, v38
  v_mad_legacy_f32  v38, v15, v21, v39
  v_mad_legacy_f32  v39, v16, v21, v40
  v_mac_legacy_f32  v20, v17, v21
  buffer_load_dwordx4  v[14:17], v18, s[32:35], 0 idxen
  s_waitcnt     vmcnt(2)
  v_mad_legacy_f32  v18, v25, v22, v28
  v_mac_legacy_f32  v11, v24, v22
  s_waitcnt     vmcnt(1)
  v_mad_legacy_f32  v24, v0, v22, v31
  v_mad_legacy_f32  v26, v26, v22, v29
  v_mad_legacy_f32  v29, v3, v22, v35
  v_mad_legacy_f32  v25, v1, v22, v33
  v_mad_legacy_f32  v28, v2, v22, v34
  buffer_load_dwordx4  v[0:3], v36, s[32:35], 0 idxen
  v_mad_legacy_f32  v27, v27, v22, v30
  s_waitcnt     vmcnt(1)
  v_mad_legacy_f32  v30, v14, v22, v19
  v_mad_legacy_f32  v31, v15, v22, v38
  v_mad_legacy_f32  v32, v16, v22, v39
  v_mad_legacy_f32  v22, v17, v22, v20
  s_waitcnt     vmcnt(0)
  v_mad_legacy_f32  v1, v1, v23, v18
  buffer_load_dwordx4  v[14:17], v41, s[32:35], 0 idxen
  buffer_load_dwordx4  v[18:21], v37, s[32:35], 0 idxen
  v_mad_legacy_f32  v0, v0, v23, v11
  v_mad_legacy_f32  v2, v2, v23, v26
  v_mad_legacy_f32  v3, v3, v23, v27
  s_waitcnt     vmcnt(1)
  v_mad_legacy_f32  v11, v17, v23, v22
  v_mul_legacy_f32  v17, v0, v4
  v_mac_legacy_f32  v17, v5, v1
  v_mac_legacy_f32  v17, v6, v2
  v_mad_legacy_f32  v3, v7, v3, v17
  s_waitcnt     vmcnt(0)
  v_mad_legacy_f32  v17, v18, v23, v24
  v_mul_legacy_f32  v0, v0, v8
  v_mad_legacy_f32  v19, v19, v23, v25
  v_mul_legacy_f32  v18, v17, v4
  v_mad_legacy_f32  v14, v14, v23, v30
  v_mac_legacy_f32  v0, v9, v1
  v_mad_legacy_f32  v15, v15, v23, v31
  v_mul_legacy_f32  v4, v14, v4
  v_mad_legacy_f32  v20, v20, v23, v28
  v_mac_legacy_f32  v18, v5, v19
  v_mul_legacy_f32  v1, v17, v8
  v_mac_legacy_f32  v4, v5, v15
  v_mad_legacy_f32  v16, v16, v23, v32
  v_mac_legacy_f32  v0, v10, v2
  v_mul_legacy_f32  v2, v14, v8
  v_mad_legacy_f32  v21, v21, v23, v29
  v_mac_legacy_f32  v18, v6, v20
  v_mac_legacy_f32  v4, v6, v16
  v_mac_legacy_f32  v2, v9, v15
  v_mac_legacy_f32  v1, v9, v19
  v_mac_legacy_f32  v18, v7, v21
  s_waitcnt     lgkmcnt(0)
  v_mul_legacy_f32  v5, s20, v3
  v_mul_legacy_f32  v6, s24, v3
  v_mul_legacy_f32  v8, s28, v3
  v_mac_legacy_f32  v2, v10, v16
  v_mac_legacy_f32  v4, v7, v11
  v_mac_legacy_f32  v5, s21, v18
  v_mac_legacy_f32  v6, s25, v18
  v_mac_legacy_f32  v8, s29, v18
  v_mac_legacy_f32  v1, v10, v20
  v_mul_legacy_f32  v16, s12, v0
  v_mul_legacy_f32  v15, s8, v0
  v_mac_legacy_f32  v5, s22, v4
  v_mac_legacy_f32  v6, s26, v4
  v_mac_legacy_f32  v8, s30, v4
  v_mac_legacy_f32  v16, s13, v1
  v_mac_legacy_f32  v15, s9, v1
  v_mul_legacy_f32  v0, s16, v0
  v_mac_legacy_f32  v5, s23, v7
  v_mac_legacy_f32  v6, s27, v7
  v_mac_legacy_f32  v8, s31, v7
  s_buffer_load_dword  s4, s[32:35], 0x03
  s_buffer_load_dwordx16  s[20:35], s[32:35], 0x38
  v_mac_legacy_f32  v16, s14, v2
  v_mac_legacy_f32  v0, s17, v1
  v_mac_legacy_f32  v15, s10, v2
  v_mul_legacy_f32  v1, v16, v16
  v_mac_legacy_f32  v0, s18, v2
  v_mac_legacy_f32  v1, v15, v15
  v_mac_legacy_f32  v1, v0, v0
  v_rsq_f32     v1, v1
  v_mul_legacy_f32  v9, s36, v3
  s_waitcnt     lgkmcnt(0)
  v_mul_legacy_f32  v10, s24, v3
  v_mul_legacy_f32  v11, s28, v3
  v_mul_legacy_f32  v14, s32, v3
  v_mad_legacy_f32  v2, v18, s33, v14
  v_mac_legacy_f32  v9, s37, v18
  v_mac_legacy_f32  v10, s25, v18
  v_mac_legacy_f32  v11, s29, v18
  v_mac_legacy_f32  v9, s38, v4
  v_mac_legacy_f32  v10, s26, v4
  v_mac_legacy_f32  v11, s30, v4
  v_mac_legacy_f32  v2, s34, v4
  v_mul_legacy_f32  v14, v1, v15
  v_mac_legacy_f32  v9, s39, v7
  v_mac_legacy_f32  v10, s27, v7
  v_mac_legacy_f32  v11, s31, v7
  v_mac_legacy_f32  v2, s35, v7
  v_mul_legacy_f32  v15, v1, v16
  v_mul_legacy_f32  v0, v1, v0
  v_mul_legacy_f32  v1, s21, v18
  v_mul_legacy_f32  v7, s23, v7
  v_mac_legacy_f32  v1, s20, v3
  v_mad_legacy_f32  v3, v4, s22, v7
  v_add_f32     v1, v1, v3 clamp
  buffer_store_dword  v5, v0, s[0:3], s7 offset:64 glc slc
  buffer_store_dword  v6, v0, s[0:3], s7 offset:68 glc slc
  buffer_store_dword  v8, v0, s[0:3], s7 offset:72 glc slc
  buffer_store_dword  v9, v0, s[0:3], s7 offset:76 glc slc
  buffer_store_dword  v12, v0, s[0:3], s7 glc slc
  buffer_store_dword  v13, v0, s[0:3], s7 offset:4 glc slc
  buffer_store_dword  v10, v0, s[0:3], s7 offset:16 glc slc
  buffer_store_dword  v11, v0, s[0:3], s7 offset:20 glc slc
  buffer_store_dword  v2, v0, s[0:3], s7 offset:24 glc slc
  buffer_store_dword  v1, v0, s[0:3], s7 offset:28 glc slc
  buffer_store_dword  v14, v0, s[0:3], s7 offset:32 glc slc
  buffer_store_dword  v15, v0, s[0:3], s7 offset:36 glc slc
  buffer_store_dword  v0, v0, s[0:3], s7 offset:40 glc slc
  v_mov_b32     v0, 1.0
  buffer_store_dword  v0, v0, s[0:3], s7 offset:48 glc slc
  buffer_store_dword  v0, v0, s[0:3], s7 offset:52 glc slc
  buffer_store_dword  v0, v0, s[0:3], s7 offset:56 glc slc
  v_mov_b32     v0, s4
  buffer_store_dword  v0, v0, s[0:3], s7 offset:60 glc slc
  s_endpgm      
end


NumVGPR=42,NumSGPR=42,LDS=0,Scratch=0,Occpancy=5

// Shader Type               : (VS)
// Shader Hw Stage           : (LS)

// Shader Instructions:
shader main
  asic(CI)
  type(VS)
  s_swappc_b64  s[0:1], s[0:1]
  s_waitcnt     vmcnt(0)
  v_mul_lo_i32  v0, v16, 3
  s_or_b32      s25, s4, 0x00100000 // wrscc
  s_mov_b32     s24, s3
  s_mov_b32     s26, -1
  s_mov_b32     s27, 0x00024fac
  v_add_i32     v2, vcc, 26, v0
  buffer_load_dwordx4  v[24:27], v2, s[24:27], 0 idxen
  v_mul_lo_i32  v2, v17, 3
  v_add_i32     v14, vcc, 27, v0
  v_add_i32     v0, vcc, 28, v0
  buffer_load_dwordx4  v[14:17], v14, s[24:27], 0 idxen
  v_mul_lo_i32  v3, v18, 3
  v_add_i32     v18, vcc, 26, v2
  buffer_load_dwordx4  v[28:31], v0, s[24:27], 0 idxen
  buffer_load_dwordx4  v[32:35], v18, s[24:27], 0 idxen
  v_mul_lo_i32  v11, v19, 3
  s_buffer_load_dwordx16  s[0:15], s[24:27], 0x4c
  s_buffer_load_dwordx8  s[16:23], s[24:27], 0x5c
  s_buffer_load_dwordx4  s[28:31], s[24:27], 0x64
  s_mov_b32     m0, -1
  s_waitcnt     vmcnt(3)
  v_mul_legacy_f32  v18, v24, v20
  v_mul_legacy_f32  v24, v26, v20
  v_add_i32     v26, vcc, 27, v2
  v_mul_legacy_f32  v19, v25, v20
  s_waitcnt     vmcnt(2)
  v_mul_legacy_f32  v36, v15, v20
  v_mul_legacy_f32  v37, v16, v20
  v_mul_legacy_f32  v38, v17, v20
  s_waitcnt     vmcnt(1)
  v_mul_legacy_f32  v0, v29, v20
  v_mul_legacy_f32  v29, v14, v20
  buffer_load_dwordx4  v[14:17], v26, s[24:27], 0 idxen
  v_mul_legacy_f32  v25, v27, v20
  v_mul_legacy_f32  v28, v28, v20
  v_mul_legacy_f32  v30, v30, v20
  v_mul_legacy_f32  v20, v31, v20
  v_add_i32     v2, vcc, 28, v2
  v_add_i32     v31, vcc, 26, v3
  s_waitcnt     vmcnt(1)
  v_mad_legacy_f32  v34, v34, v21, v24
  v_mad_legacy_f32  v35, v35, v21, v25
  buffer_load_dwordx4  v[24:27], v2, s[24:27], 0 idxen
  v_mad_legacy_f32  v32, v32, v21, v18
  v_add_i32     v18, vcc, 27, v3
  v_mad_legacy_f32  v33, v33, v21, v19
  v_add_i32     v3, vcc, 28, v3
  s_waitcnt     vmcnt(1)
  v_mad_legacy_f32  v2, v17, v21, v38
  v_mac_legacy_f32  v29, v14, v21
  v_mac_legacy_f32  v36, v15, v21
  v_mac_legacy_f32  v37, v16, v21
  buffer_load_dwordx4  v[14:17], v31, s[24:27], 0 idxen
  v_add_i32     v31, vcc, 26, v11
  v_add_i32     v38, vcc, 27, v11
  v_add_i32     v11, vcc, 28, v11
  s_waitcnt     vmcnt(1)
  v_mac_legacy_f32  v28, v24, v21
  v_mac_legacy_f32  v0, v25, v21
  v_mac_legacy_f32  v30, v26, v21
  v_mad_legacy_f32  v39, v27, v21, v20
  buffer_load_dwordx4  v[18:21], v18, s[24:27], 0 idxen
  buffer_load_dwordx4  v[24:27], v3, s[24:27], 0 idxen
  s_waitcnt     vmcnt(2)
  v_mad_legacy_f32  v3, v15, v22, v33
  v_mac_legacy_f32  v32, v14, v22
  v_mac_legacy_f32  v34, v16, v22
  v_mac_legacy_f32  v35, v17, v22
  buffer_load_dwordx4  v[14:17], v31, s[24:27], 0 idxen
  s_waitcnt     vmcnt(2)
  v_mad_legacy_f32  v33, v19, v22, v36
  v_mac_legacy_f32  v29, v18, v22
  v_mad_legacy_f32  v36, v20, v22, v37
  v_mac_legacy_f32  v2, v21, v22
  buffer_load_dwordx4  v[18:21], v38, s[24:27], 0 idxen
  s_waitcnt     vmcnt(2)
  v_mac_legacy_f32  v0, v25, v22
  s_waitcnt     vmcnt(1)
  v_mac_legacy_f32  v3, v15, v23
  v_mad_legacy_f32  v15, v24, v22, v28
  v_mad_legacy_f32  v28, v26, v22, v30
  v_mad_legacy_f32  v22, v27, v22, v39
  buffer_load_dwordx4  v[24:27], v11, s[24:27], 0 idxen
  v_mad_legacy_f32  v14, v14, v23, v32
  v_mad_legacy_f32  v16, v16, v23, v34
  v_mad_legacy_f32  v17, v17, v23, v35
  s_waitcnt     vmcnt(1)
  v_mac_legacy_f32  v2, v21, v23
  v_mad_legacy_f32  v18, v18, v23, v29
  v_mad_legacy_f32  v11, v19, v23, v33
  v_mad_legacy_f32  v19, v20, v23, v36
  s_waitcnt     vmcnt(0)
  v_mad_legacy_f32  v21, v27, v23, v22
  v_mul_legacy_f32  v22, v14, v4
  v_mac_legacy_f32  v22, v5, v3
  v_mac_legacy_f32  v22, v6, v16
  v_mad_legacy_f32  v17, v7, v17, v22
  v_mul_legacy_f32  v22, v18, v4
  v_mac_legacy_f32  v22, v5, v11
  v_mac_legacy_f32  v22, v6, v19
  v_mac_legacy_f32  v22, v7, v2
  v_mul_legacy_f32  v2, v14, v8
  v_mad_legacy_f32  v14, v24, v23, v15
  v_mac_legacy_f32  v2, v9, v3
  v_mad_legacy_f32  v15, v10, v16, v2
  v_mul_legacy_f32  v2, v18, v8
  v_mac_legacy_f32  v0, v25, v23
  v_mul_legacy_f32  v4, v14, v4
  v_mac_legacy_f32  v2, v9, v11
  v_mac_legacy_f32  v4, v5, v0
  v_mad_legacy_f32  v20, v26, v23, v28
  v_mac_legacy_f32  v4, v6, v20
  v_mad_legacy_f32  v11, v10, v19, v2
  v_mul_legacy_f32  v2, v14, v8
  v_mad_legacy_f32  v0, v9, v0, v2
  s_waitcnt     lgkmcnt(0)
  v_mul_legacy_f32  v2, s12, v17
  v_mul_legacy_f32  v3, s16, v17
  v_mul_legacy_f32  v16, s4, v15
  v_mad_legacy_f32  v6, v7, v21, v4
  v_mul_legacy_f32  v4, s20, v17
  v_mul_legacy_f32  v14, s0, v15
  v_mac_legacy_f32  v2, s13, v22
  v_mac_legacy_f32  v3, s17, v22
  v_mac_legacy_f32  v4, s21, v22
  v_mac_legacy_f32  v0, v10, v20
  v_mac_legacy_f32  v16, s5, v11
  v_mul_legacy_f32  v15, s8, v15
  v_mac_legacy_f32  v14, s1, v11
  v_mac_legacy_f32  v2, s14, v6
  v_mac_legacy_f32  v3, s18, v6
  v_mac_legacy_f32  v4, s22, v6
  v_mad_legacy_f32  v11, v11, s9, v15
  v_mac_legacy_f32  v16, s6, v0
  v_mac_legacy_f32  v2, s15, v7
  v_mac_legacy_f32  v3, s19, v7
  v_mac_legacy_f32  v4, s23, v7
  s_buffer_load_dword  s3, s[24:27], 0x03
  s_buffer_load_dwordx16  s[12:27], s[24:27], 0x38
  v_mac_legacy_f32  v14, s2, v0
  v_mad_legacy_f32  v15, v0, s10, v11
  v_mul_legacy_f32  v0, v16, v16
  v_mac_legacy_f32  v0, v14, v14
  v_mac_legacy_f32  v0, v15, v15
  v_rsq_f32     v18, v0
  v_mul_legacy_f32  v5, s28, v17
  s_waitcnt     lgkmcnt(0)
  v_mul_legacy_f32  v8, s16, v17
  v_mul_legacy_f32  v9, s20, v17
  v_mul_legacy_f32  v10, s24, v17
  v_mad_legacy_f32  v0, v22, s25, v10
  v_mac_legacy_f32  v5, s29, v22
  v_mac_legacy_f32  v8, s17, v22
  v_mac_legacy_f32  v9, s21, v22
  s_movk_i32    s0, 0x0050
  v_mac_legacy_f32  v5, s30, v6
  v_mac_legacy_f32  v8, s18, v6
  v_mac_legacy_f32  v9, s22, v6
  v_mac_legacy_f32  v0, s26, v6
  v_mul_legacy_f32  v11, v18, v16
  v_mul_lo_i32  v16, v1, s0
  v_mul_legacy_f32  v10, v18, v14
  v_mul_legacy_f32  v14, v18, v15
  v_mul_legacy_f32  v15, s13, v22
  v_mac_legacy_f32  v5, s31, v7
  v_mac_legacy_f32  v8, s19, v7
  v_mac_legacy_f32  v9, s23, v7
  v_mac_legacy_f32  v0, s27, v7
  v_mul_legacy_f32  v7, s15, v7
  v_mac_legacy_f32  v15, s12, v17
  v_mad_legacy_f32  v1, v6, s14, v7
  v_add_f32     v1, v15, v1 clamp
  ds_write2_b64  v16, v[2:3], v[4:5] offset0:8 offset1:9
  ds_write2_b64  v16, v[12:13], v[0:1] offset1:3
  ds_write_b32  v16, v14 offset:40
  ds_write2_b64  v16, v[8:9], v[10:11] offset0:2 offset1:4
  v_mov_b32     v0, 1.0
  v_mov_b32     v1, 1.0
  v_mov_b32     v2, 1.0
  v_mov_b32     v3, s3
  ds_write2_b64  v16, v[0:1], v[2:3] offset0:6 offset1:7
  s_endpgm      
end


NumVGPR=40,NumSGPR=34,LDS=0,Scratch=0,Occpancy=6


#endif

const unsigned char SkinnedEffect_VSSkinnedPixelLightingFourBones[] = {
  0x44, 0x58, 0x42, 0x43, 0x26, 0x74, 0x5a, 0x3b, 0xcd, 0xcd, 0xb0, 0x19,
  0x08, 0xee, 0xfe, 0x84, 0x52, 0x39, 0xa2, 0x4f, 0x01, 0x00, 0x00, 0x00,
  0x98, 0x23, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00,
  0x50, 0x00, 0x00, 0x00, 0x38, 0x01, 0x00, 0x00, 0x04, 0x02, 0x00, 0x00,
  0xe4, 0x03, 0x00, 0x00, 0x68, 0x04, 0x00, 0x00, 0x08, 0x05, 0x00, 0x00,
  0x24, 0x05, 0x00, 0x00, 0x53, 0x46, 0x49, 0x30, 0x08, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x49, 0x53, 0x47, 0x31,
  0xe0, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xa8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x0f, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xb4, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x07, 0x07, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xbb, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x03, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xc4, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x0f, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xd1, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x0f, 0x0f, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x53, 0x56, 0x5f, 0x50, 0x6f, 0x73, 0x69, 0x74,
  0x69, 0x6f, 0x6e, 0x00, 0x4e, 0x4f, 0x52, 0x4d, 0x41, 0x4c, 0x00, 0x54,
  0x45, 0x58, 0x43, 0x4f, 0x4f, 0x52, 0x44, 0x00, 0x42, 0x4c, 0x45, 0x4e,
  0x44, 0x49, 0x4e, 0x44, 0x49, 0x43, 0x45, 0x53, 0x00, 0x42, 0x4c, 0x45,
  0x4e, 0x44, 0x57, 0x45, 0x49, 0x47, 0x48, 0x54, 0x00, 0x00, 0x00, 0x00,
  0x4f, 0x53, 0x47, 0x31, 0xc4, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00,
  0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xa8, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x03, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xa8, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xa8, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x07, 0x08, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb1, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xb7, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00,
  0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x54, 0x45, 0x58, 0x43,
  0x4f, 0x4f, 0x52, 0x44, 0x00, 0x43, 0x4f, 0x4c, 0x4f, 0x52, 0x00, 0x53,
  0x56, 0x5f, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x00, 0x00,
  0x50, 0x53, 0x56, 0x30, 0xd8, 0x01, 0x00, 0x00, 0x34, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff,
  0x01, 0x00, 0x00, 0x00, 0x05, 0x05, 0x00, 0x05, 0x05, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x57, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x78, 0x00, 0x00, 0x00, 0x00, 0x53, 0x56, 0x5f, 0x50, 0x6f, 0x73, 0x69,
  0x74, 0x69, 0x6f, 0x6e, 0x00, 0x4e, 0x4f, 0x52, 0x4d, 0x41, 0x4c, 0x00,
  0x54, 0x45, 0x58, 0x43, 0x4f, 0x4f, 0x52, 0x44, 0x00, 0x42, 0x4c, 0x45,
  0x4e, 0x44, 0x49, 0x4e, 0x44, 0x49, 0x43, 0x45, 0x53, 0x00, 0x42, 0x4c,
  0x45, 0x4e, 0x44, 0x57, 0x45, 0x49, 0x47, 0x48, 0x54, 0x00, 0x54, 0x45,
  0x58, 0x43, 0x4f, 0x4f, 0x52, 0x44, 0x00, 0x54, 0x45, 0x58, 0x43, 0x4f,
  0x4f, 0x52, 0x44, 0x00, 0x54, 0x45, 0x58, 0x43, 0x4f, 0x4f, 0x52, 0x44,
  0x00, 0x43, 0x4f, 0x4c, 0x4f, 0x52, 0x00, 0x56, 0x53, 0x53, 0x6b, 0x69,
  0x6e, 0x6e, 0x65, 0x64, 0x50, 0x69, 0x78, 0x65, 0x6c, 0x4c, 0x69, 0x67,
  0x68, 0x74, 0x69, 0x6e, 0x67, 0x46, 0x6f, 0x75, 0x72, 0x42, 0x6f, 0x6e,
  0x65, 0x73, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x44, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x01, 0x43, 0x00, 0x03, 0x00, 0x00, 0x00, 0x14, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x02, 0x42, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x1d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x03, 0x44, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x04, 0x44, 0x00, 0x03, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x42, 0x00, 0x03, 0x02, 0x00, 0x00,
  0x3f, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x01, 0x44, 0x00,
  0x03, 0x02, 0x00, 0x00, 0x48, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x01, 0x02, 0x43, 0x00, 0x03, 0x02, 0x00, 0x00, 0x51, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x03, 0x44, 0x00, 0x03, 0x02, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x04, 0x44, 0x03,
  0x03, 0x04, 0x00, 0x00, 0xf0, 0x00, 0x0f, 0x00, 0xf0, 0x00, 0x0f, 0x00,
  0xf0, 0x00, 0x0f, 0x00, 0xf0, 0x00, 0x0f, 0x00, 0x00, 0x07, 0x00, 0x00,
  0x00, 0x07, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xf0, 0x07, 0x0f, 0x00, 0xf0, 0x07, 0x0f, 0x00,
  0xf0, 0x07, 0x0f, 0x00, 0xf0, 0x07, 0x0f, 0x00, 0xf0, 0x07, 0x0f, 0x00,
  0xf0, 0x07, 0x0f, 0x00, 0xf0, 0x07, 0x0f, 0x00, 0xf0, 0x07, 0x0f, 0x00,
  0x52, 0x54, 0x53, 0x30, 0x7c, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x7c, 0x00, 0x00, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x05, 0x00, 0x00, 0x00, 0x44, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x05, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x4c, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00,
  0x68, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff,
  0x49, 0x4c, 0x44, 0x4e, 0x98, 0x00, 0x00, 0x00, 0x00, 0x00, 0x92, 0x00,
  0x43, 0x3a, 0x5c, 0x55, 0x73, 0x65, 0x72, 0x73, 0x5c, 0x6d, 0x61, 0x72,
  0x63, 0x75, 0x5c, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x73,
  0x5c, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x58, 0x54, 0x4b, 0x31, 0x32,
  0x2d, 0x6d, 0x61, 0x69, 0x6e, 0x5c, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74,
  0x58, 0x54, 0x4b, 0x31, 0x32, 0x2d, 0x6d, 0x61, 0x69, 0x6e, 0x5c, 0x53,
  0x72, 0x63, 0x2f, 0x53, 0x68, 0x61, 0x64, 0x65, 0x72, 0x73, 0x2f, 0x43,
  0x6f, 0x6d, 0x70, 0x69, 0x6c, 0x65, 0x64, 0x5c, 0x58, 0x62, 0x6f, 0x78,
  0x47, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x58, 0x62, 0x6f, 0x78, 0x4f, 0x6e,
  0x65, 0x53, 0x6b, 0x69, 0x6e, 0x6e, 0x65, 0x64, 0x45, 0x66, 0x66, 0x65,
  0x63, 0x74, 0x5f, 0x56, 0x53, 0x53, 0x6b, 0x69, 0x6e, 0x6e, 0x65, 0x64,
  0x50, 0x69, 0x78, 0x65, 0x6c, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e,
  0x67, 0x46, 0x6f, 0x75, 0x72, 0x42, 0x6f, 0x6e, 0x65, 0x73, 0x2e, 0x70,
  0x64, 0x62, 0x00, 0x00, 0x48, 0x41, 0x53, 0x48, 0x14, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xc4, 0xe0, 0xf8, 0x77, 0xdf, 0xf7, 0x4c, 0xc8,
  0xa3, 0x9a, 0x37, 0xdd, 0x75, 0x7e, 0x66, 0xdd, 0x44, 0x58, 0x49, 0x4c,
  0x6c, 0x1e, 0x00, 0x00, 0x60, 0x00, 0x01, 0x00, 0x9b, 0x07, 0x00, 0x00,
  0x44, 0x58, 0x49, 0x4c, 0x00, 0x01, 0x00, 0x00, 0x94, 0x00, 0x00, 0x00,
  0x64, 0x10, 0x00, 0x00, 0x58, 0x44, 0x41, 0x54, 0x08, 0x00, 0x00, 0x00,
  0x24, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x84, 0x00, 0x00, 0x00,
  0x7c, 0x10, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x11, 0x00, 0x00,
  0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x11, 0x00, 0x00,
  0xf2, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x15, 0x00, 0x00,
  0x45, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x4c, 0x19, 0x00, 0x00,
  0x0d, 0x04, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x5c, 0x1d, 0x00, 0x00,
  0xb0, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x0c, 0x1e, 0x00, 0x00,
  0x4a, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x58, 0x1e, 0x00, 0x00,
  0x11, 0x00, 0x00, 0x00, 0x60, 0x00, 0x01, 0x00, 0x1f, 0x04, 0x00, 0x00,
  0x44, 0x58, 0x49, 0x4c, 0x00, 0x01, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00,
  0x64, 0x10, 0x00, 0x00, 0x42, 0x43, 0xc0, 0xde, 0x21, 0x0c, 0x00, 0x00,
  0x16, 0x04, 0x00, 0x00, 0x0b, 0x82, 0x20, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x13, 0x00, 0x00, 0x00, 0x07, 0x81, 0x23, 0x91, 0x41, 0xc8, 0x04, 0x49,
  0x06, 0x10, 0x32, 0x39, 0x92, 0x01, 0x84, 0x0c, 0x25, 0x05, 0x08, 0x19,
  0x1e, 0x04, 0x8b, 0x62, 0x80, 0x18, 0x45, 0x02, 0x42, 0x92, 0x0b, 0x42,
  0xc4, 0x10, 0x32, 0x14, 0x38, 0x08, 0x18, 0x4b, 0x0a, 0x32, 0x62, 0x88,
  0x48, 0x90, 0x14, 0x20, 0x43, 0x46, 0x88, 0xa5, 0x00, 0x19, 0x32, 0x42,
  0xe4, 0x48, 0x0e, 0x90, 0x11, 0x23, 0xc4, 0x50, 0x41, 0x51, 0x81, 0x8c,
  0xe1, 0x83, 0xe5, 0x8a, 0x04, 0x31, 0x46, 0x06, 0x51, 0x18, 0x00, 0x00,
  0x08, 0x00, 0x00, 0x00, 0x1b, 0x8c, 0xe0, 0xff, 0xff, 0xff, 0xff, 0x07,
  0x40, 0x02, 0xa8, 0x0d, 0x84, 0xf0, 0xff, 0xff, 0xff, 0xff, 0x03, 0x20,
  0x6d, 0x30, 0x86, 0xff, 0xff, 0xff, 0xff, 0x1f, 0x00, 0x09, 0xa8, 0x00,
  0x49, 0x18, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x13, 0x82, 0x60, 0x42,
  0x20, 0x4c, 0x08, 0x06, 0x00, 0x00, 0x00, 0x00, 0x89, 0x20, 0x00, 0x00,
  0x32, 0x00, 0x00, 0x00, 0x32, 0x22, 0x88, 0x09, 0x20, 0x64, 0x85, 0x04,
  0x13, 0x23, 0xa4, 0x84, 0x04, 0x13, 0x23, 0xe3, 0x84, 0xa1, 0x90, 0x14,
  0x12, 0x4c, 0x8c, 0x8c, 0x0b, 0x84, 0xc4, 0x4c, 0x10, 0x98, 0xc1, 0x08,
  0x40, 0x09, 0x00, 0x0a, 0x66, 0x00, 0xe6, 0x08, 0xc0, 0x60, 0x8e, 0x00,
  0x29, 0xc6, 0x40, 0x10, 0x44, 0x41, 0x90, 0x51, 0x0c, 0x82, 0x20, 0x88,
  0x82, 0x20, 0xa4, 0x18, 0x00, 0x41, 0x10, 0xc5, 0x40, 0x4a, 0x41, 0x06,
  0x62, 0x18, 0x86, 0x61, 0x18, 0x88, 0x29, 0xc3, 0x40, 0x0c, 0xe4, 0x14,
  0x65, 0x20, 0x86, 0x61, 0x18, 0x86, 0x61, 0x18, 0x08, 0x3a, 0x6a, 0xb8,
  0xfc, 0x09, 0x7b, 0x08, 0xc9, 0xe7, 0x36, 0xaa, 0x58, 0x89, 0xc9, 0x2f,
  0x6e, 0x1b, 0x11, 0xc3, 0x30, 0x0c, 0x54, 0xdc, 0x33, 0x5c, 0xfe, 0x84,
  0x3d, 0x84, 0xe4, 0x87, 0x40, 0x33, 0x2c, 0x04, 0x0a, 0xa6, 0x42, 0x48,
  0x04, 0x45, 0x50, 0x55, 0x8a, 0x81, 0x18, 0x86, 0x81, 0xae, 0x39, 0x82,
  0xa0, 0x18, 0x14, 0x51, 0x10, 0x44, 0x46, 0xda, 0x40, 0xc0, 0x30, 0x02,
  0x31, 0x0c, 0x23, 0x0c, 0x43, 0x0e, 0x78, 0x49, 0xd0, 0xe5, 0x40, 0x97,
  0x48, 0xe1, 0x55, 0x87, 0x23, 0x4d, 0x0b, 0x80, 0x39, 0xd4, 0xe4, 0xa7,
  0x40, 0x04, 0x30, 0xc4, 0x44, 0x44, 0x12, 0x72, 0x3a, 0xcf, 0x1b, 0xbe,
  0xef, 0xf3, 0xbc, 0x0e, 0xfc, 0x40, 0x91, 0xc6, 0xb4, 0x20, 0x00, 0x00,
  0x13, 0x16, 0x72, 0xc0, 0x87, 0x74, 0x60, 0x87, 0x36, 0x68, 0x87, 0x79,
  0x68, 0x03, 0x7c, 0x10, 0x87, 0x38, 0xd8, 0xf0, 0x0a, 0xe5, 0xd0, 0x06,
  0xed, 0xa0, 0x07, 0xe5, 0xd0, 0x06, 0xf0, 0xa0, 0x07, 0x73, 0x20, 0x07,
  0x7a, 0x30, 0x07, 0x72, 0xd0, 0x06, 0xe9, 0x10, 0x07, 0x7a, 0x30, 0x07,
  0x72, 0xd0, 0x06, 0xe9, 0x80, 0x07, 0x7a, 0x30, 0x07, 0x72, 0xd0, 0x06,
  0xe9, 0x10, 0x07, 0x76, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x90, 0x0e,
  0x73, 0x20, 0x07, 0x7a, 0x30, 0x07, 0x72, 0xd0, 0x06, 0xe9, 0x60, 0x07,
  0x74, 0xa0, 0x07, 0x76, 0x40, 0x07, 0x6d, 0x60, 0x0e, 0x71, 0x60, 0x07,
  0x7a, 0x30, 0x07, 0x72, 0xd0, 0x06, 0xe6, 0x30, 0x07, 0x72, 0xa0, 0x07,
  0x73, 0x20, 0x07, 0x6d, 0x60, 0x0e, 0x76, 0x40, 0x07, 0x7a, 0x60, 0x07,
  0x74, 0xd0, 0x06, 0xee, 0x80, 0x07, 0x7a, 0x10, 0x07, 0x76, 0xa0, 0x07,
  0x73, 0x20, 0x07, 0x7a, 0x60, 0x07, 0x74, 0x30, 0xe4, 0x09, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0xc8, 0x63, 0x00,
  0x01, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x90, 0x07,
  0x01, 0x02, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x21,
  0x8f, 0x02, 0x04, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x43, 0x1e, 0x06, 0x08, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x86, 0x3c, 0x0e, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x0c, 0x79, 0x20, 0x20, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x18, 0xf2, 0x54, 0x40, 0x00, 0x0c, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x30, 0xe4, 0xb9, 0x80, 0x00, 0x08, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0xc8, 0xa3, 0x01, 0x01, 0x30, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x16, 0x08, 0x00, 0x00, 0x00,
  0x19, 0x00, 0x00, 0x00, 0x32, 0x1e, 0x98, 0x14, 0x19, 0x11, 0x4c, 0x90,
  0x8c, 0x09, 0x26, 0x47, 0xc6, 0x04, 0x43, 0x22, 0x4a, 0x60, 0x04, 0xa0,
  0x20, 0x8a, 0xa1, 0x80, 0x79, 0xca, 0xa0, 0x3c, 0xca, 0xa1, 0x08, 0x0a,
  0x81, 0x8a, 0x92, 0x18, 0x01, 0x28, 0x84, 0x32, 0x28, 0x82, 0x52, 0x20,
  0x72, 0x06, 0x80, 0xca, 0xb1, 0x2c, 0x8a, 0x82, 0x4f, 0xd0, 0x83, 0x4f,
  0xd0, 0x83, 0x4f, 0xd0, 0x83, 0x4f, 0xd0, 0x03, 0xf1, 0x00, 0xc4, 0x03,
  0x10, 0x0f, 0x80, 0x40, 0x00, 0x00, 0xf8, 0x0f, 0x3d, 0xf8, 0x0f, 0x3d,
  0xf8, 0x0f, 0x3d, 0xf8, 0x0f, 0x3d, 0xf8, 0x0f, 0x3d, 0xf8, 0x0f, 0x3d,
  0xf8, 0x0f, 0x3d, 0xf8, 0x0f, 0x3d, 0x00, 0x00, 0x79, 0x18, 0x00, 0x00,
  0x95, 0x00, 0x00, 0x00, 0x1a, 0x03, 0x4c, 0x90, 0x46, 0x02, 0x13, 0xc4,
  0x36, 0xf8, 0xfa, 0xc2, 0x12, 0x7a, 0xc2, 0xfa, 0x82, 0x2a, 0x92, 0xfa,
  0xa2, 0x42, 0x92, 0x2a, 0x0a, 0x22, 0xfa, 0x9a, 0x1a, 0x92, 0x0a, 0xa2,
  0x1a, 0x42, 0xfa, 0x9a, 0x4a, 0xd2, 0x2a, 0xfa, 0x62, 0x4a, 0x6a, 0x4a,
  0xa2, 0xfa, 0x4a, 0x72, 0xfa, 0x12, 0xca, 0xa2, 0x2a, 0x9a, 0x62, 0x00,
  0xb3, 0x41, 0x08, 0x04, 0x76, 0x64, 0x78, 0x63, 0x78, 0x62, 0x6f, 0x78,
  0x20, 0x32, 0x34, 0x31, 0x30, 0x2e, 0x32, 0x34, 0x31, 0x30, 0x2e, 0x31,
  0x31, 0x31, 0x31, 0x36, 0x2e, 0x31, 0x30, 0x37, 0x34, 0x31, 0x1b, 0x02,
  0x62, 0x82, 0x40, 0x28, 0x13, 0x04, 0x62, 0xd9, 0x20, 0x18, 0xc7, 0x04,
  0x81, 0x60, 0x36, 0x08, 0x46, 0x42, 0xc1, 0x6e, 0x6e, 0x82, 0x40, 0x34,
  0x1b, 0x86, 0x85, 0x39, 0x26, 0x08, 0x64, 0xa0, 0x11, 0x98, 0x20, 0x10,
  0xce, 0x06, 0xe4, 0x70, 0x9e, 0xe3, 0x30, 0x20, 0x60, 0x43, 0x10, 0x6d,
  0x20, 0x00, 0x40, 0x02, 0x26, 0x08, 0x65, 0xb0, 0x6d, 0x08, 0xa8, 0x09,
  0x82, 0x00, 0xf0, 0xb3, 0x9a, 0x9a, 0x5a, 0x4b, 0x73, 0x73, 0x2b, 0x23,
  0x83, 0x4a, 0xc3, 0x2b, 0x63, 0x63, 0x4a, 0x3b, 0x43, 0xa3, 0x4b, 0x73,
  0x3b, 0x33, 0x7a, 0xab, 0x93, 0x13, 0x7a, 0x73, 0x2b, 0x9b, 0xe3, 0x32,
  0x65, 0xf5, 0x05, 0xf5, 0x36, 0x97, 0x46, 0x97, 0xf6, 0xe6, 0x36, 0x41,
  0x28, 0xa8, 0x09, 0x42, 0x51, 0x6d, 0x08, 0x8e, 0x09, 0x42, 0x61, 0x4d,
  0x10, 0x88, 0x67, 0x82, 0x40, 0x40, 0x1b, 0x84, 0xce, 0xdb, 0xb0, 0x1c,
  0x58, 0xa6, 0x6d, 0x9a, 0xc1, 0x1d, 0xda, 0x47, 0xc3, 0xe9, 0x49, 0xaa,
  0x29, 0x88, 0x69, 0x82, 0x50, 0x5c, 0x13, 0x04, 0x22, 0xda, 0x20, 0x74,
  0x63, 0xb0, 0x61, 0x31, 0xc2, 0x20, 0xd3, 0x36, 0xcd, 0x10, 0x03, 0x43,
  0x23, 0x83, 0x09, 0x02, 0x21, 0x11, 0xa1, 0x2a, 0xc2, 0x1a, 0x7a, 0x7a,
  0x92, 0x22, 0x9a, 0x20, 0x14, 0xd8, 0x06, 0xa1, 0xeb, 0x36, 0x2c, 0x66,
  0x70, 0x06, 0x99, 0xb6, 0x69, 0x06, 0x1a, 0x98, 0x81, 0x96, 0x06, 0x64,
  0x84, 0x98, 0x8a, 0x9c, 0x88, 0x92, 0x9c, 0x88, 0x92, 0x86, 0x8a, 0xa6,
  0x26, 0x08, 0x45, 0xb6, 0x61, 0xe9, 0xd6, 0x80, 0x0d, 0xb4, 0x4d, 0x33,
  0xb8, 0x4e, 0xfb, 0x26, 0x08, 0xc4, 0xc4, 0x45, 0x88, 0xa9, 0xc8, 0x89,
  0xe8, 0xaa, 0x28, 0xe9, 0x08, 0x89, 0x6a, 0xc3, 0xe2, 0x06, 0x6f, 0x90,
  0x69, 0x9b, 0x66, 0x70, 0x6e, 0xa0, 0x7d, 0x1b, 0x0a, 0x30, 0x28, 0x03,
  0x35, 0x68, 0x03, 0x38, 0xd8, 0xb0, 0x1c, 0x67, 0x90, 0x69, 0x1b, 0x1a,
  0x18, 0x68, 0x70, 0x68, 0x69, 0xb0, 0x21, 0x30, 0x36, 0x2c, 0xc6, 0x19,
  0x64, 0xda, 0x1c, 0xa0, 0x81, 0xc1, 0x19, 0xda, 0xb7, 0x21, 0x30, 0x83,
  0x0d, 0x8b, 0x19, 0x9c, 0x41, 0xa6, 0xd5, 0x01, 0x1a, 0x18, 0x62, 0x60,
  0x06, 0x1a, 0x19, 0xb0, 0x18, 0x7a, 0x62, 0x7a, 0x92, 0xda, 0xb0, 0x74,
  0x77, 0x90, 0x69, 0x1b, 0x1a, 0x18, 0x5c, 0xa7, 0x7d, 0x1b, 0x16, 0x37,
  0xc0, 0x32, 0x31, 0xd8, 0x38, 0x83, 0x73, 0x03, 0xed, 0xdb, 0x50, 0xc8,
  0x01, 0x1d, 0xd8, 0x01, 0x1e, 0xe4, 0xc1, 0x86, 0x21, 0x0e, 0xf4, 0x00,
  0xd8, 0x50, 0x58, 0xd7, 0x1e, 0x4c, 0x40, 0x2b, 0x3c, 0xb1, 0x37, 0x3c,
  0x97, 0xb1, 0xb7, 0x36, 0xb8, 0x34, 0xb6, 0x32, 0x39, 0x97, 0x37, 0x38,
  0xba, 0xb4, 0x37, 0xb7, 0xb9, 0x29, 0x81, 0x50, 0x85, 0x8d, 0xcd, 0xae,
  0xcd, 0x25, 0x8d, 0xac, 0xcc, 0x8d, 0x6e, 0x4a, 0x40, 0x54, 0x21, 0xc3,
  0x73, 0xb1, 0x2b, 0x93, 0x9b, 0x4b, 0x7b, 0x73, 0x9b, 0x12, 0x1c, 0x4d,
  0xc8, 0xf0, 0x5c, 0xec, 0xc2, 0xd8, 0xec, 0xca, 0xe4, 0xa6, 0x04, 0x49,
  0x1d, 0x32, 0x3c, 0x97, 0x39, 0xb4, 0x30, 0xb2, 0x32, 0xb9, 0xa6, 0x37,
  0xb2, 0x32, 0xb6, 0x29, 0x01, 0x53, 0x86, 0x0c, 0xcf, 0x45, 0xae, 0x6c,
  0xee, 0xad, 0x4e, 0x6e, 0xac, 0x6c, 0x6e, 0x4a, 0x20, 0xd5, 0x21, 0xc3,
  0x73, 0xb1, 0x4b, 0x2b, 0xbb, 0x4b, 0x22, 0x9b, 0xa2, 0x0b, 0xa3, 0x2b,
  0x9b, 0x12, 0x50, 0x75, 0xc8, 0xf0, 0x5c, 0xca, 0xdc, 0xe8, 0xe4, 0xf2,
  0xa0, 0xde, 0xd2, 0xdc, 0xe8, 0xe6, 0xa6, 0x04, 0x7b, 0x00, 0x00, 0x00,
  0x79, 0x18, 0x00, 0x00, 0x50, 0x00, 0x00, 0x00, 0x33, 0x08, 0x80, 0x1c,
  0xc4, 0xe1, 0x1c, 0x66, 0x14, 0x01, 0x3d, 0x88, 0x43, 0x38, 0x84, 0xc3,
  0x8c, 0x42, 0x80, 0x07, 0x79, 0x78, 0x07, 0x73, 0x98, 0x71, 0x0c, 0xe6,
  0x00, 0x0f, 0xed, 0x10, 0x0e, 0xf4, 0x80, 0x0e, 0x33, 0x0c, 0x42, 0x1e,
  0xc2, 0xc1, 0x1d, 0xce, 0xa1, 0x1c, 0x66, 0x30, 0x05, 0x3d, 0x88, 0x43,
  0x38, 0x84, 0x83, 0x1b, 0xcc, 0x03, 0x3d, 0xc8, 0x43, 0x3d, 0x8c, 0x03,
  0x3d, 0xcc, 0x78, 0x8c, 0x74, 0x70, 0x07, 0x7b, 0x08, 0x07, 0x79, 0x48,
  0x87, 0x70, 0x70, 0x07, 0x7a, 0x70, 0x03, 0x76, 0x78, 0x87, 0x70, 0x20,
  0x87, 0x19, 0xcc, 0x11, 0x0e, 0xec, 0x90, 0x0e, 0xe1, 0x30, 0x0f, 0x6e,
  0x30, 0x0f, 0xe3, 0xf0, 0x0e, 0xf0, 0x50, 0x0e, 0x33, 0x10, 0xc4, 0x1d,
  0xde, 0x21, 0x1c, 0xd8, 0x21, 0x1d, 0xc2, 0x61, 0x1e, 0x66, 0x30, 0x89,
  0x3b, 0xbc, 0x83, 0x3b, 0xd0, 0x43, 0x39, 0xb4, 0x03, 0x3c, 0xbc, 0x83,
  0x3c, 0x84, 0x03, 0x3b, 0xcc, 0xf0, 0x14, 0x76, 0x60, 0x07, 0x7b, 0x68,
  0x07, 0x37, 0x68, 0x87, 0x72, 0x68, 0x07, 0x37, 0x80, 0x87, 0x70, 0x90,
  0x87, 0x70, 0x60, 0x07, 0x76, 0x28, 0x07, 0x76, 0xf8, 0x05, 0x76, 0x78,
  0x87, 0x77, 0x80, 0x87, 0x5f, 0x08, 0x87, 0x71, 0x18, 0x87, 0x72, 0x98,
  0x87, 0x79, 0x98, 0x81, 0x2c, 0xee, 0xf0, 0x0e, 0xee, 0xe0, 0x0e, 0xf5,
  0xc0, 0x0e, 0xec, 0x30, 0x03, 0x62, 0xc8, 0xa1, 0x1c, 0xe4, 0xa1, 0x1c,
  0xcc, 0xa1, 0x1c, 0xe4, 0xa1, 0x1c, 0xdc, 0x61, 0x1c, 0xca, 0x21, 0x1c,
  0xc4, 0x81, 0x1d, 0xca, 0x61, 0x06, 0xd6, 0x90, 0x43, 0x39, 0xc8, 0x43,
  0x39, 0x98, 0x43, 0x39, 0xc8, 0x43, 0x39, 0xb8, 0xc3, 0x38, 0x94, 0x43,
  0x38, 0x88, 0x03, 0x3b, 0x94, 0xc3, 0x2f, 0xbc, 0x83, 0x3c, 0xfc, 0x82,
  0x3b, 0xd4, 0x03, 0x3b, 0xb0, 0xc3, 0x0c, 0xc4, 0x21, 0x07, 0x7c, 0x70,
  0x03, 0x7a, 0x28, 0x87, 0x76, 0x80, 0x87, 0x19, 0xca, 0xc3, 0x0e, 0xec,
  0x60, 0x0f, 0xed, 0xe0, 0x06, 0xec, 0xf0, 0x0e, 0xef, 0x00, 0x0f, 0x33,
  0x22, 0x88, 0x1c, 0xf0, 0xc1, 0x0d, 0xc8, 0x41, 0x1c, 0xce, 0xc1, 0x0d,
  0xec, 0x21, 0x1c, 0xe4, 0x81, 0x1d, 0xc2, 0x21, 0x1f, 0xde, 0xa1, 0x1e,
  0xe8, 0x01, 0x00, 0x00, 0x71, 0x20, 0x00, 0x00, 0x2b, 0x00, 0x00, 0x00,
  0x06, 0xf0, 0xbd, 0x2c, 0xab, 0x20, 0x4d, 0x43, 0x0c, 0x29, 0x72, 0x11,
  0x4b, 0x89, 0x18, 0xc7, 0x84, 0x34, 0xc6, 0xe7, 0x50, 0xd1, 0xe6, 0x34,
  0x84, 0x64, 0x07, 0xdb, 0x70, 0xf9, 0xce, 0xe3, 0x0b, 0x01, 0x55, 0x14,
  0x44, 0x54, 0x3a, 0xc0, 0x50, 0x12, 0x06, 0x20, 0x60, 0x7e, 0x71, 0xdb,
  0x96, 0x20, 0x0d, 0x97, 0xef, 0x3c, 0xbe, 0x10, 0x11, 0xc0, 0x44, 0x84,
  0x40, 0x33, 0x2c, 0x84, 0x11, 0x38, 0xc3, 0xe5, 0x3b, 0x8f, 0x3f, 0x38,
  0xd3, 0xed, 0x17, 0xb7, 0x6d, 0x06, 0xce, 0x70, 0xf9, 0xce, 0xe3, 0x0f,
  0xce, 0x84, 0xfb, 0xc5, 0x6d, 0x5b, 0xc0, 0x34, 0x5c, 0xbe, 0xf3, 0xf8,
  0x8b, 0x03, 0x0c, 0x62, 0xf3, 0x50, 0x93, 0x5f, 0xdc, 0xb6, 0x09, 0x4c,
  0xc3, 0xe5, 0x3b, 0x8f, 0xbf, 0x38, 0xc0, 0x20, 0x36, 0x0f, 0x35, 0xf9,
  0xc8, 0x6d, 0xdb, 0x40, 0x35, 0x5c, 0xbe, 0xf3, 0xf8, 0xd2, 0xe4, 0x44,
  0x04, 0x4a, 0x4d, 0x0f, 0x35, 0xf9, 0xc5, 0x6d, 0x1b, 0x82, 0x34, 0x5c,
  0xbe, 0xf3, 0xf8, 0x13, 0x11, 0x4d, 0x08, 0x10, 0x61, 0x7e, 0x71, 0xdb,
  0x56, 0xf0, 0x0c, 0x97, 0xef, 0x3c, 0x3e, 0xd5, 0x00, 0x11, 0xe6, 0x17,
  0xb7, 0x0d, 0x00, 0x00, 0x61, 0x20, 0x00, 0x00, 0x45, 0x02, 0x00, 0x00,
  0x13, 0x04, 0x41, 0x2c, 0x10, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00,
  0x94, 0x8d, 0x00, 0x10, 0x51, 0x5c, 0x65, 0x37, 0x03, 0x50, 0x0a, 0x45,
  0x53, 0x36, 0x85, 0x53, 0x32, 0x25, 0x57, 0x2c, 0xe5, 0x52, 0x30, 0x05,
  0x52, 0x22, 0x65, 0x52, 0x28, 0xa5, 0x52, 0x6e, 0xc5, 0x51, 0x70, 0x54,
  0x94, 0x00, 0x0d, 0x63, 0x04, 0x20, 0x08, 0x82, 0xf8, 0x07, 0x00, 0x00,
  0x23, 0x06, 0x09, 0x00, 0x82, 0x60, 0xa0, 0xa9, 0x81, 0xb3, 0xa1, 0x01,
  0x1a, 0x5c, 0x23, 0x06, 0x09, 0x00, 0x82, 0x60, 0x60, 0xcc, 0x41, 0x18,
  0x84, 0x41, 0x1a, 0x7c, 0xd5, 0x88, 0x41, 0x02, 0x80, 0x20, 0x18, 0x18,
  0x74, 0x20, 0x06, 0x62, 0xa0, 0x06, 0x84, 0x35, 0x62, 0x90, 0x00, 0x20,
  0x08, 0x06, 0x46, 0x1d, 0x8c, 0xc1, 0x18, 0xac, 0x81, 0x77, 0x8d, 0x18,
  0x24, 0x00, 0x08, 0x82, 0x81, 0x61, 0x07, 0x64, 0x40, 0x06, 0x6c, 0x00,
  0x06, 0xd8, 0x88, 0x41, 0x02, 0x80, 0x20, 0x18, 0x20, 0x76, 0x50, 0x06,
  0x69, 0xd0, 0x06, 0x63, 0x90, 0x8d, 0x18, 0x24, 0x00, 0x08, 0x82, 0x01,
  0x72, 0x07, 0x66, 0xa0, 0x06, 0x6e, 0x80, 0x68, 0x23, 0x06, 0x09, 0x00,
  0x82, 0x60, 0x80, 0xe0, 0xc1, 0x19, 0xac, 0xc1, 0x1b, 0x88, 0xc1, 0x36,
  0x62, 0x90, 0x00, 0x20, 0x08, 0x06, 0x48, 0x1e, 0xa0, 0x01, 0x1b, 0xc0,
  0x01, 0x19, 0x70, 0x23, 0x06, 0x09, 0x00, 0x82, 0x60, 0x60, 0xec, 0x41,
  0x1a, 0xa8, 0x41, 0x1c, 0x9c, 0x41, 0x37, 0x62, 0x90, 0x00, 0x20, 0x08,
  0x06, 0x06, 0x1f, 0xa8, 0xc1, 0x1a, 0xc8, 0x01, 0xe3, 0x8d, 0x18, 0x24,
  0x00, 0x08, 0x82, 0x81, 0xd1, 0x07, 0x6b, 0x40, 0x07, 0x73, 0x90, 0x06,
  0xdf, 0x88, 0x41, 0x02, 0x80, 0x20, 0x18, 0x18, 0x7e, 0xc0, 0x06, 0x75,
  0x40, 0x07, 0x0e, 0x18, 0x8c, 0x18, 0x24, 0x00, 0x08, 0x82, 0x81, 0xf1,
  0x07, 0x6d, 0x60, 0x07, 0x75, 0x80, 0x06, 0x61, 0x30, 0x62, 0x90, 0x00,
  0x20, 0x08, 0x06, 0x06, 0x28, 0xb8, 0x81, 0x1d, 0xd8, 0x01, 0x1b, 0x88,
  0xc1, 0x88, 0x41, 0x02, 0x80, 0x20, 0x18, 0x18, 0xa1, 0xf0, 0x06, 0x77,
  0x70, 0x07, 0xd1, 0x18, 0x8c, 0x18, 0x24, 0x00, 0x08, 0x82, 0x81, 0x21,
  0x0a, 0x70, 0x80, 0x07, 0x78, 0xb0, 0x06, 0x64, 0x30, 0x62, 0x90, 0x00,
  0x20, 0x08, 0x06, 0xc6, 0x28, 0xc4, 0x41, 0x1e, 0xe4, 0x41, 0x1b, 0x94,
  0x41, 0x35, 0x76, 0x20, 0x15, 0x94, 0x01, 0x8c, 0x18, 0x1c, 0x00, 0x08,
  0x82, 0x41, 0x05, 0x0a, 0x69, 0x40, 0x05, 0xa3, 0x09, 0x01, 0x30, 0x9a,
  0x20, 0x04, 0xa3, 0x09, 0x83, 0x30, 0x9a, 0x40, 0x0c, 0x75, 0xa8, 0x01,
  0x8c, 0x18, 0x1c, 0x00, 0x08, 0x82, 0x41, 0x65, 0x0a, 0x6f, 0xa0, 0x05,
  0xa3, 0x09, 0x01, 0x30, 0x9a, 0x20, 0x04, 0xa3, 0x09, 0x83, 0x30, 0x9a,
  0x40, 0x0c, 0xd5, 0xbc, 0x01, 0x8c, 0x18, 0x1c, 0x00, 0x08, 0x82, 0x41,
  0xc5, 0x0a, 0x75, 0x00, 0x06, 0xc1, 0x68, 0x42, 0x00, 0x8c, 0x26, 0x08,
  0xc1, 0x68, 0xc2, 0x20, 0x8c, 0x26, 0x10, 0x83, 0x41, 0x64, 0x20, 0x1f,
  0x5b, 0xca, 0x40, 0x3e, 0x66, 0x98, 0x81, 0x7c, 0x4c, 0x3a, 0x03, 0xf9,
  0x58, 0x83, 0x06, 0xf2, 0x31, 0x24, 0x0d, 0xe4, 0x63, 0x94, 0x1a, 0xc8,
  0xc7, 0x9e, 0x35, 0x90, 0x8f, 0x29, 0x6c, 0x20, 0x1f, 0xb3, 0xda, 0x40,
  0x3e, 0x16, 0xb9, 0x81, 0x7c, 0x8c, 0x79, 0x03, 0xf9, 0xd4, 0x1a, 0xd4,
  0x82, 0x54, 0x40, 0x0a, 0x30, 0x62, 0x70, 0x00, 0x20, 0x08, 0x06, 0xd5,
  0x2f, 0xa0, 0xc2, 0x1c, 0x04, 0xa3, 0x09, 0x01, 0x30, 0x9a, 0x20, 0x04,
  0xa3, 0x09, 0x83, 0x30, 0x9a, 0x40, 0x0c, 0x75, 0xa4, 0x02, 0x8c, 0x18,
  0x1c, 0x00, 0x08, 0x82, 0x41, 0x55, 0x0e, 0xae, 0x90, 0x07, 0xc1, 0x68,
  0x42, 0x00, 0x8c, 0x26, 0x08, 0xc1, 0x68, 0xc2, 0x20, 0x8c, 0x26, 0x10,
  0x43, 0x35, 0xae, 0x00, 0x23, 0x06, 0x07, 0x00, 0x82, 0x60, 0x50, 0xad,
  0x03, 0x2d, 0xfc, 0x41, 0x30, 0x9a, 0x10, 0x00, 0xa3, 0x09, 0x42, 0x30,
  0x9a, 0x30, 0x08, 0xa3, 0x09, 0xc4, 0x60, 0x90, 0x28, 0xc8, 0xc7, 0x96,
  0x51, 0x90, 0x8f, 0x19, 0xa4, 0x20, 0x1f, 0x93, 0x4a, 0x41, 0x3e, 0xd6,
  0x98, 0x82, 0x7c, 0x0c, 0x39, 0x05, 0xf9, 0x18, 0x85, 0x0a, 0xf2, 0xb1,
  0x27, 0x15, 0xe4, 0x63, 0x8a, 0x2a, 0xc8, 0xc7, 0xac, 0x55, 0x90, 0x8f,
  0x45, 0xac, 0x20, 0x1f, 0x63, 0x5a, 0x41, 0x3e, 0xc6, 0xac, 0x01, 0x7c,
  0x8c, 0x59, 0x03, 0xf8, 0x18, 0xb3, 0x06, 0xf0, 0x31, 0x66, 0x0d, 0xe0,
  0x63, 0xcc, 0x1a, 0xc0, 0xc7, 0x98, 0x35, 0x80, 0x8f, 0x31, 0x6b, 0x00,
  0x1f, 0x63, 0xd6, 0x00, 0x3e, 0xc6, 0xac, 0x01, 0x7c, 0x8c, 0x59, 0x03,
  0xf8, 0x18, 0xb3, 0x06, 0xf0, 0x31, 0x66, 0x0d, 0xe0, 0x53, 0xb5, 0x00,
  0x12, 0x52, 0xc1, 0x3b, 0xc0, 0x88, 0xc1, 0x01, 0x80, 0x20, 0x18, 0x54,
  0x2a, 0x31, 0x0f, 0xbe, 0x10, 0x8c, 0x26, 0x04, 0xc0, 0x68, 0x82, 0x10,
  0x8c, 0x26, 0x0c, 0xc2, 0x68, 0x02, 0x31, 0xd4, 0x41, 0x0f, 0x30, 0x62,
  0x70, 0x00, 0x20, 0x08, 0x06, 0x15, 0x4c, 0xe4, 0x03, 0x39, 0x04, 0xa3,
  0x09, 0x01, 0x30, 0x9a, 0x20, 0x04, 0xa3, 0x09, 0x83, 0x30, 0x9a, 0x40,
  0x0c, 0xd5, 0xe4, 0x03, 0x8c, 0x18, 0x1c, 0x00, 0x08, 0x82, 0x41, 0x65,
  0x13, 0xff, 0xa0, 0x0e, 0xc1, 0x68, 0x42, 0x00, 0x8c, 0x26, 0x08, 0xc1,
  0x68, 0xc2, 0x20, 0x8c, 0x26, 0x10, 0x83, 0x41, 0xec, 0x20, 0x1f, 0x5b,
  0xda, 0x41, 0x3e, 0x66, 0xb8, 0x83, 0x7c, 0x4c, 0x7a, 0x07, 0xf9, 0x58,
  0x03, 0x0f, 0xf2, 0x31, 0x24, 0x1e, 0xe4, 0x63, 0x94, 0x3c, 0xc8, 0xc7,
  0x9e, 0x79, 0x90, 0x8f, 0x29, 0xf4, 0x20, 0x1f, 0xb3, 0xea, 0x41, 0x3e,
  0x16, 0xd9, 0x83, 0x7c, 0x8c, 0xb9, 0x07, 0xf9, 0xd8, 0x1a, 0x30, 0xf0,
  0xb1, 0x35, 0x60, 0xe0, 0x63, 0x6b, 0xc0, 0xc0, 0xc7, 0xd6, 0x80, 0x81,
  0x8f, 0xad, 0x01, 0x03, 0x1f, 0x5b, 0x03, 0x06, 0x3e, 0xb6, 0x06, 0x0c,
  0x7c, 0x6c, 0x0d, 0x18, 0xf8, 0xd8, 0x1a, 0x30, 0xf0, 0xb1, 0x35, 0x60,
  0xe0, 0x63, 0x6b, 0xc0, 0xc0, 0xc7, 0xd6, 0x80, 0x81, 0x4f, 0xfd, 0xc3,
  0x5a, 0x48, 0x05, 0x3a, 0x01, 0x23, 0x06, 0x07, 0x00, 0x82, 0x60, 0x50,
  0xd5, 0x85, 0x4f, 0xa4, 0x44, 0x30, 0x9a, 0x10, 0x00, 0xa3, 0x09, 0x42,
  0x30, 0x9a, 0x30, 0x08, 0xa3, 0x09, 0xc4, 0x50, 0xc7, 0x4f, 0xc0, 0x88,
  0xc1, 0x01, 0x80, 0x20, 0x18, 0x54, 0x7b, 0x41, 0x16, 0x2f, 0x11, 0x8c,
  0x26, 0x04, 0xc0, 0x68, 0x82, 0x10, 0x8c, 0x26, 0x0c, 0xc2, 0x68, 0x02,
  0x31, 0x54, 0x43, 0x16, 0x30, 0x62, 0x70, 0x00, 0x20, 0x08, 0x06, 0x55,
  0x68, 0xa8, 0x45, 0x4d, 0x04, 0xa3, 0x09, 0x01, 0x30, 0x9a, 0x20, 0x04,
  0xa3, 0x09, 0x83, 0x30, 0x9a, 0x40, 0x0c, 0x06, 0xd9, 0x84, 0x7c, 0x6c,
  0xb9, 0x09, 0xf9, 0x98, 0x81, 0x13, 0xf2, 0x31, 0x29, 0x27, 0xe4, 0x63,
  0x8d, 0x4e, 0xc8, 0xc7, 0x90, 0x9d, 0x90, 0x8f, 0x51, 0x3c, 0x21, 0x1f,
  0x7b, 0x7a, 0x42, 0x3e, 0xa6, 0xf8, 0x84, 0x7c, 0xcc, 0xfa, 0x09, 0xf9,
  0x58, 0x04, 0x16, 0xf2, 0x31, 0x26, 0x2c, 0xe4, 0x63, 0x6b, 0xc0, 0xc0,
  0xc7, 0xd6, 0x80, 0x81, 0x8f, 0xad, 0x01, 0x03, 0x1f, 0x5b, 0x03, 0x06,
  0x3e, 0xb6, 0x06, 0x0c, 0x7c, 0x6c, 0x0d, 0x18, 0xf8, 0xd8, 0x1a, 0x30,
  0xf0, 0xb1, 0x35, 0x60, 0xe0, 0x63, 0x6b, 0xc0, 0xc0, 0xc7, 0xd6, 0x80,
  0x81, 0x8f, 0xad, 0x01, 0x03, 0x1f, 0x5b, 0x03, 0x06, 0x3e, 0xc6, 0x90,
  0x85, 0x7c, 0x46, 0x0c, 0x10, 0x00, 0x04, 0xc1, 0xe0, 0xf2, 0x8d, 0xd4,
  0x20, 0x0b, 0x25, 0x18, 0x31, 0x40, 0x00, 0x10, 0x04, 0x83, 0xeb, 0x37,
  0x54, 0x83, 0x2c, 0x90, 0x60, 0xc4, 0x00, 0x01, 0x40, 0x10, 0x0c, 0x2e,
  0xf0, 0x58, 0x0d, 0xb2, 0x30, 0x02, 0x7b, 0xd0, 0x42, 0x3e, 0x23, 0x06,
  0x08, 0x00, 0x82, 0x60, 0x70, 0x89, 0x47, 0x6b, 0xa0, 0x45, 0x13, 0x8c,
  0x18, 0x20, 0x00, 0x08, 0x82, 0xc1, 0x35, 0x1e, 0xae, 0x81, 0x16, 0x4b,
  0x30, 0x62, 0x80, 0x00, 0x20, 0x08, 0x06, 0x17, 0x79, 0xbc, 0x06, 0x5a,
  0x24, 0x81, 0x49, 0x6c, 0x21, 0x9f, 0x11, 0x03, 0x04, 0x00, 0x41, 0x30,
  0xb8, 0xcc, 0x23, 0x36, 0xd8, 0x02, 0x0a, 0x46, 0x0c, 0x10, 0x00, 0x04,
  0xc1, 0xe0, 0x3a, 0x0f, 0xd9, 0x60, 0x0b, 0x27, 0x18, 0x31, 0x40, 0x00,
  0x10, 0x04, 0x83, 0x0b, 0x3d, 0x66, 0x83, 0x2d, 0x98, 0xc0, 0xb0, 0xb9,
  0x90, 0xcf, 0x88, 0x01, 0x02, 0x80, 0x20, 0x18, 0x5c, 0xea, 0x51, 0x1b,
  0x73, 0x61, 0x05, 0x23, 0x06, 0x08, 0x00, 0x82, 0x60, 0x70, 0xad, 0x87,
  0x6d, 0xcc, 0x05, 0x15, 0x98, 0x66, 0x17, 0xf2, 0x19, 0x31, 0x40, 0x00,
  0x10, 0x04, 0x83, 0xab, 0x3d, 0x70, 0xc3, 0x2e, 0xb0, 0x60, 0xc4, 0x00,
  0x01, 0x40, 0x10, 0x0c, 0x2e, 0xf7, 0xc8, 0x0d, 0xbb, 0xb0, 0x02, 0xe3,
  0xf2, 0x42, 0x3e, 0x23, 0x06, 0x08, 0x00, 0x82, 0x60, 0x70, 0xc1, 0xc7,
  0x6e, 0xe4, 0x85, 0x16, 0x8c, 0x18, 0x20, 0x00, 0x08, 0x82, 0xc1, 0x15,
  0x1f, 0xbc, 0x91, 0x17, 0x58, 0x30, 0x62, 0x70, 0x00, 0x20, 0x08, 0x06,
  0xd5, 0x7c, 0xf0, 0xc6, 0x69, 0xd0, 0xc6, 0x68, 0x42, 0x00, 0x8c, 0x26,
  0x08, 0xc1, 0x68, 0xc2, 0x20, 0x8c, 0x26, 0x10, 0xc3, 0x88, 0xc1, 0x01,
  0x80, 0x20, 0x18, 0x54, 0xf8, 0x11, 0x1e, 0xac, 0x81, 0x1b, 0xa3, 0x09,
  0x01, 0x30, 0x9a, 0x20, 0x04, 0xa3, 0x09, 0x83, 0x30, 0x9a, 0x40, 0x0c,
  0x23, 0x06, 0x07, 0x00, 0x82, 0x60, 0x50, 0xf5, 0x87, 0x79, 0xc4, 0x06,
  0x6f, 0x8c, 0x26, 0x04, 0xc0, 0x68, 0x82, 0x10, 0x8c, 0x26, 0x0c, 0xc2,
  0x68, 0x02, 0x31, 0x8c, 0x18, 0x1c, 0x00, 0x08, 0x82, 0x41, 0x25, 0x22,
  0xeb, 0x61, 0x1b, 0xe5, 0x31, 0x9a, 0x10, 0x00, 0xa3, 0x09, 0x42, 0x30,
  0x9a, 0x30, 0x08, 0xa3, 0x09, 0xc4, 0x60, 0x93, 0x19, 0xc8, 0x67, 0xc4,
  0x00, 0x01, 0x40, 0x10, 0x0c, 0xae, 0x13, 0x91, 0x8f, 0x31, 0x98, 0x82,
  0x11, 0x03, 0x04, 0x00, 0x41, 0x30, 0xb8, 0x50, 0x64, 0x3e, 0xc0, 0x60,
  0x0a, 0x46, 0x0c, 0x10, 0x00, 0x04, 0xc1, 0xe0, 0x4a, 0x11, 0xfa, 0x68,
  0x8d, 0x29, 0x30, 0x49, 0x0d, 0xe4, 0x33, 0x62, 0x80, 0x00, 0x20, 0x08,
  0x06, 0xd7, 0x8a, 0xd8, 0xc7, 0x19, 0x48, 0xc1, 0x88, 0x01, 0x02, 0x80,
  0x20, 0x18, 0x5c, 0x2c, 0x72, 0x1f, 0x64, 0x20, 0x05, 0x23, 0x06, 0x08,
  0x00, 0x82, 0x60, 0x70, 0xb5, 0x08, 0x7e, 0xc4, 0x86, 0x14, 0x58, 0xe4,
  0x06, 0xf2, 0x19, 0x31, 0x40, 0x00, 0x10, 0x04, 0x83, 0xeb, 0x45, 0xf4,
  0x63, 0x0d, 0xa2, 0x60, 0xc4, 0x00, 0x01, 0x40, 0x10, 0x0c, 0x2e, 0x18,
  0xd9, 0x0f, 0x34, 0x88, 0x82, 0x11, 0x03, 0x04, 0x00, 0x41, 0x30, 0xb8,
  0x62, 0x84, 0x3f, 0x6a, 0x23, 0x0a, 0x0c, 0x92, 0x03, 0xf9, 0x8c, 0x18,
  0x20, 0x00, 0x08, 0x82, 0xc1, 0x35, 0x23, 0xfe, 0xf1, 0x06, 0x50, 0x30,
  0x62, 0x80, 0x00, 0x20, 0x08, 0x06, 0x17, 0x8d, 0xfc, 0x07, 0x1b, 0x40,
  0xc1, 0x88, 0x01, 0x02, 0x80, 0x20, 0x18, 0x5c, 0x35, 0x02, 0x22, 0xb9,
  0x01, 0x05, 0x23, 0x06, 0x07, 0x00, 0x82, 0x60, 0x50, 0xdd, 0x08, 0x88,
  0xac, 0x87, 0x8b, 0x8c, 0x26, 0x04, 0xc0, 0x68, 0x82, 0x10, 0x8c, 0x26,
  0x0c, 0xc2, 0x68, 0x02, 0x31, 0x8c, 0x18, 0x1c, 0x00, 0x08, 0x82, 0x41,
  0xc5, 0x23, 0x25, 0x02, 0x1f, 0xfa, 0x31, 0x9a, 0x10, 0x00, 0xa3, 0x09,
  0x42, 0x30, 0x9a, 0x30, 0x08, 0xa3, 0x09, 0xc4, 0x30, 0x62, 0x70, 0x00,
  0x20, 0x08, 0x06, 0x55, 0x98, 0xa8, 0x48, 0x7d, 0xf8, 0xc7, 0x68, 0x42,
  0x00, 0x8c, 0x26, 0x08, 0xc1, 0x68, 0xc2, 0x20, 0x8c, 0x26, 0x10, 0x83,
  0x39, 0xa5, 0x20, 0x9f, 0x11, 0x03, 0x04, 0x00, 0x41, 0x30, 0xb8, 0xcc,
  0x24, 0x46, 0x44, 0xc1, 0x09, 0x46, 0x0c, 0x10, 0x00, 0x04, 0xc1, 0xe0,
  0x3a, 0x13, 0x19, 0xf9, 0x03, 0x27, 0x18, 0x31, 0x40, 0x00, 0x10, 0x04,
  0x83, 0x0b, 0x4d, 0x66, 0x84, 0x3d, 0x9c, 0xc0, 0x9a, 0x54, 0x90, 0xcf,
  0x88, 0x01, 0x02, 0x80, 0x20, 0x18, 0x5c, 0x6a, 0x52, 0x23, 0xa6, 0xd0,
  0x04, 0x23, 0x06, 0x08, 0x00, 0x82, 0x60, 0x70, 0xad, 0x89, 0x8d, 0x8c,
  0x42, 0x13, 0x8c, 0x18, 0x20, 0x00, 0x08, 0x82, 0xc1, 0xc5, 0x26, 0x37,
  0x02, 0x1f, 0x4d, 0x60, 0x4c, 0x2b, 0xc8, 0x67, 0xc4, 0x00, 0x01, 0x40,
  0x10, 0x0c, 0x2e, 0x37, 0xc9, 0x11, 0x55, 0x60, 0x82, 0x11, 0x03, 0x04,
  0x00, 0x41, 0x30, 0xb8, 0xde, 0x44, 0x47, 0x4e, 0x81, 0x09, 0x46, 0x0c,
  0x10, 0x00, 0x04, 0xc1, 0xe0, 0x82, 0x93, 0x1d, 0xa1, 0x0f, 0x26, 0x18,
  0x31, 0x38, 0x00, 0x10, 0x04, 0x83, 0x4a, 0x4e, 0x76, 0xc4, 0x44, 0x5c,
  0x64, 0x34, 0x21, 0x00, 0x46, 0x13, 0x84, 0x60, 0x34, 0x61, 0x10, 0x46,
  0x0c, 0x0e, 0x00, 0x04, 0xc1, 0xa0, 0xb2, 0x93, 0x1f, 0x51, 0x91, 0x18,
  0x19, 0x4d, 0x08, 0x80, 0xd1, 0x04, 0x21, 0x18, 0x4d, 0x18, 0x84, 0x11,
  0x83, 0x03, 0x00, 0x41, 0x30, 0xa8, 0xf4, 0x64, 0x4c, 0x5c, 0x84, 0x46,
  0x46, 0x13, 0x02, 0x60, 0x34, 0x41, 0x08, 0x46, 0x13, 0x06, 0xc1, 0x16,
  0x59, 0x90, 0xcf, 0x88, 0x01, 0x02, 0x80, 0x20, 0x18, 0x5c, 0x7e, 0x92,
  0x26, 0xb0, 0xb0, 0x04, 0x23, 0x06, 0x08, 0x00, 0x82, 0x60, 0x70, 0xfd,
  0x89, 0x9a, 0xb8, 0xc2, 0x12, 0x98, 0x52, 0x0b, 0xf2, 0x19, 0x31, 0x40,
  0x00, 0x10, 0x04, 0x83, 0x2b, 0x54, 0xd8, 0x64, 0x16, 0x94, 0x60, 0xc4,
  0x00, 0x01, 0x40, 0x10, 0x0c, 0x2e, 0x51, 0x69, 0x93, 0x58, 0x50, 0x02,
  0x4b, 0x70, 0x41, 0x3e, 0x23, 0x06, 0x08, 0x00, 0x82, 0x60, 0x70, 0x91,
  0xca, 0x9b, 0xd8, 0x42, 0x12, 0x8c, 0x18, 0x20, 0x00, 0x08, 0x82, 0xc1,
  0x55, 0x2a, 0x70, 0x42, 0x0b, 0x49, 0x30, 0x62, 0xb0, 0x00, 0x20, 0x08,
  0x06, 0x8c, 0xaa, 0x80, 0xc9, 0x41, 0x04, 0x07, 0x11, 0x8c, 0x18, 0x18,
  0x00, 0x08, 0x82, 0x81, 0xa3, 0x2a, 0x6b, 0x12, 0x58, 0x90, 0xc8, 0xc7,
  0x84, 0x43, 0x3e, 0x36, 0x14, 0xf2, 0x19, 0x31, 0x38, 0x00, 0x10, 0x04,
  0x83, 0x8a, 0x55, 0xea, 0x04, 0x4c, 0xc8, 0x64, 0x34, 0x21, 0x00, 0x46,
  0x13, 0x84, 0x60, 0x34, 0x61, 0x10, 0x46, 0x13, 0x88, 0x61, 0xc4, 0xa0,
  0x01, 0x40, 0x10, 0x0c, 0x20, 0x59, 0x41, 0x13, 0x78, 0x60, 0x07, 0x74,
  0xa0, 0x11, 0x62, 0x10, 0x82, 0x11, 0x03, 0x03, 0x00, 0x41, 0x30, 0x70,
  0x68, 0x05, 0x55, 0x82, 0x11, 0x83, 0x03, 0x00, 0x41, 0x30, 0xa8, 0x66,
  0x85, 0x4f, 0xce, 0xe4, 0x55, 0x46, 0x13, 0x82, 0x61, 0xc4, 0x20, 0x01,
  0x40, 0x10, 0x0c, 0x94, 0x5c, 0xe1, 0x93, 0x58, 0x89, 0x95, 0x53, 0x01,
  0x93, 0x11, 0x83, 0x04, 0x00, 0x41, 0x30, 0x50, 0x72, 0x85, 0x4f, 0x62,
  0x25, 0x56, 0xd6, 0xe4, 0x47, 0x46, 0x0c, 0x12, 0x00, 0x04, 0xc1, 0x40,
  0xc9, 0x15, 0x3e, 0x91, 0x95, 0x58, 0x39, 0x15, 0x36, 0x18, 0x31, 0x48,
  0x00, 0x10, 0x04, 0x03, 0x25, 0x57, 0xf8, 0x44, 0x56, 0x62, 0x65, 0x4d,
  0xd0, 0x60, 0xc4, 0x20, 0x01, 0x40, 0x10, 0x0c, 0x94, 0x5c, 0xe1, 0x13,
  0x59, 0x89, 0x15, 0x52, 0x21, 0x83, 0x11, 0x83, 0x04, 0x00, 0x41, 0x30,
  0x50, 0x72, 0x85, 0x4f, 0x64, 0x25, 0x56, 0x4a, 0x65, 0x18, 0x31, 0x48,
  0x00, 0x10, 0x04, 0x03, 0x25, 0x57, 0xf8, 0x44, 0x55, 0x62, 0xe5, 0x54,
  0x98, 0x11, 0x83, 0x04, 0x00, 0x41, 0x30, 0x50, 0x72, 0x85, 0x4f, 0x54,
  0x25, 0x56, 0xd6, 0x64, 0x19, 0x31, 0x48, 0x00, 0x10, 0x04, 0x03, 0x25,
  0x57, 0xf8, 0x44, 0x55, 0x62, 0x85, 0x54, 0x94, 0x11, 0x83, 0x04, 0x00,
  0x41, 0x30, 0x50, 0x72, 0x85, 0x4f, 0x5a, 0x25, 0x56, 0x4e, 0x45, 0x4d,
  0x46, 0x0c, 0x12, 0x00, 0x04, 0xc1, 0x40, 0xc9, 0x15, 0x3e, 0x69, 0x95,
  0x58, 0x59, 0x13, 0x35, 0x19, 0x31, 0x48, 0x00, 0x10, 0x04, 0x03, 0x25,
  0x57, 0xf8, 0xa4, 0x55, 0x62, 0x85, 0x54, 0xd4, 0x64, 0xc4, 0x20, 0x01,
  0x40, 0x10, 0x0c, 0x94, 0x5c, 0xe1, 0x93, 0x56, 0x89, 0x95, 0x52, 0x09,
  0x46, 0x0c, 0x12, 0x00, 0x04, 0xc1, 0x40, 0xc9, 0x15, 0x3e, 0x49, 0x95,
  0x58, 0x39, 0x95, 0x55, 0x18, 0x31, 0x48, 0x00, 0x10, 0x04, 0x03, 0x25,
  0x57, 0xf8, 0x24, 0x55, 0x62, 0x65, 0x4d, 0x4e, 0x61, 0xc4, 0x20, 0x01,
  0x40, 0x10, 0x0c, 0x94, 0x5c, 0xe1, 0x93, 0x54, 0x89, 0x15, 0x52, 0x19,
  0x85, 0x11, 0x83, 0x04, 0x00, 0x41, 0x30, 0x50, 0x72, 0x85, 0x4f, 0x52,
  0x25, 0x56, 0x4a, 0xe5, 0x0f, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xc4, 0xe0, 0xf8, 0x77, 0xdf, 0xf7, 0x4c, 0xc8, 0xa3, 0x9a, 0x37, 0xdd,
  0x75, 0x7e, 0x66, 0xdd, 0x17, 0x00, 0x01, 0x00, 0x20, 0xb8, 0x18, 0x00,
  0x78, 0x01, 0xed, 0x98, 0x4d, 0x6c, 0x1b, 0x45, 0x14, 0xc7, 0xdf, 0xce,
  0xce, 0x4e, 0x76, 0xed, 0x97, 0xe7, 0x5d, 0xdb, 0x75, 0x9c, 0xd6, 0xb1,
  0x37, 0xa9, 0xe3, 0x66, 0xbb, 0xd9, 0xac, 0x63, 0x52, 0x6a, 0x42, 0xd2,
  0x44, 0xb4, 0xaa, 0x2a, 0xab, 0x28, 0x15, 0x12, 0x12, 0x48, 0x20, 0x21,
  0x84, 0x2a, 0x8e, 0xe5, 0xa3, 0x25, 0x48, 0x28, 0x98, 0x0b, 0x2d, 0x52,
  0x0f, 0x15, 0x70, 0x4a, 0x72, 0xe3, 0x84, 0xc4, 0x11, 0x24, 0x4e, 0x09,
  0x24, 0x1c, 0x38, 0x14, 0x81, 0x72, 0xe8, 0xad, 0x6a, 0x8f, 0x9c, 0xb9,
  0x90, 0x5b, 0x78, 0xb3, 0xb6, 0x43, 0x28, 0x39, 0x83, 0x40, 0xfb, 0x93,
  0xde, 0xfc, 0x67, 0xde, 0xcc, 0x7b, 0x3b, 0x1f, 0xda, 0xcb, 0xfb, 0xb6,
  0x0c, 0x09, 0x17, 0xf3, 0x5f, 0x7e, 0xa3, 0xf5, 0x85, 0x9d, 0xdb, 0xb7,
  0x3e, 0x70, 0x01, 0x2c, 0x3d, 0x60, 0xa4, 0x6e, 0x98, 0x1b, 0x45, 0xdd,
  0x02, 0xbc, 0xd6, 0x5f, 0x3f, 0xf0, 0x6b, 0x96, 0xd9, 0x66, 0xd8, 0x34,
  0xba, 0x3f, 0xc0, 0x60, 0xfb, 0xe9, 0xfe, 0xfd, 0x45, 0xb6, 0x0b, 0xdc,
  0xfd, 0x1b, 0x3a, 0xe5, 0x27, 0x6c, 0x77, 0xd8, 0x34, 0x7a, 0xfd, 0x00,
  0xfd, 0x7d, 0xec, 0xdb, 0x51, 0x06, 0xfb, 0x3a, 0x4a, 0x8e, 0x2d, 0xcb,
  0x26, 0xfa, 0x76, 0x94, 0x8f, 0x6b, 0x5f, 0x2f, 0xb0, 0x5c, 0x62, 0x83,
  0x97, 0x1f, 0x5c, 0x59, 0xd2, 0xda, 0x1e, 0xbd, 0xa7, 0x7d, 0x3c, 0x37,
  0x77, 0xec, 0xbe, 0xfe, 0xcb, 0x0c, 0xde, 0x49, 0xb3, 0x6a, 0xea, 0xf6,
  0xaf, 0x0c, 0xee, 0xe7, 0xd7, 0x11, 0xdd, 0xfe, 0xf9, 0x8e, 0x6e, 0xff,
  0x5d, 0x07, 0x6f, 0xf9, 0x1d, 0xdb, 0xd1, 0xf7, 0x38, 0xca, 0x01, 0xa3,
  0xf5, 0x38, 0xf4, 0xfb, 0x28, 0x58, 0x69, 0x2a, 0xe3, 0xb6, 0xaf, 0xc4,
  0xae, 0xab, 0xcc, 0xdc, 0xac, 0x92, 0x2b, 0xb3, 0xec, 0xfe, 0xc7, 0xd0,
  0x67, 0x52, 0x6c, 0x1a, 0x65, 0xf4, 0x4e, 0xa1, 0x44, 0xef, 0xe4, 0xca,
  0x3c, 0xe6, 0x52, 0xfe, 0x87, 0xe8, 0x3b, 0x20, 0x36, 0x8d, 0xbe, 0x0b,
  0x3d, 0x1e, 0xc0, 0xbf, 0x77, 0x4a, 0x4a, 0x4a, 0x4a, 0x4a, 0x4a, 0x4a,
  0x4a, 0x4a, 0x4a, 0x4a, 0x4a, 0x4a, 0x4a, 0x4a, 0xca, 0xbf, 0xcf, 0x78,
  0x77, 0xeb, 0x46, 0xee, 0xee, 0x76, 0x16, 0x1e, 0xec, 0xb9, 0x43, 0x06,
  0x54, 0x58, 0x3d, 0xd6, 0x03, 0xf3, 0xb3, 0xad, 0xaf, 0x56, 0x04, 0x7c,
  0x6f, 0x7e, 0xba, 0x65, 0x9a, 0xf7, 0xb6, 0xe4, 0x81, 0x77, 0x47, 0x57,
  0x34, 0xd6, 0x4b, 0x95, 0x0e, 0xf8, 0xed, 0xc7, 0x44, 0xb2, 0xbb, 0xde,
  0x6e, 0x26, 0xfd, 0x72, 0x59, 0x76, 0xf3, 0x1c, 0x97, 0xe7, 0xb8, 0x02,
  0x6b, 0x81, 0x75, 0xa3, 0x04, 0xc9, 0x1c, 0x80, 0xec, 0x6e, 0x96, 0x4a,
  0x9d, 0xcd, 0xf6, 0x72, 0x67, 0xa3, 0x3e, 0xdf, 0xd9, 0x68, 0x5f, 0xeb,
  0xac, 0xd7, 0xaf, 0x74, 0xd6, 0x1b, 0x2f, 0x25, 0xf3, 0x63, 0x15, 0xd9,
  0xd5, 0xea, 0xfb, 0x3d, 0xad, 0xd7, 0x7b, 0x3a, 0x35, 0xd5, 0xd3, 0x6c,
  0x93, 0xe3, 0xeb, 0xf5, 0x64, 0xed, 0xf4, 0x74, 0xcf, 0x97, 0x5f, 0x90,
  0xdd, 0xab, 0x1e, 0xec, 0xbe, 0xe2, 0xfd, 0xb2, 0xf3, 0x86, 0xf7, 0xf9,
  0xce, 0xfb, 0xbc, 0x7f, 0x0a, 0x2a, 0x94, 0x0b, 0xaa, 0xb4, 0xca, 0xfd,
  0x72, 0x58, 0xc1, 0xcd, 0x46, 0xb3, 0xb3, 0xd1, 0x68, 0x24, 0x71, 0x85,
  0xb9, 0x5e, 0x5c, 0xb9, 0x2d, 0xbb, 0x7a, 0x2d, 0x04, 0x40, 0xa3, 0x61,
  0x15, 0x8d, 0x40, 0x90, 0x1b, 0xf8, 0x24, 0x02, 0x49, 0x59, 0xe8, 0xee,
  0x9d, 0x0c, 0x9f, 0x93, 0x5e, 0x30, 0x41, 0x66, 0xa0, 0xe8, 0x16, 0xaf,
  0xab, 0x47, 0x15, 0xbc, 0xc9, 0x3a, 0x15, 0x02, 0xbe, 0xcb, 0xda, 0x0c,
  0x1a, 0x14, 0x84, 0x02, 0x27, 0xa3, 0x2a, 0x56, 0x22, 0x40, 0x3f, 0x6c,
  0xe0, 0x3b, 0xec, 0x9f, 0x8e, 0x2b, 0x38, 0x1b, 0xb4, 0xe8, 0x6c, 0x28,
  0x71, 0x2c, 0x12, 0xd8, 0x88, 0x4a, 0x98, 0xe7, 0x7c, 0xe3, 0xe1, 0x75,
  0xf9, 0x36, 0xcf, 0x2f, 0x44, 0x0d, 0x6c, 0x05, 0x4d, 0x22, 0xcf, 0xa7,
  0x28, 0xae, 0x62, 0x35, 0x92, 0xb8, 0x18, 0xd5, 0x71, 0x22, 0x6c, 0xe2,
  0x4c, 0x5c, 0x42, 0xa7, 0xe6, 0x23, 0x39, 0x15, 0xca, 0x8c, 0xf8, 0x78,
  0x21, 0x6a, 0xa2, 0x55, 0xab, 0xe0, 0xa9, 0x70, 0x02, 0x3f, 0x84, 0xbb,
  0xdb, 0xd2, 0x9f, 0xa3, 0x30, 0x54, 0x58, 0x8b, 0x14, 0xbe, 0xc5, 0xb9,
  0xe6, 0x62, 0x40, 0xf0, 0x5a, 0x74, 0x2e, 0x16, 0xa8, 0xdf, 0xad, 0x1d,
  0x37, 0xf0, 0xe9, 0x58, 0xa2, 0x63, 0xb6, 0xf0, 0x99, 0xb8, 0x8e, 0x05,
  0xcf, 0x25, 0x70, 0x80, 0x9c, 0x49, 0x17, 0x73, 0xbc, 0x87, 0xf9, 0xf8,
  0x75, 0x99, 0xb1, 0x5a, 0xe8, 0x70, 0xff, 0x4c, 0x74, 0x59, 0x5a, 0x26,
  0xe0, 0x53, 0x7c, 0xc6, 0x4c, 0xcd, 0x45, 0xf0, 0x8b, 0x64, 0x7a, 0xb0,
  0x53, 0xe4, 0xb9, 0xd1, 0xec, 0x9b, 0xb2, 0xed, 0xd9, 0xbb, 0x05, 0xc7,
  0x26, 0x83, 0xc7, 0x6a, 0x64, 0x5e, 0xea, 0x3b, 0x39, 0x1d, 0x5e, 0x96,
  0x71, 0x9c, 0x47, 0x65, 0x01, 0xda, 0xbe, 0x24, 0xa3, 0x55, 0x44, 0x62,
  0xbf, 0x3d, 0x7c, 0x4d, 0x5a, 0x93, 0x36, 0x0e, 0x15, 0x04, 0x5a, 0x3c,
  0x5e, 0x8a, 0x66, 0xa4, 0xd3, 0x92, 0x78, 0x3e, 0x56, 0xc9, 0xb7, 0x6c,
  0x6b, 0x4a, 0xd2, 0x58, 0x91, 0x54, 0x8d, 0xd7, 0x0c, 0x01, 0xa2, 0x50,
  0xe4, 0x0b, 0xa4, 0xba, 0x28, 0xd1, 0x94, 0xa8, 0xd2, 0xb3, 0x71, 0x06,
  0x9d, 0x42, 0x11, 0x33, 0xae, 0xc4, 0xa1, 0xac, 0x8d, 0xe3, 0xbc, 0x64,
  0x18, 0x54, 0x92, 0x4b, 0x58, 0x67, 0x65, 0x00, 0x55, 0x9c, 0x84, 0x12,
  0xda, 0x3c, 0x96, 0xcf, 0x4f, 0xcb, 0x8c, 0xd6, 0x17, 0x17, 0x24, 0xd9,
  0x0a, 0x27, 0x6c, 0x4c, 0xee, 0xa6, 0xc8, 0xb9, 0xca, 0x9c, 0xab, 0x22,
  0x7c, 0xb2, 0x5e, 0xcd, 0xac, 0x15, 0x68, 0x82, 0xc6, 0xc0, 0xc7, 0x51,
  0x8e, 0x3d, 0xc1, 0xb1, 0x1e, 0x00, 0x85, 0x54, 0xc4, 0x33, 0xe4, 0xe2,
  0x69, 0x42, 0xcc, 0x91, 0xc2, 0x9f, 0x6d, 0xd8, 0x37, 0x95, 0x9d, 0xc9,
  0xf1, 0xdd, 0x99, 0x3a, 0xe7, 0xb9, 0x05, 0xe9, 0x0a, 0x40, 0x7d, 0x66,
  0x19, 0x4d, 0x4b, 0xa5, 0x75, 0x71, 0x59, 0x4a, 0xad, 0x93, 0x97, 0x24,
  0xd8, 0x6a, 0x0f, 0x1c, 0x01, 0xbf, 0x89, 0xfa, 0x5a, 0x57, 0x34, 0xd6,
  0xb4, 0x7f, 0x68, 0xa9, 0x2c, 0x4f, 0x71, 0xae, 0x11, 0x12, 0x98, 0x13,
  0xb0, 0x8f, 0xc3, 0x85, 0x7c, 0x8d, 0xd5, 0x30, 0x25, 0xe8, 0xbc, 0x96,
  0x25, 0xc8, 0x2a, 0x00, 0x59, 0x63, 0x92, 0x40, 0xa8, 0xb5, 0x98, 0xe7,
  0x40, 0x18, 0xf9, 0x25, 0xd6, 0x7c, 0x3e, 0x6f, 0x02, 0x7c, 0xb4, 0x7d,
  0x42, 0xff, 0x7b, 0x4f, 0x14, 0x7e, 0x93, 0x7a, 0xe1, 0x13, 0xbe, 0x93,
  0xba, 0x11, 0xa6, 0x9e, 0x3b, 0x2c, 0xf9, 0x6b, 0x9f, 0x61, 0x24, 0x15,
  0xfa, 0xa6, 0x6e, 0x34, 0xda, 0x27, 0x8c, 0xa4, 0x1a, 0x7b, 0xe8, 0x4b,
  0x2a, 0xb1, 0x32, 0xa9, 0xc3, 0x1e, 0xc6, 0x0e, 0x58, 0xed, 0xd7, 0xa1,
  0xb5, 0x38, 0x6c, 0xb2, 0x5f, 0xc9, 0xfd, 0xe1, 0xf1, 0xfe, 0x7b, 0x8f,
  0x7e, 0xbf, 0xfa, 0xe3, 0x17, 0xeb, 0xe7, 0x1f, 0xde, 0x5c, 0xbb, 0xfe,
  0xf0, 0x0f, 0xe3, 0x5a, 0xd1, 0xf3, 0x00, 0x00, 0x17, 0x00, 0x01, 0x00,
  0x10, 0x88, 0x19, 0x00, 0x78, 0x01, 0xed, 0x99, 0x41, 0x6c, 0xdc, 0x44,
  0x14, 0x86, 0xc7, 0xe3, 0x59, 0xdb, 0xbb, 0x99, 0xbe, 0xb5, 0x9d, 0x8d,
  0xbb, 0x49, 0x9c, 0xdd, 0x75, 0xea, 0xee, 0xc6, 0x58, 0xc6, 0x29, 0xaa,
  0x20, 0x87, 0x0a, 0x2c, 0x88, 0xaa, 0xc8, 0x44, 0x4d, 0x95, 0x23, 0x2a,
  0x97, 0x0a, 0xe5, 0x90, 0x03, 0x0a, 0x41, 0x04, 0xa9, 0x42, 0xcb, 0x96,
  0x03, 0x89, 0xaa, 0x52, 0xa1, 0x1e, 0x38, 0x6c, 0xa2, 0x0a, 0xb5, 0x57,
  0x24, 0x4e, 0x5c, 0x93, 0x92, 0x70, 0xe0, 0xc0, 0x29, 0x07, 0x0e, 0x48,
  0x15, 0x91, 0x38, 0x73, 0xe1, 0x02, 0x87, 0x4a, 0xe9, 0x7b, 0x8e, 0xb7,
  0x6c, 0x53, 0x24, 0x6e, 0x20, 0x55, 0xfe, 0xa4, 0x37, 0xff, 0xcc, 0x9b,
  0x19, 0xbf, 0x37, 0xe3, 0xd9, 0x3d, 0x8c, 0xb7, 0xc6, 0x59, 0xc6, 0xb5,
  0xdf, 0x57, 0x1f, 0x93, 0x2e, 0xef, 0x6f, 0x6e, 0x7c, 0x62, 0x32, 0x56,
  0xa2, 0x06, 0xc2, 0xa9, 0x40, 0xd6, 0x6a, 0x54, 0x32, 0x36, 0x9b, 0x8f,
  0x1f, 0xf4, 0x13, 0x2f, 0xe5, 0x46, 0x24, 0x54, 0xe4, 0x28, 0x54, 0x30,
  0xf6, 0x3a, 0xda, 0x1b, 0x68, 0xcf, 0x41, 0x8f, 0xdc, 0x42, 0xdb, 0x44,
  0x23, 0xf2, 0xf1, 0x19, 0x1a, 0xda, 0x54, 0x6e, 0xff, 0x06, 0xa0, 0x49,
  0xb4, 0x41, 0xae, 0xc3, 0xbc, 0xbd, 0xfe, 0xed, 0x25, 0x94, 0x79, 0x34,
  0xf6, 0xdd, 0x17, 0x57, 0x9f, 0xc9, 0xe3, 0xb7, 0x5f, 0x3a, 0x94, 0xdb,
  0x0b, 0xc5, 0xe0, 0x3d, 0x11, 0x2d, 0x41, 0xe5, 0xb3, 0x0c, 0x5c, 0x5f,
  0xd6, 0xa9, 0xfc, 0xbb, 0x7d, 0x94, 0xb7, 0x07, 0xef, 0xf2, 0x21, 0xda,
  0xf0, 0xfb, 0x18, 0xe6, 0x18, 0x21, 0xfd, 0x27, 0xe8, 0x5c, 0x68, 0x6c,
  0x69, 0x56, 0x53, 0x36, 0x5b, 0x1a, 0x3f, 0x30, 0x35, 0xb5, 0x7a, 0x41,
  0x13, 0x4b, 0x17, 0xd0, 0xfd, 0x9f, 0x71, 0x92, 0xc3, 0x09, 0x9a, 0x72,
  0xb2, 0x0a, 0x8d, 0x9f, 0x9c, 0x0e, 0x4d, 0x55, 0x49, 0x70, 0xe1, 0x83,
  0x95, 0xbf, 0x98, 0xd0, 0x1e, 0xd0, 0xef, 0x62, 0xc0, 0xf0, 0x6a, 0xe9,
  0x88, 0x0c, 0x1d, 0x93, 0x82, 0x82, 0x82, 0x82, 0x82, 0x82, 0x82, 0x82,
  0x82, 0x82, 0x82, 0x82, 0x82, 0x82, 0x82, 0x82, 0xff, 0x07, 0xaf, 0xb7,
  0xbb, 0x56, 0xbd, 0xbd, 0x37, 0xc2, 0x7e, 0x3e, 0x34, 0x75, 0x85, 0x89,
  0x63, 0x6f, 0x8b, 0x31, 0x93, 0xa9, 0xea, 0xd7, 0xbb, 0xdf, 0xab, 0xf7,
  0x77, 0x8f, 0xd5, 0x07, 0xbb, 0xdf, 0x2c, 0x71, 0xd6, 0x77, 0x58, 0xca,
  0x5a, 0x73, 0x47, 0x8c, 0x19, 0xbd, 0x6d, 0xc7, 0xcd, 0xea, 0x50, 0x37,
  0x7a, 0x80, 0xf3, 0x2c, 0x9c, 0xb7, 0xe3, 0x38, 0xa9, 0x8d, 0x75, 0x1b,
  0xeb, 0xa3, 0xa8, 0xa3, 0xa8, 0x7d, 0x77, 0x2e, 0xdd, 0x76, 0x93, 0x74,
  0xc7, 0x7d, 0x33, 0x1b, 0x3f, 0x02, 0x46, 0x8f, 0xd4, 0x75, 0x8d, 0xde,
  0x4e, 0x7b, 0x39, 0x5d, 0xf4, 0xc4, 0xc1, 0x35, 0xef, 0xa7, 0xfd, 0xf7,
  0xbc, 0xbb, 0xfb, 0x3d, 0xf5, 0xe6, 0xae, 0xa1, 0xf4, 0x1e, 0x7e, 0x88,
  0xb9, 0xb0, 0xc0, 0x01, 0x25, 0x98, 0x07, 0x1e, 0x5c, 0x06, 0x35, 0x58,
  0x00, 0x9a, 0xd3, 0xc2, 0xb8, 0xd4, 0x37, 0x19, 0xa4, 0x50, 0x0f, 0x66,
  0x61, 0x3c, 0x78, 0x05, 0x26, 0x82, 0x8b, 0xd0, 0xf7, 0x5f, 0x4d, 0xb7,
  0xfd, 0x24, 0xfd, 0x00, 0xfb, 0xdc, 0xd0, 0x91, 0x2e, 0xeb, 0x1d, 0x4e,
  0x85, 0xb7, 0xc4, 0x14, 0x6a, 0x23, 0xbc, 0x23, 0x1a, 0xa8, 0xcd, 0xf0,
  0xae, 0x80, 0x60, 0x11, 0xaa, 0xc1, 0x15, 0x30, 0x83, 0xab, 0x60, 0x05,
  0x33, 0xd9, 0x33, 0x3d, 0xcc, 0x67, 0xc7, 0xf7, 0xd3, 0x7e, 0x7b, 0x21,
  0x9b, 0x7f, 0x0e, 0xc7, 0xaa, 0xe1, 0x57, 0xa2, 0x89, 0xca, 0xc2, 0xeb,
  0x62, 0x1a, 0x95, 0x87, 0xab, 0xc2, 0x43, 0x55, 0xc2, 0x15, 0x41, 0x73,
  0x26, 0x71, 0xcd, 0xa4, 0x94, 0xcf, 0x76, 0x3b, 0x4d, 0xd7, 0x71, 0xde,
  0x28, 0xf6, 0x43, 0xd8, 0x17, 0x6d, 0xd4, 0x6a, 0x78, 0x4f, 0x74, 0x50,
  0xcd, 0xf0, 0xbe, 0xb0, 0xc2, 0x19, 0x49, 0x63, 0x6d, 0x8c, 0x43, 0xe3,
  0x6c, 0xf4, 0x8f, 0x47, 0xeb, 0xa2, 0x1e, 0x39, 0x92, 0xe2, 0xd5, 0xb1,
  0xcd, 0xa2, 0xae, 0x98, 0x40, 0x9d, 0x88, 0x36, 0xb2, 0x9c, 0xd5, 0xe8,
  0x8e, 0x18, 0x47, 0x55, 0xa2, 0xcf, 0x05, 0xad, 0x85, 0x47, 0xb7, 0xb2,
  0xb8, 0x3e, 0xc6, 0x9b, 0xc4, 0xf6, 0x64, 0x74, 0x43, 0xd0, 0x5c, 0x5a,
  0x17, 0x44, 0x57, 0xb2, 0x5c, 0xab, 0x51, 0x5f, 0xb4, 0x50, 0xcd, 0xe8,
  0x9e, 0x70, 0x50, 0xad, 0x68, 0x59, 0xd0, 0x3b, 0x55, 0xb0, 0xae, 0xc4,
  0x69, 0x36, 0x3f, 0xc0, 0x1c, 0x48, 0xcf, 0xdb, 0xa8, 0xe8, 0x67, 0xf1,
  0xcb, 0x82, 0xa3, 0xf2, 0x78, 0x55, 0xa8, 0xa8, 0x6a, 0xfc, 0x7e, 0xf6,
  0xdc, 0x11, 0xac, 0x5b, 0xf1, 0x3b, 0x82, 0x95, 0xa7, 0xa1, 0xa4, 0x4e,
  0x4b, 0xad, 0x34, 0x2d, 0xa9, 0x5f, 0xd7, 0x2f, 0x67, 0xcf, 0xb4, 0xb0,
  0x6e, 0xc7, 0xd7, 0x05, 0xb3, 0x18, 0xd0, 0xba, 0x47, 0xe3, 0x15, 0x61,
  0x95, 0x7d, 0x00, 0xac, 0x43, 0x7c, 0x43, 0x94, 0x55, 0x26, 0xab, 0x58,
  0xaf, 0xc6, 0x5d, 0x01, 0x65, 0x03, 0x6a, 0x58, 0xaf, 0xc5, 0xeb, 0xa2,
  0xd4, 0xf1, 0xa5, 0x65, 0x71, 0x28, 0x35, 0x0d, 0x69, 0xa2, 0xcf, 0x8c,
  0x3f, 0x13, 0x95, 0x12, 0x93, 0x60, 0x09, 0x18, 0xc3, 0xf6, 0x58, 0xbc,
  0x21, 0xb4, 0xc0, 0x97, 0x9a, 0x67, 0xc8, 0x72, 0x53, 0xc8, 0x72, 0x87,
  0x4b, 0x3d, 0xf4, 0xe5, 0xa7, 0xec, 0xf6, 0x5e, 0x4d, 0xab, 0x40, 0x5d,
  0x93, 0xe0, 0x6a, 0x26, 0x54, 0x3c, 0x21, 0xf5, 0xb3, 0x86, 0x1c, 0xf3,
  0x2b, 0x72, 0xdc, 0x97, 0x72, 0xca, 0x37, 0x65, 0x25, 0xe0, 0x12, 0x37,
  0x1a, 0x0c, 0xd6, 0x00, 0xc7, 0xa8, 0xc8, 0x09, 0x43, 0xca, 0x86, 0x61,
  0xca, 0x33, 0xbc, 0x25, 0xcb, 0xbc, 0x81, 0xf1, 0x18, 0x9c, 0x85, 0x8a,
  0x9c, 0x04, 0x29, 0x9b, 0x60, 0x4a, 0xd5, 0xe3, 0xfb, 0x73, 0x5e, 0xe5,
  0x00, 0x44, 0x4b, 0x5a, 0x9c, 0xc9, 0x8a, 0xc0, 0x31, 0x1e, 0x07, 0x5b,
  0x60, 0xee, 0x4d, 0x2e, 0x99, 0xc2, 0xa5, 0xf2, 0x2e, 0xef, 0xfa, 0x9a,
  0x0d, 0x14, 0xbf, 0xae, 0xd5, 0x30, 0xb6, 0x03, 0x2d, 0xcd, 0x05, 0xda,
  0x33, 0xfb, 0xad, 0x39, 0x71, 0xde, 0xb7, 0x31, 0x7e, 0x0d, 0xe3, 0x3b,
  0xb2, 0x6d, 0xd8, 0x18, 0xb3, 0x86, 0x31, 0x1d, 0x39, 0x6d, 0x08, 0xa9,
  0x34, 0x5d, 0xe8, 0x80, 0x8d, 0xf1, 0x6a, 0x18, 0xcf, 0x91, 0xe7, 0x00,
  0x7d, 0x5e, 0x03, 0x14, 0x85, 0xc1, 0x98, 0xcf, 0x31, 0x17, 0x80, 0x9a,
  0xc6, 0xb3, 0x7d, 0x15, 0x91, 0x2b, 0x14, 0x43, 0x3b, 0x54, 0x74, 0xce,
  0x92, 0x64, 0xed, 0x88, 0x95, 0x12, 0x7d, 0x9e, 0x54, 0x4b, 0xf4, 0x05,
  0x52, 0x23, 0xd1, 0x17, 0x49, 0xcb, 0x89, 0xce, 0x48, 0x65, 0xa2, 0x0b,
  0xd2, 0x33, 0x89, 0x6e, 0x92, 0x56, 0x12, 0xbd, 0x46, 0x3a, 0x92, 0xe8,
  0x75, 0x52, 0x9e, 0xe8, 0x2e, 0xa9, 0x92, 0xe8, 0x2d, 0x52, 0x48, 0x74,
  0x9f, 0xb4, 0x9a, 0xe8, 0x33, 0xa4, 0x2c, 0xd1, 0xff, 0xe0, 0xac, 0x3b,
  0x9b, 0xd7, 0x2f, 0xe6, 0x3a, 0x97, 0x2b, 0x1e, 0x8a, 0xee, 0xa5, 0xbc,
  0xce, 0xd8, 0xcd, 0xbd, 0x31, 0xfa, 0x8f, 0x38, 0x75, 0x41, 0x9d, 0x7d,
  0x9a, 0x38, 0xe5, 0xcb, 0xae, 0xb5, 0x4f, 0xf9, 0x70, 0xdf, 0x9f, 0xf3,
  0x4d, 0x50, 0xc1, 0x55, 0xea, 0x7b, 0xfa, 0x09, 0x83, 0x7c, 0x8a, 0x42,
  0x37, 0xa9, 0x6c, 0x96, 0x0a, 0x82, 0x7c, 0x5c, 0xc9, 0x6e, 0x97, 0x9f,
  0xfa, 0xb2, 0x9b, 0x65, 0x3c, 0xad, 0xc8, 0xf0, 0xe7, 0x8f, 0x8c, 0x85,
  0xfc, 0x7b, 0x09, 0xe5, 0x51, 0x46, 0x13, 0xf9, 0xcd, 0xf4, 0x0f, 0x47,
  0x7f, 0x7d, 0xfc, 0xeb, 0x9f, 0x8b, 0x3f, 0x3e, 0xe8, 0xbf, 0xf6, 0xe8,
  0xa3, 0xee, 0xca, 0xa3, 0x27, 0x0b, 0x4d, 0x0a, 0x73, 0x00, 0x00, 0x00,
  0x17, 0x00, 0x01, 0x00, 0x00, 0xfc, 0x18, 0x00, 0x78, 0x01, 0xed, 0x99,
  0xcd, 0x6b, 0x1b, 0x57, 0x10, 0xc0, 0x67, 0x77, 0xc7, 0x4f, 0x1f, 0x9e,
  0x8c, 0x56, 0x2b, 0x59, 0x96, 0x64, 0x59, 0x96, 0x64, 0x13, 0x7b, 0x59,
  0x2d, 0xeb, 0xb4, 0xa1, 0x35, 0xc6, 0x38, 0x39, 0x84, 0x12, 0x84, 0x89,
  0x43, 0xc8, 0x29, 0xa4, 0x97, 0x50, 0x72, 0x4e, 0x5d, 0x9a, 0x42, 0x29,
  0xae, 0xda, 0x43, 0x52, 0xd2, 0x10, 0x4a, 0x0e, 0x25, 0x91, 0x4d, 0x2f,
  0xed, 0xa5, 0xd0, 0x43, 0xff, 0x80, 0xe0, 0x34, 0x76, 0x0f, 0x39, 0x16,
  0x1f, 0x4a, 0x7b, 0x08, 0xcd, 0xad, 0xf7, 0x5c, 0xd2, 0x83, 0xc1, 0x9d,
  0x59, 0x49, 0x46, 0x71, 0x7b, 0x6e, 0x21, 0xec, 0x0f, 0xe6, 0xcd, 0x7b,
  0xf3, 0xe6, 0xbd, 0x99, 0xf7, 0xde, 0x9e, 0x66, 0x0f, 0xca, 0x10, 0x73,
  0xf0, 0xa7, 0xff, 0x40, 0xf5, 0xa5, 0xdd, 0xdb, 0x37, 0x3f, 0x71, 0x01,
  0xc6, 0x74, 0x30, 0xc2, 0x8d, 0xa2, 0xb6, 0x00, 0xdf, 0x0d, 0xfc, 0x8d,
  0x36, 0x03, 0x16, 0x44, 0x5a, 0x22, 0xca, 0x59, 0x6d, 0x06, 0x58, 0x22,
  0xbd, 0x87, 0x95, 0x55, 0x91, 0x33, 0xd2, 0xfd, 0x07, 0x25, 0x91, 0x2f,
  0x45, 0xee, 0x88, 0x28, 0xea, 0x3f, 0x44, 0xe3, 0xd3, 0x40, 0x94, 0xe3,
  0xf9, 0x8c, 0x92, 0x13, 0x39, 0x21, 0x62, 0x8b, 0x1c, 0xa7, 0x79, 0xf5,
  0xfb, 0x15, 0x51, 0xe7, 0x44, 0xa0, 0xfa, 0xd6, 0x85, 0x33, 0x5f, 0xfd,
  0xb2, 0xad, 0xe3, 0x18, 0xfb, 0x5a, 0x7d, 0x55, 0xf5, 0xeb, 0xc4, 0xf0,
  0x9d, 0x94, 0x47, 0x8e, 0xb6, 0xaf, 0x32, 0xbc, 0xa3, 0xf6, 0xe0, 0x1d,
  0x51, 0x1b, 0xe1, 0xf2, 0x60, 0x3c, 0x7c, 0xcb, 0x9f, 0x44, 0x46, 0xdf,
  0x63, 0x94, 0x43, 0x41, 0xf5, 0xbf, 0xa1, 0xef, 0x64, 0x60, 0x7d, 0xd1,
  0x58, 0xb7, 0x1b, 0xc6, 0xde, 0x73, 0x8d, 0x93, 0x3b, 0x65, 0x70, 0xfd,
  0x94, 0x98, 0xff, 0x33, 0xfa, 0x39, 0xf4, 0x31, 0x56, 0xff, 0x14, 0xc6,
  0xee, 0x9f, 0xdc, 0x38, 0x83, 0x4b, 0xc1, 0xe1, 0xc9, 0x5f, 0x4f, 0xf4,
  0x0e, 0x58, 0x64, 0xc8, 0xf0, 0xb4, 0x7a, 0x1b, 0xc3, 0x4f, 0xe4, 0xa2,
  0x36, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09,
  0x09, 0x09, 0x09, 0x09, 0x09, 0xff, 0x17, 0xcd, 0xee, 0xce, 0x8d, 0xdc,
  0xdd, 0xc7, 0x00, 0xbf, 0xee, 0xbb, 0x29, 0x0b, 0xf0, 0xb0, 0xf2, 0x05,
  0x80, 0x0b, 0x8e, 0xf3, 0x60, 0xe7, 0x89, 0xd3, 0xdb, 0x39, 0x74, 0xb6,
  0x76, 0x7e, 0x58, 0xb7, 0xa1, 0x07, 0xd8, 0x81, 0xc6, 0xd2, 0x73, 0xbb,
  0x6c, 0xba, 0xb6, 0xf8, 0xe6, 0xc5, 0x77, 0x0b, 0x6a, 0x9d, 0x6d, 0x80,
  0xd8, 0xce, 0x6c, 0xba, 0x8e, 0xd8, 0x3d, 0xb1, 0xf7, 0x70, 0x2e, 0xb6,
  0x41, 0xcd, 0x74, 0x55, 0x7b, 0x0d, 0xd3, 0x1d, 0x97, 0xb9, 0x82, 0xcc,
  0xad, 0x55, 0x60, 0xef, 0x6a, 0xe5, 0xe9, 0xee, 0x7b, 0x95, 0x7b, 0xbb,
  0x4f, 0x9c, 0x83, 0x9d, 0x0f, 0x24, 0x76, 0xd9, 0x9f, 0xe3, 0xaa, 0xbf,
  0xc8, 0x5b, 0x78, 0xba, 0x53, 0xf1, 0x4f, 0xf2, 0x86, 0xd8, 0x72, 0xfe,
  0x79, 0x76, 0xfd, 0x0e, 0xe7, 0xfd, 0x35, 0x7e, 0x5f, 0xc6, 0xd3, 0x3e,
  0x30, 0xfb, 0xcb, 0xac, 0xfb, 0x55, 0x25, 0xd6, 0x94, 0xff, 0x06, 0xd7,
  0xfc, 0x25, 0xae, 0xfb, 0x2b, 0x3c, 0xe3, 0x2f, 0xf0, 0x36, 0x62, 0xa7,
  0x67, 0x56, 0x3b, 0xea, 0xdb, 0x82, 0xee, 0x7e, 0x2b, 0xb8, 0x86, 0xb3,
  0xa2, 0x67, 0x83, 0xeb, 0xa8, 0x6b, 0x34, 0xef, 0x86, 0x8c, 0x1b, 0x41,
  0x07, 0xb7, 0xcc, 0x5c, 0xa7, 0x29, 0xfd, 0x66, 0x70, 0x01, 0xb7, 0x8d,
  0x89, 0xd7, 0xd8, 0x32, 0xce, 0x07, 0x3d, 0xe4, 0x60, 0x99, 0x72, 0xc1,
  0x79, 0x72, 0x83, 0x0e, 0xe9, 0xba, 0x19, 0x89, 0xd5, 0x2b, 0xad, 0x76,
  0xb6, 0x4a, 0x6b, 0x9d, 0xed, 0x52, 0x29, 0xf6, 0x2d, 0x07, 0x4b, 0x54,
  0x09, 0x80, 0xaa, 0xc1, 0x0a, 0xcd, 0xcb, 0xba, 0xa9, 0xe0, 0x52, 0x1c,
  0xc3, 0xf3, 0xfa, 0xe7, 0x75, 0x24, 0x96, 0x9e, 0xc1, 0x91, 0xb9, 0x5c,
  0x78, 0x0b, 0x39, 0x3c, 0x4b, 0x6e, 0x78, 0x8e, 0xf2, 0xe1, 0x3b, 0x47,
  0x7b, 0xea, 0xbc, 0xe6, 0x50, 0x08, 0xef, 0xa3, 0x17, 0x2e, 0xd3, 0x9c,
  0xf4, 0x8b, 0xe1, 0xd7, 0x38, 0x11, 0x62, 0xec, 0x73, 0x52, 0xf6, 0x52,
  0x9f, 0x4a, 0x08, 0xa4, 0x31, 0x73, 0x91, 0xa1, 0x9c, 0xf8, 0x94, 0xc3,
  0x0d, 0xac, 0x89, 0xae, 0x86, 0x1f, 0x63, 0x49, 0xf4, 0x54, 0xf8, 0x4d,
  0x1c, 0x7b, 0x5c, 0x62, 0xb2, 0x8c, 0x39, 0xfa, 0x1c, 0x5d, 0xd1, 0x6e,
  0x74, 0x07, 0xf3, 0xa2, 0xf3, 0xd1, 0x3d, 0xd4, 0xf5, 0x13, 0x11, 0x92,
  0x27, 0x63, 0x2f, 0xba, 0x89, 0xe3, 0xa2, 0x0b, 0xd1, 0x2d, 0x2c, 0x88,
  0x2e, 0x46, 0xf7, 0x51, 0xdf, 0x7f, 0x42, 0xfa, 0x53, 0xd1, 0x15, 0xe4,
  0x4c, 0x9b, 0xc7, 0x52, 0x6d, 0x32, 0xcd, 0x36, 0xe9, 0xfa, 0xd4, 0xec,
  0x15, 0xf4, 0xd4, 0x36, 0x29, 0xb6, 0xf9, 0x36, 0xa5, 0xc6, 0xda, 0xc4,
  0x79, 0x64, 0x8d, 0x55, 0x8e, 0x56, 0x31, 0x93, 0xc2, 0x38, 0xaf, 0x6c,
  0x33, 0x8b, 0x9e, 0xd8, 0x2b, 0x11, 0x10, 0x67, 0xd2, 0x9c, 0x99, 0x44,
  0x1a, 0xb3, 0xd2, 0x54, 0x94, 0xb9, 0x6a, 0xb4, 0x81, 0xc6, 0x4f, 0x93,
  0xc6, 0xcd, 0xce, 0x67, 0x51, 0xd7, 0x83, 0xf4, 0x33, 0x56, 0x16, 0x3f,
  0x85, 0xbb, 0x8f, 0xa9, 0x85, 0xec, 0xb6, 0x0c, 0x63, 0xbd, 0xc1, 0x46,
  0xec, 0xa9, 0xc0, 0xc3, 0x62, 0x2b, 0xcd, 0x50, 0xaf, 0xf1, 0x89, 0x36,
  0x52, 0xbe, 0x6d, 0x68, 0xa2, 0x9d, 0xa6, 0xac, 0x0f, 0x34, 0x56, 0x6a,
  0x50, 0xba, 0x5e, 0x67, 0xab, 0x54, 0x23, 0x26, 0x39, 0x13, 0x19, 0x2a,
  0x51, 0x7f, 0xef, 0xf1, 0xc2, 0x0a, 0x1a, 0x68, 0x50, 0x8e, 0x91, 0x0a,
  0x6c, 0x68, 0x92, 0xd3, 0xe4, 0x3c, 0xb4, 0x76, 0x97, 0x2a, 0x66, 0xcf,
  0x86, 0x5a, 0x9c, 0x27, 0x4c, 0xb4, 0xd1, 0x6d, 0xca, 0xb7, 0x34, 0x0d,
  0x94, 0x9b, 0x01, 0x82, 0x77, 0xe7, 0x36, 0x6b, 0xad, 0x2c, 0x6b, 0x1e,
  0x6e, 0xcb, 0xe5, 0x62, 0xcb, 0xe3, 0x72, 0xab, 0x18, 0xe7, 0x57, 0x7a,
  0x73, 0x01, 0xa7, 0xdb, 0x59, 0x89, 0xef, 0x4a, 0x7c, 0x8f, 0x2e, 0x02,
  0xfc, 0x58, 0xa7, 0xac, 0xc4, 0x74, 0x25, 0xa6, 0x47, 0x55, 0x02, 0xf2,
  0x9a, 0x25, 0x76, 0xe5, 0xdb, 0xd6, 0xf2, 0xa7, 0x37, 0x5d, 0x64, 0x6f,
  0x46, 0x73, 0xae, 0xf3, 0x0c, 0x67, 0x25, 0x07, 0x57, 0x72, 0xf0, 0x68,
  0x8a, 0x25, 0x16, 0x33, 0x53, 0xab, 0x4e, 0x96, 0xec, 0x6b, 0xa6, 0x6b,
  0x68, 0xa5, 0xcd, 0x7e, 0xce, 0xb1, 0x21, 0x9d, 0x59, 0xfa, 0xdd, 0xb5,
  0x11, 0xc0, 0x11, 0x4d, 0x5a, 0x17, 0x3e, 0xfd, 0x9b, 0x2b, 0xd1, 0x6d,
  0x94, 0x71, 0x3a, 0x0b, 0x2f, 0x6c, 0xd8, 0x7c, 0x61, 0xdb, 0x22, 0xb8,
  0xe9, 0xd8, 0x66, 0xd3, 0xa4, 0xc4, 0x1e, 0x57, 0x97, 0x3f, 0x93, 0x37,
  0x13, 0xb4, 0xd0, 0x38, 0x82, 0xab, 0xcd, 0x31, 0x5b, 0x55, 0x1b, 0xdb,
  0xd1, 0xb9, 0xa3, 0xdf, 0x06, 0x6a, 0xb3, 0x2c, 0xad, 0x5e, 0xc2, 0xa2,
  0x36, 0x8a, 0xda, 0x6c, 0x2b, 0xae, 0xe8, 0x1e, 0xd9, 0xe2, 0x6a, 0x2e,
  0xc6, 0xb5, 0xdc, 0xd1, 0x5f, 0x0e, 0x31, 0x8f, 0x06, 0xb5, 0x6c, 0x55,
  0x19, 0x11, 0x1c, 0x54, 0x83, 0x7f, 0x7e, 0xfe, 0xd7, 0x47, 0x7f, 0xbc,
  0x5c, 0x7b, 0xfa, 0x6d, 0xef, 0xed, 0x67, 0x1f, 0x6e, 0x5e, 0x7f, 0xf6,
  0x37, 0xb6, 0x53, 0xec, 0x5b, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x01, 0x02, 0x03, 0x00, 0x00, 0x04, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x05, 0x03, 0x08, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x01, 0x06, 0x05,
  0x04, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7c, 0x00, 0x00,
  0x78, 0x01, 0x63, 0x64, 0x60, 0x60, 0x60, 0x06, 0x62, 0x09, 0x20, 0x06,
  0x81, 0x1a, 0x20, 0x96, 0x05, 0x62, 0x26, 0x20, 0x06, 0x01, 0x1b, 0x10,
  0x01, 0x04, 0xac, 0x40, 0xec, 0x02, 0xc4, 0x20, 0x00, 0x62, 0x27, 0x00,
  0x31, 0x0c, 0x80, 0xcc, 0xf0, 0x01, 0x62, 0x10, 0x00, 0xb1, 0x61, 0xe0,
  0x3f, 0x10, 0x80, 0xf8, 0x19, 0x40, 0x0c, 0xb2, 0x03, 0x55, 0xee, 0xff,
  0x7f, 0x00, 0x33, 0x03, 0x0a, 0x55, 0x00, 0x00, 0x78, 0x62, 0x6f, 0x70,
  0x01, 0x00, 0x00, 0x00, 0x7e, 0x02, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x30, 0x00, 0x00, 0x00
};
