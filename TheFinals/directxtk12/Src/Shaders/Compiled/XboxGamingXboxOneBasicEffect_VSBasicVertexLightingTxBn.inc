#if 0
;
; Input signature:
;
; Name                 Index   Mask Register SysValue  Format   Used
; -------------------- ----- ------ -------- -------- ------- ------
; SV_Position              0   xyzw        0     NONE   float   xyzw
; NORMAL                   0   xyz         1     NONE   float   xyz 
; TEXCOORD                 0   xy          2     NONE   float   xy  
;
;
; Output signature:
;
; Name                 Index   Mask Register SysValue  Format   Used
; -------------------- ----- ------ -------- -------- ------- ------
; COLOR                    0   xyzw        0     NONE   float   xyzw
; COLOR                    1   xyzw        1     NONE   float   xyzw
; TEXCOORD                 0   xy          2     NONE   float   xy  
; SV_Position              0   xyzw        3      POS   float   xyzw
;
; shader debug name: C:\Users\marcu\Downloads\DirectXTK12-main\DirectXTK12-main\Src/Shaders/Compiled\XboxGamingXboxOneBasicEffect_VSBasicVertexLightingTxBn.pdb
; shader hash: 7f8967fcb9686d18d3e0d7631aea096c
;
; Pipeline Runtime Information: 
;
;PSVRuntimeInfo:
; Vertex Shader
; OutputPositionPresent=1
; MinimumExpectedWaveLaneCount: 0
; MaximumExpectedWaveLaneCount: 4294967295
; UsesViewID: false
; SigInputElements: 3
; SigOutputElements: 4
; SigPatchConstOrPrimElements: 0
; SigInputVectors: 3
; SigOutputVectors[0]: 4
; SigOutputVectors[1]: 0
; SigOutputVectors[2]: 0
; SigOutputVectors[3]: 0
; EntryFunctionName: VSBasicVertexLightingTxBn
;
;
; Input signature:
;
; Name                 Index             InterpMode DynIdx
; -------------------- ----- ---------------------- ------
; SV_Position              0                              
; NORMAL                   0                              
; TEXCOORD                 0                              
;
; Output signature:
;
; Name                 Index             InterpMode DynIdx
; -------------------- ----- ---------------------- ------
; COLOR                    0                 linear       
; COLOR                    1                 linear       
; TEXCOORD                 0                 linear       
; SV_Position              0          noperspective       
;
; Buffer Definitions:
;
; cbuffer 
; {
;
;   [416 x i8] (type annotation not present)
;
; }
;
;
; Resource Bindings:
;
; Name                                 Type  Format         Dim      ID      HLSL Bind  Count
; ------------------------------ ---------- ------- ----------- ------- -------------- ------
;                                   cbuffer      NA          NA     CB0            cb0     1
;
;
; ViewId state:
;
; Number of inputs: 10, outputs: 16
; Outputs dependent on ViewId: {  }
; Inputs contributing to computation of Outputs:
;   output 0 depends on inputs: { 4, 5, 6 }
;   output 1 depends on inputs: { 4, 5, 6 }
;   output 2 depends on inputs: { 4, 5, 6 }
;   output 4 depends on inputs: { 0, 1, 2, 3, 4, 5, 6 }
;   output 5 depends on inputs: { 0, 1, 2, 3, 4, 5, 6 }
;   output 6 depends on inputs: { 0, 1, 2, 3, 4, 5, 6 }
;   output 7 depends on inputs: { 0, 1, 2, 3 }
;   output 8 depends on inputs: { 8 }
;   output 9 depends on inputs: { 9 }
;   output 12 depends on inputs: { 0, 1, 2, 3 }
;   output 13 depends on inputs: { 0, 1, 2, 3 }
;   output 14 depends on inputs: { 0, 1, 2, 3 }
;   output 15 depends on inputs: { 0, 1, 2, 3 }
;
target datalayout = "e-m:e-p:32:32-i1:32-i8:32-i16:32-i32:32-i64:64-f16:32-f32:32-f64:64-n8:16:32:64"
target triple = "dxil-ms-xb1"

%dx.types.Handle = type { i8* }
%dx.types.CBufRet.f32 = type { float, float, float, float }
%hostlayout.Parameters = type { <4 x float>, <3 x float>, <3 x float>, float, [3 x <3 x float>], [3 x <3 x float>], [3 x <3 x float>], <3 x float>, <3 x float>, <4 x float>, [4 x <4 x float>], [3 x <3 x float>], [4 x <4 x float>] }

define void @VSBasicVertexLightingTxBn() {
  %1 = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 2, i32 0, i32 0, i1 false)  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %2 = call float @dx.op.loadInput.f32(i32 4, i32 2, i32 0, i8 0, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %3 = call float @dx.op.loadInput.f32(i32 4, i32 2, i32 0, i8 1, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %4 = call float @dx.op.loadInput.f32(i32 4, i32 1, i32 0, i8 0, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %5 = call float @dx.op.loadInput.f32(i32 4, i32 1, i32 0, i8 1, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %6 = call float @dx.op.loadInput.f32(i32 4, i32 1, i32 0, i8 2, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %7 = call float @dx.op.loadInput.f32(i32 4, i32 0, i32 0, i8 0, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %8 = call float @dx.op.loadInput.f32(i32 4, i32 0, i32 0, i8 1, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %9 = call float @dx.op.loadInput.f32(i32 4, i32 0, i32 0, i8 2, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %10 = call float @dx.op.loadInput.f32(i32 4, i32 0, i32 0, i8 3, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %11 = fmul fast float %4, 2.000000e+00
  %12 = fmul fast float %5, 2.000000e+00
  %13 = fmul fast float %6, 2.000000e+00
  %14 = fadd fast float %11, -1.000000e+00
  %15 = fadd fast float %12, -1.000000e+00
  %16 = fadd fast float %13, -1.000000e+00
  %17 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 15)  ; CBufferLoadLegacy(handle,regIndex)
  %18 = extractvalue %dx.types.CBufRet.f32 %17, 0
  %19 = extractvalue %dx.types.CBufRet.f32 %17, 1
  %20 = extractvalue %dx.types.CBufRet.f32 %17, 2
  %21 = extractvalue %dx.types.CBufRet.f32 %17, 3
  %22 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 16)  ; CBufferLoadLegacy(handle,regIndex)
  %23 = extractvalue %dx.types.CBufRet.f32 %22, 0
  %24 = extractvalue %dx.types.CBufRet.f32 %22, 1
  %25 = extractvalue %dx.types.CBufRet.f32 %22, 2
  %26 = extractvalue %dx.types.CBufRet.f32 %22, 3
  %27 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 17)  ; CBufferLoadLegacy(handle,regIndex)
  %28 = extractvalue %dx.types.CBufRet.f32 %27, 0
  %29 = extractvalue %dx.types.CBufRet.f32 %27, 1
  %30 = extractvalue %dx.types.CBufRet.f32 %27, 2
  %31 = extractvalue %dx.types.CBufRet.f32 %27, 3
  %32 = fmul fast float %18, %7
  %33 = call float @dx.op.tertiary.f32(i32 46, float %8, float %19, float %32)  ; FMad(a,b,c)
  %34 = call float @dx.op.tertiary.f32(i32 46, float %9, float %20, float %33)  ; FMad(a,b,c)
  %35 = call float @dx.op.tertiary.f32(i32 46, float %10, float %21, float %34)  ; FMad(a,b,c)
  %36 = fmul fast float %23, %7
  %37 = call float @dx.op.tertiary.f32(i32 46, float %8, float %24, float %36)  ; FMad(a,b,c)
  %38 = call float @dx.op.tertiary.f32(i32 46, float %9, float %25, float %37)  ; FMad(a,b,c)
  %39 = call float @dx.op.tertiary.f32(i32 46, float %10, float %26, float %38)  ; FMad(a,b,c)
  %40 = fmul fast float %28, %7
  %41 = call float @dx.op.tertiary.f32(i32 46, float %8, float %29, float %40)  ; FMad(a,b,c)
  %42 = call float @dx.op.tertiary.f32(i32 46, float %9, float %30, float %41)  ; FMad(a,b,c)
  %43 = call float @dx.op.tertiary.f32(i32 46, float %10, float %31, float %42)  ; FMad(a,b,c)
  %44 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 12)  ; CBufferLoadLegacy(handle,regIndex)
  %45 = extractvalue %dx.types.CBufRet.f32 %44, 0
  %46 = extractvalue %dx.types.CBufRet.f32 %44, 1
  %47 = extractvalue %dx.types.CBufRet.f32 %44, 2
  %48 = fsub fast float %45, %35
  %49 = fsub fast float %46, %39
  %50 = fsub fast float %47, %43
  %51 = call float @dx.op.dot3.f32(i32 55, float %48, float %49, float %50, float %48, float %49, float %50)  ; Dot3(ax,ay,az,bx,by,bz)
  %52 = call float @dx.op.unary.f32(i32 25, float %51)  ; Rsqrt(value)
  %53 = fmul fast float %48, %52
  %54 = fmul fast float %49, %52
  %55 = fmul fast float %50, %52
  %56 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 19)  ; CBufferLoadLegacy(handle,regIndex)
  %57 = extractvalue %dx.types.CBufRet.f32 %56, 0
  %58 = extractvalue %dx.types.CBufRet.f32 %56, 1
  %59 = extractvalue %dx.types.CBufRet.f32 %56, 2
  %60 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 20)  ; CBufferLoadLegacy(handle,regIndex)
  %61 = extractvalue %dx.types.CBufRet.f32 %60, 0
  %62 = extractvalue %dx.types.CBufRet.f32 %60, 1
  %63 = extractvalue %dx.types.CBufRet.f32 %60, 2
  %64 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 21)  ; CBufferLoadLegacy(handle,regIndex)
  %65 = extractvalue %dx.types.CBufRet.f32 %64, 0
  %66 = extractvalue %dx.types.CBufRet.f32 %64, 1
  %67 = extractvalue %dx.types.CBufRet.f32 %64, 2
  %68 = fmul fast float %57, %14
  %69 = call float @dx.op.tertiary.f32(i32 46, float %15, float %58, float %68)  ; FMad(a,b,c)
  %70 = call float @dx.op.tertiary.f32(i32 46, float %16, float %59, float %69)  ; FMad(a,b,c)
  %71 = fmul fast float %61, %14
  %72 = call float @dx.op.tertiary.f32(i32 46, float %15, float %62, float %71)  ; FMad(a,b,c)
  %73 = call float @dx.op.tertiary.f32(i32 46, float %16, float %63, float %72)  ; FMad(a,b,c)
  %74 = fmul fast float %65, %14
  %75 = call float @dx.op.tertiary.f32(i32 46, float %15, float %66, float %74)  ; FMad(a,b,c)
  %76 = call float @dx.op.tertiary.f32(i32 46, float %16, float %67, float %75)  ; FMad(a,b,c)
  %77 = call float @dx.op.dot3.f32(i32 55, float %70, float %73, float %76, float %70, float %73, float %76)  ; Dot3(ax,ay,az,bx,by,bz)
  %78 = call float @dx.op.unary.f32(i32 25, float %77)  ; Rsqrt(value)
  %79 = fmul fast float %78, %70
  %80 = fmul fast float %78, %73
  %81 = fmul fast float %78, %76
  %82 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 3)  ; CBufferLoadLegacy(handle,regIndex)
  %83 = extractvalue %dx.types.CBufRet.f32 %82, 0
  %84 = extractvalue %dx.types.CBufRet.f32 %82, 1
  %85 = extractvalue %dx.types.CBufRet.f32 %82, 2
  %86 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 6)  ; CBufferLoadLegacy(handle,regIndex)
  %87 = extractvalue %dx.types.CBufRet.f32 %86, 0
  %88 = extractvalue %dx.types.CBufRet.f32 %86, 1
  %89 = extractvalue %dx.types.CBufRet.f32 %86, 2
  %90 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 9)  ; CBufferLoadLegacy(handle,regIndex)
  %91 = extractvalue %dx.types.CBufRet.f32 %90, 0
  %92 = extractvalue %dx.types.CBufRet.f32 %90, 1
  %93 = extractvalue %dx.types.CBufRet.f32 %90, 2
  %94 = fsub fast float %53, %83
  %95 = fsub fast float %54, %84
  %96 = fsub fast float %55, %85
  %97 = call float @dx.op.dot3.f32(i32 55, float %94, float %95, float %96, float %94, float %95, float %96)  ; Dot3(ax,ay,az,bx,by,bz)
  %98 = call float @dx.op.unary.f32(i32 25, float %97)  ; Rsqrt(value)
  %99 = fmul fast float %98, %95
  %100 = fmul fast float %98, %96
  %101 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 4)  ; CBufferLoadLegacy(handle,regIndex)
  %102 = extractvalue %dx.types.CBufRet.f32 %101, 0
  %103 = extractvalue %dx.types.CBufRet.f32 %101, 1
  %104 = extractvalue %dx.types.CBufRet.f32 %101, 2
  %105 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 7)  ; CBufferLoadLegacy(handle,regIndex)
  %106 = extractvalue %dx.types.CBufRet.f32 %105, 0
  %107 = extractvalue %dx.types.CBufRet.f32 %105, 1
  %108 = extractvalue %dx.types.CBufRet.f32 %105, 2
  %109 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 10)  ; CBufferLoadLegacy(handle,regIndex)
  %110 = extractvalue %dx.types.CBufRet.f32 %109, 0
  %111 = extractvalue %dx.types.CBufRet.f32 %109, 1
  %112 = extractvalue %dx.types.CBufRet.f32 %109, 2
  %113 = fsub fast float %53, %102
  %114 = fsub fast float %54, %103
  %115 = fsub fast float %55, %104
  %116 = call float @dx.op.dot3.f32(i32 55, float %113, float %114, float %115, float %113, float %114, float %115)  ; Dot3(ax,ay,az,bx,by,bz)
  %117 = call float @dx.op.unary.f32(i32 25, float %116)  ; Rsqrt(value)
  %118 = fmul fast float %117, %114
  %119 = fmul fast float %117, %115
  %120 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 5)  ; CBufferLoadLegacy(handle,regIndex)
  %121 = extractvalue %dx.types.CBufRet.f32 %120, 0
  %122 = extractvalue %dx.types.CBufRet.f32 %120, 1
  %123 = extractvalue %dx.types.CBufRet.f32 %120, 2
  %124 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 8)  ; CBufferLoadLegacy(handle,regIndex)
  %125 = extractvalue %dx.types.CBufRet.f32 %124, 0
  %126 = extractvalue %dx.types.CBufRet.f32 %124, 1
  %127 = extractvalue %dx.types.CBufRet.f32 %124, 2
  %128 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 11)  ; CBufferLoadLegacy(handle,regIndex)
  %129 = extractvalue %dx.types.CBufRet.f32 %128, 0
  %130 = extractvalue %dx.types.CBufRet.f32 %128, 1
  %131 = extractvalue %dx.types.CBufRet.f32 %128, 2
  %132 = fsub fast float %53, %121
  %133 = fsub fast float %54, %122
  %134 = fsub fast float %55, %123
  %135 = call float @dx.op.dot3.f32(i32 55, float %132, float %133, float %134, float %132, float %133, float %134)  ; Dot3(ax,ay,az,bx,by,bz)
  %136 = call float @dx.op.unary.f32(i32 25, float %135)  ; Rsqrt(value)
  %137 = fmul fast float %136, %133
  %138 = fmul fast float %136, %134
  %139 = fsub fast float -0.000000e+00, %84
  %140 = fsub fast float -0.000000e+00, %85
  %141 = fsub fast float -0.000000e+00, %103
  %142 = fsub fast float -0.000000e+00, %104
  %143 = fsub fast float -0.000000e+00, %122
  %144 = fsub fast float -0.000000e+00, %123
  %145 = fmul fast float %79, %83
  %146 = fsub fast float -0.000000e+00, %145
  %147 = call float @dx.op.tertiary.f32(i32 46, float %139, float %80, float %146)  ; FMad(a,b,c)
  %148 = call float @dx.op.tertiary.f32(i32 46, float %140, float %81, float %147)  ; FMad(a,b,c)
  %149 = fmul fast float %79, %102
  %150 = fsub fast float -0.000000e+00, %149
  %151 = call float @dx.op.tertiary.f32(i32 46, float %141, float %80, float %150)  ; FMad(a,b,c)
  %152 = call float @dx.op.tertiary.f32(i32 46, float %142, float %81, float %151)  ; FMad(a,b,c)
  %153 = fmul fast float %79, %121
  %154 = fsub fast float -0.000000e+00, %153
  %155 = call float @dx.op.tertiary.f32(i32 46, float %143, float %80, float %154)  ; FMad(a,b,c)
  %156 = call float @dx.op.tertiary.f32(i32 46, float %144, float %81, float %155)  ; FMad(a,b,c)
  %157 = fmul fast float %94, %79
  %158 = fmul fast float %157, %98
  %159 = call float @dx.op.tertiary.f32(i32 46, float %99, float %80, float %158)  ; FMad(a,b,c)
  %160 = call float @dx.op.tertiary.f32(i32 46, float %100, float %81, float %159)  ; FMad(a,b,c)
  %161 = fmul fast float %113, %79
  %162 = fmul fast float %161, %117
  %163 = call float @dx.op.tertiary.f32(i32 46, float %118, float %80, float %162)  ; FMad(a,b,c)
  %164 = call float @dx.op.tertiary.f32(i32 46, float %119, float %81, float %163)  ; FMad(a,b,c)
  %165 = fmul fast float %132, %79
  %166 = fmul fast float %165, %136
  %167 = call float @dx.op.tertiary.f32(i32 46, float %137, float %80, float %166)  ; FMad(a,b,c)
  %168 = call float @dx.op.tertiary.f32(i32 46, float %138, float %81, float %167)  ; FMad(a,b,c)
  %169 = fcmp fast olt float %148, 0.000000e+00
  %170 = fcmp fast olt float %152, 0.000000e+00
  %171 = fcmp fast olt float %156, 0.000000e+00
  %172 = select i1 %169, float 0.000000e+00, float 1.000000e+00
  %173 = select i1 %170, float 0.000000e+00, float 1.000000e+00
  %174 = select i1 %171, float 0.000000e+00, float 1.000000e+00
  %175 = fmul fast float %172, %148
  %176 = fmul fast float %173, %152
  %177 = fmul fast float %174, %156
  %178 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 2)  ; CBufferLoadLegacy(handle,regIndex)
  %179 = extractvalue %dx.types.CBufRet.f32 %178, 3
  %180 = call float @dx.op.binary.f32(i32 35, float %160, float 0.000000e+00)  ; FMax(a,b)
  %181 = call float @dx.op.binary.f32(i32 35, float %164, float 0.000000e+00)  ; FMax(a,b)
  %182 = call float @dx.op.binary.f32(i32 35, float %168, float 0.000000e+00)  ; FMax(a,b)
  %183 = fmul fast float %180, %172
  %184 = fmul fast float %181, %173
  %185 = fmul fast float %182, %174
  %186 = call float @dx.op.unary.f32(i32 23, float %183)  ; Log(value)
  %187 = call float @dx.op.unary.f32(i32 23, float %184)  ; Log(value)
  %188 = call float @dx.op.unary.f32(i32 23, float %185)  ; Log(value)
  %189 = fmul fast float %186, %179
  %190 = fmul fast float %187, %179
  %191 = fmul fast float %188, %179
  %192 = call float @dx.op.unary.f32(i32 21, float %189)  ; Exp(value)
  %193 = call float @dx.op.unary.f32(i32 21, float %190)  ; Exp(value)
  %194 = call float @dx.op.unary.f32(i32 21, float %191)  ; Exp(value)
  %195 = fmul fast float %192, %148
  %196 = fmul fast float %193, %152
  %197 = fmul fast float %194, %156
  %198 = fmul fast float %175, %87
  %199 = call float @dx.op.tertiary.f32(i32 46, float %176, float %106, float %198)  ; FMad(a,b,c)
  %200 = call float @dx.op.tertiary.f32(i32 46, float %177, float %125, float %199)  ; FMad(a,b,c)
  %201 = fmul fast float %175, %88
  %202 = call float @dx.op.tertiary.f32(i32 46, float %176, float %107, float %201)  ; FMad(a,b,c)
  %203 = call float @dx.op.tertiary.f32(i32 46, float %177, float %126, float %202)  ; FMad(a,b,c)
  %204 = fmul fast float %175, %89
  %205 = call float @dx.op.tertiary.f32(i32 46, float %176, float %108, float %204)  ; FMad(a,b,c)
  %206 = call float @dx.op.tertiary.f32(i32 46, float %177, float %127, float %205)  ; FMad(a,b,c)
  %207 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 0)  ; CBufferLoadLegacy(handle,regIndex)
  %208 = extractvalue %dx.types.CBufRet.f32 %207, 0
  %209 = extractvalue %dx.types.CBufRet.f32 %207, 1
  %210 = extractvalue %dx.types.CBufRet.f32 %207, 2
  %211 = fmul fast float %208, %200
  %212 = fmul fast float %209, %203
  %213 = fmul fast float %210, %206
  %214 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 1)  ; CBufferLoadLegacy(handle,regIndex)
  %215 = extractvalue %dx.types.CBufRet.f32 %214, 0
  %216 = extractvalue %dx.types.CBufRet.f32 %214, 1
  %217 = extractvalue %dx.types.CBufRet.f32 %214, 2
  %218 = fadd fast float %211, %215
  %219 = fadd fast float %212, %216
  %220 = fadd fast float %213, %217
  %221 = fmul fast float %195, %91
  %222 = call float @dx.op.tertiary.f32(i32 46, float %196, float %110, float %221)  ; FMad(a,b,c)
  %223 = call float @dx.op.tertiary.f32(i32 46, float %197, float %129, float %222)  ; FMad(a,b,c)
  %224 = fmul fast float %195, %92
  %225 = call float @dx.op.tertiary.f32(i32 46, float %196, float %111, float %224)  ; FMad(a,b,c)
  %226 = call float @dx.op.tertiary.f32(i32 46, float %197, float %130, float %225)  ; FMad(a,b,c)
  %227 = fmul fast float %195, %93
  %228 = call float @dx.op.tertiary.f32(i32 46, float %196, float %112, float %227)  ; FMad(a,b,c)
  %229 = call float @dx.op.tertiary.f32(i32 46, float %197, float %131, float %228)  ; FMad(a,b,c)
  %230 = extractvalue %dx.types.CBufRet.f32 %178, 0
  %231 = extractvalue %dx.types.CBufRet.f32 %178, 1
  %232 = extractvalue %dx.types.CBufRet.f32 %178, 2
  %233 = fmul fast float %230, %223
  %234 = fmul fast float %231, %226
  %235 = fmul fast float %232, %229
  %236 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 22)  ; CBufferLoadLegacy(handle,regIndex)
  %237 = extractvalue %dx.types.CBufRet.f32 %236, 0
  %238 = extractvalue %dx.types.CBufRet.f32 %236, 1
  %239 = extractvalue %dx.types.CBufRet.f32 %236, 2
  %240 = extractvalue %dx.types.CBufRet.f32 %236, 3
  %241 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 23)  ; CBufferLoadLegacy(handle,regIndex)
  %242 = extractvalue %dx.types.CBufRet.f32 %241, 0
  %243 = extractvalue %dx.types.CBufRet.f32 %241, 1
  %244 = extractvalue %dx.types.CBufRet.f32 %241, 2
  %245 = extractvalue %dx.types.CBufRet.f32 %241, 3
  %246 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 24)  ; CBufferLoadLegacy(handle,regIndex)
  %247 = extractvalue %dx.types.CBufRet.f32 %246, 0
  %248 = extractvalue %dx.types.CBufRet.f32 %246, 1
  %249 = extractvalue %dx.types.CBufRet.f32 %246, 2
  %250 = extractvalue %dx.types.CBufRet.f32 %246, 3
  %251 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 25)  ; CBufferLoadLegacy(handle,regIndex)
  %252 = extractvalue %dx.types.CBufRet.f32 %251, 0
  %253 = extractvalue %dx.types.CBufRet.f32 %251, 1
  %254 = extractvalue %dx.types.CBufRet.f32 %251, 2
  %255 = extractvalue %dx.types.CBufRet.f32 %251, 3
  %256 = fmul fast float %237, %7
  %257 = call float @dx.op.tertiary.f32(i32 46, float %8, float %238, float %256)  ; FMad(a,b,c)
  %258 = call float @dx.op.tertiary.f32(i32 46, float %9, float %239, float %257)  ; FMad(a,b,c)
  %259 = call float @dx.op.tertiary.f32(i32 46, float %10, float %240, float %258)  ; FMad(a,b,c)
  %260 = fmul fast float %242, %7
  %261 = call float @dx.op.tertiary.f32(i32 46, float %8, float %243, float %260)  ; FMad(a,b,c)
  %262 = call float @dx.op.tertiary.f32(i32 46, float %9, float %244, float %261)  ; FMad(a,b,c)
  %263 = call float @dx.op.tertiary.f32(i32 46, float %10, float %245, float %262)  ; FMad(a,b,c)
  %264 = fmul fast float %247, %7
  %265 = call float @dx.op.tertiary.f32(i32 46, float %8, float %248, float %264)  ; FMad(a,b,c)
  %266 = call float @dx.op.tertiary.f32(i32 46, float %9, float %249, float %265)  ; FMad(a,b,c)
  %267 = call float @dx.op.tertiary.f32(i32 46, float %10, float %250, float %266)  ; FMad(a,b,c)
  %268 = fmul fast float %252, %7
  %269 = call float @dx.op.tertiary.f32(i32 46, float %8, float %253, float %268)  ; FMad(a,b,c)
  %270 = call float @dx.op.tertiary.f32(i32 46, float %9, float %254, float %269)  ; FMad(a,b,c)
  %271 = call float @dx.op.tertiary.f32(i32 46, float %10, float %255, float %270)  ; FMad(a,b,c)
  %272 = extractvalue %dx.types.CBufRet.f32 %207, 3
  %273 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 14)  ; CBufferLoadLegacy(handle,regIndex)
  %274 = extractvalue %dx.types.CBufRet.f32 %273, 0
  %275 = extractvalue %dx.types.CBufRet.f32 %273, 1
  %276 = extractvalue %dx.types.CBufRet.f32 %273, 2
  %277 = extractvalue %dx.types.CBufRet.f32 %273, 3
  %278 = call float @dx.op.dot4.f32(i32 56, float %7, float %8, float %9, float %10, float %274, float %275, float %276, float %277)  ; Dot4(ax,ay,az,aw,bx,by,bz,bw)
  %279 = call float @dx.op.unary.f32(i32 7, float %278)  ; Saturate(value)
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 0, float %218)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 1, float %219)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 2, float %220)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 3, float %272)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 1, i32 0, i8 0, float %233)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 1, i32 0, i8 1, float %234)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 1, i32 0, i8 2, float %235)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 1, i32 0, i8 3, float %279)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 2, i32 0, i8 0, float %2)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 2, i32 0, i8 1, float %3)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 3, i32 0, i8 0, float %259)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 3, i32 0, i8 1, float %263)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 3, i32 0, i8 2, float %267)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 3, i32 0, i8 3, float %271)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  ret void
}

; Function Attrs: nounwind readnone
declare float @dx.op.loadInput.f32(i32, i32, i32, i8, i32) #0

; Function Attrs: nounwind
declare void @dx.op.storeOutput.f32(i32, i32, i32, i8, float) #1

; Function Attrs: nounwind readnone
declare float @dx.op.dot3.f32(i32, float, float, float, float, float, float) #0

; Function Attrs: nounwind readnone
declare float @dx.op.unary.f32(i32, float) #0

; Function Attrs: nounwind readnone
declare float @dx.op.binary.f32(i32, float, float) #0

; Function Attrs: nounwind readnone
declare float @dx.op.dot4.f32(i32, float, float, float, float, float, float, float, float) #0

; Function Attrs: nounwind readonly
declare %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32, %dx.types.Handle, i32) #2

; Function Attrs: nounwind readnone
declare float @dx.op.tertiary.f32(i32, float, float, float) #0

; Function Attrs: nounwind readonly
declare %dx.types.Handle @dx.op.createHandle(i32, i8, i32, i32, i1) #2

attributes #0 = { nounwind readnone }
attributes #1 = { nounwind }
attributes #2 = { nounwind readonly }

!xbox.compiler.options = !{!0}
!llvm.ident = !{!1}
!dx.version = !{!2}
!dx.valver = !{!3}
!dx.shaderModel = !{!4}
!dx.resources = !{!5}
!dx.viewIdState = !{!8}
!dx.entryPoints = !{!9}

!0 = !{!"__XBOX_PER_THREAD_SCRATCH_SIZE_LIMIT_IN_BYTES", !"0"}
!1 = !{!"dxcxbox 2410.2410.11116.10741"}
!2 = !{i32 1, i32 0}
!3 = !{i32 1, i32 8}
!4 = !{!"vs", i32 6, i32 0}
!5 = !{null, null, !6, null}
!6 = !{!7}
!7 = !{i32 0, %hostlayout.Parameters* undef, !"", i32 0, i32 0, i32 1, i32 416, null}
!8 = !{[12 x i32] [i32 10, i32 16, i32 61680, i32 61680, i32 61680, i32 61680, i32 119, i32 119, i32 119, i32 0, i32 256, i32 512]}
!9 = !{void ()* @VSBasicVertexLightingTxBn, !"VSBasicVertexLightingTxBn", !10, !5, null}
!10 = !{!11, !19, null}
!11 = !{!12, !15, !17}
!12 = !{i32 0, !"SV_Position", i8 9, i8 0, !13, i8 0, i32 1, i8 4, i32 0, i8 0, !14}
!13 = !{i32 0}
!14 = !{i32 3, i32 15}
!15 = !{i32 1, !"NORMAL", i8 9, i8 0, !13, i8 0, i32 1, i8 3, i32 1, i8 0, !16}
!16 = !{i32 3, i32 7}
!17 = !{i32 2, !"TEXCOORD", i8 9, i8 0, !13, i8 0, i32 1, i8 2, i32 2, i8 0, !18}
!18 = !{i32 3, i32 3}
!19 = !{!20, !21, !23, !24}
!20 = !{i32 0, !"COLOR", i8 9, i8 0, !13, i8 2, i32 1, i8 4, i32 0, i8 0, !14}
!21 = !{i32 1, !"COLOR", i8 9, i8 0, !22, i8 2, i32 1, i8 4, i32 1, i8 0, !14}
!22 = !{i32 1}
!23 = !{i32 2, !"TEXCOORD", i8 9, i8 0, !13, i8 2, i32 1, i8 2, i32 2, i8 0, !18}
!24 = !{i32 3, !"SV_Position", i8 9, i8 3, !13, i8 4, i32 1, i8 4, i32 3, i8 0, !14}

;
; DUMPING SHADER HARDWARE INSTRUCTIONS 
;
// Shader Type               : (VS)
// Shader Hw Stage           : (VS)

// Shader Instructions:
shader main
  asic(CI)
  type(VS)
  s_swappc_b64  s[0:1], s[0:1]
  s_or_b32      s85, s4, 0x00100000 // wrscc
  s_mov_b32     s84, s3
  s_mov_b32     s86, -1
  s_mov_b32     s87, 0x00024fac
  s_buffer_load_dwordx16  s[20:35], s[84:87], 0x00
  s_buffer_load_dwordx16  s[68:83], s[84:87], 0x10
  s_buffer_load_dwordx16  s[36:51], s[84:87], 0x20
  s_buffer_load_dwordx4  s[0:3], s[84:87], 0x30
  s_buffer_load_dwordx16  s[4:19], s[84:87], 0x38
  s_buffer_load_dwordx16  s[52:67], s[84:87], 0x4c
  s_waitcnt     vmcnt(0)
  v_mad_f32     v0, v8, 2.0, -1.0
  v_mad_f32     v1, v9, 2.0, -1.0
  v_mad_f32     v2, v10, 2.0, -1.0
  s_waitcnt     lgkmcnt(0)
  v_mul_legacy_f32  v8, s12, v4
  v_mul_legacy_f32  v3, s8, v4
  v_mac_legacy_f32  v8, s13, v5
  v_mac_legacy_f32  v3, s9, v5
  v_mac_legacy_f32  v8, s14, v6
  v_mul_legacy_f32  v9, s16, v4
  v_mul_legacy_f32  v14, s56, v0
  v_mul_legacy_f32  v11, s52, v0
  v_mac_legacy_f32  v3, s10, v6
  v_mac_legacy_f32  v8, s15, v7
  v_mac_legacy_f32  v9, s17, v5
  v_mac_legacy_f32  v14, s57, v1
  v_mac_legacy_f32  v3, s11, v7
  v_mac_legacy_f32  v9, s18, v6
  v_mac_legacy_f32  v11, s53, v1
  v_mul_legacy_f32  v0, s60, v0
  v_sub_f32     v8, s1, v8
  v_mac_legacy_f32  v14, s58, v2
  v_mac_legacy_f32  v0, s61, v1
  v_mac_legacy_f32  v9, s19, v7
  v_sub_f32     v3, s0, v3
  v_mul_legacy_f32  v10, v8, v8
  v_mac_legacy_f32  v11, s54, v2
  v_mul_legacy_f32  v1, v14, v14
  v_sub_f32     v9, s2, v9
  v_mac_legacy_f32  v10, v3, v3
  v_mac_legacy_f32  v0, s62, v2
  v_mac_legacy_f32  v1, v11, v11
  v_mac_legacy_f32  v10, v9, v9
  v_mac_legacy_f32  v1, v0, v0
  v_rsq_f32     v10, v10
  v_rsq_f32     v1, v1
  v_mad_legacy_f32  v18, v8, v10, -s69
  v_mul_legacy_f32  v2, v1, v11
  v_mul_legacy_f32  v11, v1, v14
  v_mad_legacy_f32  v14, v8, v10, -s33
  v_mul_legacy_f32  v0, v1, v0
  v_mad_legacy_f32  v1, v3, v10, -s32
  v_mul_legacy_f32  v16, v14, v14
  v_mac_legacy_f32  v16, v1, v1
  v_mad_legacy_f32  v15, v9, v10, -s34
  v_mac_legacy_f32  v16, v15, v15
  v_mad_legacy_f32  v17, v3, v10, -s68
  v_mul_legacy_f32  v20, v18, v18
  v_mad_legacy_f32  v8, v8, v10, -s73
  v_rsq_f32     v16, v16
  v_mad_legacy_f32  v19, v9, v10, -s70
  v_mac_legacy_f32  v20, v17, v17
  v_mad_legacy_f32  v3, v3, v10, -s72
  v_mad_legacy_f32  v9, v9, v10, -s74
  v_mul_legacy_f32  v10, v8, v8
  v_mac_legacy_f32  v20, v19, v19
  v_mac_legacy_f32  v10, v3, v3
  v_rsq_f32     v20, v20
  v_mac_legacy_f32  v10, v9, v9
  v_rsq_f32     v10, v10
  v_mul_legacy_f32  v1, v1, v2
  v_mul_legacy_f32  v21, s32, v2
  v_mul_legacy_f32  v14, v16, v14
  v_mul_legacy_f32  v1, v1, v16
  v_mad_legacy_f32  v21, -s33, v11, -v21
  v_mul_legacy_f32  v22, s68, v2
  v_mac_legacy_f32  v1, v14, v11
  v_mul_legacy_f32  v14, v17, v2
  v_mul_legacy_f32  v23, s72, v2
  v_mul_legacy_f32  v2, v3, v2
  v_mad_legacy_f32  v22, -s69, v11, -v22
  v_mul_legacy_f32  v15, v16, v15
  v_mac_legacy_f32  v21, v0, -s34
  v_mul_legacy_f32  v18, v20, v18
  v_mul_legacy_f32  v14, v14, v20
  v_mad_legacy_f32  v23, -s73, v11, -v23
  v_mac_legacy_f32  v1, v15, v0
  v_mac_legacy_f32  v22, v0, -s70
  v_mul_legacy_f32  v19, v20, v19
  v_mac_legacy_f32  v14, v18, v11
  v_mul_legacy_f32  v8, v10, v8
  v_mul_legacy_f32  v2, v2, v10
  v_cmp_gt_f32  vcc, 0, v21
  v_mac_legacy_f32  v14, v19, v0
  v_mac_legacy_f32  v23, v0, -s74
  v_mac_legacy_f32  v2, v8, v11
  v_mul_legacy_f32  v9, v10, v9
  v_cndmask_b32  v8, 1.0, 0, vcc
  v_max_f32     v1, 0, v1
  v_cmp_gt_f32  s[0:1], 0, v22
  v_mad_legacy_f32  v0, v9, v0, v2
  v_mul_legacy_f32  v1, v1, v8
  v_cmp_gt_f32  s[2:3], 0, v23
  v_cndmask_b32  v9, 1.0, 0, s[0:1]
  v_max_f32     v14, 0, v14
  v_cndmask_b32  v10, 1.0, 0, s[2:3]
  v_max_f32     v0, 0, v0
  v_log_f32     v1, v1
  v_mul_legacy_f32  v11, v8, v21
  v_mul_legacy_f32  v8, v14, v9
  v_mul_legacy_f32  v0, v0, v10
  v_log_f32     v8, v8
  v_log_f32     v0, v0
  v_mul_legacy_f32  v1, s31, v1
  v_exp_f32     v1, v1
  v_mul_legacy_f32  v8, s31, v8
  v_mul_legacy_f32  v0, s31, v0
  v_exp_f32     v8, v8
  v_exp_f32     v0, v0
  v_mul_legacy_f32  v15, v9, v22
  v_mul_legacy_f32  v9, s76, v11
  v_mul_legacy_f32  v16, v10, v23
  v_mul_legacy_f32  v10, s77, v11
  v_mul_legacy_f32  v11, s78, v11
  s_buffer_load_dwordx8  s[8:15], s[84:87], 0x5c
  s_buffer_load_dwordx4  s[0:3], s[84:87], 0x64
  v_mac_legacy_f32  v9, s80, v15
  v_mac_legacy_f32  v10, s81, v15
  v_mac_legacy_f32  v11, s82, v15
  v_mul_legacy_f32  v1, v1, v21
  v_mac_legacy_f32  v9, s36, v16
  v_mac_legacy_f32  v10, s37, v16
  v_mac_legacy_f32  v11, s38, v16
  v_mul_legacy_f32  v8, v8, v22
  v_mul_legacy_f32  v15, s40, v1
  v_mul_legacy_f32  v16, s41, v1
  v_mul_legacy_f32  v1, s42, v1
  v_mul_legacy_f32  v0, v0, v23
  v_mac_legacy_f32  v15, s44, v8
  v_mac_legacy_f32  v16, s45, v8
  v_mac_legacy_f32  v15, s48, v0
  v_mac_legacy_f32  v16, s49, v0
  v_mac_legacy_f32  v1, s46, v8
  v_mad_legacy_f32  v0, v0, s50, v1
  s_waitcnt     lgkmcnt(0)
  v_mul_legacy_f32  v17, s12, v4
  v_mul_legacy_f32  v18, s0, v4
  v_mul_legacy_f32  v1, s28, v15
  v_mul_legacy_f32  v15, s64, v4
  v_mul_legacy_f32  v8, s29, v16
  v_mul_legacy_f32  v16, s8, v4
  v_mac_legacy_f32  v15, s65, v5
  v_mac_legacy_f32  v16, s9, v5
  v_mac_legacy_f32  v17, s13, v5
  v_mac_legacy_f32  v18, s1, v5
  v_mac_legacy_f32  v15, s66, v6
  v_mac_legacy_f32  v16, s10, v6
  v_mac_legacy_f32  v17, s14, v6
  v_mac_legacy_f32  v18, s2, v6
  v_mac_legacy_f32  v15, s67, v7
  v_mac_legacy_f32  v16, s11, v7
  v_mac_legacy_f32  v17, s15, v7
  v_mac_legacy_f32  v18, s3, v7
  v_mul_legacy_f32  v5, s5, v5
  exp           pos0, v15, v16, v17, v18 done
  v_mul_legacy_f32  v7, s7, v7
  v_mul_legacy_f32  v9, s20, v9
  v_mul_legacy_f32  v10, s21, v10
  v_mul_legacy_f32  v11, s22, v11
  v_mad_legacy_f32  v4, v4, s4, v5
  v_mad_legacy_f32  v5, v6, s6, v7
  v_mov_b32     v2, 1.0
  v_mov_b32     v3, 0
  v_mov_b32     v14, s23
  v_add_f32     v9, s24, v9
  v_add_f32     v10, s25, v10
  v_add_f32     v11, s26, v11
  v_mul_legacy_f32  v0, s30, v0
  v_add_f32     v4, v4, v5 clamp
  exp           param0, v9, v10, v11, v14
  exp           param1, v1, v8, v0, v4
  exp           param2, v12, v13, v3, v2
  s_endpgm      
end


NumVGPR=24,NumSGPR=90,LDS=0,Scratch=0,Occpancy=5

// Shader Type               : (VS)
// Shader Hw Stage           : (ES)

// Shader Instructions:
shader main
  asic(CI)
  type(VS)
  s_swappc_b64  s[0:1], s[0:1]
  s_mov_b32     s71, 0x00024fac
  s_mov_b32     s70, -1
  s_mov_b32     s68, s3
  s_or_b32      s69, s4, 0x00100000 // wrscc
  s_buffer_load_dwordx4  s[24:27], s[68:71], 0x30
  s_buffer_load_dwordx16  s[8:23], s[68:71], 0x38
  s_buffer_load_dwordx16  s[44:59], s[68:71], 0x4c
  s_waitcnt     vmcnt(0)
  v_mad_f32     v8, v8, 2.0, -1.0
  s_mov_b32     s1, 0
  s_buffer_load_dwordx16  s[28:43], s[68:71], 0x10
  s_waitcnt     lgkmcnt(0)
  v_mul_legacy_f32  v0, s16, v4
  v_mac_legacy_f32  v0, s17, v5
  v_mul_legacy_f32  v1, s12, v4
  v_mac_legacy_f32  v1, s13, v5
  v_mac_legacy_f32  v0, s18, v6
  v_mul_legacy_f32  v2, s20, v4
  v_mac_legacy_f32  v2, s21, v5
  v_mac_legacy_f32  v1, s14, v6
  v_mac_legacy_f32  v0, s19, v7
  v_mac_legacy_f32  v2, s22, v6
  v_mac_legacy_f32  v1, s15, v7
  v_sub_f32     v0, s25, v0
  v_mac_legacy_f32  v2, s23, v7
  v_sub_f32     v1, s24, v1
  v_mul_legacy_f32  v3, v0, v0
  v_sub_f32     v2, s26, v2
  v_mac_legacy_f32  v3, v1, v1
  v_mac_legacy_f32  v3, v2, v2
  s_buffer_load_dwordx16  s[12:27], s[68:71], 0x00
  v_rsq_f32     v3, v3
  v_mul_legacy_f32  v11, s48, v8
  v_mad_f32     v9, v9, 2.0, -1.0
  v_mul_legacy_f32  v14, s44, v8
  v_mad_f32     v10, v10, 2.0, -1.0
  v_mac_legacy_f32  v11, s49, v9
  v_mul_legacy_f32  v8, s52, v8
  v_mac_legacy_f32  v14, s45, v9
  v_mac_legacy_f32  v11, s50, v10
  v_mac_legacy_f32  v8, s53, v9
  v_mad_legacy_f32  v9, v10, s46, v14
  v_mul_legacy_f32  v14, v11, v11
  s_load_dwordx4  s[0:3], s[0:1], 0x08
  v_mac_legacy_f32  v8, s54, v10
  v_mac_legacy_f32  v14, v9, v9
  s_waitcnt     lgkmcnt(0)
  v_mad_legacy_f32  v10, v0, v3, -s25
  v_mac_legacy_f32  v14, v8, v8
  v_mad_legacy_f32  v15, v0, v3, -s29
  v_mad_legacy_f32  v16, v1, v3, -s24
  v_mul_legacy_f32  v17, v10, v10
  v_rsq_f32     v14, v14
  v_mad_legacy_f32  v0, v0, v3, -s33
  v_mad_legacy_f32  v19, v1, v3, -s28
  v_mul_legacy_f32  v20, v15, v15
  v_mac_legacy_f32  v17, v16, v16
  v_mad_legacy_f32  v18, v2, v3, -s26
  v_mac_legacy_f32  v17, v18, v18
  v_mad_legacy_f32  v21, v2, v3, -s30
  v_mac_legacy_f32  v20, v19, v19
  v_mad_legacy_f32  v1, v1, v3, -s32
  v_mul_legacy_f32  v22, v0, v0
  v_rsq_f32     v17, v17
  v_mac_legacy_f32  v22, v1, v1
  v_mac_legacy_f32  v20, v21, v21
  v_mad_legacy_f32  v2, v2, v3, -s34
  v_rsq_f32     v3, v20
  v_mad_legacy_f32  v20, v2, v2, v22
  v_mul_legacy_f32  v9, v14, v9
  v_rsq_f32     v20, v20
  v_mul_legacy_f32  v16, v16, v9
  v_mul_legacy_f32  v11, v14, v11
  v_mul_legacy_f32  v22, s24, v9
  s_buffer_load_dwordx8  s[60:67], s[68:71], 0x5c
  v_mul_legacy_f32  v8, v14, v8
  v_mad_legacy_f32  v22, -s25, v11, -v22
  v_mul_legacy_f32  v14, s28, v9
  v_mul_legacy_f32  v19, v19, v9
  v_mul_legacy_f32  v16, v16, v17
  v_mul_legacy_f32  v10, v17, v10
  v_mul_legacy_f32  v1, v1, v9
  v_mad_legacy_f32  v14, -s29, v11, -v14
  v_mac_legacy_f32  v22, v8, -s26
  v_mul_legacy_f32  v9, s32, v9
  v_mad_legacy_f32  v10, v10, v11, v16
  v_mul_legacy_f32  v17, v17, v18
  v_mul_legacy_f32  v16, v19, v3
  v_mul_legacy_f32  v15, v3, v15
  v_mad_legacy_f32  v9, -s33, v11, -v9
  v_mac_legacy_f32  v10, v17, v8
  v_mul_legacy_f32  v18, s56, v4
  v_mad_legacy_f32  v15, v15, v11, v16
  v_mac_legacy_f32  v14, v8, -s30
  v_mul_legacy_f32  v1, v1, v20
  v_mul_legacy_f32  v0, v20, v0
  v_mul_legacy_f32  v3, v3, v21
  v_cmp_gt_f32  vcc, 0, v22
  v_mad_legacy_f32  v16, v5, s57, v18
  v_cndmask_b32  v18, 1.0, 0, vcc
  v_mad_legacy_f32  v0, v0, v11, v1
  v_mad_legacy_f32  v1, v3, v8, v15
  v_mul_legacy_f32  v2, v20, v2
  v_max_f32     v3, 0, v10
  v_mac_legacy_f32  v9, v8, -s34
  v_cmp_gt_f32  vcc, 0, v14
  v_mac_legacy_f32  v0, v2, v8
  v_mul_legacy_f32  v2, v3, v18
  v_mad_legacy_f32  v10, v6, s58, v16
  v_cndmask_b32  v16, 1.0, 0, vcc
  v_max_f32     v1, 0, v1
  s_waitcnt     lgkmcnt(0)
  v_mul_legacy_f32  v15, s64, v4
  v_cmp_gt_f32  vcc, 0, v9
  v_mad_legacy_f32  v3, v7, s59, v10
  v_log_f32     v2, v2
  v_mul_legacy_f32  v1, v1, v16
  v_mad_legacy_f32  v10, v5, s65, v15
  s_buffer_load_dwordx4  s[24:27], s[68:71], 0x64
  v_cndmask_b32  v15, 1.0, 0, vcc
  v_max_f32     v0, 0, v0
  v_log_f32     v1, v1
  v_mul_legacy_f32  v0, v0, v15
  v_log_f32     v0, v0
  s_buffer_load_dwordx16  s[44:59], s[68:71], 0x20
  v_mul_legacy_f32  v17, s60, v4
  v_mad_legacy_f32  v11, v5, s61, v17
  v_mul_legacy_f32  v17, v18, v22
  v_mul_legacy_f32  v2, s23, v2
  v_exp_f32     v2, v2
  v_mul_legacy_f32  v1, s23, v1
  v_mad_legacy_f32  v8, v6, s62, v11
  v_mul_legacy_f32  v18, v16, v14
  s_waitcnt     lgkmcnt(0)
  v_mul_legacy_f32  v11, s24, v4
  v_mul_legacy_f32  v19, s36, v17
  v_exp_f32     v1, v1
  v_mul_legacy_f32  v0, s23, v0
  buffer_store_dword  v3, v0, s[0:3], s7 offset:48 glc slc
  v_mad_legacy_f32  v3, v7, s63, v8
  v_mad_legacy_f32  v8, v6, s66, v10
  v_mad_legacy_f32  v10, v5, s25, v11
  v_mad_legacy_f32  v11, v18, s40, v19
  v_mul_legacy_f32  v16, v15, v9
  v_mul_legacy_f32  v19, s37, v17
  v_exp_f32     v0, v0
  buffer_store_dword  v3, v0, s[0:3], s7 offset:52 glc slc
  v_mad_legacy_f32  v3, v7, s67, v8
  v_mad_legacy_f32  v8, v6, s26, v10
  v_mad_legacy_f32  v10, v16, s44, v11
  v_mad_legacy_f32  v11, v18, s41, v19
  v_mul_legacy_f32  v15, s38, v17
  buffer_store_dword  v3, v0, s[0:3], s7 offset:56 glc slc
  v_mad_legacy_f32  v3, v7, s27, v8
  v_mul_legacy_f32  v8, s12, v10
  v_mad_legacy_f32  v10, v16, s45, v11
  v_mad_legacy_f32  v11, v18, s42, v15
  buffer_store_dword  v3, v0, s[0:3], s7 offset:60 glc slc
  v_add_f32     v3, s16, v8
  v_mul_legacy_f32  v8, s13, v10
  v_mad_legacy_f32  v10, v16, s46, v11
  v_mul_legacy_f32  v2, v2, v22
  buffer_store_dword  v3, v0, s[0:3], s7 glc slc
  v_add_f32     v3, s17, v8
  v_mul_legacy_f32  v8, s14, v10
  v_mul_legacy_f32  v1, v1, v14
  v_mul_legacy_f32  v10, s48, v2
  buffer_store_dword  v3, v0, s[0:3], s7 offset:4 glc slc
  v_add_f32     v3, s18, v8
  v_mad_legacy_f32  v8, v1, s52, v10
  v_mul_legacy_f32  v0, v0, v9
  v_mul_legacy_f32  v9, s49, v2
  v_mul_legacy_f32  v2, s50, v2
  buffer_store_dword  v3, v0, s[0:3], s7 offset:8 glc slc
  v_mad_legacy_f32  v3, v0, s56, v8
  v_mad_legacy_f32  v8, v1, s53, v9
  v_mad_legacy_f32  v1, v1, s54, v2
  v_mul_legacy_f32  v2, s9, v5
  v_mul_legacy_f32  v5, s11, v7
  v_mov_b32     v10, s15
  v_mac_legacy_f32  v8, s57, v0
  v_mad_legacy_f32  v0, v0, s58, v1
  v_mul_legacy_f32  v3, s20, v3
  v_mad_legacy_f32  v1, v6, s10, v5
  v_mac_legacy_f32  v2, s8, v4
  buffer_store_dword  v10, v0, s[0:3], s7 offset:12 glc slc
  buffer_store_dword  v3, v0, s[0:3], s7 offset:16 glc slc
  v_mul_legacy_f32  v3, s21, v8
  v_mul_legacy_f32  v0, s22, v0
  v_add_f32     v1, v2, v1 clamp
  buffer_store_dword  v3, v0, s[0:3], s7 offset:20 glc slc
  buffer_store_dword  v0, v0, s[0:3], s7 offset:24 glc slc
  buffer_store_dword  v1, v0, s[0:3], s7 offset:28 glc slc
  buffer_store_dword  v12, v0, s[0:3], s7 offset:32 glc slc
  buffer_store_dword  v13, v0, s[0:3], s7 offset:36 glc slc
  s_endpgm      
end


NumVGPR=23,NumSGPR=74,LDS=0,Scratch=0,Occpancy=6

// Shader Type               : (VS)
// Shader Hw Stage           : (LS)

// Shader Instructions:
shader main
  asic(CI)
  type(VS)
  s_swappc_b64  s[0:1], s[0:1]
  s_or_b32      s85, s4, 0x00100000 // wrscc
  s_mov_b32     s84, s3
  s_mov_b32     s86, -1
  s_mov_b32     s87, 0x00024fac
  s_buffer_load_dwordx16  s[4:19], s[84:87], 0x00
  s_buffer_load_dwordx16  s[68:83], s[84:87], 0x10
  s_buffer_load_dwordx16  s[36:51], s[84:87], 0x20
  s_buffer_load_dwordx4  s[0:3], s[84:87], 0x30
  s_buffer_load_dwordx16  s[20:35], s[84:87], 0x38
  s_buffer_load_dwordx16  s[52:67], s[84:87], 0x4c
  s_waitcnt     vmcnt(0)
  v_mad_f32     v2, v9, 2.0, -1.0
  v_mad_f32     v0, v8, 2.0, -1.0
  v_mad_f32     v3, v10, 2.0, -1.0
  s_waitcnt     lgkmcnt(0)
  v_mul_legacy_f32  v9, s28, v4
  v_mul_legacy_f32  v8, s24, v4
  v_mac_legacy_f32  v9, s29, v5
  v_mac_legacy_f32  v8, s25, v5
  v_mac_legacy_f32  v9, s30, v6
  v_mul_legacy_f32  v10, s32, v4
  v_mul_legacy_f32  v15, s56, v0
  v_mul_legacy_f32  v14, s52, v0
  v_mac_legacy_f32  v8, s26, v6
  v_mac_legacy_f32  v9, s31, v7
  v_mac_legacy_f32  v10, s33, v5
  v_mac_legacy_f32  v15, s57, v2
  v_mac_legacy_f32  v8, s27, v7
  v_mac_legacy_f32  v10, s34, v6
  v_mac_legacy_f32  v14, s53, v2
  v_mul_legacy_f32  v0, s60, v0
  v_sub_f32     v9, s1, v9
  v_mac_legacy_f32  v15, s58, v3
  v_mac_legacy_f32  v0, s61, v2
  v_mac_legacy_f32  v10, s35, v7
  v_sub_f32     v8, s0, v8
  v_mul_legacy_f32  v11, v9, v9
  v_mac_legacy_f32  v14, s54, v3
  v_mul_legacy_f32  v2, v15, v15
  v_sub_f32     v10, s2, v10
  v_mac_legacy_f32  v11, v8, v8
  v_mac_legacy_f32  v0, s62, v3
  v_mac_legacy_f32  v2, v14, v14
  v_mac_legacy_f32  v11, v10, v10
  v_mac_legacy_f32  v2, v0, v0
  v_rsq_f32     v11, v11
  v_rsq_f32     v2, v2
  s_mov_b32     m0, -1
  v_mad_legacy_f32  v19, v9, v11, -s69
  v_mul_legacy_f32  v3, v2, v14
  v_mul_legacy_f32  v14, v2, v15
  v_mad_legacy_f32  v15, v9, v11, -s17
  v_mul_legacy_f32  v0, v2, v0
  v_mad_legacy_f32  v2, v8, v11, -s16
  v_mul_legacy_f32  v17, v15, v15
  v_mac_legacy_f32  v17, v2, v2
  v_mad_legacy_f32  v16, v10, v11, -s18
  v_mad_legacy_f32  v9, v9, v11, -s73
  v_mac_legacy_f32  v17, v16, v16
  v_mad_legacy_f32  v18, v8, v11, -s68
  v_mul_legacy_f32  v21, v19, v19
  v_mad_legacy_f32  v20, v10, v11, -s70
  v_mad_legacy_f32  v8, v8, v11, -s72
  v_mad_legacy_f32  v10, v10, v11, -s74
  v_mul_legacy_f32  v11, v9, v9
  v_rsq_f32     v17, v17
  v_mac_legacy_f32  v21, v18, v18
  v_mac_legacy_f32  v11, v8, v8
  v_mac_legacy_f32  v21, v20, v20
  v_mac_legacy_f32  v11, v10, v10
  v_rsq_f32     v21, v21
  v_rsq_f32     v11, v11
  v_mul_legacy_f32  v2, v2, v3
  v_mul_legacy_f32  v15, v17, v15
  v_mul_legacy_f32  v2, v2, v17
  v_mul_legacy_f32  v22, s16, v3
  v_mul_legacy_f32  v23, s68, v3
  v_mul_legacy_f32  v24, s72, v3
  v_mac_legacy_f32  v2, v15, v14
  v_mul_legacy_f32  v15, v18, v3
  v_mul_legacy_f32  v3, v8, v3
  v_mad_legacy_f32  v22, -s17, v14, -v22
  v_mad_legacy_f32  v24, -s73, v14, -v24
  v_mul_legacy_f32  v19, v21, v19
  v_mul_legacy_f32  v15, v15, v21
  v_mul_legacy_f32  v9, v11, v9
  v_mul_legacy_f32  v3, v3, v11
  v_mad_legacy_f32  v23, -s69, v14, -v23
  v_mul_legacy_f32  v16, v17, v16
  v_mac_legacy_f32  v22, v0, -s18
  v_mac_legacy_f32  v24, v0, -s74
  v_mul_legacy_f32  v20, v21, v20
  v_mac_legacy_f32  v15, v19, v14
  v_mul_legacy_f32  v10, v11, v10
  v_mac_legacy_f32  v3, v9, v14
  v_mac_legacy_f32  v2, v16, v0
  v_mac_legacy_f32  v15, v20, v0
  v_mac_legacy_f32  v23, v0, -s70
  v_mad_legacy_f32  v0, v10, v0, v3
  v_cmp_gt_f32  vcc, 0, v22
  v_cmp_gt_f32  s[2:3], 0, v24
  v_cndmask_b32  v3, 1.0, 0, vcc
  v_max_f32     v2, 0, v2
  v_cndmask_b32  v9, 1.0, 0, s[2:3]
  v_max_f32     v0, 0, v0
  v_mul_legacy_f32  v2, v2, v3
  v_mul_legacy_f32  v0, v0, v9
  v_cmp_gt_f32  s[0:1], 0, v23
  v_log_f32     v2, v2
  v_log_f32     v0, v0
  v_cndmask_b32  v8, 1.0, 0, s[0:1]
  v_max_f32     v15, 0, v15
  v_mul_legacy_f32  v10, v3, v22
  v_mul_legacy_f32  v3, v15, v8
  v_log_f32     v3, v3
  v_mul_legacy_f32  v2, s15, v2
  v_mul_legacy_f32  v0, s15, v0
  v_exp_f32     v0, v0
  v_exp_f32     v2, v2
  v_mul_legacy_f32  v3, s15, v3
  v_exp_f32     v3, v3
  v_mul_legacy_f32  v11, v8, v23
  v_mul_legacy_f32  v8, v2, v22
  v_mul_legacy_f32  v2, s77, v10
  v_mul_legacy_f32  v15, v0, v24
  v_mul_legacy_f32  v0, s76, v10
  v_mul_legacy_f32  v14, v9, v24
  v_mac_legacy_f32  v0, s80, v11
  v_mac_legacy_f32  v2, s81, v11
  v_mac_legacy_f32  v0, s36, v14
  v_mul_legacy_f32  v9, v3, v23
  v_mad_legacy_f32  v3, v14, s37, v2
  v_mul_legacy_f32  v2, s78, v10
  v_mac_legacy_f32  v2, s82, v11
  v_mul_legacy_f32  v0, s4, v0
  v_mad_legacy_f32  v10, v14, s38, v2
  v_add_f32     v2, s8, v0
  v_mul_legacy_f32  v0, s5, v3
  v_mul_legacy_f32  v11, s41, v8
  v_add_f32     v3, s9, v0
  v_mul_legacy_f32  v0, s6, v10
  v_mul_legacy_f32  v10, s40, v8
  v_mul_legacy_f32  v8, s42, v8
  v_mac_legacy_f32  v10, s44, v9
  v_mac_legacy_f32  v11, s45, v9
  v_mac_legacy_f32  v8, s46, v9
  v_mac_legacy_f32  v11, s49, v15
  v_mac_legacy_f32  v10, s48, v15
  v_mad_legacy_f32  v14, v15, s50, v8
  v_mul_legacy_f32  v8, s12, v10
  v_mul_legacy_f32  v9, s13, v11
  v_add_f32     v0, s10, v0
  v_mul_legacy_f32  v10, s14, v14
  s_buffer_load_dwordx8  s[8:15], s[84:87], 0x5c
  v_mul_legacy_f32  v11, s64, v4
  v_mac_legacy_f32  v11, s65, v5
  v_mac_legacy_f32  v11, s66, v6
  s_buffer_load_dwordx4  s[0:3], s[84:87], 0x64
  v_mad_legacy_f32  v14, v7, s67, v11
  s_waitcnt     lgkmcnt(0)
  v_mul_legacy_f32  v11, s8, v4
  v_mac_legacy_f32  v11, s9, v5
  v_mac_legacy_f32  v11, s10, v6
  v_mad_legacy_f32  v15, v7, s11, v11
  v_mul_legacy_f32  v11, s12, v4
  v_mac_legacy_f32  v11, s13, v5
  v_mac_legacy_f32  v11, s14, v6
  v_mad_legacy_f32  v16, v7, s15, v11
  v_mul_legacy_f32  v11, s0, v4
  v_mac_legacy_f32  v11, s1, v5
  v_mac_legacy_f32  v11, s2, v6
  v_mad_legacy_f32  v17, v7, s3, v11
  v_mul_legacy_f32  v5, s21, v5
  v_mul_legacy_f32  v7, s23, v7
  v_mad_legacy_f32  v4, v4, s20, v5
  v_mad_legacy_f32  v5, v6, s22, v7
  v_add_f32     v11, v4, v5 clamp
  v_lshlrev_b32  v4, 6, v1
  v_mov_b32     v1, s7
  ds_write2_b64  v4, v[14:15], v[16:17] offset0:6 offset1:7
  ds_write2_b64  v4, v[2:3], v[0:1] offset1:1
  ds_write2_b64  v4, v[8:9], v[10:11] offset0:2 offset1:3
  ds_write_b64  v4, v[12:13] offset:32
  s_endpgm      
end


NumVGPR=25,NumSGPR=90,LDS=0,Scratch=0,Occpancy=5


#endif

const unsigned char BasicEffect_VSBasicVertexLightingTxBn[] = {
  0x44, 0x58, 0x42, 0x43, 0xed, 0xe9, 0x26, 0x6a, 0x4f, 0x29, 0xaa, 0xbb,
  0x74, 0x70, 0xb7, 0x68, 0x20, 0xd3, 0xa3, 0x90, 0x01, 0x00, 0x00, 0x00,
  0x18, 0x22, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00,
  0x50, 0x00, 0x00, 0x00, 0xdc, 0x00, 0x00, 0x00, 0x88, 0x01, 0x00, 0x00,
  0xe8, 0x02, 0x00, 0x00, 0x6c, 0x03, 0x00, 0x00, 0x04, 0x04, 0x00, 0x00,
  0x20, 0x04, 0x00, 0x00, 0x53, 0x46, 0x49, 0x30, 0x08, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x49, 0x53, 0x47, 0x31,
  0x84, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x68, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x0f, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x74, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x07, 0x07, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7b, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x03, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x53, 0x56, 0x5f, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x00,
  0x4e, 0x4f, 0x52, 0x4d, 0x41, 0x4c, 0x00, 0x54, 0x45, 0x58, 0x43, 0x4f,
  0x4f, 0x52, 0x44, 0x00, 0x4f, 0x53, 0x47, 0x31, 0xa4, 0x00, 0x00, 0x00,
  0x04, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x88, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x88, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x8e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x03, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x97, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x43, 0x4f, 0x4c, 0x4f, 0x52, 0x00, 0x54, 0x45,
  0x58, 0x43, 0x4f, 0x4f, 0x52, 0x44, 0x00, 0x53, 0x56, 0x5f, 0x50, 0x6f,
  0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x00, 0x00, 0x50, 0x53, 0x56, 0x30,
  0x58, 0x01, 0x00, 0x00, 0x34, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00,
  0x03, 0x04, 0x00, 0x03, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x0d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x4c, 0x00, 0x00, 0x00,
  0x00, 0x53, 0x56, 0x5f, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
  0x00, 0x4e, 0x4f, 0x52, 0x4d, 0x41, 0x4c, 0x00, 0x54, 0x45, 0x58, 0x43,
  0x4f, 0x4f, 0x52, 0x44, 0x00, 0x43, 0x4f, 0x4c, 0x4f, 0x52, 0x00, 0x43,
  0x4f, 0x4c, 0x4f, 0x52, 0x00, 0x54, 0x45, 0x58, 0x43, 0x4f, 0x4f, 0x52,
  0x44, 0x00, 0x56, 0x53, 0x42, 0x61, 0x73, 0x69, 0x63, 0x56, 0x65, 0x72,
  0x74, 0x65, 0x78, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x54,
  0x78, 0x42, 0x6e, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x44, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x0d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x43, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x02, 0x42, 0x00, 0x03, 0x00, 0x00, 0x00, 0x1d, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x44, 0x00, 0x03, 0x02, 0x00, 0x00,
  0x23, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x01, 0x44, 0x00,
  0x03, 0x02, 0x00, 0x00, 0x29, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x02, 0x42, 0x00, 0x03, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x03, 0x44, 0x03, 0x03, 0x04, 0x00, 0x00,
  0xf0, 0xf0, 0x00, 0x00, 0xf0, 0xf0, 0x00, 0x00, 0xf0, 0xf0, 0x00, 0x00,
  0xf0, 0xf0, 0x00, 0x00, 0x77, 0x00, 0x00, 0x00, 0x77, 0x00, 0x00, 0x00,
  0x77, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00,
  0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x52, 0x54, 0x53, 0x30, 0x7c, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x7c, 0x00, 0x00, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x05, 0x00, 0x00, 0x00, 0x44, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x05, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x4c, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00,
  0x68, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff,
  0x49, 0x4c, 0x44, 0x4e, 0x90, 0x00, 0x00, 0x00, 0x00, 0x00, 0x8a, 0x00,
  0x43, 0x3a, 0x5c, 0x55, 0x73, 0x65, 0x72, 0x73, 0x5c, 0x6d, 0x61, 0x72,
  0x63, 0x75, 0x5c, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x73,
  0x5c, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x58, 0x54, 0x4b, 0x31, 0x32,
  0x2d, 0x6d, 0x61, 0x69, 0x6e, 0x5c, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74,
  0x58, 0x54, 0x4b, 0x31, 0x32, 0x2d, 0x6d, 0x61, 0x69, 0x6e, 0x5c, 0x53,
  0x72, 0x63, 0x2f, 0x53, 0x68, 0x61, 0x64, 0x65, 0x72, 0x73, 0x2f, 0x43,
  0x6f, 0x6d, 0x70, 0x69, 0x6c, 0x65, 0x64, 0x5c, 0x58, 0x62, 0x6f, 0x78,
  0x47, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x58, 0x62, 0x6f, 0x78, 0x4f, 0x6e,
  0x65, 0x42, 0x61, 0x73, 0x69, 0x63, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74,
  0x5f, 0x56, 0x53, 0x42, 0x61, 0x73, 0x69, 0x63, 0x56, 0x65, 0x72, 0x74,
  0x65, 0x78, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x54, 0x78,
  0x42, 0x6e, 0x2e, 0x70, 0x64, 0x62, 0x00, 0x00, 0x48, 0x41, 0x53, 0x48,
  0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0x89, 0x67, 0xfc,
  0xb9, 0x68, 0x6d, 0x18, 0xd3, 0xe0, 0xd7, 0x63, 0x1a, 0xea, 0x09, 0x6c,
  0x44, 0x58, 0x49, 0x4c, 0xf0, 0x1d, 0x00, 0x00, 0x60, 0x00, 0x01, 0x00,
  0x7c, 0x07, 0x00, 0x00, 0x44, 0x58, 0x49, 0x4c, 0x00, 0x01, 0x00, 0x00,
  0x94, 0x00, 0x00, 0x00, 0x10, 0x10, 0x00, 0x00, 0x58, 0x44, 0x41, 0x54,
  0x08, 0x00, 0x00, 0x00, 0x24, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00,
  0x84, 0x00, 0x00, 0x00, 0x28, 0x10, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00,
  0xac, 0x10, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xbc, 0x10, 0x00, 0x00, 0xe8, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xa4, 0x14, 0x00, 0x00, 0x3f, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xe4, 0x18, 0x00, 0x00, 0xfb, 0x03, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0xe0, 0x1c, 0x00, 0x00, 0xb0, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00,
  0x90, 0x1d, 0x00, 0x00, 0x4a, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00,
  0xdc, 0x1d, 0x00, 0x00, 0x11, 0x00, 0x00, 0x00, 0x60, 0x00, 0x01, 0x00,
  0x0a, 0x04, 0x00, 0x00, 0x44, 0x58, 0x49, 0x4c, 0x00, 0x01, 0x00, 0x00,
  0x10, 0x00, 0x00, 0x00, 0x10, 0x10, 0x00, 0x00, 0x42, 0x43, 0xc0, 0xde,
  0x21, 0x0c, 0x00, 0x00, 0x01, 0x04, 0x00, 0x00, 0x0b, 0x82, 0x20, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x13, 0x00, 0x00, 0x00, 0x07, 0x81, 0x23, 0x91,
  0x41, 0xc8, 0x04, 0x49, 0x06, 0x10, 0x32, 0x39, 0x92, 0x01, 0x84, 0x0c,
  0x25, 0x05, 0x08, 0x19, 0x1e, 0x04, 0x8b, 0x62, 0x80, 0x18, 0x45, 0x02,
  0x42, 0x92, 0x0b, 0x42, 0xc4, 0x10, 0x32, 0x14, 0x38, 0x08, 0x18, 0x4b,
  0x0a, 0x32, 0x62, 0x88, 0x48, 0x90, 0x14, 0x20, 0x43, 0x46, 0x88, 0xa5,
  0x00, 0x19, 0x32, 0x42, 0xe4, 0x48, 0x0e, 0x90, 0x11, 0x23, 0xc4, 0x50,
  0x41, 0x51, 0x81, 0x8c, 0xe1, 0x83, 0xe5, 0x8a, 0x04, 0x31, 0x46, 0x06,
  0x51, 0x18, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x1b, 0x8c, 0xe0, 0xff,
  0xff, 0xff, 0xff, 0x07, 0x40, 0x02, 0xa8, 0x0d, 0x84, 0xf0, 0xff, 0xff,
  0xff, 0xff, 0x03, 0x20, 0x6d, 0x30, 0x86, 0xff, 0xff, 0xff, 0xff, 0x1f,
  0x00, 0x09, 0xa8, 0x00, 0x49, 0x18, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x13, 0x82, 0x60, 0x42, 0x20, 0x4c, 0x08, 0x06, 0x00, 0x00, 0x00, 0x00,
  0x89, 0x20, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x32, 0x22, 0x88, 0x09,
  0x20, 0x64, 0x85, 0x04, 0x13, 0x23, 0xa4, 0x84, 0x04, 0x13, 0x23, 0xe3,
  0x84, 0xa1, 0x90, 0x14, 0x12, 0x4c, 0x8c, 0x8c, 0x0b, 0x84, 0xc4, 0x4c,
  0x10, 0x90, 0xc1, 0x08, 0x40, 0x09, 0x00, 0x0a, 0x66, 0x00, 0xe6, 0x08,
  0xc0, 0x60, 0x8e, 0x00, 0x29, 0xc6, 0x40, 0x10, 0x44, 0x41, 0x90, 0x51,
  0x0c, 0x80, 0x20, 0x88, 0x62, 0x20, 0xa4, 0x20, 0x03, 0x31, 0x0c, 0xc3,
  0x30, 0x0c, 0xa4, 0x94, 0x61, 0x20, 0x06, 0x62, 0x0a, 0x31, 0x10, 0xc3,
  0x40, 0x4e, 0x51, 0x06, 0x62, 0x18, 0x86, 0x61, 0x18, 0x86, 0x81, 0xa0,
  0xa3, 0x86, 0xcb, 0x9f, 0xb0, 0x87, 0x90, 0x7c, 0x6e, 0xa3, 0x8a, 0x95,
  0x98, 0xfc, 0xe2, 0xb6, 0x11, 0x31, 0x0c, 0xc3, 0x40, 0xc5, 0x3d, 0xc3,
  0xe5, 0x4f, 0xd8, 0x43, 0x48, 0x7e, 0x08, 0x34, 0xc3, 0x42, 0xa0, 0x60,
  0x2a, 0x84, 0x44, 0x50, 0x04, 0x55, 0xa5, 0x18, 0x88, 0x61, 0x18, 0xe8,
  0x9a, 0x23, 0x08, 0x8a, 0x41, 0x11, 0x05, 0x41, 0x64, 0xa4, 0x0d, 0x04,
  0x0c, 0x23, 0x10, 0xc3, 0x30, 0xc2, 0x30, 0xe4, 0x80, 0x97, 0x04, 0xdd,
  0x55, 0x87, 0x23, 0x4d, 0x0b, 0x80, 0x39, 0xd4, 0xe4, 0xa7, 0x40, 0x04,
  0x30, 0xc4, 0x44, 0x44, 0x12, 0x6a, 0x3a, 0xcf, 0x1b, 0xbe, 0xef, 0xf3,
  0xbc, 0x0e, 0xfc, 0x40, 0x0a, 0x93, 0x81, 0x00, 0x13, 0x16, 0x72, 0xc0,
  0x87, 0x74, 0x60, 0x87, 0x36, 0x68, 0x87, 0x79, 0x68, 0x03, 0x7c, 0x10,
  0x87, 0x38, 0xd8, 0xf0, 0x0a, 0xe5, 0xd0, 0x06, 0xed, 0xa0, 0x07, 0xe5,
  0xd0, 0x06, 0xf0, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x7a, 0x30, 0x07, 0x72,
  0xd0, 0x06, 0xe9, 0x10, 0x07, 0x7a, 0x30, 0x07, 0x72, 0xd0, 0x06, 0xe9,
  0x80, 0x07, 0x7a, 0x30, 0x07, 0x72, 0xd0, 0x06, 0xe9, 0x10, 0x07, 0x76,
  0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x90, 0x0e, 0x73, 0x20, 0x07, 0x7a,
  0x30, 0x07, 0x72, 0xd0, 0x06, 0xe9, 0x60, 0x07, 0x74, 0xa0, 0x07, 0x76,
  0x40, 0x07, 0x6d, 0x60, 0x0e, 0x71, 0x60, 0x07, 0x7a, 0x30, 0x07, 0x72,
  0xd0, 0x06, 0xe6, 0x30, 0x07, 0x72, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d,
  0x60, 0x0e, 0x76, 0x40, 0x07, 0x7a, 0x60, 0x07, 0x74, 0xd0, 0x06, 0xee,
  0x80, 0x07, 0x7a, 0x10, 0x07, 0x76, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x7a,
  0x60, 0x07, 0x74, 0x30, 0xe4, 0x09, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x60, 0xc8, 0x63, 0x00, 0x01, 0x10, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x90, 0x07, 0x01, 0x02, 0x40, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x21, 0x8f, 0x02, 0x04, 0x40,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x43, 0x1e, 0x06, 0x08,
  0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x86, 0x3c, 0x0e,
  0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x79,
  0x20, 0x20, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18,
  0xf2, 0x54, 0x40, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x30, 0xe4, 0xb9, 0x80, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x60, 0xc8, 0xa3, 0x01, 0x01, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x40, 0x16, 0x08, 0x00, 0x00, 0x00, 0x12, 0x00, 0x00, 0x00,
  0x32, 0x1e, 0x98, 0x14, 0x19, 0x11, 0x4c, 0x90, 0x8c, 0x09, 0x26, 0x47,
  0xc6, 0x04, 0x43, 0x22, 0x4a, 0x60, 0x04, 0xa0, 0x20, 0x8a, 0xa1, 0x80,
  0x0d, 0xca, 0xa0, 0x3c, 0xca, 0xa1, 0x08, 0xa8, 0x28, 0x89, 0x11, 0x80,
  0x42, 0x28, 0x83, 0x22, 0x20, 0x71, 0x06, 0x80, 0xc6, 0xb1, 0x18, 0x05,
  0x82, 0x4f, 0x3e, 0x80, 0x4f, 0x3e, 0x80, 0x4f, 0x3e, 0x80, 0x4f, 0x3e,
  0xb8, 0x87, 0x7b, 0xb8, 0x07, 0x00, 0x44, 0x40, 0x08, 0x00, 0x00, 0x00,
  0x79, 0x18, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x1a, 0x03, 0x4c, 0x90,
  0x46, 0x02, 0x13, 0xc4, 0x36, 0xf8, 0xfa, 0xc2, 0x12, 0x7a, 0xc2, 0xfa,
  0x82, 0x2a, 0x92, 0xfa, 0xa2, 0x42, 0x92, 0x2a, 0x0a, 0x22, 0xfa, 0x9a,
  0x1a, 0x92, 0x0a, 0xa2, 0x1a, 0x42, 0xfa, 0x9a, 0x4a, 0xd2, 0x2a, 0xfa,
  0x62, 0x4a, 0x6a, 0x4a, 0xa2, 0xfa, 0x4a, 0x72, 0xfa, 0x12, 0xca, 0xa2,
  0x2a, 0x9a, 0x62, 0x00, 0xb3, 0x41, 0x08, 0x04, 0x76, 0x64, 0x78, 0x63,
  0x78, 0x62, 0x6f, 0x78, 0x20, 0x32, 0x34, 0x31, 0x30, 0x2e, 0x32, 0x34,
  0x31, 0x30, 0x2e, 0x31, 0x31, 0x31, 0x31, 0x36, 0x2e, 0x31, 0x30, 0x37,
  0x34, 0x31, 0x1b, 0x02, 0x62, 0x82, 0x40, 0x28, 0x13, 0x04, 0x62, 0xd9,
  0x20, 0x18, 0xc7, 0x04, 0x81, 0x60, 0x36, 0x08, 0x46, 0x42, 0xc1, 0x6e,
  0x6e, 0x82, 0x40, 0x34, 0x1b, 0x86, 0x85, 0x39, 0x26, 0x08, 0x62, 0x80,
  0x11, 0x98, 0x20, 0x10, 0xce, 0x06, 0xe4, 0x70, 0x9e, 0xe3, 0x30, 0x20,
  0x60, 0x43, 0x10, 0x6d, 0x20, 0x00, 0x40, 0x02, 0x26, 0x08, 0x63, 0x90,
  0x6d, 0x08, 0xa8, 0x09, 0x82, 0x00, 0x30, 0xb3, 0x9a, 0x12, 0x0a, 0x9b,
  0x4b, 0x1b, 0xb3, 0x2a, 0x93, 0xa3, 0x2b, 0xc3, 0x63, 0x4a, 0x3b, 0x43,
  0xa3, 0x4b, 0x73, 0x3b, 0xa3, 0xc2, 0x13, 0x72, 0xe3, 0x32, 0x65, 0xf5,
  0x05, 0xf5, 0x36, 0x97, 0x46, 0x97, 0xf6, 0xe6, 0x36, 0x41, 0x28, 0xa6,
  0x09, 0x42, 0x41, 0x6d, 0x08, 0x8e, 0x09, 0x42, 0x51, 0x4d, 0x10, 0x88,
  0x67, 0x82, 0x40, 0x40, 0x1b, 0x84, 0xce, 0xdb, 0xb0, 0x1c, 0x58, 0xa6,
  0x6d, 0x9a, 0xc1, 0x1d, 0xda, 0x47, 0xc3, 0xe9, 0x49, 0xaa, 0x29, 0x88,
  0x69, 0x82, 0x50, 0x58, 0x13, 0x04, 0x22, 0xda, 0x20, 0x74, 0x63, 0xb0,
  0x61, 0x31, 0xc2, 0x20, 0xd3, 0x36, 0xcd, 0x10, 0x03, 0x43, 0x23, 0x83,
  0x09, 0x02, 0x21, 0x11, 0xa1, 0x2a, 0xc2, 0x1a, 0x7a, 0x7a, 0x92, 0x22,
  0x9a, 0x20, 0x14, 0xd7, 0x06, 0xa1, 0xeb, 0x36, 0x2c, 0x66, 0x70, 0x06,
  0x99, 0xb6, 0x69, 0x06, 0x1a, 0x98, 0x81, 0x96, 0x06, 0x1b, 0x06, 0x30,
  0x28, 0x03, 0x35, 0x60, 0x31, 0xf4, 0xc4, 0xf4, 0x24, 0xb5, 0x61, 0x39,
  0xd8, 0x20, 0xd3, 0x36, 0x34, 0x30, 0xb8, 0x43, 0xfb, 0x36, 0x04, 0xc6,
  0x86, 0xc5, 0x60, 0x83, 0x4c, 0x73, 0x03, 0x34, 0x30, 0x38, 0x43, 0xfb,
  0x36, 0x2c, 0x66, 0x70, 0x06, 0x99, 0xb6, 0xa1, 0x81, 0x81, 0x06, 0x66,
  0xa0, 0xa5, 0xc1, 0x86, 0xa5, 0xc3, 0x32, 0x31, 0xd8, 0x38, 0x83, 0xeb,
  0xb4, 0x6f, 0x03, 0xd1, 0x06, 0x6f, 0x00, 0x07, 0x71, 0xb0, 0x61, 0x58,
  0x03, 0x39, 0x00, 0x36, 0x14, 0xd6, 0x35, 0x07, 0x13, 0xd0, 0x0a, 0x4f,
  0xec, 0x0d, 0xcf, 0x65, 0xec, 0xad, 0x0d, 0x2e, 0x8d, 0xad, 0x4c, 0xce,
  0xe5, 0x0d, 0x8e, 0x2e, 0xed, 0xcd, 0x6d, 0x6e, 0x4a, 0x20, 0x54, 0x61,
  0x63, 0xb3, 0x6b, 0x73, 0x49, 0x23, 0x2b, 0x73, 0xa3, 0x9b, 0x12, 0x10,
  0x55, 0xc8, 0xf0, 0x5c, 0xec, 0xca, 0xe4, 0xe6, 0xd2, 0xde, 0xdc, 0xa6,
  0x04, 0x47, 0x13, 0x32, 0x3c, 0x17, 0xbb, 0x30, 0x36, 0xbb, 0x32, 0xb9,
  0x29, 0x41, 0x52, 0x87, 0x0c, 0xcf, 0x65, 0x0e, 0x2d, 0x8c, 0xac, 0x4c,
  0xae, 0xe9, 0x8d, 0xac, 0x8c, 0x6d, 0x4a, 0xc0, 0x94, 0x21, 0xc3, 0x73,
  0x91, 0x2b, 0x9b, 0x7b, 0xab, 0x93, 0x1b, 0x2b, 0x9b, 0x9b, 0x12, 0x48,
  0x75, 0xc8, 0xf0, 0x5c, 0xec, 0xd2, 0xca, 0xee, 0x92, 0xc8, 0xa6, 0xe8,
  0xc2, 0xe8, 0xca, 0xa6, 0x04, 0x54, 0x1d, 0x32, 0x3c, 0x97, 0x32, 0x37,
  0x3a, 0xb9, 0x3c, 0xa8, 0xb7, 0x34, 0x37, 0xba, 0xb9, 0x29, 0xc1, 0x1c,
  0x00, 0x00, 0x00, 0x00, 0x79, 0x18, 0x00, 0x00, 0x50, 0x00, 0x00, 0x00,
  0x33, 0x08, 0x80, 0x1c, 0xc4, 0xe1, 0x1c, 0x66, 0x14, 0x01, 0x3d, 0x88,
  0x43, 0x38, 0x84, 0xc3, 0x8c, 0x42, 0x80, 0x07, 0x79, 0x78, 0x07, 0x73,
  0x98, 0x71, 0x0c, 0xe6, 0x00, 0x0f, 0xed, 0x10, 0x0e, 0xf4, 0x80, 0x0e,
  0x33, 0x0c, 0x42, 0x1e, 0xc2, 0xc1, 0x1d, 0xce, 0xa1, 0x1c, 0x66, 0x30,
  0x05, 0x3d, 0x88, 0x43, 0x38, 0x84, 0x83, 0x1b, 0xcc, 0x03, 0x3d, 0xc8,
  0x43, 0x3d, 0x8c, 0x03, 0x3d, 0xcc, 0x78, 0x8c, 0x74, 0x70, 0x07, 0x7b,
  0x08, 0x07, 0x79, 0x48, 0x87, 0x70, 0x70, 0x07, 0x7a, 0x70, 0x03, 0x76,
  0x78, 0x87, 0x70, 0x20, 0x87, 0x19, 0xcc, 0x11, 0x0e, 0xec, 0x90, 0x0e,
  0xe1, 0x30, 0x0f, 0x6e, 0x30, 0x0f, 0xe3, 0xf0, 0x0e, 0xf0, 0x50, 0x0e,
  0x33, 0x10, 0xc4, 0x1d, 0xde, 0x21, 0x1c, 0xd8, 0x21, 0x1d, 0xc2, 0x61,
  0x1e, 0x66, 0x30, 0x89, 0x3b, 0xbc, 0x83, 0x3b, 0xd0, 0x43, 0x39, 0xb4,
  0x03, 0x3c, 0xbc, 0x83, 0x3c, 0x84, 0x03, 0x3b, 0xcc, 0xf0, 0x14, 0x76,
  0x60, 0x07, 0x7b, 0x68, 0x07, 0x37, 0x68, 0x87, 0x72, 0x68, 0x07, 0x37,
  0x80, 0x87, 0x70, 0x90, 0x87, 0x70, 0x60, 0x07, 0x76, 0x28, 0x07, 0x76,
  0xf8, 0x05, 0x76, 0x78, 0x87, 0x77, 0x80, 0x87, 0x5f, 0x08, 0x87, 0x71,
  0x18, 0x87, 0x72, 0x98, 0x87, 0x79, 0x98, 0x81, 0x2c, 0xee, 0xf0, 0x0e,
  0xee, 0xe0, 0x0e, 0xf5, 0xc0, 0x0e, 0xec, 0x30, 0x03, 0x62, 0xc8, 0xa1,
  0x1c, 0xe4, 0xa1, 0x1c, 0xcc, 0xa1, 0x1c, 0xe4, 0xa1, 0x1c, 0xdc, 0x61,
  0x1c, 0xca, 0x21, 0x1c, 0xc4, 0x81, 0x1d, 0xca, 0x61, 0x06, 0xd6, 0x90,
  0x43, 0x39, 0xc8, 0x43, 0x39, 0x98, 0x43, 0x39, 0xc8, 0x43, 0x39, 0xb8,
  0xc3, 0x38, 0x94, 0x43, 0x38, 0x88, 0x03, 0x3b, 0x94, 0xc3, 0x2f, 0xbc,
  0x83, 0x3c, 0xfc, 0x82, 0x3b, 0xd4, 0x03, 0x3b, 0xb0, 0xc3, 0x0c, 0xc4,
  0x21, 0x07, 0x7c, 0x70, 0x03, 0x7a, 0x28, 0x87, 0x76, 0x80, 0x87, 0x19,
  0xca, 0xc3, 0x0e, 0xec, 0x60, 0x0f, 0xed, 0xe0, 0x06, 0xec, 0xf0, 0x0e,
  0xef, 0x00, 0x0f, 0x33, 0x22, 0x88, 0x1c, 0xf0, 0xc1, 0x0d, 0xc8, 0x41,
  0x1c, 0xce, 0xc1, 0x0d, 0xec, 0x21, 0x1c, 0xe4, 0x81, 0x1d, 0xc2, 0x21,
  0x1f, 0xde, 0xa1, 0x1e, 0xe8, 0x01, 0x00, 0x00, 0x71, 0x20, 0x00, 0x00,
  0x29, 0x00, 0x00, 0x00, 0x06, 0x90, 0xbd, 0xec, 0x06, 0x48, 0x88, 0xf0,
  0x12, 0xd1, 0x44, 0x5c, 0x25, 0x62, 0x1c, 0x13, 0xd2, 0x18, 0xed, 0xb5,
  0x35, 0x56, 0x00, 0x0d, 0x97, 0xef, 0x3c, 0x7e, 0x80, 0x34, 0x40, 0x84,
  0xf9, 0xc5, 0x6d, 0xdb, 0xc1, 0x36, 0x5c, 0xbe, 0xf3, 0xf8, 0x42, 0x40,
  0x15, 0x05, 0x11, 0x95, 0x0e, 0x30, 0x94, 0x84, 0x01, 0x08, 0x98, 0x5f,
  0xdc, 0xb6, 0x25, 0x48, 0xc3, 0xe5, 0x3b, 0x8f, 0x2f, 0x44, 0x04, 0x30,
  0x11, 0x21, 0xd0, 0x0c, 0x0b, 0x61, 0x03, 0xce, 0x70, 0xf9, 0xce, 0xe3,
  0x0f, 0xce, 0x74, 0xfb, 0xc5, 0x6d, 0x9b, 0x81, 0x33, 0x5c, 0xbe, 0xf3,
  0xf8, 0x83, 0x33, 0xe1, 0x7e, 0x71, 0xdb, 0x16, 0x30, 0x0d, 0x97, 0xef,
  0x3c, 0xfe, 0xe2, 0x00, 0x83, 0xd8, 0x3c, 0xd4, 0xe4, 0x17, 0xb7, 0x6d,
  0x02, 0xd5, 0x70, 0xf9, 0xce, 0xe3, 0x4b, 0x93, 0x13, 0x11, 0x28, 0x35,
  0x3d, 0xd4, 0xe4, 0x17, 0xb7, 0x6d, 0x08, 0xd2, 0x70, 0xf9, 0xce, 0xe3,
  0x4f, 0x44, 0x34, 0x21, 0x40, 0x84, 0xf9, 0xc5, 0x6d, 0x1b, 0xc1, 0x33,
  0x5c, 0xbe, 0xf3, 0xf8, 0x54, 0x03, 0x44, 0x98, 0x5f, 0xdc, 0x36, 0x00,
  0x61, 0x20, 0x00, 0x00, 0x50, 0x02, 0x00, 0x00, 0x13, 0x04, 0x41, 0x2c,
  0x10, 0x00, 0x00, 0x00, 0x13, 0x00, 0x00, 0x00, 0x94, 0x8d, 0x00, 0x50,
  0x51, 0x02, 0x44, 0x14, 0x5c, 0x71, 0x14, 0x4c, 0x71, 0x95, 0x5d, 0x29,
  0x14, 0xc2, 0x0c, 0x40, 0xc9, 0x94, 0x5b, 0xa9, 0x94, 0x4b, 0x19, 0x95,
  0x5c, 0x81, 0x94, 0x48, 0x61, 0x94, 0x49, 0xa1, 0x94, 0x44, 0x51, 0x94,
  0x45, 0xb1, 0xd0, 0x30, 0x46, 0x00, 0x82, 0x20, 0x88, 0x7f, 0x63, 0x04,
  0x20, 0x08, 0x82, 0xf8, 0x2f, 0x8c, 0x11, 0x80, 0x20, 0x08, 0x82, 0x60,
  0x30, 0x02, 0x30, 0x46, 0x00, 0x82, 0x20, 0x08, 0x82, 0x02, 0x00, 0x00,
  0x23, 0x06, 0x09, 0x00, 0x82, 0x60, 0xa0, 0xbd, 0xc1, 0x13, 0x06, 0x6d,
  0xd0, 0x06, 0xde, 0x88, 0x41, 0x02, 0x80, 0x20, 0x18, 0x18, 0x78, 0x70,
  0x9d, 0x81, 0x1b, 0x94, 0x81, 0x35, 0x62, 0x90, 0x00, 0x20, 0x08, 0x06,
  0x46, 0x1e, 0x60, 0x68, 0xf0, 0x06, 0xdf, 0x35, 0x62, 0x90, 0x00, 0x20,
  0x08, 0x06, 0x86, 0x1e, 0x64, 0x71, 0x00, 0x07, 0x67, 0x80, 0x8d, 0x18,
  0x24, 0x00, 0x08, 0x82, 0x81, 0xb1, 0x07, 0x9a, 0x1c, 0xc4, 0x41, 0x18,
  0x64, 0x23, 0x06, 0x09, 0x00, 0x82, 0x60, 0x60, 0xf0, 0xc1, 0x36, 0x07,
  0x72, 0x60, 0x06, 0xda, 0x88, 0x41, 0x02, 0x80, 0x20, 0x18, 0x18, 0x7d,
  0xc0, 0xcd, 0xc1, 0x1c, 0xa8, 0xc1, 0x36, 0x62, 0x90, 0x00, 0x20, 0x08,
  0x06, 0x86, 0x1f, 0x74, 0x74, 0x40, 0x07, 0x64, 0xc0, 0x8d, 0x18, 0x24,
  0x00, 0x08, 0x82, 0x81, 0xf1, 0x07, 0x5e, 0x1d, 0xd4, 0x41, 0x1a, 0x74,
  0x23, 0x06, 0x09, 0x00, 0x82, 0x60, 0x60, 0x80, 0xc2, 0x67, 0x07, 0x76,
  0xb0, 0x06, 0x9e, 0x1d, 0x8d, 0x7c, 0xec, 0x70, 0xe4, 0x63, 0xc7, 0x23,
  0x1f, 0x1b, 0x22, 0xf8, 0xd8, 0x20, 0xc1, 0xc7, 0x86, 0x09, 0x3e, 0x23,
  0x06, 0x07, 0x00, 0x82, 0x60, 0x50, 0x85, 0x02, 0x1a, 0x40, 0x78, 0x30,
  0x9a, 0x10, 0x00, 0xa3, 0x09, 0x42, 0x30, 0x9a, 0x30, 0x08, 0xa3, 0x09,
  0xc4, 0x30, 0x62, 0x70, 0x00, 0x20, 0x08, 0x06, 0x95, 0x29, 0xb4, 0x41,
  0x35, 0x06, 0xa3, 0x09, 0x01, 0x30, 0x9a, 0x20, 0x04, 0xa3, 0x09, 0x83,
  0x30, 0x9a, 0x40, 0x0c, 0x23, 0x06, 0x07, 0x00, 0x82, 0x60, 0x50, 0xad,
  0x82, 0x1c, 0x68, 0x67, 0x30, 0x9a, 0x10, 0x00, 0xa3, 0x09, 0x42, 0x30,
  0x9a, 0x30, 0x08, 0xa3, 0x09, 0xc4, 0x60, 0x4e, 0x26, 0x9f, 0x11, 0x03,
  0x04, 0x00, 0x41, 0x30, 0xb8, 0x60, 0x21, 0x0f, 0x32, 0x27, 0x18, 0x31,
  0x40, 0x00, 0x10, 0x04, 0x83, 0x2b, 0x16, 0xf4, 0x20, 0x73, 0x82, 0x11,
  0x03, 0x04, 0x00, 0x41, 0x30, 0xb8, 0x64, 0x61, 0x0f, 0x32, 0x27, 0xb0,
  0xa6, 0x93, 0xcf, 0x88, 0x01, 0x02, 0x80, 0x20, 0x18, 0x5c, 0xb4, 0xd0,
  0x07, 0x5d, 0x13, 0x8c, 0x18, 0x20, 0x00, 0x08, 0x82, 0xc1, 0x55, 0x0b,
  0x7e, 0xd0, 0x35, 0xc1, 0x88, 0x01, 0x02, 0x80, 0x20, 0x18, 0x5c, 0xb6,
  0xf0, 0x07, 0x5d, 0x13, 0x18, 0x13, 0x06, 0xf2, 0x19, 0x31, 0x40, 0x00,
  0x10, 0x04, 0x83, 0x0b, 0x17, 0x42, 0x21, 0x0c, 0x98, 0x60, 0xc4, 0x00,
  0x01, 0x40, 0x10, 0x0c, 0xae, 0x5c, 0x10, 0x85, 0x30, 0x60, 0x82, 0x11,
  0x03, 0x04, 0x00, 0x41, 0x30, 0xb8, 0x74, 0x61, 0x14, 0xc2, 0x80, 0x09,
  0x46, 0x0c, 0x0e, 0x00, 0x04, 0xc1, 0xa0, 0xe2, 0x85, 0x51, 0x58, 0x83,
  0x3b, 0x18, 0x4d, 0x08, 0x80, 0xd1, 0x04, 0x21, 0x18, 0x4d, 0x18, 0x04,
  0x1b, 0x9a, 0xf8, 0xd8, 0xa0, 0xc4, 0xc7, 0x86, 0x23, 0x3e, 0x23, 0x06,
  0x0b, 0x00, 0x82, 0x60, 0xa0, 0x9c, 0x43, 0x29, 0x0c, 0x42, 0x30, 0x08,
  0xc1, 0x88, 0x81, 0x01, 0x80, 0x20, 0x18, 0x30, 0xe7, 0x70, 0x0a, 0x81,
  0x15, 0x81, 0x7c, 0xac, 0x10, 0xe4, 0x63, 0xc5, 0x20, 0x9f, 0x11, 0x83,
  0x03, 0x00, 0x41, 0x30, 0xa8, 0xd0, 0xe1, 0x15, 0xee, 0x40, 0x14, 0x46,
  0x13, 0x02, 0x60, 0x34, 0x41, 0x08, 0x46, 0x13, 0x06, 0x61, 0xc4, 0xe0,
  0x00, 0x40, 0x10, 0x0c, 0x2a, 0x76, 0x98, 0x85, 0x3d, 0x28, 0x85, 0xd1,
  0x84, 0x00, 0x18, 0x4d, 0x10, 0x82, 0xd1, 0x84, 0x41, 0x18, 0x31, 0x38,
  0x00, 0x10, 0x04, 0x83, 0x0a, 0x1e, 0x6e, 0xe1, 0x0f, 0x62, 0x61, 0x34,
  0x21, 0x00, 0x46, 0x13, 0x84, 0x60, 0x34, 0x61, 0x10, 0x6c, 0xb1, 0x03,
  0xf9, 0x8c, 0x18, 0x20, 0x00, 0x08, 0x82, 0xc1, 0x45, 0x0f, 0xbd, 0x60,
  0x07, 0x4b, 0x30, 0x62, 0x80, 0x00, 0x20, 0x08, 0x06, 0x57, 0x3d, 0xf8,
  0x82, 0x1d, 0x2c, 0x81, 0x29, 0x79, 0x20, 0x9f, 0x11, 0x03, 0x04, 0x00,
  0x41, 0x30, 0xb8, 0xee, 0x01, 0x1c, 0xf2, 0x40, 0x09, 0x46, 0x0c, 0x10,
  0x00, 0x04, 0xc1, 0xe0, 0xc2, 0x87, 0x70, 0xc8, 0x03, 0x25, 0xb0, 0x84,
  0x0f, 0xe4, 0x33, 0x62, 0x80, 0x00, 0x20, 0x08, 0x06, 0x97, 0x3e, 0x8c,
  0x03, 0x1f, 0x24, 0xc1, 0x88, 0x01, 0x02, 0x80, 0x20, 0x18, 0x5c, 0xfb,
  0x40, 0x0e, 0x7c, 0x90, 0x04, 0x23, 0x06, 0x0b, 0x00, 0x82, 0x60, 0xa0,
  0x84, 0xc4, 0x2f, 0x1c, 0x44, 0x70, 0x10, 0xc1, 0x88, 0x81, 0x01, 0x80,
  0x20, 0x18, 0x30, 0x21, 0x11, 0x0e, 0x81, 0x05, 0x89, 0x7c, 0x4c, 0x38,
  0xe4, 0x63, 0x43, 0x21, 0x9f, 0x11, 0x83, 0x03, 0x00, 0x41, 0x30, 0xa8,
  0x44, 0x22, 0x1d, 0x62, 0x41, 0x1f, 0x46, 0x13, 0x02, 0x60, 0x34, 0x41,
  0x08, 0x46, 0x13, 0x06, 0x61, 0xc4, 0xe0, 0x00, 0x40, 0x10, 0x0c, 0x2a,
  0x93, 0x68, 0x87, 0x5a, 0x00, 0x89, 0xd1, 0x84, 0x00, 0x18, 0x4d, 0x10,
  0x82, 0xd1, 0x84, 0x41, 0x18, 0x31, 0x38, 0x00, 0x10, 0x04, 0x83, 0x4a,
  0x25, 0xe2, 0x21, 0x17, 0xc4, 0x61, 0x34, 0x21, 0x00, 0x46, 0x13, 0x84,
  0x60, 0x34, 0x61, 0x10, 0x2c, 0x0d, 0x96, 0xf8, 0x58, 0x1a, 0x2c, 0xf1,
  0xb1, 0x34, 0x58, 0xe2, 0x33, 0x62, 0xb0, 0x00, 0x20, 0x08, 0x06, 0x4a,
  0x4d, 0xcc, 0xc3, 0x20, 0x04, 0x83, 0x10, 0x8c, 0x18, 0x18, 0x00, 0x08,
  0x82, 0x01, 0x53, 0x13, 0xf5, 0x10, 0x58, 0x40, 0xc8, 0xc7, 0x04, 0x42,
  0x3e, 0x23, 0x06, 0x07, 0x00, 0x82, 0x60, 0x50, 0xd5, 0x04, 0x3f, 0x90,
  0x83, 0x3e, 0x8c, 0x26, 0x04, 0xc0, 0x68, 0x82, 0x10, 0x8c, 0x26, 0x0c,
  0xc2, 0x88, 0xc1, 0x01, 0x80, 0x20, 0x18, 0x54, 0x39, 0x01, 0x12, 0xe8,
  0xf0, 0x12, 0xa3, 0x09, 0x01, 0x30, 0x9a, 0x20, 0x04, 0xa3, 0x09, 0x83,
  0x30, 0x62, 0x70, 0x00, 0x20, 0x08, 0x06, 0x55, 0x4f, 0x90, 0x04, 0x3b,
  0xd0, 0xc3, 0x68, 0x42, 0x00, 0x8c, 0x26, 0x08, 0xc1, 0x68, 0xc2, 0x20,
  0x18, 0x1f, 0x2c, 0xf1, 0x31, 0x3e, 0x58, 0xe2, 0x63, 0x7c, 0xb0, 0xc4,
  0x67, 0xc4, 0x60, 0x01, 0x40, 0x10, 0x0c, 0x14, 0xb4, 0x30, 0x89, 0x41,
  0x08, 0x06, 0x21, 0x18, 0x31, 0x30, 0x00, 0x10, 0x04, 0x03, 0x06, 0x2d,
  0x50, 0x22, 0xb0, 0x80, 0x90, 0x8f, 0x09, 0x84, 0x7c, 0x46, 0x0c, 0x0e,
  0x00, 0x04, 0xc1, 0xa0, 0x42, 0x8b, 0x97, 0xb8, 0x07, 0x97, 0x18, 0x4d,
  0x08, 0x80, 0xd1, 0x04, 0x21, 0x18, 0x4d, 0x18, 0x84, 0x11, 0x83, 0x03,
  0x00, 0x41, 0x30, 0xa8, 0xd8, 0x62, 0x26, 0xf6, 0xe1, 0x2c, 0x46, 0x13,
  0x02, 0x60, 0x34, 0x41, 0x08, 0x46, 0x13, 0x06, 0x61, 0xc4, 0xe0, 0x00,
  0x40, 0x10, 0x0c, 0x2a, 0xb8, 0xb8, 0x89, 0x7f, 0x30, 0x89, 0xd1, 0x84,
  0x00, 0x18, 0x4d, 0x10, 0x82, 0xd1, 0x84, 0x41, 0xb0, 0x57, 0x58, 0xe2,
  0x63, 0xaf, 0xb0, 0xc4, 0xc7, 0x5e, 0x61, 0x89, 0xcf, 0x88, 0xc1, 0x02,
  0x80, 0x20, 0x18, 0x28, 0x7b, 0x91, 0x13, 0x83, 0x10, 0x0c, 0x42, 0x30,
  0x62, 0x60, 0x00, 0x20, 0x08, 0x06, 0xcc, 0x5e, 0xec, 0x44, 0x60, 0x01,
  0x21, 0x1f, 0x13, 0x08, 0xf9, 0xd8, 0x4a, 0xdc, 0x41, 0x7c, 0x8c, 0x25,
  0xee, 0x20, 0x3e, 0xd6, 0x12, 0x66, 0x10, 0x1f, 0x73, 0x09, 0x33, 0x88,
  0x8f, 0xbd, 0x44, 0x15, 0x1f, 0x83, 0x89, 0x2a, 0x3e, 0x26, 0x0a, 0x7e,
  0x20, 0x1f, 0x93, 0x89, 0x20, 0x3e, 0x23, 0x06, 0x08, 0x00, 0x82, 0x60,
  0x70, 0x89, 0xc6, 0x5a, 0x20, 0xa3, 0x10, 0x8c, 0x18, 0x20, 0x00, 0x08,
  0x82, 0xc1, 0x35, 0x1a, 0x6c, 0x81, 0x8c, 0x42, 0x60, 0xa6, 0xf0, 0x06,
  0xf2, 0x31, 0x9b, 0x08, 0xe2, 0x33, 0x62, 0x80, 0x00, 0x20, 0x08, 0x06,
  0x97, 0x69, 0xbc, 0x85, 0x72, 0x0a, 0xc1, 0x88, 0x01, 0x02, 0x80, 0x20,
  0x18, 0x5c, 0xa7, 0x01, 0x17, 0xca, 0x29, 0x04, 0xa6, 0x0a, 0x60, 0x20,
  0x1f, 0xd3, 0x89, 0x20, 0x3e, 0x23, 0x06, 0x08, 0x00, 0x82, 0x60, 0x70,
  0xa9, 0xc6, 0x5c, 0x30, 0xab, 0x10, 0x8c, 0x18, 0x20, 0x00, 0x08, 0x82,
  0xc1, 0xb5, 0x1a, 0x74, 0xc1, 0xac, 0x42, 0x60, 0x7f, 0xe0, 0x0a, 0xf2,
  0xb1, 0x80, 0x0f, 0xe4, 0x33, 0x62, 0x80, 0x00, 0x20, 0x08, 0x06, 0x97,
  0x6b, 0xdc, 0x05, 0x1f, 0xbc, 0x42, 0x30, 0x62, 0x80, 0x00, 0x20, 0x08,
  0x06, 0xd7, 0x6b, 0xe0, 0x05, 0x1f, 0xbc, 0x42, 0x60, 0x70, 0x20, 0x0b,
  0xf2, 0xb1, 0xa0, 0x0d, 0xe4, 0x33, 0x62, 0x80, 0x00, 0x20, 0x08, 0x06,
  0x97, 0x6c, 0xec, 0x45, 0x1b, 0xcc, 0x42, 0x30, 0x62, 0x80, 0x00, 0x20,
  0x08, 0x06, 0xd7, 0x6c, 0xf0, 0x45, 0x1b, 0xcc, 0x42, 0x60, 0x61, 0x60,
  0x0b, 0xf2, 0xb1, 0xc0, 0x93, 0xcf, 0x88, 0x01, 0x02, 0x80, 0x20, 0x18,
  0x5c, 0xb6, 0xf1, 0x17, 0xde, 0x2d, 0x04, 0x23, 0x06, 0x08, 0x00, 0x82,
  0x60, 0x70, 0xdd, 0x06, 0x68, 0x78, 0xb7, 0x10, 0x0c, 0x47, 0x54, 0x6a,
  0x41, 0x7c, 0xc3, 0x11, 0xd2, 0x5a, 0x10, 0xdf, 0x70, 0xc4, 0xc3, 0x16,
  0xc4, 0x37, 0xdd, 0xd0, 0x16, 0x70, 0x31, 0x4c, 0x37, 0xb8, 0x45, 0x5c,
  0x0c, 0xd3, 0x0d, 0x6f, 0x21, 0x17, 0x83, 0x0d, 0x9b, 0x7c, 0x6c, 0xc0,
  0xe4, 0x63, 0x43, 0x25, 0x9f, 0x11, 0x83, 0x03, 0x00, 0x41, 0x30, 0xa8,
  0xc4, 0x23, 0x35, 0xe2, 0xe2, 0x36, 0x46, 0x13, 0x82, 0x61, 0xc4, 0xe0,
  0x00, 0x40, 0x10, 0x0c, 0x1c, 0xf3, 0x18, 0x0d, 0xaa, 0x2e, 0x46, 0x0c,
  0x0e, 0x00, 0x04, 0xc1, 0xc0, 0x39, 0x0f, 0xd2, 0x88, 0xec, 0x62, 0xc4,
  0xe0, 0x00, 0x40, 0x10, 0x0c, 0x1c, 0xf4, 0x28, 0x0d, 0xe7, 0x2e, 0x6c,
  0x58, 0xe4, 0x63, 0xc3, 0x22, 0x1f, 0x1b, 0x16, 0xf9, 0x8c, 0x18, 0x18,
  0x00, 0x08, 0x82, 0x01, 0xd3, 0x1e, 0xaa, 0x31, 0x8c, 0x18, 0x18, 0x00,
  0x08, 0x82, 0x01, 0xe3, 0x1e, 0xab, 0x31, 0x8c, 0x18, 0x18, 0x00, 0x08,
  0x82, 0x01, 0xf3, 0x1e, 0xac, 0x31, 0xd8, 0xa0, 0xc8, 0xc7, 0x86, 0x45,
  0x3e, 0x36, 0x30, 0xf2, 0x19, 0x31, 0x30, 0x00, 0x10, 0x04, 0x03, 0x66,
  0x3e, 0x62, 0x63, 0x18, 0x31, 0x30, 0x00, 0x10, 0x04, 0x03, 0x86, 0x3e,
  0x64, 0x63, 0x18, 0x31, 0x30, 0x00, 0x10, 0x04, 0x03, 0xa6, 0x3e, 0x66,
  0x63, 0xb0, 0xe1, 0x0d, 0xe4, 0x63, 0x03, 0x1b, 0xc8, 0xc7, 0x86, 0x34,
  0x90, 0x8f, 0x5d, 0xef, 0x20, 0x9f, 0x11, 0x03, 0x04, 0x00, 0x41, 0x30,
  0xb8, 0xec, 0xe3, 0x37, 0xae, 0x5e, 0x08, 0x46, 0x0c, 0x10, 0x00, 0x04,
  0xc1, 0xe0, 0xba, 0x0f, 0xf0, 0xb8, 0x56, 0x21, 0x30, 0x2d, 0x1e, 0xe4,
  0x33, 0x62, 0x80, 0x00, 0x20, 0x08, 0x06, 0x57, 0x7e, 0x88, 0x87, 0xf6,
  0x0b, 0xc1, 0x88, 0x01, 0x02, 0x80, 0x20, 0x18, 0x5c, 0xfa, 0x31, 0x1e,
  0x5a, 0x2b, 0x04, 0xd6, 0xcd, 0x83, 0x7c, 0x46, 0x0c, 0x10, 0x00, 0x04,
  0xc1, 0xe0, 0xe2, 0x8f, 0xf2, 0xe8, 0xc2, 0x21, 0x18, 0x31, 0x40, 0x00,
  0x10, 0x04, 0x83, 0xab, 0x3f, 0xcc, 0xa3, 0x7b, 0x85, 0x60, 0xc4, 0xe0,
  0x00, 0x40, 0x10, 0x0c, 0xaa, 0xff, 0x30, 0x0f, 0xd7, 0xd8, 0x8f, 0xd1,
  0x84, 0x00, 0x18, 0x4d, 0x10, 0x82, 0xd1, 0x84, 0x41, 0xb0, 0x61, 0x91,
  0x8f, 0x0d, 0x89, 0x7c, 0x6c, 0x38, 0xe4, 0x33, 0x62, 0x70, 0x00, 0x20,
  0x08, 0x06, 0x95, 0x89, 0xb4, 0x47, 0x6d, 0x8c, 0xc8, 0x68, 0x42, 0x00,
  0x8c, 0x26, 0x08, 0xc1, 0x68, 0xc2, 0x20, 0xd8, 0x31, 0xc0, 0xc7, 0x8e,
  0x01, 0x3e, 0x76, 0x0c, 0xf0, 0x31, 0x4d, 0x24, 0xe4, 0x33, 0x62, 0x80,
  0x00, 0x20, 0x08, 0x06, 0x57, 0x8b, 0xd8, 0x87, 0x06, 0x0f, 0xc1, 0x88,
  0x01, 0x02, 0x80, 0x20, 0x18, 0x5c, 0x2e, 0x72, 0x1f, 0x9a, 0x2f, 0x04,
  0xd6, 0x91, 0x84, 0x7c, 0x46, 0x0c, 0x10, 0x00, 0x04, 0xc1, 0xe0, 0x82,
  0x91, 0xfc, 0xe8, 0xe4, 0x21, 0x18, 0x31, 0x40, 0x00, 0x10, 0x04, 0x83,
  0x2b, 0x46, 0xf4, 0xa3, 0x03, 0x87, 0xc0, 0xc0, 0xc0, 0x24, 0xe4, 0x33,
  0x62, 0x80, 0x00, 0x20, 0x08, 0x06, 0xd7, 0x8c, 0xf0, 0x07, 0x18, 0xd0,
  0x43, 0x30, 0x62, 0x80, 0x00, 0x20, 0x08, 0x06, 0x17, 0x8d, 0xf4, 0x07,
  0x18, 0x88, 0x43, 0x30, 0x9a, 0x40, 0x07, 0xc0, 0x68, 0x42, 0x1d, 0x04,
  0xa3, 0x09, 0x76, 0x20, 0xd8, 0xa0, 0xc8, 0xc7, 0x06, 0x44, 0x3e, 0x36,
  0x18, 0xf2, 0x19, 0x31, 0x38, 0x00, 0x10, 0x04, 0x83, 0x8a, 0x47, 0x46,
  0x64, 0x3d, 0xe2, 0x63, 0x34, 0x21, 0x00, 0x46, 0x13, 0x84, 0x60, 0x34,
  0x61, 0x10, 0x46, 0x13, 0x88, 0x61, 0xc4, 0xe0, 0x00, 0x40, 0x10, 0x0c,
  0xaa, 0x30, 0x41, 0x11, 0xf8, 0x08, 0x91, 0xd1, 0x84, 0x00, 0x18, 0x4d,
  0x10, 0x82, 0xd1, 0x84, 0x41, 0x18, 0x4d, 0x20, 0x86, 0x11, 0x83, 0x03,
  0x00, 0x41, 0x30, 0xa8, 0xcc, 0xa4, 0x45, 0xea, 0xe3, 0x45, 0x46, 0x13,
  0x02, 0x60, 0x34, 0x41, 0x08, 0x46, 0x13, 0x06, 0x61, 0x34, 0x81, 0x18,
  0x46, 0x0c, 0x0e, 0x00, 0x04, 0xc1, 0xa0, 0x5a, 0x13, 0x19, 0xd1, 0x0f,
  0x17, 0x19, 0x4d, 0x08, 0x80, 0xd1, 0x04, 0x21, 0x18, 0x4d, 0x18, 0x84,
  0xd1, 0x04, 0x62, 0xb0, 0x29, 0x3f, 0xe4, 0x33, 0x62, 0x80, 0x00, 0x20,
  0x08, 0x06, 0x17, 0x9c, 0xe4, 0x48, 0x7e, 0x4c, 0xc1, 0x88, 0x01, 0x02,
  0x80, 0x20, 0x18, 0x5c, 0x71, 0xa2, 0x23, 0xf9, 0x31, 0x05, 0x23, 0x06,
  0x08, 0x00, 0x82, 0x60, 0x70, 0xc9, 0xc9, 0x8e, 0xe4, 0xc7, 0x14, 0x98,
  0xd4, 0x1f, 0xf2, 0x19, 0x31, 0x40, 0x00, 0x10, 0x04, 0x83, 0x8b, 0x4e,
  0x7a, 0xa4, 0x3f, 0xa4, 0x60, 0xc4, 0x00, 0x01, 0x40, 0x10, 0x0c, 0xae,
  0x3a, 0xf1, 0x91, 0xfe, 0x90, 0x82, 0x11, 0x03, 0x04, 0x00, 0x41, 0x30,
  0xb8, 0xec, 0xe4, 0x47, 0xfa, 0x43, 0x0a, 0x2c, 0x0a, 0x11, 0xf9, 0x8c,
  0x18, 0x20, 0x00, 0x08, 0x82, 0xc1, 0x85, 0x27, 0x61, 0x12, 0x22, 0x51,
  0x30, 0x62, 0x80, 0x00, 0x20, 0x08, 0x06, 0x57, 0x9e, 0x88, 0x49, 0x88,
  0x44, 0xc1, 0x88, 0x01, 0x02, 0x80, 0x20, 0x18, 0x5c, 0x7a, 0x32, 0x26,
  0x21, 0x12, 0x05, 0x06, 0x95, 0x88, 0x7c, 0x46, 0x0c, 0x10, 0x00, 0x04,
  0xc1, 0xe0, 0xe2, 0x93, 0x32, 0x29, 0x11, 0x28, 0x18, 0x31, 0x40, 0x00,
  0x10, 0x04, 0x83, 0xab, 0x4f, 0xcc, 0xa4, 0x44, 0xa0, 0x60, 0xc4, 0x00,
  0x01, 0x40, 0x10, 0x0c, 0x2e, 0x3f, 0x39, 0x93, 0x12, 0x81, 0x82, 0xd1,
  0x84, 0x50, 0x18, 0x46, 0x0c, 0x0e, 0x00, 0x04, 0xc1, 0xa0, 0x0a, 0x15,
  0x34, 0x81, 0x91, 0x35, 0x19, 0x4d, 0x08, 0x80, 0xd1, 0x04, 0x21, 0x18,
  0x4d, 0x18, 0x84, 0xd1, 0x04, 0x62, 0x18, 0x31, 0x68, 0x00, 0x10, 0x04,
  0x03, 0xe8, 0x54, 0xe2, 0xe4, 0x45, 0x5c, 0xa4, 0x45, 0x58, 0x84, 0x18,
  0x84, 0x60, 0xc4, 0xc0, 0x00, 0x40, 0x10, 0x0c, 0x18, 0x55, 0xe9, 0x93,
  0x60, 0xc4, 0x20, 0x01, 0x40, 0x10, 0x0c, 0x90, 0x56, 0x71, 0x13, 0x52,
  0x21, 0x95, 0x3d, 0xf1, 0x83, 0x11, 0x83, 0x04, 0x00, 0x41, 0x30, 0x40,
  0x5a, 0xc5, 0x4d, 0x48, 0x85, 0x54, 0xe8, 0xa4, 0x0f, 0x46, 0x0c, 0x12,
  0x00, 0x04, 0xc1, 0x00, 0x69, 0x15, 0x37, 0x21, 0x15, 0x52, 0xc1, 0x13,
  0x3e, 0x18, 0x31, 0x48, 0x00, 0x10, 0x04, 0x03, 0xa4, 0x55, 0xdc, 0x84,
  0x54, 0x48, 0x25, 0x4f, 0x90, 0x11, 0x83, 0x04, 0x00, 0x41, 0x30, 0x40,
  0x5a, 0xc5, 0x4d, 0x4a, 0x85, 0x54, 0xf6, 0xe4, 0x0d, 0x46, 0x0c, 0x12,
  0x00, 0x04, 0xc1, 0x00, 0x69, 0x15, 0x37, 0x29, 0x15, 0x52, 0xa1, 0x13,
  0x37, 0x18, 0x31, 0x48, 0x00, 0x10, 0x04, 0x03, 0xa4, 0x55, 0xdc, 0xa4,
  0x54, 0x48, 0x05, 0x4f, 0xda, 0x60, 0xc4, 0x20, 0x01, 0x40, 0x10, 0x0c,
  0x90, 0x56, 0x71, 0x93, 0x52, 0x21, 0x95, 0x3c, 0x09, 0x46, 0x0c, 0x12,
  0x00, 0x04, 0xc1, 0x00, 0x69, 0x15, 0x37, 0xe9, 0x13, 0x52, 0xd9, 0x13,
  0x1b, 0x19, 0x31, 0x48, 0x00, 0x10, 0x04, 0x03, 0xa4, 0x55, 0xdc, 0xa4,
  0x4f, 0x48, 0x85, 0x4e, 0x6a, 0x64, 0xc4, 0x20, 0x01, 0x40, 0x10, 0x0c,
  0x90, 0x56, 0x71, 0x13, 0x50, 0x21, 0x95, 0x3d, 0xa9, 0x46, 0x0c, 0x12,
  0x00, 0x04, 0xc1, 0x00, 0x69, 0x15, 0x37, 0x01, 0x15, 0x52, 0xa1, 0x93,
  0x68, 0xc4, 0x20, 0x01, 0x40, 0x10, 0x0c, 0x90, 0x56, 0x71, 0x13, 0x50,
  0x21, 0x15, 0x3c, 0x69, 0x46, 0x0c, 0x12, 0x00, 0x04, 0xc1, 0x00, 0x69,
  0x15, 0x37, 0x01, 0x15, 0x52, 0xc9, 0x93, 0x04, 0x01, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x7f, 0x89, 0x67, 0xfc, 0xb9, 0x68, 0x6d, 0x18,
  0xd3, 0xe0, 0xd7, 0x63, 0x1a, 0xea, 0x09, 0x6c, 0x17, 0x00, 0x01, 0x00,
  0x20, 0xb8, 0x18, 0x00, 0x78, 0x01, 0xed, 0x99, 0x4b, 0x6f, 0x1c, 0x45,
  0x10, 0x80, 0xab, 0x7b, 0x7a, 0x27, 0x3d, 0xb3, 0xe5, 0xda, 0xde, 0xd9,
  0x99, 0x59, 0x63, 0x8d, 0x67, 0xc7, 0xcb, 0xda, 0x71, 0x1c, 0xbf, 0x90,
  0x00, 0x05, 0x94, 0x04, 0x43, 0x12, 0x09, 0xe4, 0x04, 0x03, 0x62, 0x39,
  0x44, 0x98, 0x03, 0x0f, 0x01, 0x92, 0x91, 0xf2, 0x03, 0xd0, 0x64, 0x37,
  0x07, 0x12, 0x50, 0x38, 0x72, 0xe0, 0xee, 0x4b, 0x04, 0x3f, 0x00, 0x84,
  0x64, 0x43, 0x96, 0x2b, 0x02, 0x19, 0x44, 0x38, 0x80, 0x02, 0x17, 0x24,
  0x38, 0x46, 0x1c, 0x72, 0x40, 0x32, 0xd5, 0xe3, 0xdd, 0x00, 0x8e, 0xcf,
  0x20, 0xd0, 0x7c, 0xab, 0xaa, 0xea, 0xa9, 0x6a, 0x4d, 0x57, 0x57, 0xf5,
  0x5e, 0x7a, 0x3e, 0x1a, 0x87, 0x82, 0xdf, 0xbe, 0xfb, 0xe1, 0x8a, 0xb5,
  0x9f, 0xcc, 0xff, 0xf4, 0xc1, 0xac, 0x01, 0xa8, 0xd8, 0x07, 0x46, 0x59,
  0xc5, 0x5c, 0x08, 0xad, 0x06, 0x78, 0x76, 0x38, 0x7f, 0x14, 0xb7, 0x58,
  0xd7, 0x79, 0x16, 0xcb, 0x8a, 0x55, 0x43, 0x84, 0x55, 0x00, 0x27, 0x59,
  0x1e, 0x61, 0xb9, 0x0b, 0xcd, 0xb2, 0xc9, 0xf2, 0x3e, 0x8b, 0xa5, 0x6a,
  0xd5, 0x10, 0x1b, 0x3b, 0x88, 0x51, 0x3e, 0x7f, 0xc5, 0x61, 0xb1, 0x6b,
  0x49, 0x96, 0xfd, 0xfc, 0x7c, 0xea, 0xf2, 0x71, 0x36, 0xa7, 0x59, 0xe0,
  0x66, 0x78, 0xed, 0x84, 0xb5, 0x43, 0x1f, 0xcc, 0xbc, 0xfe, 0xe2, 0x81,
  0x79, 0xfd, 0x97, 0x19, 0xf5, 0xc9, 0xb2, 0x61, 0x0b, 0xb3, 0x8f, 0x51,
  0x8d, 0xbe, 0x6f, 0x5a, 0xfd, 0x67, 0x3d, 0xd5, 0xb0, 0xaf, 0xa3, 0x5e,
  0x7e, 0xca, 0x32, 0xec, 0xdf, 0x5d, 0xec, 0x32, 0xd6, 0x1e, 0x84, 0x5d,
  0xd2, 0x85, 0xb5, 0x65, 0x57, 0x5c, 0xce, 0x5c, 0x39, 0xe0, 0x93, 0xf4,
  0xcf, 0xb3, 0x97, 0xc3, 0x1e, 0xae, 0xd8, 0xdb, 0x85, 0x2b, 0x0f, 0x3a,
  0x1d, 0xff, 0x5f, 0x6c, 0x0d, 0x88, 0xc5, 0x62, 0x7b, 0x3c, 0xea, 0xb3,
  0x05, 0xad, 0x2a, 0x29, 0x29, 0x29, 0x29, 0x29, 0x29, 0x29, 0x29, 0x29,
  0x29, 0x29, 0x29, 0x29, 0x29, 0x29, 0xf9, 0xb7, 0x99, 0xea, 0x6d, 0xa9,
  0xdd, 0xee, 0x15, 0x00, 0x03, 0x8e, 0xf3, 0xcd, 0xd6, 0x67, 0xce, 0xb7,
  0x5b, 0xbb, 0xce, 0x8d, 0xad, 0x0f, 0xd7, 0x24, 0x40, 0xd7, 0x1f, 0x98,
  0x6e, 0x7b, 0x90, 0x75, 0x83, 0xc1, 0x72, 0xb7, 0x77, 0xfd, 0x58, 0x57,
  0x0e, 0xce, 0x76, 0x27, 0x06, 0x17, 0x6a, 0x57, 0xb7, 0x01, 0x2e, 0xed,
  0xe8, 0x5f, 0xbe, 0x70, 0x04, 0x5b, 0x8f, 0xad, 0x64, 0xeb, 0xb3, 0xbd,
  0x08, 0x57, 0xb7, 0x51, 0x1b, 0xd2, 0xda, 0xa5, 0x31, 0xdf, 0xa0, 0xe7,
  0xbb, 0x48, 0x68, 0xd0, 0xe8, 0x80, 0x8e, 0x41, 0x42, 0xf7, 0x43, 0x4c,
  0x3e, 0xba, 0x58, 0x23, 0x83, 0x75, 0x3f, 0xc0, 0x87, 0x64, 0x82, 0x55,
  0x72, 0x31, 0xe0, 0xdf, 0x03, 0x32, 0xc6, 0xe3, 0x00, 0x24, 0x8c, 0xd1,
  0x0f, 0xab, 0x04, 0x4f, 0x48, 0xc0, 0x06, 0x05, 0x08, 0xae, 0xab, 0x75,
  0x3d, 0xa4, 0x07, 0x55, 0x8c, 0x34, 0x29, 0x49, 0x06, 0x81, 0x76, 0x0e,
  0x85, 0x78, 0x52, 0x01, 0x56, 0x9b, 0x12, 0xbd, 0x46, 0x88, 0x20, 0x24,
  0xfa, 0xeb, 0x61, 0x2e, 0xd6, 0x65, 0x1e, 0x40, 0x6f, 0x47, 0x47, 0x71,
  0x5f, 0x34, 0x15, 0x89, 0xc9, 0x98, 0xa8, 0x78, 0x7e, 0xab, 0x27, 0x04,
  0xbf, 0x9b, 0xc7, 0x4e, 0x74, 0xa9, 0x47, 0x93, 0x19, 0x09, 0x27, 0xc3,
  0x1a, 0x3f, 0x7b, 0xd1, 0x3b, 0xbd, 0x5a, 0x2b, 0xc3, 0x7a, 0x11, 0x0b,
  0xfa, 0xc1, 0xf4, 0x2c, 0x69, 0x1e, 0xeb, 0x68, 0xa6, 0x6f, 0xd6, 0xb3,
  0xbc, 0xc1, 0x63, 0x2f, 0x9a, 0xe8, 0xd7, 0xef, 0x9d, 0x45, 0x87, 0xc7,
  0x4e, 0xd4, 0xee, 0x7b, 0x85, 0x6f, 0xae, 0x6f, 0xf3, 0x6a, 0x1c, 0x66,
  0x3f, 0xe7, 0x13, 0xae, 0xcf, 0xe6, 0x36, 0x97, 0x22, 0x8f, 0x8a, 0xa4,
  0x4c, 0xcd, 0x91, 0x99, 0x4c, 0x48, 0x4c, 0x49, 0x8a, 0x78, 0xfe, 0x54,
  0xfc, 0xdc, 0xe6, 0x69, 0x35, 0x4f, 0xc4, 0x39, 0xd7, 0x2b, 0x09, 0x3d,
  0xae, 0x16, 0xc9, 0xa9, 0x28, 0x8a, 0x39, 0x76, 0x26, 0x3e, 0xbf, 0x69,
  0x5a, 0x29, 0xcf, 0xc3, 0x1d, 0x38, 0x03, 0x2b, 0xe1, 0x74, 0x87, 0xe8,
  0x48, 0x42, 0x4d, 0x8e, 0x3d, 0x11, 0xbf, 0xb0, 0x59, 0xe3, 0xfd, 0xc5,
  0x36, 0xf6, 0x2e, 0xc7, 0x0e, 0xcf, 0x50, 0xd0, 0x4c, 0xd0, 0xaf, 0x1b,
  0x92, 0x91, 0xa2, 0xde, 0x9c, 0x7e, 0xb3, 0x21, 0x12, 0x6c, 0xda, 0xf8,
  0x7b, 0xb0, 0xa2, 0x9b, 0x0a, 0xfd, 0x46, 0xc0, 0x7b, 0x80, 0x9d, 0x5b,
  0x70, 0x4d, 0xf4, 0xa4, 0xcc, 0x00, 0xf4, 0x57, 0xbd, 0x79, 0x7b, 0x37,
  0xc7, 0x79, 0x0b, 0x5f, 0x89, 0x3a, 0xd7, 0xd1, 0xfa, 0x16, 0x25, 0x78,
  0xc5, 0x3c, 0xae, 0x4c, 0x92, 0x64, 0x7e, 0x31, 0xe6, 0xdd, 0x01, 0x64,
  0x62, 0x4d, 0xe6, 0xfa, 0x28, 0xd7, 0xaf, 0x61, 0x08, 0x22, 0x20, 0xbd,
  0x66, 0x72, 0x58, 0x83, 0xbc, 0x25, 0x25, 0x89, 0x55, 0x99, 0xb7, 0x8c,
  0xa1, 0x16, 0xf7, 0x4b, 0xaf, 0xb2, 0x7f, 0x15, 0x72, 0x6f, 0x21, 0xa5,
  0xb3, 0x71, 0x40, 0xfe, 0x52, 0x46, 0xe7, 0xe2, 0x90, 0x9e, 0x8c, 0x63,
  0x7a, 0xbe, 0xfb, 0xf9, 0xf5, 0x97, 0xf9, 0xec, 0x3c, 0x95, 0x06, 0xf8,
  0x74, 0x1a, 0xe2, 0x33, 0x69, 0x8c, 0xe2, 0xa8, 0xa4, 0x4e, 0x16, 0xe0,
  0x74, 0x16, 0xe2, 0x4c, 0x16, 0xa3, 0x5e, 0x30, 0x34, 0x2b, 0x53, 0x3a,
  0x22, 0x33, 0x9a, 0xe3, 0x77, 0xc3, 0x12, 0xd0, 0xbc, 0x49, 0x71, 0xc1,
  0x64, 0xb8, 0x0c, 0x29, 0xde, 0x07, 0x19, 0x2e, 0x1a, 0x89, 0x36, 0x77,
  0x78, 0x45, 0xa9, 0xbd, 0x33, 0xd6, 0x26, 0xd0, 0x1d, 0x4a, 0x52, 0x49,
  0x2b, 0x3a, 0xe5, 0x76, 0xda, 0x33, 0x97, 0xd1, 0xa3, 0x7e, 0xca, 0x67,
  0x2e, 0xc3, 0x31, 0xbf, 0x8d, 0xc2, 0xef, 0xe0, 0x63, 0x98, 0xa2, 0x8f,
  0x19, 0x9f, 0xc1, 0x36, 0x4a, 0xec, 0xe0, 0x29, 0x4a, 0xf9, 0xbc, 0x71,
  0xdf, 0xa9, 0x8d, 0x0e, 0x75, 0xb0, 0xe2, 0xfb, 0xf4, 0xa5, 0x86, 0xdb,
  0x35, 0x53, 0x0f, 0x0e, 0x11, 0x51, 0x18, 0x04, 0x14, 0x85, 0x21, 0xc5,
  0x9c, 0xbb, 0xe2, 0xf5, 0x94, 0x17, 0xaa, 0x0a, 0x5b, 0x77, 0x2c, 0x51,
  0xb7, 0xa4, 0xca, 0x7b, 0xd2, 0xcd, 0x9b, 0x32, 0xc9, 0xc7, 0x83, 0xc0,
  0xbd, 0x27, 0x0c, 0xdd, 0x89, 0x38, 0x76, 0x53, 0xae, 0x81, 0xd2, 0xee,
  0x8e, 0xaa, 0x4a, 0xa8, 0x49, 0xb8, 0xed, 0xf9, 0x55, 0x6a, 0xb1, 0x15,
  0x1a, 0xd4, 0x12, 0x5b, 0x1c, 0xe3, 0xbf, 0x07, 0xf4, 0xb7, 0x23, 0xae,
  0xfe, 0xfe, 0xcb, 0xde, 0xe2, 0xe2, 0x76, 0x9f, 0x6f, 0xc2, 0x2a, 0xe9,
  0xd8, 0xd8, 0x9d, 0x6b, 0x7e, 0xeb, 0x13, 0xa2, 0xf8, 0x1a, 0xb0, 0x6c,
  0x95, 0xc5, 0xfa, 0xa4, 0x28, 0x6e, 0x60, 0xef, 0xf8, 0x6c, 0x87, 0x41,
  0xd9, 0x5b, 0xc9, 0xbf, 0x7d, 0x22, 0x28, 0xd8, 0x18, 0xde, 0x3d, 0x77,
  0x58, 0xb8, 0xe7, 0xbc, 0x6c, 0x31, 0xaf, 0x78, 0x8f, 0x1a, 0xde, 0xe4,
  0x5e, 0x7c, 0xfb, 0xd5, 0xdf, 0x3f, 0x7e, 0xed, 0x8d, 0xf1, 0xaf, 0x7f,
  0xbc, 0xf1, 0xd2, 0xc4, 0xaf, 0xde, 0xc6, 0x1f, 0x4b, 0x8b, 0xb6, 0x7e,
  0x17, 0x00, 0x01, 0x00, 0x10, 0x98, 0x19, 0x00, 0x78, 0x01, 0xed, 0x99,
  0xcd, 0x6f, 0x1b, 0x45, 0x14, 0xc0, 0xdf, 0xcc, 0x8e, 0xd7, 0x63, 0x67,
  0xf2, 0xbc, 0x5e, 0xaf, 0xd7, 0x49, 0xe4, 0x24, 0x1b, 0xe3, 0x04, 0xa3,
  0x3a, 0x92, 0x5b, 0x12, 0x08, 0x28, 0x2d, 0x16, 0xaa, 0x25, 0x44, 0x22,
  0x45, 0x08, 0x71, 0xa0, 0xe0, 0x03, 0x1f, 0xe2, 0xbb, 0x52, 0x00, 0x15,
  0x24, 0x08, 0xce, 0xb6, 0x08, 0x0a, 0x28, 0x47, 0x24, 0x3e, 0x8e, 0x28,
  0x97, 0xaa, 0xfc, 0x03, 0x15, 0x28, 0x29, 0x0d, 0x2a, 0x27, 0x38, 0x98,
  0x03, 0x37, 0x68, 0x51, 0x2f, 0x70, 0xe4, 0x8c, 0x14, 0xde, 0x9b, 0xac,
  0x43, 0x14, 0x22, 0x71, 0x03, 0x81, 0xf6, 0x27, 0xbd, 0xf9, 0x78, 0xf3,
  0x66, 0xdf, 0xbc, 0x99, 0xb1, 0x0f, 0x6f, 0x3e, 0x1e, 0x05, 0xcb, 0x77,
  0x13, 0x5f, 0xde, 0xe2, 0xfa, 0x8b, 0xe6, 0xcd, 0xcb, 0x0d, 0x0f, 0x20,
  0xc3, 0x1d, 0x42, 0x72, 0x41, 0xac, 0x06, 0x5c, 0x02, 0xcc, 0x25, 0xf6,
  0x2e, 0x17, 0x09, 0x15, 0x92, 0x07, 0x49, 0x98, 0x36, 0x17, 0x09, 0x82,
  0xe4, 0xd3, 0x4f, 0x46, 0x4f, 0x91, 0xdc, 0x47, 0xcd, 0xbf, 0x30, 0x44,
  0xf2, 0x19, 0xc9, 0x47, 0x24, 0x0c, 0xf7, 0x07, 0xe4, 0x48, 0x30, 0x91,
  0xbf, 0x83, 0xd7, 0xca, 0xbe, 0x14, 0xc9, 0x61, 0x7e, 0x0a, 0x2e, 0x2d,
  0x52, 0x75, 0x9a, 0x04, 0xae, 0x5c, 0xbe, 0x7e, 0x92, 0xeb, 0x01, 0x3f,
  0xdf, 0x7c, 0xe2, 0xc8, 0x75, 0xfd, 0x97, 0x19, 0x9c, 0x13, 0x53, 0x3f,
  0x62, 0x43, 0x06, 0xaa, 0x0f, 0x47, 0xb8, 0xfc, 0xb3, 0x7f, 0x2b, 0xe9,
  0x0f, 0xce, 0xf2, 0x2a, 0x09, 0xef, 0xe9, 0x51, 0xec, 0x12, 0x5c, 0x1f,
  0x85, 0x43, 0xe2, 0xc2, 0x4a, 0xcb, 0x15, 0x17, 0x23, 0x57, 0xee, 0xd0,
  0x4d, 0xfa, 0xe7, 0xe1, 0x98, 0x06, 0xf7, 0xd3, 0x15, 0x7b, 0x51, 0xb8,
  0x32, 0xb9, 0xc9, 0x0e, 0xaf, 0xf0, 0xff, 0x0f, 0xef, 0xc1, 0xc1, 0xdf,
  0x0e, 0xf7, 0x07, 0xf0, 0xa1, 0xfc, 0x2b, 0x07, 0x93, 0x92, 0x92, 0x92,
  0x92, 0x92, 0x92, 0x92, 0x92, 0x92, 0x92, 0x92, 0x92, 0x92, 0x92, 0x92,
  0x72, 0x90, 0xa9, 0x78, 0x6b, 0xd7, 0xf9, 0x66, 0xeb, 0xf3, 0x15, 0x09,
  0x5f, 0x39, 0xd7, 0xb7, 0x1c, 0xe7, 0xeb, 0x2d, 0xb5, 0xdb, 0x79, 0x8f,
  0x33, 0x17, 0xad, 0xce, 0xc6, 0xb5, 0x85, 0x8e, 0xda, 0x59, 0xee, 0x84,
  0x3b, 0xab, 0x85, 0x8d, 0x6d, 0x0d, 0x17, 0xfa, 0xfa, 0x97, 0x6f, 0x9d,
  0xd8, 0x39, 0xbf, 0xe5, 0x75, 0x70, 0x67, 0x1d, 0x36, 0xb6, 0x3d, 0x0d,
  0x58, 0xcc, 0x83, 0x31, 0x5a, 0xe2, 0x70, 0x5e, 0x1a, 0xdf, 0x80, 0x09,
  0xb4, 0xc2, 0x72, 0x5e, 0x19, 0x34, 0xd2, 0x94, 0x10, 0x4c, 0x68, 0x94,
  0x29, 0xa0, 0x34, 0xa3, 0x00, 0xba, 0x82, 0xca, 0x8c, 0x48, 0xa9, 0x41,
  0xb8, 0x38, 0xa6, 0x94, 0x16, 0x8e, 0x6b, 0x64, 0xc6, 0x35, 0xd0, 0x71,
  0x77, 0x9c, 0xae, 0xdb, 0x6b, 0x79, 0x21, 0xe6, 0xc8, 0x4f, 0x8e, 0xfc,
  0x34, 0xbd, 0x2a, 0xe6, 0xa9, 0x9d, 0xa7, 0xf6, 0x71, 0x3f, 0x34, 0x73,
  0x9e, 0x87, 0xb3, 0x7e, 0xd5, 0x9c, 0x08, 0x42, 0x33, 0xef, 0x7b, 0x26,
  0x07, 0x71, 0x3f, 0xdf, 0x5d, 0x50, 0x43, 0x95, 0x2a, 0x6a, 0x11, 0x5f,
  0xbd, 0x2b, 0x20, 0x5d, 0xa9, 0x6a, 0x78, 0x5d, 0x79, 0x1a, 0x83, 0xec,
  0x33, 0xb1, 0x2e, 0x56, 0x4d, 0xc1, 0xb6, 0x5f, 0x8b, 0x3d, 0xaa, 0x45,
  0xf6, 0xc9, 0x38, 0x5f, 0xae, 0x21, 0x76, 0xab, 0x3d, 0xb0, 0xfa, 0x77,
  0xe3, 0x92, 0xd5, 0xbf, 0x12, 0x17, 0x26, 0x1b, 0xe8, 0x4d, 0xd5, 0x8c,
  0x4f, 0x7d, 0x99, 0x7d, 0x21, 0xf6, 0xa7, 0x6b, 0xa6, 0x6c, 0xdb, 0x6f,
  0xc4, 0xa5, 0xdb, 0x1b, 0x46, 0x50, 0x5b, 0x64, 0x2f, 0xc4, 0x20, 0x9a,
  0x58, 0xec, 0xd6, 0x7a, 0xc2, 0x69, 0x9a, 0xf2, 0xb1, 0x86, 0x91, 0xd6,
  0xe6, 0x83, 0x38, 0xa0, 0xf5, 0x07, 0xdc, 0xce, 0x9c, 0x51, 0x58, 0xf2,
  0x31, 0xe8, 0x36, 0x7a, 0x5e, 0x29, 0x42, 0xac, 0x84, 0x38, 0xe2, 0x37,
  0xf1, 0xf1, 0xce, 0x8f, 0xd7, 0xb0, 0xe8, 0x61, 0x48, 0x36, 0xa3, 0xe1,
  0x99, 0xcd, 0xaa, 0x5f, 0xc5, 0x52, 0x69, 0x06, 0xbd, 0xdb, 0x22, 0x2c,
  0x96, 0x03, 0x14, 0x25, 0x89, 0x48, 0x63, 0xe3, 0xe1, 0xbd, 0x9b, 0x21,
  0x98, 0xbe, 0x9e, 0x87, 0x76, 0xe4, 0xfb, 0xb4, 0x07, 0x14, 0x67, 0xe5,
  0x7e, 0x55, 0x9c, 0xae, 0x61, 0x29, 0x1b, 0xa1, 0x33, 0x39, 0x41, 0x7b,
  0x14, 0xf7, 0xa7, 0xc2, 0x99, 0xcd, 0x62, 0x31, 0x30, 0x0b, 0xba, 0x8e,
  0x1c, 0x63, 0x81, 0x6c, 0x68, 0xbb, 0xfb, 0xfa, 0x24, 0xb4, 0xc5, 0x1d,
  0x12, 0x03, 0x01, 0xe8, 0x1c, 0x73, 0x31, 0x6e, 0xea, 0x35, 0x8e, 0x3d,
  0xf3, 0xea, 0x03, 0xca, 0x07, 0xe8, 0xff, 0x06, 0x97, 0x84, 0x8d, 0xbd,
  0xe2, 0x2a, 0x8e, 0xc9, 0x29, 0x9e, 0x52, 0x41, 0x46, 0x61, 0x1c, 0xb8,
  0x51, 0x8e, 0xe7, 0x77, 0xa0, 0x1d, 0x57, 0xf5, 0x9a, 0x2c, 0x82, 0x71,
  0xa6, 0x95, 0xf5, 0xef, 0x9e, 0x6b, 0x2b, 0x2f, 0x99, 0x1b, 0x4b, 0x19,
  0xf1, 0x1e, 0xb7, 0xf5, 0x04, 0xc6, 0xbe, 0x5e, 0x73, 0x68, 0x3c, 0xfb,
  0x7a, 0x43, 0xc9, 0x15, 0xd5, 0x13, 0x53, 0xd2, 0xda, 0x67, 0xde, 0x5e,
  0x54, 0x4f, 0xd3, 0xfd, 0x29, 0x0c, 0xe6, 0x00, 0x44, 0x62, 0x45, 0xf6,
  0x60, 0x12, 0x10, 0x56, 0xa0, 0x17, 0xd1, 0x9d, 0x5a, 0xd4, 0x35, 0x1c,
  0x62, 0xdb, 0x37, 0x4f, 0x2b, 0x7f, 0xb6, 0x86, 0x15, 0xa5, 0x50, 0x2e,
  0xa9, 0x5e, 0x45, 0x4a, 0xd4, 0xa4, 0x77, 0xdf, 0x6a, 0x2a, 0x6f, 0xbc,
  0x8e, 0xec, 0x6b, 0x44, 0x87, 0x58, 0xaf, 0xcd, 0xa0, 0x58, 0x92, 0xbd,
  0x0a, 0x00, 0xb6, 0xda, 0xab, 0x37, 0xc0, 0x69, 0x67, 0xad, 0xef, 0xf5,
  0x48, 0x59, 0xfb, 0x77, 0x1a, 0xca, 0xfa, 0xbe, 0xb3, 0xa9, 0xf8, 0xbb,
  0xfe, 0x43, 0xcb, 0xaa, 0x40, 0xfb, 0x3f, 0x4d, 0xf3, 0x60, 0x09, 0x7a,
  0x73, 0x07, 0xe7, 0x5c, 0x4c, 0xe6, 0xcc, 0xef, 0xcd, 0xf1, 0x1e, 0x4d,
  0xe6, 0x3c, 0xbc, 0xac, 0x66, 0x6a, 0x13, 0xb8, 0x70, 0xd0, 0xf6, 0xee,
  0x48, 0x99, 0xc0, 0xb3, 0x71, 0x79, 0x8f, 0x25, 0x76, 0x8f, 0x2c, 0xaa,
  0xc5, 0xc4, 0xc6, 0xf3, 0x5c, 0x77, 0x78, 0x30, 0xde, 0x6d, 0x2a, 0x39,
  0x4b, 0xc7, 0x90, 0x8c, 0x15, 0x69, 0x0c, 0x69, 0x4c, 0x8c, 0x4b, 0x6c,
  0xa9, 0x00, 0x55, 0xa2, 0xf7, 0x49, 0xcf, 0xfe, 0xc5, 0xf3, 0x0d, 0x05,
  0x25, 0xc0, 0xe3, 0xca, 0xc7, 0x13, 0x14, 0xbf, 0x4e, 0xc6, 0xd9, 0x2f,
  0xbc, 0xbc, 0xb7, 0x46, 0xf1, 0x62, 0xdd, 0x9e, 0x93, 0x38, 0xab, 0x55,
  0x2e, 0xaf, 0x70, 0x08, 0xf3, 0x58, 0x90, 0x41, 0xef, 0x1e, 0xf0, 0x8c,
  0x3d, 0xc7, 0x73, 0x4a, 0x05, 0xe4, 0x86, 0x6d, 0xdc, 0x72, 0xa0, 0xb4,
  0x56, 0xc6, 0xf0, 0x77, 0xf2, 0xb4, 0xb6, 0xe4, 0x7b, 0x65, 0xcf, 0xa5,
  0x7b, 0x07, 0x28, 0xb4, 0xdb, 0x97, 0x8e, 0x84, 0x20, 0xd1, 0x8f, 0x70,
  0x0d, 0xed, 0x6c, 0x95, 0x6b, 0xd1, 0xce, 0x46, 0x5c, 0x9b, 0x76, 0xb6,
  0xce, 0xf5, 0x70, 0x3b, 0x0b, 0x70, 0x7e, 0xbb, 0xcc, 0xff, 0x13, 0x7b,
  0xe9, 0xdd, 0x7d, 0xec, 0xf3, 0xc4, 0x21, 0x9d, 0x4d, 0x6d, 0x1f, 0xd2,
  0xd9, 0xfc, 0xe7, 0x21, 0xdd, 0x18, 0x17, 0xd2, 0xe1, 0xb1, 0xfd, 0x67,
  0x0c, 0xd6, 0x09, 0x61, 0x5f, 0x43, 0x5a, 0x5c, 0x30, 0xac, 0x93, 0xc2,
  0x66, 0x98, 0xf7, 0x75, 0x36, 0xbb, 0xac, 0x6c, 0x6e, 0xf9, 0xe0, 0x13,
  0x88, 0x65, 0xd9, 0x2e, 0x0a, 0xa0, 0x4e, 0xc2, 0xef, 0x1a, 0xc2, 0x66,
  0xc9, 0xf7, 0xbe, 0xa3, 0x92, 0x4c, 0xf5, 0xfa, 0xfb, 0xcf, 0xfe, 0x7e,
  0xe5, 0xb9, 0xb3, 0x23, 0xdf, 0xdf, 0xf8, 0xe1, 0xa9, 0xb1, 0x5f, 0x73,
  0x2f, 0xfd, 0x01, 0xd2, 0x62, 0xfb, 0x4e, 0x00, 0x17, 0x00, 0x01, 0x00,
  0x00, 0xd0, 0x18, 0x00, 0x78, 0x01, 0xed, 0x99, 0x4f, 0x6f, 0x1b, 0x45,
  0x14, 0xc0, 0xdf, 0xce, 0x4e, 0xc6, 0xb3, 0xeb, 0xe9, 0xf3, 0x7a, 0xbd,
  0xde, 0x4d, 0xc3, 0x66, 0xed, 0xb8, 0xff, 0x12, 0xe3, 0xa4, 0x8e, 0x14,
  0x20, 0xa0, 0xb6, 0x84, 0xaa, 0x54, 0x40, 0x5a, 0x02, 0x48, 0xbe, 0x54,
  0x04, 0x89, 0x02, 0x82, 0x43, 0x91, 0xfa, 0x01, 0xaa, 0xad, 0x8d, 0x22,
  0x0a, 0x52, 0x11, 0x27, 0x24, 0x24, 0x8e, 0xe4, 0x00, 0x82, 0x2f, 0x80,
  0x90, 0x1c, 0x5a, 0x73, 0x45, 0xaa, 0x52, 0xa0, 0xea, 0xad, 0x88, 0x13,
  0x48, 0x5c, 0x10, 0xc7, 0x4a, 0xe1, 0xbd, 0x8d, 0x1d, 0xa2, 0x34, 0x5c,
  0x2b, 0x81, 0xf6, 0x27, 0xbd, 0xf7, 0x66, 0xde, 0x8c, 0x67, 0xde, 0xbc,
  0x99, 0xbd, 0x3c, 0xdf, 0x1a, 0x87, 0x8c, 0x9f, 0xae, 0x7c, 0xe6, 0xb0,
  0xfd, 0xb6, 0xf5, 0xcb, 0x57, 0xd3, 0x1e, 0xc0, 0x18, 0x77, 0x76, 0x71,
  0x39, 0x60, 0x0d, 0x70, 0x69, 0x38, 0x7f, 0xf7, 0xf8, 0x41, 0x92, 0x0b,
  0x24, 0xcc, 0x12, 0xab, 0x21, 0x16, 0x2b, 0x80, 0x53, 0x24, 0x4f, 0x93,
  0x3c, 0x00, 0x6f, 0xf8, 0x39, 0xc9, 0xa7, 0x24, 0x4c, 0x91, 0xd5, 0x10,
  0xcd, 0x6a, 0x17, 0x92, 0xd5, 0xbf, 0x60, 0x93, 0xf0, 0x5e, 0x82, 0x64,
  0x2f, 0xbf, 0xd6, 0x3f, 0x3e, 0x41, 0xe6, 0x0c, 0x09, 0xfc, 0x71, 0xf1,
  0x8b, 0x93, 0x24, 0xdc, 0xcf, 0x58, 0x7b, 0xe2, 0xf5, 0x7d, 0xe3, 0xfa,
  0x2f, 0x33, 0xba, 0x27, 0x66, 0x8d, 0x13, 0xb3, 0x87, 0x51, 0x8e, 0xfe,
  0x8a, 0x58, 0xff, 0x93, 0xd7, 0x78, 0x78, 0xaf, 0xa3, 0xbb, 0xfc, 0x8e,
  0x64, 0x78, 0x7f, 0x0f, 0xb0, 0x45, 0xb0, 0xdd, 0x0f, 0xde, 0x52, 0xc1,
  0x4a, 0x5b, 0x59, 0xd7, 0xea, 0x4a, 0x0c, 0xe8, 0x25, 0x3d, 0x7c, 0xf8,
  0x4c, 0x8a, 0x84, 0x51, 0xd6, 0xf6, 0x29, 0x94, 0x18, 0x9e, 0xdc, 0xde,
  0x27, 0x29, 0xff, 0x43, 0x38, 0x07, 0x48, 0x32, 0x82, 0xfb, 0x0c, 0x67,
  0x63, 0x74, 0x29, 0xbb, 0xbf, 0xd5, 0x9c, 0x9c, 0x9c, 0x9c, 0x9c, 0x9c,
  0x9c, 0x9c, 0x9c, 0x9c, 0x9c, 0x9c, 0x9c, 0x9c, 0x9c, 0x9c, 0x87, 0xce,
  0x54, 0xb7, 0x2f, 0xb7, 0x3a, 0x1f, 0x70, 0xb5, 0xc2, 0xb6, 0x7f, 0xec,
  0xdf, 0xb0, 0x7f, 0xee, 0x6f, 0xd9, 0x77, 0xfa, 0x5f, 0xaf, 0x08, 0x80,
  0x8e, 0x18, 0x78, 0x9d, 0xc6, 0xa0, 0xde, 0xf1, 0x07, 0xed, 0x4e, 0xf7,
  0xe6, 0x62, 0xc7, 0x1d, 0x9c, 0xeb, 0x4c, 0x0c, 0x2e, 0x97, 0xae, 0x6f,
  0x08, 0x78, 0x6f, 0xd3, 0xf9, 0xed, 0x07, 0x1b, 0xc8, 0x6a, 0xb2, 0x36,
  0x59, 0x97, 0xec, 0x55, 0xb8, 0xbe, 0x11, 0x6b, 0x1f, 0xc7, 0xb5, 0x87,
  0x93, 0xae, 0x6f, 0x0e, 0xba, 0x9e, 0x49, 0x8c, 0x6f, 0xea, 0x3a, 0xc0,
  0x45, 0x48, 0x70, 0x01, 0x62, 0x9c, 0x30, 0x9e, 0xa9, 0xa1, 0x6f, 0xa6,
  0xdc, 0xc0, 0x3c, 0x29, 0x13, 0xf3, 0x08, 0x7a, 0xa6, 0x61, 0x02, 0xf3,
  0x98, 0x8c, 0xcd, 0x09, 0x00, 0xb4, 0x7c, 0x5f, 0x3f, 0xa5, 0x12, 0x73,
  0x52, 0x82, 0x39, 0x84, 0x81, 0x01, 0xcf, 0xd3, 0x4e, 0x25, 0xc4, 0xc7,
  0x55, 0x6c, 0x4a, 0x35, 0x89, 0x22, 0x08, 0xb4, 0x2e, 0x87, 0xe6, 0x94,
  0x02, 0x83, 0x93, 0xd2, 0xb8, 0xd5, 0xd0, 0x80, 0x25, 0x4d, 0x71, 0x35,
  0x4c, 0xc5, 0xaa, 0x4c, 0x6f, 0xd8, 0xf7, 0xfb, 0x15, 0xe8, 0x6e, 0x3a,
  0x51, 0xd8, 0x13, 0x93, 0x0a, 0x45, 0x2d, 0xc6, 0x52, 0xd6, 0x3f, 0xdb,
  0x15, 0x16, 0xa0, 0xa0, 0xb6, 0x8e, 0x4e, 0x77, 0x4b, 0xb5, 0x06, 0x8a,
  0xb1, 0x86, 0xf1, 0xa8, 0xef, 0x46, 0x2f, 0x74, 0x1d, 0xb2, 0x4e, 0x74,
  0xb4, 0xe7, 0x4d, 0x35, 0x8c, 0x4f, 0x6d, 0x1d, 0xf9, 0xbd, 0xca, 0xb1,
  0x26, 0x06, 0xd4, 0x76, 0xa3, 0x89, 0x9e, 0xce, 0x7c, 0x8d, 0x9e, 0x9b,
  0xf5, 0x9b, 0x3d, 0x8e, 0xa9, 0xbc, 0xda, 0x48, 0xfd, 0x23, 0x4d, 0xc3,
  0xf1, 0x04, 0x33, 0xcd, 0x2c, 0x96, 0xea, 0x6a, 0x33, 0xcd, 0x62, 0x29,
  0x48, 0x2c, 0xd7, 0x12, 0x14, 0x87, 0x24, 0x7a, 0xaa, 0x85, 0x67, 0xd4,
  0x1c, 0x3e, 0xa7, 0xda, 0x58, 0xa2, 0x98, 0xfd, 0x42, 0x82, 0xba, 0xa0,
  0x30, 0xa4, 0xb5, 0xca, 0xf1, 0x85, 0xf5, 0x71, 0xb2, 0xcf, 0xc7, 0x17,
  0xd7, 0xab, 0xc7, 0x8e, 0x62, 0xe9, 0xd1, 0x04, 0x8b, 0x15, 0x1f, 0xed,
  0x48, 0x61, 0x44, 0xfe, 0x67, 0xe3, 0xd7, 0xd6, 0xcb, 0x53, 0x75, 0x9a,
  0x6b, 0x36, 0xe1, 0x08, 0x2c, 0x8d, 0xb3, 0xfd, 0x04, 0x96, 0xaa, 0x33,
  0xd3, 0x58, 0x99, 0x4c, 0x4c, 0xb1, 0x1a, 0xa0, 0x33, 0xa9, 0x8c, 0x47,
  0x39, 0x08, 0xac, 0xc4, 0x44, 0x3c, 0xfe, 0x11, 0x97, 0x9d, 0x28, 0x4e,
  0x0b, 0x65, 0xb7, 0xa5, 0xaf, 0x08, 0xd0, 0xb7, 0xba, 0x6d, 0xc1, 0x75,
  0xc3, 0xcd, 0x3f, 0xe1, 0x4b, 0xab, 0x2b, 0x65, 0xdd, 0xc9, 0xda, 0x74,
  0x6a, 0x80, 0x3a, 0xc7, 0x0a, 0x15, 0x2e, 0x65, 0xd1, 0xbc, 0x39, 0x01,
  0x62, 0x45, 0xa6, 0xb0, 0x02, 0xa9, 0xce, 0xe6, 0x58, 0xd0, 0x4d, 0x92,
  0xba, 0x3d, 0x1b, 0x60, 0xa9, 0xac, 0xd0, 0x5e, 0x51, 0x69, 0x49, 0x4a,
  0xca, 0x29, 0xcd, 0x5f, 0x86, 0x54, 0x2c, 0xcb, 0xb4, 0xa4, 0xc8, 0xbf,
  0xac, 0x52, 0x7d, 0x3c, 0x44, 0x31, 0xeb, 0xe1, 0xf9, 0x80, 0xd6, 0x9b,
  0x4f, 0xf0, 0x5c, 0x00, 0xe8, 0xcc, 0xc7, 0xf8, 0x12, 0x05, 0xff, 0x72,
  0x28, 0xcd, 0xe1, 0x18, 0x8c, 0x7d, 0x9c, 0xce, 0x46, 0xb1, 0xe1, 0xb2,
  0x96, 0x2f, 0xd2, 0xbc, 0x57, 0xc8, 0x2f, 0x69, 0x2d, 0xce, 0x2b, 0x9e,
  0xd7, 0x52, 0x83, 0x54, 0x63, 0x0a, 0x70, 0xc6, 0x0b, 0xd1, 0x01, 0xa5,
  0x14, 0xad, 0x31, 0xed, 0x05, 0xd8, 0xf4, 0x3c, 0x6c, 0xf9, 0x81, 0x99,
  0xf5, 0x43, 0x33, 0xe7, 0x7b, 0x66, 0x3e, 0x09, 0x4d, 0x3b, 0x09, 0x0c,
  0xd2, 0xef, 0x4a, 0x6f, 0xd5, 0xe9, 0xf0, 0x1e, 0x1e, 0x08, 0x7d, 0x5a,
  0x07, 0x14, 0xc6, 0x01, 0xbe, 0xda, 0xf9, 0xfe, 0xe6, 0x92, 0x0e, 0xf1,
  0x19, 0x37, 0x34, 0xa7, 0x4d, 0x68, 0xde, 0xa4, 0x37, 0xcc, 0x73, 0x0b,
  0xd7, 0x5a, 0x92, 0xdf, 0xa9, 0xa6, 0x31, 0x87, 0xc6, 0x5c, 0x1a, 0xe3,
  0xf7, 0x51, 0x88, 0x5a, 0xd2, 0x90, 0xef, 0x00, 0xf9, 0x90, 0x7c, 0xfc,
  0x2e, 0x0a, 0xb5, 0x96, 0x04, 0xf2, 0x59, 0xe4, 0x13, 0xe4, 0x2b, 0xb3,
  0xaf, 0xd0, 0x92, 0x55, 0xd7, 0xc5, 0x08, 0x11, 0x25, 0xf5, 0xe5, 0x4c,
  0x20, 0xc7, 0xc8, 0xaa, 0xd9, 0x58, 0x16, 0xb5, 0xda, 0x94, 0x45, 0x01,
  0xef, 0x0b, 0xbd, 0x50, 0x10, 0x22, 0x55, 0x85, 0xc5, 0xbb, 0x74, 0xfb,
  0x00, 0x16, 0x59, 0xfa, 0xa4, 0x84, 0x4d, 0x56, 0xbb, 0x50, 0x87, 0x85,
  0xbb, 0xd2, 0xf0, 0x07, 0xd8, 0xdb, 0xa8, 0xb2, 0xd9, 0x2e, 0x9f, 0xee,
  0x90, 0xd5, 0x0e, 0xf7, 0xf8, 0x26, 0x58, 0x09, 0x9b, 0xc7, 0x76, 0x4a,
  0x8a, 0xec, 0xb3, 0xac, 0xec, 0x5f, 0x82, 0x36, 0x2b, 0x86, 0x7d, 0xc2,
  0xca, 0x2a, 0xb3, 0x3b, 0x3e, 0xda, 0x1a, 0x40, 0xd2, 0xed, 0xef, 0x53,
  0x8e, 0x5c, 0x1b, 0xd6, 0xa4, 0x0f, 0x93, 0xf0, 0x7f, 0x05, 0x56, 0x56,
  0x5d, 0xde, 0x5e, 0x47, 0x0e, 0x2b, 0xbc, 0x57, 0x3f, 0x7c, 0xfb, 0xfe,
  0x37, 0xef, 0xbc, 0x3b, 0x7e, 0xfb, 0xde, 0x9d, 0x37, 0x26, 0x7e, 0x77,
  0x2e, 0xfd, 0x0d, 0x0d, 0xa6, 0xbe, 0xdf, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x01, 0x02, 0x03, 0x00, 0x00, 0x04, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x05, 0x03, 0x08, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x01, 0x06, 0x05,
  0x04, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7c, 0x00, 0x00,
  0x78, 0x01, 0x63, 0x64, 0x60, 0x60, 0x60, 0x06, 0x62, 0x09, 0x20, 0x06,
  0x81, 0x1a, 0x20, 0x96, 0x05, 0x62, 0x26, 0x20, 0x06, 0x01, 0x1b, 0x10,
  0x01, 0x04, 0xac, 0x40, 0xec, 0x02, 0xc4, 0x20, 0x00, 0x62, 0x27, 0x00,
  0x31, 0x0c, 0x80, 0xcc, 0xf0, 0x01, 0x62, 0x10, 0x00, 0xb1, 0x61, 0xe0,
  0x3f, 0x10, 0x80, 0xf8, 0x19, 0x40, 0x0c, 0xb2, 0x03, 0x55, 0xee, 0xff,
  0x7f, 0x00, 0x33, 0x03, 0x0a, 0x55, 0x00, 0x00, 0x78, 0x62, 0x6f, 0x70,
  0x01, 0x00, 0x00, 0x00, 0x7e, 0x02, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x30, 0x00, 0x00, 0x00
};
