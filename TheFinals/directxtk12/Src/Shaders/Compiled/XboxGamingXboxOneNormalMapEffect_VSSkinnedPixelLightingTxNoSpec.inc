#if 0
;
; Input signature:
;
; Name                 Index   Mask Register SysValue  Format   Used
; -------------------- ----- ------ -------- -------- ------- ------
; SV_Position              0   xyzw        0     NONE   float   xyzw
; NORMAL                   0   xyz         1     NONE   float   xyz 
; TEXCOORD                 0   xy          2     NONE   float   xy  
; BLENDINDICES             0   xyzw        3     NONE    uint   xyzw
; BLENDWEIGHT              0   xyzw        4     NONE   float   xyzw
;
;
; Output signature:
;
; Name                 Index   Mask Register SysValue  Format   Used
; -------------------- ----- ------ -------- -------- ------- ------
; TEXCOORD                 0   xy          0     NONE   float   xy  
; TEXCOORD                 1   xyzw        1     NONE   float   xyzw
; TEXCOORD                 2   xyz         2     NONE   float   xyz 
; COLOR                    0   xyzw        3     NONE   float   xyzw
; SV_Position              0   xyzw        4      POS   float   xyzw
;
; shader debug name: C:\Users\marcu\Downloads\DirectXTK12-main\DirectXTK12-main\Src/Shaders/Compiled\XboxGamingXboxOneNormalMapEffect_VSSkinnedPixelLightingTxNoSpec.pdb
; shader hash: dad2f36f36d42d4c49722b4ecc77d50b
;
; Pipeline Runtime Information: 
;
;PSVRuntimeInfo:
; Vertex Shader
; OutputPositionPresent=1
; MinimumExpectedWaveLaneCount: 0
; MaximumExpectedWaveLaneCount: 4294967295
; UsesViewID: false
; SigInputElements: 5
; SigOutputElements: 5
; SigPatchConstOrPrimElements: 0
; SigInputVectors: 5
; SigOutputVectors[0]: 5
; SigOutputVectors[1]: 0
; SigOutputVectors[2]: 0
; SigOutputVectors[3]: 0
; EntryFunctionName: VSSkinnedPixelLightingTxNoSpec
;
;
; Input signature:
;
; Name                 Index             InterpMode DynIdx
; -------------------- ----- ---------------------- ------
; SV_Position              0                              
; NORMAL                   0                              
; TEXCOORD                 0                              
; BLENDINDICES             0                              
; BLENDWEIGHT              0                              
;
; Output signature:
;
; Name                 Index             InterpMode DynIdx
; -------------------- ----- ---------------------- ------
; TEXCOORD                 0                 linear       
; TEXCOORD                 1                 linear       
; TEXCOORD                 2                 linear       
; COLOR                    0                 linear       
; SV_Position              0          noperspective       
;
; Buffer Definitions:
;
; cbuffer 
; {
;
;   [416 x i8] (type annotation not present)
;
; }
;
; cbuffer 
; {
;
;   [3456 x i8] (type annotation not present)
;
; }
;
;
; Resource Bindings:
;
; Name                                 Type  Format         Dim      ID      HLSL Bind  Count
; ------------------------------ ---------- ------- ----------- ------- -------------- ------
;                                   cbuffer      NA          NA     CB0            cb0     1
;                                   cbuffer      NA          NA     CB1            cb1     1
;
;
; ViewId state:
;
; Number of inputs: 20, outputs: 20
; Outputs dependent on ViewId: {  }
; Inputs contributing to computation of Outputs:
;   output 0 depends on inputs: { 8 }
;   output 1 depends on inputs: { 9 }
;   output 4 depends on inputs: { 0, 1, 2, 3, 12, 13, 14, 15, 16, 17, 18, 19 }
;   output 5 depends on inputs: { 0, 1, 2, 3, 12, 13, 14, 15, 16, 17, 18, 19 }
;   output 6 depends on inputs: { 0, 1, 2, 3, 12, 13, 14, 15, 16, 17, 18, 19 }
;   output 7 depends on inputs: { 0, 1, 2, 3, 12, 13, 14, 15, 16, 17, 18, 19 }
;   output 8 depends on inputs: { 4, 5, 6, 12, 13, 14, 15, 16, 17, 18, 19 }
;   output 9 depends on inputs: { 4, 5, 6, 12, 13, 14, 15, 16, 17, 18, 19 }
;   output 10 depends on inputs: { 4, 5, 6, 12, 13, 14, 15, 16, 17, 18, 19 }
;   output 16 depends on inputs: { 0, 1, 2, 3, 12, 13, 14, 15, 16, 17, 18, 19 }
;   output 17 depends on inputs: { 0, 1, 2, 3, 12, 13, 14, 15, 16, 17, 18, 19 }
;   output 18 depends on inputs: { 0, 1, 2, 3, 12, 13, 14, 15, 16, 17, 18, 19 }
;   output 19 depends on inputs: { 0, 1, 2, 3, 12, 13, 14, 15, 16, 17, 18, 19 }
;
target datalayout = "e-m:e-p:32:32-i1:32-i8:32-i16:32-i32:32-i64:64-f16:32-f32:32-f64:64-n8:16:32:64"
target triple = "dxil-ms-xb1"

%dx.types.Handle = type { i8* }
%dx.types.CBufRet.f32 = type { float, float, float, float }
%hostlayout.Parameters = type { <4 x float>, <3 x float>, <3 x float>, float, [3 x <3 x float>], [3 x <3 x float>], [3 x <3 x float>], <3 x float>, <3 x float>, <4 x float>, [4 x <4 x float>], [3 x <3 x float>], [4 x <4 x float>] }
%hostlayout.SkinningParameters = type { [72 x [3 x <4 x float>]] }

define void @VSSkinnedPixelLightingTxNoSpec() {
  %1 = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 2, i32 1, i32 1, i1 false)  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %2 = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 2, i32 0, i32 0, i1 false)  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %3 = call float @dx.op.loadInput.f32(i32 4, i32 4, i32 0, i8 0, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %4 = call float @dx.op.loadInput.f32(i32 4, i32 4, i32 0, i8 1, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %5 = call float @dx.op.loadInput.f32(i32 4, i32 4, i32 0, i8 2, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %6 = call float @dx.op.loadInput.f32(i32 4, i32 4, i32 0, i8 3, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %7 = call i32 @dx.op.loadInput.i32(i32 4, i32 3, i32 0, i8 0, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %8 = call i32 @dx.op.loadInput.i32(i32 4, i32 3, i32 0, i8 1, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %9 = call i32 @dx.op.loadInput.i32(i32 4, i32 3, i32 0, i8 2, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %10 = call i32 @dx.op.loadInput.i32(i32 4, i32 3, i32 0, i8 3, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %11 = call float @dx.op.loadInput.f32(i32 4, i32 2, i32 0, i8 0, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %12 = call float @dx.op.loadInput.f32(i32 4, i32 2, i32 0, i8 1, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %13 = call float @dx.op.loadInput.f32(i32 4, i32 1, i32 0, i8 0, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %14 = call float @dx.op.loadInput.f32(i32 4, i32 1, i32 0, i8 1, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %15 = call float @dx.op.loadInput.f32(i32 4, i32 1, i32 0, i8 2, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %16 = call float @dx.op.loadInput.f32(i32 4, i32 0, i32 0, i8 0, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %17 = call float @dx.op.loadInput.f32(i32 4, i32 0, i32 0, i8 1, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %18 = call float @dx.op.loadInput.f32(i32 4, i32 0, i32 0, i8 2, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %19 = call float @dx.op.loadInput.f32(i32 4, i32 0, i32 0, i8 3, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %20 = mul i32 %7, 3
  %21 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 %20)  ; CBufferLoadLegacy(handle,regIndex)
  %22 = extractvalue %dx.types.CBufRet.f32 %21, 0
  %23 = extractvalue %dx.types.CBufRet.f32 %21, 1
  %24 = extractvalue %dx.types.CBufRet.f32 %21, 2
  %25 = extractvalue %dx.types.CBufRet.f32 %21, 3
  %26 = add i32 %20, 1
  %27 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 %26)  ; CBufferLoadLegacy(handle,regIndex)
  %28 = extractvalue %dx.types.CBufRet.f32 %27, 0
  %29 = extractvalue %dx.types.CBufRet.f32 %27, 1
  %30 = extractvalue %dx.types.CBufRet.f32 %27, 2
  %31 = extractvalue %dx.types.CBufRet.f32 %27, 3
  %32 = add i32 %20, 2
  %33 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 %32)  ; CBufferLoadLegacy(handle,regIndex)
  %34 = extractvalue %dx.types.CBufRet.f32 %33, 0
  %35 = extractvalue %dx.types.CBufRet.f32 %33, 1
  %36 = extractvalue %dx.types.CBufRet.f32 %33, 2
  %37 = extractvalue %dx.types.CBufRet.f32 %33, 3
  %38 = fmul fast float %22, %3
  %39 = fmul fast float %28, %3
  %40 = fmul fast float %34, %3
  %41 = fmul fast float %23, %3
  %42 = fmul fast float %29, %3
  %43 = fmul fast float %35, %3
  %44 = fmul fast float %24, %3
  %45 = fmul fast float %30, %3
  %46 = fmul fast float %36, %3
  %47 = fmul fast float %25, %3
  %48 = fmul fast float %31, %3
  %49 = fmul fast float %37, %3
  %50 = mul i32 %8, 3
  %51 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 %50)  ; CBufferLoadLegacy(handle,regIndex)
  %52 = extractvalue %dx.types.CBufRet.f32 %51, 0
  %53 = extractvalue %dx.types.CBufRet.f32 %51, 1
  %54 = extractvalue %dx.types.CBufRet.f32 %51, 2
  %55 = extractvalue %dx.types.CBufRet.f32 %51, 3
  %56 = add i32 %50, 1
  %57 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 %56)  ; CBufferLoadLegacy(handle,regIndex)
  %58 = extractvalue %dx.types.CBufRet.f32 %57, 0
  %59 = extractvalue %dx.types.CBufRet.f32 %57, 1
  %60 = extractvalue %dx.types.CBufRet.f32 %57, 2
  %61 = extractvalue %dx.types.CBufRet.f32 %57, 3
  %62 = add i32 %50, 2
  %63 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 %62)  ; CBufferLoadLegacy(handle,regIndex)
  %64 = extractvalue %dx.types.CBufRet.f32 %63, 0
  %65 = extractvalue %dx.types.CBufRet.f32 %63, 1
  %66 = extractvalue %dx.types.CBufRet.f32 %63, 2
  %67 = extractvalue %dx.types.CBufRet.f32 %63, 3
  %68 = fmul fast float %52, %4
  %69 = fmul fast float %58, %4
  %70 = fmul fast float %64, %4
  %71 = fmul fast float %53, %4
  %72 = fmul fast float %59, %4
  %73 = fmul fast float %65, %4
  %74 = fmul fast float %54, %4
  %75 = fmul fast float %60, %4
  %76 = fmul fast float %66, %4
  %77 = fmul fast float %55, %4
  %78 = fmul fast float %61, %4
  %79 = fmul fast float %67, %4
  %80 = fadd fast float %68, %38
  %81 = fadd fast float %69, %39
  %82 = fadd fast float %70, %40
  %83 = fadd fast float %71, %41
  %84 = fadd fast float %72, %42
  %85 = fadd fast float %73, %43
  %86 = fadd fast float %74, %44
  %87 = fadd fast float %75, %45
  %88 = fadd fast float %76, %46
  %89 = fadd fast float %77, %47
  %90 = fadd fast float %78, %48
  %91 = fadd fast float %79, %49
  %92 = mul i32 %9, 3
  %93 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 %92)  ; CBufferLoadLegacy(handle,regIndex)
  %94 = extractvalue %dx.types.CBufRet.f32 %93, 0
  %95 = extractvalue %dx.types.CBufRet.f32 %93, 1
  %96 = extractvalue %dx.types.CBufRet.f32 %93, 2
  %97 = extractvalue %dx.types.CBufRet.f32 %93, 3
  %98 = add i32 %92, 1
  %99 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 %98)  ; CBufferLoadLegacy(handle,regIndex)
  %100 = extractvalue %dx.types.CBufRet.f32 %99, 0
  %101 = extractvalue %dx.types.CBufRet.f32 %99, 1
  %102 = extractvalue %dx.types.CBufRet.f32 %99, 2
  %103 = extractvalue %dx.types.CBufRet.f32 %99, 3
  %104 = add i32 %92, 2
  %105 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 %104)  ; CBufferLoadLegacy(handle,regIndex)
  %106 = extractvalue %dx.types.CBufRet.f32 %105, 0
  %107 = extractvalue %dx.types.CBufRet.f32 %105, 1
  %108 = extractvalue %dx.types.CBufRet.f32 %105, 2
  %109 = extractvalue %dx.types.CBufRet.f32 %105, 3
  %110 = fmul fast float %94, %5
  %111 = fmul fast float %100, %5
  %112 = fmul fast float %106, %5
  %113 = fmul fast float %95, %5
  %114 = fmul fast float %101, %5
  %115 = fmul fast float %107, %5
  %116 = fmul fast float %96, %5
  %117 = fmul fast float %102, %5
  %118 = fmul fast float %108, %5
  %119 = fmul fast float %97, %5
  %120 = fmul fast float %103, %5
  %121 = fmul fast float %109, %5
  %122 = fadd fast float %80, %110
  %123 = fadd fast float %81, %111
  %124 = fadd fast float %82, %112
  %125 = fadd fast float %83, %113
  %126 = fadd fast float %84, %114
  %127 = fadd fast float %85, %115
  %128 = fadd fast float %86, %116
  %129 = fadd fast float %87, %117
  %130 = fadd fast float %88, %118
  %131 = fadd fast float %89, %119
  %132 = fadd fast float %90, %120
  %133 = fadd fast float %91, %121
  %134 = mul i32 %10, 3
  %135 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 %134)  ; CBufferLoadLegacy(handle,regIndex)
  %136 = extractvalue %dx.types.CBufRet.f32 %135, 0
  %137 = extractvalue %dx.types.CBufRet.f32 %135, 1
  %138 = extractvalue %dx.types.CBufRet.f32 %135, 2
  %139 = extractvalue %dx.types.CBufRet.f32 %135, 3
  %140 = add i32 %134, 1
  %141 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 %140)  ; CBufferLoadLegacy(handle,regIndex)
  %142 = extractvalue %dx.types.CBufRet.f32 %141, 0
  %143 = extractvalue %dx.types.CBufRet.f32 %141, 1
  %144 = extractvalue %dx.types.CBufRet.f32 %141, 2
  %145 = extractvalue %dx.types.CBufRet.f32 %141, 3
  %146 = add i32 %134, 2
  %147 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 %146)  ; CBufferLoadLegacy(handle,regIndex)
  %148 = extractvalue %dx.types.CBufRet.f32 %147, 0
  %149 = extractvalue %dx.types.CBufRet.f32 %147, 1
  %150 = extractvalue %dx.types.CBufRet.f32 %147, 2
  %151 = extractvalue %dx.types.CBufRet.f32 %147, 3
  %152 = fmul fast float %136, %6
  %153 = fmul fast float %142, %6
  %154 = fmul fast float %148, %6
  %155 = fmul fast float %137, %6
  %156 = fmul fast float %143, %6
  %157 = fmul fast float %149, %6
  %158 = fmul fast float %138, %6
  %159 = fmul fast float %144, %6
  %160 = fmul fast float %150, %6
  %161 = fmul fast float %139, %6
  %162 = fmul fast float %145, %6
  %163 = fmul fast float %151, %6
  %164 = fadd fast float %122, %152
  %165 = fadd fast float %123, %153
  %166 = fadd fast float %124, %154
  %167 = fadd fast float %125, %155
  %168 = fadd fast float %126, %156
  %169 = fadd fast float %127, %157
  %170 = fadd fast float %128, %158
  %171 = fadd fast float %129, %159
  %172 = fadd fast float %130, %160
  %173 = fadd fast float %131, %161
  %174 = fadd fast float %132, %162
  %175 = fadd fast float %133, %163
  %176 = fmul fast float %164, %16
  %177 = call float @dx.op.tertiary.f32(i32 46, float %17, float %167, float %176)  ; FMad(a,b,c)
  %178 = call float @dx.op.tertiary.f32(i32 46, float %18, float %170, float %177)  ; FMad(a,b,c)
  %179 = call float @dx.op.tertiary.f32(i32 46, float %19, float %173, float %178)  ; FMad(a,b,c)
  %180 = fmul fast float %165, %16
  %181 = call float @dx.op.tertiary.f32(i32 46, float %17, float %168, float %180)  ; FMad(a,b,c)
  %182 = call float @dx.op.tertiary.f32(i32 46, float %18, float %171, float %181)  ; FMad(a,b,c)
  %183 = call float @dx.op.tertiary.f32(i32 46, float %19, float %174, float %182)  ; FMad(a,b,c)
  %184 = fmul fast float %166, %16
  %185 = call float @dx.op.tertiary.f32(i32 46, float %17, float %169, float %184)  ; FMad(a,b,c)
  %186 = call float @dx.op.tertiary.f32(i32 46, float %18, float %172, float %185)  ; FMad(a,b,c)
  %187 = call float @dx.op.tertiary.f32(i32 46, float %19, float %175, float %186)  ; FMad(a,b,c)
  %188 = fmul fast float %164, %13
  %189 = call float @dx.op.tertiary.f32(i32 46, float %14, float %167, float %188)  ; FMad(a,b,c)
  %190 = call float @dx.op.tertiary.f32(i32 46, float %15, float %170, float %189)  ; FMad(a,b,c)
  %191 = fmul fast float %165, %13
  %192 = call float @dx.op.tertiary.f32(i32 46, float %14, float %168, float %191)  ; FMad(a,b,c)
  %193 = call float @dx.op.tertiary.f32(i32 46, float %15, float %171, float %192)  ; FMad(a,b,c)
  %194 = fmul fast float %166, %13
  %195 = call float @dx.op.tertiary.f32(i32 46, float %14, float %169, float %194)  ; FMad(a,b,c)
  %196 = call float @dx.op.tertiary.f32(i32 46, float %15, float %172, float %195)  ; FMad(a,b,c)
  %197 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %2, i32 22)  ; CBufferLoadLegacy(handle,regIndex)
  %198 = extractvalue %dx.types.CBufRet.f32 %197, 0
  %199 = extractvalue %dx.types.CBufRet.f32 %197, 1
  %200 = extractvalue %dx.types.CBufRet.f32 %197, 2
  %201 = extractvalue %dx.types.CBufRet.f32 %197, 3
  %202 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %2, i32 23)  ; CBufferLoadLegacy(handle,regIndex)
  %203 = extractvalue %dx.types.CBufRet.f32 %202, 0
  %204 = extractvalue %dx.types.CBufRet.f32 %202, 1
  %205 = extractvalue %dx.types.CBufRet.f32 %202, 2
  %206 = extractvalue %dx.types.CBufRet.f32 %202, 3
  %207 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %2, i32 24)  ; CBufferLoadLegacy(handle,regIndex)
  %208 = extractvalue %dx.types.CBufRet.f32 %207, 0
  %209 = extractvalue %dx.types.CBufRet.f32 %207, 1
  %210 = extractvalue %dx.types.CBufRet.f32 %207, 2
  %211 = extractvalue %dx.types.CBufRet.f32 %207, 3
  %212 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %2, i32 25)  ; CBufferLoadLegacy(handle,regIndex)
  %213 = extractvalue %dx.types.CBufRet.f32 %212, 0
  %214 = extractvalue %dx.types.CBufRet.f32 %212, 1
  %215 = extractvalue %dx.types.CBufRet.f32 %212, 2
  %216 = extractvalue %dx.types.CBufRet.f32 %212, 3
  %217 = fmul fast float %198, %179
  %218 = call float @dx.op.tertiary.f32(i32 46, float %183, float %199, float %217)  ; FMad(a,b,c)
  %219 = call float @dx.op.tertiary.f32(i32 46, float %187, float %200, float %218)  ; FMad(a,b,c)
  %220 = call float @dx.op.tertiary.f32(i32 46, float %19, float %201, float %219)  ; FMad(a,b,c)
  %221 = fmul fast float %203, %179
  %222 = call float @dx.op.tertiary.f32(i32 46, float %183, float %204, float %221)  ; FMad(a,b,c)
  %223 = call float @dx.op.tertiary.f32(i32 46, float %187, float %205, float %222)  ; FMad(a,b,c)
  %224 = call float @dx.op.tertiary.f32(i32 46, float %19, float %206, float %223)  ; FMad(a,b,c)
  %225 = fmul fast float %208, %179
  %226 = call float @dx.op.tertiary.f32(i32 46, float %183, float %209, float %225)  ; FMad(a,b,c)
  %227 = call float @dx.op.tertiary.f32(i32 46, float %187, float %210, float %226)  ; FMad(a,b,c)
  %228 = call float @dx.op.tertiary.f32(i32 46, float %19, float %211, float %227)  ; FMad(a,b,c)
  %229 = fmul fast float %213, %179
  %230 = call float @dx.op.tertiary.f32(i32 46, float %183, float %214, float %229)  ; FMad(a,b,c)
  %231 = call float @dx.op.tertiary.f32(i32 46, float %187, float %215, float %230)  ; FMad(a,b,c)
  %232 = call float @dx.op.tertiary.f32(i32 46, float %19, float %216, float %231)  ; FMad(a,b,c)
  %233 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %2, i32 15)  ; CBufferLoadLegacy(handle,regIndex)
  %234 = extractvalue %dx.types.CBufRet.f32 %233, 0
  %235 = extractvalue %dx.types.CBufRet.f32 %233, 1
  %236 = extractvalue %dx.types.CBufRet.f32 %233, 2
  %237 = extractvalue %dx.types.CBufRet.f32 %233, 3
  %238 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %2, i32 16)  ; CBufferLoadLegacy(handle,regIndex)
  %239 = extractvalue %dx.types.CBufRet.f32 %238, 0
  %240 = extractvalue %dx.types.CBufRet.f32 %238, 1
  %241 = extractvalue %dx.types.CBufRet.f32 %238, 2
  %242 = extractvalue %dx.types.CBufRet.f32 %238, 3
  %243 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %2, i32 17)  ; CBufferLoadLegacy(handle,regIndex)
  %244 = extractvalue %dx.types.CBufRet.f32 %243, 0
  %245 = extractvalue %dx.types.CBufRet.f32 %243, 1
  %246 = extractvalue %dx.types.CBufRet.f32 %243, 2
  %247 = extractvalue %dx.types.CBufRet.f32 %243, 3
  %248 = fmul fast float %234, %179
  %249 = call float @dx.op.tertiary.f32(i32 46, float %183, float %235, float %248)  ; FMad(a,b,c)
  %250 = call float @dx.op.tertiary.f32(i32 46, float %187, float %236, float %249)  ; FMad(a,b,c)
  %251 = call float @dx.op.tertiary.f32(i32 46, float %19, float %237, float %250)  ; FMad(a,b,c)
  %252 = fmul fast float %239, %179
  %253 = call float @dx.op.tertiary.f32(i32 46, float %183, float %240, float %252)  ; FMad(a,b,c)
  %254 = call float @dx.op.tertiary.f32(i32 46, float %187, float %241, float %253)  ; FMad(a,b,c)
  %255 = call float @dx.op.tertiary.f32(i32 46, float %19, float %242, float %254)  ; FMad(a,b,c)
  %256 = fmul fast float %244, %179
  %257 = call float @dx.op.tertiary.f32(i32 46, float %183, float %245, float %256)  ; FMad(a,b,c)
  %258 = call float @dx.op.tertiary.f32(i32 46, float %187, float %246, float %257)  ; FMad(a,b,c)
  %259 = call float @dx.op.tertiary.f32(i32 46, float %19, float %247, float %258)  ; FMad(a,b,c)
  %260 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %2, i32 19)  ; CBufferLoadLegacy(handle,regIndex)
  %261 = extractvalue %dx.types.CBufRet.f32 %260, 0
  %262 = extractvalue %dx.types.CBufRet.f32 %260, 1
  %263 = extractvalue %dx.types.CBufRet.f32 %260, 2
  %264 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %2, i32 20)  ; CBufferLoadLegacy(handle,regIndex)
  %265 = extractvalue %dx.types.CBufRet.f32 %264, 0
  %266 = extractvalue %dx.types.CBufRet.f32 %264, 1
  %267 = extractvalue %dx.types.CBufRet.f32 %264, 2
  %268 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %2, i32 21)  ; CBufferLoadLegacy(handle,regIndex)
  %269 = extractvalue %dx.types.CBufRet.f32 %268, 0
  %270 = extractvalue %dx.types.CBufRet.f32 %268, 1
  %271 = extractvalue %dx.types.CBufRet.f32 %268, 2
  %272 = fmul fast float %261, %190
  %273 = call float @dx.op.tertiary.f32(i32 46, float %193, float %262, float %272)  ; FMad(a,b,c)
  %274 = call float @dx.op.tertiary.f32(i32 46, float %196, float %263, float %273)  ; FMad(a,b,c)
  %275 = fmul fast float %265, %190
  %276 = call float @dx.op.tertiary.f32(i32 46, float %193, float %266, float %275)  ; FMad(a,b,c)
  %277 = call float @dx.op.tertiary.f32(i32 46, float %196, float %267, float %276)  ; FMad(a,b,c)
  %278 = fmul fast float %269, %190
  %279 = call float @dx.op.tertiary.f32(i32 46, float %193, float %270, float %278)  ; FMad(a,b,c)
  %280 = call float @dx.op.tertiary.f32(i32 46, float %196, float %271, float %279)  ; FMad(a,b,c)
  %281 = call float @dx.op.dot3.f32(i32 55, float %274, float %277, float %280, float %274, float %277, float %280)  ; Dot3(ax,ay,az,bx,by,bz)
  %282 = call float @dx.op.unary.f32(i32 25, float %281)  ; Rsqrt(value)
  %283 = fmul fast float %282, %274
  %284 = fmul fast float %282, %277
  %285 = fmul fast float %282, %280
  %286 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %2, i32 14)  ; CBufferLoadLegacy(handle,regIndex)
  %287 = extractvalue %dx.types.CBufRet.f32 %286, 0
  %288 = extractvalue %dx.types.CBufRet.f32 %286, 1
  %289 = extractvalue %dx.types.CBufRet.f32 %286, 2
  %290 = extractvalue %dx.types.CBufRet.f32 %286, 3
  %291 = call float @dx.op.dot4.f32(i32 56, float %179, float %183, float %187, float %19, float %287, float %288, float %289, float %290)  ; Dot4(ax,ay,az,aw,bx,by,bz,bw)
  %292 = call float @dx.op.unary.f32(i32 7, float %291)  ; Saturate(value)
  call void @dx.op.storeOutput.f32(i32 5, i32 4, i32 0, i8 0, float %220)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 4, i32 0, i8 1, float %224)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 4, i32 0, i8 2, float %228)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 4, i32 0, i8 3, float %232)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 1, i32 0, i8 0, float %251)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 1, i32 0, i8 1, float %255)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 1, i32 0, i8 2, float %259)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 1, i32 0, i8 3, float %292)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 2, i32 0, i8 0, float %283)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 2, i32 0, i8 1, float %284)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 2, i32 0, i8 2, float %285)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  %293 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %2, i32 0)  ; CBufferLoadLegacy(handle,regIndex)
  %294 = extractvalue %dx.types.CBufRet.f32 %293, 3
  call void @dx.op.storeOutput.f32(i32 5, i32 3, i32 0, i8 0, float 1.000000e+00)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 3, i32 0, i8 1, float 1.000000e+00)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 3, i32 0, i8 2, float 1.000000e+00)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 3, i32 0, i8 3, float %294)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 0, float %11)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 1, float %12)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  ret void
}

; Function Attrs: nounwind readnone
declare float @dx.op.loadInput.f32(i32, i32, i32, i8, i32) #0

; Function Attrs: nounwind readnone
declare i32 @dx.op.loadInput.i32(i32, i32, i32, i8, i32) #0

; Function Attrs: nounwind
declare void @dx.op.storeOutput.f32(i32, i32, i32, i8, float) #1

; Function Attrs: nounwind readnone
declare float @dx.op.dot3.f32(i32, float, float, float, float, float, float) #0

; Function Attrs: nounwind readnone
declare float @dx.op.unary.f32(i32, float) #0

; Function Attrs: nounwind readnone
declare float @dx.op.dot4.f32(i32, float, float, float, float, float, float, float, float) #0

; Function Attrs: nounwind readonly
declare %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32, %dx.types.Handle, i32) #2

; Function Attrs: nounwind readnone
declare float @dx.op.tertiary.f32(i32, float, float, float) #0

; Function Attrs: nounwind readonly
declare %dx.types.Handle @dx.op.createHandle(i32, i8, i32, i32, i1) #2

attributes #0 = { nounwind readnone }
attributes #1 = { nounwind }
attributes #2 = { nounwind readonly }

!xbox.compiler.options = !{!0}
!llvm.ident = !{!1}
!dx.version = !{!2}
!dx.valver = !{!3}
!dx.shaderModel = !{!4}
!dx.resources = !{!5}
!dx.viewIdState = !{!9}
!dx.entryPoints = !{!10}

!0 = !{!"__XBOX_PER_THREAD_SCRATCH_SIZE_LIMIT_IN_BYTES", !"0"}
!1 = !{!"dxcxbox 2410.2410.11116.10741"}
!2 = !{i32 1, i32 0}
!3 = !{i32 1, i32 8}
!4 = !{!"vs", i32 6, i32 0}
!5 = !{null, null, !6, null}
!6 = !{!7, !8}
!7 = !{i32 0, %hostlayout.Parameters* undef, !"", i32 0, i32 0, i32 1, i32 416, null}
!8 = !{i32 1, %hostlayout.SkinningParameters* undef, !"", i32 0, i32 1, i32 1, i32 3456, null}
!9 = !{[22 x i32] [i32 20, i32 20, i32 983280, i32 983280, i32 983280, i32 983280, i32 1792, i32 1792, i32 1792, i32 0, i32 1, i32 2, i32 0, i32 0, i32 985072, i32 985072, i32 985072, i32 985072, i32 985072, i32 985072, i32 985072, i32 985072]}
!10 = !{void ()* @VSSkinnedPixelLightingTxNoSpec, !"VSSkinnedPixelLightingTxNoSpec", !11, !5, null}
!11 = !{!12, !22, null}
!12 = !{!13, !16, !18, !20, !21}
!13 = !{i32 0, !"SV_Position", i8 9, i8 0, !14, i8 0, i32 1, i8 4, i32 0, i8 0, !15}
!14 = !{i32 0}
!15 = !{i32 3, i32 15}
!16 = !{i32 1, !"NORMAL", i8 9, i8 0, !14, i8 0, i32 1, i8 3, i32 1, i8 0, !17}
!17 = !{i32 3, i32 7}
!18 = !{i32 2, !"TEXCOORD", i8 9, i8 0, !14, i8 0, i32 1, i8 2, i32 2, i8 0, !19}
!19 = !{i32 3, i32 3}
!20 = !{i32 3, !"BLENDINDICES", i8 5, i8 0, !14, i8 0, i32 1, i8 4, i32 3, i8 0, !15}
!21 = !{i32 4, !"BLENDWEIGHT", i8 9, i8 0, !14, i8 0, i32 1, i8 4, i32 4, i8 0, !15}
!22 = !{!23, !24, !26, !28, !29}
!23 = !{i32 0, !"TEXCOORD", i8 9, i8 0, !14, i8 2, i32 1, i8 2, i32 0, i8 0, !19}
!24 = !{i32 1, !"TEXCOORD", i8 9, i8 0, !25, i8 2, i32 1, i8 4, i32 1, i8 0, !15}
!25 = !{i32 1}
!26 = !{i32 2, !"TEXCOORD", i8 9, i8 0, !27, i8 2, i32 1, i8 3, i32 2, i8 0, !17}
!27 = !{i32 2}
!28 = !{i32 3, !"COLOR", i8 9, i8 0, !14, i8 2, i32 1, i8 4, i32 3, i8 0, !15}
!29 = !{i32 4, !"SV_Position", i8 9, i8 3, !14, i8 4, i32 1, i8 4, i32 4, i8 0, !15}

;
; DUMPING SHADER HARDWARE INSTRUCTIONS 
;
// Shader Type               : (VS)
// Shader Hw Stage           : (VS)

// Shader Instructions:
shader main
  asic(CI)
  type(VS)
  s_swappc_b64  s[0:1], s[0:1]
  s_waitcnt     vmcnt(0)
  v_mul_lo_i32  v24, v16, 3
  v_mul_lo_i32  v11, v17, 3
  s_mov_b32     s0, 0x00024fac
  s_or_b32      s21, s9, 0x00100000 // wrscc
  s_mov_b32     s23, s0
  s_mov_b32     s22, -1
  s_mov_b32     s20, s8
  buffer_load_dwordx4  v[14:17], v24, s[20:23], 0 idxen
  v_add_i32     v25, vcc, 2, v24
  v_add_i32     v28, vcc, 1, v24
  buffer_load_dwordx4  v[24:27], v25, s[20:23], 0 idxen
  buffer_load_dwordx4  v[28:31], v28, s[20:23], 0 idxen
  buffer_load_dwordx4  v[0:3], v11, s[20:23], 0 idxen
  v_mul_lo_i32  v18, v18, 3
  v_mul_lo_i32  v19, v19, 3
  v_add_i32     v36, vcc, 2, v11
  v_add_i32     v11, vcc, 1, v11
  s_mov_b32     s19, s0
  buffer_load_dwordx4  v[32:35], v19, s[20:23], 0 idxen
  buffer_load_dwordx4  v[36:39], v36, s[20:23], 0 idxen
  buffer_load_dwordx4  v[40:43], v18, s[20:23], 0 idxen
  buffer_load_dwordx4  v[44:47], v11, s[20:23], 0 idxen
  v_add_i32     v11, vcc, 2, v18
  v_add_i32     v18, vcc, 1, v18
  buffer_load_dwordx4  v[48:51], v18, s[20:23], 0 idxen
  buffer_load_dwordx4  v[52:55], v11, s[20:23], 0 idxen
  s_mov_b32     s18, -1
  s_or_b32      s17, s7, 0x00100000 // wrscc
  s_mov_b32     s16, s6
  s_buffer_load_dwordx16  s[0:15], s[16:19], 0x4c
  s_buffer_load_dwordx8  s[32:39], s[16:19], 0x5c
  s_buffer_load_dwordx4  s[40:43], s[16:19], 0x64
  s_waitcnt     vmcnt(9)
  v_mul_legacy_f32  v14, v14, v20
  v_mul_legacy_f32  v15, v15, v20
  v_mul_legacy_f32  v16, v16, v20
  s_waitcnt     vmcnt(8)
  v_mul_legacy_f32  v24, v24, v20
  s_waitcnt     vmcnt(7)
  v_mul_legacy_f32  v29, v29, v20
  s_waitcnt     vmcnt(6)
  v_mad_legacy_f32  v0, v0, v21, v14
  v_mul_legacy_f32  v14, v30, v20
  v_add_i32     v30, vcc, 2, v19
  v_add_i32     v19, vcc, 1, v19
  buffer_load_dwordx4  v[56:59], v19, s[20:23], 0 idxen
  buffer_load_dwordx4  v[60:63], v30, s[20:23], 0 idxen
  v_mul_legacy_f32  v28, v28, v20
  v_mad_legacy_f32  v1, v1, v21, v15
  s_waitcnt     vmcnt(5)
  v_mac_legacy_f32  v0, v40, v22
  s_waitcnt     vmcnt(4)
  v_mad_legacy_f32  v15, v44, v21, v28
  v_mad_legacy_f32  v18, v45, v21, v29
  v_mad_legacy_f32  v2, v2, v21, v16
  s_waitcnt     vmcnt(3)
  v_mad_legacy_f32  v11, v49, v22, v18
  v_mad_legacy_f32  v18, v36, v21, v24
  v_mac_legacy_f32  v15, v48, v22
  v_mac_legacy_f32  v1, v41, v22
  v_mul_legacy_f32  v16, v25, v20
  v_mac_legacy_f32  v0, v32, v23
  v_mac_legacy_f32  v14, v46, v21
  v_mac_legacy_f32  v16, v37, v21
  v_mul_legacy_f32  v24, v26, v20
  v_mac_legacy_f32  v2, v42, v22
  v_mul_legacy_f32  v19, v0, v8
  v_mac_legacy_f32  v1, v33, v23
  v_mul_legacy_f32  v17, v17, v20
  s_waitcnt     vmcnt(2)
  v_mac_legacy_f32  v18, v52, v22
  v_mad_legacy_f32  v3, v3, v21, v17
  v_mac_legacy_f32  v14, v50, v22
  v_mac_legacy_f32  v16, v53, v22
  v_mac_legacy_f32  v24, v38, v21
  v_mac_legacy_f32  v2, v34, v23
  v_mac_legacy_f32  v19, v9, v1
  v_mul_legacy_f32  v0, v0, v4
  v_mac_legacy_f32  v19, v10, v2
  v_mac_legacy_f32  v24, v54, v22
  v_mac_legacy_f32  v0, v5, v1
  v_mac_legacy_f32  v3, v43, v22
  s_waitcnt     lgkmcnt(0)
  v_mul_legacy_f32  v26, s4, v19
  v_mac_legacy_f32  v0, v6, v2
  v_mac_legacy_f32  v3, v35, v23
  v_mac_legacy_f32  v0, v7, v3
  v_mul_legacy_f32  v3, s8, v19
  s_waitcnt     vmcnt(1)
  v_mac_legacy_f32  v15, v56, v23
  s_waitcnt     vmcnt(0)
  v_mad_legacy_f32  v17, v60, v23, v18
  v_mul_legacy_f32  v25, v15, v8
  v_mac_legacy_f32  v11, v57, v23
  v_mac_legacy_f32  v14, v58, v23
  v_mac_legacy_f32  v25, v9, v11
  v_mac_legacy_f32  v16, v61, v23
  v_mul_legacy_f32  v8, v17, v8
  v_mac_legacy_f32  v25, v10, v14
  v_mad_legacy_f32  v1, v9, v16, v8
  v_mul_legacy_f32  v9, v15, v4
  v_mul_legacy_f32  v18, v31, v20
  v_mad_legacy_f32  v15, v62, v23, v24
  v_mad_legacy_f32  v8, v47, v21, v18
  v_mad_legacy_f32  v2, v5, v11, v9
  v_mul_legacy_f32  v9, s0, v19
  s_buffer_load_dword  s0, s[16:19], 0x03
  v_mul_legacy_f32  v18, v27, v20
  v_mac_legacy_f32  v1, v10, v15
  v_mad_legacy_f32  v20, v25, s5, v26
  s_buffer_load_dwordx16  s[16:31], s[16:19], 0x38
  v_mul_legacy_f32  v4, v17, v4
  v_mac_legacy_f32  v8, v51, v22
  v_mac_legacy_f32  v9, s1, v25
  v_mad_legacy_f32  v10, v39, v21, v18
  v_mad_legacy_f32  v11, v1, s6, v20
  v_mac_legacy_f32  v4, v5, v16
  v_mad_legacy_f32  v5, v55, v22, v10
  v_mac_legacy_f32  v2, v6, v14
  v_mac_legacy_f32  v8, v59, v23
  v_mac_legacy_f32  v3, s9, v25
  v_mac_legacy_f32  v9, s2, v1
  v_mul_legacy_f32  v10, v11, v11
  v_mac_legacy_f32  v4, v6, v15
  v_mac_legacy_f32  v2, v7, v8
  v_mul_legacy_f32  v6, s12, v0
  v_mul_legacy_f32  v14, s32, v0
  v_mul_legacy_f32  v15, s36, v0
  v_mul_legacy_f32  v16, s40, v0
  v_mad_legacy_f32  v8, v9, v9, v10
  v_mac_legacy_f32  v5, v63, v23
  v_mad_legacy_f32  v1, v1, s10, v3
  v_mad_legacy_f32  v10, v2, s41, v16
  v_mad_legacy_f32  v3, v7, v5, v4
  v_mad_legacy_f32  v4, v1, v1, v8
  v_mac_legacy_f32  v15, s37, v2
  v_mac_legacy_f32  v6, s13, v2
  v_mac_legacy_f32  v14, s33, v2
  v_mad_legacy_f32  v5, v3, s14, v6
  v_mad_legacy_f32  v6, v3, s34, v14
  v_mad_legacy_f32  v8, v3, s38, v15
  v_mac_legacy_f32  v10, s42, v3
  s_waitcnt     lgkmcnt(0)
  v_mul_legacy_f32  v14, s20, v0
  v_mul_legacy_f32  v15, s24, v0
  v_mul_legacy_f32  v16, s28, v0
  v_rsq_f32     v4, v4
  v_mul_legacy_f32  v17, s19, v7
  v_mac_legacy_f32  v16, s29, v2
  v_mac_legacy_f32  v15, s25, v2
  v_mac_legacy_f32  v14, s21, v2
  v_mul_legacy_f32  v2, s17, v2
  v_mac_legacy_f32  v10, s43, v7
  v_mac_legacy_f32  v8, s39, v7
  v_mac_legacy_f32  v6, s35, v7
  v_mac_legacy_f32  v5, s15, v7
  exp           pos0, v5, v6, v8, v10 done
  s_waitcnt     expcnt(0)
  v_mad_legacy_f32  v5, v3, s22, v14
  v_mad_legacy_f32  v0, v0, s16, v2
  v_mad_legacy_f32  v2, v3, s18, v17
  v_mad_legacy_f32  v6, v3, s26, v15
  v_mad_legacy_f32  v8, v3, s30, v16
  v_add_f32     v0, v0, v2 clamp
  v_mov_b32     v18, 1.0
  v_mov_b32     v19, 0
  v_mad_legacy_f32  v2, v7, s31, v8
  v_mad_legacy_f32  v3, v7, s27, v6
  v_mac_legacy_f32  v5, s23, v7
  exp           param0, v12, v13, v19, v18
  exp           param1, v5, v3, v2, v0
  s_waitcnt     expcnt(0)
  v_mul_legacy_f32  v0, v4, v9
  v_mul_legacy_f32  v1, v4, v1
  v_mul_legacy_f32  v2, v4, v11
  v_mov_b32     v3, s0
  exp           param2, v0, v2, v1, v18
  exp           param3, v18, v18, v18, v3
  s_endpgm      
end


NumVGPR=64,NumSGPR=46,LDS=0,Scratch=0,Occpancy=4

// Shader Type               : (VS)
// Shader Hw Stage           : (ES)

// Shader Instructions:
shader main
  asic(CI)
  type(VS)
  s_swappc_b64  s[0:1], s[0:1]
  s_waitcnt     vmcnt(0)
  v_mul_lo_i32  v32, v16, 3
  v_mul_lo_i32  v11, v17, 3
  s_mov_b32     s2, 0x00024fac
  s_or_b32      s13, s9, 0x00100000 // wrscc
  s_mov_b32     s15, s2
  s_mov_b32     s14, -1
  s_mov_b32     s12, s8
  buffer_load_dwordx4  v[14:17], v32, s[12:15], 0 idxen
  buffer_load_dwordx4  v[0:3], v11, s[12:15], 0 idxen
  v_mul_lo_i32  v18, v18, 3
  v_mul_lo_i32  v19, v19, 3
  v_add_i32     v33, vcc, 2, v32
  v_add_i32     v36, vcc, 1, v32
  buffer_load_dwordx4  v[32:35], v33, s[12:15], 0 idxen
  buffer_load_dwordx4  v[24:27], v19, s[12:15], 0 idxen
  buffer_load_dwordx4  v[28:31], v18, s[12:15], 0 idxen
  buffer_load_dwordx4  v[36:39], v36, s[12:15], 0 idxen
  s_mov_b32     s31, s2
  s_mov_b32     s30, -1
  s_mov_b32     s28, s6
  s_or_b32      s29, s7, 0x00100000 // wrscc
  s_buffer_load_dwordx8  s[44:51], s[28:31], 0x5c
  s_mov_b32     s1, 0
  s_buffer_load_dwordx4  s[4:7], s[28:31], 0x64
  s_waitcnt     vmcnt(5)
  v_mul_legacy_f32  v14, v14, v20
  s_waitcnt     vmcnt(4)
  v_mad_legacy_f32  v0, v0, v21, v14
  v_mul_legacy_f32  v14, v15, v20
  v_add_i32     v15, vcc, 2, v11
  v_add_i32     v11, vcc, 1, v11
  v_mad_legacy_f32  v1, v1, v21, v14
  buffer_load_dwordx4  v[40:43], v15, s[12:15], 0 idxen
  buffer_load_dwordx4  v[44:47], v11, s[12:15], 0 idxen
  v_add_i32     v14, vcc, 1, v18
  buffer_load_dwordx4  v[48:51], v14, s[12:15], 0 idxen
  s_waitcnt     vmcnt(4)
  v_mac_legacy_f32  v0, v28, v22
  v_add_i32     v11, vcc, 2, v18
  v_mad_legacy_f32  v18, v24, v23, v0
  v_mac_legacy_f32  v1, v29, v22
  s_waitcnt     vmcnt(3)
  v_mul_legacy_f32  v0, v36, v20
  v_mul_legacy_f32  v15, v17, v20
  v_mad_legacy_f32  v28, v3, v21, v15
  v_mul_legacy_f32  v3, v32, v20
  v_add_i32     v24, vcc, 2, v19
  v_mad_legacy_f32  v25, v25, v23, v1
  v_mul_legacy_f32  v1, v16, v20
  v_add_i32     v19, vcc, 1, v19
  v_mul_legacy_f32  v32, v37, v20
  buffer_load_dwordx4  v[14:17], v11, s[12:15], 0 idxen
  v_mad_legacy_f32  v11, v2, v21, v1
  v_mul_legacy_f32  v33, v33, v20
  v_mul_legacy_f32  v29, v18, v4
  v_mac_legacy_f32  v11, v30, v22
  v_mul_legacy_f32  v30, v34, v20
  v_mac_legacy_f32  v28, v31, v22
  v_mac_legacy_f32  v29, v5, v25
  v_mac_legacy_f32  v11, v26, v23
  v_mul_legacy_f32  v18, v18, v8
  v_mac_legacy_f32  v18, v9, v25
  s_waitcnt     vmcnt(3)
  v_mad_legacy_f32  v40, v40, v21, v3
  s_waitcnt     vmcnt(2)
  v_mac_legacy_f32  v0, v44, v21
  v_mac_legacy_f32  v32, v45, v21
  s_waitcnt     vmcnt(1)
  v_mad_legacy_f32  v44, v48, v22, v0
  buffer_load_dwordx4  v[0:3], v19, s[12:15], 0 idxen
  v_mul_legacy_f32  v19, v39, v20
  v_mul_legacy_f32  v45, v38, v20
  buffer_load_dwordx4  v[36:39], v24, s[12:15], 0 idxen
  s_buffer_load_dwordx16  s[12:27], s[28:31], 0x4c
  v_mad_legacy_f32  v24, v49, v22, v32
  v_mad_legacy_f32  v31, v41, v21, v33
  v_mad_legacy_f32  v32, v46, v21, v45
  v_mac_legacy_f32  v19, v47, v21
  v_mul_legacy_f32  v20, v35, v20
  v_mac_legacy_f32  v30, v42, v21
  v_mac_legacy_f32  v20, v43, v21
  v_mac_legacy_f32  v19, v51, v22
  s_waitcnt     vmcnt(2)
  v_mad_legacy_f32  v14, v14, v22, v40
  v_mad_legacy_f32  v15, v15, v22, v31
  v_mad_legacy_f32  v31, v50, v22, v32
  v_mad_legacy_f32  v16, v16, v22, v30
  v_mad_legacy_f32  v21, v27, v23, v28
  s_buffer_load_dword  s8, s[28:31], 0x03
  s_buffer_load_dwordx16  s[28:43], s[28:31], 0x38
  v_mad_legacy_f32  v17, v17, v22, v20
  s_load_dwordx4  s[0:3], s[0:1], 0x08
  s_waitcnt     vmcnt(1)
  v_mad_legacy_f32  v0, v0, v23, v44
  v_mul_legacy_f32  v33, v0, v4
  v_mad_legacy_f32  v1, v1, v23, v24
  s_waitcnt     vmcnt(0)
  v_mac_legacy_f32  v14, v36, v23
  v_mad_legacy_f32  v24, v6, v11, v29
  v_mad_legacy_f32  v26, v5, v1, v33
  v_mul_legacy_f32  v4, v14, v4
  v_mac_legacy_f32  v15, v37, v23
  v_mad_legacy_f32  v2, v2, v23, v31
  v_mac_legacy_f32  v4, v5, v15
  v_mac_legacy_f32  v16, v38, v23
  v_mad_legacy_f32  v5, v6, v2, v26
  v_mad_legacy_f32  v3, v3, v23, v19
  v_mad_legacy_f32  v21, v7, v21, v24
  v_mac_legacy_f32  v4, v6, v16
  v_mad_legacy_f32  v3, v7, v3, v5
  s_waitcnt     lgkmcnt(0)
  v_mul_legacy_f32  v6, s24, v21
  v_mad_legacy_f32  v5, v39, v23, v17
  v_mac_legacy_f32  v4, v7, v5
  v_mac_legacy_f32  v6, s25, v3
  v_mul_legacy_f32  v5, s44, v21
  v_mac_legacy_f32  v6, s26, v4
  v_mac_legacy_f32  v5, s45, v3
  v_mul_legacy_f32  v17, s48, v21
  v_mac_legacy_f32  v5, s46, v4
  v_mac_legacy_f32  v6, s27, v7
  v_mac_legacy_f32  v17, s49, v3
  v_mul_legacy_f32  v19, s4, v21
  v_mul_legacy_f32  v0, v0, v8
  buffer_store_dword  v6, v0, s[0:3], s10 offset:64 glc slc
  v_mac_legacy_f32  v5, s47, v7
  v_mad_legacy_f32  v6, v4, s50, v17
  v_mad_legacy_f32  v17, v3, s5, v19
  v_mac_legacy_f32  v0, v9, v1
  v_mul_legacy_f32  v8, v14, v8
  buffer_store_dword  v5, v0, s[0:3], s10 offset:68 glc slc
  v_mad_legacy_f32  v5, v7, s51, v6
  v_mad_legacy_f32  v1, v10, v11, v18
  v_mad_legacy_f32  v6, v4, s6, v17
  v_mac_legacy_f32  v8, v9, v15
  v_mac_legacy_f32  v0, v10, v2
  buffer_store_dword  v5, v0, s[0:3], s10 offset:72 glc slc
  v_mad_legacy_f32  v2, v7, s7, v6
  v_mul_legacy_f32  v9, s16, v1
  v_mul_legacy_f32  v5, s32, v21
  buffer_store_dword  v2, v0, s[0:3], s10 offset:76 glc slc
  v_mad_legacy_f32  v2, v3, s33, v5
  v_mul_legacy_f32  v5, s36, v21
  v_mad_legacy_f32  v6, v0, s17, v9
  v_mul_legacy_f32  v9, s12, v1
  v_mac_legacy_f32  v8, v10, v16
  v_mac_legacy_f32  v9, s13, v0
  v_mac_legacy_f32  v2, s34, v4
  v_mac_legacy_f32  v5, s37, v3
  v_mac_legacy_f32  v6, s18, v8
  v_mul_legacy_f32  v1, s20, v1
  v_mad_legacy_f32  v0, v0, s21, v1
  v_mac_legacy_f32  v9, s14, v8
  v_mul_legacy_f32  v11, v6, v6
  v_mac_legacy_f32  v2, s35, v7
  v_mac_legacy_f32  v5, s38, v4
  buffer_store_dword  v12, v0, s[0:3], s10 glc slc
  buffer_store_dword  v13, v0, s[0:3], s10 offset:4 glc slc
  buffer_store_dword  v2, v0, s[0:3], s10 offset:16 glc slc
  v_mad_legacy_f32  v2, v7, s39, v5
  v_mac_legacy_f32  v11, v9, v9
  v_mac_legacy_f32  v0, s22, v8
  buffer_store_dword  v2, v0, s[0:3], s10 offset:20 glc slc
  v_mad_legacy_f32  v2, v0, v0, v11
  v_mul_legacy_f32  v10, s40, v21
  v_rsq_f32     v2, v2
  v_mac_legacy_f32  v10, s41, v3
  v_mul_legacy_f32  v1, s31, v7
  v_mul_legacy_f32  v3, s29, v3
  v_mad_legacy_f32  v5, v4, s42, v10
  v_mac_legacy_f32  v3, s28, v21
  v_mac_legacy_f32  v1, s30, v4
  v_mac_legacy_f32  v5, s43, v7
  v_add_f32     v1, v3, v1 clamp
  buffer_store_dword  v5, v0, s[0:3], s10 offset:24 glc slc
  buffer_store_dword  v1, v0, s[0:3], s10 offset:28 glc slc
  v_mul_legacy_f32  v1, v2, v9
  buffer_store_dword  v1, v0, s[0:3], s10 offset:32 glc slc
  v_mul_legacy_f32  v1, v2, v6
  buffer_store_dword  v1, v0, s[0:3], s10 offset:36 glc slc
  v_mul_legacy_f32  v0, v2, v0
  v_mov_b32     v1, 1.0
  buffer_store_dword  v0, v0, s[0:3], s10 offset:40 glc slc
  buffer_store_dword  v1, v0, s[0:3], s10 offset:48 glc slc
  buffer_store_dword  v1, v0, s[0:3], s10 offset:52 glc slc
  v_mov_b32     v0, s8
  buffer_store_dword  v1, v0, s[0:3], s10 offset:56 glc slc
  buffer_store_dword  v0, v0, s[0:3], s10 offset:60 glc slc
  s_endpgm      
end


NumVGPR=52,NumSGPR=54,LDS=0,Scratch=0,Occpancy=4

// Shader Type               : (VS)
// Shader Hw Stage           : (LS)

// Shader Instructions:
shader main
  asic(CI)
  type(VS)
  s_swappc_b64  s[0:1], s[0:1]
  s_waitcnt     vmcnt(0)
  v_mul_lo_i32  v2, v16, 3
  v_mul_lo_i32  v0, v17, 3
  s_mov_b32     s0, 0x00024fac
  s_mov_b32     s19, s0
  s_mov_b32     s18, -1
  s_mov_b32     s16, s8
  s_or_b32      s17, s9, 0x00100000 // wrscc
  buffer_load_dwordx4  v[14:17], v2, s[16:19], 0 idxen
  buffer_load_dwordx4  v[24:27], v0, s[16:19], 0 idxen
  v_mul_lo_i32  v3, v18, 3
  v_mul_lo_i32  v11, v19, 3
  v_add_i32     v18, vcc, 2, v2
  v_add_i32     v2, vcc, 1, v2
  buffer_load_dwordx4  v[28:31], v18, s[16:19], 0 idxen
  buffer_load_dwordx4  v[32:35], v2, s[16:19], 0 idxen
  v_add_i32     v2, vcc, 2, v0
  v_add_i32     v0, vcc, 1, v0
  buffer_load_dwordx4  v[36:39], v11, s[16:19], 0 idxen
  buffer_load_dwordx4  v[40:43], v2, s[16:19], 0 idxen
  buffer_load_dwordx4  v[44:47], v3, s[16:19], 0 idxen
  buffer_load_dwordx4  v[48:51], v0, s[16:19], 0 idxen
  v_add_i32     v2, vcc, 1, v3
  v_add_i32     v0, vcc, 2, v3
  buffer_load_dwordx4  v[52:55], v2, s[16:19], 0 idxen
  buffer_load_dwordx4  v[56:59], v0, s[16:19], 0 idxen
  s_mov_b32     s35, s0
  s_mov_b32     s34, -1
  s_or_b32      s33, s7, 0x00100000 // wrscc
  s_mov_b32     s32, s6
  s_buffer_load_dwordx16  s[0:15], s[32:35], 0x4c
  s_mov_b32     m0, -1
  s_waitcnt     vmcnt(9)
  v_mul_legacy_f32  v14, v14, v20
  s_waitcnt     vmcnt(8)
  v_mad_legacy_f32  v3, v24, v21, v14
  v_add_i32     v24, vcc, 2, v11
  v_add_i32     v11, vcc, 1, v11
  buffer_load_dwordx4  v[64:67], v24, s[16:19], 0 idxen
  buffer_load_dwordx4  v[60:63], v11, s[16:19], 0 idxen
  v_mul_legacy_f32  v15, v15, v20
  s_waitcnt     vmcnt(8)
  v_mul_legacy_f32  v18, v33, v20
  v_mul_legacy_f32  v19, v32, v20
  v_mac_legacy_f32  v15, v25, v21
  v_mul_legacy_f32  v16, v16, v20
  v_mac_legacy_f32  v16, v26, v21
  s_waitcnt     vmcnt(5)
  v_mad_legacy_f32  v11, v45, v22, v15
  s_waitcnt     vmcnt(4)
  v_mad_legacy_f32  v2, v49, v21, v18
  v_mad_legacy_f32  v18, v48, v21, v19
  v_mul_legacy_f32  v19, v28, v20
  s_waitcnt     vmcnt(3)
  v_mad_legacy_f32  v0, v53, v22, v2
  v_mad_legacy_f32  v2, v52, v22, v18
  v_mac_legacy_f32  v3, v44, v22
  v_mul_legacy_f32  v15, v29, v20
  v_mad_legacy_f32  v18, v40, v21, v19
  v_mul_legacy_f32  v14, v34, v20
  v_mac_legacy_f32  v15, v41, v21
  s_waitcnt     vmcnt(2)
  v_mac_legacy_f32  v18, v56, v22
  v_mul_legacy_f32  v24, v30, v20
  v_mac_legacy_f32  v3, v36, v23
  v_mac_legacy_f32  v14, v50, v21
  v_mac_legacy_f32  v16, v46, v22
  v_mac_legacy_f32  v15, v57, v22
  v_mul_legacy_f32  v17, v17, v20
  v_mac_legacy_f32  v24, v42, v21
  v_mul_legacy_f32  v19, v3, v8
  v_mac_legacy_f32  v11, v37, v23
  v_mac_legacy_f32  v14, v54, v22
  v_mac_legacy_f32  v16, v38, v23
  v_mac_legacy_f32  v19, v9, v11
  v_mac_legacy_f32  v17, v27, v21
  v_mac_legacy_f32  v24, v58, v22
  v_mul_legacy_f32  v3, v3, v4
  v_mac_legacy_f32  v19, v10, v16
  v_mul_legacy_f32  v26, v35, v20
  v_mac_legacy_f32  v3, v5, v11
  v_mad_legacy_f32  v11, v51, v21, v26
  s_waitcnt     lgkmcnt(0)
  v_mul_legacy_f32  v27, s4, v19
  v_mul_legacy_f32  v20, v31, v20
  v_mac_legacy_f32  v3, v6, v16
  v_mac_legacy_f32  v11, v55, v22
  s_waitcnt     vmcnt(1)
  v_mac_legacy_f32  v18, v64, v23
  s_waitcnt     vmcnt(0)
  v_mac_legacy_f32  v2, v60, v23
  v_mul_legacy_f32  v25, v2, v8
  v_mac_legacy_f32  v0, v61, v23
  v_mac_legacy_f32  v15, v65, v23
  v_mul_legacy_f32  v8, v18, v8
  v_mul_legacy_f32  v2, v2, v4
  v_mac_legacy_f32  v25, v9, v0
  v_mac_legacy_f32  v14, v62, v23
  v_mac_legacy_f32  v8, v9, v15
  v_mad_legacy_f32  v9, v47, v22, v17
  v_mad_legacy_f32  v17, v66, v23, v24
  v_mad_legacy_f32  v0, v5, v0, v2
  v_mac_legacy_f32  v25, v10, v14
  v_mad_legacy_f32  v2, v10, v17, v8
  v_mul_legacy_f32  v8, s0, v19
  s_buffer_load_dword  s0, s[32:35], 0x03
  s_buffer_load_dwordx16  s[16:31], s[32:35], 0x38
  s_buffer_load_dwordx4  s[40:43], s[32:35], 0x64
  s_buffer_load_dwordx8  s[32:39], s[32:35], 0x5c
  v_mul_legacy_f32  v4, v18, v4
  v_mad_legacy_f32  v24, v25, s5, v27
  v_mad_legacy_f32  v10, v43, v21, v20
  v_mac_legacy_f32  v9, v39, v23
  v_mac_legacy_f32  v8, s1, v25
  v_mac_legacy_f32  v4, v5, v15
  v_mad_legacy_f32  v5, v7, v9, v3
  v_mul_legacy_f32  v3, s8, v19
  v_mac_legacy_f32  v0, v6, v14
  v_mad_legacy_f32  v9, v59, v22, v10
  v_mad_legacy_f32  v10, v63, v23, v11
  v_mad_legacy_f32  v16, v2, s6, v24
  v_mac_legacy_f32  v4, v6, v17
  v_mad_legacy_f32  v10, v7, v10, v0
  v_mac_legacy_f32  v3, s9, v25
  v_mac_legacy_f32  v8, s2, v2
  v_mul_legacy_f32  v11, v16, v16
  v_mul_legacy_f32  v17, s12, v5
  v_mad_legacy_f32  v0, v67, v23, v9
  v_mad_legacy_f32  v9, v8, v8, v11
  v_mad_legacy_f32  v11, v10, s13, v17
  v_mad_legacy_f32  v17, v2, s10, v3
  s_movk_i32    s1, 0x0050
  s_waitcnt     lgkmcnt(0)
  v_mul_legacy_f32  v6, s32, v5
  v_mul_legacy_f32  v14, s36, v5
  v_mul_legacy_f32  v15, s40, v5
  v_mad_legacy_f32  v2, v17, v17, v9
  v_mul_lo_i32  v19, v1, s1
  v_mac_legacy_f32  v4, v7, v0
  v_mac_legacy_f32  v6, s33, v10
  v_mac_legacy_f32  v15, s41, v10
  v_mac_legacy_f32  v14, s37, v10
  v_mul_legacy_f32  v0, s28, v5
  v_rsq_f32     v20, v2
  v_mad_legacy_f32  v3, v4, s42, v15
  v_mad_legacy_f32  v9, v4, s38, v14
  v_mac_legacy_f32  v6, s34, v4
  v_mac_legacy_f32  v11, s14, v4
  v_mad_legacy_f32  v14, v10, s29, v0
  v_mul_legacy_f32  v15, s17, v10
  v_mad_legacy_f32  v2, v7, s39, v9
  v_mad_legacy_f32  v1, v7, s35, v6
  v_mad_legacy_f32  v6, v4, s30, v14
  v_mul_legacy_f32  v18, s19, v7
  v_mad_legacy_f32  v0, v7, s15, v11
  v_mac_legacy_f32  v3, s43, v7
  v_mad_legacy_f32  v9, v5, s16, v15
  v_mul_legacy_f32  v14, s20, v5
  v_mul_legacy_f32  v5, s24, v5
  ds_write2_b64  v19, v[0:1], v[2:3] offset0:8 offset1:9
  v_mad_legacy_f32  v2, v10, s25, v5
  v_mad_legacy_f32  v11, v4, s18, v18
  v_mad_legacy_f32  v3, v10, s21, v14
  v_mad_legacy_f32  v0, v7, s31, v6
  v_add_f32     v1, v9, v11 clamp
  v_mad_legacy_f32  v5, v4, s22, v3
  v_mac_legacy_f32  v2, s26, v4
  v_mul_legacy_f32  v4, v20, v17
  ds_write2_b64  v19, v[12:13], v[0:1] offset1:3
  v_mad_legacy_f32  v3, v7, s27, v2
  v_mad_legacy_f32  v2, v7, s23, v5
  ds_write_b32  v19, v4 offset:40
  v_mul_legacy_f32  v1, v20, v16
  v_mul_legacy_f32  v0, v20, v8
  v_mov_b32     v4, 1.0
  v_mov_b32     v7, 1.0
  v_mov_b32     v6, 1.0
  v_mov_b32     v5, s0
  ds_write2_b64  v19, v[2:3], v[0:1] offset0:2 offset1:4
  ds_write2_b64  v19, v[6:7], v[4:5] offset0:6 offset1:7
  s_endpgm      
end


NumVGPR=68,NumSGPR=46,LDS=0,Scratch=0,Occpancy=3


#endif

const unsigned char NormalMapEffect_VSSkinnedPixelLightingTxNoSpec[] = {
  0x44, 0x58, 0x42, 0x43, 0x69, 0x61, 0x95, 0xed, 0x0f, 0x85, 0x93, 0xbc,
  0x9b, 0x98, 0x28, 0x31, 0x2c, 0x15, 0x9f, 0x7b, 0x01, 0x00, 0x00, 0x00,
  0x28, 0x25, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00,
  0x50, 0x00, 0x00, 0x00, 0x38, 0x01, 0x00, 0x00, 0x04, 0x02, 0x00, 0x00,
  0xfc, 0x03, 0x00, 0x00, 0xbc, 0x04, 0x00, 0x00, 0x5c, 0x05, 0x00, 0x00,
  0x78, 0x05, 0x00, 0x00, 0x53, 0x46, 0x49, 0x30, 0x08, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x49, 0x53, 0x47, 0x31,
  0xe0, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xa8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x0f, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xb4, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x07, 0x07, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xbb, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x03, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xc4, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x0f, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xd1, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x0f, 0x0f, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x53, 0x56, 0x5f, 0x50, 0x6f, 0x73, 0x69, 0x74,
  0x69, 0x6f, 0x6e, 0x00, 0x4e, 0x4f, 0x52, 0x4d, 0x41, 0x4c, 0x00, 0x54,
  0x45, 0x58, 0x43, 0x4f, 0x4f, 0x52, 0x44, 0x00, 0x42, 0x4c, 0x45, 0x4e,
  0x44, 0x49, 0x4e, 0x44, 0x49, 0x43, 0x45, 0x53, 0x00, 0x42, 0x4c, 0x45,
  0x4e, 0x44, 0x57, 0x45, 0x49, 0x47, 0x48, 0x54, 0x00, 0x00, 0x00, 0x00,
  0x4f, 0x53, 0x47, 0x31, 0xc4, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00,
  0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xa8, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x03, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xa8, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xa8, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x07, 0x08, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb1, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xb7, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00,
  0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x54, 0x45, 0x58, 0x43,
  0x4f, 0x4f, 0x52, 0x44, 0x00, 0x43, 0x4f, 0x4c, 0x4f, 0x52, 0x00, 0x53,
  0x56, 0x5f, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x00, 0x00,
  0x50, 0x53, 0x56, 0x30, 0xf0, 0x01, 0x00, 0x00, 0x34, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff,
  0x01, 0x00, 0x00, 0x00, 0x05, 0x05, 0x00, 0x05, 0x05, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x57, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x78, 0x00, 0x00, 0x00, 0x00, 0x53, 0x56, 0x5f, 0x50, 0x6f, 0x73, 0x69,
  0x74, 0x69, 0x6f, 0x6e, 0x00, 0x4e, 0x4f, 0x52, 0x4d, 0x41, 0x4c, 0x00,
  0x54, 0x45, 0x58, 0x43, 0x4f, 0x4f, 0x52, 0x44, 0x00, 0x42, 0x4c, 0x45,
  0x4e, 0x44, 0x49, 0x4e, 0x44, 0x49, 0x43, 0x45, 0x53, 0x00, 0x42, 0x4c,
  0x45, 0x4e, 0x44, 0x57, 0x45, 0x49, 0x47, 0x48, 0x54, 0x00, 0x54, 0x45,
  0x58, 0x43, 0x4f, 0x4f, 0x52, 0x44, 0x00, 0x54, 0x45, 0x58, 0x43, 0x4f,
  0x4f, 0x52, 0x44, 0x00, 0x54, 0x45, 0x58, 0x43, 0x4f, 0x4f, 0x52, 0x44,
  0x00, 0x43, 0x4f, 0x4c, 0x4f, 0x52, 0x00, 0x56, 0x53, 0x53, 0x6b, 0x69,
  0x6e, 0x6e, 0x65, 0x64, 0x50, 0x69, 0x78, 0x65, 0x6c, 0x4c, 0x69, 0x67,
  0x68, 0x74, 0x69, 0x6e, 0x67, 0x54, 0x78, 0x4e, 0x6f, 0x53, 0x70, 0x65,
  0x63, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x44, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x01, 0x43, 0x00, 0x03, 0x00, 0x00, 0x00, 0x14, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x02, 0x42, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x1d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x03, 0x44, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x04, 0x44, 0x00, 0x03, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x42, 0x00, 0x03, 0x02, 0x00, 0x00,
  0x3f, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x01, 0x44, 0x00,
  0x03, 0x02, 0x00, 0x00, 0x48, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x01, 0x02, 0x43, 0x00, 0x03, 0x02, 0x00, 0x00, 0x51, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x03, 0x44, 0x00, 0x03, 0x02, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x04, 0x44, 0x03,
  0x03, 0x04, 0x00, 0x00, 0xf0, 0x00, 0x0f, 0x00, 0xf0, 0x00, 0x0f, 0x00,
  0xf0, 0x00, 0x0f, 0x00, 0xf0, 0x00, 0x0f, 0x00, 0x00, 0x07, 0x00, 0x00,
  0x00, 0x07, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xf0, 0x07, 0x0f, 0x00, 0xf0, 0x07, 0x0f, 0x00,
  0xf0, 0x07, 0x0f, 0x00, 0xf0, 0x07, 0x0f, 0x00, 0xf0, 0x07, 0x0f, 0x00,
  0xf0, 0x07, 0x0f, 0x00, 0xf0, 0x07, 0x0f, 0x00, 0xf0, 0x07, 0x0f, 0x00,
  0x52, 0x54, 0x53, 0x30, 0xb8, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x05, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xb8, 0x00, 0x00, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x05, 0x00, 0x00, 0x00, 0x54, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x05, 0x00, 0x00, 0x00, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x05, 0x00, 0x00, 0x00, 0x8c, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xa8, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0xb0, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x5c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff,
  0x01, 0x00, 0x00, 0x00, 0x78, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xff, 0xff, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x94, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x49, 0x4c, 0x44, 0x4e, 0x98, 0x00, 0x00, 0x00, 0x00, 0x00, 0x93, 0x00,
  0x43, 0x3a, 0x5c, 0x55, 0x73, 0x65, 0x72, 0x73, 0x5c, 0x6d, 0x61, 0x72,
  0x63, 0x75, 0x5c, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x73,
  0x5c, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x58, 0x54, 0x4b, 0x31, 0x32,
  0x2d, 0x6d, 0x61, 0x69, 0x6e, 0x5c, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74,
  0x58, 0x54, 0x4b, 0x31, 0x32, 0x2d, 0x6d, 0x61, 0x69, 0x6e, 0x5c, 0x53,
  0x72, 0x63, 0x2f, 0x53, 0x68, 0x61, 0x64, 0x65, 0x72, 0x73, 0x2f, 0x43,
  0x6f, 0x6d, 0x70, 0x69, 0x6c, 0x65, 0x64, 0x5c, 0x58, 0x62, 0x6f, 0x78,
  0x47, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x58, 0x62, 0x6f, 0x78, 0x4f, 0x6e,
  0x65, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x4d, 0x61, 0x70, 0x45, 0x66,
  0x66, 0x65, 0x63, 0x74, 0x5f, 0x56, 0x53, 0x53, 0x6b, 0x69, 0x6e, 0x6e,
  0x65, 0x64, 0x50, 0x69, 0x78, 0x65, 0x6c, 0x4c, 0x69, 0x67, 0x68, 0x74,
  0x69, 0x6e, 0x67, 0x54, 0x78, 0x4e, 0x6f, 0x53, 0x70, 0x65, 0x63, 0x2e,
  0x70, 0x64, 0x62, 0x00, 0x48, 0x41, 0x53, 0x48, 0x14, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xda, 0xd2, 0xf3, 0x6f, 0x36, 0xd4, 0x2d, 0x4c,
  0x49, 0x72, 0x2b, 0x4e, 0xcc, 0x77, 0xd5, 0x0b, 0x44, 0x58, 0x49, 0x4c,
  0xa8, 0x1f, 0x00, 0x00, 0x60, 0x00, 0x01, 0x00, 0xea, 0x07, 0x00, 0x00,
  0x44, 0x58, 0x49, 0x4c, 0x00, 0x01, 0x00, 0x00, 0x94, 0x00, 0x00, 0x00,
  0xa0, 0x10, 0x00, 0x00, 0x58, 0x44, 0x41, 0x54, 0x08, 0x00, 0x00, 0x00,
  0x24, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x84, 0x00, 0x00, 0x00,
  0xb8, 0x10, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x3c, 0x11, 0x00, 0x00,
  0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x4c, 0x11, 0x00, 0x00,
  0x2c, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0x15, 0x00, 0x00,
  0x5f, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xd8, 0x19, 0x00, 0x00,
  0x3e, 0x04, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x18, 0x1e, 0x00, 0x00,
  0x20, 0x01, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x38, 0x1f, 0x00, 0x00,
  0x5a, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x94, 0x1f, 0x00, 0x00,
  0x11, 0x00, 0x00, 0x00, 0x60, 0x00, 0x01, 0x00, 0x2e, 0x04, 0x00, 0x00,
  0x44, 0x58, 0x49, 0x4c, 0x00, 0x01, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00,
  0xa0, 0x10, 0x00, 0x00, 0x42, 0x43, 0xc0, 0xde, 0x21, 0x0c, 0x00, 0x00,
  0x25, 0x04, 0x00, 0x00, 0x0b, 0x82, 0x20, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x13, 0x00, 0x00, 0x00, 0x07, 0x81, 0x23, 0x91, 0x41, 0xc8, 0x04, 0x49,
  0x06, 0x10, 0x32, 0x39, 0x92, 0x01, 0x84, 0x0c, 0x25, 0x05, 0x08, 0x19,
  0x1e, 0x04, 0x8b, 0x62, 0x80, 0x18, 0x45, 0x02, 0x42, 0x92, 0x0b, 0x42,
  0xc4, 0x10, 0x32, 0x14, 0x38, 0x08, 0x18, 0x4b, 0x0a, 0x32, 0x62, 0x88,
  0x48, 0x90, 0x14, 0x20, 0x43, 0x46, 0x88, 0xa5, 0x00, 0x19, 0x32, 0x42,
  0xe4, 0x48, 0x0e, 0x90, 0x11, 0x23, 0xc4, 0x50, 0x41, 0x51, 0x81, 0x8c,
  0xe1, 0x83, 0xe5, 0x8a, 0x04, 0x31, 0x46, 0x06, 0x51, 0x18, 0x00, 0x00,
  0x08, 0x00, 0x00, 0x00, 0x1b, 0x8c, 0xe0, 0xff, 0xff, 0xff, 0xff, 0x07,
  0x40, 0x02, 0xa8, 0x0d, 0x84, 0xf0, 0xff, 0xff, 0xff, 0xff, 0x03, 0x20,
  0x6d, 0x30, 0x86, 0xff, 0xff, 0xff, 0xff, 0x1f, 0x00, 0x09, 0xa8, 0x00,
  0x49, 0x18, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x13, 0x82, 0x60, 0x42,
  0x20, 0x4c, 0x08, 0x06, 0x00, 0x00, 0x00, 0x00, 0x89, 0x20, 0x00, 0x00,
  0x39, 0x00, 0x00, 0x00, 0x32, 0x22, 0x88, 0x09, 0x20, 0x64, 0x85, 0x04,
  0x13, 0x23, 0xa4, 0x84, 0x04, 0x13, 0x23, 0xe3, 0x84, 0xa1, 0x90, 0x14,
  0x12, 0x4c, 0x8c, 0x8c, 0x0b, 0x84, 0xc4, 0x4c, 0x10, 0xa0, 0xc1, 0x08,
  0x40, 0x09, 0x00, 0x0a, 0x66, 0x00, 0xe6, 0x08, 0xc0, 0x60, 0x8e, 0x00,
  0x29, 0xc6, 0x40, 0x10, 0x44, 0x41, 0x90, 0x51, 0x0c, 0x82, 0x20, 0x88,
  0x82, 0x20, 0xa4, 0x18, 0x00, 0x41, 0x10, 0xc5, 0x40, 0x4a, 0x41, 0x06,
  0x62, 0x18, 0x86, 0x61, 0x18, 0x88, 0x29, 0xc3, 0x40, 0x0c, 0xe4, 0x14,
  0x65, 0x20, 0x86, 0x61, 0x18, 0x86, 0x61, 0x18, 0x08, 0x3a, 0x6a, 0xb8,
  0xfc, 0x09, 0x7b, 0x08, 0xc9, 0xe7, 0x36, 0xaa, 0x58, 0x89, 0xc9, 0x2f,
  0x6e, 0x1b, 0x11, 0xc3, 0x30, 0x0c, 0x54, 0xdc, 0x33, 0x5c, 0xfe, 0x84,
  0x3d, 0x84, 0xe4, 0x87, 0x40, 0x33, 0x2c, 0x04, 0x0a, 0xa6, 0x42, 0x48,
  0x04, 0x45, 0x50, 0x55, 0x8a, 0x81, 0x18, 0x86, 0x81, 0xae, 0x39, 0x82,
  0xa0, 0x18, 0x14, 0x51, 0x10, 0x44, 0x46, 0xda, 0x40, 0xc0, 0x30, 0x02,
  0x31, 0x0c, 0x23, 0x0c, 0x43, 0x0e, 0x78, 0x49, 0xd0, 0x5d, 0x75, 0x38,
  0xd2, 0xb4, 0x00, 0x98, 0x43, 0x4d, 0x7e, 0x0a, 0x44, 0x00, 0x43, 0x4c,
  0x44, 0x24, 0xa1, 0xa6, 0xf3, 0xbc, 0xe1, 0xfb, 0x3e, 0xcf, 0xeb, 0xc0,
  0x0f, 0xa4, 0x30, 0x07, 0xba, 0x44, 0x1a, 0xaf, 0x3b, 0x1c, 0x69, 0x5a,
  0x00, 0xcc, 0xa1, 0x26, 0x9f, 0x55, 0x90, 0xa6, 0x41, 0x1a, 0x23, 0x05,
  0x22, 0x80, 0x21, 0x26, 0x22, 0x92, 0x50, 0x40, 0x52, 0x99, 0x16, 0x04,
  0x00, 0x00, 0x00, 0x00, 0x13, 0x16, 0x72, 0xc0, 0x87, 0x74, 0x60, 0x87,
  0x36, 0x68, 0x87, 0x79, 0x68, 0x03, 0x7c, 0x10, 0x87, 0x38, 0xd8, 0xf0,
  0x0a, 0xe5, 0xd0, 0x06, 0xed, 0xa0, 0x07, 0xe5, 0xd0, 0x06, 0xf0, 0xa0,
  0x07, 0x73, 0x20, 0x07, 0x7a, 0x30, 0x07, 0x72, 0xd0, 0x06, 0xe9, 0x10,
  0x07, 0x7a, 0x30, 0x07, 0x72, 0xd0, 0x06, 0xe9, 0x80, 0x07, 0x7a, 0x30,
  0x07, 0x72, 0xd0, 0x06, 0xe9, 0x10, 0x07, 0x76, 0xa0, 0x07, 0x73, 0x20,
  0x07, 0x6d, 0x90, 0x0e, 0x73, 0x20, 0x07, 0x7a, 0x30, 0x07, 0x72, 0xd0,
  0x06, 0xe9, 0x60, 0x07, 0x74, 0xa0, 0x07, 0x76, 0x40, 0x07, 0x6d, 0x60,
  0x0e, 0x71, 0x60, 0x07, 0x7a, 0x30, 0x07, 0x72, 0xd0, 0x06, 0xe6, 0x30,
  0x07, 0x72, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x60, 0x0e, 0x76, 0x40,
  0x07, 0x7a, 0x60, 0x07, 0x74, 0xd0, 0x06, 0xee, 0x80, 0x07, 0x7a, 0x10,
  0x07, 0x76, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x7a, 0x60, 0x07, 0x74, 0x30,
  0xe4, 0x09, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x60, 0xc8, 0x63, 0x00, 0x01, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0xc0, 0x90, 0x07, 0x01, 0x02, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x80, 0x21, 0x8f, 0x02, 0x04, 0x80, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x43, 0x1e, 0x06, 0x08, 0x80, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x86, 0x3c, 0x0e, 0x10, 0x00, 0x01, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x79, 0x20, 0x20, 0x00, 0x02,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0xf2, 0x54, 0x40, 0x00,
  0x0c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0xe4, 0xb9, 0x80,
  0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0xc8, 0xa3,
  0x01, 0x01, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x16,
  0x08, 0x00, 0x00, 0x00, 0x1b, 0x00, 0x00, 0x00, 0x32, 0x1e, 0x98, 0x14,
  0x19, 0x11, 0x4c, 0x90, 0x8c, 0x09, 0x26, 0x47, 0xc6, 0x04, 0x43, 0x22,
  0x4a, 0x60, 0x04, 0xa0, 0x20, 0x8a, 0xa1, 0x80, 0x0d, 0x0a, 0xd0, 0xa6,
  0x0c, 0xca, 0xa3, 0x1c, 0x8a, 0xa0, 0x10, 0xa8, 0x28, 0x89, 0x11, 0x80,
  0x42, 0x28, 0x83, 0x22, 0x28, 0x05, 0x12, 0x67, 0x00, 0xc8, 0x9c, 0x01,
  0xa0, 0x73, 0x2c, 0x8b, 0xa2, 0xe0, 0x13, 0xf4, 0xe0, 0x13, 0xf4, 0xe0,
  0x13, 0xf4, 0xe0, 0x13, 0xf4, 0x40, 0x3c, 0x00, 0xf1, 0x00, 0xc4, 0x03,
  0x20, 0x10, 0x00, 0x00, 0xfe, 0x43, 0x0f, 0xfe, 0x43, 0x0f, 0xfe, 0x43,
  0x0f, 0xfe, 0x43, 0x0f, 0xfe, 0x43, 0x0f, 0xfe, 0x43, 0x0f, 0xfe, 0x43,
  0x0f, 0xfe, 0x43, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x79, 0x18, 0x00, 0x00,
  0x9c, 0x00, 0x00, 0x00, 0x1a, 0x03, 0x4c, 0x90, 0x46, 0x02, 0x13, 0xc4,
  0x36, 0xf8, 0xfa, 0xc2, 0x12, 0x7a, 0xc2, 0xfa, 0x82, 0x2a, 0x92, 0xfa,
  0xa2, 0x42, 0x92, 0x2a, 0x0a, 0x22, 0xfa, 0x9a, 0x1a, 0x92, 0x0a, 0xa2,
  0x1a, 0x42, 0xfa, 0x9a, 0x4a, 0xd2, 0x2a, 0xfa, 0x62, 0x4a, 0x6a, 0x4a,
  0xa2, 0xfa, 0x4a, 0x72, 0xfa, 0x12, 0xca, 0xa2, 0x2a, 0x9a, 0x62, 0x00,
  0xb3, 0x41, 0x08, 0x04, 0x76, 0x64, 0x78, 0x63, 0x78, 0x62, 0x6f, 0x78,
  0x20, 0x32, 0x34, 0x31, 0x30, 0x2e, 0x32, 0x34, 0x31, 0x30, 0x2e, 0x31,
  0x31, 0x31, 0x31, 0x36, 0x2e, 0x31, 0x30, 0x37, 0x34, 0x31, 0x1b, 0x02,
  0x62, 0x82, 0x40, 0x28, 0x13, 0x04, 0x62, 0xd9, 0x20, 0x18, 0xc7, 0x04,
  0x81, 0x60, 0x36, 0x08, 0x46, 0x42, 0xc1, 0x6e, 0x6e, 0x82, 0x40, 0x34,
  0x1b, 0x86, 0x85, 0x39, 0x26, 0x08, 0x62, 0xb0, 0x11, 0x98, 0x20, 0x10,
  0xce, 0x06, 0xe4, 0x70, 0x9e, 0xe3, 0x30, 0x20, 0x60, 0x82, 0x60, 0x06,
  0xdc, 0x04, 0x81, 0x78, 0x36, 0x20, 0x86, 0xf4, 0x1c, 0x86, 0x31, 0x01,
  0x1b, 0x84, 0x88, 0xda, 0x40, 0x00, 0x40, 0x05, 0x4c, 0x10, 0xce, 0xa0,
  0xdb, 0x10, 0x5c, 0x13, 0x04, 0x01, 0xa0, 0x67, 0x35, 0x35, 0xb5, 0x96,
  0xe6, 0xe6, 0x56, 0x46, 0x06, 0x95, 0x86, 0x57, 0xc6, 0xc6, 0x94, 0x76,
  0x86, 0x46, 0x97, 0xe6, 0x76, 0x46, 0x85, 0xe7, 0xf4, 0x36, 0x05, 0x57,
  0x36, 0xc6, 0x65, 0xca, 0xea, 0x0b, 0xea, 0x6d, 0x2e, 0x8d, 0x2e, 0xed,
  0xcd, 0x6d, 0x82, 0x50, 0x54, 0x13, 0x84, 0xc2, 0xda, 0x10, 0x1c, 0x13,
  0x84, 0xe2, 0x9a, 0x20, 0x10, 0xd0, 0x04, 0x81, 0x88, 0x36, 0x08, 0x60,
  0x10, 0x06, 0x1b, 0x96, 0x63, 0xe3, 0x3a, 0xaf, 0x33, 0xbe, 0xa3, 0x13,
  0x03, 0x1a, 0x4e, 0x4f, 0x52, 0x4d, 0x41, 0x4c, 0x13, 0x84, 0x02, 0x9b,
  0x20, 0x10, 0xd2, 0x06, 0x01, 0x0c, 0xcc, 0x60, 0xc3, 0x62, 0x90, 0x01,
  0xd7, 0x79, 0x9d, 0x51, 0x06, 0x46, 0x77, 0x06, 0x13, 0x04, 0x62, 0x22,
  0x42, 0x55, 0x84, 0x35, 0xf4, 0xf4, 0x24, 0x45, 0x34, 0x41, 0x28, 0xb2,
  0x0d, 0x02, 0x18, 0x80, 0xc1, 0x86, 0x25, 0x0d, 0xd4, 0x80, 0xeb, 0xbc,
  0xce, 0x58, 0x83, 0x34, 0xe8, 0xd8, 0x80, 0x8c, 0x10, 0x53, 0x91, 0x13,
  0x51, 0x92, 0x13, 0x51, 0xd2, 0x50, 0xd1, 0xd4, 0x04, 0xa1, 0xd0, 0x36,
  0x2c, 0x60, 0xe0, 0x06, 0x6f, 0xd0, 0x79, 0x9d, 0xf1, 0x81, 0x41, 0x27,
  0x06, 0x13, 0x04, 0x82, 0xe2, 0x22, 0xc4, 0x54, 0xe4, 0x44, 0x74, 0x55,
  0x94, 0x74, 0x84, 0x44, 0xb5, 0x61, 0x89, 0x03, 0x39, 0xe0, 0x3a, 0xaf,
  0x33, 0xbe, 0x38, 0xe8, 0xc4, 0x60, 0x43, 0x31, 0x06, 0x68, 0xd0, 0x06,
  0x70, 0x30, 0x07, 0x1b, 0x96, 0x43, 0x0d, 0xb8, 0xce, 0x5b, 0x03, 0x63,
  0x0d, 0x8e, 0x8e, 0x0d, 0x36, 0x04, 0xc6, 0x86, 0xc5, 0x50, 0x03, 0xae,
  0xb3, 0x83, 0x35, 0x30, 0x3e, 0xa3, 0x13, 0x83, 0x0d, 0x41, 0x1a, 0x6c,
  0x58, 0xd2, 0x40, 0x0d, 0xb8, 0x0e, 0x0f, 0xd6, 0xc0, 0x28, 0x83, 0x34,
  0xe8, 0xce, 0x80, 0xc5, 0xd0, 0x13, 0xd3, 0x93, 0xd4, 0x86, 0x05, 0x0c,
  0xf4, 0x80, 0xeb, 0xbc, 0x35, 0x30, 0x3e, 0x30, 0xe8, 0xc4, 0x60, 0xc3,
  0x12, 0x07, 0x1b, 0x57, 0x06, 0xde, 0x67, 0x7c, 0x71, 0xd0, 0x89, 0xc1,
  0x86, 0xa2, 0x0e, 0xee, 0x20, 0x0f, 0xf6, 0x80, 0x0f, 0x36, 0x0c, 0x74,
  0xd0, 0x07, 0xc0, 0x86, 0x22, 0xd3, 0xfc, 0xc0, 0x02, 0x5a, 0xe1, 0x89,
  0xbd, 0xe1, 0xb9, 0x8c, 0xbd, 0xb5, 0xc1, 0xa5, 0xb1, 0x95, 0xc9, 0xb9,
  0xbc, 0xc1, 0xd1, 0xa5, 0xbd, 0xb9, 0xcd, 0x4d, 0x09, 0x84, 0x2a, 0x6c,
  0x6c, 0x76, 0x6d, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x53, 0x02, 0xa2,
  0x0a, 0x19, 0x9e, 0x8b, 0x5d, 0x99, 0xdc, 0x5c, 0xda, 0x9b, 0xdb, 0x94,
  0xe0, 0x68, 0x42, 0x86, 0xe7, 0x62, 0x17, 0xc6, 0x66, 0x57, 0x26, 0x37,
  0x25, 0x48, 0xea, 0x90, 0xe1, 0xb9, 0xcc, 0xa1, 0x85, 0x91, 0x95, 0xc9,
  0x35, 0xbd, 0x91, 0x95, 0xb1, 0x4d, 0x09, 0x98, 0x32, 0x64, 0x78, 0x2e,
  0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x53, 0x82, 0xaa,
  0x0e, 0x19, 0x9e, 0x8b, 0x5d, 0x5a, 0xd9, 0x5d, 0x12, 0xd9, 0x14, 0x5d,
  0x18, 0x5d, 0xd9, 0x94, 0xe0, 0xaa, 0x43, 0x86, 0xe7, 0x52, 0xe6, 0x46,
  0x27, 0x97, 0x07, 0xf5, 0x96, 0xe6, 0x46, 0x37, 0x37, 0x25, 0xf0, 0x03,
  0x00, 0x00, 0x00, 0x00, 0x79, 0x18, 0x00, 0x00, 0x50, 0x00, 0x00, 0x00,
  0x33, 0x08, 0x80, 0x1c, 0xc4, 0xe1, 0x1c, 0x66, 0x14, 0x01, 0x3d, 0x88,
  0x43, 0x38, 0x84, 0xc3, 0x8c, 0x42, 0x80, 0x07, 0x79, 0x78, 0x07, 0x73,
  0x98, 0x71, 0x0c, 0xe6, 0x00, 0x0f, 0xed, 0x10, 0x0e, 0xf4, 0x80, 0x0e,
  0x33, 0x0c, 0x42, 0x1e, 0xc2, 0xc1, 0x1d, 0xce, 0xa1, 0x1c, 0x66, 0x30,
  0x05, 0x3d, 0x88, 0x43, 0x38, 0x84, 0x83, 0x1b, 0xcc, 0x03, 0x3d, 0xc8,
  0x43, 0x3d, 0x8c, 0x03, 0x3d, 0xcc, 0x78, 0x8c, 0x74, 0x70, 0x07, 0x7b,
  0x08, 0x07, 0x79, 0x48, 0x87, 0x70, 0x70, 0x07, 0x7a, 0x70, 0x03, 0x76,
  0x78, 0x87, 0x70, 0x20, 0x87, 0x19, 0xcc, 0x11, 0x0e, 0xec, 0x90, 0x0e,
  0xe1, 0x30, 0x0f, 0x6e, 0x30, 0x0f, 0xe3, 0xf0, 0x0e, 0xf0, 0x50, 0x0e,
  0x33, 0x10, 0xc4, 0x1d, 0xde, 0x21, 0x1c, 0xd8, 0x21, 0x1d, 0xc2, 0x61,
  0x1e, 0x66, 0x30, 0x89, 0x3b, 0xbc, 0x83, 0x3b, 0xd0, 0x43, 0x39, 0xb4,
  0x03, 0x3c, 0xbc, 0x83, 0x3c, 0x84, 0x03, 0x3b, 0xcc, 0xf0, 0x14, 0x76,
  0x60, 0x07, 0x7b, 0x68, 0x07, 0x37, 0x68, 0x87, 0x72, 0x68, 0x07, 0x37,
  0x80, 0x87, 0x70, 0x90, 0x87, 0x70, 0x60, 0x07, 0x76, 0x28, 0x07, 0x76,
  0xf8, 0x05, 0x76, 0x78, 0x87, 0x77, 0x80, 0x87, 0x5f, 0x08, 0x87, 0x71,
  0x18, 0x87, 0x72, 0x98, 0x87, 0x79, 0x98, 0x81, 0x2c, 0xee, 0xf0, 0x0e,
  0xee, 0xe0, 0x0e, 0xf5, 0xc0, 0x0e, 0xec, 0x30, 0x03, 0x62, 0xc8, 0xa1,
  0x1c, 0xe4, 0xa1, 0x1c, 0xcc, 0xa1, 0x1c, 0xe4, 0xa1, 0x1c, 0xdc, 0x61,
  0x1c, 0xca, 0x21, 0x1c, 0xc4, 0x81, 0x1d, 0xca, 0x61, 0x06, 0xd6, 0x90,
  0x43, 0x39, 0xc8, 0x43, 0x39, 0x98, 0x43, 0x39, 0xc8, 0x43, 0x39, 0xb8,
  0xc3, 0x38, 0x94, 0x43, 0x38, 0x88, 0x03, 0x3b, 0x94, 0xc3, 0x2f, 0xbc,
  0x83, 0x3c, 0xfc, 0x82, 0x3b, 0xd4, 0x03, 0x3b, 0xb0, 0xc3, 0x0c, 0xc4,
  0x21, 0x07, 0x7c, 0x70, 0x03, 0x7a, 0x28, 0x87, 0x76, 0x80, 0x87, 0x19,
  0xca, 0xc3, 0x0e, 0xec, 0x60, 0x0f, 0xed, 0xe0, 0x06, 0xec, 0xf0, 0x0e,
  0xef, 0x00, 0x0f, 0x33, 0x22, 0x88, 0x1c, 0xf0, 0xc1, 0x0d, 0xc8, 0x41,
  0x1c, 0xce, 0xc1, 0x0d, 0xec, 0x21, 0x1c, 0xe4, 0x81, 0x1d, 0xc2, 0x21,
  0x1f, 0xde, 0xa1, 0x1e, 0xe8, 0x01, 0x00, 0x00, 0x71, 0x20, 0x00, 0x00,
  0x2b, 0x00, 0x00, 0x00, 0x06, 0xe0, 0xbd, 0x2c, 0xab, 0x20, 0x4d, 0x43,
  0x0c, 0x29, 0x72, 0x11, 0x4b, 0x89, 0x18, 0xc7, 0x84, 0x34, 0x46, 0x7b,
  0x9d, 0x0e, 0xfb, 0x10, 0x82, 0x1d, 0x6c, 0xc3, 0xe5, 0x3b, 0x8f, 0x2f,
  0x04, 0x54, 0x51, 0x10, 0x51, 0xe9, 0x00, 0x43, 0x49, 0x18, 0x80, 0x80,
  0xf9, 0xc5, 0x6d, 0x5b, 0x82, 0x34, 0x5c, 0xbe, 0xf3, 0xf8, 0x42, 0x44,
  0x00, 0x13, 0x11, 0x02, 0xcd, 0xb0, 0x10, 0x46, 0xe0, 0x0c, 0x97, 0xef,
  0x3c, 0xfe, 0xe0, 0x4c, 0xb7, 0x5f, 0xdc, 0xb6, 0x19, 0x38, 0xc3, 0xe5,
  0x3b, 0x8f, 0x3f, 0x38, 0x13, 0xee, 0x17, 0xb7, 0x6d, 0x01, 0xd3, 0x70,
  0xf9, 0xce, 0xe3, 0x2f, 0x0e, 0x30, 0x88, 0xcd, 0x43, 0x4d, 0x7e, 0x71,
  0xdb, 0x26, 0x30, 0x0d, 0x97, 0xef, 0x3c, 0xfe, 0xe2, 0x00, 0x83, 0xd8,
  0x3c, 0xd4, 0xe4, 0x23, 0xb7, 0x6d, 0x03, 0xd5, 0x70, 0xf9, 0xce, 0xe3,
  0x4b, 0x93, 0x13, 0x11, 0x28, 0x35, 0x3d, 0xd4, 0xe4, 0x17, 0xb7, 0x6d,
  0x08, 0xd2, 0x70, 0xf9, 0xce, 0xe3, 0x4f, 0x44, 0x34, 0x21, 0x40, 0x84,
  0xf9, 0xc5, 0x6d, 0x5b, 0xc1, 0x33, 0x5c, 0xbe, 0xf3, 0xf8, 0x54, 0x03,
  0x44, 0x98, 0x5f, 0xdc, 0x36, 0x00, 0x00, 0x00, 0x61, 0x20, 0x00, 0x00,
  0x44, 0x02, 0x00, 0x00, 0x13, 0x04, 0x41, 0x2c, 0x10, 0x00, 0x00, 0x00,
  0x0b, 0x00, 0x00, 0x00, 0x94, 0x8d, 0x00, 0x10, 0x51, 0x5c, 0x65, 0x37,
  0x03, 0x50, 0x0a, 0x25, 0x57, 0x32, 0xc5, 0x52, 0x2e, 0x05, 0x53, 0x20,
  0x25, 0x52, 0x26, 0x85, 0x52, 0x2a, 0xe5, 0x56, 0x1c, 0x05, 0x47, 0x45,
  0x09, 0xd0, 0x30, 0x46, 0x00, 0x82, 0x20, 0x88, 0x7f, 0x00, 0x00, 0x00,
  0x23, 0x06, 0x09, 0x00, 0x82, 0x60, 0xa0, 0xa5, 0xc1, 0x93, 0xa1, 0x01,
  0x1a, 0x50, 0x23, 0x06, 0x09, 0x00, 0x82, 0x60, 0xa0, 0xa9, 0x01, 0xa4,
  0xa1, 0x01, 0x1a, 0x54, 0x23, 0x06, 0x09, 0x00, 0x82, 0x60, 0x60, 0xcc,
  0x01, 0x18, 0x80, 0x41, 0x1a, 0x78, 0xd3, 0x88, 0x41, 0x02, 0x80, 0x20,
  0x18, 0x18, 0x74, 0x10, 0x06, 0x61, 0xa0, 0x06, 0x05, 0x35, 0x62, 0x90,
  0x00, 0x20, 0x08, 0x06, 0x46, 0x1d, 0x88, 0x81, 0x18, 0xac, 0x41, 0x57,
  0x8d, 0x18, 0x24, 0x00, 0x08, 0x82, 0x81, 0x61, 0x07, 0x63, 0x30, 0x06,
  0x6c, 0xf0, 0x59, 0x23, 0x06, 0x09, 0x00, 0x82, 0x60, 0x80, 0xd8, 0x01,
  0x19, 0xa0, 0x41, 0x1b, 0x88, 0xc1, 0x35, 0x62, 0x90, 0x00, 0x20, 0x08,
  0x06, 0xc8, 0x1d, 0x94, 0x41, 0x1a, 0xb8, 0x41, 0x82, 0x8d, 0x18, 0x24,
  0x00, 0x08, 0x82, 0x01, 0x82, 0x07, 0x66, 0xa0, 0x06, 0x6f, 0x10, 0x06,
  0xd9, 0x88, 0x41, 0x02, 0x80, 0x20, 0x18, 0x20, 0x79, 0x70, 0x06, 0x6b,
  0x00, 0x07, 0x63, 0xa0, 0x8d, 0x18, 0x24, 0x00, 0x08, 0x82, 0x81, 0xb1,
  0x07, 0x68, 0x90, 0x06, 0x71, 0x60, 0x06, 0xdb, 0x88, 0x41, 0x02, 0x80,
  0x20, 0x18, 0x18, 0x7c, 0x90, 0x06, 0x6a, 0x20, 0x07, 0x0d, 0x37, 0x62,
  0x90, 0x00, 0x20, 0x08, 0x06, 0x46, 0x1f, 0xa8, 0x01, 0x1d, 0xcc, 0x01,
  0x1a, 0x74, 0x23, 0x06, 0x09, 0x00, 0x82, 0x60, 0x60, 0xf8, 0xc1, 0x1a,
  0xd4, 0x01, 0x1d, 0x3c, 0xde, 0x88, 0x41, 0x02, 0x80, 0x20, 0x18, 0x18,
  0x7f, 0xc0, 0x06, 0x76, 0x50, 0x07, 0x67, 0xf0, 0x8d, 0x18, 0x24, 0x00,
  0x08, 0x82, 0x81, 0x01, 0x0a, 0x6d, 0x60, 0x07, 0x76, 0xb0, 0x06, 0x60,
  0x30, 0x62, 0x90, 0x00, 0x20, 0x08, 0x06, 0x46, 0x28, 0xb8, 0xc1, 0x1d,
  0xdc, 0x81, 0x14, 0x06, 0x23, 0x06, 0x09, 0x00, 0x82, 0x60, 0x60, 0x88,
  0xc2, 0x1b, 0xe0, 0x01, 0x1e, 0xa8, 0x81, 0x18, 0x8c, 0x18, 0x24, 0x00,
  0x08, 0x82, 0x81, 0x31, 0x0a, 0x70, 0x90, 0x07, 0x79, 0xc0, 0x06, 0x63,
  0x50, 0x4d, 0x1d, 0xc8, 0x88, 0xc1, 0x01, 0x80, 0x20, 0x18, 0x54, 0x7f,
  0x60, 0x06, 0x54, 0x30, 0x9a, 0x10, 0x00, 0xa3, 0x09, 0x42, 0x30, 0x9a,
  0x30, 0x08, 0xa3, 0x09, 0xc4, 0x50, 0x46, 0x28, 0xc0, 0x88, 0xc1, 0x01,
  0x80, 0x20, 0x18, 0x54, 0xa5, 0xc0, 0x06, 0x5a, 0x30, 0x9a, 0x10, 0x00,
  0xa3, 0x09, 0x42, 0x30, 0x9a, 0x30, 0x08, 0xa3, 0x09, 0xc4, 0x50, 0x8c,
  0x1f, 0xc0, 0x88, 0xc1, 0x01, 0x80, 0x20, 0x18, 0x54, 0xab, 0x20, 0x07,
  0x60, 0x10, 0x8c, 0x26, 0x04, 0xc0, 0x68, 0x82, 0x10, 0x8c, 0x26, 0x0c,
  0xc2, 0x68, 0x02, 0x31, 0x18, 0x34, 0x06, 0xf2, 0xb1, 0x85, 0x0c, 0xe4,
  0x63, 0x46, 0x19, 0xc8, 0xc7, 0x24, 0x33, 0x90, 0x8f, 0x35, 0x67, 0x20,
  0x1f, 0x43, 0xd0, 0x40, 0x3e, 0x46, 0xa5, 0x81, 0x7c, 0xec, 0x51, 0x03,
  0xf9, 0x98, 0xb2, 0x06, 0xf2, 0x31, 0x8b, 0x0d, 0xe4, 0x63, 0x51, 0x1b,
  0xc8, 0xc7, 0x18, 0x37, 0x90, 0x4f, 0xa9, 0xc1, 0x2c, 0xc8, 0x88, 0xc1,
  0x01, 0x80, 0x20, 0x18, 0x54, 0xbd, 0x40, 0x0a, 0x72, 0x10, 0x8c, 0x26,
  0x04, 0xc0, 0x68, 0x82, 0x10, 0x8c, 0x26, 0x0c, 0xc2, 0x68, 0x02, 0x31,
  0x94, 0xf1, 0x0b, 0x30, 0x62, 0x70, 0x00, 0x20, 0x08, 0x06, 0xd5, 0x38,
  0xa8, 0x02, 0x1e, 0x04, 0xa3, 0x09, 0x01, 0x30, 0x9a, 0x20, 0x04, 0xa3,
  0x09, 0x83, 0x30, 0x9a, 0x40, 0x0c, 0xc5, 0xf0, 0x02, 0x8c, 0x18, 0x1c,
  0x00, 0x08, 0x82, 0x41, 0x95, 0x0e, 0xb0, 0xe0, 0x07, 0xc1, 0x68, 0x42,
  0x00, 0x8c, 0x26, 0x08, 0xc1, 0x68, 0xc2, 0x20, 0x8c, 0x26, 0x10, 0x83,
  0x41, 0xa0, 0x20, 0x1f, 0x5b, 0x42, 0x41, 0x3e, 0x66, 0x88, 0x82, 0x7c,
  0x4c, 0x1a, 0x05, 0xf9, 0x58, 0x43, 0x0a, 0xf2, 0x31, 0xa4, 0x14, 0xe4,
  0x63, 0x94, 0x29, 0xc8, 0xc7, 0x9e, 0x53, 0x90, 0x8f, 0x29, 0xa8, 0x20,
  0x1f, 0xb3, 0x52, 0x41, 0x3e, 0x16, 0xa9, 0x82, 0x7c, 0x8c, 0x59, 0x05,
  0xf9, 0x18, 0xa3, 0x06, 0xf0, 0x31, 0x46, 0x0d, 0xe0, 0x63, 0x8c, 0x1a,
  0xc0, 0xc7, 0x18, 0x35, 0x80, 0x8f, 0x31, 0x6a, 0x00, 0x1f, 0x63, 0xd4,
  0x00, 0x3e, 0xc6, 0xa8, 0x01, 0x7c, 0x8c, 0x51, 0x03, 0xf8, 0x18, 0xa3,
  0x06, 0xf0, 0x31, 0x46, 0x0d, 0xe0, 0x63, 0x8c, 0x1a, 0xc0, 0xc7, 0x18,
  0x35, 0x80, 0x4f, 0xcd, 0x42, 0x3f, 0xc8, 0x88, 0xc1, 0x01, 0x80, 0x20,
  0x18, 0x54, 0x27, 0xe1, 0x0e, 0xbc, 0x10, 0x8c, 0x26, 0x04, 0xc0, 0x68,
  0x82, 0x10, 0x8c, 0x26, 0x0c, 0xc2, 0x68, 0x02, 0x31, 0x94, 0x91, 0x12,
  0x30, 0x62, 0x70, 0x00, 0x20, 0x08, 0x06, 0x55, 0x4b, 0xd0, 0x83, 0x38,
  0x04, 0xa3, 0x09, 0x01, 0x30, 0x9a, 0x20, 0x04, 0xa3, 0x09, 0x83, 0x30,
  0x9a, 0x40, 0x0c, 0xc5, 0x98, 0x04, 0x8c, 0x18, 0x1c, 0x00, 0x08, 0x82,
  0x41, 0x35, 0x13, 0xfa, 0x80, 0x0e, 0xc1, 0x68, 0x42, 0x00, 0x8c, 0x26,
  0x08, 0xc1, 0x68, 0xc2, 0x20, 0x8c, 0x26, 0x10, 0x83, 0x41, 0xe9, 0x20,
  0x1f, 0x5b, 0xd4, 0x41, 0x3e, 0x66, 0xac, 0x83, 0x7c, 0x4c, 0x62, 0x07,
  0xf9, 0x58, 0xd3, 0x0e, 0xf2, 0x31, 0xc4, 0x1d, 0xe4, 0x63, 0xd4, 0x3b,
  0xc8, 0xc7, 0x1e, 0x78, 0x90, 0x8f, 0x29, 0xf1, 0x20, 0x1f, 0xb3, 0xe4,
  0x41, 0x3e, 0x16, 0xcd, 0x83, 0x7c, 0x8c, 0xa1, 0x07, 0xf9, 0x98, 0x1a,
  0x30, 0xf0, 0x31, 0x35, 0x60, 0xe0, 0x63, 0x6a, 0xc0, 0xc0, 0xc7, 0xd4,
  0x80, 0x81, 0x8f, 0xa9, 0x01, 0x03, 0x1f, 0x53, 0x03, 0x06, 0x3e, 0xa6,
  0x06, 0x0c, 0x7c, 0x4c, 0x0d, 0x18, 0xf8, 0x98, 0x1a, 0x30, 0xf0, 0x31,
  0x35, 0x60, 0xe0, 0x63, 0x6a, 0xc0, 0xc0, 0xc7, 0xd4, 0x80, 0x81, 0x4f,
  0xf1, 0xc3, 0x59, 0xc8, 0x88, 0xc1, 0x01, 0x80, 0x20, 0x18, 0x54, 0x71,
  0x81, 0x13, 0x26, 0x11, 0x8c, 0x26, 0x04, 0xc0, 0x68, 0x82, 0x10, 0x8c,
  0x26, 0x0c, 0xc2, 0x68, 0x02, 0x31, 0x94, 0x31, 0x17, 0x30, 0x62, 0x70,
  0x00, 0x20, 0x08, 0x06, 0xd5, 0x5d, 0xf8, 0x04, 0x4b, 0x04, 0xa3, 0x09,
  0x01, 0x30, 0x9a, 0x20, 0x04, 0xa3, 0x09, 0x83, 0x30, 0x9a, 0x40, 0x0c,
  0xc5, 0xc0, 0x05, 0x8c, 0x18, 0x1c, 0x00, 0x08, 0x82, 0x41, 0xd5, 0x17,
  0x64, 0x21, 0x13, 0xc1, 0x68, 0x42, 0x00, 0x8c, 0x26, 0x08, 0xc1, 0x68,
  0xc2, 0x20, 0x8c, 0x26, 0x10, 0x83, 0x41, 0x32, 0x21, 0x1f, 0x5b, 0x66,
  0x42, 0x3e, 0x66, 0xd0, 0x84, 0x7c, 0x4c, 0xaa, 0x09, 0xf9, 0x58, 0x63,
  0x13, 0xf2, 0x31, 0xe4, 0x26, 0xe4, 0x63, 0x14, 0x4e, 0xc8, 0xc7, 0x9e,
  0x9c, 0x90, 0x8f, 0x29, 0x3a, 0x21, 0x1f, 0xb3, 0x76, 0x42, 0x3e, 0x16,
  0xf1, 0x84, 0x7c, 0x8c, 0xe9, 0x09, 0xf9, 0x98, 0x1a, 0x30, 0xf0, 0x31,
  0x35, 0x60, 0xe0, 0x63, 0x6a, 0xc0, 0xc0, 0xc7, 0xd4, 0x80, 0x81, 0x8f,
  0xa9, 0x01, 0x03, 0x1f, 0x53, 0x03, 0x06, 0x3e, 0xa6, 0x06, 0x0c, 0x7c,
  0x4c, 0x0d, 0x18, 0xf8, 0x98, 0x1a, 0x30, 0xf0, 0x31, 0x35, 0x60, 0xe0,
  0x63, 0x6a, 0xc0, 0xc0, 0xc7, 0xd4, 0x80, 0x81, 0x8f, 0x31, 0x60, 0x21,
  0x9f, 0x11, 0x03, 0x04, 0x00, 0x41, 0x30, 0xb8, 0x74, 0x63, 0x34, 0xc0,
  0x42, 0x09, 0x46, 0x0c, 0x10, 0x00, 0x04, 0xc1, 0xe0, 0xda, 0x0d, 0xd2,
  0x00, 0x0b, 0x24, 0x18, 0x31, 0x40, 0x00, 0x10, 0x04, 0x83, 0x8b, 0x37,
  0x4a, 0x03, 0x2c, 0x8c, 0xc0, 0x1e, 0xb2, 0x90, 0xcf, 0x88, 0x01, 0x02,
  0x80, 0x20, 0x18, 0x5c, 0xbe, 0x71, 0x1a, 0x64, 0xd1, 0x04, 0x23, 0x06,
  0x08, 0x00, 0x82, 0x60, 0x70, 0xfd, 0x06, 0x6a, 0x90, 0xc5, 0x12, 0x8c,
  0x18, 0x20, 0x00, 0x08, 0x82, 0xc1, 0x05, 0x1e, 0xa9, 0x41, 0x16, 0x49,
  0x60, 0x12, 0x5a, 0xc8, 0x67, 0xc4, 0x00, 0x01, 0x40, 0x10, 0x0c, 0x2e,
  0xf1, 0x58, 0x0d, 0xb4, 0x80, 0x82, 0x11, 0x03, 0x04, 0x00, 0x41, 0x30,
  0xb8, 0xc6, 0x83, 0x35, 0xd0, 0xc2, 0x09, 0x46, 0x0c, 0x10, 0x00, 0x04,
  0xc1, 0xe0, 0x22, 0x8f, 0xd6, 0x40, 0x0b, 0x26, 0x30, 0xec, 0x2d, 0xe4,
  0x33, 0x62, 0x80, 0x00, 0x20, 0x08, 0x06, 0x97, 0x79, 0xbc, 0xc6, 0x5b,
  0x58, 0xc1, 0x88, 0x01, 0x02, 0x80, 0x20, 0x18, 0x5c, 0xe7, 0x01, 0x1b,
  0x6f, 0x41, 0x05, 0xa6, 0xc9, 0x85, 0x7c, 0x46, 0x0c, 0x10, 0x00, 0x04,
  0xc1, 0xe0, 0x4a, 0x0f, 0xd9, 0x90, 0x0b, 0x2c, 0x18, 0x31, 0x40, 0x00,
  0x10, 0x04, 0x83, 0x4b, 0x3d, 0x66, 0x43, 0x2e, 0xac, 0xc0, 0xb8, 0xba,
  0x90, 0xcf, 0x88, 0x01, 0x02, 0x80, 0x20, 0x18, 0x5c, 0xec, 0x51, 0x1b,
  0x75, 0xa1, 0x05, 0x23, 0x06, 0x08, 0x00, 0x82, 0x60, 0x70, 0xb5, 0x87,
  0x6d, 0xd4, 0x05, 0x16, 0x8c, 0x18, 0x1c, 0x00, 0x08, 0x82, 0x41, 0xf5,
  0x1e, 0xb6, 0x31, 0x1a, 0xb1, 0x31, 0x9a, 0x10, 0x00, 0xa3, 0x09, 0x42,
  0x30, 0x9a, 0x30, 0x08, 0xa3, 0x09, 0xc4, 0x30, 0x62, 0x70, 0x00, 0x20,
  0x08, 0x06, 0x15, 0x7d, 0xec, 0x06, 0x6a, 0xd4, 0xc6, 0x68, 0x42, 0x00,
  0x8c, 0x26, 0x08, 0xc1, 0x68, 0xc2, 0x20, 0x8c, 0x26, 0x10, 0xc3, 0x88,
  0xc1, 0x01, 0x80, 0x20, 0x18, 0x54, 0xf9, 0x01, 0x1e, 0xad, 0x91, 0x1b,
  0xa3, 0x09, 0x01, 0x30, 0x9a, 0x20, 0x04, 0xa3, 0x09, 0x83, 0x30, 0x9a,
  0x40, 0x0c, 0x23, 0x06, 0x07, 0x00, 0x82, 0x60, 0x50, 0xf9, 0x47, 0x79,
  0xc8, 0x46, 0x78, 0x8c, 0x26, 0x04, 0xc0, 0x68, 0x82, 0x10, 0x8c, 0x26,
  0x0c, 0xc2, 0x68, 0x02, 0x31, 0xd8, 0x64, 0x06, 0xf2, 0x19, 0x31, 0x40,
  0x00, 0x10, 0x04, 0x83, 0x6b, 0x44, 0xd8, 0x63, 0x0c, 0xa6, 0x60, 0xc4,
  0x00, 0x01, 0x40, 0x10, 0x0c, 0x2e, 0x12, 0x69, 0x0f, 0x30, 0x98, 0x82,
  0x11, 0x03, 0x04, 0x00, 0x41, 0x30, 0xb8, 0x4a, 0xc4, 0x3d, 0x52, 0x63,
  0x0a, 0x4c, 0x52, 0x03, 0xf9, 0x8c, 0x18, 0x20, 0x00, 0x08, 0x82, 0xc1,
  0x75, 0x22, 0xf0, 0x71, 0x06, 0x52, 0x30, 0x62, 0x80, 0x00, 0x20, 0x08,
  0x06, 0x17, 0x8a, 0xc4, 0x07, 0x19, 0x48, 0xc1, 0x88, 0x01, 0x02, 0x80,
  0x20, 0x18, 0x5c, 0x29, 0x22, 0x1f, 0xad, 0x21, 0x05, 0x16, 0xb9, 0x81,
  0x7c, 0x46, 0x0c, 0x10, 0x00, 0x04, 0xc1, 0xe0, 0x5a, 0x11, 0xfa, 0x58,
  0x83, 0x28, 0x18, 0x31, 0x40, 0x00, 0x10, 0x04, 0x83, 0x8b, 0x45, 0xea,
  0x03, 0x0d, 0xa2, 0x60, 0xc4, 0x00, 0x01, 0x40, 0x10, 0x0c, 0xae, 0x16,
  0xb1, 0x8f, 0xd8, 0x88, 0x02, 0x83, 0xe4, 0x40, 0x3e, 0x23, 0x06, 0x08,
  0x00, 0x82, 0x60, 0x70, 0xbd, 0x08, 0x7e, 0xbc, 0x01, 0x14, 0x8c, 0x18,
  0x20, 0x00, 0x08, 0x82, 0xc1, 0x05, 0x23, 0xf9, 0xc1, 0x06, 0x50, 0x30,
  0x62, 0x80, 0x00, 0x20, 0x08, 0x06, 0x57, 0x8c, 0xe8, 0x47, 0x6d, 0x40,
  0xc1, 0x88, 0xc1, 0x01, 0x80, 0x20, 0x18, 0x54, 0x33, 0xa2, 0x1f, 0xe7,
  0x91, 0x22, 0xa3, 0x09, 0x01, 0x30, 0x9a, 0x20, 0x04, 0xa3, 0x09, 0x83,
  0x30, 0x9a, 0x40, 0x0c, 0x23, 0x06, 0x07, 0x00, 0x82, 0x60, 0x50, 0xe1,
  0xc8, 0x7f, 0xb0, 0xc7, 0x7d, 0x8c, 0x26, 0x04, 0xc0, 0x68, 0x82, 0x10,
  0x8c, 0x26, 0x0c, 0xc2, 0x68, 0x02, 0x31, 0x8c, 0x18, 0x1c, 0x00, 0x08,
  0x82, 0x41, 0xd5, 0x23, 0x24, 0x12, 0x1f, 0xfb, 0x31, 0x9a, 0x10, 0x00,
  0xa3, 0x09, 0x42, 0x30, 0x9a, 0x30, 0x08, 0xa3, 0x09, 0xc4, 0x60, 0x4e,
  0x29, 0xc8, 0x67, 0xc4, 0x00, 0x01, 0x40, 0x10, 0x0c, 0x2e, 0x31, 0x59,
  0x11, 0x51, 0x70, 0x82, 0x11, 0x03, 0x04, 0x00, 0x41, 0x30, 0xb8, 0xc6,
  0x84, 0x45, 0xfe, 0xc0, 0x09, 0x46, 0x0c, 0x10, 0x00, 0x04, 0xc1, 0xe0,
  0x22, 0x93, 0x16, 0x41, 0x0f, 0x27, 0xb0, 0x26, 0x15, 0xe4, 0x33, 0x62,
  0x80, 0x00, 0x20, 0x08, 0x06, 0x97, 0x99, 0xbc, 0x88, 0x29, 0x34, 0xc1,
  0x88, 0x01, 0x02, 0x80, 0x20, 0x18, 0x5c, 0x67, 0x02, 0x23, 0xa3, 0xd0,
  0x04, 0x23, 0x06, 0x08, 0x00, 0x82, 0x60, 0x70, 0xa1, 0x49, 0x8c, 0xb0,
  0x47, 0x13, 0x18, 0xd3, 0x0a, 0xf2, 0x19, 0x31, 0x40, 0x00, 0x10, 0x04,
  0x83, 0x4b, 0x4d, 0x66, 0x44, 0x15, 0x98, 0x60, 0xc4, 0x00, 0x01, 0x40,
  0x10, 0x0c, 0xae, 0x35, 0xa1, 0x91, 0x53, 0x60, 0x82, 0x11, 0x03, 0x04,
  0x00, 0x41, 0x30, 0xb8, 0xd8, 0xa4, 0x46, 0xe0, 0x83, 0x09, 0x46, 0x0c,
  0x0e, 0x00, 0x04, 0xc1, 0xa0, 0x72, 0x93, 0x1a, 0x11, 0x91, 0x15, 0x19,
  0x4d, 0x08, 0x80, 0xd1, 0x04, 0x21, 0x18, 0x4d, 0x18, 0x84, 0x11, 0x83,
  0x03, 0x00, 0x41, 0x30, 0xa8, 0xe4, 0x24, 0x47, 0x4c, 0xc4, 0x45, 0x46,
  0x13, 0x02, 0x60, 0x34, 0x41, 0x08, 0x46, 0x13, 0x06, 0x61, 0xc4, 0xe0,
  0x00, 0x40, 0x10, 0x0c, 0x2a, 0x3b, 0xe9, 0x11, 0x15, 0x89, 0x91, 0xd1,
  0x84, 0x00, 0x18, 0x4d, 0x10, 0x82, 0xd1, 0x84, 0x41, 0xb0, 0x45, 0x16,
  0xe4, 0x33, 0x62, 0x80, 0x00, 0x20, 0x08, 0x06, 0x97, 0x9e, 0x8c, 0x09,
  0x2c, 0x2c, 0xc1, 0x88, 0x01, 0x02, 0x80, 0x20, 0x18, 0x5c, 0x7b, 0x42,
  0x26, 0xae, 0xb0, 0x04, 0xa6, 0xd4, 0x82, 0x7c, 0x46, 0x0c, 0x10, 0x00,
  0x04, 0xc1, 0xe0, 0xea, 0x13, 0x33, 0x99, 0x05, 0x25, 0x18, 0x31, 0x40,
  0x00, 0x10, 0x04, 0x83, 0xcb, 0x4f, 0xce, 0x24, 0x16, 0x94, 0xc0, 0x12,
  0x5c, 0x90, 0xcf, 0x88, 0x01, 0x02, 0x80, 0x20, 0x18, 0x5c, 0xa0, 0x92,
  0x26, 0xb6, 0x90, 0x04, 0x23, 0x06, 0x08, 0x00, 0x82, 0x60, 0x70, 0x85,
  0x8a, 0x9a, 0xd0, 0x42, 0x12, 0x8c, 0x18, 0x2c, 0x00, 0x08, 0x82, 0x01,
  0x63, 0x2a, 0x3d, 0x72, 0x10, 0xc1, 0x41, 0x04, 0x23, 0x06, 0x06, 0x00,
  0x82, 0x60, 0xe0, 0x98, 0xca, 0x99, 0x04, 0x16, 0x24, 0xf2, 0x31, 0xe1,
  0x90, 0x8f, 0x0d, 0x85, 0x7c, 0x46, 0x0c, 0x0e, 0x00, 0x04, 0xc1, 0xa0,
  0x42, 0x95, 0x37, 0xe1, 0x91, 0x30, 0x19, 0x4d, 0x08, 0x80, 0xd1, 0x04,
  0x21, 0x18, 0x4d, 0x18, 0x84, 0xd1, 0x04, 0x62, 0x18, 0x31, 0x68, 0x00,
  0x10, 0x04, 0x03, 0xc8, 0x55, 0xca, 0x04, 0x1e, 0xd8, 0x01, 0x1d, 0x60,
  0x84, 0x18, 0x84, 0x60, 0xc4, 0xc0, 0x00, 0x40, 0x10, 0x0c, 0x1c, 0x58,
  0x19, 0x95, 0x60, 0xc4, 0x20, 0x01, 0x40, 0x10, 0x0c, 0x94, 0x59, 0xa1,
  0x13, 0x51, 0x59, 0x15, 0x50, 0x49, 0x85, 0x11, 0x83, 0x04, 0x00, 0x41,
  0x30, 0x50, 0x66, 0x85, 0x4e, 0x44, 0x65, 0x55, 0xcc, 0xa4, 0x14, 0x46,
  0x0c, 0x12, 0x00, 0x04, 0xc1, 0x40, 0x99, 0x15, 0x3a, 0x11, 0x95, 0x55,
  0xe9, 0x93, 0x50, 0x18, 0x31, 0x48, 0x00, 0x10, 0x04, 0x03, 0x65, 0x56,
  0xe8, 0x44, 0x54, 0x56, 0xc5, 0x4f, 0xfa, 0x60, 0xc4, 0x20, 0x01, 0x40,
  0x10, 0x0c, 0x94, 0x59, 0xa1, 0x13, 0x56, 0x59, 0x15, 0x50, 0x51, 0x83,
  0x11, 0x83, 0x04, 0x00, 0x41, 0x30, 0x50, 0x66, 0x85, 0x4e, 0x58, 0x65,
  0x55, 0xcc, 0xc4, 0x0c, 0x46, 0x0c, 0x12, 0x00, 0x04, 0xc1, 0x40, 0x99,
  0x15, 0x3a, 0x61, 0x95, 0x55, 0xe9, 0x13, 0x31, 0x18, 0x31, 0x48, 0x00,
  0x10, 0x04, 0x03, 0x65, 0x56, 0xe8, 0x84, 0x55, 0x56, 0xc5, 0x4f, 0x82,
  0x11, 0x83, 0x04, 0x00, 0x41, 0x30, 0x50, 0x66, 0x85, 0x4e, 0x46, 0x65,
  0x55, 0x40, 0x45, 0x19, 0x31, 0x48, 0x00, 0x10, 0x04, 0x03, 0x65, 0x56,
  0xe8, 0x64, 0x54, 0x56, 0xc5, 0x4c, 0x92, 0x11, 0x83, 0x04, 0x00, 0x41,
  0x30, 0x50, 0x66, 0x85, 0x4e, 0x46, 0x65, 0x55, 0xfa, 0x04, 0x19, 0x31,
  0x38, 0x00, 0x10, 0x04, 0x83, 0xea, 0x55, 0xec, 0x64, 0x4c, 0x56, 0x65,
  0x34, 0x21, 0x18, 0x46, 0x0c, 0x12, 0x00, 0x04, 0xc1, 0x40, 0xa9, 0x15,
  0x3b, 0x41, 0x95, 0x56, 0x11, 0x95, 0x33, 0x19, 0x31, 0x48, 0x00, 0x10,
  0x04, 0x03, 0xa5, 0x56, 0xec, 0x04, 0x55, 0x5a, 0x05, 0x4d, 0xce, 0x64,
  0xc4, 0x20, 0x01, 0x40, 0x10, 0x0c, 0x94, 0x5a, 0xb1, 0x13, 0x54, 0x69,
  0x95, 0x3f, 0x39, 0x93, 0x11, 0x83, 0x04, 0x00, 0x41, 0x30, 0x50, 0x6a,
  0xc5, 0x4e, 0x50, 0xa5, 0x55, 0x40, 0x25, 0x18, 0x31, 0x48, 0x00, 0x10,
  0x04, 0x03, 0xa5, 0x56, 0xec, 0xa4, 0x55, 0x5a, 0x45, 0x54, 0x78, 0x64,
  0xc4, 0x20, 0x01, 0x40, 0x10, 0x0c, 0x94, 0x5a, 0xb1, 0x93, 0x56, 0x69,
  0x15, 0x34, 0xd9, 0x11, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xda, 0xd2, 0xf3, 0x6f, 0x36, 0xd4, 0x2d, 0x4c, 0x49, 0x72, 0x2b, 0x4e,
  0xcc, 0x77, 0xd5, 0x0b, 0x17, 0x00, 0x01, 0x00, 0x20, 0x40, 0x19, 0x00,
  0x78, 0x01, 0xed, 0x99, 0xcf, 0x6f, 0x1b, 0x45, 0x14, 0xc7, 0x67, 0x67,
  0x66, 0xc7, 0x6b, 0xfb, 0x65, 0xec, 0x5d, 0x3b, 0x89, 0x13, 0x1c, 0x67,
  0x9d, 0x6e, 0xb6, 0x71, 0xb6, 0xdb, 0x75, 0x4c, 0xda, 0x9a, 0xe0, 0x34,
  0x11, 0x2a, 0xa8, 0x58, 0x85, 0x54, 0xe2, 0x4a, 0x2f, 0x15, 0x42, 0xdc,
  0x28, 0x01, 0x5a, 0xb8, 0x04, 0x27, 0x02, 0xc1, 0xa1, 0x12, 0x08, 0x0a,
  0xfd, 0x1b, 0x90, 0xf8, 0x03, 0x7a, 0x72, 0x68, 0x22, 0xf5, 0x94, 0x0a,
  0x14, 0xb5, 0x20, 0x21, 0x0e, 0xfc, 0x0d, 0x40, 0xa5, 0x48, 0x1c, 0xc2,
  0x7b, 0x6b, 0x3b, 0x3f, 0x20, 0x67, 0x10, 0x68, 0x3f, 0xd2, 0x9b, 0xef,
  0xec, 0xdb, 0x99, 0xf7, 0x66, 0xde, 0xac, 0x2f, 0xe3, 0xe5, 0x31, 0x16,
  0xf3, 0xe0, 0x41, 0xf8, 0x84, 0xf4, 0xee, 0x1f, 0xaf, 0x3f, 0xba, 0x97,
  0x67, 0xcc, 0xa4, 0x07, 0x44, 0x52, 0x83, 0xdc, 0x28, 0x52, 0xcb, 0xd8,
  0xcf, 0x25, 0x6a, 0x0f, 0xfd, 0xc4, 0x32, 0xda, 0x59, 0x34, 0x82, 0xfa,
  0x03, 0x0c, 0xb4, 0x87, 0x3b, 0x3b, 0x8b, 0x68, 0x17, 0xb1, 0xfb, 0x37,
  0x28, 0xf5, 0x47, 0x68, 0x1f, 0xa2, 0x11, 0x34, 0x7e, 0x00, 0xe5, 0x87,
  0xbe, 0x1d, 0x65, 0xb0, 0xae, 0xa3, 0xe4, 0xd0, 0xb2, 0x68, 0xbc, 0x6f,
  0x47, 0x99, 0x7f, 0xf2, 0x63, 0x0b, 0xe5, 0x12, 0x1a, 0x0b, 0xbe, 0xbe,
  0xbc, 0x44, 0xfa, 0x70, 0xef, 0x53, 0xf2, 0xb1, 0x2f, 0xaf, 0xd5, 0x4f,
  0x5c, 0xd7, 0x7f, 0x99, 0xc1, 0x39, 0x11, 0xf7, 0x04, 0xb5, 0xc7, 0x19,
  0xd4, 0x67, 0xa6, 0x7f, 0x8e, 0x29, 0x6a, 0x90, 0xab, 0xfd, 0xe7, 0xc1,
  0x59, 0x7e, 0x8b, 0x76, 0xf4, 0x3c, 0x8e, 0xb2, 0x8f, 0x90, 0x9e, 0x04,
  0x9d, 0x8f, 0x62, 0x2b, 0x75, 0x65, 0x7c, 0xec, 0x2a, 0xbe, 0x9d, 0x57,
  0x22, 0x37, 0xa7, 0xe4, 0xca, 0x1c, 0xba, 0xff, 0x31, 0xe8, 0xdb, 0x54,
  0x68, 0x84, 0x32, 0x7a, 0xbb, 0x50, 0xbc, 0xb7, 0x73, 0x25, 0x4e, 0x28,
  0xca, 0xff, 0x10, 0xaa, 0xc1, 0xe0, 0x53, 0xa0, 0x5a, 0xd0, 0xf3, 0x00,
  0xfc, 0x79, 0x27, 0x24, 0x24, 0x24, 0x24, 0x24, 0x24, 0x24, 0x24, 0x24,
  0x24, 0x24, 0x24, 0x24, 0x24, 0x24, 0xfc, 0xfb, 0x54, 0x3b, 0xdd, 0x1b,
  0xb9, 0xdb, 0x9b, 0x25, 0xf6, 0xc3, 0x6e, 0x3e, 0x65, 0xb0, 0x2c, 0xaa,
  0x8d, 0xba, 0x2f, 0x3a, 0xdd, 0x6f, 0x56, 0x38, 0x4b, 0xef, 0x0f, 0x7f,
  0x12, 0xdf, 0x64, 0x88, 0xbb, 0xdd, 0xfb, 0xe2, 0xab, 0xae, 0x25, 0xee,
  0x74, 0x99, 0xdb, 0xfc, 0xa5, 0xa4, 0xcd, 0xce, 0x46, 0xbd, 0xd1, 0x5e,
  0xaf, 0x37, 0xdb, 0xf4, 0x3c, 0x56, 0x32, 0x3b, 0xa4, 0xe5, 0x72, 0x4f,
  0xb3, 0xcc, 0xec, 0x38, 0x18, 0xcb, 0xc1, 0x58, 0x05, 0xd4, 0x02, 0xea,
  0xc6, 0xc8, 0xe5, 0xf6, 0xfa, 0xc8, 0x48, 0x9b, 0x89, 0x2f, 0xe2, 0x18,
  0x05, 0xb7, 0x37, 0xd6, 0xf3, 0x7a, 0xea, 0xcc, 0xf4, 0x34, 0x7b, 0x06,
  0x63, 0x7b, 0x23, 0xed, 0x75, 0xcf, 0x8b, 0x63, 0x3b, 0xf5, 0xbe, 0x7f,
  0xde, 0xec, 0xdc, 0x17, 0x9f, 0x77, 0x53, 0xfb, 0x76, 0xbc, 0x26, 0x25,
  0x3e, 0xeb, 0x5e, 0xb1, 0xd9, 0xf6, 0xab, 0xf6, 0xf7, 0x5b, 0xaf, 0xd9,
  0x77, 0xb6, 0xde, 0xc7, 0x7d, 0xe8, 0x5a, 0x59, 0xe7, 0x6a, 0x15, 0x9d,
  0xaf, 0xb9, 0xfa, 0x3d, 0xda, 0x57, 0xad, 0xae, 0x6f, 0xa1, 0x4e, 0xd4,
  0x16, 0xf4, 0x4d, 0x54, 0xc6, 0x3a, 0xbb, 0x2c, 0x58, 0x90, 0x15, 0x1c,
  0xb7, 0xe1, 0xb7, 0xda, 0xeb, 0xbe, 0x1f, 0xe7, 0x28, 0x34, 0x7b, 0x39,
  0x2a, 0x2d, 0xb3, 0x53, 0xae, 0x35, 0xb5, 0x81, 0xe3, 0x8c, 0xe0, 0xa2,
  0x7c, 0x17, 0xe7, 0xcc, 0x84, 0x0c, 0xde, 0x41, 0xcd, 0xa1, 0xef, 0x4c,
  0xb0, 0x2a, 0x1d, 0xd4, 0x30, 0xb8, 0x29, 0x39, 0x2a, 0x0f, 0x9e, 0x93,
  0x6f, 0xe3, 0xbb, 0x2c, 0xf6, 0xe7, 0xc2, 0x76, 0xfc, 0xce, 0x0b, 0xae,
  0xcb, 0x7a, 0x58, 0x81, 0x5a, 0xc8, 0x61, 0x0c, 0xd7, 0xe1, 0x46, 0x0c,
  0xce, 0x06, 0x65, 0x98, 0x0e, 0x5c, 0x18, 0xc7, 0xf5, 0xcc, 0x86, 0x12,
  0x98, 0xed, 0xeb, 0x6a, 0xc4, 0xc1, 0xae, 0x4d, 0xe9, 0x55, 0x9c, 0x3f,
  0x1f, 0x7a, 0x20, 0x70, 0xae, 0x08, 0x5e, 0x90, 0x8d, 0xb0, 0x0c, 0xe7,
  0x42, 0x17, 0xfc, 0xa0, 0x0e, 0x53, 0x91, 0x84, 0xb4, 0xf0, 0x81, 0xa5,
  0x99, 0xce, 0x98, 0x3e, 0x9c, 0x0f, 0xeb, 0x60, 0x0a, 0x06, 0x41, 0xa8,
  0xe0, 0x03, 0x76, 0x7b, 0x53, 0xfa, 0xf3, 0x5a, 0x99, 0x0c, 0x4e, 0x45,
  0x0a, 0x52, 0x29, 0x06, 0x96, 0xaf, 0xf4, 0x5b, 0x18, 0xaf, 0x19, 0x55,
  0x80, 0xce, 0xd5, 0xc6, 0x98, 0xad, 0xa8, 0x2d, 0x73, 0x76, 0x43, 0x3f,
  0x13, 0x8d, 0xc0, 0x42, 0x54, 0x86, 0xf4, 0x68, 0x03, 0x16, 0x23, 0x17,
  0x6c, 0x3b, 0xaf, 0x33, 0x13, 0x0d, 0xa0, 0xbd, 0xa6, 0xab, 0x53, 0x32,
  0x97, 0x76, 0xf4, 0x64, 0xcd, 0xd3, 0xb4, 0xcf, 0x8b, 0xd1, 0x75, 0x69,
  0xa1, 0x46, 0x41, 0x3b, 0xde, 0xa7, 0x39, 0xea, 0x4b, 0xe6, 0x3b, 0x5a,
  0xd8, 0x6c, 0xeb, 0x29, 0x1c, 0x93, 0x99, 0xe4, 0x50, 0x44, 0xff, 0x58,
  0xf6, 0x0d, 0xd9, 0xb4, 0xad, 0x6d, 0x3b, 0x6d, 0xe9, 0xa7, 0xc3, 0x3c,
  0x18, 0x0d, 0x07, 0x32, 0xe8, 0x3f, 0x8d, 0xf3, 0xa8, 0x26, 0xc6, 0xd0,
  0x55, 0x69, 0x56, 0x2d, 0x30, 0xb1, 0x7f, 0x21, 0x9c, 0x95, 0x6a, 0x42,
  0xc2, 0xb3, 0x51, 0x1e, 0xd2, 0x0d, 0x05, 0x9c, 0x3b, 0x90, 0x1d, 0x2d,
  0x6a, 0x35, 0x69, 0x41, 0xca, 0x96, 0x00, 0x0c, 0xb4, 0xcb, 0xca, 0xda,
  0x63, 0x15, 0x3d, 0xc3, 0x5c, 0x4d, 0xf9, 0xd3, 0x85, 0x59, 0xb9, 0x14,
  0x65, 0xe2, 0x35, 0x1a, 0xc3, 0x20, 0x29, 0x36, 0x7f, 0x65, 0x59, 0x52,
  0xad, 0x52, 0x59, 0x47, 0x4a, 0x54, 0x43, 0x4c, 0xc9, 0x69, 0x59, 0x81,
  0x21, 0x0c, 0x51, 0x95, 0xe5, 0x38, 0x97, 0x98, 0x28, 0x49, 0x45, 0xfa,
  0x7c, 0x33, 0xde, 0x87, 0x78, 0xa9, 0x25, 0x67, 0x55, 0x31, 0xae, 0x59,
  0x11, 0x73, 0x94, 0x30, 0x47, 0x19, 0x73, 0xc8, 0x6b, 0xd6, 0x5a, 0x41,
  0x4f, 0xe9, 0x09, 0xe9, 0xc2, 0x18, 0xc6, 0x18, 0xc6, 0xf9, 0xb6, 0x94,
  0x3a, 0xd0, 0x45, 0x38, 0xad, 0xf3, 0x70, 0x4a, 0x03, 0xe4, 0x74, 0x06,
  0xbe, 0xb3, 0xd8, 0x9e, 0xa9, 0xac, 0x4c, 0x0e, 0x6b, 0x1a, 0xc7, 0x0f,
  0x9b, 0x32, 0xfe, 0x96, 0xaa, 0x56, 0x5c, 0x1f, 0x31, 0x7d, 0xa9, 0x97,
  0xef, 0x5c, 0xab, 0x97, 0x6f, 0x71, 0x59, 0x32, 0x4b, 0xed, 0x32, 0x93,
  0xb3, 0x5f, 0xb9, 0xb7, 0xd6, 0xe1, 0xfe, 0x1a, 0x8d, 0x4b, 0x2d, 0xb9,
  0xbd, 0xb5, 0x5f, 0x28, 0xc9, 0x51, 0x8c, 0x9b, 0xe3, 0x6c, 0x0f, 0x86,
  0x0a, 0xce, 0x24, 0xaa, 0x29, 0x38, 0xa3, 0xf8, 0xb2, 0xc0, 0xb4, 0x14,
  0x5c, 0xcb, 0x51, 0xa9, 0x19, 0x57, 0x6b, 0x11, 0xbe, 0x63, 0xdc, 0x70,
  0x96, 0x50, 0x1d, 0xc7, 0x11, 0x8c, 0xad, 0x6f, 0x0e, 0xd3, 0x6f, 0xb7,
  0x77, 0xe5, 0x7a, 0x40, 0x7c, 0xdf, 0xf8, 0x17, 0xdf, 0x38, 0x35, 0x46,
  0x7c, 0x17, 0x5b, 0xa7, 0x86, 0x18, 0xc7, 0x31, 0x86, 0x11, 0xdf, 0x54,
  0x1e, 0xfa, 0xd0, 0xb8, 0x11, 0xdf, 0xfa, 0x1f, 0xf3, 0x09, 0xae, 0x28,
  0xee, 0xc1, 0xdf, 0x0d, 0x34, 0x57, 0x72, 0xeb, 0x98, 0x8f, 0x6e, 0x7c,
  0x05, 0xee, 0x1e, 0x39, 0xf4, 0xd1, 0x38, 0xac, 0x04, 0x72, 0xe0, 0x1b,
  0xf0, 0x7b, 0xff, 0x0e, 0xdc, 0x43, 0x4b, 0xa3, 0x19, 0x2c, 0x5e, 0x5f,
  0x9c, 0x4f, 0xf6, 0x6f, 0x94, 0x7f, 0xda, 0xfd, 0xed, 0xcd, 0xf3, 0x8f,
  0xc2, 0x2b, 0x2f, 0xae, 0x06, 0x2f, 0xef, 0xdc, 0x7a, 0x9c, 0xfd, 0x13,
  0x25, 0xc1, 0xec, 0x32, 0x17, 0x00, 0x01, 0x00, 0x10, 0xdc, 0x19, 0x00,
  0x78, 0x01, 0xed, 0x99, 0xcf, 0x6f, 0x1b, 0x45, 0x14, 0xc7, 0x67, 0x67,
  0x9e, 0xc7, 0x6b, 0x7b, 0x32, 0x5e, 0xff, 0xa8, 0xe3, 0xa4, 0x76, 0xe2,
  0x24, 0x1b, 0xd7, 0xeb, 0xcd, 0x66, 0x1d, 0x52, 0x4a, 0x14, 0xa5, 0x65,
  0x15, 0x22, 0x54, 0xac, 0xd0, 0x48, 0x48, 0x5c, 0x10, 0x5c, 0xca, 0x2f,
  0x89, 0x0b, 0x21, 0x50, 0xa8, 0x38, 0x04, 0xdb, 0xa0, 0xc2, 0x21, 0x02,
  0x6e, 0x5c, 0x2a, 0x90, 0x38, 0x23, 0x0e, 0x1c, 0x10, 0x27, 0xa7, 0x24,
  0xd7, 0x70, 0x20, 0x2a, 0x3d, 0x20, 0x0e, 0xfd, 0x03, 0x38, 0xc1, 0x91,
  0x43, 0x78, 0x6f, 0xbd, 0x6e, 0x93, 0x10, 0x89, 0x1b, 0x08, 0xb4, 0x1f,
  0xe9, 0xcd, 0x77, 0xe6, 0xbb, 0x6f, 0x7e, 0xee, 0x26, 0x87, 0xf1, 0x2f,
  0x63, 0x2c, 0x44, 0xde, 0x5c, 0x7c, 0x8c, 0xf4, 0xb3, 0x3f, 0x5e, 0xb9,
  0xfb, 0x9d, 0xc5, 0x58, 0x82, 0x1a, 0x08, 0xa7, 0x02, 0xd9, 0x2c, 0x52,
  0xc9, 0xd8, 0xcd, 0x28, 0x1f, 0xa8, 0x88, 0xb8, 0x88, 0x71, 0x09, 0x83,
  0x08, 0xa8, 0x88, 0x30, 0x30, 0x7e, 0x38, 0x38, 0xb8, 0x8c, 0x71, 0x05,
  0xab, 0x7f, 0x61, 0x14, 0xe3, 0x03, 0x8c, 0xf7, 0x31, 0x08, 0xca, 0x1f,
  0x22, 0x31, 0xaa, 0x51, 0xfc, 0x1d, 0x0a, 0x23, 0x83, 0x71, 0xbc, 0xff,
  0x90, 0x47, 0xbf, 0xfe, 0x71, 0x05, 0x65, 0x0d, 0x83, 0x2d, 0xbc, 0xf8,
  0xf4, 0xe3, 0xa4, 0x43, 0x6e, 0x5c, 0x6e, 0x9d, 0xb9, 0xae, 0xff, 0x32,
  0xc3, 0xf7, 0x44, 0xcc, 0x1d, 0x7f, 0x49, 0x11, 0x43, 0xeb, 0x76, 0x99,
  0x4a, 0xc6, 0x92, 0x54, 0x20, 0xbf, 0x46, 0xed, 0xe1, 0xbb, 0xbc, 0x83,
  0x71, 0xd6, 0x79, 0x12, 0x47, 0x08, 0xe9, 0x59, 0xd0, 0x77, 0x23, 0xd9,
  0x46, 0x4b, 0x1a, 0x1f, 0xd6, 0x24, 0xdf, 0xb7, 0xa4, 0xc8, 0x2e, 0x48,
  0xd8, 0x58, 0x40, 0xfb, 0x1f, 0x63, 0xb0, 0x86, 0x01, 0xd2, 0x18, 0xec,
  0x42, 0xf2, 0xc1, 0x97, 0x2c, 0x85, 0x20, 0xc1, 0x83, 0x38, 0xe3, 0x70,
  0xfe, 0x47, 0xd0, 0x19, 0x1c, 0xfb, 0x14, 0x4e, 0xfc, 0xbd, 0x92, 0x7f,
  0xfc, 0x59, 0x4c, 0x4c, 0x4c, 0x4c, 0x4c, 0x4c, 0x4c, 0x4c, 0x4c, 0x4c,
  0x4c, 0x4c, 0x4c, 0x4c, 0x4c, 0xcc, 0xbf, 0xc2, 0x54, 0xa7, 0xbf, 0x99,
  0xdd, 0xd9, 0xad, 0xb1, 0x7b, 0x87, 0x56, 0xd2, 0x60, 0x19, 0xd4, 0x1c,
  0xea, 0x91, 0xe8, 0xf5, 0xbf, 0xda, 0xe0, 0x2c, 0x75, 0x34, 0xf2, 0x11,
  0x63, 0x16, 0xe3, 0xe2, 0x93, 0xfe, 0xf7, 0xe2, 0xe3, 0xbe, 0x29, 0x76,
  0xfa, 0xac, 0xb6, 0x74, 0xbf, 0xa6, 0x45, 0x87, 0x34, 0xc3, 0x44, 0x27,
  0x8f, 0x7d, 0xf2, 0xd8, 0xa7, 0x80, 0x5a, 0x40, 0xed, 0x05, 0xab, 0xed,
  0x6e, 0x70, 0xb5, 0x4d, 0xcf, 0xa7, 0x6a, 0x83, 0xbc, 0x42, 0x79, 0xa0,
  0xf9, 0xca, 0x40, 0x6d, 0x5b, 0x74, 0xb8, 0xf8, 0x02, 0xc7, 0xfc, 0xbc,
  0x2f, 0xc5, 0xed, 0x7e, 0xf2, 0xa8, 0x1a, 0xce, 0xf3, 0x7c, 0xf5, 0xde,
  0x5e, 0x47, 0x74, 0xfb, 0x2f, 0x55, 0x7b, 0x7b, 0x37, 0x70, 0x5d, 0xda,
  0xa9, 0xe8, 0xb7, 0x50, 0x19, 0xeb, 0x1c, 0x32, 0x77, 0x19, 0xb2, 0xd8,
  0xee, 0x95, 0x26, 0xda, 0xdd, 0x52, 0xa9, 0x6d, 0xa0, 0x67, 0xa0, 0x47,
  0xe3, 0x65, 0x1b, 0x83, 0x71, 0x33, 0x73, 0xa2, 0xd3, 0xb5, 0x2b, 0xe1,
  0xdc, 0xba, 0x25, 0x3a, 0xd4, 0xb7, 0xe2, 0x31, 0xd5, 0xb3, 0x4b, 0xed,
  0x3c, 0xe6, 0x97, 0x7d, 0x0e, 0x55, 0x8f, 0xab, 0x37, 0xd1, 0xb7, 0x1d,
  0xa6, 0x73, 0xce, 0x84, 0xae, 0xa0, 0x2f, 0xdc, 0x2b, 0x50, 0x73, 0xa4,
  0xee, 0xd5, 0x5b, 0xed, 0x31, 0x6c, 0x8f, 0xf9, 0x12, 0x2c, 0x87, 0xeb,
  0x6e, 0xbd, 0xde, 0x9e, 0x75, 0x02, 0x1d, 0x8e, 0x8d, 0x7b, 0xce, 0xe0,
  0x33, 0xee, 0x4a, 0x98, 0x72, 0x56, 0x75, 0x3e, 0xb5, 0xac, 0x27, 0xbc,
  0x92, 0x9a, 0x76, 0x56, 0xf4, 0xa4, 0xb7, 0xa4, 0x12, 0x8b, 0xcb, 0x6a,
  0xdc, 0x2f, 0xa9, 0x7c, 0xce, 0xd6, 0xa9, 0x45, 0x3b, 0x9c, 0xa3, 0x81,
  0xf9, 0x0d, 0x57, 0xc3, 0x16, 0xd6, 0xe7, 0x5c, 0xa6, 0x3c, 0x37, 0x50,
  0x6f, 0x50, 0x1d, 0xfd, 0x96, 0xc7, 0xc3, 0xb5, 0x17, 0xf0, 0x0c, 0x2f,
  0x38, 0x75, 0x5d, 0x77, 0x9e, 0x0b, 0xe7, 0x29, 0xe3, 0xd9, 0xac, 0x57,
  0xe5, 0x7e, 0x19, 0x73, 0x16, 0xbc, 0x1e, 0x4c, 0xa2, 0x3a, 0xee, 0x2d,
  0xa8, 0xa1, 0xce, 0xbb, 0xdf, 0x82, 0xef, 0xd6, 0xd5, 0x8c, 0xd3, 0xd0,
  0x4d, 0x77, 0x45, 0xb9, 0x6e, 0x43, 0x2d, 0x7a, 0x75, 0x45, 0xe3, 0x6b,
  0x7c, 0xae, 0xbd, 0x2f, 0x21, 0x8b, 0x9a, 0xf5, 0xb6, 0xc3, 0x7e, 0x8f,
  0x60, 0x7f, 0x0b, 0xd5, 0xf2, 0xde, 0x85, 0x73, 0xa8, 0xe7, 0xfd, 0x2d,
  0x10, 0x55, 0xd8, 0x5b, 0xaa, 0xea, 0xfd, 0x1c, 0xb6, 0x73, 0xde, 0x33,
  0x60, 0x1a, 0x9d, 0x3b, 0xb4, 0xa6, 0xf0, 0x8c, 0xfd, 0x6f, 0x80, 0xa5,
  0x56, 0x75, 0x78, 0xb6, 0xfe, 0x75, 0xa0, 0x6f, 0xc3, 0xf6, 0x2b, 0x8a,
  0xd6, 0x22, 0x47, 0xdf, 0x86, 0x71, 0xd4, 0x84, 0xb8, 0x05, 0x3a, 0x65,
  0xea, 0x59, 0x7f, 0x42, 0x71, 0x6c, 0x73, 0x7f, 0x1b, 0x12, 0x93, 0xa6,
  0xaa, 0xfb, 0x35, 0x95, 0xc0, 0xb6, 0x4c, 0xbc, 0x06, 0x02, 0x55, 0xf8,
  0xd7, 0xc2, 0x39, 0x93, 0xee, 0x75, 0x90, 0x53, 0xa6, 0x22, 0x2f, 0x99,
  0x2c, 0xc1, 0x7b, 0x6c, 0x67, 0xb7, 0xdc, 0x54, 0x9a, 0x72, 0x2f, 0xf8,
  0x4f, 0x42, 0x32, 0x63, 0xaa, 0x31, 0xa9, 0xd4, 0x5c, 0x33, 0xad, 0xc7,
  0x4d, 0xa5, 0x3c, 0x99, 0x56, 0xad, 0xe6, 0xb4, 0x9e, 0x37, 0xd3, 0xea,
  0xbc, 0x56, 0x6a, 0x41, 0x4e, 0x2b, 0x68, 0xd6, 0x35, 0xcb, 0x31, 0x1d,
  0x04, 0x9b, 0xf7, 0x99, 0x0c, 0xd2, 0xbe, 0x4e, 0x2b, 0x89, 0xfd, 0xe1,
  0xe5, 0x35, 0xa0, 0x7d, 0x88, 0xcc, 0x3a, 0xa4, 0x04, 0x53, 0x3a, 0x67,
  0xe9, 0x35, 0xca, 0x49, 0x04, 0x69, 0x1a, 0x3f, 0xf9, 0x6a, 0x19, 0x68,
  0x2f, 0xe9, 0xd1, 0x36, 0x84, 0xf9, 0x23, 0x6b, 0x90, 0x9a, 0xb4, 0x14,
  0x3e, 0x54, 0x57, 0xa3, 0x3c, 0xda, 0x43, 0x32, 0x5b, 0x06, 0x8b, 0xe7,
  0x75, 0x0d, 0xd7, 0xb0, 0x4e, 0x3e, 0x1f, 0xf8, 0xe2, 0x89, 0x22, 0xd8,
  0xe8, 0x51, 0x5f, 0x36, 0x63, 0x83, 0xc2, 0x9c, 0xf4, 0x94, 0xa5, 0x46,
  0x58, 0x5e, 0x4d, 0x9b, 0xa0, 0x66, 0x71, 0xad, 0x79, 0x4b, 0xa9, 0x22,
  0xe7, 0x7a, 0xf0, 0x8d, 0x02, 0x68, 0x2b, 0xaf, 0xe4, 0x48, 0x49, 0xcf,
  0x68, 0x50, 0x75, 0xdc, 0x03, 0xa3, 0xf1, 0x54, 0x90, 0x06, 0xd2, 0x91,
  0x20, 0x6d, 0x91, 0x46, 0xe3, 0x27, 0x37, 0x8a, 0x90, 0x2a, 0x94, 0x54,
  0xc9, 0x62, 0xaa, 0x78, 0xcc, 0x67, 0xc6, 0x3c, 0x34, 0x9a, 0x45, 0xcd,
  0x5f, 0x80, 0x6d, 0x47, 0x16, 0xd5, 0xa4, 0xe6, 0xba, 0x2a, 0x65, 0x78,
  0x66, 0xf0, 0x6c, 0x03, 0x2a, 0x4d, 0xa9, 0x26, 0x4c, 0xae, 0x5c, 0x3c,
  0x07, 0xc3, 0x94, 0x87, 0x42, 0x70, 0x56, 0xa6, 0xfe, 0xb8, 0x9f, 0x0a,
  0xa9, 0x81, 0xe3, 0x14, 0xb8, 0xae, 0x0d, 0xeb, 0x23, 0x5c, 0xdb, 0xc3,
  0xba, 0xc1, 0xf4, 0x6f, 0x9c, 0x6f, 0x37, 0xa8, 0xcd, 0x82, 0x74, 0x2b,
  0xf2, 0x2f, 0x46, 0x6a, 0x72, 0xb6, 0xbd, 0x14, 0xd5, 0x57, 0x48, 0x31,
  0x87, 0xb1, 0xee, 0xee, 0x39, 0xfa, 0x7f, 0x71, 0xea, 0xb2, 0x3a, 0xfc,
  0x99, 0xe2, 0x94, 0x17, 0x5e, 0x71, 0x9f, 0xf2, 0x2c, 0x2a, 0x4e, 0x79,
  0xe3, 0x54, 0x18, 0xe1, 0x3d, 0x71, 0x8b, 0x0a, 0x62, 0x1c, 0x73, 0x0c,
  0x23, 0xbc, 0x45, 0x7d, 0xe8, 0x61, 0x70, 0x83, 0x6e, 0x5a, 0x4f, 0x7a,
  0x82, 0x4b, 0x1a, 0xf7, 0xc1, 0x4f, 0x21, 0xd4, 0x17, 0xb8, 0x79, 0xc2,
  0xa3, 0xdb, 0x68, 0x81, 0x6f, 0x1e, 0x79, 0xe8, 0x51, 0x1e, 0x98, 0x54,
  0x7d, 0xe0, 0x0d, 0xf9, 0x34, 0xfa, 0xdd, 0xc5, 0xc6, 0x48, 0x61, 0x18,
  0x6c, 0x70, 0x8f, 0x4d, 0xf3, 0x41, 0x74, 0xdb, 0xfd, 0xf3, 0xe1, 0xef,
  0xaf, 0x5f, 0xba, 0xeb, 0xad, 0x3f, 0xb5, 0xe5, 0x5e, 0x3b, 0x78, 0xe7,
  0xa7, 0xcc, 0x9f, 0x4f, 0x1b, 0x0d, 0x50, 0x00, 0x17, 0x00, 0x01, 0x00,
  0x00, 0x64, 0x19, 0x00, 0x78, 0x01, 0xed, 0x99, 0xcd, 0x6f, 0x1b, 0x45,
  0x14, 0xc0, 0x67, 0x67, 0x9f, 0xc7, 0xeb, 0xf5, 0x63, 0xe2, 0xaf, 0x38,
  0x4e, 0xea, 0x38, 0x5e, 0xc7, 0x31, 0x71, 0x37, 0x9b, 0x75, 0xdc, 0x90,
  0x9a, 0x36, 0x5f, 0xd0, 0x8a, 0x82, 0x15, 0x9a, 0x82, 0xc4, 0x0d, 0x10,
  0x42, 0x15, 0x07, 0x84, 0x44, 0x28, 0x45, 0x80, 0x90, 0x82, 0x93, 0x03,
  0xe5, 0x50, 0x21, 0x04, 0x48, 0xa8, 0x9c, 0x10, 0x5c, 0x39, 0x70, 0xe4,
  0xe4, 0xa4, 0xc9, 0xb5, 0x07, 0x14, 0x95, 0x0a, 0x10, 0x12, 0xfc, 0x0d,
  0xe5, 0x08, 0x52, 0x78, 0x6f, 0xbd, 0x0e, 0x6e, 0xda, 0x33, 0x08, 0xb4,
  0x3f, 0xeb, 0xcd, 0xdb, 0x79, 0xfb, 0xe6, 0xcd, 0x9b, 0x37, 0xe3, 0xcb,
  0xec, 0xe5, 0x51, 0x11, 0x50, 0xda, 0xdb, 0xdd, 0x61, 0xfd, 0xf9, 0x1f,
  0xaf, 0xdc, 0xfe, 0x2e, 0x25, 0x44, 0x8c, 0x3b, 0x03, 0x6c, 0xe4, 0xb8,
  0x25, 0x42, 0x7f, 0x93, 0x9b, 0x90, 0xf3, 0x24, 0xb3, 0x24, 0xcc, 0x2a,
  0x37, 0x21, 0x06, 0xc9, 0x17, 0x37, 0x6e, 0x2c, 0x91, 0x2c, 0xd3, 0xe3,
  0x7d, 0x14, 0x48, 0xae, 0x91, 0x7c, 0x40, 0xc2, 0xb0, 0x7f, 0x1f, 0x9e,
  0x1f, 0x43, 0x61, 0x8e, 0xe7, 0x33, 0x08, 0xfb, 0xd8, 0x24, 0x92, 0xe4,
  0x38, 0xad, 0x0b, 0xbf, 0x2e, 0x92, 0xe2, 0x14, 0xc5, 0x33, 0x2f, 0x9e,
  0x5b, 0x69, 0xbc, 0xb7, 0xcb, 0xfd, 0x80, 0x8d, 0x8f, 0x96, 0x1f, 0x98,
  0xd7, 0x7f, 0x99, 0xa3, 0x7d, 0x22, 0x7e, 0x19, 0xdc, 0xa4, 0x90, 0x7e,
  0x8d, 0xd6, 0xb8, 0xf8, 0x44, 0x9c, 0x1b, 0xe2, 0x6a, 0xd8, 0xef, 0xef,
  0xe5, 0x2e, 0xc9, 0xe0, 0x7e, 0x0c, 0x72, 0x48, 0xb0, 0x7e, 0x10, 0xbc,
  0x4f, 0x4a, 0xac, 0x37, 0x94, 0x71, 0xad, 0xac, 0xe4, 0x7e, 0x4a, 0x99,
  0x43, 0x73, 0x0a, 0xd6, 0xe7, 0xc8, 0xfc, 0x8f, 0xd1, 0xcb, 0xa1, 0x87,
  0x32, 0x7a, 0xab, 0x50, 0xb2, 0xb7, 0x72, 0x65, 0x86, 0x45, 0x01, 0xe0,
  0xf6, 0x7f, 0x0b, 0xd7, 0x60, 0xe0, 0x28, 0x88, 0xfe, 0x6a, 0xb9, 0x1a,
  0x7d, 0xfb, 0x25, 0x6e, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22,
  0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0xfe, 0x2d, 0x9c, 0x4e,
  0x77, 0x63, 0xe8, 0xfa, 0x8e, 0x14, 0x77, 0x0e, 0x52, 0x71, 0xbe, 0xb5,
  0xb8, 0x73, 0x90, 0x26, 0x7d, 0x68, 0x76, 0xba, 0xdf, 0xac, 0x4b, 0x21,
  0xcc, 0x4f, 0xbb, 0x37, 0xcd, 0x4f, 0xba, 0x96, 0xf9, 0x71, 0x37, 0x71,
  0x98, 0xfe, 0x50, 0x88, 0x94, 0x10, 0xe5, 0xd6, 0x6f, 0x52, 0x43, 0x87,
  0xb5, 0x28, 0x40, 0xc7, 0xa4, 0x31, 0x19, 0x1a, 0x93, 0x24, 0x9d, 0x25,
  0xbd, 0x0d, 0xd5, 0xf6, 0x16, 0x40, 0x9b, 0xdf, 0x67, 0x8a, 0x3d, 0x3f,
  0x59, 0x86, 0xce, 0xb6, 0x80, 0xf6, 0x96, 0x10, 0x81, 0x3d, 0x59, 0x0d,
  0xed, 0xd3, 0x3d, 0x6d, 0xce, 0xf4, 0xb4, 0x68, 0x40, 0x67, 0x4b, 0x41,
  0x7b, 0x5b, 0xf5, 0xfc, 0xe4, 0x7c, 0x68, 0x6f, 0x91, 0x36, 0xbf, 0xa6,
  0x5c, 0xbe, 0xea, 0xc6, 0x0f, 0x9d, 0x20, 0x0f, 0x65, 0x7e, 0xd9, 0x5d,
  0x73, 0xc4, 0xfe, 0x4d, 0xf3, 0xcf, 0xee, 0xbb, 0xb4, 0x06, 0x5d, 0x2f,
  0xea, 0x77, 0x48, 0x9b, 0xa2, 0x73, 0x50, 0x70, 0xcf, 0xc0, 0x76, 0xbe,
  0xd1, 0xde, 0xca, 0xe7, 0x83, 0x38, 0x85, 0xd5, 0x5e, 0x9c, 0xe4, 0x22,
  0x74, 0x86, 0xea, 0xa5, 0xc0, 0xcf, 0xa9, 0x57, 0x75, 0xb9, 0x5e, 0xd3,
  0xa3, 0x6e, 0x09, 0x53, 0xf5, 0xb2, 0x1e, 0x73, 0xcb, 0xf8, 0x16, 0xd9,
  0x93, 0x34, 0xde, 0xf3, 0x96, 0xe1, 0x2a, 0x3d, 0x4b, 0x7a, 0x9e, 0x73,
  0xdb, 0x90, 0x21, 0xdd, 0x70, 0x2f, 0x42, 0x91, 0xfc, 0xdf, 0x24, 0xbb,
  0xa0, 0xfe, 0x23, 0x9e, 0x0d, 0xfc, 0x7e, 0xde, 0x6b, 0xc3, 0x8c, 0xa7,
  0x70, 0x9c, 0xe2, 0xb2, 0xdf, 0x34, 0xf9, 0x55, 0x28, 0x97, 0x3a, 0xc5,
  0xbd, 0x42, 0xbe, 0x2d, 0xaf, 0x8a, 0xa5, 0x7a, 0x43, 0x57, 0x7d, 0x85,
  0x4d, 0xb7, 0x88, 0xb3, 0x5e, 0x19, 0x1f, 0xf5, 0x4a, 0x98, 0xae, 0x57,
  0xf4, 0x49, 0xb7, 0x81, 0x66, 0xba, 0xa6, 0xa7, 0xfc, 0x3c, 0x2e, 0x78,
  0x45, 0xac, 0xf9, 0x65, 0x4c, 0x8c, 0xd4, 0xf0, 0x84, 0x5b, 0xc1, 0x33,
  0x1e, 0xbd, 0x4b, 0x28, 0x6d, 0x3b, 0x35, 0x9c, 0xac, 0xcf, 0xeb, 0xd8,
  0x88, 0x42, 0xce, 0xed, 0x94, 0xfb, 0x2a, 0xbc, 0x2f, 0xae, 0xef, 0x40,
  0x6d, 0x41, 0x4f, 0xd4, 0xa7, 0xb5, 0x72, 0x14, 0x9e, 0xf6, 0xf2, 0xf8,
  0x06, 0xcd, 0xb5, 0xea, 0x57, 0x91, 0xf7, 0x73, 0xd1, 0x07, 0x94, 0xe9,
  0xa6, 0x5e, 0xf2, 0x05, 0x3e, 0xe6, 0x97, 0x30, 0x93, 0x4e, 0x69, 0x99,
  0x00, 0x9d, 0x30, 0x9a, 0xb8, 0xec, 0x17, 0x31, 0x31, 0x91, 0xc2, 0x04,
  0xc5, 0xf2, 0xbd, 0x27, 0x20, 0x4d, 0xfa, 0x71, 0xff, 0x65, 0xe0, 0x35,
  0xc5, 0x0c, 0x1b, 0xec, 0xf1, 0x26, 0xf2, 0xba, 0xec, 0xc9, 0x0a, 0x88,
  0x5a, 0x4a, 0x9b, 0x8e, 0xd8, 0x6b, 0x39, 0xd6, 0xfe, 0x65, 0xe7, 0xb3,
  0xbd, 0xe7, 0x9d, 0xef, 0xf7, 0x32, 0x09, 0x4b, 0x17, 0xe8, 0xfd, 0x68,
  0xf2, 0x35, 0xb0, 0x49, 0xbb, 0xee, 0xb3, 0xf0, 0xb0, 0x9f, 0x41, 0xa3,
  0x99, 0xc2, 0xd8, 0x84, 0x85, 0x31, 0xb2, 0xc5, 0xb3, 0x1a, 0xac, 0x9a,
  0xd2, 0x6a, 0x5c, 0x04, 0xf3, 0x9c, 0xf5, 0x4e, 0x06, 0xbe, 0x2b, 0xfe,
  0x2c, 0xa4, 0x48, 0xcb, 0x87, 0x5e, 0x02, 0x35, 0x69, 0x21, 0xdb, 0xe2,
  0xc3, 0x12, 0x12, 0x4d, 0x85, 0x12, 0x52, 0x98, 0x72, 0xf2, 0x1a, 0xed,
  0x8a, 0xe6, 0x5c, 0xce, 0xf9, 0x35, 0xe0, 0xb1, 0x56, 0x7a, 0x16, 0x78,
  0xdd, 0xf6, 0x89, 0xf3, 0x41, 0xae, 0x72, 0x18, 0xe1, 0x92, 0x30, 0xbe,
  0xe5, 0x1a, 0x94, 0x6d, 0xd4, 0x55, 0xbb, 0xa8, 0xa7, 0xed, 0x92, 0xe6,
  0x9c, 0xd3, 0x93, 0x35, 0xc8, 0xd2, 0x39, 0x34, 0x4c, 0x21, 0xe2, 0x86,
  0x85, 0x4e, 0x0e, 0xb1, 0x9e, 0x2b, 0xe1, 0x54, 0xae, 0x88, 0x45, 0x5b,
  0x68, 0xf9, 0xc2, 0xf4, 0x26, 0x9f, 0x0f, 0x78, 0x6e, 0x31, 0x88, 0x0d,
  0x4f, 0xb7, 0xa0, 0x62, 0x21, 0x6a, 0x2b, 0x8f, 0x9a, 0xfa, 0xf6, 0x59,
  0x01, 0xe9, 0x5c, 0x2f, 0x56, 0x7c, 0xbd, 0x0a, 0x06, 0xeb, 0x0b, 0x05,
  0x50, 0xa4, 0x61, 0xa9, 0x05, 0x59, 0x5d, 0x0d, 0x72, 0x8b, 0x4f, 0xcc,
  0x80, 0xab, 0x55, 0xb0, 0xb6, 0x98, 0xb3, 0x08, 0x39, 0xca, 0xa1, 0x60,
  0xdb, 0xda, 0x4a, 0xb4, 0x7e, 0xca, 0x0a, 0x49, 0x3f, 0x8a, 0x75, 0x2a,
  0x17, 0xe4, 0x0d, 0x53, 0x4f, 0x02, 0xcf, 0x69, 0xbb, 0xad, 0xa0, 0xc6,
  0xf1, 0x95, 0x02, 0x18, 0x96, 0x3a, 0x48, 0x8c, 0x48, 0xc1, 0xb5, 0x02,
  0x0f, 0x61, 0xcc, 0x02, 0xcc, 0x4d, 0x5a, 0x5a, 0x98, 0x34, 0x1e, 0xf9,
  0xde, 0x9f, 0xfc, 0x4e, 0x5b, 0xc1, 0xf9, 0x8a, 0xfb, 0x39, 0x98, 0x16,
  0xf3, 0x3f, 0x66, 0x69, 0x74, 0xce, 0x91, 0x3a, 0x97, 0x16, 0xfa, 0xae,
  0xb4, 0x36, 0xef, 0x4a, 0x4d, 0x82, 0x9b, 0x42, 0xda, 0x9b, 0x12, 0x68,
  0x1c, 0xfd, 0x5d, 0x55, 0x9c, 0xb4, 0x22, 0x47, 0xb1, 0xb5, 0x33, 0x4c,
  0xed, 0xf1, 0xcb, 0x65, 0xfa, 0xf7, 0xde, 0x67, 0x1b, 0xe3, 0x86, 0x0b,
  0x26, 0x44, 0x83, 0x1b, 0x66, 0x8c, 0x7c, 0x0c, 0x83, 0xe3, 0x0c, 0xd8,
  0x48, 0xa4, 0xc1, 0x37, 0x9e, 0xf7, 0xda, 0x4c, 0xa9, 0x38, 0xee, 0xd1,
  0x27, 0x09, 0x1e, 0x0b, 0xd2, 0xba, 0xc7, 0x46, 0xa9, 0x09, 0x93, 0xaa,
  0x48, 0xfc, 0x6d, 0x63, 0x3f, 0xb0, 0xf8, 0xf1, 0xc8, 0xd6, 0xa7, 0x10,
  0x7e, 0xff, 0xa8, 0x92, 0x24, 0x48, 0x8c, 0xf0, 0x4b, 0x08, 0xcf, 0x07,
  0xe1, 0xad, 0xf3, 0xcf, 0x07, 0xbf, 0xbf, 0xbe, 0x70, 0xdb, 0x5b, 0x7b,
  0xea, 0x8a, 0x7b, 0xf1, 0xd6, 0xdb, 0x3f, 0x24, 0xff, 0x02, 0x3c, 0x50,
  0xf3, 0xdf, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x03, 0x01, 0x08, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x04, 0x03,
  0x08, 0x02, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x03, 0x01, 0x05, 0x05, 0x04, 0x02, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x02, 0x06, 0x06, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x02, 0x08, 0x08,
  0x00, 0x04, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb8, 0x00, 0x00,
  0x78, 0x01, 0x35, 0x8c, 0xb1, 0x0d, 0x80, 0x40, 0x0c, 0xc4, 0x0e, 0x10,
  0x3b, 0xd0, 0xb0, 0xd5, 0x97, 0x0c, 0x41, 0xc9, 0x10, 0x94, 0x0c, 0x41,
  0x49, 0xc9, 0x76, 0x60, 0x0b, 0x62, 0xc9, 0xca, 0xe5, 0x22, 0xa5, 0x4b,
  0x32, 0xe2, 0x84, 0x72, 0xe3, 0x8c, 0x62, 0xdf, 0x50, 0xcc, 0x2b, 0x8a,
  0x79, 0xc7, 0x1e, 0xe5, 0x44, 0xb3, 0xbf, 0xae, 0x7f, 0x2e, 0x28, 0xe6,
  0xe2, 0x01, 0xf7, 0x0d, 0xc5, 0xac, 0x52, 0xb7, 0x03, 0x07, 0xac, 0x5e,
  0xbc, 0x39, 0xe5, 0xeb, 0x93, 0x17, 0x7c, 0x02, 0x11, 0x17, 0x00, 0x00,
  0x78, 0x62, 0x6f, 0x70, 0x01, 0x00, 0x00, 0x00, 0x7e, 0x02, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00
};
