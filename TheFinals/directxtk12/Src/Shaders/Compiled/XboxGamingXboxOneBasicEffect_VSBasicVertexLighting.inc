#if 0
;
; Input signature:
;
; Name                 Index   Mask Register SysValue  Format   Used
; -------------------- ----- ------ -------- -------- ------- ------
; SV_Position              0   xyzw        0     NONE   float   xyzw
; NORMAL                   0   xyz         1     NONE   float   xyz 
;
;
; Output signature:
;
; Name                 Index   Mask Register SysValue  Format   Used
; -------------------- ----- ------ -------- -------- ------- ------
; COLOR                    0   xyzw        0     NONE   float   xyzw
; COLOR                    1   xyzw        1     NONE   float   xyzw
; SV_Position              0   xyzw        2      POS   float   xyzw
;
; shader debug name: C:\Users\marcu\Downloads\DirectXTK12-main\DirectXTK12-main\Src/Shaders/Compiled\XboxGamingXboxOneBasicEffect_VSBasicVertexLighting.pdb
; shader hash: 1ea8bb64f2639e724a12912b8339ad4b
;
; Pipeline Runtime Information: 
;
;PSVRuntimeInfo:
; Vertex Shader
; OutputPositionPresent=1
; MinimumExpectedWaveLaneCount: 0
; MaximumExpectedWaveLaneCount: 4294967295
; UsesViewID: false
; SigInputElements: 2
; SigOutputElements: 3
; SigPatchConstOrPrimElements: 0
; SigInputVectors: 2
; SigOutputVectors[0]: 3
; SigOutputVectors[1]: 0
; SigOutputVectors[2]: 0
; SigOutputVectors[3]: 0
; EntryFunctionName: VSBasicVertexLighting
;
;
; Input signature:
;
; Name                 Index             InterpMode DynIdx
; -------------------- ----- ---------------------- ------
; SV_Position              0                              
; NORMAL                   0                              
;
; Output signature:
;
; Name                 Index             InterpMode DynIdx
; -------------------- ----- ---------------------- ------
; COLOR                    0                 linear       
; COLOR                    1                 linear       
; SV_Position              0          noperspective       
;
; Buffer Definitions:
;
; cbuffer 
; {
;
;   [416 x i8] (type annotation not present)
;
; }
;
;
; Resource Bindings:
;
; Name                                 Type  Format         Dim      ID      HLSL Bind  Count
; ------------------------------ ---------- ------- ----------- ------- -------------- ------
;                                   cbuffer      NA          NA     CB0            cb0     1
;
;
; ViewId state:
;
; Number of inputs: 7, outputs: 12
; Outputs dependent on ViewId: {  }
; Inputs contributing to computation of Outputs:
;   output 0 depends on inputs: { 4, 5, 6 }
;   output 1 depends on inputs: { 4, 5, 6 }
;   output 2 depends on inputs: { 4, 5, 6 }
;   output 4 depends on inputs: { 0, 1, 2, 3, 4, 5, 6 }
;   output 5 depends on inputs: { 0, 1, 2, 3, 4, 5, 6 }
;   output 6 depends on inputs: { 0, 1, 2, 3, 4, 5, 6 }
;   output 7 depends on inputs: { 0, 1, 2, 3 }
;   output 8 depends on inputs: { 0, 1, 2, 3 }
;   output 9 depends on inputs: { 0, 1, 2, 3 }
;   output 10 depends on inputs: { 0, 1, 2, 3 }
;   output 11 depends on inputs: { 0, 1, 2, 3 }
;
target datalayout = "e-m:e-p:32:32-i1:32-i8:32-i16:32-i32:32-i64:64-f16:32-f32:32-f64:64-n8:16:32:64"
target triple = "dxil-ms-xb1"

%dx.types.Handle = type { i8* }
%dx.types.CBufRet.f32 = type { float, float, float, float }
%hostlayout.Parameters = type { <4 x float>, <3 x float>, <3 x float>, float, [3 x <3 x float>], [3 x <3 x float>], [3 x <3 x float>], <3 x float>, <3 x float>, <4 x float>, [4 x <4 x float>], [3 x <3 x float>], [4 x <4 x float>] }

define void @VSBasicVertexLighting() {
  %1 = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 2, i32 0, i32 0, i1 false)  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %2 = call float @dx.op.loadInput.f32(i32 4, i32 1, i32 0, i8 0, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %3 = call float @dx.op.loadInput.f32(i32 4, i32 1, i32 0, i8 1, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %4 = call float @dx.op.loadInput.f32(i32 4, i32 1, i32 0, i8 2, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %5 = call float @dx.op.loadInput.f32(i32 4, i32 0, i32 0, i8 0, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %6 = call float @dx.op.loadInput.f32(i32 4, i32 0, i32 0, i8 1, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %7 = call float @dx.op.loadInput.f32(i32 4, i32 0, i32 0, i8 2, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %8 = call float @dx.op.loadInput.f32(i32 4, i32 0, i32 0, i8 3, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %9 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 15)  ; CBufferLoadLegacy(handle,regIndex)
  %10 = extractvalue %dx.types.CBufRet.f32 %9, 0
  %11 = extractvalue %dx.types.CBufRet.f32 %9, 1
  %12 = extractvalue %dx.types.CBufRet.f32 %9, 2
  %13 = extractvalue %dx.types.CBufRet.f32 %9, 3
  %14 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 16)  ; CBufferLoadLegacy(handle,regIndex)
  %15 = extractvalue %dx.types.CBufRet.f32 %14, 0
  %16 = extractvalue %dx.types.CBufRet.f32 %14, 1
  %17 = extractvalue %dx.types.CBufRet.f32 %14, 2
  %18 = extractvalue %dx.types.CBufRet.f32 %14, 3
  %19 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 17)  ; CBufferLoadLegacy(handle,regIndex)
  %20 = extractvalue %dx.types.CBufRet.f32 %19, 0
  %21 = extractvalue %dx.types.CBufRet.f32 %19, 1
  %22 = extractvalue %dx.types.CBufRet.f32 %19, 2
  %23 = extractvalue %dx.types.CBufRet.f32 %19, 3
  %24 = fmul fast float %10, %5
  %25 = call float @dx.op.tertiary.f32(i32 46, float %6, float %11, float %24)  ; FMad(a,b,c)
  %26 = call float @dx.op.tertiary.f32(i32 46, float %7, float %12, float %25)  ; FMad(a,b,c)
  %27 = call float @dx.op.tertiary.f32(i32 46, float %8, float %13, float %26)  ; FMad(a,b,c)
  %28 = fmul fast float %15, %5
  %29 = call float @dx.op.tertiary.f32(i32 46, float %6, float %16, float %28)  ; FMad(a,b,c)
  %30 = call float @dx.op.tertiary.f32(i32 46, float %7, float %17, float %29)  ; FMad(a,b,c)
  %31 = call float @dx.op.tertiary.f32(i32 46, float %8, float %18, float %30)  ; FMad(a,b,c)
  %32 = fmul fast float %20, %5
  %33 = call float @dx.op.tertiary.f32(i32 46, float %6, float %21, float %32)  ; FMad(a,b,c)
  %34 = call float @dx.op.tertiary.f32(i32 46, float %7, float %22, float %33)  ; FMad(a,b,c)
  %35 = call float @dx.op.tertiary.f32(i32 46, float %8, float %23, float %34)  ; FMad(a,b,c)
  %36 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 12)  ; CBufferLoadLegacy(handle,regIndex)
  %37 = extractvalue %dx.types.CBufRet.f32 %36, 0
  %38 = extractvalue %dx.types.CBufRet.f32 %36, 1
  %39 = extractvalue %dx.types.CBufRet.f32 %36, 2
  %40 = fsub fast float %37, %27
  %41 = fsub fast float %38, %31
  %42 = fsub fast float %39, %35
  %43 = call float @dx.op.dot3.f32(i32 55, float %40, float %41, float %42, float %40, float %41, float %42)  ; Dot3(ax,ay,az,bx,by,bz)
  %44 = call float @dx.op.unary.f32(i32 25, float %43)  ; Rsqrt(value)
  %45 = fmul fast float %40, %44
  %46 = fmul fast float %41, %44
  %47 = fmul fast float %42, %44
  %48 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 19)  ; CBufferLoadLegacy(handle,regIndex)
  %49 = extractvalue %dx.types.CBufRet.f32 %48, 0
  %50 = extractvalue %dx.types.CBufRet.f32 %48, 1
  %51 = extractvalue %dx.types.CBufRet.f32 %48, 2
  %52 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 20)  ; CBufferLoadLegacy(handle,regIndex)
  %53 = extractvalue %dx.types.CBufRet.f32 %52, 0
  %54 = extractvalue %dx.types.CBufRet.f32 %52, 1
  %55 = extractvalue %dx.types.CBufRet.f32 %52, 2
  %56 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 21)  ; CBufferLoadLegacy(handle,regIndex)
  %57 = extractvalue %dx.types.CBufRet.f32 %56, 0
  %58 = extractvalue %dx.types.CBufRet.f32 %56, 1
  %59 = extractvalue %dx.types.CBufRet.f32 %56, 2
  %60 = fmul fast float %49, %2
  %61 = call float @dx.op.tertiary.f32(i32 46, float %3, float %50, float %60)  ; FMad(a,b,c)
  %62 = call float @dx.op.tertiary.f32(i32 46, float %4, float %51, float %61)  ; FMad(a,b,c)
  %63 = fmul fast float %53, %2
  %64 = call float @dx.op.tertiary.f32(i32 46, float %3, float %54, float %63)  ; FMad(a,b,c)
  %65 = call float @dx.op.tertiary.f32(i32 46, float %4, float %55, float %64)  ; FMad(a,b,c)
  %66 = fmul fast float %57, %2
  %67 = call float @dx.op.tertiary.f32(i32 46, float %3, float %58, float %66)  ; FMad(a,b,c)
  %68 = call float @dx.op.tertiary.f32(i32 46, float %4, float %59, float %67)  ; FMad(a,b,c)
  %69 = call float @dx.op.dot3.f32(i32 55, float %62, float %65, float %68, float %62, float %65, float %68)  ; Dot3(ax,ay,az,bx,by,bz)
  %70 = call float @dx.op.unary.f32(i32 25, float %69)  ; Rsqrt(value)
  %71 = fmul fast float %70, %62
  %72 = fmul fast float %70, %65
  %73 = fmul fast float %70, %68
  %74 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 3)  ; CBufferLoadLegacy(handle,regIndex)
  %75 = extractvalue %dx.types.CBufRet.f32 %74, 0
  %76 = extractvalue %dx.types.CBufRet.f32 %74, 1
  %77 = extractvalue %dx.types.CBufRet.f32 %74, 2
  %78 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 6)  ; CBufferLoadLegacy(handle,regIndex)
  %79 = extractvalue %dx.types.CBufRet.f32 %78, 0
  %80 = extractvalue %dx.types.CBufRet.f32 %78, 1
  %81 = extractvalue %dx.types.CBufRet.f32 %78, 2
  %82 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 9)  ; CBufferLoadLegacy(handle,regIndex)
  %83 = extractvalue %dx.types.CBufRet.f32 %82, 0
  %84 = extractvalue %dx.types.CBufRet.f32 %82, 1
  %85 = extractvalue %dx.types.CBufRet.f32 %82, 2
  %86 = fsub fast float %45, %75
  %87 = fsub fast float %46, %76
  %88 = fsub fast float %47, %77
  %89 = call float @dx.op.dot3.f32(i32 55, float %86, float %87, float %88, float %86, float %87, float %88)  ; Dot3(ax,ay,az,bx,by,bz)
  %90 = call float @dx.op.unary.f32(i32 25, float %89)  ; Rsqrt(value)
  %91 = fmul fast float %90, %87
  %92 = fmul fast float %90, %88
  %93 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 4)  ; CBufferLoadLegacy(handle,regIndex)
  %94 = extractvalue %dx.types.CBufRet.f32 %93, 0
  %95 = extractvalue %dx.types.CBufRet.f32 %93, 1
  %96 = extractvalue %dx.types.CBufRet.f32 %93, 2
  %97 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 7)  ; CBufferLoadLegacy(handle,regIndex)
  %98 = extractvalue %dx.types.CBufRet.f32 %97, 0
  %99 = extractvalue %dx.types.CBufRet.f32 %97, 1
  %100 = extractvalue %dx.types.CBufRet.f32 %97, 2
  %101 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 10)  ; CBufferLoadLegacy(handle,regIndex)
  %102 = extractvalue %dx.types.CBufRet.f32 %101, 0
  %103 = extractvalue %dx.types.CBufRet.f32 %101, 1
  %104 = extractvalue %dx.types.CBufRet.f32 %101, 2
  %105 = fsub fast float %45, %94
  %106 = fsub fast float %46, %95
  %107 = fsub fast float %47, %96
  %108 = call float @dx.op.dot3.f32(i32 55, float %105, float %106, float %107, float %105, float %106, float %107)  ; Dot3(ax,ay,az,bx,by,bz)
  %109 = call float @dx.op.unary.f32(i32 25, float %108)  ; Rsqrt(value)
  %110 = fmul fast float %109, %106
  %111 = fmul fast float %109, %107
  %112 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 5)  ; CBufferLoadLegacy(handle,regIndex)
  %113 = extractvalue %dx.types.CBufRet.f32 %112, 0
  %114 = extractvalue %dx.types.CBufRet.f32 %112, 1
  %115 = extractvalue %dx.types.CBufRet.f32 %112, 2
  %116 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 8)  ; CBufferLoadLegacy(handle,regIndex)
  %117 = extractvalue %dx.types.CBufRet.f32 %116, 0
  %118 = extractvalue %dx.types.CBufRet.f32 %116, 1
  %119 = extractvalue %dx.types.CBufRet.f32 %116, 2
  %120 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 11)  ; CBufferLoadLegacy(handle,regIndex)
  %121 = extractvalue %dx.types.CBufRet.f32 %120, 0
  %122 = extractvalue %dx.types.CBufRet.f32 %120, 1
  %123 = extractvalue %dx.types.CBufRet.f32 %120, 2
  %124 = fsub fast float %45, %113
  %125 = fsub fast float %46, %114
  %126 = fsub fast float %47, %115
  %127 = call float @dx.op.dot3.f32(i32 55, float %124, float %125, float %126, float %124, float %125, float %126)  ; Dot3(ax,ay,az,bx,by,bz)
  %128 = call float @dx.op.unary.f32(i32 25, float %127)  ; Rsqrt(value)
  %129 = fmul fast float %128, %125
  %130 = fmul fast float %128, %126
  %131 = fsub fast float -0.000000e+00, %76
  %132 = fsub fast float -0.000000e+00, %77
  %133 = fsub fast float -0.000000e+00, %95
  %134 = fsub fast float -0.000000e+00, %96
  %135 = fsub fast float -0.000000e+00, %114
  %136 = fsub fast float -0.000000e+00, %115
  %137 = fmul fast float %71, %75
  %138 = fsub fast float -0.000000e+00, %137
  %139 = call float @dx.op.tertiary.f32(i32 46, float %131, float %72, float %138)  ; FMad(a,b,c)
  %140 = call float @dx.op.tertiary.f32(i32 46, float %132, float %73, float %139)  ; FMad(a,b,c)
  %141 = fmul fast float %71, %94
  %142 = fsub fast float -0.000000e+00, %141
  %143 = call float @dx.op.tertiary.f32(i32 46, float %133, float %72, float %142)  ; FMad(a,b,c)
  %144 = call float @dx.op.tertiary.f32(i32 46, float %134, float %73, float %143)  ; FMad(a,b,c)
  %145 = fmul fast float %71, %113
  %146 = fsub fast float -0.000000e+00, %145
  %147 = call float @dx.op.tertiary.f32(i32 46, float %135, float %72, float %146)  ; FMad(a,b,c)
  %148 = call float @dx.op.tertiary.f32(i32 46, float %136, float %73, float %147)  ; FMad(a,b,c)
  %149 = fmul fast float %86, %71
  %150 = fmul fast float %149, %90
  %151 = call float @dx.op.tertiary.f32(i32 46, float %91, float %72, float %150)  ; FMad(a,b,c)
  %152 = call float @dx.op.tertiary.f32(i32 46, float %92, float %73, float %151)  ; FMad(a,b,c)
  %153 = fmul fast float %105, %71
  %154 = fmul fast float %153, %109
  %155 = call float @dx.op.tertiary.f32(i32 46, float %110, float %72, float %154)  ; FMad(a,b,c)
  %156 = call float @dx.op.tertiary.f32(i32 46, float %111, float %73, float %155)  ; FMad(a,b,c)
  %157 = fmul fast float %124, %71
  %158 = fmul fast float %157, %128
  %159 = call float @dx.op.tertiary.f32(i32 46, float %129, float %72, float %158)  ; FMad(a,b,c)
  %160 = call float @dx.op.tertiary.f32(i32 46, float %130, float %73, float %159)  ; FMad(a,b,c)
  %161 = fcmp fast olt float %140, 0.000000e+00
  %162 = fcmp fast olt float %144, 0.000000e+00
  %163 = fcmp fast olt float %148, 0.000000e+00
  %164 = select i1 %161, float 0.000000e+00, float 1.000000e+00
  %165 = select i1 %162, float 0.000000e+00, float 1.000000e+00
  %166 = select i1 %163, float 0.000000e+00, float 1.000000e+00
  %167 = fmul fast float %164, %140
  %168 = fmul fast float %165, %144
  %169 = fmul fast float %166, %148
  %170 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 2)  ; CBufferLoadLegacy(handle,regIndex)
  %171 = extractvalue %dx.types.CBufRet.f32 %170, 3
  %172 = call float @dx.op.binary.f32(i32 35, float %152, float 0.000000e+00)  ; FMax(a,b)
  %173 = call float @dx.op.binary.f32(i32 35, float %156, float 0.000000e+00)  ; FMax(a,b)
  %174 = call float @dx.op.binary.f32(i32 35, float %160, float 0.000000e+00)  ; FMax(a,b)
  %175 = fmul fast float %172, %164
  %176 = fmul fast float %173, %165
  %177 = fmul fast float %174, %166
  %178 = call float @dx.op.unary.f32(i32 23, float %175)  ; Log(value)
  %179 = call float @dx.op.unary.f32(i32 23, float %176)  ; Log(value)
  %180 = call float @dx.op.unary.f32(i32 23, float %177)  ; Log(value)
  %181 = fmul fast float %178, %171
  %182 = fmul fast float %179, %171
  %183 = fmul fast float %180, %171
  %184 = call float @dx.op.unary.f32(i32 21, float %181)  ; Exp(value)
  %185 = call float @dx.op.unary.f32(i32 21, float %182)  ; Exp(value)
  %186 = call float @dx.op.unary.f32(i32 21, float %183)  ; Exp(value)
  %187 = fmul fast float %184, %140
  %188 = fmul fast float %185, %144
  %189 = fmul fast float %186, %148
  %190 = fmul fast float %167, %79
  %191 = call float @dx.op.tertiary.f32(i32 46, float %168, float %98, float %190)  ; FMad(a,b,c)
  %192 = call float @dx.op.tertiary.f32(i32 46, float %169, float %117, float %191)  ; FMad(a,b,c)
  %193 = fmul fast float %167, %80
  %194 = call float @dx.op.tertiary.f32(i32 46, float %168, float %99, float %193)  ; FMad(a,b,c)
  %195 = call float @dx.op.tertiary.f32(i32 46, float %169, float %118, float %194)  ; FMad(a,b,c)
  %196 = fmul fast float %167, %81
  %197 = call float @dx.op.tertiary.f32(i32 46, float %168, float %100, float %196)  ; FMad(a,b,c)
  %198 = call float @dx.op.tertiary.f32(i32 46, float %169, float %119, float %197)  ; FMad(a,b,c)
  %199 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 0)  ; CBufferLoadLegacy(handle,regIndex)
  %200 = extractvalue %dx.types.CBufRet.f32 %199, 0
  %201 = extractvalue %dx.types.CBufRet.f32 %199, 1
  %202 = extractvalue %dx.types.CBufRet.f32 %199, 2
  %203 = fmul fast float %200, %192
  %204 = fmul fast float %201, %195
  %205 = fmul fast float %202, %198
  %206 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 1)  ; CBufferLoadLegacy(handle,regIndex)
  %207 = extractvalue %dx.types.CBufRet.f32 %206, 0
  %208 = extractvalue %dx.types.CBufRet.f32 %206, 1
  %209 = extractvalue %dx.types.CBufRet.f32 %206, 2
  %210 = fadd fast float %203, %207
  %211 = fadd fast float %204, %208
  %212 = fadd fast float %205, %209
  %213 = fmul fast float %187, %83
  %214 = call float @dx.op.tertiary.f32(i32 46, float %188, float %102, float %213)  ; FMad(a,b,c)
  %215 = call float @dx.op.tertiary.f32(i32 46, float %189, float %121, float %214)  ; FMad(a,b,c)
  %216 = fmul fast float %187, %84
  %217 = call float @dx.op.tertiary.f32(i32 46, float %188, float %103, float %216)  ; FMad(a,b,c)
  %218 = call float @dx.op.tertiary.f32(i32 46, float %189, float %122, float %217)  ; FMad(a,b,c)
  %219 = fmul fast float %187, %85
  %220 = call float @dx.op.tertiary.f32(i32 46, float %188, float %104, float %219)  ; FMad(a,b,c)
  %221 = call float @dx.op.tertiary.f32(i32 46, float %189, float %123, float %220)  ; FMad(a,b,c)
  %222 = extractvalue %dx.types.CBufRet.f32 %170, 0
  %223 = extractvalue %dx.types.CBufRet.f32 %170, 1
  %224 = extractvalue %dx.types.CBufRet.f32 %170, 2
  %225 = fmul fast float %222, %215
  %226 = fmul fast float %223, %218
  %227 = fmul fast float %224, %221
  %228 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 22)  ; CBufferLoadLegacy(handle,regIndex)
  %229 = extractvalue %dx.types.CBufRet.f32 %228, 0
  %230 = extractvalue %dx.types.CBufRet.f32 %228, 1
  %231 = extractvalue %dx.types.CBufRet.f32 %228, 2
  %232 = extractvalue %dx.types.CBufRet.f32 %228, 3
  %233 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 23)  ; CBufferLoadLegacy(handle,regIndex)
  %234 = extractvalue %dx.types.CBufRet.f32 %233, 0
  %235 = extractvalue %dx.types.CBufRet.f32 %233, 1
  %236 = extractvalue %dx.types.CBufRet.f32 %233, 2
  %237 = extractvalue %dx.types.CBufRet.f32 %233, 3
  %238 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 24)  ; CBufferLoadLegacy(handle,regIndex)
  %239 = extractvalue %dx.types.CBufRet.f32 %238, 0
  %240 = extractvalue %dx.types.CBufRet.f32 %238, 1
  %241 = extractvalue %dx.types.CBufRet.f32 %238, 2
  %242 = extractvalue %dx.types.CBufRet.f32 %238, 3
  %243 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 25)  ; CBufferLoadLegacy(handle,regIndex)
  %244 = extractvalue %dx.types.CBufRet.f32 %243, 0
  %245 = extractvalue %dx.types.CBufRet.f32 %243, 1
  %246 = extractvalue %dx.types.CBufRet.f32 %243, 2
  %247 = extractvalue %dx.types.CBufRet.f32 %243, 3
  %248 = fmul fast float %229, %5
  %249 = call float @dx.op.tertiary.f32(i32 46, float %6, float %230, float %248)  ; FMad(a,b,c)
  %250 = call float @dx.op.tertiary.f32(i32 46, float %7, float %231, float %249)  ; FMad(a,b,c)
  %251 = call float @dx.op.tertiary.f32(i32 46, float %8, float %232, float %250)  ; FMad(a,b,c)
  %252 = fmul fast float %234, %5
  %253 = call float @dx.op.tertiary.f32(i32 46, float %6, float %235, float %252)  ; FMad(a,b,c)
  %254 = call float @dx.op.tertiary.f32(i32 46, float %7, float %236, float %253)  ; FMad(a,b,c)
  %255 = call float @dx.op.tertiary.f32(i32 46, float %8, float %237, float %254)  ; FMad(a,b,c)
  %256 = fmul fast float %239, %5
  %257 = call float @dx.op.tertiary.f32(i32 46, float %6, float %240, float %256)  ; FMad(a,b,c)
  %258 = call float @dx.op.tertiary.f32(i32 46, float %7, float %241, float %257)  ; FMad(a,b,c)
  %259 = call float @dx.op.tertiary.f32(i32 46, float %8, float %242, float %258)  ; FMad(a,b,c)
  %260 = fmul fast float %244, %5
  %261 = call float @dx.op.tertiary.f32(i32 46, float %6, float %245, float %260)  ; FMad(a,b,c)
  %262 = call float @dx.op.tertiary.f32(i32 46, float %7, float %246, float %261)  ; FMad(a,b,c)
  %263 = call float @dx.op.tertiary.f32(i32 46, float %8, float %247, float %262)  ; FMad(a,b,c)
  %264 = extractvalue %dx.types.CBufRet.f32 %199, 3
  %265 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 14)  ; CBufferLoadLegacy(handle,regIndex)
  %266 = extractvalue %dx.types.CBufRet.f32 %265, 0
  %267 = extractvalue %dx.types.CBufRet.f32 %265, 1
  %268 = extractvalue %dx.types.CBufRet.f32 %265, 2
  %269 = extractvalue %dx.types.CBufRet.f32 %265, 3
  %270 = call float @dx.op.dot4.f32(i32 56, float %5, float %6, float %7, float %8, float %266, float %267, float %268, float %269)  ; Dot4(ax,ay,az,aw,bx,by,bz,bw)
  %271 = call float @dx.op.unary.f32(i32 7, float %270)  ; Saturate(value)
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 0, float %210)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 1, float %211)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 2, float %212)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 3, float %264)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 1, i32 0, i8 0, float %225)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 1, i32 0, i8 1, float %226)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 1, i32 0, i8 2, float %227)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 1, i32 0, i8 3, float %271)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 2, i32 0, i8 0, float %251)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 2, i32 0, i8 1, float %255)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 2, i32 0, i8 2, float %259)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 2, i32 0, i8 3, float %263)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  ret void
}

; Function Attrs: nounwind readnone
declare float @dx.op.loadInput.f32(i32, i32, i32, i8, i32) #0

; Function Attrs: nounwind
declare void @dx.op.storeOutput.f32(i32, i32, i32, i8, float) #1

; Function Attrs: nounwind readnone
declare float @dx.op.dot3.f32(i32, float, float, float, float, float, float) #0

; Function Attrs: nounwind readnone
declare float @dx.op.unary.f32(i32, float) #0

; Function Attrs: nounwind readnone
declare float @dx.op.binary.f32(i32, float, float) #0

; Function Attrs: nounwind readnone
declare float @dx.op.dot4.f32(i32, float, float, float, float, float, float, float, float) #0

; Function Attrs: nounwind readonly
declare %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32, %dx.types.Handle, i32) #2

; Function Attrs: nounwind readnone
declare float @dx.op.tertiary.f32(i32, float, float, float) #0

; Function Attrs: nounwind readonly
declare %dx.types.Handle @dx.op.createHandle(i32, i8, i32, i32, i1) #2

attributes #0 = { nounwind readnone }
attributes #1 = { nounwind }
attributes #2 = { nounwind readonly }

!xbox.compiler.options = !{!0}
!llvm.ident = !{!1}
!dx.version = !{!2}
!dx.valver = !{!3}
!dx.shaderModel = !{!4}
!dx.resources = !{!5}
!dx.viewIdState = !{!8}
!dx.entryPoints = !{!9}

!0 = !{!"__XBOX_PER_THREAD_SCRATCH_SIZE_LIMIT_IN_BYTES", !"0"}
!1 = !{!"dxcxbox 2410.2410.11116.10741"}
!2 = !{i32 1, i32 0}
!3 = !{i32 1, i32 8}
!4 = !{!"vs", i32 6, i32 0}
!5 = !{null, null, !6, null}
!6 = !{!7}
!7 = !{i32 0, %hostlayout.Parameters* undef, !"", i32 0, i32 0, i32 1, i32 416, null}
!8 = !{[9 x i32] [i32 7, i32 12, i32 4080, i32 4080, i32 4080, i32 4080, i32 119, i32 119, i32 119]}
!9 = !{void ()* @VSBasicVertexLighting, !"VSBasicVertexLighting", !10, !5, null}
!10 = !{!11, !17, null}
!11 = !{!12, !15}
!12 = !{i32 0, !"SV_Position", i8 9, i8 0, !13, i8 0, i32 1, i8 4, i32 0, i8 0, !14}
!13 = !{i32 0}
!14 = !{i32 3, i32 15}
!15 = !{i32 1, !"NORMAL", i8 9, i8 0, !13, i8 0, i32 1, i8 3, i32 1, i8 0, !16}
!16 = !{i32 3, i32 7}
!17 = !{!18, !19, !21}
!18 = !{i32 0, !"COLOR", i8 9, i8 0, !13, i8 2, i32 1, i8 4, i32 0, i8 0, !14}
!19 = !{i32 1, !"COLOR", i8 9, i8 0, !20, i8 2, i32 1, i8 4, i32 1, i8 0, !14}
!20 = !{i32 1}
!21 = !{i32 2, !"SV_Position", i8 9, i8 3, !13, i8 4, i32 1, i8 4, i32 2, i8 0, !14}

;
; DUMPING SHADER HARDWARE INSTRUCTIONS 
;
// Shader Type               : (VS)
// Shader Hw Stage           : (VS)

// Shader Instructions:
shader main
  asic(CI)
  type(VS)
  s_swappc_b64  s[0:1], s[0:1]
  s_or_b32      s85, s4, 0x00100000 // wrscc
  s_mov_b32     s84, s3
  s_mov_b32     s86, -1
  s_mov_b32     s87, 0x00024fac
  s_buffer_load_dwordx16  s[20:35], s[84:87], 0x00
  s_buffer_load_dwordx16  s[68:83], s[84:87], 0x10
  s_buffer_load_dwordx16  s[36:51], s[84:87], 0x20
  s_buffer_load_dwordx4  s[0:3], s[84:87], 0x30
  s_buffer_load_dwordx16  s[4:19], s[84:87], 0x38
  s_buffer_load_dwordx16  s[52:67], s[84:87], 0x4c
  s_waitcnt     vmcnt(0) & lgkmcnt(0)
  v_mul_legacy_f32  v1, s12, v4
  v_mul_legacy_f32  v0, s8, v4
  v_mac_legacy_f32  v1, s13, v5
  v_mac_legacy_f32  v0, s9, v5
  v_mac_legacy_f32  v1, s14, v6
  v_mul_legacy_f32  v2, s16, v4
  v_mul_legacy_f32  v12, s56, v8
  v_mul_legacy_f32  v11, s52, v8
  v_mac_legacy_f32  v0, s10, v6
  v_mac_legacy_f32  v1, s15, v7
  v_mac_legacy_f32  v2, s17, v5
  v_mac_legacy_f32  v12, s57, v9
  v_mac_legacy_f32  v0, s11, v7
  v_mac_legacy_f32  v2, s18, v6
  v_mac_legacy_f32  v11, s53, v9
  v_mul_legacy_f32  v8, s60, v8
  v_sub_f32     v1, s1, v1
  v_mac_legacy_f32  v12, s58, v10
  v_mac_legacy_f32  v8, s61, v9
  v_mac_legacy_f32  v2, s19, v7
  v_sub_f32     v0, s0, v0
  v_mul_legacy_f32  v3, v1, v1
  v_mac_legacy_f32  v11, s54, v10
  v_mul_legacy_f32  v9, v12, v12
  v_sub_f32     v2, s2, v2
  v_mac_legacy_f32  v3, v0, v0
  v_mac_legacy_f32  v8, s62, v10
  v_mac_legacy_f32  v9, v11, v11
  v_mac_legacy_f32  v3, v2, v2
  v_mac_legacy_f32  v9, v8, v8
  v_rsq_f32     v3, v3
  v_rsq_f32     v9, v9
  v_mad_legacy_f32  v16, v1, v3, -s69
  v_mul_legacy_f32  v10, v9, v11
  v_mul_legacy_f32  v11, v9, v12
  v_mad_legacy_f32  v12, v1, v3, -s33
  v_mul_legacy_f32  v8, v9, v8
  v_mad_legacy_f32  v9, v0, v3, -s32
  v_mul_legacy_f32  v14, v12, v12
  v_mac_legacy_f32  v14, v9, v9
  v_mad_legacy_f32  v13, v2, v3, -s34
  v_mac_legacy_f32  v14, v13, v13
  v_mad_legacy_f32  v15, v0, v3, -s68
  v_mul_legacy_f32  v18, v16, v16
  v_mad_legacy_f32  v1, v1, v3, -s73
  v_rsq_f32     v14, v14
  v_mad_legacy_f32  v17, v2, v3, -s70
  v_mac_legacy_f32  v18, v15, v15
  v_mad_legacy_f32  v0, v0, v3, -s72
  v_mad_legacy_f32  v2, v2, v3, -s74
  v_mul_legacy_f32  v3, v1, v1
  v_mac_legacy_f32  v3, v0, v0
  v_mac_legacy_f32  v18, v17, v17
  v_rsq_f32     v18, v18
  v_mac_legacy_f32  v3, v2, v2
  v_rsq_f32     v3, v3
  v_mul_legacy_f32  v9, v9, v10
  v_mul_legacy_f32  v19, s32, v10
  v_mul_legacy_f32  v12, v14, v12
  v_mul_legacy_f32  v9, v9, v14
  v_mad_legacy_f32  v19, -s33, v11, -v19
  v_mul_legacy_f32  v20, s68, v10
  v_mac_legacy_f32  v9, v12, v11
  v_mul_legacy_f32  v12, v15, v10
  v_mad_legacy_f32  v20, -s69, v11, -v20
  v_mul_legacy_f32  v21, s72, v10
  v_mul_legacy_f32  v0, v0, v10
  v_mul_legacy_f32  v13, v14, v13
  v_mac_legacy_f32  v19, v8, -s34
  v_mul_legacy_f32  v16, v18, v16
  v_mul_legacy_f32  v12, v12, v18
  v_mad_legacy_f32  v21, -s73, v11, -v21
  v_mac_legacy_f32  v9, v13, v8
  v_mac_legacy_f32  v20, v8, -s70
  v_mul_legacy_f32  v17, v18, v17
  v_mac_legacy_f32  v12, v16, v11
  v_mul_legacy_f32  v1, v3, v1
  v_mul_legacy_f32  v0, v0, v3
  v_cmp_gt_f32  vcc, 0, v19
  v_mac_legacy_f32  v12, v17, v8
  v_mac_legacy_f32  v21, v8, -s74
  v_mac_legacy_f32  v0, v1, v11
  v_mul_legacy_f32  v2, v3, v2
  v_cmp_gt_f32  s[0:1], 0, v20
  v_cndmask_b32  v1, 1.0, 0, vcc
  v_max_f32     v9, 0, v9
  v_mac_legacy_f32  v0, v2, v8
  v_cmp_gt_f32  s[2:3], 0, v21
  v_cndmask_b32  v2, 1.0, 0, s[0:1]
  v_mul_legacy_f32  v8, v1, v19
  v_mul_legacy_f32  v1, v9, v1
  v_max_f32     v12, 0, v12
  v_cndmask_b32  v3, 1.0, 0, s[2:3]
  v_max_f32     v0, 0, v0
  v_log_f32     v1, v1
  v_mul_legacy_f32  v10, v2, v20
  v_mul_legacy_f32  v2, v12, v2
  v_mul_legacy_f32  v0, v0, v3
  v_log_f32     v2, v2
  v_log_f32     v0, v0
  v_mul_legacy_f32  v1, s31, v1
  v_exp_f32     v1, v1
  v_mul_legacy_f32  v2, s31, v2
  v_mul_legacy_f32  v0, s31, v0
  v_exp_f32     v2, v2
  v_exp_f32     v0, v0
  v_mul_legacy_f32  v9, s77, v8
  v_mul_legacy_f32  v11, v3, v21
  v_mul_legacy_f32  v3, s76, v8
  v_mul_legacy_f32  v8, s78, v8
  s_buffer_load_dwordx8  s[8:15], s[84:87], 0x5c
  s_buffer_load_dwordx4  s[0:3], s[84:87], 0x64
  v_mac_legacy_f32  v3, s80, v10
  v_mac_legacy_f32  v9, s81, v10
  v_mac_legacy_f32  v8, s82, v10
  v_mul_legacy_f32  v1, v1, v19
  v_mac_legacy_f32  v3, s36, v11
  v_mac_legacy_f32  v9, s37, v11
  v_mac_legacy_f32  v8, s38, v11
  v_mul_legacy_f32  v2, v2, v20
  v_mul_legacy_f32  v11, s40, v1
  v_mul_legacy_f32  v12, s41, v1
  v_mul_legacy_f32  v1, s42, v1
  v_mul_legacy_f32  v0, v0, v21
  v_mac_legacy_f32  v11, s44, v2
  v_mac_legacy_f32  v12, s45, v2
  v_mac_legacy_f32  v11, s48, v0
  v_mac_legacy_f32  v12, s49, v0
  v_mac_legacy_f32  v1, s46, v2
  v_mad_legacy_f32  v0, v0, s50, v1
  s_waitcnt     lgkmcnt(0)
  v_mul_legacy_f32  v13, s12, v4
  v_mul_legacy_f32  v14, s0, v4
  v_mul_legacy_f32  v1, s28, v11
  v_mul_legacy_f32  v11, s64, v4
  v_mul_legacy_f32  v2, s29, v12
  v_mul_legacy_f32  v12, s8, v4
  v_mac_legacy_f32  v11, s65, v5
  v_mac_legacy_f32  v12, s9, v5
  v_mac_legacy_f32  v13, s13, v5
  v_mac_legacy_f32  v14, s1, v5
  v_mac_legacy_f32  v11, s66, v6
  v_mac_legacy_f32  v12, s10, v6
  v_mac_legacy_f32  v13, s14, v6
  v_mac_legacy_f32  v14, s2, v6
  v_mac_legacy_f32  v11, s67, v7
  v_mac_legacy_f32  v12, s11, v7
  v_mac_legacy_f32  v13, s15, v7
  v_mac_legacy_f32  v14, s3, v7
  v_mul_legacy_f32  v5, s5, v5
  exp           pos0, v11, v12, v13, v14 done
  v_mul_legacy_f32  v7, s7, v7
  v_mul_legacy_f32  v3, s20, v3
  v_mul_legacy_f32  v9, s21, v9
  v_mul_legacy_f32  v8, s22, v8
  v_mad_legacy_f32  v4, v4, s4, v5
  v_mad_legacy_f32  v5, v6, s6, v7
  v_mov_b32     v10, s23
  v_add_f32     v3, s24, v3
  v_add_f32     v9, s25, v9
  v_add_f32     v8, s26, v8
  v_mul_legacy_f32  v0, s30, v0
  v_add_f32     v4, v4, v5 clamp
  exp           param0, v3, v9, v8, v10
  exp           param1, v1, v2, v0, v4
  s_endpgm      
end


NumVGPR=22,NumSGPR=90,LDS=0,Scratch=0,Occpancy=5

// Shader Type               : (VS)
// Shader Hw Stage           : (ES)

// Shader Instructions:
shader main
  asic(CI)
  type(VS)
  s_swappc_b64  s[0:1], s[0:1]
  s_mov_b32     s63, 0x00024fac
  s_mov_b32     s62, -1
  s_mov_b32     s60, s3
  s_or_b32      s61, s4, 0x00100000 // wrscc
  s_buffer_load_dwordx4  s[24:27], s[60:63], 0x30
  s_buffer_load_dwordx16  s[8:23], s[60:63], 0x38
  s_buffer_load_dwordx16  s[44:59], s[60:63], 0x4c
  s_mov_b32     s1, 0
  s_buffer_load_dwordx16  s[28:43], s[60:63], 0x10
  s_waitcnt     vmcnt(0) & lgkmcnt(0)
  v_mul_legacy_f32  v0, s16, v4
  v_mac_legacy_f32  v0, s17, v5
  v_mul_legacy_f32  v1, s12, v4
  v_mac_legacy_f32  v1, s13, v5
  v_mac_legacy_f32  v0, s18, v6
  v_mul_legacy_f32  v2, s20, v4
  v_mac_legacy_f32  v2, s21, v5
  v_mac_legacy_f32  v1, s14, v6
  v_mac_legacy_f32  v0, s19, v7
  v_mac_legacy_f32  v2, s22, v6
  v_mac_legacy_f32  v1, s15, v7
  v_sub_f32     v0, s25, v0
  v_mac_legacy_f32  v2, s23, v7
  v_sub_f32     v1, s24, v1
  v_mul_legacy_f32  v3, v0, v0
  v_sub_f32     v2, s26, v2
  v_mac_legacy_f32  v3, v1, v1
  v_mac_legacy_f32  v3, v2, v2
  s_buffer_load_dwordx16  s[12:27], s[60:63], 0x00
  v_rsq_f32     v3, v3
  v_mul_legacy_f32  v11, s48, v8
  v_mul_legacy_f32  v12, s44, v8
  v_mac_legacy_f32  v11, s49, v9
  v_mul_legacy_f32  v8, s52, v8
  v_mac_legacy_f32  v12, s45, v9
  v_mac_legacy_f32  v11, s50, v10
  v_mac_legacy_f32  v8, s53, v9
  v_mad_legacy_f32  v9, v10, s46, v12
  v_mul_legacy_f32  v12, v11, v11
  s_load_dwordx4  s[0:3], s[0:1], 0x08
  v_mac_legacy_f32  v8, s54, v10
  v_mac_legacy_f32  v12, v9, v9
  s_waitcnt     lgkmcnt(0)
  v_mad_legacy_f32  v10, v0, v3, -s25
  v_mac_legacy_f32  v12, v8, v8
  v_mad_legacy_f32  v13, v0, v3, -s29
  v_mad_legacy_f32  v14, v1, v3, -s24
  v_mul_legacy_f32  v15, v10, v10
  v_rsq_f32     v12, v12
  v_mad_legacy_f32  v0, v0, v3, -s33
  v_mad_legacy_f32  v17, v1, v3, -s28
  v_mul_legacy_f32  v18, v13, v13
  v_mac_legacy_f32  v15, v14, v14
  v_mad_legacy_f32  v16, v2, v3, -s26
  v_mac_legacy_f32  v15, v16, v16
  v_mad_legacy_f32  v19, v2, v3, -s30
  v_mac_legacy_f32  v18, v17, v17
  v_mad_legacy_f32  v1, v1, v3, -s32
  v_mul_legacy_f32  v20, v0, v0
  v_rsq_f32     v15, v15
  v_mac_legacy_f32  v20, v1, v1
  v_mac_legacy_f32  v18, v19, v19
  v_mad_legacy_f32  v2, v2, v3, -s34
  v_rsq_f32     v3, v18
  v_mad_legacy_f32  v18, v2, v2, v20
  v_mul_legacy_f32  v9, v12, v9
  v_rsq_f32     v18, v18
  v_mul_legacy_f32  v14, v14, v9
  v_mul_legacy_f32  v11, v12, v11
  v_mul_legacy_f32  v20, s24, v9
  v_mul_legacy_f32  v8, v12, v8
  v_mad_legacy_f32  v20, -s25, v11, -v20
  v_mul_legacy_f32  v12, s28, v9
  v_mul_legacy_f32  v17, v17, v9
  v_mul_legacy_f32  v14, v14, v15
  v_mul_legacy_f32  v10, v15, v10
  v_mul_legacy_f32  v1, v1, v9
  v_mad_legacy_f32  v12, -s29, v11, -v12
  v_mul_legacy_f32  v9, s32, v9
  v_mac_legacy_f32  v20, v8, -s26
  v_mad_legacy_f32  v10, v10, v11, v14
  v_mul_legacy_f32  v15, v15, v16
  v_mul_legacy_f32  v14, v17, v3
  v_mul_legacy_f32  v13, v3, v13
  v_mad_legacy_f32  v9, -s33, v11, -v9
  v_mac_legacy_f32  v12, v8, -s30
  v_mul_legacy_f32  v1, v1, v18
  v_mul_legacy_f32  v0, v18, v0
  v_mul_legacy_f32  v3, v3, v19
  v_cmp_gt_f32  vcc, 0, v20
  v_mad_legacy_f32  v13, v13, v11, v14
  v_mac_legacy_f32  v10, v15, v8
  v_mac_legacy_f32  v9, v8, -s34
  v_cndmask_b32  v14, 1.0, 0, vcc
  v_mad_legacy_f32  v0, v0, v11, v1
  v_mad_legacy_f32  v1, v3, v8, v13
  v_mul_legacy_f32  v2, v18, v2
  v_cmp_gt_f32  vcc, 0, v12
  v_max_f32     v3, 0, v10
  s_buffer_load_dwordx8  s[24:31], s[60:63], 0x5c
  v_mac_legacy_f32  v0, v2, v8
  v_mul_legacy_f32  v2, v3, v14
  v_mul_legacy_f32  v10, s56, v4
  v_cndmask_b32  v11, 1.0, 0, vcc
  v_max_f32     v1, 0, v1
  v_cmp_gt_f32  vcc, 0, v9
  v_mad_legacy_f32  v3, v5, s57, v10
  v_mul_legacy_f32  v1, v1, v11
  v_log_f32     v2, v2
  s_buffer_load_dwordx4  s[32:35], s[60:63], 0x64
  v_cndmask_b32  v10, 1.0, 0, vcc
  v_max_f32     v0, 0, v0
  v_mul_legacy_f32  v0, v0, v10
  v_mac_legacy_f32  v3, s58, v6
  v_log_f32     v1, v1
  v_mac_legacy_f32  v3, s59, v7
  v_log_f32     v0, v0
  s_buffer_load_dwordx16  s[44:59], s[60:63], 0x20
  s_waitcnt     lgkmcnt(0)
  v_mul_legacy_f32  v8, s24, v4
  v_mac_legacy_f32  v8, s25, v5
  v_mul_legacy_f32  v13, s28, v4
  v_mul_legacy_f32  v2, s23, v2
  v_mul_legacy_f32  v14, v14, v20
  v_exp_f32     v2, v2
  v_mul_legacy_f32  v1, s23, v1
  v_mac_legacy_f32  v8, s26, v6
  v_mac_legacy_f32  v13, s29, v5
  v_mul_legacy_f32  v15, s32, v4
  v_mul_legacy_f32  v11, v11, v12
  v_mul_legacy_f32  v16, s36, v14
  v_exp_f32     v1, v1
  v_mul_legacy_f32  v0, s23, v0
  buffer_store_dword  v3, v0, s[0:3], s5 offset:32 glc slc
  v_mad_legacy_f32  v3, v7, s27, v8
  v_mad_legacy_f32  v8, v6, s30, v13
  v_mad_legacy_f32  v13, v5, s33, v15
  v_mad_legacy_f32  v15, v11, s40, v16
  v_mul_legacy_f32  v16, s37, v14
  v_mul_legacy_f32  v10, v10, v9
  v_exp_f32     v0, v0
  buffer_store_dword  v3, v0, s[0:3], s5 offset:36 glc slc
  v_mad_legacy_f32  v3, v7, s31, v8
  v_mad_legacy_f32  v8, v6, s34, v13
  v_mad_legacy_f32  v13, v10, s44, v15
  v_mad_legacy_f32  v15, v11, s41, v16
  v_mul_legacy_f32  v14, s38, v14
  buffer_store_dword  v3, v0, s[0:3], s5 offset:40 glc slc
  v_mad_legacy_f32  v3, v7, s35, v8
  v_mul_legacy_f32  v8, s12, v13
  v_mad_legacy_f32  v13, v10, s45, v15
  v_mad_legacy_f32  v11, v11, s42, v14
  buffer_store_dword  v3, v0, s[0:3], s5 offset:44 glc slc
  v_add_f32     v3, s16, v8
  v_mul_legacy_f32  v8, s13, v13
  v_mad_legacy_f32  v10, v10, s46, v11
  v_mul_legacy_f32  v2, v2, v20
  buffer_store_dword  v3, v0, s[0:3], s5 glc slc
  v_add_f32     v3, s17, v8
  v_mul_legacy_f32  v8, s14, v10
  v_mul_legacy_f32  v1, v1, v12
  v_mul_legacy_f32  v10, s48, v2
  buffer_store_dword  v3, v0, s[0:3], s5 offset:4 glc slc
  v_add_f32     v3, s18, v8
  v_mad_legacy_f32  v8, v1, s52, v10
  v_mul_legacy_f32  v0, v0, v9
  v_mul_legacy_f32  v9, s49, v2
  v_mul_legacy_f32  v2, s50, v2
  buffer_store_dword  v3, v0, s[0:3], s5 offset:8 glc slc
  v_mad_legacy_f32  v3, v0, s56, v8
  v_mad_legacy_f32  v8, v1, s53, v9
  v_mad_legacy_f32  v1, v1, s54, v2
  v_mul_legacy_f32  v2, s9, v5
  v_mul_legacy_f32  v5, s11, v7
  v_mov_b32     v10, s15
  v_mac_legacy_f32  v8, s57, v0
  v_mad_legacy_f32  v0, v0, s58, v1
  v_mul_legacy_f32  v3, s20, v3
  v_mad_legacy_f32  v1, v6, s10, v5
  v_mac_legacy_f32  v2, s8, v4
  buffer_store_dword  v10, v0, s[0:3], s5 offset:12 glc slc
  buffer_store_dword  v3, v0, s[0:3], s5 offset:16 glc slc
  v_mul_legacy_f32  v3, s21, v8
  v_mul_legacy_f32  v0, s22, v0
  v_add_f32     v1, v2, v1 clamp
  buffer_store_dword  v3, v0, s[0:3], s5 offset:20 glc slc
  buffer_store_dword  v0, v0, s[0:3], s5 offset:24 glc slc
  buffer_store_dword  v1, v0, s[0:3], s5 offset:28 glc slc
  s_endpgm      
end


NumVGPR=21,NumSGPR=66,LDS=0,Scratch=0,Occpancy=7

// Shader Type               : (VS)
// Shader Hw Stage           : (LS)

// Shader Instructions:
shader main
  asic(CI)
  type(VS)
  s_swappc_b64  s[0:1], s[0:1]
  s_or_b32      s41, s4, 0x00100000 // wrscc
  s_mov_b32     s40, s3
  s_mov_b32     s42, -1
  s_mov_b32     s43, 0x00024fac
  s_buffer_load_dwordx4  s[24:27], s[40:43], 0x30
  s_buffer_load_dwordx16  s[0:15], s[40:43], 0x38
  s_mov_b32     m0, -1
  s_waitcnt     vmcnt(0) & lgkmcnt(0)
  v_mul_legacy_f32  v2, s8, v4
  v_mul_legacy_f32  v3, s12, v4
  v_mac_legacy_f32  v2, s9, v5
  v_mac_legacy_f32  v3, s13, v5
  v_mac_legacy_f32  v2, s10, v6
  v_mac_legacy_f32  v3, s14, v6
  v_mac_legacy_f32  v2, s11, v7
  v_mac_legacy_f32  v3, s15, v7
  s_buffer_load_dwordx16  s[8:23], s[40:43], 0x4c
  v_mul_legacy_f32  v0, s4, v4
  v_mac_legacy_f32  v0, s5, v5
  v_mac_legacy_f32  v0, s6, v6
  v_mac_legacy_f32  v0, s7, v7
  v_sub_f32     v2, s25, v2
  s_waitcnt     lgkmcnt(0)
  v_mul_legacy_f32  v11, s8, v8
  v_mul_legacy_f32  v12, s12, v8
  v_mul_legacy_f32  v8, s16, v8
  v_sub_f32     v0, s24, v0
  v_mul_legacy_f32  v15, v2, v2
  v_mac_legacy_f32  v11, s9, v9
  v_mac_legacy_f32  v12, s13, v9
  v_mac_legacy_f32  v8, s17, v9
  v_sub_f32     v3, s26, v3
  v_mac_legacy_f32  v15, v0, v0
  v_mac_legacy_f32  v15, v3, v3
  v_mac_legacy_f32  v12, s14, v10
  v_mac_legacy_f32  v11, s10, v10
  v_mac_legacy_f32  v8, s18, v10
  s_buffer_load_dwordx16  s[4:19], s[40:43], 0x00
  s_buffer_load_dwordx16  s[24:39], s[40:43], 0x10
  v_rsq_f32     v15, v15
  v_mul_legacy_f32  v9, v12, v12
  v_mac_legacy_f32  v9, v11, v11
  v_mac_legacy_f32  v9, v8, v8
  s_waitcnt     lgkmcnt(0)
  v_mad_legacy_f32  v17, v2, v15, -s25
  v_mad_legacy_f32  v20, v2, v15, -s29
  v_mad_legacy_f32  v2, v2, v15, -s17
  v_mad_legacy_f32  v16, v0, v15, -s24
  v_mad_legacy_f32  v19, v0, v15, -s28
  v_mad_legacy_f32  v18, v3, v15, -s26
  v_mad_legacy_f32  v21, v3, v15, -s30
  v_mad_legacy_f32  v0, v0, v15, -s16
  v_mad_legacy_f32  v3, v3, v15, -s18
  v_mul_legacy_f32  v15, v2, v2
  v_rsq_f32     v9, v9
  v_mac_legacy_f32  v15, v0, v0
  v_mac_legacy_f32  v15, v3, v3
  v_rsq_f32     v15, v15
  v_mul_legacy_f32  v10, v9, v11
  v_mul_legacy_f32  v0, v0, v10
  v_mul_legacy_f32  v11, v9, v12
  v_mul_legacy_f32  v2, v15, v2
  v_mul_legacy_f32  v0, v0, v15
  v_mac_legacy_f32  v0, v2, v11
  v_mul_legacy_f32  v2, v17, v17
  v_mac_legacy_f32  v2, v16, v16
  v_mac_legacy_f32  v2, v18, v18
  v_rsq_f32     v2, v2
  v_mul_legacy_f32  v8, v9, v8
  v_mul_legacy_f32  v3, v15, v3
  v_mul_legacy_f32  v16, v16, v10
  v_mac_legacy_f32  v0, v3, v8
  v_mul_legacy_f32  v3, v2, v17
  v_mul_legacy_f32  v15, v2, v18
  v_mul_legacy_f32  v2, v16, v2
  v_mac_legacy_f32  v2, v3, v11
  v_mul_legacy_f32  v3, v20, v20
  v_mac_legacy_f32  v3, v19, v19
  v_mac_legacy_f32  v3, v21, v21
  v_mul_legacy_f32  v9, s16, v10
  v_rsq_f32     v3, v3
  v_mad_legacy_f32  v9, -s17, v11, -v9
  v_mul_legacy_f32  v13, s24, v10
  v_mad_legacy_f32  v13, -s25, v11, -v13
  v_mac_legacy_f32  v9, v8, -s18
  v_mul_legacy_f32  v22, s28, v10
  v_cmp_gt_f32  vcc, 0, v9
  v_mac_legacy_f32  v13, v8, -s26
  v_mul_legacy_f32  v10, v19, v10
  v_cndmask_b32  v12, 1.0, 0, vcc
  v_mad_legacy_f32  v22, -s29, v11, -v22
  v_cmp_gt_f32  vcc, 0, v13
  v_mul_legacy_f32  v16, v3, v20
  v_mul_legacy_f32  v17, v3, v21
  v_mul_legacy_f32  v3, v10, v3
  v_mul_legacy_f32  v23, v12, v9
  v_mac_legacy_f32  v2, v15, v8
  v_mac_legacy_f32  v3, v16, v11
  v_max_f32     v0, 0, v0
  v_cndmask_b32  v14, 1.0, 0, vcc
  v_mac_legacy_f32  v22, v8, -s30
  v_mac_legacy_f32  v3, v17, v8
  v_max_f32     v2, 0, v2
  v_mul_legacy_f32  v0, v0, v12
  v_mul_legacy_f32  v11, v14, v13
  v_mul_legacy_f32  v10, s32, v23
  v_mul_legacy_f32  v8, s33, v23
  v_mul_legacy_f32  v23, s34, v23
  v_cmp_gt_f32  vcc, 0, v22
  v_mul_legacy_f32  v2, v2, v14
  v_log_f32     v0, v0
  v_mad_legacy_f32  v14, v11, s36, v10
  v_mad_legacy_f32  v10, v11, s37, v8
  v_mac_legacy_f32  v23, s38, v11
  v_cndmask_b32  v8, 1.0, 0, vcc
  v_max_f32     v3, 0, v3
  v_mul_legacy_f32  v3, v3, v8
  v_log_f32     v2, v2
  v_log_f32     v3, v3
  v_mul_legacy_f32  v0, s15, v0
  v_exp_f32     v0, v0
  v_mul_legacy_f32  v2, s15, v2
  s_buffer_load_dwordx16  s[24:39], s[40:43], 0x20
  v_mul_legacy_f32  v3, s15, v3
  v_exp_f32     v2, v2
  v_exp_f32     v3, v3
  v_mul_legacy_f32  v0, v0, v9
  v_mul_legacy_f32  v8, v8, v22
  v_mul_legacy_f32  v2, v2, v13
  s_waitcnt     lgkmcnt(0)
  v_mul_legacy_f32  v11, s28, v0
  v_mul_legacy_f32  v12, s29, v0
  v_mul_legacy_f32  v0, s30, v0
  v_mul_legacy_f32  v3, v3, v22
  v_mac_legacy_f32  v0, s34, v2
  v_mad_legacy_f32  v9, v8, s24, v14
  v_mac_legacy_f32  v10, s25, v8
  v_mad_legacy_f32  v13, v3, s38, v0
  v_mul_legacy_f32  v0, s4, v9
  v_mac_legacy_f32  v11, s32, v2
  v_mac_legacy_f32  v12, s33, v2
  v_add_f32     v2, s8, v0
  v_mul_legacy_f32  v0, s5, v10
  v_mad_legacy_f32  v8, v8, s26, v23
  v_mac_legacy_f32  v12, s37, v3
  v_mac_legacy_f32  v11, s36, v3
  v_add_f32     v3, s9, v0
  v_mul_legacy_f32  v0, s6, v8
  v_mul_legacy_f32  v8, s12, v11
  v_add_f32     v0, s10, v0
  v_mul_legacy_f32  v9, s13, v12
  v_mul_legacy_f32  v10, s14, v13
  s_buffer_load_dwordx8  s[8:15], s[40:43], 0x5c
  v_mul_legacy_f32  v11, s20, v4
  v_mac_legacy_f32  v11, s21, v5
  v_mac_legacy_f32  v11, s22, v6
  v_mad_legacy_f32  v12, v7, s23, v11
  s_buffer_load_dwordx4  s[16:19], s[40:43], 0x64
  s_waitcnt     lgkmcnt(0)
  v_mul_legacy_f32  v11, s8, v4
  v_mac_legacy_f32  v11, s9, v5
  v_mac_legacy_f32  v11, s10, v6
  v_mad_legacy_f32  v13, v7, s11, v11
  v_mul_legacy_f32  v11, s12, v4
  v_mac_legacy_f32  v11, s13, v5
  v_mac_legacy_f32  v11, s14, v6
  v_mad_legacy_f32  v14, v7, s15, v11
  v_mul_legacy_f32  v11, s16, v4
  v_mac_legacy_f32  v11, s17, v5
  v_mul_legacy_f32  v5, s1, v5
  v_mac_legacy_f32  v11, s18, v6
  v_mad_legacy_f32  v4, v4, s0, v5
  v_mul_lo_i32  v5, v1, 48
  v_mad_legacy_f32  v15, v7, s19, v11
  v_mul_legacy_f32  v7, s3, v7
  v_mad_legacy_f32  v1, v6, s2, v7
  v_add_f32     v11, v4, v1 clamp
  v_mov_b32     v1, s7
  ds_write2_b64  v5, v[12:13], v[14:15] offset0:4 offset1:5
  ds_write2_b64  v5, v[2:3], v[0:1] offset1:1
  ds_write2_b64  v5, v[8:9], v[10:11] offset0:2 offset1:3
  s_endpgm      
end


NumVGPR=24,NumSGPR=46,LDS=0,Scratch=0,Occpancy=10


#endif

const unsigned char BasicEffect_VSBasicVertexLighting[] = {
  0x44, 0x58, 0x42, 0x43, 0x6c, 0x97, 0xbd, 0xa6, 0x97, 0xc4, 0x03, 0xaf,
  0x07, 0x02, 0x23, 0x6a, 0x8f, 0x9b, 0x1b, 0xa9, 0x01, 0x00, 0x00, 0x00,
  0x38, 0x1f, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00,
  0x50, 0x00, 0x00, 0x00, 0xb4, 0x00, 0x00, 0x00, 0x38, 0x01, 0x00, 0x00,
  0x54, 0x02, 0x00, 0x00, 0x88, 0x02, 0x00, 0x00, 0x1c, 0x03, 0x00, 0x00,
  0x38, 0x03, 0x00, 0x00, 0x53, 0x46, 0x49, 0x30, 0x08, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x49, 0x53, 0x47, 0x31,
  0x5c, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x48, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x0f, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x54, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x07, 0x07, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x53, 0x56, 0x5f, 0x50, 0x6f, 0x73, 0x69, 0x74,
  0x69, 0x6f, 0x6e, 0x00, 0x4e, 0x4f, 0x52, 0x4d, 0x41, 0x4c, 0x00, 0x00,
  0x4f, 0x53, 0x47, 0x31, 0x7c, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x68, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x68, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x6e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x43, 0x4f, 0x4c, 0x4f, 0x52, 0x00, 0x53, 0x56,
  0x5f, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x00, 0x00, 0x00,
  0x50, 0x53, 0x56, 0x30, 0x14, 0x01, 0x00, 0x00, 0x34, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff,
  0x01, 0x00, 0x00, 0x00, 0x02, 0x03, 0x00, 0x02, 0x03, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x20, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x38, 0x00, 0x00, 0x00, 0x00, 0x53, 0x56, 0x5f, 0x50, 0x6f, 0x73, 0x69,
  0x74, 0x69, 0x6f, 0x6e, 0x00, 0x4e, 0x4f, 0x52, 0x4d, 0x41, 0x4c, 0x00,
  0x43, 0x4f, 0x4c, 0x4f, 0x52, 0x00, 0x43, 0x4f, 0x4c, 0x4f, 0x52, 0x00,
  0x56, 0x53, 0x42, 0x61, 0x73, 0x69, 0x63, 0x56, 0x65, 0x72, 0x74, 0x65,
  0x78, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x10, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x44, 0x00, 0x03, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x43, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x44, 0x00,
  0x03, 0x02, 0x00, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x01, 0x01, 0x44, 0x00, 0x03, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x02, 0x44, 0x03, 0x03, 0x04, 0x00, 0x00,
  0xf0, 0x0f, 0x00, 0x00, 0xf0, 0x0f, 0x00, 0x00, 0xf0, 0x0f, 0x00, 0x00,
  0xf0, 0x0f, 0x00, 0x00, 0x77, 0x00, 0x00, 0x00, 0x77, 0x00, 0x00, 0x00,
  0x77, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x52, 0x54, 0x53, 0x30,
  0x2c, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2c, 0x00, 0x00, 0x00,
  0x1d, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x24, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x49, 0x4c, 0x44, 0x4e, 0x8c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x86, 0x00,
  0x43, 0x3a, 0x5c, 0x55, 0x73, 0x65, 0x72, 0x73, 0x5c, 0x6d, 0x61, 0x72,
  0x63, 0x75, 0x5c, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x73,
  0x5c, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x58, 0x54, 0x4b, 0x31, 0x32,
  0x2d, 0x6d, 0x61, 0x69, 0x6e, 0x5c, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74,
  0x58, 0x54, 0x4b, 0x31, 0x32, 0x2d, 0x6d, 0x61, 0x69, 0x6e, 0x5c, 0x53,
  0x72, 0x63, 0x2f, 0x53, 0x68, 0x61, 0x64, 0x65, 0x72, 0x73, 0x2f, 0x43,
  0x6f, 0x6d, 0x70, 0x69, 0x6c, 0x65, 0x64, 0x5c, 0x58, 0x62, 0x6f, 0x78,
  0x47, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x58, 0x62, 0x6f, 0x78, 0x4f, 0x6e,
  0x65, 0x42, 0x61, 0x73, 0x69, 0x63, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74,
  0x5f, 0x56, 0x53, 0x42, 0x61, 0x73, 0x69, 0x63, 0x56, 0x65, 0x72, 0x74,
  0x65, 0x78, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x70,
  0x64, 0x62, 0x00, 0x00, 0x48, 0x41, 0x53, 0x48, 0x14, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x1e, 0xa8, 0xbb, 0x64, 0xf2, 0x63, 0x9e, 0x72,
  0x4a, 0x12, 0x91, 0x2b, 0x83, 0x39, 0xad, 0x4b, 0x44, 0x58, 0x49, 0x4c,
  0xf8, 0x1b, 0x00, 0x00, 0x60, 0x00, 0x01, 0x00, 0xfe, 0x06, 0x00, 0x00,
  0x44, 0x58, 0x49, 0x4c, 0x00, 0x01, 0x00, 0x00, 0x94, 0x00, 0x00, 0x00,
  0x70, 0x0f, 0x00, 0x00, 0x58, 0x44, 0x41, 0x54, 0x08, 0x00, 0x00, 0x00,
  0x24, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x84, 0x00, 0x00, 0x00,
  0x88, 0x0f, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x0c, 0x10, 0x00, 0x00,
  0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1c, 0x10, 0x00, 0x00,
  0xaf, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xcc, 0x13, 0x00, 0x00,
  0xfd, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xcc, 0x17, 0x00, 0x00,
  0xb0, 0x03, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x7c, 0x1b, 0x00, 0x00,
  0x40, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0xbc, 0x1b, 0x00, 0x00,
  0x28, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0xe4, 0x1b, 0x00, 0x00,
  0x11, 0x00, 0x00, 0x00, 0x60, 0x00, 0x01, 0x00, 0xe2, 0x03, 0x00, 0x00,
  0x44, 0x58, 0x49, 0x4c, 0x00, 0x01, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00,
  0x70, 0x0f, 0x00, 0x00, 0x42, 0x43, 0xc0, 0xde, 0x21, 0x0c, 0x00, 0x00,
  0xd9, 0x03, 0x00, 0x00, 0x0b, 0x82, 0x20, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x13, 0x00, 0x00, 0x00, 0x07, 0x81, 0x23, 0x91, 0x41, 0xc8, 0x04, 0x49,
  0x06, 0x10, 0x32, 0x39, 0x92, 0x01, 0x84, 0x0c, 0x25, 0x05, 0x08, 0x19,
  0x1e, 0x04, 0x8b, 0x62, 0x80, 0x18, 0x45, 0x02, 0x42, 0x92, 0x0b, 0x42,
  0xc4, 0x10, 0x32, 0x14, 0x38, 0x08, 0x18, 0x4b, 0x0a, 0x32, 0x62, 0x88,
  0x48, 0x90, 0x14, 0x20, 0x43, 0x46, 0x88, 0xa5, 0x00, 0x19, 0x32, 0x42,
  0xe4, 0x48, 0x0e, 0x90, 0x11, 0x23, 0xc4, 0x50, 0x41, 0x51, 0x81, 0x8c,
  0xe1, 0x83, 0xe5, 0x8a, 0x04, 0x31, 0x46, 0x06, 0x51, 0x18, 0x00, 0x00,
  0x08, 0x00, 0x00, 0x00, 0x1b, 0x8c, 0xe0, 0xff, 0xff, 0xff, 0xff, 0x07,
  0x40, 0x02, 0xa8, 0x0d, 0x84, 0xf0, 0xff, 0xff, 0xff, 0xff, 0x03, 0x20,
  0x6d, 0x30, 0x86, 0xff, 0xff, 0xff, 0xff, 0x1f, 0x00, 0x09, 0xa8, 0x00,
  0x49, 0x18, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x13, 0x82, 0x60, 0x42,
  0x20, 0x4c, 0x08, 0x06, 0x00, 0x00, 0x00, 0x00, 0x89, 0x20, 0x00, 0x00,
  0x30, 0x00, 0x00, 0x00, 0x32, 0x22, 0x88, 0x09, 0x20, 0x64, 0x85, 0x04,
  0x13, 0x23, 0xa4, 0x84, 0x04, 0x13, 0x23, 0xe3, 0x84, 0xa1, 0x90, 0x14,
  0x12, 0x4c, 0x8c, 0x8c, 0x0b, 0x84, 0xc4, 0x4c, 0x10, 0x90, 0xc1, 0x08,
  0x40, 0x09, 0x00, 0x0a, 0x66, 0x00, 0xe6, 0x08, 0xc0, 0x60, 0x8e, 0x00,
  0x29, 0xc6, 0x40, 0x10, 0x44, 0x41, 0x90, 0x51, 0x0c, 0x80, 0x20, 0x88,
  0x62, 0x20, 0xa4, 0x20, 0x03, 0x31, 0x0c, 0xc3, 0x30, 0x0c, 0xa4, 0x94,
  0x61, 0x20, 0x06, 0x62, 0x0a, 0x31, 0x10, 0xc3, 0x40, 0x4e, 0x51, 0x06,
  0x62, 0x18, 0x86, 0x61, 0x18, 0x86, 0x81, 0xa0, 0xa3, 0x86, 0xcb, 0x9f,
  0xb0, 0x87, 0x90, 0x7c, 0x6e, 0xa3, 0x8a, 0x95, 0x98, 0xfc, 0xe2, 0xb6,
  0x11, 0x31, 0x0c, 0xc3, 0x40, 0xc5, 0x3d, 0xc3, 0xe5, 0x4f, 0xd8, 0x43,
  0x48, 0x7e, 0x08, 0x34, 0xc3, 0x42, 0xa0, 0x60, 0x2a, 0x84, 0x44, 0x50,
  0x04, 0x55, 0xa5, 0x18, 0x88, 0x61, 0x18, 0xe8, 0x9a, 0x23, 0x08, 0x8a,
  0x41, 0x11, 0x05, 0x41, 0x64, 0xa4, 0x0d, 0x04, 0x0c, 0x23, 0x10, 0xc3,
  0x30, 0xc2, 0x30, 0xe4, 0x80, 0x97, 0x04, 0xdd, 0x55, 0x87, 0x23, 0x4d,
  0x0b, 0x80, 0x39, 0xd4, 0xe4, 0xa7, 0x40, 0x04, 0x30, 0xc4, 0x44, 0x44,
  0x12, 0x6a, 0x3a, 0xcf, 0x1b, 0xbe, 0xef, 0xf3, 0xbc, 0x0e, 0xfc, 0x40,
  0x0a, 0x33, 0x81, 0x00, 0x13, 0x16, 0x72, 0xc0, 0x87, 0x74, 0x60, 0x87,
  0x36, 0x68, 0x87, 0x79, 0x68, 0x03, 0x7c, 0x10, 0x87, 0x38, 0xd8, 0xf0,
  0x0a, 0xe5, 0xd0, 0x06, 0xed, 0xa0, 0x07, 0xe5, 0xd0, 0x06, 0xf0, 0xa0,
  0x07, 0x73, 0x20, 0x07, 0x7a, 0x30, 0x07, 0x72, 0xd0, 0x06, 0xe9, 0x10,
  0x07, 0x7a, 0x30, 0x07, 0x72, 0xd0, 0x06, 0xe9, 0x80, 0x07, 0x7a, 0x30,
  0x07, 0x72, 0xd0, 0x06, 0xe9, 0x10, 0x07, 0x76, 0xa0, 0x07, 0x73, 0x20,
  0x07, 0x6d, 0x90, 0x0e, 0x73, 0x20, 0x07, 0x7a, 0x30, 0x07, 0x72, 0xd0,
  0x06, 0xe9, 0x60, 0x07, 0x74, 0xa0, 0x07, 0x76, 0x40, 0x07, 0x6d, 0x60,
  0x0e, 0x71, 0x60, 0x07, 0x7a, 0x30, 0x07, 0x72, 0xd0, 0x06, 0xe6, 0x30,
  0x07, 0x72, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x60, 0x0e, 0x76, 0x40,
  0x07, 0x7a, 0x60, 0x07, 0x74, 0xd0, 0x06, 0xee, 0x80, 0x07, 0x7a, 0x10,
  0x07, 0x76, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x7a, 0x60, 0x07, 0x74, 0x30,
  0xe4, 0x09, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x60, 0xc8, 0x63, 0x00, 0x01, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0xc0, 0x90, 0x07, 0x01, 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x80, 0x21, 0x8f, 0x02, 0x04, 0x40, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x43, 0x1e, 0x06, 0x08, 0x80, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x86, 0x3c, 0x0e, 0x10, 0x00, 0x01, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x79, 0x20, 0x20, 0x00, 0x02,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0xf2, 0x54, 0x40, 0x00,
  0x0c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0xe4, 0xb9, 0x80,
  0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0xc8, 0xa3,
  0x01, 0x01, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x16,
  0x08, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x32, 0x1e, 0x98, 0x14,
  0x19, 0x11, 0x4c, 0x90, 0x8c, 0x09, 0x26, 0x47, 0xc6, 0x04, 0x43, 0x22,
  0x4a, 0x60, 0x04, 0xa0, 0x20, 0x8a, 0xa1, 0x80, 0x0d, 0xca, 0xa0, 0x3c,
  0xca, 0xa1, 0x08, 0xa8, 0x28, 0x89, 0x11, 0x80, 0x42, 0x28, 0x83, 0x22,
  0x20, 0x71, 0x06, 0x80, 0xc6, 0xb1, 0x92, 0x83, 0x81, 0xff, 0x01, 0xfe,
  0x07, 0xf8, 0x1f, 0xe0, 0x7f, 0xb8, 0x87, 0x7b, 0xb8, 0x07, 0x00, 0x00,
  0x79, 0x18, 0x00, 0x00, 0x74, 0x00, 0x00, 0x00, 0x1a, 0x03, 0x4c, 0x90,
  0x46, 0x02, 0x13, 0xc4, 0x36, 0xf8, 0xfa, 0xc2, 0x12, 0x7a, 0xc2, 0xfa,
  0x82, 0x2a, 0x92, 0xfa, 0xa2, 0x42, 0x92, 0x2a, 0x0a, 0x22, 0xfa, 0x9a,
  0x1a, 0x92, 0x0a, 0xa2, 0x1a, 0x42, 0xfa, 0x9a, 0x4a, 0xd2, 0x2a, 0xfa,
  0x62, 0x4a, 0x6a, 0x4a, 0xa2, 0xfa, 0x4a, 0x72, 0xfa, 0x12, 0xca, 0xa2,
  0x2a, 0x9a, 0x62, 0x00, 0xb3, 0x41, 0x08, 0x04, 0x76, 0x64, 0x78, 0x63,
  0x78, 0x62, 0x6f, 0x78, 0x20, 0x32, 0x34, 0x31, 0x30, 0x2e, 0x32, 0x34,
  0x31, 0x30, 0x2e, 0x31, 0x31, 0x31, 0x31, 0x36, 0x2e, 0x31, 0x30, 0x37,
  0x34, 0x31, 0x1b, 0x02, 0x62, 0x82, 0x40, 0x28, 0x13, 0x04, 0x62, 0xd9,
  0x20, 0x18, 0xc7, 0x04, 0x81, 0x60, 0x36, 0x08, 0x46, 0x42, 0xc1, 0x6e,
  0x6e, 0x82, 0x40, 0x34, 0x1b, 0x86, 0x85, 0x39, 0x26, 0x08, 0x62, 0x80,
  0x11, 0x98, 0x20, 0x10, 0xce, 0x06, 0xe4, 0x70, 0x9e, 0xe3, 0x30, 0x20,
  0x60, 0x43, 0x10, 0x6d, 0x20, 0x00, 0x40, 0x02, 0x26, 0x08, 0x63, 0x90,
  0x6d, 0x08, 0xa8, 0x09, 0x82, 0x00, 0xb0, 0xb2, 0x9a, 0x12, 0x0a, 0x9b,
  0x4b, 0x1b, 0xb3, 0x2a, 0x93, 0xa3, 0x2b, 0xc3, 0x63, 0x4a, 0x3b, 0x43,
  0xa3, 0x4b, 0x73, 0x3b, 0xe3, 0x32, 0x65, 0xf5, 0x05, 0xf5, 0x36, 0x97,
  0x46, 0x97, 0xf6, 0xe6, 0x36, 0x41, 0x28, 0xa6, 0x09, 0x42, 0x41, 0x6d,
  0x08, 0x8e, 0x09, 0x42, 0x51, 0x4d, 0x10, 0x88, 0x67, 0x82, 0x40, 0x40,
  0x1b, 0x84, 0xce, 0xdb, 0xb0, 0x1c, 0x58, 0xa6, 0x6d, 0x9a, 0xc1, 0x1d,
  0xda, 0x47, 0xc3, 0xe9, 0x49, 0xaa, 0x29, 0x88, 0x69, 0x82, 0x50, 0x58,
  0x13, 0x04, 0x22, 0xda, 0x20, 0x74, 0x63, 0xb0, 0x61, 0x31, 0xc2, 0x20,
  0xd3, 0x36, 0xcd, 0x10, 0x03, 0x43, 0x23, 0x83, 0x0d, 0x02, 0x18, 0x94,
  0x01, 0x8b, 0xa1, 0x27, 0xa6, 0x27, 0xa9, 0x09, 0x42, 0x71, 0x6d, 0x58,
  0x8e, 0x33, 0xc8, 0xb4, 0x0d, 0x0d, 0x0c, 0xee, 0xd0, 0xbe, 0x0d, 0x81,
  0xb1, 0x61, 0x31, 0xce, 0x20, 0xd3, 0xd4, 0x00, 0x0d, 0x0c, 0xce, 0xd0,
  0xbe, 0x09, 0x02, 0x21, 0x6d, 0x58, 0xd8, 0x00, 0xcb, 0xc4, 0x60, 0xe3,
  0x0c, 0x8e, 0x0d, 0xb4, 0x6f, 0xc3, 0x90, 0x06, 0x6b, 0xd0, 0x06, 0x1b,
  0x06, 0x33, 0x70, 0x03, 0x60, 0x43, 0x61, 0x5d, 0x6f, 0x30, 0x01, 0xad,
  0xf0, 0xc4, 0xde, 0xf0, 0x5c, 0xc6, 0xde, 0xda, 0xe0, 0xd2, 0xd8, 0xca,
  0xe4, 0x5c, 0xde, 0xe0, 0xe8, 0xd2, 0xde, 0xdc, 0xe6, 0xa6, 0x04, 0x42,
  0x15, 0x36, 0x36, 0xbb, 0x36, 0x97, 0x34, 0xb2, 0x32, 0x37, 0xba, 0x29,
  0x01, 0x51, 0x85, 0x0c, 0xcf, 0xc5, 0xae, 0x4c, 0x6e, 0x2e, 0xed, 0xcd,
  0x6d, 0x4a, 0x70, 0x34, 0x21, 0xc3, 0x73, 0xb1, 0x0b, 0x63, 0xb3, 0x2b,
  0x93, 0x9b, 0x12, 0x24, 0x75, 0xc8, 0xf0, 0x5c, 0xe6, 0xd0, 0xc2, 0xc8,
  0xca, 0xe4, 0x9a, 0xde, 0xc8, 0xca, 0xd8, 0xa6, 0x04, 0x4c, 0x19, 0x32,
  0x3c, 0x17, 0xb9, 0xb2, 0xb9, 0xb7, 0x3a, 0xb9, 0xb1, 0xb2, 0xb9, 0x29,
  0x81, 0x54, 0x87, 0x0c, 0xcf, 0xc5, 0x2e, 0xad, 0xec, 0x2e, 0x89, 0x6c,
  0x8a, 0x2e, 0x8c, 0xae, 0x6c, 0x4a, 0x40, 0xd5, 0x21, 0xc3, 0x73, 0x29,
  0x73, 0xa3, 0x93, 0xcb, 0x83, 0x7a, 0x4b, 0x73, 0xa3, 0x9b, 0x9b, 0x12,
  0xbc, 0x01, 0x00, 0x00, 0x79, 0x18, 0x00, 0x00, 0x50, 0x00, 0x00, 0x00,
  0x33, 0x08, 0x80, 0x1c, 0xc4, 0xe1, 0x1c, 0x66, 0x14, 0x01, 0x3d, 0x88,
  0x43, 0x38, 0x84, 0xc3, 0x8c, 0x42, 0x80, 0x07, 0x79, 0x78, 0x07, 0x73,
  0x98, 0x71, 0x0c, 0xe6, 0x00, 0x0f, 0xed, 0x10, 0x0e, 0xf4, 0x80, 0x0e,
  0x33, 0x0c, 0x42, 0x1e, 0xc2, 0xc1, 0x1d, 0xce, 0xa1, 0x1c, 0x66, 0x30,
  0x05, 0x3d, 0x88, 0x43, 0x38, 0x84, 0x83, 0x1b, 0xcc, 0x03, 0x3d, 0xc8,
  0x43, 0x3d, 0x8c, 0x03, 0x3d, 0xcc, 0x78, 0x8c, 0x74, 0x70, 0x07, 0x7b,
  0x08, 0x07, 0x79, 0x48, 0x87, 0x70, 0x70, 0x07, 0x7a, 0x70, 0x03, 0x76,
  0x78, 0x87, 0x70, 0x20, 0x87, 0x19, 0xcc, 0x11, 0x0e, 0xec, 0x90, 0x0e,
  0xe1, 0x30, 0x0f, 0x6e, 0x30, 0x0f, 0xe3, 0xf0, 0x0e, 0xf0, 0x50, 0x0e,
  0x33, 0x10, 0xc4, 0x1d, 0xde, 0x21, 0x1c, 0xd8, 0x21, 0x1d, 0xc2, 0x61,
  0x1e, 0x66, 0x30, 0x89, 0x3b, 0xbc, 0x83, 0x3b, 0xd0, 0x43, 0x39, 0xb4,
  0x03, 0x3c, 0xbc, 0x83, 0x3c, 0x84, 0x03, 0x3b, 0xcc, 0xf0, 0x14, 0x76,
  0x60, 0x07, 0x7b, 0x68, 0x07, 0x37, 0x68, 0x87, 0x72, 0x68, 0x07, 0x37,
  0x80, 0x87, 0x70, 0x90, 0x87, 0x70, 0x60, 0x07, 0x76, 0x28, 0x07, 0x76,
  0xf8, 0x05, 0x76, 0x78, 0x87, 0x77, 0x80, 0x87, 0x5f, 0x08, 0x87, 0x71,
  0x18, 0x87, 0x72, 0x98, 0x87, 0x79, 0x98, 0x81, 0x2c, 0xee, 0xf0, 0x0e,
  0xee, 0xe0, 0x0e, 0xf5, 0xc0, 0x0e, 0xec, 0x30, 0x03, 0x62, 0xc8, 0xa1,
  0x1c, 0xe4, 0xa1, 0x1c, 0xcc, 0xa1, 0x1c, 0xe4, 0xa1, 0x1c, 0xdc, 0x61,
  0x1c, 0xca, 0x21, 0x1c, 0xc4, 0x81, 0x1d, 0xca, 0x61, 0x06, 0xd6, 0x90,
  0x43, 0x39, 0xc8, 0x43, 0x39, 0x98, 0x43, 0x39, 0xc8, 0x43, 0x39, 0xb8,
  0xc3, 0x38, 0x94, 0x43, 0x38, 0x88, 0x03, 0x3b, 0x94, 0xc3, 0x2f, 0xbc,
  0x83, 0x3c, 0xfc, 0x82, 0x3b, 0xd4, 0x03, 0x3b, 0xb0, 0xc3, 0x0c, 0xc4,
  0x21, 0x07, 0x7c, 0x70, 0x03, 0x7a, 0x28, 0x87, 0x76, 0x80, 0x87, 0x19,
  0xca, 0xc3, 0x0e, 0xec, 0x60, 0x0f, 0xed, 0xe0, 0x06, 0xec, 0xf0, 0x0e,
  0xef, 0x00, 0x0f, 0x33, 0x22, 0x88, 0x1c, 0xf0, 0xc1, 0x0d, 0xc8, 0x41,
  0x1c, 0xce, 0xc1, 0x0d, 0xec, 0x21, 0x1c, 0xe4, 0x81, 0x1d, 0xc2, 0x21,
  0x1f, 0xde, 0xa1, 0x1e, 0xe8, 0x01, 0x00, 0x00, 0x71, 0x20, 0x00, 0x00,
  0x29, 0x00, 0x00, 0x00, 0x06, 0x50, 0xbd, 0xec, 0x06, 0x48, 0x88, 0xf0,
  0x12, 0xd1, 0x44, 0x5c, 0x25, 0x62, 0x1c, 0x13, 0xd2, 0x18, 0x56, 0x00,
  0x0d, 0x97, 0xef, 0x3c, 0x7e, 0x80, 0x34, 0x40, 0x84, 0xf9, 0xc5, 0x6d,
  0xdb, 0xc1, 0x36, 0x5c, 0xbe, 0xf3, 0xf8, 0x42, 0x40, 0x15, 0x05, 0x11,
  0x95, 0x0e, 0x30, 0x94, 0x84, 0x01, 0x08, 0x98, 0x5f, 0xdc, 0xb6, 0x25,
  0x48, 0xc3, 0xe5, 0x3b, 0x8f, 0x2f, 0x44, 0x04, 0x30, 0x11, 0x21, 0xd0,
  0x0c, 0x0b, 0x61, 0x03, 0xce, 0x70, 0xf9, 0xce, 0xe3, 0x0f, 0xce, 0x74,
  0xfb, 0xc5, 0x6d, 0x9b, 0x81, 0x33, 0x5c, 0xbe, 0xf3, 0xf8, 0x83, 0x33,
  0xe1, 0x7e, 0x71, 0xdb, 0x16, 0x30, 0x0d, 0x97, 0xef, 0x3c, 0xfe, 0xe2,
  0x00, 0x83, 0xd8, 0x3c, 0xd4, 0xe4, 0x17, 0xb7, 0x6d, 0x02, 0xd5, 0x70,
  0xf9, 0xce, 0xe3, 0x4b, 0x93, 0x13, 0x11, 0x28, 0x35, 0x3d, 0xd4, 0xe4,
  0x17, 0xb7, 0x6d, 0x08, 0xd2, 0x70, 0xf9, 0xce, 0xe3, 0x4f, 0x44, 0x34,
  0x21, 0x40, 0x84, 0xf9, 0xc5, 0x6d, 0x1b, 0xc1, 0x33, 0x5c, 0xbe, 0xf3,
  0xf8, 0x54, 0x03, 0x44, 0x98, 0x5f, 0xdc, 0x36, 0x00, 0x00, 0x00, 0x00,
  0x61, 0x20, 0x00, 0x00, 0x36, 0x02, 0x00, 0x00, 0x13, 0x04, 0x41, 0x2c,
  0x10, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x94, 0x8d, 0x00, 0x50,
  0x51, 0x02, 0x44, 0x14, 0x5c, 0x71, 0x95, 0x5d, 0x29, 0x14, 0xc2, 0x0c,
  0x40, 0xc9, 0x94, 0x5b, 0xa9, 0x94, 0x4b, 0x19, 0x95, 0x5c, 0x81, 0x94,
  0x48, 0x61, 0x94, 0x49, 0xa1, 0x94, 0x44, 0x51, 0x94, 0x45, 0xb1, 0x14,
  0x4c, 0x71, 0xd0, 0x30, 0x46, 0x00, 0x82, 0x20, 0x88, 0x7f, 0x23, 0x00,
  0x63, 0x04, 0x20, 0x08, 0x82, 0x20, 0x28, 0x00, 0x23, 0x06, 0x09, 0x00,
  0x82, 0x60, 0xa0, 0xb5, 0xc1, 0xf3, 0xad, 0xc1, 0x1a, 0x70, 0x23, 0x06,
  0x09, 0x00, 0x82, 0x60, 0x60, 0xd8, 0xc1, 0xd5, 0x06, 0x6c, 0x30, 0x06,
  0xd6, 0x88, 0x41, 0x02, 0x80, 0x20, 0x18, 0x18, 0x77, 0x80, 0xb9, 0x41,
  0x1b, 0x74, 0xd7, 0x88, 0x41, 0x02, 0x80, 0x20, 0x18, 0x18, 0x78, 0x90,
  0xbd, 0x81, 0x1b, 0x88, 0x01, 0x36, 0x62, 0x90, 0x00, 0x20, 0x08, 0x06,
  0x46, 0x1e, 0x68, 0x6f, 0xf0, 0x06, 0x66, 0x90, 0x8d, 0x18, 0x24, 0x00,
  0x08, 0x82, 0x81, 0xa1, 0x07, 0x1b, 0x1c, 0xc0, 0x01, 0x18, 0x68, 0x23,
  0x06, 0x09, 0x00, 0x82, 0x60, 0x60, 0xec, 0x01, 0x17, 0x07, 0x71, 0x50,
  0x06, 0xdb, 0x88, 0x41, 0x02, 0x80, 0x20, 0x18, 0x18, 0x7c, 0xd0, 0xc9,
  0x81, 0x1c, 0x9c, 0x01, 0x37, 0x62, 0x70, 0x00, 0x20, 0x08, 0x06, 0xd5,
  0x1d, 0x80, 0x01, 0xe2, 0x06, 0xa3, 0x09, 0x01, 0x30, 0x9a, 0x20, 0x04,
  0xa3, 0x09, 0x83, 0x30, 0x9a, 0x40, 0x0c, 0x23, 0x06, 0x07, 0x00, 0x82,
  0x60, 0x50, 0xf1, 0x41, 0x19, 0x34, 0xdb, 0x68, 0x42, 0x00, 0x8c, 0x26,
  0x08, 0xc1, 0x68, 0xc2, 0x20, 0x8c, 0x26, 0x10, 0xc3, 0x88, 0xc1, 0x01,
  0x80, 0x20, 0x18, 0x54, 0xa1, 0xa0, 0x06, 0xd2, 0x37, 0x9a, 0x10, 0x00,
  0xa3, 0x09, 0x42, 0x30, 0x9a, 0x30, 0x08, 0xa3, 0x09, 0xc4, 0x60, 0xce,
  0x24, 0x9f, 0x11, 0x03, 0x04, 0x00, 0x41, 0x30, 0xb8, 0x4c, 0x21, 0x0e,
  0x26, 0x27, 0x18, 0x31, 0x40, 0x00, 0x10, 0x04, 0x83, 0xeb, 0x14, 0xe4,
  0x60, 0x72, 0x82, 0x11, 0x03, 0x04, 0x00, 0x41, 0x30, 0xb8, 0x50, 0x61,
  0x0e, 0x26, 0x27, 0xb0, 0xe6, 0x92, 0xcf, 0x88, 0x01, 0x02, 0x80, 0x20,
  0x18, 0x5c, 0xaa, 0x50, 0x07, 0x57, 0x13, 0x8c, 0x18, 0x20, 0x00, 0x08,
  0x82, 0xc1, 0xb5, 0x0a, 0x76, 0x70, 0x35, 0xc1, 0x88, 0x01, 0x02, 0x80,
  0x20, 0x18, 0x5c, 0xac, 0x70, 0x07, 0x57, 0x13, 0x18, 0xb3, 0xc9, 0x67,
  0xc4, 0x00, 0x01, 0x40, 0x10, 0x0c, 0x2e, 0x57, 0xc8, 0x83, 0x8d, 0x09,
  0x46, 0x0c, 0x10, 0x00, 0x04, 0xc1, 0xe0, 0x7a, 0x05, 0x3d, 0xd8, 0x98,
  0x60, 0xc4, 0x00, 0x01, 0x40, 0x10, 0x0c, 0x2e, 0x58, 0xd8, 0x83, 0x8d,
  0x09, 0x46, 0x0c, 0x0e, 0x00, 0x04, 0xc1, 0xa0, 0x92, 0x85, 0x3d, 0x18,
  0x83, 0x37, 0x18, 0x4d, 0x08, 0x80, 0xd1, 0x04, 0x21, 0x18, 0x4d, 0x18,
  0x04, 0x1b, 0x9a, 0xf8, 0xd8, 0xa0, 0xc4, 0xc7, 0x86, 0x23, 0x3e, 0x23,
  0x06, 0x0b, 0x00, 0x82, 0x60, 0xa0, 0xf4, 0x42, 0x1f, 0x0c, 0x42, 0x30,
  0x08, 0xc1, 0x88, 0x81, 0x01, 0x80, 0x20, 0x18, 0x30, 0xbd, 0xf0, 0x07,
  0x81, 0x15, 0x81, 0x7c, 0xac, 0x10, 0xe4, 0x63, 0xc5, 0x20, 0x9f, 0x11,
  0x83, 0x03, 0x00, 0x41, 0x30, 0xa8, 0x7c, 0xe1, 0x14, 0xde, 0x40, 0x0f,
  0x46, 0x13, 0x02, 0x60, 0x34, 0x41, 0x08, 0x46, 0x13, 0x06, 0x61, 0xc4,
  0xe0, 0x00, 0x40, 0x10, 0x0c, 0x2a, 0x71, 0x58, 0x85, 0x39, 0xe8, 0x83,
  0xd1, 0x84, 0x00, 0x18, 0x4d, 0x10, 0x82, 0xd1, 0x84, 0x41, 0x18, 0x31,
  0x38, 0x00, 0x10, 0x04, 0x83, 0xca, 0x1c, 0x5e, 0xe1, 0x0e, 0x52, 0x61,
  0x34, 0x21, 0x00, 0x46, 0x13, 0x84, 0x60, 0x34, 0x61, 0x10, 0x6c, 0xd1,
  0x03, 0xf9, 0x8c, 0x18, 0x20, 0x00, 0x08, 0x82, 0xc1, 0xa5, 0x0e, 0xb5,
  0xa0, 0x07, 0x4b, 0x30, 0x62, 0x80, 0x00, 0x20, 0x08, 0x06, 0xd7, 0x3a,
  0xd8, 0x82, 0x1e, 0x2c, 0x81, 0x29, 0x7d, 0x20, 0x9f, 0x11, 0x03, 0x04,
  0x00, 0x41, 0x30, 0xb8, 0xda, 0x01, 0x17, 0xfa, 0x40, 0x09, 0x46, 0x0c,
  0x10, 0x00, 0x04, 0xc1, 0xe0, 0x72, 0x87, 0x5c, 0xe8, 0x03, 0x25, 0xb0,
  0x04, 0x14, 0xe4, 0x33, 0x62, 0x80, 0x00, 0x20, 0x08, 0x06, 0x17, 0x3c,
  0xec, 0x02, 0x28, 0x24, 0xc1, 0x88, 0x01, 0x02, 0x80, 0x20, 0x18, 0x5c,
  0xf1, 0xc0, 0x0b, 0xa0, 0x90, 0x04, 0x23, 0x06, 0x0b, 0x00, 0x82, 0x60,
  0xa0, 0xdc, 0xc3, 0x2d, 0x1c, 0x44, 0x70, 0x10, 0xc1, 0x88, 0x81, 0x01,
  0x80, 0x20, 0x18, 0x30, 0xf7, 0x90, 0x0b, 0x81, 0x05, 0x89, 0x7c, 0x4c,
  0x38, 0xe4, 0x63, 0x43, 0x21, 0x9f, 0x11, 0x83, 0x03, 0x00, 0x41, 0x30,
  0xa8, 0xf0, 0x21, 0x1c, 0x52, 0x01, 0x1e, 0x46, 0x13, 0x02, 0x60, 0x34,
  0x41, 0x08, 0x46, 0x13, 0x06, 0x61, 0xc4, 0xe0, 0x00, 0x40, 0x10, 0x0c,
  0x2a, 0x7e, 0x28, 0x87, 0x56, 0xb0, 0x87, 0xd1, 0x84, 0x00, 0x18, 0x4d,
  0x10, 0x82, 0xd1, 0x84, 0x41, 0x18, 0x31, 0x38, 0x00, 0x10, 0x04, 0x83,
  0x0a, 0x24, 0xd2, 0x21, 0x16, 0x74, 0x61, 0x34, 0x21, 0x00, 0x46, 0x13,
  0x84, 0x60, 0x34, 0x61, 0x10, 0x2c, 0x0d, 0x96, 0xf8, 0x58, 0x1a, 0x2c,
  0xf1, 0xb1, 0x34, 0x58, 0xe2, 0x33, 0x62, 0xb0, 0x00, 0x20, 0x08, 0x06,
  0xca, 0x4a, 0xac, 0xc3, 0x20, 0x04, 0x83, 0x10, 0x8c, 0x18, 0x18, 0x00,
  0x08, 0x82, 0x01, 0xb3, 0x12, 0xed, 0x10, 0x58, 0x40, 0xc8, 0xc7, 0x04,
  0x42, 0x3e, 0x23, 0x06, 0x07, 0x00, 0x82, 0x60, 0x50, 0xad, 0x04, 0x3d,
  0xf0, 0x82, 0x3c, 0x8c, 0x26, 0x04, 0xc0, 0x68, 0x82, 0x10, 0x8c, 0x26,
  0x0c, 0xc2, 0x88, 0xc1, 0x01, 0x80, 0x20, 0x18, 0x54, 0x2f, 0x81, 0x0f,
  0xe0, 0x50, 0x12, 0xa3, 0x09, 0x01, 0x30, 0x9a, 0x20, 0x04, 0xa3, 0x09,
  0x83, 0x30, 0x62, 0x70, 0x00, 0x20, 0x08, 0x06, 0xd5, 0x4c, 0xf0, 0x03,
  0x39, 0xb0, 0xc3, 0x68, 0x42, 0x00, 0x8c, 0x26, 0x08, 0xc1, 0x68, 0xc2,
  0x20, 0x18, 0x1f, 0x2c, 0xf1, 0x31, 0x3e, 0x58, 0xe2, 0x63, 0x7c, 0xb0,
  0xc4, 0x67, 0xc4, 0x60, 0x01, 0x40, 0x10, 0x0c, 0x14, 0x9f, 0xf0, 0x87,
  0x41, 0x08, 0x06, 0x21, 0x18, 0x31, 0x30, 0x00, 0x10, 0x04, 0x03, 0xc6,
  0x27, 0x40, 0x22, 0xb0, 0x80, 0x90, 0x8f, 0x09, 0x84, 0x7c, 0x46, 0x0c,
  0x0e, 0x00, 0x04, 0xc1, 0xa0, 0xf2, 0x89, 0x93, 0x78, 0x07, 0x93, 0x18,
  0x4d, 0x08, 0x80, 0xd1, 0x04, 0x21, 0x18, 0x4d, 0x18, 0x84, 0x11, 0x83,
  0x03, 0x00, 0x41, 0x30, 0xa8, 0xc4, 0x62, 0x25, 0xe6, 0xa1, 0x27, 0x46,
  0x13, 0x02, 0x60, 0x34, 0x41, 0x08, 0x46, 0x13, 0x06, 0x61, 0xc4, 0xe0,
  0x00, 0x40, 0x10, 0x0c, 0x2a, 0xb3, 0x78, 0x89, 0x7b, 0xf0, 0x87, 0xd1,
  0x84, 0x00, 0x18, 0x4d, 0x10, 0x82, 0xd1, 0x84, 0x41, 0xb0, 0x57, 0x58,
  0xe2, 0x63, 0xaf, 0xb0, 0xc4, 0xc7, 0x5e, 0x61, 0x89, 0xcf, 0x88, 0xc1,
  0x02, 0x80, 0x20, 0x18, 0x28, 0x71, 0x11, 0x13, 0x83, 0x10, 0x0c, 0x42,
  0x30, 0x62, 0x60, 0x00, 0x20, 0x08, 0x06, 0x4c, 0x5c, 0xcc, 0x44, 0x60,
  0x01, 0x21, 0x1f, 0x13, 0x08, 0xf9, 0xd8, 0x48, 0xdc, 0x41, 0x7c, 0x8c,
  0x24, 0xee, 0x20, 0x3e, 0x56, 0x12, 0x66, 0x10, 0x1f, 0x33, 0x09, 0x33,
  0x88, 0x8f, 0x9d, 0x44, 0x15, 0x1f, 0x43, 0x89, 0x2a, 0x3e, 0x26, 0x0a,
  0x7e, 0x20, 0x1f, 0x53, 0x89, 0x20, 0x3e, 0x23, 0x06, 0x08, 0x00, 0x82,
  0x60, 0x70, 0xe1, 0xc5, 0x58, 0x20, 0xa3, 0x10, 0x8c, 0x18, 0x20, 0x00,
  0x08, 0x82, 0xc1, 0x95, 0x17, 0x64, 0x81, 0x8c, 0x42, 0x60, 0xa6, 0xf0,
  0x06, 0xf2, 0x31, 0x97, 0x08, 0xe2, 0x33, 0x62, 0x80, 0x00, 0x20, 0x08,
  0x06, 0x17, 0x5f, 0x9c, 0x85, 0x72, 0x0a, 0xc1, 0x88, 0x01, 0x02, 0x80,
  0x20, 0x18, 0x5c, 0x7d, 0x81, 0x16, 0xca, 0x29, 0x04, 0xa6, 0x0a, 0x60,
  0x20, 0x1f, 0x93, 0x89, 0x20, 0x3e, 0x23, 0x06, 0x08, 0x00, 0x82, 0x60,
  0x70, 0x81, 0xc6, 0x5a, 0x30, 0xab, 0x10, 0x8c, 0x18, 0x20, 0x00, 0x08,
  0x82, 0xc1, 0x15, 0x1a, 0x6c, 0xc1, 0xac, 0x42, 0x60, 0x7f, 0xe0, 0x0a,
  0xf2, 0xb1, 0x80, 0x0f, 0xe4, 0x33, 0x62, 0x80, 0x00, 0x20, 0x08, 0x06,
  0x17, 0x69, 0xbc, 0x05, 0x1f, 0xbc, 0x42, 0x30, 0x62, 0x80, 0x00, 0x20,
  0x08, 0x06, 0x57, 0x69, 0xc0, 0x05, 0x1f, 0xbc, 0x42, 0x60, 0x70, 0x20,
  0x0b, 0xf2, 0xb1, 0xa0, 0x0d, 0xe4, 0x33, 0x62, 0x80, 0x00, 0x20, 0x08,
  0x06, 0x17, 0x6a, 0xcc, 0x45, 0x1b, 0xcc, 0x42, 0x30, 0x62, 0x80, 0x00,
  0x20, 0x08, 0x06, 0x57, 0x6a, 0xd0, 0x45, 0x1b, 0xcc, 0x42, 0x60, 0x61,
  0x60, 0x0b, 0xf2, 0xb1, 0xc0, 0x93, 0xcf, 0x88, 0x01, 0x02, 0x80, 0x20,
  0x18, 0x5c, 0xac, 0x71, 0x17, 0xde, 0x2d, 0x04, 0x23, 0x06, 0x08, 0x00,
  0x82, 0x60, 0x70, 0xb5, 0x06, 0x5e, 0x78, 0xb7, 0x10, 0x0c, 0x47, 0x54,
  0x62, 0x41, 0x7c, 0xc3, 0x11, 0xd2, 0x58, 0x10, 0xdf, 0x70, 0xc4, 0x43,
  0x16, 0xc4, 0x37, 0xdd, 0x50, 0x16, 0x66, 0x31, 0x4c, 0x37, 0x98, 0xc5,
  0x59, 0x0c, 0xd3, 0x0d, 0x67, 0x81, 0x16, 0x83, 0x0d, 0x9b, 0x7c, 0x6c,
  0xc0, 0xe4, 0x63, 0x43, 0x25, 0x9f, 0x11, 0x83, 0x03, 0x00, 0x41, 0x30,
  0xa8, 0x70, 0x23, 0x34, 0xd2, 0xa2, 0x35, 0x46, 0x13, 0x82, 0x61, 0xc4,
  0xe0, 0x00, 0x40, 0x10, 0x0c, 0x1c, 0xde, 0xd8, 0x0b, 0xaa, 0x2d, 0x46,
  0x0c, 0x0e, 0x00, 0x04, 0xc1, 0xc0, 0xe9, 0x0d, 0xbe, 0x88, 0xdc, 0x62,
  0xc4, 0xe0, 0x00, 0x40, 0x10, 0x0c, 0x1c, 0xdf, 0xe8, 0x0b, 0xe7, 0x2d,
  0x6c, 0x58, 0xe4, 0x63, 0xc3, 0x22, 0x1f, 0x1b, 0x16, 0xf9, 0x8c, 0x18,
  0x18, 0x00, 0x08, 0x82, 0x01, 0x33, 0x1e, 0xa2, 0x31, 0x8c, 0x18, 0x18,
  0x00, 0x08, 0x82, 0x01, 0x43, 0x1e, 0xa3, 0x31, 0x8c, 0x18, 0x18, 0x00,
  0x08, 0x82, 0x01, 0x53, 0x1e, 0xa4, 0x31, 0xd8, 0xa0, 0xc8, 0xc7, 0x86,
  0x45, 0x3e, 0x36, 0x30, 0xf2, 0x19, 0x31, 0x30, 0x00, 0x10, 0x04, 0x03,
  0x26, 0x3d, 0x52, 0x63, 0x18, 0x31, 0x30, 0x00, 0x10, 0x04, 0x03, 0x46,
  0x3d, 0x54, 0x63, 0x18, 0x31, 0x30, 0x00, 0x10, 0x04, 0x03, 0x66, 0x3d,
  0x56, 0x63, 0xb0, 0xe1, 0x0d, 0xe4, 0x63, 0x03, 0x1b, 0xc8, 0xc7, 0x86,
  0x34, 0x90, 0x8f, 0x5d, 0xef, 0x20, 0x9f, 0x11, 0x03, 0x04, 0x00, 0x41,
  0x30, 0xb8, 0xd8, 0xe3, 0x36, 0xae, 0x5e, 0x08, 0x46, 0x0c, 0x10, 0x00,
  0x04, 0xc1, 0xe0, 0x6a, 0x0f, 0xdc, 0xb8, 0x56, 0x21, 0x30, 0x2d, 0x1e,
  0xe4, 0x33, 0x62, 0x80, 0x00, 0x20, 0x08, 0x06, 0xd7, 0x7b, 0xe8, 0x86,
  0xf6, 0x0b, 0xc1, 0x88, 0x01, 0x02, 0x80, 0x20, 0x18, 0x5c, 0xf0, 0xb1,
  0x1b, 0x5a, 0x2b, 0x04, 0xd6, 0xcd, 0x83, 0x7c, 0x46, 0x0c, 0x10, 0x00,
  0x04, 0xc1, 0xe0, 0x92, 0x8f, 0xde, 0xe8, 0xc2, 0x21, 0x18, 0x31, 0x40,
  0x00, 0x10, 0x04, 0x83, 0x6b, 0x3e, 0x7c, 0xa3, 0x7b, 0x85, 0x60, 0xc4,
  0xe0, 0x00, 0x40, 0x10, 0x0c, 0xaa, 0xfa, 0xf0, 0x0d, 0xd3, 0x88, 0x8f,
  0xd1, 0x84, 0x00, 0x18, 0x4d, 0x10, 0x82, 0xd1, 0x84, 0x41, 0xb0, 0x61,
  0x91, 0x8f, 0x0d, 0x89, 0x7c, 0x6c, 0x38, 0xe4, 0x33, 0x62, 0x70, 0x00,
  0x20, 0x08, 0x06, 0x15, 0x7f, 0x94, 0x47, 0x6b, 0xe4, 0xc7, 0x68, 0x42,
  0x00, 0x8c, 0x26, 0x08, 0xc1, 0x68, 0xc2, 0x20, 0xd8, 0x31, 0xc0, 0xc7,
  0x8e, 0x01, 0x3e, 0x76, 0x0c, 0xf0, 0x31, 0x4d, 0x24, 0xe4, 0x33, 0x62,
  0x80, 0x00, 0x20, 0x08, 0x06, 0xd7, 0x88, 0xb8, 0x87, 0x06, 0x0f, 0xc1,
  0x88, 0x01, 0x02, 0x80, 0x20, 0x18, 0x5c, 0x24, 0xf2, 0x1e, 0x9a, 0x2f,
  0x04, 0xd6, 0x91, 0x84, 0x7c, 0x46, 0x0c, 0x10, 0x00, 0x04, 0xc1, 0xe0,
  0x32, 0x91, 0xf8, 0xe8, 0xe4, 0x21, 0x18, 0x31, 0x40, 0x00, 0x10, 0x04,
  0x83, 0xeb, 0x44, 0xe4, 0xa3, 0x03, 0x87, 0xc0, 0xc0, 0xc0, 0x24, 0xe4,
  0x33, 0x62, 0x80, 0x00, 0x20, 0x08, 0x06, 0x57, 0x8a, 0xd0, 0x07, 0x18,
  0xd0, 0x43, 0x30, 0x62, 0x80, 0x00, 0x20, 0x08, 0x06, 0x97, 0x8a, 0xd4,
  0x07, 0x18, 0x88, 0x43, 0x30, 0x9a, 0x40, 0x07, 0xc0, 0x68, 0x42, 0x1d,
  0x04, 0xa3, 0x09, 0x76, 0x20, 0xd8, 0xa0, 0xc8, 0xc7, 0x06, 0x44, 0x3e,
  0x36, 0x18, 0xf2, 0x19, 0x31, 0x38, 0x00, 0x10, 0x04, 0x83, 0x4a, 0x46,
  0xf6, 0x63, 0x3c, 0xd2, 0x63, 0x34, 0x21, 0x00, 0x46, 0x13, 0x84, 0x60,
  0x34, 0x61, 0x10, 0x46, 0x13, 0x88, 0x61, 0xc4, 0xe0, 0x00, 0x40, 0x10,
  0x0c, 0xaa, 0x1b, 0x01, 0x11, 0xf4, 0xc8, 0x8f, 0xd1, 0x84, 0x00, 0x18,
  0x4d, 0x10, 0x82, 0xd1, 0x84, 0x41, 0x18, 0x4d, 0x20, 0x86, 0x11, 0x83,
  0x03, 0x00, 0x41, 0x30, 0xa8, 0x78, 0xa4, 0x44, 0xda, 0x43, 0x3e, 0x46,
  0x13, 0x02, 0x60, 0x34, 0x41, 0x08, 0x46, 0x13, 0x06, 0x61, 0x34, 0x81,
  0x18, 0x46, 0x0c, 0x0e, 0x00, 0x04, 0xc1, 0xa0, 0x0a, 0x13, 0x15, 0x91,
  0x0f, 0x13, 0x19, 0x4d, 0x08, 0x80, 0xd1, 0x04, 0x21, 0x18, 0x4d, 0x18,
  0x84, 0xd1, 0x04, 0x62, 0xb0, 0x69, 0x3e, 0xe4, 0x33, 0x62, 0x80, 0x00,
  0x20, 0x08, 0x06, 0x97, 0x99, 0xc4, 0xc8, 0x7c, 0x4c, 0xc1, 0x88, 0x01,
  0x02, 0x80, 0x20, 0x18, 0x5c, 0x67, 0x22, 0x23, 0xf3, 0x31, 0x05, 0x23,
  0x06, 0x08, 0x00, 0x82, 0x60, 0x70, 0xa1, 0xc9, 0x8c, 0xcc, 0xc7, 0x14,
  0x98, 0x74, 0x1f, 0xf2, 0x19, 0x31, 0x40, 0x00, 0x10, 0x04, 0x83, 0x4b,
  0x4d, 0x6a, 0xe4, 0x3e, 0xa4, 0x60, 0xc4, 0x00, 0x01, 0x40, 0x10, 0x0c,
  0xae, 0x35, 0xb1, 0x91, 0xfb, 0x90, 0x82, 0x11, 0x03, 0x04, 0x00, 0x41,
  0x30, 0xb8, 0xd8, 0xe4, 0x46, 0xee, 0x43, 0x0a, 0x2c, 0xda, 0x0f, 0xf9,
  0x8c, 0x18, 0x20, 0x00, 0x08, 0x82, 0xc1, 0xe5, 0x26, 0x39, 0xb2, 0x1f,
  0x51, 0x30, 0x62, 0x80, 0x00, 0x20, 0x08, 0x06, 0xd7, 0x9b, 0xe8, 0xc8,
  0x7e, 0x44, 0xc1, 0x88, 0x01, 0x02, 0x80, 0x20, 0x18, 0x5c, 0x70, 0xb2,
  0x23, 0xfb, 0x11, 0x05, 0x06, 0xfd, 0x87, 0x7c, 0x46, 0x0c, 0x10, 0x00,
  0x04, 0xc1, 0xe0, 0x92, 0x93, 0x1e, 0xf9, 0x0f, 0x28, 0x18, 0x31, 0x40,
  0x00, 0x10, 0x04, 0x83, 0x6b, 0x4e, 0x7c, 0xe4, 0x3f, 0xa0, 0x60, 0xc4,
  0x00, 0x01, 0x40, 0x10, 0x0c, 0x2e, 0x3a, 0xf9, 0x91, 0xff, 0x80, 0x82,
  0xd1, 0x84, 0x50, 0x18, 0x46, 0x0c, 0x0e, 0x00, 0x04, 0xc1, 0xa0, 0xba,
  0x13, 0x30, 0x41, 0x11, 0x16, 0x19, 0x4d, 0x08, 0x80, 0xd1, 0x04, 0x21,
  0x18, 0x4d, 0x18, 0x84, 0xd1, 0x04, 0x62, 0x18, 0x31, 0x68, 0x00, 0x10,
  0x04, 0x03, 0xa8, 0x4f, 0xce, 0x24, 0x45, 0x50, 0xe4, 0x44, 0x4c, 0x84,
  0x18, 0x84, 0x60, 0xc4, 0xc0, 0x00, 0x40, 0x10, 0x0c, 0x18, 0x50, 0x99,
  0x93, 0x60, 0xc4, 0x20, 0x01, 0x40, 0x10, 0x0c, 0x90, 0x51, 0x31, 0x13,
  0x3d, 0xd1, 0x93, 0x38, 0xf1, 0x83, 0x11, 0x83, 0x04, 0x00, 0x41, 0x30,
  0x40, 0x46, 0xc5, 0x4c, 0xf4, 0x44, 0x4f, 0xd4, 0xa4, 0x0f, 0x46, 0x0c,
  0x12, 0x00, 0x04, 0xc1, 0x00, 0x19, 0x15, 0x33, 0xd1, 0x13, 0x3d, 0x71,
  0x13, 0x3e, 0x18, 0x31, 0x48, 0x00, 0x10, 0x04, 0x03, 0x64, 0x54, 0xcc,
  0x44, 0x4f, 0xf4, 0xe4, 0x4d, 0x90, 0x11, 0x83, 0x04, 0x00, 0x41, 0x30,
  0x40, 0x46, 0xc5, 0x4c, 0xf6, 0x44, 0x4f, 0xe2, 0xe4, 0x0d, 0x46, 0x0c,
  0x12, 0x00, 0x04, 0xc1, 0x00, 0x19, 0x15, 0x33, 0xd9, 0x13, 0x3d, 0x51,
  0x13, 0x37, 0x18, 0x31, 0x48, 0x00, 0x10, 0x04, 0x03, 0x64, 0x54, 0xcc,
  0x64, 0x4f, 0xf4, 0xc4, 0x4d, 0xda, 0x60, 0xc4, 0x20, 0x01, 0x40, 0x10,
  0x0c, 0x90, 0x51, 0x31, 0x93, 0x3d, 0xd1, 0x93, 0x37, 0x09, 0x46, 0x0c,
  0x12, 0x00, 0x04, 0xc1, 0x00, 0x19, 0x15, 0x33, 0x99, 0x13, 0x3d, 0x89,
  0x93, 0x6a, 0xc4, 0x20, 0x01, 0x40, 0x10, 0x0c, 0x90, 0x51, 0x31, 0x93,
  0x39, 0xd1, 0x13, 0x35, 0x89, 0x46, 0x0c, 0x12, 0x00, 0x04, 0xc1, 0x00,
  0x19, 0x15, 0x33, 0x99, 0x13, 0x3d, 0x71, 0x93, 0x66, 0xc4, 0x20, 0x01,
  0x40, 0x10, 0x0c, 0x90, 0x51, 0x31, 0x93, 0x39, 0xd1, 0x93, 0x37, 0x49,
  0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1e, 0xa8, 0xbb, 0x64,
  0xf2, 0x63, 0x9e, 0x72, 0x4a, 0x12, 0x91, 0x2b, 0x83, 0x39, 0xad, 0x4b,
  0x17, 0x00, 0x01, 0x00, 0x20, 0x60, 0x18, 0x00, 0x78, 0x01, 0xed, 0x99,
  0xcd, 0x8b, 0x1c, 0x55, 0x10, 0xc0, 0xab, 0x5f, 0xbf, 0xe9, 0xe9, 0xee,
  0xa9, 0xa9, 0xe9, 0x79, 0xdb, 0xf3, 0xa6, 0x67, 0xd2, 0xc9, 0xcc, 0x4e,
  0x26, 0x9b, 0xfd, 0x50, 0x59, 0x41, 0x25, 0x09, 0x9b, 0xb8, 0x6a, 0x02,
  0xea, 0x26, 0x19, 0x0d, 0x8c, 0x07, 0x71, 0x41, 0x48, 0x3c, 0x1b, 0xc4,
  0x83, 0x07, 0x69, 0x7b, 0x14, 0x34, 0x88, 0x1e, 0x04, 0xbd, 0xea, 0x65,
  0xc1, 0x0f, 0xe2, 0x1f, 0x20, 0xc2, 0x46, 0xb3, 0xe2, 0xd5, 0xb0, 0x84,
  0x28, 0x9e, 0xfc, 0x17, 0xcc, 0x29, 0x07, 0x61, 0xad, 0x9a, 0x9d, 0xd1,
  0xb0, 0xd9, 0x5c, 0x15, 0xa5, 0x7f, 0x50, 0x55, 0xef, 0xd5, 0x7b, 0xbc,
  0xae, 0xae, 0x57, 0x7d, 0xa9, 0x7e, 0x39, 0x81, 0x31, 0xdf, 0x7c, 0xfe,
  0xfa, 0x8f, 0x62, 0x7f, 0xfb, 0xfd, 0x46, 0xef, 0x4a, 0x0d, 0xa0, 0x24,
  0x13, 0x46, 0x8b, 0x62, 0x2e, 0xc7, 0xa2, 0x01, 0xfe, 0x68, 0x8a, 0xfe,
  0x7b, 0x5d, 0xb0, 0x2c, 0x2f, 0xb2, 0x08, 0xab, 0xa2, 0x26, 0x38, 0xa2,
  0x00, 0x4e, 0xb1, 0x3c, 0xce, 0x72, 0x0f, 0x65, 0x96, 0xcf, 0x58, 0x3e,
  0x66, 0x11, 0x2a, 0xa2, 0x26, 0xf8, 0xa2, 0xf6, 0xc1, 0x15, 0xb5, 0x07,
  0xc5, 0x22, 0xcf, 0x12, 0xbb, 0x97, 0xa5, 0x5e, 0xbe, 0xc2, 0xe6, 0x34,
  0x0b, 0x9c, 0xf8, 0xe5, 0xab, 0x93, 0x62, 0xdf, 0x70, 0xcf, 0x89, 0x0f,
  0x7e, 0x7d, 0xf5, 0xe2, 0xbe, 0x71, 0xfd, 0x97, 0x99, 0xde, 0x93, 0xb0,
  0xb2, 0x4f, 0xb2, 0xa6, 0x39, 0xba, 0x3a, 0xb9, 0xc7, 0xe9, 0xfc, 0xe6,
  0x64, 0x3e, 0xbd, 0xcb, 0xef, 0x58, 0x26, 0xf7, 0x77, 0x0f, 0x3b, 0x8c,
  0xd8, 0xfd, 0x90, 0xf3, 0x3c, 0x18, 0x2c, 0x7b, 0xce, 0x7b, 0x5d, 0x1e,
  0xfe, 0x2b, 0xec, 0xc6, 0xb0, 0x8b, 0xe7, 0xdc, 0xef, 0x2d, 0xfe, 0xdf,
  0x48, 0x0e, 0x42, 0x16, 0x41, 0xc6, 0xd3, 0xef, 0x58, 0xb8, 0xdf, 0xb7,
  0x55, 0x50, 0x50, 0x50, 0x50, 0x50, 0x50, 0x50, 0x50, 0x50, 0x50, 0x50,
  0x50, 0x50, 0x50, 0x50, 0xf0, 0x8f, 0x32, 0x9b, 0x6f, 0xea, 0x9d, 0xe1,
  0x15, 0x80, 0x08, 0x5c, 0xf7, 0xe6, 0xe6, 0xf7, 0xee, 0xad, 0xcd, 0x1d,
  0xf7, 0xe7, 0xcd, 0xab, 0x03, 0x05, 0x30, 0x0c, 0xb7, 0xa2, 0x61, 0x6f,
  0xab, 0x3b, 0x34, 0x5b, 0xcb, 0xc3, 0xfc, 0xfa, 0xb1, 0xa1, 0xda, 0x3a,
  0x3b, 0x6c, 0x6f, 0x5d, 0x86, 0x0f, 0xae, 0xa1, 0xaf, 0xc8, 0xf7, 0x81,
  0xaa, 0xa1, 0xc2, 0x20, 0x04, 0x24, 0x54, 0x18, 0xf9, 0x9a, 0x8e, 0x45,
  0x09, 0x3d, 0x12, 0x59, 0x0a, 0x11, 0xb0, 0x46, 0x0a, 0xeb, 0xa1, 0xc6,
  0xe3, 0x26, 0xc1, 0x0a, 0x01, 0x1a, 0xd4, 0xf8, 0xa8, 0xb1, 0xb8, 0x12,
  0x45, 0xe4, 0x28, 0xe5, 0x9f, 0x88, 0x13, 0x3c, 0x69, 0x22, 0x9c, 0x21,
  0x8d, 0x1c, 0x89, 0xef, 0xb8, 0x1e, 0x3d, 0x16, 0x5b, 0xc4, 0x96, 0x21,
  0xa5, 0xb5, 0x0f, 0x8e, 0x87, 0xa7, 0xe2, 0x08, 0x2b, 0x4d, 0x83, 0xaa,
  0xe4, 0xa1, 0x5f, 0x37, 0xe8, 0xae, 0x7b, 0x59, 0xb0, 0x6e, 0xb2, 0x08,
  0xf2, 0x6d, 0xa7, 0x6c, 0x47, 0x41, 0x33, 0xa6, 0xa0, 0x65, 0x09, 0xc7,
  0xf3, 0x77, 0xf3, 0xa0, 0x1e, 0x51, 0xc0, 0x63, 0x28, 0xbf, 0x9d, 0x63,
  0x2b, 0xa5, 0x60, 0x26, 0xc5, 0x2a, 0xcf, 0x55, 0xf9, 0xfd, 0xbc, 0x7a,
  0x20, 0xc5, 0xda, 0x78, 0xcd, 0x8c, 0xa2, 0xd9, 0x3e, 0x39, 0x3c, 0x76,
  0xca, 0x73, 0x23, 0x5a, 0x4f, 0xb3, 0x3a, 0x8f, 0x55, 0xb9, 0x3d, 0xaa,
  0x75, 0xfa, 0x1c, 0x8b, 0xec, 0xe9, 0x8d, 0xd4, 0xd8, 0xb7, 0x38, 0x92,
  0xb8, 0x24, 0x96, 0xfa, 0xe1, 0x3e, 0x9a, 0xf5, 0x7e, 0x26, 0xb1, 0x8c,
  0xe3, 0x68, 0x18, 0xea, 0xc6, 0x73, 0x44, 0xad, 0x84, 0x82, 0x83, 0x86,
  0x66, 0x78, 0xff, 0xac, 0x3d, 0xbf, 0x71, 0x3a, 0x9e, 0x27, 0xe4, 0x98,
  0x6b, 0x8d, 0x84, 0x62, 0xf6, 0x9d, 0xb1, 0x17, 0x36, 0x9e, 0x8e, 0x17,
  0x09, 0x1a, 0x40, 0x74, 0xa0, 0xcd, 0xfb, 0x70, 0xdb, 0x3f, 0x03, 0xab,
  0x66, 0xb6, 0x4b, 0x78, 0x24, 0xa1, 0x06, 0xef, 0x79, 0xc6, 0xbe, 0xb0,
  0x51, 0xe5, 0xf7, 0x8b, 0x65, 0xed, 0x43, 0x5e, 0x3b, 0xdc, 0xa3, 0xa8,
  0x99, 0xa0, 0xeb, 0x2a, 0x82, 0x32, 0x50, 0x3e, 0xe7, 0xbf, 0x59, 0xaf,
  0x27, 0xd8, 0x90, 0xf5, 0x4f, 0x60, 0xd5, 0x69, 0x02, 0xba, 0x25, 0x4d,
  0x9c, 0xb6, 0x1b, 0xf9, 0xbc, 0x92, 0x1e, 0xe2, 0xf6, 0x6d, 0xf8, 0xd2,
  0xc9, 0x8d, 0xe9, 0xaa, 0x3a, 0xa0, 0x12, 0xff, 0xa2, 0x92, 0x9e, 0x14,
  0xfb, 0x1d, 0x70, 0x8e, 0x72, 0x5e, 0xf8, 0xac, 0x3c, 0x49, 0xba, 0xee,
  0xd8, 0xc7, 0x59, 0x02, 0xe8, 0x3a, 0x03, 0x95, 0xa9, 0x85, 0x98, 0x50,
  0xce, 0xe2, 0xe7, 0xa8, 0x81, 0xce, 0x60, 0x00, 0x59, 0x47, 0x29, 0x72,
  0xd6, 0x54, 0xd6, 0xd1, 0x9a, 0x3a, 0xc0, 0xfe, 0x35, 0xf6, 0xaf, 0x41,
  0x76, 0x2e, 0x32, 0xe4, 0x2e, 0x59, 0x3a, 0x1b, 0x79, 0x74, 0x9e, 0xef,
  0xf1, 0xa5, 0xe1, 0x0f, 0xd7, 0x2f, 0x71, 0x6d, 0x3c, 0x17, 0x7b, 0xf8,
  0x7c, 0x6c, 0xf0, 0x02, 0xdf, 0x97, 0x73, 0x54, 0x51, 0xdf, 0x7a, 0x78,
  0xc4, 0x1a, 0x9c, 0xb3, 0x11, 0xaa, 0x05, 0x4d, 0xf3, 0xca, 0xd2, 0x82,
  0x4a, 0x68, 0x91, 0xcf, 0x85, 0x25, 0xa0, 0x07, 0xb4, 0xc5, 0x07, 0x75,
  0x82, 0xcb, 0x60, 0xf1, 0x61, 0x48, 0xf0, 0x21, 0xad, 0x76, 0xf3, 0xfe,
  0x8a, 0xd6, 0x6f, 0x8d, 0xeb, 0xab, 0x4d, 0xe0, 0xa7, 0x94, 0x5a, 0x45,
  0xab, 0xbe, 0xa5, 0x83, 0x89, 0xe6, 0x7a, 0x4b, 0xe8, 0x89, 0xd0, 0x72,
  0xbd, 0x25, 0x58, 0x0d, 0xdb, 0xe8, 0x84, 0x29, 0x3e, 0x89, 0x16, 0x43,
  0x4c, 0xb8, 0xfe, 0xda, 0x5c, 0x81, 0x29, 0x3e, 0x45, 0x96, 0x6b, 0x2d,
  0xe1, 0xda, 0x6b, 0xa3, 0x4b, 0x29, 0x96, 0xc2, 0x90, 0x7e, 0xf2, 0xe1,
  0x4e, 0x05, 0xab, 0x54, 0x26, 0xa2, 0xd8, 0xf3, 0xa8, 0x61, 0x0c, 0x59,
  0x8e, 0x5d, 0xf3, 0xf3, 0x74, 0x10, 0xeb, 0x12, 0x5b, 0xaf, 0x9a, 0xea,
  0xa6, 0x8a, 0xb3, 0xc4, 0xf3, 0xbc, 0x96, 0x31, 0x5e, 0x3b, 0x8a, 0xbc,
  0x43, 0xfc, 0xde, 0xda, 0xf7, 0xb6, 0x75, 0x45, 0x41, 0x4d, 0xc1, 0x1d,
  0x37, 0xf0, 0xc3, 0x0e, 0x5b, 0x47, 0x49, 0x9b, 0x6f, 0x74, 0xad, 0xc1,
  0x45, 0x2b, 0x89, 0xbf, 0x9b, 0x48, 0xd4, 0x1e, 0x5f, 0x5b, 0x94, 0x72,
  0x65, 0xed, 0xaf, 0xb6, 0x3d, 0xdf, 0x0b, 0x80, 0x1e, 0x37, 0x8e, 0xef,
  0x6e, 0xe5, 0x8f, 0x89, 0x27, 0xff, 0x0a, 0xfa, 0x2c, 0x01, 0x8b, 0x33,
  0xe9, 0xc6, 0xcb, 0x39, 0x7a, 0xd2, 0x71, 0x3d, 0xf4, 0xc5, 0xb7, 0x97,
  0x6e, 0x5f, 0xfc, 0xf4, 0xb5, 0x67, 0xcd, 0x47, 0x4b, 0xef, 0x1c, 0xff,
  0x7a, 0xed, 0x4f, 0xf2, 0xeb, 0x9e, 0xc6, 0x00, 0x17, 0x00, 0x01, 0x00,
  0x10, 0x2c, 0x19, 0x00, 0x78, 0x01, 0xed, 0x99, 0x4f, 0x6f, 0x1b, 0x55,
  0x10, 0xc0, 0xe7, 0xbd, 0x7d, 0x5e, 0xbf, 0xac, 0x27, 0xe3, 0xdd, 0xf5,
  0x7a, 0xbd, 0x76, 0x1d, 0xb3, 0x29, 0x6e, 0xeb, 0x8a, 0x20, 0xa5, 0x49,
  0x5b, 0xd2, 0x92, 0xa5, 0x16, 0x50, 0x45, 0x22, 0x48, 0x81, 0x22, 0x0e,
  0x08, 0x7c, 0x29, 0x15, 0x12, 0x20, 0xa4, 0x50, 0x04, 0x07, 0x14, 0x99,
  0x2d, 0x48, 0x50, 0xa1, 0x0a, 0x81, 0xc4, 0x85, 0x0b, 0x70, 0xc8, 0x01,
  0x24, 0xf8, 0x02, 0xfc, 0x71, 0xda, 0xe4, 0xc2, 0x01, 0x09, 0xf0, 0x11,
  0x2e, 0xf9, 0x0a, 0xf4, 0x0b, 0x84, 0x79, 0x9b, 0x35, 0x2a, 0x21, 0x12,
  0x5c, 0x10, 0x42, 0xec, 0x4f, 0x9a, 0x99, 0xb7, 0x33, 0xef, 0xdf, 0xbc,
  0xb1, 0x2f, 0xef, 0xcd, 0x35, 0x21, 0xe3, 0xdb, 0xf7, 0x06, 0x3f, 0x19,
  0xbb, 0xfb, 0xeb, 0x8f, 0x47, 0xaf, 0x57, 0x01, 0x4a, 0xe6, 0x83, 0x91,
  0x46, 0x31, 0xeb, 0x81, 0xd1, 0x00, 0xdf, 0x45, 0x46, 0x03, 0x94, 0x8d,
  0xca, 0xa9, 0xb3, 0x3c, 0xc8, 0x62, 0xe8, 0x1b, 0x95, 0x23, 0x58, 0x16,
  0x17, 0x17, 0x1f, 0x60, 0xb9, 0xc0, 0xcd, 0x3f, 0x31, 0xc5, 0xf2, 0x09,
  0xcb, 0x87, 0x2c, 0x86, 0x8a, 0x51, 0x39, 0x26, 0x86, 0xb9, 0xfc, 0x15,
  0x16, 0x8b, 0x59, 0xcb, 0xd8, 0x83, 0xfc, 0xbc, 0xf2, 0xd1, 0x32, 0x9b,
  0x87, 0x59, 0xe0, 0x87, 0x5f, 0x76, 0x12, 0x63, 0x27, 0xac, 0x7c, 0x75,
  0xf9, 0xd0, 0x7d, 0xfd, 0x97, 0x99, 0xd4, 0xc9, 0xb0, 0x7b, 0xc8, 0x81,
  0x28, 0xa3, 0x98, 0xc7, 0xf2, 0x3a, 0x4e, 0xea, 0xfb, 0x69, 0xfe, 0x3d,
  0xa9, 0xe5, 0x4d, 0x16, 0x73, 0xa6, 0x87, 0xb1, 0xc7, 0x18, 0x7b, 0x18,
  0x66, 0x3e, 0x1b, 0xd6, 0xe6, 0x6d, 0xf1, 0x4e, 0xcc, 0xcd, 0x7f, 0x05,
  0x93, 0xb6, 0xcd, 0x62, 0xb0, 0x45, 0x9e, 0x85, 0x9c, 0x64, 0xfa, 0xff,
  0xc0, 0x9c, 0x81, 0xc3, 0x32, 0x61, 0x52, 0x77, 0xc3, 0xdf, 0xfd, 0x5f,
  0x15, 0x14, 0x14, 0x14, 0x14, 0x14, 0x14, 0x14, 0x14, 0x14, 0x14, 0x14,
  0x14, 0x14, 0x14, 0x14, 0xfc, 0xa3, 0xcc, 0xa6, 0xa3, 0x3d, 0x6b, 0x6b,
  0xf4, 0xc5, 0x9a, 0x84, 0x5b, 0xd6, 0x68, 0x64, 0x59, 0xdf, 0x8c, 0xd4,
  0x5e, 0x72, 0x1d, 0xc0, 0x85, 0xf9, 0xe4, 0xc6, 0xf6, 0x52, 0xa2, 0x76,
  0x1e, 0x4d, 0xc2, 0x9d, 0xd4, 0xba, 0x36, 0x72, 0x13, 0xda, 0x59, 0x87,
  0x1b, 0x5b, 0xae, 0x06, 0xf2, 0x1c, 0x40, 0xd4, 0x92, 0xa6, 0x1d, 0x89,
  0x3e, 0x02, 0x06, 0x5a, 0x51, 0xdd, 0x51, 0x48, 0x28, 0xb1, 0x46, 0x80,
  0x21, 0x2a, 0xac, 0x92, 0xc4, 0x26, 0x80, 0x6e, 0x90, 0xc2, 0x48, 0x4a,
  0x0d, 0xc2, 0xa6, 0x96, 0x52, 0x5a, 0x58, 0x36, 0xca, 0x92, 0x8d, 0x90,
  0xd8, 0x3b, 0xd6, 0xc0, 0x1e, 0xce, 0xbb, 0x21, 0xcd, 0xb9, 0x11, 0x9d,
  0xf2, 0x43, 0x3c, 0xed, 0xba, 0x74, 0xaf, 0x1f, 0xe1, 0x42, 0x10, 0xe2,
  0x19, 0xdf, 0xc5, 0x29, 0x48, 0xc7, 0xce, 0x60, 0x5e, 0x55, 0x1a, 0x11,
  0x69, 0x91, 0xde, 0x3c, 0x1b, 0xb0, 0xaf, 0x16, 0xe1, 0x1b, 0xbc, 0x0f,
  0x87, 0x63, 0x50, 0x7e, 0x2e, 0xd5, 0x5e, 0x84, 0xd3, 0x59, 0xfb, 0xb5,
  0x94, 0xd8, 0x8a, 0xf2, 0xe5, 0xd4, 0xa9, 0x77, 0x08, 0x07, 0xd1, 0x10,
  0x32, 0xff, 0xdb, 0xa9, 0x97, 0xf9, 0xaf, 0xa6, 0xd3, 0x47, 0xba, 0x44,
  0x33, 0x1d, 0x74, 0xf9, 0x5b, 0x96, 0x5f, 0x48, 0xdd, 0xd9, 0x0e, 0xd6,
  0xb2, 0xf6, 0xeb, 0xa9, 0x77, 0x77, 0x17, 0x05, 0xb7, 0x45, 0xf9, 0xcd,
  0x14, 0x44, 0x8f, 0xaa, 0x83, 0xce, 0x50, 0x58, 0x3d, 0xac, 0x9d, 0xe8,
  0xa2, 0xcc, 0xfa, 0xbc, 0x9b, 0xfa, 0xbc, 0x5f, 0xdf, 0xb4, 0x4b, 0x97,
  0x14, 0xd6, 0x7c, 0xf2, 0x07, 0xdd, 0x21, 0xd5, 0xda, 0x84, 0x8d, 0x90,
  0x22, 0xbf, 0x47, 0xe8, 0xb9, 0x14, 0x70, 0xbc, 0x19, 0x5e, 0xda, 0x6c,
  0xfb, 0x11, 0x79, 0xb5, 0xa3, 0x44, 0x77, 0xb5, 0xa9, 0x5a, 0x0f, 0x48,
  0xd4, 0x24, 0x21, 0xc7, 0x66, 0xc2, 0x85, 0xcd, 0xd8, 0xf7, 0xb9, 0x1f,
  0x8e, 0xf5, 0x19, 0xe8, 0x9b, 0x3c, 0x9c, 0xc6, 0x79, 0x55, 0x9d, 0xed,
  0x90, 0x57, 0x6e, 0x93, 0x75, 0xa4, 0x45, 0x26, 0xef, 0xd9, 0xf0, 0xf8,
  0x26, 0x1f, 0xed, 0x58, 0x27, 0xd0, 0x17, 0xc7, 0x24, 0xf9, 0x02, 0xc8,
  0x3a, 0x61, 0x53, 0xda, 0xd3, 0x1b, 0x26, 0xdf, 0x69, 0x33, 0xc6, 0x0b,
  0xf8, 0x8c, 0xb8, 0xcf, 0x45, 0xe8, 0x13, 0xc0, 0xf8, 0x36, 0x7c, 0x2e,
  0xb2, 0x9c, 0x1b, 0xb6, 0x32, 0xb9, 0x58, 0xde, 0x59, 0xe5, 0x97, 0x14,
  0xa5, 0x91, 0xde, 0x48, 0x03, 0x3b, 0x7e, 0x26, 0xf9, 0x7e, 0x5b, 0x7a,
  0x80, 0xd6, 0x8c, 0xa2, 0x25, 0x1d, 0x50, 0x25, 0x1f, 0x93, 0x4a, 0x19,
  0xa7, 0xbe, 0xde, 0xb0, 0x78, 0x4c, 0xe9, 0x95, 0x9e, 0x12, 0x0d, 0x49,
  0x72, 0x4d, 0x0d, 0xaf, 0x24, 0xef, 0x6f, 0x3b, 0x93, 0x3e, 0x00, 0x31,
  0xd4, 0x81, 0xce, 0xa3, 0x8d, 0x62, 0x4d, 0x0e, 0xef, 0x27, 0xae, 0xe1,
  0x1a, 0x0c, 0x63, 0xfe, 0x7d, 0x98, 0x7a, 0x44, 0xda, 0xa5, 0xa6, 0xe3,
  0x62, 0x5b, 0xb7, 0xa8, 0xa1, 0x14, 0xd1, 0xc9, 0x36, 0xc9, 0x55, 0x35,
  0x6c, 0x48, 0x49, 0x2d, 0x74, 0x71, 0xc6, 0x69, 0x61, 0xac, 0x3b, 0x54,
  0x69, 0x86, 0xd4, 0x6d, 0xc7, 0x24, 0x56, 0xe5, 0xb0, 0x01, 0x40, 0x71,
  0x7f, 0x7d, 0x17, 0xac, 0x7e, 0xc9, 0xac, 0x5d, 0xbe, 0x2f, 0x56, 0x9a,
  0xad, 0x9d, 0x9c, 0x56, 0x26, 0xc7, 0xd2, 0x43, 0xcb, 0xaa, 0xca, 0xb6,
  0xf2, 0x78, 0x5f, 0x1d, 0xe3, 0x31, 0x4e, 0x2d, 0x20, 0x58, 0x85, 0x61,
  0xf7, 0xce, 0x31, 0x17, 0xf2, 0x31, 0x17, 0xf7, 0xc7, 0x38, 0x4f, 0xe5,
  0x63, 0x9e, 0xe8, 0xab, 0xe3, 0xed, 0x36, 0xf5, 0xee, 0xec, 0xbb, 0x12,
  0x2b, 0x6c, 0xb9, 0x94, 0xf5, 0x7b, 0x7a, 0x59, 0x55, 0xd8, 0x56, 0x9e,
  0x5c, 0x52, 0x73, 0x79, 0x1f, 0xd7, 0xb5, 0xed, 0x69, 0x8e, 0x67, 0x35,
  0x19, 0xcc, 0x29, 0x79, 0x52, 0x11, 0xe4, 0x31, 0x8f, 0x63, 0x14, 0xb8,
  0x24, 0x9a, 0x92, 0xe6, 0x55, 0x40, 0x2a, 0xf7, 0xfb, 0xec, 0x37, 0xeb,
  0x8b, 0xe7, 0x7b, 0x0a, 0x6a, 0x40, 0xa7, 0x94, 0x4f, 0x0b, 0x9c, 0xbf,
  0xce, 0xe3, 0x66, 0x5d, 0x78, 0x79, 0x7f, 0x8f, 0xe2, 0xc5, 0x6e, 0x56,
  0x17, 0xf1, 0x92, 0x56, 0x53, 0x8e, 0xa2, 0x0a, 0x39, 0x54, 0x95, 0xc1,
  0xf0, 0x1c, 0xb8, 0x98, 0xd5, 0xed, 0x55, 0xa5, 0x02, 0x5e, 0xc6, 0xf4,
  0xb1, 0xeb, 0x81, 0xd2, 0x5a, 0x21, 0x9a, 0x79, 0x1c, 0xde, 0x5b, 0x3e,
  0x5f, 0xdd, 0xb5, 0x29, 0xe4, 0x73, 0x13, 0xda, 0x1e, 0x4b, 0x4b, 0x42,
  0x90, 0xfb, 0x23, 0x63, 0xa1, 0x5f, 0x6a, 0x1b, 0x2b, 0xfa, 0x25, 0x80,
  0x6b, 0x5b, 0xe6, 0x9e, 0xf9, 0xe0, 0x05, 0x73, 0xf6, 0x14, 0x71, 0xc0,
  0x97, 0x5d, 0x4b, 0x1f, 0xf0, 0xb9, 0x46, 0x1d, 0xf0, 0xb5, 0x8c, 0x92,
  0x96, 0x89, 0xfd, 0xfe, 0x04, 0x91, 0xdd, 0xf8, 0x2a, 0x73, 0x13, 0xfa,
  0x87, 0x67, 0x89, 0x8c, 0xdd, 0xfc, 0xbe, 0xbb, 0xcb, 0x62, 0xde, 0x1a,
  0x44, 0x76, 0x63, 0xba, 0x3f, 0x8f, 0xca, 0x6f, 0x8f, 0x3b, 0x9f, 0x7d,
  0x7d, 0xe5, 0xf6, 0xb3, 0x1f, 0x5f, 0x7d, 0xc4, 0xff, 0xe0, 0x9e, 0xb7,
  0xce, 0x7d, 0xb9, 0xfa, 0x1b, 0x78, 0xe8, 0xda, 0x8f, 0x00, 0x00, 0x00,
  0x17, 0x00, 0x01, 0x00, 0x00, 0x90, 0x18, 0x00, 0x78, 0x01, 0xed, 0x98,
  0x31, 0x6f, 0x1c, 0x55, 0x10, 0x80, 0x67, 0xf7, 0xcd, 0xbd, 0xdb, 0x5b,
  0xcf, 0xcd, 0xbd, 0x5d, 0xef, 0xed, 0xdd, 0x39, 0xf6, 0xdd, 0xd9, 0x89,
  0x13, 0x4e, 0x3e, 0x1f, 0xa6, 0x08, 0x32, 0x12, 0x01, 0x0b, 0x45, 0x48,
  0xc4, 0xa0, 0xeb, 0x51, 0x5c, 0x04, 0x02, 0x05, 0x42, 0x28, 0x4a, 0x41,
  0x81, 0xac, 0x65, 0x11, 0x05, 0x2e, 0x52, 0x40, 0x81, 0x44, 0x85, 0x52,
  0xb8, 0x48, 0x80, 0xfc, 0x02, 0x24, 0x87, 0xd8, 0x34, 0x74, 0xe0, 0x02,
  0x09, 0x89, 0x22, 0x3f, 0x01, 0x22, 0xd1, 0x21, 0x39, 0x33, 0x9b, 0x73,
  0x30, 0xc6, 0xd4, 0x11, 0x62, 0xbf, 0xd3, 0xcc, 0xec, 0x9b, 0xf7, 0xde,
  0xcc, 0x9b, 0xf7, 0x74, 0xcd, 0x7c, 0xda, 0x86, 0x82, 0x1f, 0x7a, 0xf7,
  0x97, 0xd5, 0xde, 0xff, 0xfd, 0xc7, 0x85, 0xad, 0x06, 0x40, 0x45, 0x07,
  0x47, 0xb8, 0x96, 0xa8, 0x06, 0x18, 0x4e, 0xd6, 0x87, 0xaa, 0x26, 0xa8,
  0x6b, 0x24, 0xa2, 0xac, 0xa9, 0x9a, 0xe0, 0xa9, 0x82, 0xfc, 0x05, 0x91,
  0x17, 0xf5, 0xeb, 0x38, 0x53, 0x22, 0x37, 0x45, 0x3e, 0x17, 0x51, 0x74,
  0x7c, 0x48, 0xa0, 0xea, 0x08, 0x46, 0xd5, 0xbf, 0xa0, 0x67, 0xd5, 0x5c,
  0xc7, 0xcf, 0xac, 0xdc, 0xf9, 0xe3, 0xe6, 0xf3, 0x62, 0x2e, 0x8a, 0xc0,
  0x5b, 0xef, 0xdd, 0xbe, 0xf0, 0xc5, 0x62, 0xa6, 0xe3, 0x82, 0xdf, 0x7e,
  0xba, 0x72, 0xe2, 0xb9, 0xfe, 0xcb, 0x1c, 0xbe, 0x93, 0xf2, 0xee, 0x09,
  0x97, 0xe6, 0xab, 0x12, 0x7e, 0x6d, 0xa9, 0xfe, 0x6b, 0x8c, 0x93, 0x77,
  0x3d, 0x7c, 0xcb, 0xef, 0x44, 0x1e, 0xbd, 0xdf, 0x3f, 0x39, 0x10, 0xd4,
  0x9e, 0x84, 0xc6, 0xb3, 0x30, 0x5e, 0xb1, 0xde, 0x27, 0x7d, 0xf9, 0x7c,
  0x22, 0x68, 0xd9, 0x56, 0x44, 0xb1, 0xde, 0xa4, 0x0a, 0xff, 0xb0, 0xd2,
  0xff, 0x07, 0x7a, 0x07, 0x47, 0xff, 0xa3, 0xa8, 0x4a, 0xd0, 0xdb, 0x20,
  0x11, 0x65, 0x45, 0x55, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49,
  0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0xc9, 0x93, 0x62, 0x3e, 0xdf,
  0xc1, 0x83, 0xc1, 0x16, 0x80, 0x03, 0x63, 0x6e, 0xed, 0xdc, 0x33, 0x5f,
  0xed, 0x1c, 0x98, 0xaf, 0x77, 0xbe, 0x19, 0xfb, 0xb0, 0x32, 0xb8, 0xb1,
  0xbb, 0x3a, 0x80, 0xbd, 0x7b, 0xe6, 0xcf, 0x9d, 0x6b, 0x70, 0xe3, 0x6e,
  0x10, 0x20, 0x53, 0x60, 0xb9, 0x16, 0x22, 0xd5, 0x43, 0x4b, 0x21, 0x21,
  0x31, 0x59, 0x9a, 0x62, 0xa4, 0x06, 0x5b, 0x7a, 0x75, 0x80, 0x7b, 0x18,
  0x00, 0x57, 0x42, 0x10, 0x2f, 0x50, 0x95, 0x81, 0x3a, 0x88, 0xc1, 0x87,
  0xba, 0xd7, 0xa5, 0x4c, 0xae, 0xcd, 0xce, 0x39, 0x6e, 0x03, 0x04, 0x7e,
  0xa5, 0xcb, 0xb5, 0x38, 0xa5, 0x7a, 0xdc, 0xa6, 0x28, 0x76, 0x34, 0x63,
  0x6d, 0x00, 0x5e, 0x97, 0x4c, 0xb5, 0x4b, 0x9c, 0xb4, 0x29, 0x4c, 0x52,
  0x8a, 0x13, 0x47, 0x30, 0xf0, 0xf7, 0xdc, 0x80, 0xf6, 0x1a, 0x1b, 0xdd,
  0x8c, 0x3a, 0x31, 0x4f, 0xb5, 0x62, 0x0a, 0xa2, 0x98, 0x34, 0x66, 0x04,
  0xf9, 0xbe, 0xdf, 0x7b, 0x3b, 0x4f, 0x0a, 0xfb, 0x7e, 0xee, 0x17, 0xf6,
  0xe5, 0xdc, 0x89, 0x85, 0xde, 0x1b, 0xf9, 0x74, 0x61, 0xaf, 0xe7, 0xb1,
  0x58, 0xd3, 0x7b, 0x27, 0x6f, 0x16, 0xf6, 0x83, 0x1c, 0xc4, 0x42, 0xef,
  0xa5, 0xdc, 0x14, 0xe3, 0x4b, 0x79, 0x71, 0x96, 0x8d, 0x38, 0x3b, 0xcc,
  0xaf, 0xb9, 0x6a, 0xad, 0x84, 0xa1, 0x09, 0x5c, 0xeb, 0xa4, 0xdc, 0xa8,
  0x20, 0x43, 0x0f, 0xd8, 0x6f, 0x01, 0x45, 0xa7, 0x91, 0xdd, 0x3c, 0x52,
  0xbc, 0x88, 0xe4, 0x6f, 0x60, 0x56, 0x8b, 0x1c, 0x37, 0xaa, 0x96, 0x5d,
  0xb3, 0xcf, 0x26, 0x02, 0xf2, 0x4f, 0x5b, 0xf6, 0x17, 0xbb, 0xec, 0x64,
  0x8f, 0x69, 0x21, 0x25, 0x03, 0xcb, 0xd3, 0xe7, 0x2c, 0x35, 0x97, 0x2c,
  0xb9, 0x24, 0x66, 0xb3, 0x61, 0xb3, 0x9a, 0xe4, 0x8d, 0xd2, 0xb3, 0xdb,
  0xed, 0x64, 0x86, 0xeb, 0xf2, 0xdd, 0x49, 0x9f, 0xdd, 0xae, 0x01, 0xed,
  0x07, 0x8b, 0xb0, 0x36, 0x9b, 0x0c, 0x39, 0x8f, 0x83, 0xcd, 0xba, 0x8e,
  0xcf, 0xc3, 0xda, 0x74, 0x33, 0x61, 0x02, 0xd8, 0x7f, 0x00, 0xb7, 0xbd,
  0x54, 0xd6, 0xce, 0xa5, 0xaf, 0x6f, 0xe7, 0x33, 0xc1, 0xa6, 0x19, 0x48,
  0xbe, 0xa5, 0x05, 0x0e, 0x25, 0x37, 0x4d, 0x8f, 0xb8, 0x11, 0x21, 0xb9,
  0x96, 0x25, 0x29, 0xae, 0xcf, 0x8f, 0xd7, 0x4b, 0x8c, 0x0b, 0xb0, 0x16,
  0x45, 0xe2, 0x47, 0xec, 0x43, 0x07, 0x98, 0x4f, 0xa5, 0xdc, 0x1f, 0x25,
  0x3c, 0x3f, 0x72, 0xbc, 0x30, 0x1a, 0x71, 0x3e, 0x0c, 0x36, 0xfd, 0x39,
  0xa9, 0x6f, 0x0c, 0x19, 0x4b, 0xfc, 0xa9, 0x57, 0x9e, 0xc2, 0x50, 0xed,
  0x7a, 0x1f, 0xcf, 0xa6, 0x23, 0x0a, 0x26, 0xb1, 0x72, 0x6b, 0xfb, 0x26,
  0x92, 0xda, 0xc6, 0x98, 0x99, 0xb1, 0xcd, 0x1a, 0x00, 0x0c, 0xeb, 0x90,
  0x35, 0x10, 0xb9, 0xaf, 0xef, 0x63, 0x65, 0x6e, 0x5d, 0xe6, 0xd6, 0x6d,
  0x06, 0xd3, 0xc0, 0xc1, 0xb2, 0x63, 0xff, 0x14, 0xb2, 0xbe, 0xd3, 0x2c,
  0xa4, 0x3c, 0x07, 0x6d, 0xee, 0xca, 0x1e, 0xb3, 0x6c, 0x79, 0x01, 0x81,
  0xf4, 0x0e, 0x82, 0x67, 0x56, 0xb1, 0xe3, 0x12, 0xd2, 0x3b, 0x30, 0xaf,
  0x01, 0x62, 0x0c, 0xdc, 0xc7, 0x94, 0xe6, 0xb1, 0x2d, 0x79, 0xd1, 0x56,
  0x12, 0x89, 0xa3, 0xeb, 0xce, 0x5f, 0xc6, 0x45, 0xdb, 0xa6, 0x33, 0x36,
  0x95, 0x7d, 0xd6, 0x5a, 0x07, 0x4c, 0xa9, 0xe3, 0x10, 0xc0, 0xd6, 0xdb,
  0x31, 0xf3, 0x4c, 0xc2, 0x97, 0x07, 0xdf, 0xef, 0x26, 0x41, 0xca, 0xcd,
  0x30, 0x25, 0xfd, 0x91, 0xec, 0xab, 0x3e, 0x3d, 0xc4, 0xab, 0x83, 0xad,
  0x5d, 0x3d, 0x43, 0x20, 0x73, 0x35, 0x99, 0x0b, 0x65, 0x4e, 0xf3, 0x55,
  0x5b, 0x43, 0x24, 0xf1, 0xd5, 0xc5, 0x27, 0xc1, 0x48, 0x6b, 0xaf, 0xf6,
  0x86, 0xe8, 0xc4, 0x17, 0x89, 0xcf, 0x0b, 0x43, 0x8e, 0xc5, 0x8f, 0xe2,
  0x47, 0x2f, 0xc1, 0x0a, 0xfc, 0xbc, 0xef, 0x5d, 0xf1, 0xa0, 0xa1, 0xeb,
  0xce, 0x0d, 0xd1, 0x30, 0xb3, 0x27, 0xdf, 0xb6, 0x32, 0x8b, 0x53, 0x81,
  0xdd, 0x47, 0xe3, 0x43, 0xd5, 0xf7, 0x33, 0xac, 0xac, 0xfe, 0x52, 0x91,
  0x68, 0xe0, 0x89, 0xf5, 0x01, 0x7c, 0x23, 0x36, 0xd0, 0x0e, 0xe1, 0x47,
  0x77, 0x9b, 0xa2, 0x8f, 0x37, 0x7b, 0x9d, 0xaa, 0x63, 0xbe, 0x19, 0x55,
  0xbe, 0xd1, 0xb9, 0xc7, 0x6d, 0xfe, 0xa2, 0xab, 0x8a, 0xda, 0x6d, 0xfc,
  0x5b, 0xeb, 0xbf, 0xe0, 0xa2, 0x36, 0x93, 0x85, 0x33, 0x22, 0x35, 0x11,
  0xaf, 0xe8, 0x4a, 0x3e, 0x8a, 0x83, 0x93, 0x0e, 0x6d, 0xf7, 0xd6, 0xb7,
  0x57, 0x1f, 0xbc, 0xf9, 0xe5, 0xf5, 0x4b, 0xf1, 0x67, 0x4b, 0x1f, 0x3f,
  0x77, 0x67, 0xfd, 0x21, 0xa1, 0xd2, 0xaf, 0xd3, 0x02, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x01, 0x02, 0x03, 0x00, 0x00, 0x04, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x2c, 0x00, 0x00, 0x78, 0x01, 0x63, 0x64,
  0x60, 0x60, 0x00, 0x61, 0x09, 0x20, 0x06, 0x01, 0x1d, 0x20, 0x96, 0x05,
  0x62, 0x26, 0x20, 0x06, 0x01, 0x15, 0x10, 0x01, 0x06, 0x0c, 0x0c, 0x00,
  0x0d, 0x40, 0x00, 0x8a, 0x78, 0x62, 0x6f, 0x70, 0x01, 0x00, 0x00, 0x00,
  0x7e, 0x02, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00
};
