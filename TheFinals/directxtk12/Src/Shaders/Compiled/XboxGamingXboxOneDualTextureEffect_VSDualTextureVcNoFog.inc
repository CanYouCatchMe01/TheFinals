#if 0
;
; Input signature:
;
; Name                 Index   Mask Register SysValue  Format   Used
; -------------------- ----- ------ -------- -------- ------- ------
; SV_Position              0   xyzw        0     NONE   float   xyzw
; TEXCOORD                 0   xy          1     NONE   float   xy  
; TEXCOORD                 1   xy          2     NONE   float   xy  
; COLOR                    0   xyzw        3     NONE   float   xyzw
;
;
; Output signature:
;
; Name                 Index   Mask Register SysValue  Format   Used
; -------------------- ----- ------ -------- -------- ------- ------
; COLOR                    0   xyzw        0     NONE   float   xyzw
; TEXCOORD                 0   xy          1     NONE   float   xy  
; TEXCOORD                 1     zw        1     NONE   float     zw
; SV_Position              0   xyzw        2      POS   float   xyzw
;
; shader debug name: C:\Users\marcu\Downloads\DirectXTK12-main\DirectXTK12-main\Src/Shaders/Compiled\XboxGamingXboxOneDualTextureEffect_VSDualTextureVcNoFog.pdb
; shader hash: 44e0955e430f0aadf66e4be884b17291
;
; Pipeline Runtime Information: 
;
;PSVRuntimeInfo:
; Vertex Shader
; OutputPositionPresent=1
; MinimumExpectedWaveLaneCount: 0
; MaximumExpectedWaveLaneCount: 4294967295
; UsesViewID: false
; SigInputElements: 4
; SigOutputElements: 4
; SigPatchConstOrPrimElements: 0
; SigInputVectors: 4
; SigOutputVectors[0]: 3
; SigOutputVectors[1]: 0
; SigOutputVectors[2]: 0
; SigOutputVectors[3]: 0
; EntryFunctionName: VSDualTextureVcNoFog
;
;
; Input signature:
;
; Name                 Index             InterpMode DynIdx
; -------------------- ----- ---------------------- ------
; SV_Position              0                              
; TEXCOORD                 0                              
; TEXCOORD                 1                              
; COLOR                    0                              
;
; Output signature:
;
; Name                 Index             InterpMode DynIdx
; -------------------- ----- ---------------------- ------
; COLOR                    0                 linear       
; TEXCOORD                 0                 linear       
; TEXCOORD                 1                 linear       
; SV_Position              0          noperspective       
;
; Buffer Definitions:
;
; cbuffer 
; {
;
;   [112 x i8] (type annotation not present)
;
; }
;
;
; Resource Bindings:
;
; Name                                 Type  Format         Dim      ID      HLSL Bind  Count
; ------------------------------ ---------- ------- ----------- ------- -------------- ------
;                                   cbuffer      NA          NA     CB0            cb0     1
;
;
; ViewId state:
;
; Number of inputs: 16, outputs: 12
; Outputs dependent on ViewId: {  }
; Inputs contributing to computation of Outputs:
;   output 0 depends on inputs: { 12 }
;   output 1 depends on inputs: { 13 }
;   output 2 depends on inputs: { 14 }
;   output 3 depends on inputs: { 15 }
;   output 4 depends on inputs: { 4 }
;   output 5 depends on inputs: { 5 }
;   output 6 depends on inputs: { 8 }
;   output 7 depends on inputs: { 9 }
;   output 8 depends on inputs: { 0, 1, 2, 3 }
;   output 9 depends on inputs: { 0, 1, 2, 3 }
;   output 10 depends on inputs: { 0, 1, 2, 3 }
;   output 11 depends on inputs: { 0, 1, 2, 3 }
;
target datalayout = "e-m:e-p:32:32-i1:32-i8:32-i16:32-i32:32-i64:64-f16:32-f32:32-f64:64-n8:16:32:64"
target triple = "dxil-ms-xb1"

%dx.types.Handle = type { i8* }
%dx.types.CBufRet.f32 = type { float, float, float, float }
%hostlayout.Parameters = type { <4 x float>, <3 x float>, <4 x float>, [4 x <4 x float>] }

define void @VSDualTextureVcNoFog() {
  %1 = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 2, i32 0, i32 0, i1 false)  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %2 = call float @dx.op.loadInput.f32(i32 4, i32 3, i32 0, i8 0, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %3 = call float @dx.op.loadInput.f32(i32 4, i32 3, i32 0, i8 1, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %4 = call float @dx.op.loadInput.f32(i32 4, i32 3, i32 0, i8 2, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %5 = call float @dx.op.loadInput.f32(i32 4, i32 3, i32 0, i8 3, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %6 = call float @dx.op.loadInput.f32(i32 4, i32 2, i32 0, i8 0, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %7 = call float @dx.op.loadInput.f32(i32 4, i32 2, i32 0, i8 1, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %8 = call float @dx.op.loadInput.f32(i32 4, i32 1, i32 0, i8 0, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %9 = call float @dx.op.loadInput.f32(i32 4, i32 1, i32 0, i8 1, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %10 = call float @dx.op.loadInput.f32(i32 4, i32 0, i32 0, i8 0, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %11 = call float @dx.op.loadInput.f32(i32 4, i32 0, i32 0, i8 1, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %12 = call float @dx.op.loadInput.f32(i32 4, i32 0, i32 0, i8 2, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %13 = call float @dx.op.loadInput.f32(i32 4, i32 0, i32 0, i8 3, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %14 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 3)  ; CBufferLoadLegacy(handle,regIndex)
  %15 = extractvalue %dx.types.CBufRet.f32 %14, 0
  %16 = extractvalue %dx.types.CBufRet.f32 %14, 1
  %17 = extractvalue %dx.types.CBufRet.f32 %14, 2
  %18 = extractvalue %dx.types.CBufRet.f32 %14, 3
  %19 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 4)  ; CBufferLoadLegacy(handle,regIndex)
  %20 = extractvalue %dx.types.CBufRet.f32 %19, 0
  %21 = extractvalue %dx.types.CBufRet.f32 %19, 1
  %22 = extractvalue %dx.types.CBufRet.f32 %19, 2
  %23 = extractvalue %dx.types.CBufRet.f32 %19, 3
  %24 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 5)  ; CBufferLoadLegacy(handle,regIndex)
  %25 = extractvalue %dx.types.CBufRet.f32 %24, 0
  %26 = extractvalue %dx.types.CBufRet.f32 %24, 1
  %27 = extractvalue %dx.types.CBufRet.f32 %24, 2
  %28 = extractvalue %dx.types.CBufRet.f32 %24, 3
  %29 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 6)  ; CBufferLoadLegacy(handle,regIndex)
  %30 = extractvalue %dx.types.CBufRet.f32 %29, 0
  %31 = extractvalue %dx.types.CBufRet.f32 %29, 1
  %32 = extractvalue %dx.types.CBufRet.f32 %29, 2
  %33 = extractvalue %dx.types.CBufRet.f32 %29, 3
  %34 = fmul fast float %15, %10
  %35 = call float @dx.op.tertiary.f32(i32 46, float %11, float %16, float %34)  ; FMad(a,b,c)
  %36 = call float @dx.op.tertiary.f32(i32 46, float %12, float %17, float %35)  ; FMad(a,b,c)
  %37 = call float @dx.op.tertiary.f32(i32 46, float %13, float %18, float %36)  ; FMad(a,b,c)
  %38 = fmul fast float %20, %10
  %39 = call float @dx.op.tertiary.f32(i32 46, float %11, float %21, float %38)  ; FMad(a,b,c)
  %40 = call float @dx.op.tertiary.f32(i32 46, float %12, float %22, float %39)  ; FMad(a,b,c)
  %41 = call float @dx.op.tertiary.f32(i32 46, float %13, float %23, float %40)  ; FMad(a,b,c)
  %42 = fmul fast float %25, %10
  %43 = call float @dx.op.tertiary.f32(i32 46, float %11, float %26, float %42)  ; FMad(a,b,c)
  %44 = call float @dx.op.tertiary.f32(i32 46, float %12, float %27, float %43)  ; FMad(a,b,c)
  %45 = call float @dx.op.tertiary.f32(i32 46, float %13, float %28, float %44)  ; FMad(a,b,c)
  %46 = fmul fast float %30, %10
  %47 = call float @dx.op.tertiary.f32(i32 46, float %11, float %31, float %46)  ; FMad(a,b,c)
  %48 = call float @dx.op.tertiary.f32(i32 46, float %12, float %32, float %47)  ; FMad(a,b,c)
  %49 = call float @dx.op.tertiary.f32(i32 46, float %13, float %33, float %48)  ; FMad(a,b,c)
  %50 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 0)  ; CBufferLoadLegacy(handle,regIndex)
  %51 = extractvalue %dx.types.CBufRet.f32 %50, 0
  %52 = extractvalue %dx.types.CBufRet.f32 %50, 1
  %53 = extractvalue %dx.types.CBufRet.f32 %50, 2
  %54 = extractvalue %dx.types.CBufRet.f32 %50, 3
  %55 = fmul fast float %51, %2
  %56 = fmul fast float %52, %3
  %57 = fmul fast float %53, %4
  %58 = fmul fast float %54, %5
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 0, float %55)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 1, float %56)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 2, float %57)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 3, float %58)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 1, i32 0, i8 0, float %8)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 1, i32 0, i8 1, float %9)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 2, i32 0, i8 0, float %6)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 2, i32 0, i8 1, float %7)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 3, i32 0, i8 0, float %37)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 3, i32 0, i8 1, float %41)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 3, i32 0, i8 2, float %45)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 3, i32 0, i8 3, float %49)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  ret void
}

; Function Attrs: nounwind readnone
declare float @dx.op.loadInput.f32(i32, i32, i32, i8, i32) #0

; Function Attrs: nounwind
declare void @dx.op.storeOutput.f32(i32, i32, i32, i8, float) #1

; Function Attrs: nounwind readonly
declare %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32, %dx.types.Handle, i32) #2

; Function Attrs: nounwind readnone
declare float @dx.op.tertiary.f32(i32, float, float, float) #0

; Function Attrs: nounwind readonly
declare %dx.types.Handle @dx.op.createHandle(i32, i8, i32, i32, i1) #2

attributes #0 = { nounwind readnone }
attributes #1 = { nounwind }
attributes #2 = { nounwind readonly }

!xbox.compiler.options = !{!0}
!llvm.ident = !{!1}
!dx.version = !{!2}
!dx.valver = !{!3}
!dx.shaderModel = !{!4}
!dx.resources = !{!5}
!dx.viewIdState = !{!8}
!dx.entryPoints = !{!9}

!0 = !{!"__XBOX_PER_THREAD_SCRATCH_SIZE_LIMIT_IN_BYTES", !"0"}
!1 = !{!"dxcxbox 2410.2410.11116.10741"}
!2 = !{i32 1, i32 0}
!3 = !{i32 1, i32 8}
!4 = !{!"vs", i32 6, i32 0}
!5 = !{null, null, !6, null}
!6 = !{!7}
!7 = !{i32 0, %hostlayout.Parameters* undef, !"", i32 0, i32 0, i32 1, i32 112, null}
!8 = !{[18 x i32] [i32 16, i32 12, i32 3840, i32 3840, i32 3840, i32 3840, i32 16, i32 32, i32 0, i32 0, i32 64, i32 128, i32 0, i32 0, i32 1, i32 2, i32 4, i32 8]}
!9 = !{void ()* @VSDualTextureVcNoFog, !"VSDualTextureVcNoFog", !10, !5, null}
!10 = !{!11, !20, null}
!11 = !{!12, !15, !17, !19}
!12 = !{i32 0, !"SV_Position", i8 9, i8 0, !13, i8 0, i32 1, i8 4, i32 0, i8 0, !14}
!13 = !{i32 0}
!14 = !{i32 3, i32 15}
!15 = !{i32 1, !"TEXCOORD", i8 9, i8 0, !13, i8 0, i32 1, i8 2, i32 1, i8 0, !16}
!16 = !{i32 3, i32 3}
!17 = !{i32 2, !"TEXCOORD", i8 9, i8 0, !18, i8 0, i32 1, i8 2, i32 2, i8 0, !16}
!18 = !{i32 1}
!19 = !{i32 3, !"COLOR", i8 9, i8 0, !13, i8 0, i32 1, i8 4, i32 3, i8 0, !14}
!20 = !{!21, !22, !23, !24}
!21 = !{i32 0, !"COLOR", i8 9, i8 0, !13, i8 2, i32 1, i8 4, i32 0, i8 0, !14}
!22 = !{i32 1, !"TEXCOORD", i8 9, i8 0, !13, i8 2, i32 1, i8 2, i32 1, i8 0, !16}
!23 = !{i32 2, !"TEXCOORD", i8 9, i8 0, !18, i8 2, i32 1, i8 2, i32 1, i8 2, !16}
!24 = !{i32 3, !"SV_Position", i8 9, i8 3, !13, i8 4, i32 1, i8 4, i32 2, i8 0, !14}

;
; DUMPING SHADER HARDWARE INSTRUCTIONS 
;
// Shader Type               : (VS)
// Shader Hw Stage           : (VS)

// Shader Instructions:
shader main
  asic(CI)
  type(VS)
  s_swappc_b64  s[0:1], s[0:1]
  s_or_b32      s1, s8, 0x00100000 // wrscc
  s_mov_b32     s0, s7
  s_mov_b32     s2, -1
  s_mov_b32     s3, 0x00024fac
  s_buffer_load_dwordx4  s[16:19], s[0:3], 0x00
  s_buffer_load_dwordx16  s[0:15], s[0:3], 0x0c
  s_waitcnt     vmcnt(0) & lgkmcnt(0)
  v_mul_legacy_f32  v0, s0, v4
  v_mul_legacy_f32  v1, s4, v4
  v_mul_legacy_f32  v2, s8, v4
  v_mul_legacy_f32  v3, s12, v4
  v_mac_legacy_f32  v0, s1, v5
  v_mac_legacy_f32  v1, s5, v5
  v_mac_legacy_f32  v2, s9, v5
  v_mac_legacy_f32  v3, s13, v5
  v_mac_legacy_f32  v0, s2, v6
  v_mac_legacy_f32  v1, s6, v6
  v_mac_legacy_f32  v2, s10, v6
  v_mac_legacy_f32  v3, s14, v6
  v_mac_legacy_f32  v0, s3, v7
  v_mac_legacy_f32  v1, s7, v7
  v_mac_legacy_f32  v2, s11, v7
  v_mac_legacy_f32  v3, s15, v7
  exp           pos0, v0, v1, v2, v3 done
  v_mul_legacy_f32  v4, s16, v16
  v_mul_legacy_f32  v5, s17, v17
  v_mul_legacy_f32  v6, s18, v18
  v_mul_legacy_f32  v7, s19, v19
  exp           param0, v4, v5, v6, v7
  exp           param1, v8, v9, v12, v13
  s_endpgm      
end


NumVGPR=20,NumSGPR=22,LDS=0,Scratch=0,Occpancy=10

// Shader Type               : (VS)
// Shader Hw Stage           : (ES)

// Shader Instructions:
shader main
  asic(CI)
  type(VS)
  s_swappc_b64  s[0:1], s[0:1]
  s_mov_b32     s1, 0
  s_or_b32      s13, s8, 0x00100000 // wrscc
  s_mov_b32     s12, s7
  s_mov_b32     s14, -1
  s_mov_b32     s15, 0x00024fac
  s_load_dwordx4  s[0:3], s[0:1], 0x08
  s_buffer_load_dwordx4  s[4:7], s[12:15], 0x00
  s_buffer_load_dwordx16  s[12:27], s[12:15], 0x0c
  s_waitcnt     vmcnt(0) & lgkmcnt(0)
  v_mul_legacy_f32  v0, s12, v4
  v_mul_legacy_f32  v1, s16, v4
  v_mul_legacy_f32  v2, s20, v4
  v_mul_legacy_f32  v3, s24, v4
  v_mac_legacy_f32  v0, s13, v5
  v_mac_legacy_f32  v1, s17, v5
  v_mac_legacy_f32  v2, s21, v5
  v_mac_legacy_f32  v3, s25, v5
  v_mac_legacy_f32  v0, s14, v6
  v_mac_legacy_f32  v1, s18, v6
  v_mac_legacy_f32  v2, s22, v6
  v_mac_legacy_f32  v3, s26, v6
  v_mac_legacy_f32  v0, s15, v7
  v_mac_legacy_f32  v1, s19, v7
  v_mac_legacy_f32  v2, s23, v7
  v_mac_legacy_f32  v3, s27, v7
  v_mul_legacy_f32  v4, s4, v16
  v_mul_legacy_f32  v5, s5, v17
  v_mul_legacy_f32  v6, s6, v18
  v_mul_legacy_f32  v7, s7, v19
  buffer_store_dword  v0, v0, s[0:3], s9 offset:32 glc slc
  buffer_store_dword  v1, v0, s[0:3], s9 offset:36 glc slc
  buffer_store_dword  v2, v0, s[0:3], s9 offset:40 glc slc
  buffer_store_dword  v3, v0, s[0:3], s9 offset:44 glc slc
  buffer_store_dword  v4, v0, s[0:3], s9 glc slc
  buffer_store_dword  v5, v0, s[0:3], s9 offset:4 glc slc
  buffer_store_dword  v6, v0, s[0:3], s9 offset:8 glc slc
  buffer_store_dword  v7, v0, s[0:3], s9 offset:12 glc slc
  buffer_store_dword  v8, v0, s[0:3], s9 offset:16 glc slc
  buffer_store_dword  v9, v0, s[0:3], s9 offset:20 glc slc
  buffer_store_dword  v12, v0, s[0:3], s9 offset:24 glc slc
  buffer_store_dword  v13, v0, s[0:3], s9 offset:28 glc slc
  s_endpgm      
end


NumVGPR=20,NumSGPR=30,LDS=0,Scratch=0,Occpancy=10

// Shader Type               : (VS)
// Shader Hw Stage           : (LS)

// Shader Instructions:
shader main
  asic(CI)
  type(VS)
  s_swappc_b64  s[0:1], s[0:1]
  s_or_b32      s1, s8, 0x00100000 // wrscc
  s_mov_b32     s0, s7
  s_mov_b32     s2, -1
  s_mov_b32     s3, 0x00024fac
  s_buffer_load_dwordx4  s[16:19], s[0:3], 0x00
  s_buffer_load_dwordx16  s[0:15], s[0:3], 0x0c
  s_mov_b32     m0, -1
  s_waitcnt     vmcnt(0) & lgkmcnt(0)
  v_mul_legacy_f32  v0, s0, v4
  v_mac_legacy_f32  v0, s1, v5
  v_mac_legacy_f32  v0, s2, v6
  v_mad_legacy_f32  v2, v7, s3, v0
  v_mul_legacy_f32  v0, s4, v4
  v_mac_legacy_f32  v0, s5, v5
  v_mac_legacy_f32  v0, s6, v6
  v_mad_legacy_f32  v3, v7, s7, v0
  v_mul_legacy_f32  v0, s8, v4
  v_mac_legacy_f32  v0, s9, v5
  v_mac_legacy_f32  v0, s10, v6
  v_mad_legacy_f32  v10, v7, s11, v0
  v_mul_legacy_f32  v0, s12, v4
  v_mac_legacy_f32  v0, s13, v5
  v_mac_legacy_f32  v0, s14, v6
  v_mul_lo_i32  v6, v1, 48
  v_mad_legacy_f32  v11, v7, s15, v0
  v_mul_legacy_f32  v4, s16, v16
  v_mul_legacy_f32  v5, s17, v17
  v_mul_legacy_f32  v0, s18, v18
  v_mul_legacy_f32  v1, s19, v19
  ds_write2_b64  v6, v[2:3], v[10:11] offset0:4 offset1:5
  ds_write2_b64  v6, v[4:5], v[0:1] offset1:1
  ds_write2_b64  v6, v[8:9], v[12:13] offset0:2 offset1:3
  s_endpgm      
end


NumVGPR=20,NumSGPR=22,LDS=0,Scratch=0,Occpancy=10


#endif

const unsigned char DualTextureEffect_VSDualTextureVcNoFog[] = {
  0x44, 0x58, 0x42, 0x43, 0x17, 0xe8, 0xdb, 0xcc, 0xce, 0x10, 0x89, 0x55,
  0xf0, 0x55, 0x4d, 0xaf, 0xc2, 0xdf, 0x81, 0xd9, 0x01, 0x00, 0x00, 0x00,
  0x6c, 0x15, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00,
  0x50, 0x00, 0x00, 0x00, 0xfc, 0x00, 0x00, 0x00, 0xa8, 0x01, 0x00, 0x00,
  0x30, 0x03, 0x00, 0x00, 0x04, 0x04, 0x00, 0x00, 0x9c, 0x04, 0x00, 0x00,
  0xb8, 0x04, 0x00, 0x00, 0x53, 0x46, 0x49, 0x30, 0x08, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x49, 0x53, 0x47, 0x31,
  0xa4, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x88, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x0f, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x94, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x03, 0x03, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x94, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x03, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x9d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x0f, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x53, 0x56, 0x5f, 0x50,
  0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x00, 0x54, 0x45, 0x58, 0x43,
  0x4f, 0x4f, 0x52, 0x44, 0x00, 0x43, 0x4f, 0x4c, 0x4f, 0x52, 0x00, 0x00,
  0x4f, 0x53, 0x47, 0x31, 0xa4, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00,
  0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x88, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x8e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x03, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x8e, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0c, 0x03, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x97, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x43, 0x4f, 0x4c, 0x4f, 0x52, 0x00, 0x54, 0x45, 0x58, 0x43, 0x4f, 0x4f,
  0x52, 0x44, 0x00, 0x53, 0x56, 0x5f, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69,
  0x6f, 0x6e, 0x00, 0x00, 0x50, 0x53, 0x56, 0x30, 0x80, 0x01, 0x00, 0x00,
  0x34, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xff, 0xff, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x04, 0x04, 0x00, 0x04,
  0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x18, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x54, 0x00, 0x00, 0x00, 0x00, 0x53, 0x56, 0x5f,
  0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x00, 0x54, 0x45, 0x58,
  0x43, 0x4f, 0x4f, 0x52, 0x44, 0x00, 0x54, 0x45, 0x58, 0x43, 0x4f, 0x4f,
  0x52, 0x44, 0x00, 0x43, 0x4f, 0x4c, 0x4f, 0x52, 0x00, 0x43, 0x4f, 0x4c,
  0x4f, 0x52, 0x00, 0x54, 0x45, 0x58, 0x43, 0x4f, 0x4f, 0x52, 0x44, 0x00,
  0x54, 0x45, 0x58, 0x43, 0x4f, 0x4f, 0x52, 0x44, 0x00, 0x56, 0x53, 0x44,
  0x75, 0x61, 0x6c, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x56, 0x63,
  0x4e, 0x6f, 0x46, 0x6f, 0x67, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x44, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x01, 0x42, 0x00, 0x03, 0x00, 0x00, 0x00, 0x16, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x01, 0x02, 0x42, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x1f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x03, 0x44, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x25, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x44, 0x00, 0x03, 0x02, 0x00, 0x00, 0x2b, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x42, 0x00, 0x03, 0x02, 0x00, 0x00,
  0x34, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x01, 0x62, 0x00,
  0x03, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x02, 0x44, 0x03, 0x03, 0x04, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00,
  0x00, 0x0f, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00,
  0x10, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00,
  0x52, 0x54, 0x53, 0x30, 0xcc, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x05, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xcc, 0x00, 0x00, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x05, 0x00, 0x00, 0x00, 0x54, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x05, 0x00, 0x00, 0x00, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x05, 0x00, 0x00, 0x00, 0x8c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x05, 0x00, 0x00, 0x00, 0xa8, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xc4, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x5c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff,
  0x01, 0x00, 0x00, 0x00, 0x78, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xff, 0xff, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x94, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00,
  0xb0, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x49, 0x4c, 0x44, 0x4e,
  0x90, 0x00, 0x00, 0x00, 0x00, 0x00, 0x8b, 0x00, 0x43, 0x3a, 0x5c, 0x55,
  0x73, 0x65, 0x72, 0x73, 0x5c, 0x6d, 0x61, 0x72, 0x63, 0x75, 0x5c, 0x44,
  0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x73, 0x5c, 0x44, 0x69, 0x72,
  0x65, 0x63, 0x74, 0x58, 0x54, 0x4b, 0x31, 0x32, 0x2d, 0x6d, 0x61, 0x69,
  0x6e, 0x5c, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x58, 0x54, 0x4b, 0x31,
  0x32, 0x2d, 0x6d, 0x61, 0x69, 0x6e, 0x5c, 0x53, 0x72, 0x63, 0x2f, 0x53,
  0x68, 0x61, 0x64, 0x65, 0x72, 0x73, 0x2f, 0x43, 0x6f, 0x6d, 0x70, 0x69,
  0x6c, 0x65, 0x64, 0x5c, 0x58, 0x62, 0x6f, 0x78, 0x47, 0x61, 0x6d, 0x69,
  0x6e, 0x67, 0x58, 0x62, 0x6f, 0x78, 0x4f, 0x6e, 0x65, 0x44, 0x75, 0x61,
  0x6c, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x45, 0x66, 0x66, 0x65,
  0x63, 0x74, 0x5f, 0x56, 0x53, 0x44, 0x75, 0x61, 0x6c, 0x54, 0x65, 0x78,
  0x74, 0x75, 0x72, 0x65, 0x56, 0x63, 0x4e, 0x6f, 0x46, 0x6f, 0x67, 0x2e,
  0x70, 0x64, 0x62, 0x00, 0x48, 0x41, 0x53, 0x48, 0x14, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x44, 0xe0, 0x95, 0x5e, 0x43, 0x0f, 0x0a, 0xad,
  0xf6, 0x6e, 0x4b, 0xe8, 0x84, 0xb1, 0x72, 0x91, 0x44, 0x58, 0x49, 0x4c,
  0xac, 0x10, 0x00, 0x00, 0x60, 0x00, 0x01, 0x00, 0x2b, 0x04, 0x00, 0x00,
  0x44, 0x58, 0x49, 0x4c, 0x00, 0x01, 0x00, 0x00, 0x94, 0x00, 0x00, 0x00,
  0xdc, 0x08, 0x00, 0x00, 0x58, 0x44, 0x41, 0x54, 0x08, 0x00, 0x00, 0x00,
  0x24, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x84, 0x00, 0x00, 0x00,
  0xf4, 0x08, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x78, 0x09, 0x00, 0x00,
  0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x88, 0x09, 0x00, 0x00,
  0xbc, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x44, 0x0b, 0x00, 0x00,
  0xfb, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x0d, 0x00, 0x00,
  0xd6, 0x01, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x18, 0x0f, 0x00, 0x00,
  0x20, 0x01, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x38, 0x10, 0x00, 0x00,
  0x5f, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x98, 0x10, 0x00, 0x00,
  0x11, 0x00, 0x00, 0x00, 0x60, 0x00, 0x01, 0x00, 0x3d, 0x02, 0x00, 0x00,
  0x44, 0x58, 0x49, 0x4c, 0x00, 0x01, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00,
  0xdc, 0x08, 0x00, 0x00, 0x42, 0x43, 0xc0, 0xde, 0x21, 0x0c, 0x00, 0x00,
  0x34, 0x02, 0x00, 0x00, 0x0b, 0x82, 0x20, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x13, 0x00, 0x00, 0x00, 0x07, 0x81, 0x23, 0x91, 0x41, 0xc8, 0x04, 0x49,
  0x06, 0x10, 0x32, 0x39, 0x92, 0x01, 0x84, 0x0c, 0x25, 0x05, 0x08, 0x19,
  0x1e, 0x04, 0x8b, 0x62, 0x80, 0x14, 0x45, 0x02, 0x42, 0x92, 0x0b, 0x42,
  0xa4, 0x10, 0x32, 0x14, 0x38, 0x08, 0x18, 0x4b, 0x0a, 0x32, 0x52, 0x88,
  0x48, 0x90, 0x14, 0x20, 0x43, 0x46, 0x88, 0xa5, 0x00, 0x19, 0x32, 0x42,
  0xe4, 0x48, 0x0e, 0x90, 0x91, 0x22, 0xc4, 0x50, 0x41, 0x51, 0x81, 0x8c,
  0xe1, 0x83, 0xe5, 0x8a, 0x04, 0x29, 0x46, 0x06, 0x51, 0x18, 0x00, 0x00,
  0x08, 0x00, 0x00, 0x00, 0x1b, 0x8c, 0xe0, 0xff, 0xff, 0xff, 0xff, 0x07,
  0x40, 0x02, 0xa8, 0x0d, 0x84, 0xf0, 0xff, 0xff, 0xff, 0xff, 0x03, 0x20,
  0x6d, 0x30, 0x86, 0xff, 0xff, 0xff, 0xff, 0x1f, 0x00, 0x09, 0xa8, 0x00,
  0x49, 0x18, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x13, 0x82, 0x60, 0x42,
  0x20, 0x4c, 0x08, 0x06, 0x00, 0x00, 0x00, 0x00, 0x89, 0x20, 0x00, 0x00,
  0x25, 0x00, 0x00, 0x00, 0x32, 0x22, 0x48, 0x09, 0x20, 0x64, 0x85, 0x04,
  0x93, 0x22, 0xa4, 0x84, 0x04, 0x93, 0x22, 0xe3, 0x84, 0xa1, 0x90, 0x14,
  0x12, 0x4c, 0x8a, 0x8c, 0x0b, 0x84, 0xa4, 0x4c, 0x10, 0x6c, 0x23, 0x00,
  0x25, 0x00, 0x14, 0x66, 0x00, 0xe6, 0x08, 0xc0, 0x60, 0x8e, 0x00, 0x29,
  0xc6, 0x20, 0x84, 0x14, 0x42, 0xa6, 0x18, 0x80, 0x10, 0x52, 0x06, 0xa1,
  0xa3, 0x86, 0xcb, 0x9f, 0xb0, 0x87, 0x90, 0x7c, 0x6e, 0xa3, 0x8a, 0x95,
  0x98, 0xfc, 0xe2, 0xb6, 0x11, 0x31, 0xc6, 0x18, 0x54, 0xee, 0x19, 0x2e,
  0x7f, 0xc2, 0x1e, 0x42, 0xf2, 0x43, 0xa0, 0x19, 0x16, 0x02, 0x05, 0xab,
  0x10, 0x8a, 0x30, 0x42, 0xad, 0x14, 0x83, 0x8c, 0x31, 0xe8, 0xcd, 0x11,
  0x04, 0xc5, 0x60, 0xa4, 0x10, 0x12, 0x49, 0x0e, 0x04, 0x0c, 0x23, 0x10,
  0xc3, 0x30, 0xc2, 0x30, 0x24, 0x41, 0xbd, 0xea, 0x70, 0xa4, 0x69, 0x01,
  0x30, 0x87, 0x9a, 0xfc, 0x14, 0x88, 0x00, 0x86, 0x98, 0x88, 0x48, 0x42,
  0x44, 0xb5, 0xf5, 0x12, 0x4e, 0x09, 0x02, 0x00, 0x13, 0x16, 0x72, 0xc0,
  0x87, 0x74, 0x60, 0x87, 0x36, 0x68, 0x87, 0x79, 0x68, 0x03, 0x7c, 0x10,
  0x87, 0x38, 0xd8, 0xf0, 0x0a, 0xe5, 0xd0, 0x06, 0xed, 0xa0, 0x07, 0xe5,
  0xd0, 0x06, 0xf0, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x7a, 0x30, 0x07, 0x72,
  0xd0, 0x06, 0xe9, 0x10, 0x07, 0x7a, 0x30, 0x07, 0x72, 0xd0, 0x06, 0xe9,
  0x80, 0x07, 0x7a, 0x30, 0x07, 0x72, 0xd0, 0x06, 0xe9, 0x10, 0x07, 0x76,
  0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x90, 0x0e, 0x73, 0x20, 0x07, 0x7a,
  0x30, 0x07, 0x72, 0xd0, 0x06, 0xe9, 0x60, 0x07, 0x74, 0xa0, 0x07, 0x76,
  0x40, 0x07, 0x6d, 0x60, 0x0e, 0x71, 0x60, 0x07, 0x7a, 0x30, 0x07, 0x72,
  0xd0, 0x06, 0xe6, 0x30, 0x07, 0x72, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d,
  0x60, 0x0e, 0x76, 0x40, 0x07, 0x7a, 0x60, 0x07, 0x74, 0xd0, 0x06, 0xee,
  0x80, 0x07, 0x7a, 0x10, 0x07, 0x76, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x7a,
  0x60, 0x07, 0x74, 0x30, 0xe4, 0x09, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x60, 0xc8, 0x63, 0x00, 0x01, 0x10, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x90, 0x07, 0x01, 0x02, 0x40, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x21, 0x4f, 0x03, 0x04, 0xc0,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x43, 0x9e, 0x07, 0x08,
  0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x86, 0x3c, 0x12,
  0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x64, 0x81,
  0x00, 0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0x00, 0x32, 0x1e, 0x98, 0x14,
  0x19, 0x11, 0x4c, 0x90, 0x8c, 0x09, 0x26, 0x47, 0xc6, 0x04, 0x43, 0x22,
  0x25, 0x30, 0x02, 0x50, 0x10, 0xc5, 0x50, 0xe0, 0x01, 0x65, 0x50, 0x1e,
  0x45, 0x40, 0xa5, 0x24, 0x46, 0x00, 0x0a, 0xa1, 0x08, 0xca, 0x80, 0xf2,
  0x0c, 0x00, 0xe9, 0xb1, 0x24, 0x88, 0x01, 0xf1, 0x01, 0xc4, 0x07, 0x10,
  0x1f, 0x40, 0x7c, 0x80, 0xc0, 0x00, 0x00, 0x40, 0x01, 0x24, 0x00, 0x20,
  0x10, 0x08, 0x04, 0x00, 0x79, 0x18, 0x00, 0x00, 0x7e, 0x00, 0x00, 0x00,
  0x1a, 0x03, 0x4c, 0x90, 0x46, 0x02, 0x13, 0xc4, 0x36, 0xf8, 0xfa, 0xc2,
  0x12, 0x7a, 0xc2, 0xfa, 0x82, 0x2a, 0x92, 0xfa, 0xa2, 0x42, 0x92, 0x2a,
  0x0a, 0x22, 0xfa, 0x9a, 0x1a, 0x92, 0x0a, 0xa2, 0x1a, 0x42, 0xfa, 0x9a,
  0x4a, 0xd2, 0x2a, 0xfa, 0x62, 0x4a, 0x6a, 0x4a, 0xa2, 0xfa, 0x4a, 0x72,
  0xfa, 0x12, 0xca, 0xa2, 0x2a, 0x9a, 0x62, 0x00, 0xb3, 0x41, 0x08, 0x04,
  0x76, 0x64, 0x78, 0x63, 0x78, 0x62, 0x6f, 0x78, 0x20, 0x32, 0x34, 0x31,
  0x30, 0x2e, 0x32, 0x34, 0x31, 0x30, 0x2e, 0x31, 0x31, 0x31, 0x31, 0x36,
  0x2e, 0x31, 0x30, 0x37, 0x34, 0x31, 0x1b, 0x02, 0x62, 0x82, 0x40, 0x18,
  0x13, 0x04, 0xe2, 0xd8, 0x20, 0x18, 0xc7, 0x04, 0x81, 0x40, 0x36, 0x08,
  0x46, 0x42, 0xc1, 0x6e, 0x6e, 0x82, 0x40, 0x24, 0x1b, 0x86, 0x85, 0x39,
  0x26, 0x08, 0xd9, 0x44, 0x60, 0x82, 0x40, 0x28, 0x1b, 0x90, 0xc3, 0x79,
  0x8e, 0xc3, 0x80, 0x80, 0x0d, 0x41, 0xb4, 0x81, 0x00, 0x00, 0x09, 0x98,
  0x20, 0x68, 0xd4, 0x86, 0x80, 0x9a, 0x20, 0x08, 0x00, 0x29, 0xab, 0x29,
  0xa2, 0xba, 0x30, 0x36, 0xaa, 0x32, 0x3c, 0xba, 0x3a, 0xb9, 0x32, 0xab,
  0x31, 0xa7, 0x37, 0xa3, 0xb7, 0x33, 0x2e, 0x53, 0x56, 0x5f, 0x50, 0x6f,
  0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x13, 0x84, 0xc2, 0x99, 0x20, 0x14,
  0xcf, 0x86, 0xe0, 0x98, 0x20, 0x14, 0xd0, 0x04, 0x81, 0x58, 0x26, 0x08,
  0x04, 0xb3, 0x41, 0xe8, 0xbc, 0x0d, 0xcb, 0x81, 0x65, 0xda, 0xa6, 0x19,
  0xdc, 0xa1, 0x7d, 0x44, 0xa8, 0x8a, 0xb0, 0x86, 0x9e, 0x9e, 0xa4, 0x88,
  0x26, 0x08, 0x45, 0xb4, 0x41, 0xe8, 0xba, 0x0d, 0x8b, 0x11, 0x06, 0x99,
  0xb6, 0x69, 0x86, 0x18, 0x18, 0xda, 0x18, 0x4c, 0x10, 0x88, 0x66, 0x43,
  0x60, 0x6c, 0x58, 0xca, 0x20, 0x0c, 0x32, 0xcd, 0x0c, 0x34, 0x43, 0x0c,
  0xca, 0x40, 0x1b, 0x03, 0x16, 0x43, 0x4f, 0x4c, 0x4f, 0x52, 0x1b, 0x96,
  0x0e, 0x0d, 0x32, 0x6d, 0xd3, 0x0c, 0xae, 0xd3, 0xbe, 0x0d, 0x04, 0x18,
  0x90, 0xc1, 0x19, 0xa4, 0xc1, 0x86, 0xe5, 0x40, 0x83, 0x4c, 0xdb, 0xc4,
  0xc0, 0xe0, 0x0e, 0xed, 0xdb, 0xb0, 0x18, 0x61, 0x90, 0x69, 0x9b, 0x18,
  0x18, 0x62, 0x60, 0x68, 0x63, 0xb0, 0x61, 0x29, 0x83, 0x30, 0xc8, 0x34,
  0x33, 0x10, 0x03, 0x43, 0x0c, 0x0c, 0x31, 0x18, 0x83, 0x09, 0x42, 0x21,
  0x6d, 0x58, 0x3a, 0x2c, 0x73, 0x83, 0x8d, 0x33, 0xb8, 0x32, 0xd0, 0xbe,
  0x0d, 0xc4, 0x1a, 0xb0, 0x41, 0x1b, 0xbc, 0xc1, 0x86, 0x41, 0x0d, 0xe0,
  0x00, 0xd8, 0x50, 0x58, 0x57, 0x1c, 0x4c, 0x40, 0x2b, 0x3c, 0xb1, 0x37,
  0x3c, 0x97, 0xb1, 0xb7, 0x36, 0xb8, 0x34, 0xb6, 0x32, 0x39, 0x97, 0x37,
  0x38, 0xba, 0xb4, 0x37, 0xb7, 0xb9, 0x29, 0x81, 0x50, 0x85, 0x8d, 0xcd,
  0xae, 0xcd, 0x25, 0x8d, 0xac, 0xcc, 0x8d, 0x6e, 0x4a, 0x40, 0x54, 0x21,
  0xc3, 0x73, 0xb1, 0x2b, 0x93, 0x9b, 0x4b, 0x7b, 0x73, 0x9b, 0x12, 0x1c,
  0x4d, 0xc8, 0xf0, 0x5c, 0xec, 0xc2, 0xd8, 0xec, 0xca, 0xe4, 0xa6, 0x04,
  0x49, 0x1d, 0x32, 0x3c, 0x97, 0x39, 0xb4, 0x30, 0xb2, 0x32, 0xb9, 0xa6,
  0x37, 0xb2, 0x32, 0xb6, 0x29, 0x01, 0x53, 0x86, 0x0c, 0xcf, 0x45, 0xae,
  0x6c, 0xee, 0xad, 0x4e, 0x6e, 0xac, 0x6c, 0x6e, 0x4a, 0x20, 0xd5, 0x21,
  0xc3, 0x73, 0xb1, 0x4b, 0x2b, 0xbb, 0x4b, 0x22, 0x9b, 0xa2, 0x0b, 0xa3,
  0x2b, 0x9b, 0x12, 0x50, 0x75, 0xc8, 0xf0, 0x5c, 0xca, 0xdc, 0xe8, 0xe4,
  0xf2, 0xa0, 0xde, 0xd2, 0xdc, 0xe8, 0xe6, 0xa6, 0x04, 0x71, 0x00, 0x00,
  0x79, 0x18, 0x00, 0x00, 0x4c, 0x00, 0x00, 0x00, 0x33, 0x08, 0x80, 0x1c,
  0xc4, 0xe1, 0x1c, 0x66, 0x14, 0x01, 0x3d, 0x88, 0x43, 0x38, 0x84, 0xc3,
  0x8c, 0x42, 0x80, 0x07, 0x79, 0x78, 0x07, 0x73, 0x98, 0x71, 0x0c, 0xe6,
  0x00, 0x0f, 0xed, 0x10, 0x0e, 0xf4, 0x80, 0x0e, 0x33, 0x0c, 0x42, 0x1e,
  0xc2, 0xc1, 0x1d, 0xce, 0xa1, 0x1c, 0x66, 0x30, 0x05, 0x3d, 0x88, 0x43,
  0x38, 0x84, 0x83, 0x1b, 0xcc, 0x03, 0x3d, 0xc8, 0x43, 0x3d, 0x8c, 0x03,
  0x3d, 0xcc, 0x78, 0x8c, 0x74, 0x70, 0x07, 0x7b, 0x08, 0x07, 0x79, 0x48,
  0x87, 0x70, 0x70, 0x07, 0x7a, 0x70, 0x03, 0x76, 0x78, 0x87, 0x70, 0x20,
  0x87, 0x19, 0xcc, 0x11, 0x0e, 0xec, 0x90, 0x0e, 0xe1, 0x30, 0x0f, 0x6e,
  0x30, 0x0f, 0xe3, 0xf0, 0x0e, 0xf0, 0x50, 0x0e, 0x33, 0x10, 0xc4, 0x1d,
  0xde, 0x21, 0x1c, 0xd8, 0x21, 0x1d, 0xc2, 0x61, 0x1e, 0x66, 0x30, 0x89,
  0x3b, 0xbc, 0x83, 0x3b, 0xd0, 0x43, 0x39, 0xb4, 0x03, 0x3c, 0xbc, 0x83,
  0x3c, 0x84, 0x03, 0x3b, 0xcc, 0xf0, 0x14, 0x76, 0x60, 0x07, 0x7b, 0x68,
  0x07, 0x37, 0x68, 0x87, 0x72, 0x68, 0x07, 0x37, 0x80, 0x87, 0x70, 0x90,
  0x87, 0x70, 0x60, 0x07, 0x76, 0x28, 0x07, 0x76, 0xf8, 0x05, 0x76, 0x78,
  0x87, 0x77, 0x80, 0x87, 0x5f, 0x08, 0x87, 0x71, 0x18, 0x87, 0x72, 0x98,
  0x87, 0x79, 0x98, 0x81, 0x2c, 0xee, 0xf0, 0x0e, 0xee, 0xe0, 0x0e, 0xf5,
  0xc0, 0x0e, 0xec, 0x30, 0x03, 0x62, 0xc8, 0xa1, 0x1c, 0xe4, 0xa1, 0x1c,
  0xcc, 0xa1, 0x1c, 0xe4, 0xa1, 0x1c, 0xdc, 0x61, 0x1c, 0xca, 0x21, 0x1c,
  0xc4, 0x81, 0x1d, 0xca, 0x61, 0x06, 0xd6, 0x90, 0x43, 0x39, 0xc8, 0x43,
  0x39, 0x98, 0x43, 0x39, 0xc8, 0x43, 0x39, 0xb8, 0xc3, 0x38, 0x94, 0x43,
  0x38, 0x88, 0x03, 0x3b, 0x94, 0xc3, 0x2f, 0xbc, 0x83, 0x3c, 0xfc, 0x82,
  0x3b, 0xd4, 0x03, 0x3b, 0xb0, 0xc3, 0x0c, 0xc4, 0x21, 0x07, 0x7c, 0x70,
  0x03, 0x7a, 0x28, 0x87, 0x76, 0x80, 0x87, 0x19, 0xd1, 0x43, 0x0e, 0xf8,
  0xe0, 0x06, 0xe4, 0x20, 0x0e, 0xe7, 0xe0, 0x06, 0xf6, 0x10, 0x0e, 0xf2,
  0xc0, 0x0e, 0xe1, 0x90, 0x0f, 0xef, 0x50, 0x0f, 0xf4, 0x00, 0x00, 0x00,
  0x71, 0x20, 0x00, 0x00, 0x1b, 0x00, 0x00, 0x00, 0x06, 0x40, 0xbd, 0x6c,
  0x47, 0x01, 0x4b, 0x4b, 0x5c, 0x13, 0x15, 0x11, 0xaf, 0x70, 0x3a, 0x9f,
  0x63, 0xd8, 0xc0, 0x36, 0x5c, 0xbe, 0xf3, 0xf8, 0x42, 0x40, 0x15, 0x05,
  0x11, 0x95, 0x0e, 0x30, 0x94, 0x84, 0x01, 0x08, 0x98, 0x5f, 0xdc, 0xb6,
  0x15, 0x48, 0xc3, 0xe5, 0x3b, 0x8f, 0x2f, 0x44, 0x04, 0x30, 0x11, 0x21,
  0xd0, 0x0c, 0x0b, 0x61, 0x01, 0xd3, 0x70, 0xf9, 0xce, 0xe3, 0x2f, 0x0e,
  0x30, 0x88, 0xcd, 0x43, 0x4d, 0x7e, 0x71, 0xdb, 0x26, 0x50, 0x0d, 0x97,
  0xef, 0x3c, 0xbe, 0x34, 0x39, 0x11, 0x81, 0x52, 0xd3, 0x43, 0x4d, 0x7e,
  0x71, 0xdb, 0x46, 0x20, 0x0d, 0x97, 0xef, 0x3c, 0xfe, 0x44, 0x44, 0x13,
  0x02, 0x44, 0x98, 0x5f, 0xdc, 0x36, 0x00, 0x00, 0x61, 0x20, 0x00, 0x00,
  0xb0, 0x00, 0x00, 0x00, 0x13, 0x04, 0x41, 0x2c, 0x10, 0x00, 0x00, 0x00,
  0x05, 0x00, 0x00, 0x00, 0x44, 0x0a, 0xa1, 0x14, 0x66, 0x00, 0x8a, 0xab,
  0xec, 0x4a, 0x8e, 0x4a, 0x09, 0x50, 0x1c, 0x01, 0x00, 0x00, 0x00, 0x00,
  0x23, 0x06, 0x09, 0x00, 0x82, 0x60, 0x20, 0x61, 0x03, 0x63, 0x59, 0xc1,
  0x88, 0x41, 0x02, 0x80, 0x20, 0x18, 0x18, 0x5d, 0x32, 0x5d, 0xcf, 0x31,
  0x62, 0x90, 0x00, 0x20, 0x08, 0x06, 0x86, 0xa7, 0x50, 0x18, 0x81, 0x8c,
  0x18, 0x24, 0x00, 0x08, 0x82, 0x81, 0xf1, 0x2d, 0x55, 0xf6, 0x24, 0x23,
  0x06, 0x09, 0x00, 0x82, 0x60, 0x60, 0x80, 0x01, 0x63, 0x69, 0x8f, 0x32,
  0x62, 0x90, 0x00, 0x20, 0x08, 0x06, 0x46, 0x18, 0x34, 0xd5, 0x36, 0x2d,
  0x23, 0x06, 0x09, 0x00, 0x82, 0x60, 0x60, 0x88, 0x81, 0x63, 0x71, 0x08,
  0x33, 0x62, 0x90, 0x00, 0x20, 0x08, 0x06, 0xc6, 0x18, 0x3c, 0x5e, 0x57,
  0x35, 0x23, 0x06, 0x09, 0x00, 0x82, 0x60, 0x60, 0x90, 0x01, 0xf4, 0x79,
  0x8a, 0x33, 0x62, 0x90, 0x00, 0x20, 0x08, 0x06, 0x46, 0x19, 0x44, 0xdf,
  0x77, 0x3d, 0x23, 0x06, 0x09, 0x00, 0x82, 0x60, 0x60, 0x98, 0x81, 0x04,
  0x06, 0x60, 0xc0, 0x40, 0x23, 0x06, 0x09, 0x00, 0x82, 0x60, 0x60, 0x9c,
  0xc1, 0x14, 0x06, 0x61, 0x70, 0x45, 0x23, 0x06, 0x09, 0x00, 0x82, 0x60,
  0x60, 0xa0, 0x01, 0x25, 0x06, 0x62, 0x70, 0x49, 0x23, 0x06, 0x07, 0x00,
  0x82, 0x60, 0xd0, 0x9c, 0x41, 0xd4, 0x7c, 0xa3, 0x09, 0x01, 0x30, 0x9a,
  0x20, 0x04, 0xa3, 0x09, 0x83, 0x30, 0x9a, 0x40, 0x0c, 0x23, 0x06, 0x07,
  0x00, 0x82, 0x60, 0xd0, 0xb0, 0x81, 0x25, 0x69, 0xa3, 0x09, 0x01, 0x30,
  0x9a, 0x20, 0x04, 0xa3, 0x09, 0x83, 0x30, 0x9a, 0x40, 0x0c, 0x23, 0x06,
  0x07, 0x00, 0x82, 0x60, 0xd0, 0xc4, 0xc1, 0x76, 0x79, 0xa3, 0x09, 0x01,
  0x30, 0x9a, 0x20, 0x04, 0xa3, 0x09, 0x83, 0x30, 0x9a, 0x40, 0x0c, 0x23,
  0x06, 0x07, 0x00, 0x82, 0x60, 0xd0, 0xd8, 0x01, 0x18, 0x70, 0x70, 0x30,
  0x9a, 0x10, 0x00, 0xa3, 0x09, 0x42, 0x30, 0x9a, 0x30, 0x08, 0xa3, 0x09,
  0xc4, 0x60, 0x13, 0x26, 0x9f, 0x11, 0x03, 0x04, 0x00, 0x41, 0x30, 0x78,
  0xf6, 0xe0, 0x0c, 0xb0, 0x29, 0x18, 0x31, 0x40, 0x00, 0x10, 0x04, 0x83,
  0x87, 0x0f, 0xd0, 0x00, 0x9b, 0x82, 0x11, 0x03, 0x04, 0x00, 0x41, 0x30,
  0x78, 0xfa, 0x20, 0x0d, 0xb0, 0x29, 0x30, 0x89, 0x93, 0xcf, 0x88, 0x01,
  0x02, 0x80, 0x20, 0x18, 0x3c, 0x7f, 0xb0, 0x06, 0x9c, 0x14, 0x8c, 0x18,
  0x20, 0x00, 0x08, 0x82, 0xc1, 0x03, 0x0a, 0x6c, 0xc0, 0x49, 0xc1, 0x88,
  0x01, 0x02, 0x80, 0x20, 0x18, 0x3c, 0xa1, 0xd0, 0x06, 0x9c, 0x14, 0x58,
  0x04, 0x06, 0xf2, 0x19, 0x31, 0x40, 0x00, 0x10, 0x04, 0x83, 0x67, 0x14,
  0xde, 0x00, 0x0c, 0xa2, 0x60, 0xc4, 0x00, 0x01, 0x40, 0x10, 0x0c, 0x1e,
  0x52, 0x80, 0x03, 0x30, 0x88, 0x82, 0x11, 0x03, 0x04, 0x00, 0x41, 0x30,
  0x78, 0x4a, 0x21, 0x0e, 0xc0, 0x20, 0x0a, 0x0c, 0x22, 0x03, 0xf9, 0x8c,
  0x18, 0x20, 0x00, 0x08, 0x82, 0xc1, 0x73, 0x0a, 0x73, 0x40, 0x06, 0x50,
  0x30, 0x62, 0x80, 0x00, 0x20, 0x08, 0x06, 0x0f, 0x2a, 0xd0, 0x01, 0x19,
  0x40, 0xc1, 0x88, 0x01, 0x02, 0x80, 0x20, 0x18, 0x3c, 0xa9, 0x50, 0x07,
  0x64, 0x00, 0x05, 0x23, 0x06, 0x07, 0x00, 0x82, 0x60, 0xd0, 0xac, 0x42,
  0x1d, 0xc4, 0xc1, 0x29, 0x8c, 0x26, 0x04, 0xc0, 0x68, 0x82, 0x10, 0x8c,
  0x26, 0x0c, 0xc2, 0x68, 0x02, 0x31, 0x18, 0x51, 0x07, 0xf2, 0x31, 0xa2,
  0x0e, 0xe4, 0x63, 0x44, 0x1d, 0xc8, 0xc7, 0x88, 0x3a, 0x90, 0xcf, 0x88,
  0x41, 0x02, 0x80, 0x20, 0x18, 0x20, 0xb5, 0x10, 0x0a, 0xb0, 0x00, 0x0b,
  0xa8, 0x40, 0x8c, 0x18, 0x24, 0x00, 0x08, 0x82, 0x01, 0x52, 0x0b, 0xa1,
  0x00, 0x0b, 0xb0, 0xc0, 0x07, 0xc3, 0x88, 0x41, 0x02, 0x80, 0x20, 0x18,
  0x20, 0xb5, 0x10, 0x0a, 0xb0, 0x00, 0x0b, 0xa6, 0x20, 0x8c, 0x18, 0x24,
  0x00, 0x08, 0x82, 0x01, 0x52, 0x0b, 0xa1, 0x00, 0x0b, 0xb0, 0x50, 0x0a,
  0xc1, 0x88, 0x41, 0x02, 0x80, 0x20, 0x18, 0x20, 0xb5, 0x10, 0x0a, 0xb1,
  0x00, 0x0b, 0xa8, 0x30, 0x07, 0x23, 0x06, 0x09, 0x00, 0x82, 0x60, 0x80,
  0xd4, 0x42, 0x28, 0xc4, 0x02, 0x2c, 0xf0, 0x81, 0x1c, 0x8c, 0x18, 0x24,
  0x00, 0x08, 0x82, 0x01, 0x52, 0x0b, 0xa1, 0xa0, 0x0a, 0xb0, 0x80, 0x0a,
  0x75, 0x30, 0x62, 0x90, 0x00, 0x20, 0x08, 0x06, 0x48, 0x2d, 0x84, 0x82,
  0x2a, 0xc0, 0x02, 0x1f, 0xd0, 0xc1, 0x88, 0x41, 0x02, 0x80, 0x20, 0x18,
  0x20, 0xb5, 0x10, 0x0a, 0xac, 0x00, 0x0b, 0xa8, 0x60, 0x8d, 0x18, 0x24,
  0x00, 0x08, 0x82, 0x01, 0x52, 0x0b, 0xa1, 0xc0, 0x0a, 0xb0, 0xc0, 0x07,
  0xd2, 0x88, 0x41, 0x02, 0x80, 0x20, 0x18, 0x20, 0xb5, 0x10, 0x0a, 0xac,
  0x00, 0x0b, 0xa6, 0xe0, 0x8c, 0x18, 0x24, 0x00, 0x08, 0x82, 0x01, 0x52,
  0x0b, 0xa1, 0xc0, 0x0a, 0xb0, 0x50, 0x0a, 0x0a, 0x02, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x44, 0xe0, 0x95, 0x5e, 0x43, 0x0f, 0x0a, 0xad,
  0xf6, 0x6e, 0x4b, 0xe8, 0x84, 0xb1, 0x72, 0x91, 0x17, 0x00, 0x01, 0x00,
  0x20, 0x08, 0x16, 0x00, 0x78, 0x01, 0xed, 0x98, 0xbb, 0x4a, 0x04, 0x31,
  0x18, 0x85, 0xff, 0x64, 0xb2, 0x99, 0xec, 0x18, 0xb3, 0xe3, 0x7a, 0x29,
  0xb4, 0xf0, 0x82, 0x58, 0x88, 0x85, 0x3e, 0x80, 0x17, 0xd0, 0xce, 0xc2,
  0x37, 0xf0, 0x11, 0x44, 0x7c, 0x82, 0xf5, 0x52, 0xac, 0x60, 0x23, 0xe8,
  0x1b, 0x58, 0x79, 0x29, 0x04, 0x4b, 0xd9, 0xf5, 0x02, 0xda, 0xac, 0xf8,
  0x0a, 0xda, 0xf9, 0x00, 0x22, 0x76, 0xeb, 0x7f, 0xc2, 0x8c, 0xe2, 0xb0,
  0xb6, 0x0a, 0x92, 0x0f, 0xce, 0x49, 0xf2, 0xef, 0x64, 0x66, 0x92, 0xec,
  0x34, 0xc7, 0x0c, 0x90, 0x67, 0xe8, 0x79, 0xf5, 0x1e, 0xed, 0xc5, 0xf1,
  0x5d, 0xfa, 0x6a, 0x88, 0x4a, 0x18, 0x30, 0x0a, 0xc6, 0xac, 0xf7, 0xc1,
  0x89, 0x8e, 0xfa, 0xe1, 0x44, 0x09, 0x2c, 0x03, 0x3f, 0x65, 0xb7, 0xa1,
  0x05, 0x58, 0x86, 0x80, 0x51, 0x6d, 0x8e, 0x35, 0x8f, 0x5e, 0x11, 0xcd,
  0xc2, 0x5c, 0xa8, 0x88, 0x84, 0x75, 0x20, 0x82, 0x15, 0xc0, 0x73, 0x72,
  0x15, 0xd9, 0xad, 0xd7, 0x67, 0xb9, 0x59, 0x62, 0xd1, 0xc9, 0xf1, 0xa4,
  0x7f, 0x8f, 0x87, 0x56, 0x0b, 0x35, 0x8c, 0xf9, 0xdd, 0xfe, 0x17, 0xf9,
  0x39, 0x81, 0x03, 0x58, 0x81, 0x7c, 0x5f, 0x55, 0x76, 0x8e, 0x38, 0x03,
  0x30, 0x95, 0x8d, 0x31, 0x1d, 0x67, 0x79, 0xc5, 0xea, 0xb4, 0x9f, 0xa0,
  0xcd, 0xa0, 0xed, 0x04, 0xfe, 0x2f, 0x9a, 0x56, 0xa6, 0xb5, 0xd8, 0x4e,
  0xb5, 0xbc, 0x4d, 0x75, 0x54, 0x99, 0xe1, 0xd2, 0xaf, 0x82, 0x35, 0xe6,
  0xeb, 0xd2, 0xe2, 0xa7, 0x55, 0xfc, 0x6f, 0xb0, 0x07, 0x55, 0x16, 0x40,
  0x3f, 0xff, 0x8e, 0x01, 0x7f, 0xde, 0x81, 0x40, 0x20, 0x10, 0x08, 0x04,
  0x02, 0x81, 0x40, 0x20, 0x10, 0x08, 0x04, 0x02, 0x7f, 0xcf, 0x68, 0xad,
  0x61, 0xda, 0xa2, 0x4e, 0x94, 0x52, 0x1c, 0xd5, 0x1a, 0xd7, 0xd1, 0x56,
  0xa3, 0x1d, 0x6d, 0x37, 0x4e, 0x57, 0x24, 0x91, 0xa8, 0xdf, 0x58, 0x41,
  0xb7, 0xeb, 0xb4, 0xd7, 0x24, 0x43, 0x4e, 0x19, 0xe9, 0x8c, 0x51, 0xce,
  0x1a, 0xed, 0x44, 0x42, 0xb6, 0x94, 0x48, 0x5b, 0x4e, 0x94, 0xed, 0x4e,
  0xb4, 0x95, 0x96, 0x2c, 0x3c, 0xb1, 0xca, 0x3a, 0xee, 0x45, 0x8e, 0x6c,
  0xec, 0xa4, 0xed, 0x72, 0xca, 0x56, 0x9c, 0xb6, 0x8f, 0x86, 0xde, 0x49,
  0xc8, 0x28, 0x1d, 0x31, 0xae, 0x67, 0x2c, 0x71, 0xd5, 0x71, 0xeb, 0x7a,
  0x27, 0x9c, 0xab, 0x48, 0x7a, 0x57, 0x25, 0x1d, 0x0f, 0x73, 0x6b, 0xca,
  0xb6, 0x9b, 0x68, 0xb3, 0xe9, 0x23, 0xb2, 0x42, 0x9c, 0x94, 0xc2, 0x0a,
  0xb5, 0x41, 0x98, 0xf0, 0x49, 0xe5, 0x34, 0x0c, 0xa0, 0x26, 0x84, 0x4f,
  0x61, 0xbe, 0x6a, 0x3c, 0x4f, 0x0a, 0x9f, 0xb4, 0x7e, 0xab, 0x45, 0xc2,
  0xa7, 0x57, 0x5f, 0x35, 0x96, 0x92, 0x31, 0x9e, 0xf5, 0x19, 0xaf, 0xfa,
  0x4c, 0x47, 0xc5, 0xec, 0xdf, 0x22, 0x57, 0xcf, 0x65, 0x96, 0xe5, 0x8d,
  0xb3, 0xca, 0x2c, 0x91, 0xa5, 0xa6, 0xb8, 0x5a, 0x65, 0xc9, 0xd8, 0xd2,
  0xd3, 0xe1, 0xea, 0x62, 0x25, 0x39, 0x7b, 0x5b, 0x5b, 0x7e, 0xd9, 0x39,
  0xdf, 0xd8, 0xff, 0x00, 0x4c, 0x1a, 0x3b, 0x54, 0x17, 0x00, 0x01, 0x00,
  0x10, 0x80, 0x16, 0x00, 0x78, 0x01, 0xed, 0x98, 0xb1, 0x6e, 0xd4, 0x40,
  0x14, 0x45, 0x9f, 0xc7, 0xb3, 0xb3, 0x33, 0xd6, 0xf3, 0xac, 0x09, 0x9b,
  0xb0, 0x09, 0x11, 0x0a, 0x68, 0x05, 0x14, 0x14, 0x41, 0xa2, 0x05, 0x06,
  0x11, 0x2a, 0x8a, 0x34, 0xd4, 0xfc, 0x41, 0xa2, 0x15, 0xfc, 0x80, 0x03,
  0x14, 0x14, 0x11, 0x88, 0x22, 0xca, 0x0f, 0x20, 0x21, 0x21, 0x28, 0x40,
  0xd4, 0x4e, 0x20, 0x12, 0x9f, 0x11, 0xa5, 0xa0, 0xe0, 0x03, 0x10, 0xed,
  0xf2, 0xae, 0x65, 0x13, 0xad, 0x15, 0x09, 0x1a, 0x28, 0x60, 0x8e, 0x74,
  0xef, 0x5d, 0xbf, 0xdd, 0x59, 0x8f, 0xd7, 0xde, 0xe6, 0x96, 0x0b, 0x54,
  0x73, 0xe7, 0xe1, 0xe6, 0x7b, 0xe4, 0x87, 0xd7, 0x9f, 0x8b, 0x6f, 0x96,
  0xa8, 0x87, 0x03, 0x41, 0xc1, 0x84, 0xc9, 0x10, 0x4e, 0xb4, 0xdc, 0x7c,
  0x3e, 0x83, 0x35, 0xe0, 0xad, 0x73, 0x22, 0x10, 0x60, 0x0d, 0x09, 0x8c,
  0xca, 0x1b, 0xa2, 0x9b, 0x78, 0xd5, 0xa5, 0x2f, 0xc2, 0x5a, 0xa8, 0x4b,
  0x2a, 0xe2, 0x46, 0xbf, 0x02, 0xe7, 0x69, 0xd5, 0x65, 0xe3, 0xf0, 0xd5,
  0x75, 0x89, 0x35, 0x11, 0xed, 0xf2, 0xad, 0x99, 0x7d, 0x6c, 0x1c, 0x5e,
  0x92, 0xbd, 0xfd, 0x5b, 0xb4, 0xf7, 0x09, 0x7c, 0x81, 0x75, 0xd0, 0x30,
  0xe1, 0xde, 0x3c, 0x9c, 0xc8, 0xc0, 0x84, 0x97, 0xcd, 0x31, 0x96, 0xe3,
  0x5e, 0xee, 0x8b, 0x4e, 0xfa, 0x3d, 0xc1, 0x54, 0x40, 0x9e, 0x04, 0xbe,
  0xdf, 0xd0, 0xfa, 0xaa, 0x49, 0x1e, 0x17, 0x46, 0x1d, 0x14, 0x26, 0x1d,
  0x5c, 0x95, 0xd1, 0x5f, 0x05, 0xcf, 0x4e, 0x7b, 0x5d, 0x26, 0x69, 0xae,
  0x42, 0xb5, 0x4f, 0xf2, 0xff, 0x01, 0x7e, 0x83, 0x39, 0x51, 0x4b, 0x7b,
  0xdf, 0xc1, 0xef, 0xfe, 0xaf, 0x22, 0x91, 0x48, 0x24, 0x12, 0x89, 0x44,
  0x22, 0x91, 0x48, 0x24, 0x12, 0x89, 0x44, 0xfe, 0x28, 0xe7, 0xcb, 0xaa,
  0x4c, 0xb7, 0x2a, 0x3b, 0xcd, 0x9f, 0x12, 0x15, 0xd4, 0x4f, 0xb7, 0xab,
  0x8f, 0xe9, 0xb3, 0x6a, 0x9a, 0x3e, 0xaf, 0xde, 0xac, 0x2b, 0xb2, 0x49,
  0xb9, 0x4f, 0xf9, 0xa3, 0x4f, 0x9c, 0x9b, 0x83, 0x09, 0x6d, 0xef, 0xb1,
  0x25, 0x5f, 0x58, 0xe5, 0x87, 0x56, 0xfb, 0x91, 0x35, 0x3e, 0xcf, 0x88,
  0x4f, 0x65, 0x8a, 0xe7, 0x33, 0xcd, 0x8b, 0x99, 0x61, 0xcf, 0xc4, 0x73,
  0xac, 0x78, 0x81, 0x35, 0x2f, 0xb1, 0xe1, 0x81, 0x27, 0x3e, 0xed, 0x15,
  0x9f, 0xf1, 0x9a, 0xcf, 0x7a, 0xc3, 0x7a, 0xc5, 0xfa, 0xde, 0x85, 0xcc,
  0x9b, 0x31, 0xfb, 0xfe, 0x45, 0xef, 0x57, 0xc2, 0xe4, 0x88, 0x28, 0xb8,
  0x31, 0x32, 0x09, 0xee, 0x32, 0x52, 0x05, 0x77, 0x05, 0x99, 0x06, 0x47,
  0x48, 0x1d, 0x9c, 0x46, 0xf6, 0x82, 0xb3, 0x48, 0x13, 0x1c, 0x23, 0xfb,
  0xc1, 0x15, 0x48, 0x1b, 0xdc, 0x10, 0xe9, 0x82, 0x1b, 0x21, 0x39, 0xb8,
  0x65, 0x64, 0x2e, 0xeb, 0x69, 0x6b, 0xaf, 0xae, 0xdc, 0x3a, 0x25, 0xdb,
  0x22, 0xac, 0x33, 0x1b, 0xc1, 0x3a, 0xb3, 0x02, 0xd6, 0x99, 0x2d, 0xc1,
  0x12, 0x34, 0x3f, 0xb4, 0x0a, 0x03, 0x98, 0x25, 0x49, 0xdd, 0xfe, 0x1c,
  0xcf, 0x64, 0x9d, 0x4a, 0xea, 0x86, 0x77, 0x66, 0x96, 0x26, 0x75, 0x6b,
  0x76, 0x3c, 0x13, 0x69, 0xd5, 0xc7, 0xb9, 0x7e, 0xd6, 0xba, 0x68, 0xd1,
  0xb4, 0x46, 0x73, 0x3b, 0x53, 0xf5, 0xd6, 0x5c, 0x6b, 0xba, 0xe1, 0xb1,
  0x48, 0x2e, 0x50, 0xb6, 0x57, 0xef, 0xa5, 0xee, 0x79, 0x75, 0xd3, 0xc8,
  0xad, 0x1d, 0xed, 0xdc, 0xbf, 0x3d, 0xc8, 0xde, 0x7e, 0xdf, 0xbc, 0xfb,
  0xf5, 0xc9, 0xbb, 0x07, 0x2f, 0x7e, 0x00, 0x31, 0x44, 0x50, 0x30, 0x00,
  0x17, 0x00, 0x01, 0x00, 0x00, 0x24, 0x16, 0x00, 0x78, 0x01, 0xed, 0x98,
  0xbd, 0x4a, 0x1c, 0x51, 0x1c, 0xc5, 0xff, 0xf7, 0x63, 0xef, 0x8c, 0x37,
  0xe3, 0xec, 0xf8, 0x15, 0xc1, 0x26, 0xc6, 0x2c, 0x56, 0x16, 0x6b, 0x67,
  0x63, 0x14, 0xb4, 0x10, 0x2c, 0x7c, 0x03, 0xc1, 0x26, 0x65, 0x10, 0xc9,
  0x03, 0x6c, 0xd4, 0xc2, 0x42, 0x90, 0x20, 0x3e, 0x80, 0xad, 0x28, 0x18,
  0x48, 0x29, 0xa3, 0xae, 0x90, 0x07, 0x10, 0xf1, 0xa3, 0x11, 0x4b, 0x1f,
  0x40, 0x53, 0x05, 0xd6, 0xff, 0x99, 0xdc, 0x71, 0x77, 0x87, 0x4d, 0x9b,
  0xc0, 0x72, 0x7f, 0x70, 0xce, 0xdd, 0x7b, 0x86, 0xb9, 0x77, 0xe7, 0xce,
  0x54, 0xa7, 0xf2, 0x96, 0x32, 0xae, 0xee, 0x3f, 0xed, 0x63, 0xfc, 0x71,
  0xf0, 0x33, 0x79, 0x0a, 0x89, 0x4a, 0x98, 0xb4, 0xb0, 0x3a, 0x08, 0x27,
  0x3a, 0x1b, 0x82, 0x13, 0x59, 0x98, 0x03, 0x97, 0xdc, 0x32, 0x34, 0x0b,
  0x73, 0x08, 0x18, 0xd5, 0x3e, 0xb2, 0x66, 0xf0, 0xab, 0x48, 0xc0, 0xc2,
  0x72, 0x6e, 0xc9, 0x36, 0x24, 0xac, 0x05, 0x05, 0xfb, 0x0b, 0xd8, 0x27,
  0x57, 0x91, 0x93, 0x2f, 0xbb, 0xd3, 0x3c, 0xcc, 0xb3, 0xc8, 0xde, 0x7c,
  0x98, 0xd9, 0xa9, 0x3f, 0x63, 0x9e, 0x31, 0x19, 0x4e, 0xf0, 0x7f, 0xeb,
  0x2e, 0xf2, 0xf7, 0x04, 0x8e, 0x61, 0x05, 0xf2, 0x73, 0x1d, 0x75, 0x87,
  0x6e, 0x60, 0xcc, 0x82, 0x9b, 0xe7, 0xef, 0xf2, 0x8c, 0xd5, 0xe9, 0x3c,
  0x41, 0x83, 0xc1, 0xd8, 0x09, 0xcd, 0x32, 0xb4, 0x54, 0x35, 0x62, 0x23,
  0x31, 0xf2, 0x22, 0x31, 0xaa, 0x3c, 0xc9, 0xd1, 0x3f, 0x05, 0xdf, 0x4a,
  0xfe, 0x5c, 0x46, 0xb8, 0xa7, 0x90, 0xc5, 0x2f, 0xaa, 0xbb, 0xc1, 0x19,
  0xf4, 0xb3, 0x72, 0xf0, 0x5e, 0x00, 0x4e, 0x23, 0x62, 0x81, 0x2a, 0xcc,
  0xe3, 0xf1, 0x78, 0x3c, 0x1e, 0x8f, 0xc7, 0xe3, 0xf1, 0x78, 0x3c, 0x1e,
  0x8f, 0xe7, 0x7f, 0xf1, 0xbe, 0x96, 0x86, 0x0d, 0xb1, 0x45, 0x94, 0x50,
  0xa0, 0x6a, 0xe9, 0xb9, 0x5a, 0x4f, 0x1b, 0x6a, 0x23, 0x3d, 0x5c, 0x92,
  0x44, 0x62, 0xab, 0x1e, 0x09, 0xba, 0x38, 0x57, 0xbf, 0xd3, 0x55, 0xda,
  0x3e, 0xa5, 0x90, 0x62, 0x61, 0x29, 0x92, 0x11, 0x8b, 0x6a, 0x97, 0x41,
  0x40, 0x5a, 0x73, 0x56, 0xe2, 0xcc, 0x70, 0xa6, 0x90, 0x95, 0x49, 0x87,
  0x9c, 0xf5, 0x70, 0x66, 0x39, 0xb3, 0xc8, 0x86, 0x49, 0x47, 0x9c, 0xf5,
  0x72, 0x16, 0x73, 0x66, 0xe8, 0xfa, 0x52, 0xac, 0x08, 0x7a, 0x83, 0x6b,
  0xef, 0x48, 0x27, 0xa3, 0x61, 0xdc, 0x37, 0x66, 0xe3, 0xfe, 0x0a, 0xc5,
  0x03, 0xe3, 0x32, 0xd6, 0xa5, 0xa9, 0x3b, 0x23, 0x2d, 0xef, 0xcf, 0xa3,
  0x26, 0x92, 0x8a, 0xc7, 0x10, 0x6d, 0xca, 0xd7, 0xd3, 0xac, 0x3e, 0x73,
  0x55, 0x53, 0x4e, 0x02, 0x2b, 0x64, 0x23, 0x30, 0x81, 0x76, 0xa6, 0x59,
  0xbf, 0x20, 0x13, 0x22, 0x6b, 0x68, 0x9a, 0x19, 0xdf, 0x27, 0x45, 0xd6,
  0xc2, 0xb6, 0x65, 0x4a, 0x64, 0xcd, 0x56, 0x33, 0x63, 0x69, 0x19, 0x60,
  0xaf, 0xd7, 0xea, 0x15, 0x4d, 0x97, 0xd6, 0x68, 0x57, 0xdb, 0xea, 0xd8,
  0x8c, 0x5b, 0xd7, 0xf3, 0x55, 0x58, 0x3d, 0x2c, 0x91, 0x35, 0x45, 0x7f,
  0xba, 0x58, 0xed, 0x5a, 0xb3, 0xf9, 0x87, 0xbd, 0xe5, 0xb9, 0xb2, 0x3d,
  0xfa, 0xf5, 0x79, 0xf1, 0x71, 0xf3, 0xfb, 0xda, 0xb7, 0x17, 0xa9, 0xb1,
  0x44, 0x18, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x03, 0x01, 0x08, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x01, 0x04, 0x03,
  0x04, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x05, 0x05, 0x08, 0x02, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x03, 0x01, 0x06, 0x07, 0x04, 0x02, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x02, 0x07, 0x08,
  0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xcc, 0x00, 0x00,
  0x78, 0x01, 0x6d, 0xcc, 0xb1, 0x11, 0x40, 0x40, 0x10, 0x46, 0xe1, 0x1f,
  0xa3, 0x07, 0x89, 0xae, 0x2e, 0x54, 0x84, 0x50, 0x11, 0x42, 0x45, 0x08,
  0x15, 0x21, 0xd4, 0x13, 0xef, 0x05, 0x9b, 0x79, 0x33, 0xdf, 0xdc, 0xba,
  0x9d, 0xd3, 0x25, 0x19, 0x31, 0xc1, 0x1e, 0xcc, 0x30, 0xef, 0x1b, 0xcc,
  0x79, 0x85, 0x39, 0xef, 0x30, 0xe7, 0x13, 0x3d, 0xec, 0x86, 0xff, 0x5c,
  0x60, 0xce, 0xd5, 0x4b, 0x7e, 0x6f, 0x18, 0xf0, 0xb7, 0x3b, 0x60, 0xce,
  0xb2, 0xda, 0x5d, 0xa8, 0x77, 0x32, 0x77, 0x9e, 0x49, 0xf2, 0x01, 0x2b,
  0xfe, 0x15, 0xf2, 0x00, 0x78, 0x62, 0x6f, 0x70, 0x01, 0x00, 0x00, 0x00,
  0x7e, 0x02, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00
};
