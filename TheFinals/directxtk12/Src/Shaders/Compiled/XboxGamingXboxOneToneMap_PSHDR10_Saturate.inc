#if 0
;
; Input signature:
;
; Name                 Index   Mask Register SysValue  Format   Used
; -------------------- ----- ------ -------- -------- ------- ------
; SV_Position              0   xyzw        0      POS   float       
; TEXCOORD                 0   xy          1     NONE   float   xy  
;
;
; Output signature:
;
; Name                 Index   Mask Register SysValue  Format   Used
; -------------------- ----- ------ -------- -------- ------- ------
; SV_Target                0   xyzw        0   TARGET   float   xyzw
; SV_Target                1   xyzw        1   TARGET   float   xyzw
;
; shader debug name: C:\Users\marcu\Downloads\DirectXTK12-main\DirectXTK12-main\Src/Shaders/Compiled\XboxGamingXboxOneToneMap_PSHDR10_Saturate.pdb
; shader hash: fa61521dc6a78ba9464317a0a759e2e4
;
; Pipeline Runtime Information: 
;
;PSVRuntimeInfo:
; Pixel Shader
; DepthOutput=0
; SampleFrequency=0
; MinimumExpectedWaveLaneCount: 0
; MaximumExpectedWaveLaneCount: 4294967295
; UsesViewID: false
; SigInputElements: 2
; SigOutputElements: 2
; SigPatchConstOrPrimElements: 0
; SigInputVectors: 2
; SigOutputVectors[0]: 2
; SigOutputVectors[1]: 0
; SigOutputVectors[2]: 0
; SigOutputVectors[3]: 0
; EntryFunctionName: PSHDR10_Saturate
;
;
; Input signature:
;
; Name                 Index             InterpMode DynIdx
; -------------------- ----- ---------------------- ------
; SV_Position              0          noperspective       
; TEXCOORD                 0                 linear       
;
; Output signature:
;
; Name                 Index             InterpMode DynIdx
; -------------------- ----- ---------------------- ------
; SV_Target                0                              
; SV_Target                1                              
;
; Buffer Definitions:
;
; cbuffer 
; {
;
;   [64 x i8] (type annotation not present)
;
; }
;
;
; Resource Bindings:
;
; Name                                 Type  Format         Dim      ID      HLSL Bind  Count
; ------------------------------ ---------- ------- ----------- ------- -------------- ------
;                                   cbuffer      NA          NA     CB0            cb0     1
;                                   sampler      NA          NA      S0             s0     1
;                                   texture     f32          2d      T0             t0     1
;
;
; ViewId state:
;
; Number of inputs: 6, outputs: 8
; Outputs dependent on ViewId: {  }
; Inputs contributing to computation of Outputs:
;   output 0 depends on inputs: { 4, 5 }
;   output 1 depends on inputs: { 4, 5 }
;   output 2 depends on inputs: { 4, 5 }
;   output 3 depends on inputs: { 4, 5 }
;   output 4 depends on inputs: { 4, 5 }
;   output 5 depends on inputs: { 4, 5 }
;   output 6 depends on inputs: { 4, 5 }
;   output 7 depends on inputs: { 4, 5 }
;
target datalayout = "e-m:e-p:32:32-i1:32-i8:32-i16:32-i32:32-i64:64-f16:32-f32:32-f64:64-n8:16:32:64"
target triple = "dxil-ms-xb1"

%dx.types.Handle = type { i8* }
%dx.types.ResRet.f32 = type { float, float, float, float, i32 }
%dx.types.CBufRet.f32 = type { float, float, float, float }
%"class.Texture2D<vector<float, 4> >" = type { <4 x float>, %"class.Texture2D<vector<float, 4> >::mips_type" }
%"class.Texture2D<vector<float, 4> >::mips_type" = type { i32 }
%hostlayout.Parameters = type { float, float, [3 x <4 x float>] }
%struct.SamplerState = type { i32 }

define void @PSHDR10_Saturate() {
  %1 = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 0, i32 0, i32 0, i1 false)  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %2 = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 3, i32 0, i32 0, i1 false)  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %3 = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 2, i32 0, i32 0, i1 false)  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %4 = call float @dx.op.loadInput.f32(i32 4, i32 1, i32 0, i8 0, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %5 = call float @dx.op.loadInput.f32(i32 4, i32 1, i32 0, i8 1, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %6 = call %dx.types.ResRet.f32 @dx.op.sample.f32(i32 60, %dx.types.Handle %1, %dx.types.Handle %2, float %4, float %5, float undef, float undef, i32 0, i32 0, i32 undef, float undef)  ; Sample(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,clamp)
  %7 = extractvalue %dx.types.ResRet.f32 %6, 0
  %8 = extractvalue %dx.types.ResRet.f32 %6, 1
  %9 = extractvalue %dx.types.ResRet.f32 %6, 2
  %10 = extractvalue %dx.types.ResRet.f32 %6, 3
  %11 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %3, i32 1)  ; CBufferLoadLegacy(handle,regIndex)
  %12 = extractvalue %dx.types.CBufRet.f32 %11, 0
  %13 = extractvalue %dx.types.CBufRet.f32 %11, 1
  %14 = extractvalue %dx.types.CBufRet.f32 %11, 2
  %15 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %3, i32 2)  ; CBufferLoadLegacy(handle,regIndex)
  %16 = extractvalue %dx.types.CBufRet.f32 %15, 0
  %17 = extractvalue %dx.types.CBufRet.f32 %15, 1
  %18 = extractvalue %dx.types.CBufRet.f32 %15, 2
  %19 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %3, i32 3)  ; CBufferLoadLegacy(handle,regIndex)
  %20 = extractvalue %dx.types.CBufRet.f32 %19, 0
  %21 = extractvalue %dx.types.CBufRet.f32 %19, 1
  %22 = extractvalue %dx.types.CBufRet.f32 %19, 2
  %23 = fmul fast float %12, %7
  %24 = call float @dx.op.tertiary.f32(i32 46, float %8, float %13, float %23)  ; FMad(a,b,c)
  %25 = call float @dx.op.tertiary.f32(i32 46, float %9, float %14, float %24)  ; FMad(a,b,c)
  %26 = fmul fast float %16, %7
  %27 = call float @dx.op.tertiary.f32(i32 46, float %8, float %17, float %26)  ; FMad(a,b,c)
  %28 = call float @dx.op.tertiary.f32(i32 46, float %9, float %18, float %27)  ; FMad(a,b,c)
  %29 = fmul fast float %20, %7
  %30 = call float @dx.op.tertiary.f32(i32 46, float %8, float %21, float %29)  ; FMad(a,b,c)
  %31 = call float @dx.op.tertiary.f32(i32 46, float %9, float %22, float %30)  ; FMad(a,b,c)
  %32 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %3, i32 0)  ; CBufferLoadLegacy(handle,regIndex)
  %33 = extractvalue %dx.types.CBufRet.f32 %32, 1
  %34 = fmul fast float %25, 0x3F1A36E2E0000000
  %35 = fmul fast float %34, %33
  %36 = fmul fast float %28, 0x3F1A36E2E0000000
  %37 = fmul fast float %36, %33
  %38 = fmul fast float %31, 0x3F1A36E2E0000000
  %39 = fmul fast float %38, %33
  %40 = call float @dx.op.unary.f32(i32 6, float %35)  ; FAbs(value)
  %41 = call float @dx.op.unary.f32(i32 6, float %37)  ; FAbs(value)
  %42 = call float @dx.op.unary.f32(i32 6, float %39)  ; FAbs(value)
  %43 = call float @dx.op.unary.f32(i32 23, float %40)  ; Log(value)
  %44 = call float @dx.op.unary.f32(i32 23, float %41)  ; Log(value)
  %45 = call float @dx.op.unary.f32(i32 23, float %42)  ; Log(value)
  %46 = fmul fast float %43, 0x3FC4640000000000
  %47 = fmul fast float %44, 0x3FC4640000000000
  %48 = fmul fast float %45, 0x3FC4640000000000
  %49 = call float @dx.op.unary.f32(i32 21, float %46)  ; Exp(value)
  %50 = call float @dx.op.unary.f32(i32 21, float %47)  ; Exp(value)
  %51 = call float @dx.op.unary.f32(i32 21, float %48)  ; Exp(value)
  %52 = fmul fast float %49, 0x4032DA0000000000
  %53 = fmul fast float %50, 0x4032DA0000000000
  %54 = fmul fast float %51, 0x4032DA0000000000
  %55 = fadd fast float %52, 8.359375e-01
  %56 = fadd fast float %53, 8.359375e-01
  %57 = fadd fast float %54, 8.359375e-01
  %58 = fmul fast float %49, 1.868750e+01
  %59 = fmul fast float %50, 1.868750e+01
  %60 = fmul fast float %51, 1.868750e+01
  %61 = fadd fast float %58, 1.000000e+00
  %62 = fadd fast float %59, 1.000000e+00
  %63 = fadd fast float %60, 1.000000e+00
  %64 = fdiv fast float %55, %61
  %65 = fdiv fast float %56, %62
  %66 = fdiv fast float %57, %63
  %67 = call float @dx.op.unary.f32(i32 23, float %64)  ; Log(value)
  %68 = call float @dx.op.unary.f32(i32 23, float %65)  ; Log(value)
  %69 = call float @dx.op.unary.f32(i32 23, float %66)  ; Log(value)
  %70 = fmul fast float %67, 7.884375e+01
  %71 = fmul fast float %68, 7.884375e+01
  %72 = fmul fast float %69, 7.884375e+01
  %73 = call float @dx.op.unary.f32(i32 21, float %70)  ; Exp(value)
  %74 = call float @dx.op.unary.f32(i32 21, float %71)  ; Exp(value)
  %75 = call float @dx.op.unary.f32(i32 21, float %72)  ; Exp(value)
  %76 = extractvalue %dx.types.CBufRet.f32 %32, 0
  %77 = fmul fast float %76, %7
  %78 = fmul fast float %76, %8
  %79 = fmul fast float %76, %9
  %80 = call float @dx.op.unary.f32(i32 7, float %77)  ; Saturate(value)
  %81 = call float @dx.op.unary.f32(i32 7, float %78)  ; Saturate(value)
  %82 = call float @dx.op.unary.f32(i32 7, float %79)  ; Saturate(value)
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 0, float %73)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 1, float %74)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 2, float %75)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 3, float %10)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 1, i32 0, i8 0, float %80)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 1, i32 0, i8 1, float %81)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 1, i32 0, i8 2, float %82)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 1, i32 0, i8 3, float %10)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  ret void
}

; Function Attrs: nounwind readnone
declare float @dx.op.loadInput.f32(i32, i32, i32, i8, i32) #0

; Function Attrs: nounwind
declare void @dx.op.storeOutput.f32(i32, i32, i32, i8, float) #1

; Function Attrs: nounwind readonly
declare %dx.types.ResRet.f32 @dx.op.sample.f32(i32, %dx.types.Handle, %dx.types.Handle, float, float, float, float, i32, i32, i32, float) #2

; Function Attrs: nounwind readnone
declare float @dx.op.unary.f32(i32, float) #0

; Function Attrs: nounwind readonly
declare %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32, %dx.types.Handle, i32) #2

; Function Attrs: nounwind readnone
declare float @dx.op.tertiary.f32(i32, float, float, float) #0

; Function Attrs: nounwind readonly
declare %dx.types.Handle @dx.op.createHandle(i32, i8, i32, i32, i1) #2

attributes #0 = { nounwind readnone }
attributes #1 = { nounwind }
attributes #2 = { nounwind readonly }

!xbox.compiler.options = !{!0}
!llvm.ident = !{!1}
!dx.version = !{!2}
!dx.valver = !{!3}
!dx.shaderModel = !{!4}
!dx.resources = !{!5}
!dx.viewIdState = !{!13}
!dx.entryPoints = !{!14}

!0 = !{!"__XBOX_PER_THREAD_SCRATCH_SIZE_LIMIT_IN_BYTES", !"0"}
!1 = !{!"dxcxbox 2410.2410.11116.10741"}
!2 = !{i32 1, i32 0}
!3 = !{i32 1, i32 8}
!4 = !{!"ps", i32 6, i32 0}
!5 = !{!6, null, !9, !11}
!6 = !{!7}
!7 = !{i32 0, %"class.Texture2D<vector<float, 4> >"* undef, !"", i32 0, i32 0, i32 1, i32 2, i32 0, !8}
!8 = !{i32 0, i32 9}
!9 = !{!10}
!10 = !{i32 0, %hostlayout.Parameters* undef, !"", i32 0, i32 0, i32 1, i32 64, null}
!11 = !{!12}
!12 = !{i32 0, %struct.SamplerState* undef, !"", i32 0, i32 0, i32 1, i32 0, null}
!13 = !{[8 x i32] [i32 6, i32 8, i32 0, i32 0, i32 0, i32 0, i32 255, i32 255]}
!14 = !{void ()* @PSHDR10_Saturate, !"PSHDR10_Saturate", !15, !5, null}
!15 = !{!16, !21, null}
!16 = !{!17, !19}
!17 = !{i32 0, !"SV_Position", i8 9, i8 3, !18, i8 4, i32 1, i8 4, i32 0, i8 0, null}
!18 = !{i32 0}
!19 = !{i32 1, !"TEXCOORD", i8 9, i8 0, !18, i8 2, i32 1, i8 2, i32 1, i8 0, !20}
!20 = !{i32 3, i32 3}
!21 = !{!22, !24}
!22 = !{i32 0, !"SV_Target", i8 9, i8 16, !18, i8 0, i32 1, i8 4, i32 0, i8 0, !23}
!23 = !{i32 3, i32 15}
!24 = !{i32 1, !"SV_Target", i8 9, i8 16, !25, i8 0, i32 1, i8 4, i32 1, i8 0, !23}
!25 = !{i32 1}

;
; DUMPING SHADER HARDWARE INSTRUCTIONS 
;
// Shader Type               : (PS)
// Shader Hw Stage           : (PS)

// Shader Instructions:
shader main
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0
  s_mov_b64     s[20:21], exec
  s_wqm_b64     exec, exec // wrscc
  s_mov_b32     s2, s3
  s_mov_b32     s3, 0
  s_load_dwordx8  s[8:15], s[2:3], 0x00
  s_mov_b32     m0, s6
  v_interp_p1_f32  v2, v0, attr0.x
  v_interp_p1_f32  v3, v0, attr0.y
  s_or_b32      s17, s5, 0x00100000 // wrscc
  s_mov_b32     s16, s4
  s_mov_b32     s18, -1
  s_mov_b32     s19, 0x00024fac
  s_movk_i32    s0, 0x3092
  s_mov_b32     s1, 0x00fff000
  s_brev_b32    s2, 46
  s_brev_b32    s3, 1
  v_interp_p2_f32  v2, v1, attr0.x
  v_interp_p2_f32  v3, v1, attr0.y
  s_and_b64     exec, exec, s[20:21] // wrscc
  s_waitcnt     lgkmcnt(0)
  image_sample  v[0:3], v[2:3], s[8:15], s[0:3] dmask:0xf
  s_buffer_load_dwordx2  s[12:13], s[16:19], 0x00
  s_buffer_load_dwordx8  s[0:7], s[16:19], 0x04
  s_buffer_load_dwordx4  s[8:11], s[16:19], 0x0c
  s_waitcnt     lgkmcnt(0)
  s_mov_b32     s11, 0x38d1b717
  s_mov_b32     s3, 0x4196d000
  v_mov_b32     v4, 0x3f560000
  s_mov_b32     s7, 0x41958000
  s_waitcnt     vmcnt(0)
  v_mul_legacy_f32  v5, s4, v0
  v_mul_legacy_f32  v6, s8, v0
  v_mul_legacy_f32  v7, s0, v0
  v_mac_legacy_f32  v5, s5, v1
  v_mac_legacy_f32  v6, s9, v1
  v_mac_legacy_f32  v7, s1, v1
  v_mac_legacy_f32  v5, s6, v2
  v_mac_legacy_f32  v6, s10, v2
  v_mac_legacy_f32  v7, s2, v2
  v_mul_legacy_f32  v7, abs(v7), s11
  v_mul_legacy_f32  v5, abs(v5), s11
  v_mul_legacy_f32  v6, abs(v6), s11
  v_mul_legacy_f32  v7, v7, abs(s13)
  v_mul_legacy_f32  v5, v5, abs(s13)
  v_mul_legacy_f32  v6, v6, abs(s13)
  v_log_f32     v7, v7
  v_log_f32     v5, v5
  v_log_f32     v6, v6
  v_mul_legacy_f32  v2, s12, v2 clamp
  v_mul_legacy_f32  v7, 0x3e232000, v7
  v_mul_legacy_f32  v5, 0x3e232000, v5
  v_mul_legacy_f32  v6, 0x3e232000, v6
  v_exp_f32     v7, v7
  v_exp_f32     v5, v5
  v_exp_f32     v6, v6
  v_mad_legacy_f32  v8, v7, s3, v4
  v_mad_legacy_f32  v9, v5, s3, v4
  v_mad_legacy_f32  v7, v7, s7, 1.0
  v_mad_legacy_f32  v5, v5, s7, 1.0
  v_mad_legacy_f32  v10, v6, s7, 1.0
  v_rcp_f32     v5, v5
  v_rcp_f32     v7, v7
  v_rcp_f32     v10, v10
  v_mac_legacy_f32  v4, s3, v6
  v_mul_legacy_f32  v5, v9, v5
  v_mul_legacy_f32  v6, v8, v7
  v_mul_legacy_f32  v4, v4, v10
  v_log_f32     v6, v6
  v_log_f32     v5, v5
  v_log_f32     v4, v4
  v_mul_legacy_f32  v9, s12, v0 clamp
  v_mul_legacy_f32  v6, 0x429db000, v6
  v_mul_legacy_f32  v5, 0x429db000, v5
  v_mul_legacy_f32  v4, 0x429db000, v4
  v_exp_f32     v6, v6
  v_exp_f32     v7, v5
  v_exp_f32     v8, v4
  v_mul_legacy_f32  v10, s12, v1 clamp
  v_cvt_pkrtz_f16_f32  v0, v6, v7
  v_cvt_pkrtz_f16_f32  v1, v8, v3
  exp           mrt0, v0, v0, v1, v1 compr
  v_cvt_pkrtz_f16_f32  v4, v9, v10
  v_cvt_pkrtz_f16_f32  v5, v2, v3
  exp           mrt1, v4, v4, v5, v5 done compr vm
  s_endpgm      
end


NumVGPR=11,NumSGPR=24,LDS=0,Scratch=0,Occpancy=10


#endif

const unsigned char ToneMap_PSHDR10_Saturate[] = {
  0x44, 0x58, 0x42, 0x43, 0xcd, 0xd3, 0xb6, 0xe0, 0x57, 0x65, 0x5b, 0x11,
  0x24, 0xa9, 0x32, 0x23, 0x33, 0xa5, 0x20, 0xf3, 0x01, 0x00, 0x00, 0x00,
  0x5c, 0x12, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00,
  0x50, 0x00, 0x00, 0x00, 0xb8, 0x00, 0x00, 0x00, 0x14, 0x01, 0x00, 0x00,
  0x34, 0x02, 0x00, 0x00, 0xc4, 0x02, 0x00, 0x00, 0x50, 0x03, 0x00, 0x00,
  0x6c, 0x03, 0x00, 0x00, 0x53, 0x46, 0x49, 0x30, 0x08, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x49, 0x53, 0x47, 0x31,
  0x60, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x48, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x54, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x03, 0x03, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x53, 0x56, 0x5f, 0x50, 0x6f, 0x73, 0x69, 0x74,
  0x69, 0x6f, 0x6e, 0x00, 0x54, 0x45, 0x58, 0x43, 0x4f, 0x4f, 0x52, 0x44,
  0x00, 0x00, 0x00, 0x00, 0x4f, 0x53, 0x47, 0x31, 0x54, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x48, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x48, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x53, 0x56, 0x5f, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x00, 0x00, 0x00,
  0x50, 0x53, 0x56, 0x30, 0x18, 0x01, 0x00, 0x00, 0x34, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff,
  0x00, 0x00, 0x00, 0x00, 0x02, 0x02, 0x00, 0x02, 0x02, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x0a, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x1c, 0x00, 0x00, 0x00, 0x00, 0x54, 0x45, 0x58, 0x43, 0x4f, 0x4f, 0x52,
  0x44, 0x00, 0x50, 0x53, 0x48, 0x44, 0x52, 0x31, 0x30, 0x5f, 0x53, 0x61,
  0x74, 0x75, 0x72, 0x61, 0x74, 0x65, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x44, 0x03,
  0x03, 0x04, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x01, 0x42, 0x00, 0x03, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x44, 0x10, 0x03, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x01, 0x44, 0x10,
  0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00,
  0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x52, 0x54, 0x53, 0x30, 0x88, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x54, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x05, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x05, 0x00, 0x00, 0x00, 0x4c, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x7f, 0x7f,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00,
  0x49, 0x4c, 0x44, 0x4e, 0x84, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7d, 0x00,
  0x43, 0x3a, 0x5c, 0x55, 0x73, 0x65, 0x72, 0x73, 0x5c, 0x6d, 0x61, 0x72,
  0x63, 0x75, 0x5c, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x73,
  0x5c, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x58, 0x54, 0x4b, 0x31, 0x32,
  0x2d, 0x6d, 0x61, 0x69, 0x6e, 0x5c, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74,
  0x58, 0x54, 0x4b, 0x31, 0x32, 0x2d, 0x6d, 0x61, 0x69, 0x6e, 0x5c, 0x53,
  0x72, 0x63, 0x2f, 0x53, 0x68, 0x61, 0x64, 0x65, 0x72, 0x73, 0x2f, 0x43,
  0x6f, 0x6d, 0x70, 0x69, 0x6c, 0x65, 0x64, 0x5c, 0x58, 0x62, 0x6f, 0x78,
  0x47, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x58, 0x62, 0x6f, 0x78, 0x4f, 0x6e,
  0x65, 0x54, 0x6f, 0x6e, 0x65, 0x4d, 0x61, 0x70, 0x5f, 0x50, 0x53, 0x48,
  0x44, 0x52, 0x31, 0x30, 0x5f, 0x53, 0x61, 0x74, 0x75, 0x72, 0x61, 0x74,
  0x65, 0x2e, 0x70, 0x64, 0x62, 0x00, 0x00, 0x00, 0x48, 0x41, 0x53, 0x48,
  0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfa, 0x61, 0x52, 0x1d,
  0xc6, 0xa7, 0x8b, 0xa9, 0x46, 0x43, 0x17, 0xa0, 0xa7, 0x59, 0xe2, 0xe4,
  0x44, 0x58, 0x49, 0x4c, 0xe8, 0x0e, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00,
  0xba, 0x03, 0x00, 0x00, 0x44, 0x58, 0x49, 0x4c, 0x00, 0x01, 0x00, 0x00,
  0x7c, 0x00, 0x00, 0x00, 0x30, 0x0a, 0x00, 0x00, 0x58, 0x44, 0x41, 0x54,
  0x06, 0x00, 0x00, 0x00, 0x24, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00,
  0x6c, 0x00, 0x00, 0x00, 0x48, 0x0a, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00,
  0xb4, 0x0a, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xc4, 0x0a, 0x00, 0x00, 0x0e, 0x03, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0xd4, 0x0d, 0x00, 0x00, 0xb0, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00,
  0x84, 0x0e, 0x00, 0x00, 0x4f, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00,
  0xd4, 0x0e, 0x00, 0x00, 0x11, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00,
  0x92, 0x02, 0x00, 0x00, 0x44, 0x58, 0x49, 0x4c, 0x00, 0x01, 0x00, 0x00,
  0x10, 0x00, 0x00, 0x00, 0x30, 0x0a, 0x00, 0x00, 0x42, 0x43, 0xc0, 0xde,
  0x21, 0x0c, 0x00, 0x00, 0x89, 0x02, 0x00, 0x00, 0x0b, 0x82, 0x20, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x13, 0x00, 0x00, 0x00, 0x07, 0x81, 0x23, 0x91,
  0x41, 0xc8, 0x04, 0x49, 0x06, 0x10, 0x32, 0x39, 0x92, 0x01, 0x84, 0x0c,
  0x25, 0x05, 0x08, 0x19, 0x1e, 0x04, 0x8b, 0x62, 0x80, 0x18, 0x45, 0x02,
  0x42, 0x92, 0x0b, 0x42, 0xc4, 0x10, 0x32, 0x14, 0x38, 0x08, 0x18, 0x4b,
  0x0a, 0x32, 0x62, 0x88, 0x48, 0x90, 0x14, 0x20, 0x43, 0x46, 0x88, 0xa5,
  0x00, 0x19, 0x32, 0x42, 0xe4, 0x48, 0x0e, 0x90, 0x11, 0x23, 0xc4, 0x50,
  0x41, 0x51, 0x81, 0x8c, 0xe1, 0x83, 0xe5, 0x8a, 0x04, 0x31, 0x46, 0x06,
  0x51, 0x18, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x1b, 0x8c, 0xe0, 0xff,
  0xff, 0xff, 0xff, 0x07, 0x40, 0x02, 0xa8, 0x0d, 0x84, 0xf0, 0xff, 0xff,
  0xff, 0xff, 0x03, 0x20, 0x6d, 0x30, 0x86, 0xff, 0xff, 0xff, 0xff, 0x1f,
  0x00, 0x09, 0xa8, 0x00, 0x49, 0x18, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x13, 0x82, 0x60, 0x42, 0x20, 0x4c, 0x08, 0x06, 0x00, 0x00, 0x00, 0x00,
  0x89, 0x20, 0x00, 0x00, 0x54, 0x00, 0x00, 0x00, 0x32, 0x22, 0x88, 0x09,
  0x20, 0x64, 0x85, 0x04, 0x13, 0x23, 0xa4, 0x84, 0x04, 0x13, 0x23, 0xe3,
  0x84, 0xa1, 0x90, 0x14, 0x12, 0x4c, 0x8c, 0x8c, 0x0b, 0x84, 0xc4, 0x4c,
  0x10, 0x90, 0xc1, 0x08, 0x40, 0x09, 0x00, 0x0a, 0x66, 0x00, 0xe6, 0x08,
  0xc0, 0x60, 0x8e, 0x00, 0x29, 0xc6, 0x40, 0x10, 0x44, 0x41, 0x90, 0x51,
  0x0c, 0x80, 0x20, 0x88, 0x62, 0x20, 0xe4, 0xa6, 0xe1, 0xf2, 0x27, 0xec,
  0x21, 0x24, 0x7f, 0x25, 0xa4, 0x95, 0x98, 0xfc, 0xe2, 0xb6, 0x51, 0x31,
  0x0c, 0xc3, 0x40, 0x50, 0x71, 0xcf, 0x70, 0xf9, 0x13, 0xf6, 0x10, 0x92,
  0x1f, 0x02, 0xcd, 0xb0, 0x10, 0x28, 0x58, 0x0a, 0xa3, 0x10, 0x0c, 0x33,
  0x0c, 0xc3, 0x40, 0x10, 0xc4, 0x40, 0x4d, 0x19, 0x06, 0x62, 0xa0, 0xe7,
  0xa8, 0xe1, 0xf2, 0x27, 0xec, 0x21, 0x24, 0x9f, 0xdb, 0xa8, 0x62, 0x25,
  0x26, 0xbf, 0xb8, 0x6d, 0x44, 0x0c, 0xc3, 0x30, 0x14, 0x22, 0x22, 0x18,
  0x82, 0xa4, 0x52, 0x0c, 0xc4, 0x30, 0x0c, 0x44, 0xcd, 0x11, 0x04, 0xc5,
  0x60, 0x88, 0x82, 0x20, 0x2c, 0xba, 0x06, 0x02, 0x86, 0x11, 0x88, 0x61,
  0xa6, 0x36, 0x18, 0x07, 0x76, 0x08, 0x87, 0x79, 0x98, 0x07, 0x37, 0xa0,
  0x85, 0x72, 0xc0, 0x07, 0x7a, 0xa8, 0x07, 0x79, 0x28, 0x07, 0x39, 0x20,
  0x05, 0x3e, 0xb0, 0x87, 0x72, 0x18, 0x07, 0x7a, 0x78, 0x07, 0x79, 0xe0,
  0x03, 0x73, 0x60, 0x87, 0x77, 0x08, 0x07, 0x7a, 0x60, 0x03, 0x30, 0xa0,
  0x03, 0x3f, 0x00, 0x03, 0x3f, 0xd0, 0x03, 0x3d, 0x68, 0x87, 0x74, 0x80,
  0x87, 0x79, 0xf8, 0x05, 0x7a, 0xc8, 0x07, 0x78, 0x28, 0x07, 0x14, 0x10,
  0x33, 0x89, 0xc1, 0x38, 0xb0, 0x43, 0x38, 0xcc, 0xc3, 0x3c, 0xb8, 0x01,
  0x2d, 0x94, 0x03, 0x3e, 0xd0, 0x43, 0x3d, 0xc8, 0x43, 0x39, 0xc8, 0x01,
  0x29, 0xf0, 0x81, 0x3d, 0x94, 0xc3, 0x38, 0xd0, 0xc3, 0x3b, 0xc8, 0x03,
  0x1f, 0x98, 0x03, 0x3b, 0xbc, 0x43, 0x38, 0xd0, 0x03, 0x1b, 0x80, 0x01,
  0x1d, 0xf8, 0x01, 0x18, 0xf8, 0x01, 0x12, 0xb4, 0x8d, 0xb8, 0x1c, 0xd0,
  0xae, 0x3a, 0x1c, 0x69, 0x5a, 0x00, 0xcc, 0xa1, 0x26, 0x3f, 0x05, 0x22,
  0x80, 0x21, 0x26, 0x22, 0x92, 0xd0, 0x30, 0x0c, 0x1e, 0x7d, 0x37, 0x49,
  0x53, 0x44, 0x09, 0x93, 0xcf, 0x02, 0xcc, 0xb3, 0x10, 0x11, 0x3b, 0x01,
  0x13, 0x81, 0x02, 0x82, 0xc2, 0x44, 0x20, 0x00, 0x13, 0x16, 0x72, 0xc0,
  0x87, 0x74, 0x60, 0x87, 0x36, 0x68, 0x87, 0x79, 0x68, 0x03, 0x7c, 0x10,
  0x87, 0x38, 0xd8, 0xf0, 0x0a, 0xe5, 0xd0, 0x06, 0xed, 0xa0, 0x07, 0xe5,
  0xd0, 0x06, 0xf0, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x7a, 0x30, 0x07, 0x72,
  0xd0, 0x06, 0xe9, 0x10, 0x07, 0x7a, 0x30, 0x07, 0x72, 0xd0, 0x06, 0xe9,
  0x80, 0x07, 0x7a, 0x30, 0x07, 0x72, 0xd0, 0x06, 0xe9, 0x10, 0x07, 0x76,
  0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x90, 0x0e, 0x73, 0x20, 0x07, 0x7a,
  0x30, 0x07, 0x72, 0xd0, 0x06, 0xe9, 0x60, 0x07, 0x74, 0xa0, 0x07, 0x76,
  0x40, 0x07, 0x6d, 0x60, 0x0e, 0x71, 0x60, 0x07, 0x7a, 0x30, 0x07, 0x72,
  0xd0, 0x06, 0xe6, 0x30, 0x07, 0x72, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d,
  0x60, 0x0e, 0x76, 0x40, 0x07, 0x7a, 0x60, 0x07, 0x74, 0xd0, 0x06, 0xee,
  0x80, 0x07, 0x7a, 0x10, 0x07, 0x76, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x7a,
  0x60, 0x07, 0x74, 0x30, 0xe4, 0x09, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x60, 0xc8, 0x63, 0x00, 0x01, 0x10, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x90, 0x07, 0x01, 0x02, 0x40, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x21, 0x4f, 0x03, 0x04, 0xc0,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x43, 0x9e, 0x07, 0x08,
  0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x86, 0x3c, 0x12,
  0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x79,
  0x28, 0x20, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18,
  0xf2, 0x5c, 0x40, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x90, 0x05, 0x02, 0x00, 0x10, 0x00, 0x00, 0x00, 0x32, 0x1e, 0x98, 0x14,
  0x19, 0x11, 0x4c, 0x90, 0x8c, 0x09, 0x26, 0x47, 0xc6, 0x04, 0x43, 0x22,
  0x4a, 0x60, 0x04, 0xa0, 0x20, 0x8a, 0xa1, 0x08, 0x4a, 0xa2, 0x00, 0x03,
  0xca, 0xa0, 0x3c, 0xa8, 0x28, 0x89, 0x32, 0x28, 0x84, 0x11, 0x80, 0x22,
  0x28, 0x10, 0xea, 0x66, 0x00, 0x08, 0x9c, 0x01, 0x20, 0x71, 0x06, 0x80,
  0xc6, 0xb1, 0x10, 0x03, 0x01, 0x00, 0x00, 0xf8, 0x8f, 0xff, 0x00, 0x00,
  0x79, 0x18, 0x00, 0x00, 0x7f, 0x00, 0x00, 0x00, 0x1a, 0x03, 0x4c, 0x90,
  0x46, 0x02, 0x13, 0xc4, 0x36, 0xf8, 0xfa, 0xc2, 0x12, 0x7a, 0xc2, 0xfa,
  0x82, 0x2a, 0x92, 0xfa, 0xa2, 0x42, 0x92, 0x2a, 0x0a, 0x22, 0xfa, 0x9a,
  0x1a, 0x92, 0x0a, 0xa2, 0x1a, 0x42, 0xfa, 0x9a, 0x4a, 0xd2, 0x2a, 0xfa,
  0x62, 0x4a, 0x6a, 0x4a, 0xa2, 0xfa, 0x4a, 0x72, 0xfa, 0x12, 0xca, 0xa2,
  0x2a, 0x9a, 0x62, 0x00, 0xb3, 0x41, 0x08, 0x04, 0x76, 0x64, 0x78, 0x63,
  0x78, 0x62, 0x6f, 0x78, 0x20, 0x32, 0x34, 0x31, 0x30, 0x2e, 0x32, 0x34,
  0x31, 0x30, 0x2e, 0x31, 0x31, 0x31, 0x31, 0x36, 0x2e, 0x31, 0x30, 0x37,
  0x34, 0x31, 0x1b, 0x02, 0x62, 0x82, 0x40, 0x20, 0x13, 0x04, 0x22, 0xd9,
  0x20, 0x18, 0xc7, 0x04, 0x81, 0x50, 0x36, 0x08, 0x46, 0x42, 0x01, 0x6e,
  0x6e, 0x82, 0x40, 0x2c, 0x1b, 0x86, 0x85, 0x39, 0x26, 0x08, 0xdd, 0x45,
  0x60, 0x82, 0x40, 0x30, 0x13, 0x04, 0xa2, 0xd9, 0x20, 0x1c, 0xd1, 0x86,
  0xe4, 0x70, 0x9e, 0xe3, 0x30, 0xa0, 0x43, 0xda, 0x10, 0x4c, 0x13, 0x04,
  0x30, 0xc0, 0x26, 0x08, 0x84, 0xb3, 0x01, 0x39, 0xaa, 0xe7, 0x38, 0x0c,
  0x0b, 0xd8, 0x10, 0x5c, 0x13, 0x04, 0x31, 0xc8, 0x36, 0x20, 0x47, 0xf6,
  0x1c, 0x87, 0x71, 0x00, 0x1b, 0x02, 0x6d, 0x03, 0x41, 0x01, 0xd8, 0x36,
  0x41, 0x18, 0x03, 0x6d, 0x43, 0xd0, 0x4d, 0x10, 0x04, 0x80, 0x10, 0xd4,
  0x14, 0x12, 0x91, 0x54, 0x0c, 0xcc, 0xd7, 0x54, 0x18, 0x5d, 0x9d, 0x5c,
  0x18, 0x5d, 0x19, 0x97, 0x29, 0xab, 0x2f, 0xa8, 0xb7, 0xb9, 0x34, 0xba,
  0xb4, 0x37, 0xb7, 0x09, 0x42, 0x11, 0x4d, 0x10, 0x0a, 0x69, 0x43, 0x70,
  0x4c, 0x10, 0x8a, 0x69, 0x82, 0x50, 0x50, 0x1b, 0x96, 0x23, 0x0c, 0xc4,
  0x60, 0x0c, 0xc8, 0xa0, 0x0c, 0x8c, 0x32, 0x38, 0xcc, 0x00, 0x20, 0x42,
  0x55, 0x84, 0x35, 0xf4, 0xf4, 0x24, 0x45, 0x34, 0x41, 0x28, 0xaa, 0x09,
  0x02, 0xf1, 0x6c, 0x10, 0xd4, 0x40, 0x0d, 0x36, 0x2c, 0x06, 0x1a, 0x88,
  0x81, 0x19, 0x90, 0x41, 0x1a, 0x18, 0x69, 0x60, 0x98, 0xc1, 0x1a, 0x6c,
  0x10, 0xce, 0x80, 0x0d, 0x98, 0x4c, 0x59, 0x7d, 0x51, 0x85, 0xc9, 0x9d,
  0x95, 0xd1, 0x4d, 0x10, 0x0a, 0x6b, 0x82, 0x40, 0x40, 0x1b, 0x04, 0x35,
  0x80, 0x83, 0x0d, 0xcb, 0xe1, 0x06, 0x62, 0xf0, 0x06, 0x64, 0x60, 0x06,
  0x46, 0x19, 0x1c, 0x66, 0x10, 0x07, 0x1b, 0x02, 0x63, 0xc3, 0x62, 0xb8,
  0x81, 0x18, 0xbc, 0xc1, 0x1c, 0x98, 0x81, 0x51, 0x06, 0x86, 0x19, 0xc4,
  0xc1, 0x06, 0x41, 0x0e, 0xe8, 0x60, 0xc3, 0xd0, 0x06, 0x75, 0x00, 0x6c,
  0x28, 0x3e, 0x30, 0xb0, 0x03, 0x0e, 0x68, 0x85, 0x27, 0xf6, 0x86, 0xe7,
  0x32, 0xf6, 0xd6, 0x06, 0x97, 0xc6, 0x56, 0x26, 0xe7, 0xf2, 0x06, 0x47,
  0x97, 0xf6, 0xe6, 0x36, 0x37, 0x25, 0x10, 0xaa, 0xb0, 0xb1, 0xd9, 0xb5,
  0xb9, 0xa4, 0x91, 0x95, 0xb9, 0xd1, 0x4d, 0x09, 0x88, 0x2a, 0x64, 0x78,
  0x2e, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x82, 0xa3, 0x09,
  0x19, 0x9e, 0x8b, 0x5d, 0x18, 0x9b, 0x5d, 0x99, 0xdc, 0x94, 0x20, 0xa9,
  0x43, 0x86, 0xe7, 0x32, 0x87, 0x16, 0x46, 0x56, 0x26, 0xd7, 0xf4, 0x46,
  0x56, 0xc6, 0x36, 0x25, 0x60, 0xca, 0x90, 0xe1, 0xb9, 0xc8, 0x95, 0xcd,
  0xbd, 0xd5, 0xc9, 0x8d, 0x95, 0xcd, 0x4d, 0x09, 0xb6, 0x3a, 0x64, 0x78,
  0x2e, 0x76, 0x69, 0x65, 0x77, 0x49, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65,
  0x53, 0x82, 0xae, 0x0e, 0x19, 0x9e, 0x4b, 0x99, 0x1b, 0x9d, 0x5c, 0x1e,
  0xd4, 0x5b, 0x9a, 0x1b, 0xdd, 0xdc, 0x94, 0xc0, 0x0e, 0x00, 0x00, 0x00,
  0x79, 0x18, 0x00, 0x00, 0x4c, 0x00, 0x00, 0x00, 0x33, 0x08, 0x80, 0x1c,
  0xc4, 0xe1, 0x1c, 0x66, 0x14, 0x01, 0x3d, 0x88, 0x43, 0x38, 0x84, 0xc3,
  0x8c, 0x42, 0x80, 0x07, 0x79, 0x78, 0x07, 0x73, 0x98, 0x71, 0x0c, 0xe6,
  0x00, 0x0f, 0xed, 0x10, 0x0e, 0xf4, 0x80, 0x0e, 0x33, 0x0c, 0x42, 0x1e,
  0xc2, 0xc1, 0x1d, 0xce, 0xa1, 0x1c, 0x66, 0x30, 0x05, 0x3d, 0x88, 0x43,
  0x38, 0x84, 0x83, 0x1b, 0xcc, 0x03, 0x3d, 0xc8, 0x43, 0x3d, 0x8c, 0x03,
  0x3d, 0xcc, 0x78, 0x8c, 0x74, 0x70, 0x07, 0x7b, 0x08, 0x07, 0x79, 0x48,
  0x87, 0x70, 0x70, 0x07, 0x7a, 0x70, 0x03, 0x76, 0x78, 0x87, 0x70, 0x20,
  0x87, 0x19, 0xcc, 0x11, 0x0e, 0xec, 0x90, 0x0e, 0xe1, 0x30, 0x0f, 0x6e,
  0x30, 0x0f, 0xe3, 0xf0, 0x0e, 0xf0, 0x50, 0x0e, 0x33, 0x10, 0xc4, 0x1d,
  0xde, 0x21, 0x1c, 0xd8, 0x21, 0x1d, 0xc2, 0x61, 0x1e, 0x66, 0x30, 0x89,
  0x3b, 0xbc, 0x83, 0x3b, 0xd0, 0x43, 0x39, 0xb4, 0x03, 0x3c, 0xbc, 0x83,
  0x3c, 0x84, 0x03, 0x3b, 0xcc, 0xf0, 0x14, 0x76, 0x60, 0x07, 0x7b, 0x68,
  0x07, 0x37, 0x68, 0x87, 0x72, 0x68, 0x07, 0x37, 0x80, 0x87, 0x70, 0x90,
  0x87, 0x70, 0x60, 0x07, 0x76, 0x28, 0x07, 0x76, 0xf8, 0x05, 0x76, 0x78,
  0x87, 0x77, 0x80, 0x87, 0x5f, 0x08, 0x87, 0x71, 0x18, 0x87, 0x72, 0x98,
  0x87, 0x79, 0x98, 0x81, 0x2c, 0xee, 0xf0, 0x0e, 0xee, 0xe0, 0x0e, 0xf5,
  0xc0, 0x0e, 0xec, 0x30, 0x03, 0x62, 0xc8, 0xa1, 0x1c, 0xe4, 0xa1, 0x1c,
  0xcc, 0xa1, 0x1c, 0xe4, 0xa1, 0x1c, 0xdc, 0x61, 0x1c, 0xca, 0x21, 0x1c,
  0xc4, 0x81, 0x1d, 0xca, 0x61, 0x06, 0xd6, 0x90, 0x43, 0x39, 0xc8, 0x43,
  0x39, 0x98, 0x43, 0x39, 0xc8, 0x43, 0x39, 0xb8, 0xc3, 0x38, 0x94, 0x43,
  0x38, 0x88, 0x03, 0x3b, 0x94, 0xc3, 0x2f, 0xbc, 0x83, 0x3c, 0xfc, 0x82,
  0x3b, 0xd4, 0x03, 0x3b, 0xb0, 0xc3, 0x0c, 0xc4, 0x21, 0x07, 0x7c, 0x70,
  0x03, 0x7a, 0x28, 0x87, 0x76, 0x80, 0x87, 0x19, 0xd1, 0x43, 0x0e, 0xf8,
  0xe0, 0x06, 0xe4, 0x20, 0x0e, 0xe7, 0xe0, 0x06, 0xf6, 0x10, 0x0e, 0xf2,
  0xc0, 0x0e, 0xe1, 0x90, 0x0f, 0xef, 0x50, 0x0f, 0xf4, 0x00, 0x00, 0x00,
  0x71, 0x20, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0x06, 0x00, 0xa5, 0x6c,
  0xd8, 0xad, 0x35, 0xfd, 0xb3, 0xc0, 0x44, 0x45, 0xc0, 0x44, 0x58, 0xc1,
  0x36, 0x5c, 0xbe, 0xf3, 0xf8, 0x42, 0x40, 0x15, 0x05, 0x11, 0x95, 0x0e,
  0x30, 0x94, 0x84, 0x01, 0x08, 0x98, 0x5f, 0xdc, 0xb6, 0x1d, 0x48, 0xc3,
  0xe5, 0x3b, 0x8f, 0x2f, 0x44, 0x04, 0x30, 0x11, 0x21, 0xd0, 0x0c, 0x0b,
  0x61, 0x01, 0xd3, 0x70, 0xf9, 0xce, 0xe3, 0x2f, 0x0e, 0x30, 0x88, 0xcd,
  0x43, 0x4d, 0x7e, 0x71, 0xdb, 0x36, 0x00, 0x0d, 0x97, 0xef, 0x3c, 0xbe,
  0x04, 0x30, 0xcf, 0x42, 0xf8, 0xc5, 0x6d, 0x9b, 0x40, 0x35, 0x5c, 0xbe,
  0xf3, 0xf8, 0xd2, 0xe4, 0x44, 0x04, 0x4a, 0x4d, 0x0f, 0x35, 0xf9, 0xc5,
  0x6d, 0x9b, 0x81, 0x34, 0x5c, 0xbe, 0xf3, 0xf8, 0x13, 0x11, 0x4d, 0x08,
  0x10, 0x61, 0x7e, 0x71, 0xdb, 0x46, 0xf0, 0x0c, 0x97, 0xef, 0x3c, 0x3e,
  0xd5, 0x00, 0x11, 0xe6, 0x17, 0xb7, 0x0d, 0x00, 0x61, 0x20, 0x00, 0x00,
  0xca, 0x00, 0x00, 0x00, 0x13, 0x04, 0x41, 0x2c, 0x10, 0x00, 0x00, 0x00,
  0x13, 0x00, 0x00, 0x00, 0x64, 0x8d, 0x00, 0x50, 0x51, 0x02, 0x44, 0x14,
  0x5e, 0x21, 0x94, 0xc3, 0x0c, 0x40, 0xc9, 0x95, 0x5d, 0x29, 0x14, 0x57,
  0xb9, 0x94, 0x0a, 0x0d, 0x63, 0x04, 0x20, 0xc8, 0xee, 0x69, 0x18, 0x8c,
  0x11, 0x80, 0x20, 0x08, 0xe2, 0xdf, 0x18, 0x01, 0x08, 0x82, 0x6b, 0x0e,
  0x06, 0x63, 0x04, 0x20, 0x08, 0xb2, 0xf5, 0x37, 0x46, 0x00, 0x82, 0x74,
  0x9b, 0x83, 0xc1, 0x18, 0x01, 0x08, 0xa2, 0xa6, 0xf8, 0x8d, 0x11, 0xdc,
  0x78, 0x3b, 0xb6, 0xdc, 0x0c, 0x00, 0x00, 0x00, 0x23, 0x06, 0x09, 0x00,
  0x82, 0x60, 0x70, 0xa1, 0x81, 0xb3, 0x99, 0x81, 0x19, 0x50, 0x23, 0x06,
  0x09, 0x00, 0x82, 0x60, 0x70, 0xa5, 0xc1, 0xe3, 0x9d, 0xc1, 0x19, 0x54,
  0x23, 0x06, 0x09, 0x00, 0x82, 0x60, 0x70, 0xa9, 0x01, 0xc4, 0xa1, 0x01,
  0x1a, 0x58, 0x23, 0x06, 0x09, 0x00, 0x82, 0x60, 0x60, 0xc4, 0x01, 0xa5,
  0x06, 0x69, 0xe0, 0x49, 0x23, 0x06, 0x09, 0x00, 0x82, 0x60, 0x60, 0xc8,
  0x41, 0xb5, 0x06, 0x6a, 0x70, 0x4d, 0x23, 0x06, 0x0f, 0x00, 0x82, 0x60,
  0xd0, 0xc4, 0xc1, 0x55, 0x10, 0x42, 0x60, 0x18, 0x6b, 0xb0, 0x06, 0x94,
  0x31, 0x9a, 0x10, 0x00, 0xa3, 0x09, 0x42, 0x30, 0x9a, 0x30, 0x08, 0xa3,
  0x09, 0xc4, 0x30, 0x62, 0x70, 0x00, 0x20, 0x08, 0x06, 0x12, 0x1d, 0x5c,
  0x48, 0x1c, 0x8c, 0x26, 0x04, 0xc0, 0x68, 0x82, 0x10, 0x8c, 0x26, 0x0c,
  0xc2, 0x88, 0xc1, 0x01, 0x80, 0x20, 0x18, 0x48, 0x78, 0xb0, 0x31, 0x71,
  0x30, 0x9a, 0x10, 0x00, 0xa3, 0x09, 0x42, 0x30, 0x9a, 0x30, 0x08, 0x23,
  0x06, 0x07, 0x00, 0x82, 0x60, 0x20, 0xf1, 0xc1, 0x07, 0xc9, 0xc1, 0x68,
  0x42, 0x00, 0x8c, 0x26, 0x08, 0xc1, 0x68, 0xc2, 0x20, 0xd8, 0x02, 0xc9,
  0x67, 0xc4, 0x00, 0x01, 0x40, 0x10, 0x0c, 0x28, 0x50, 0x10, 0x03, 0x68,
  0x09, 0x46, 0x0c, 0x10, 0x00, 0x04, 0xc1, 0x80, 0x0a, 0x85, 0x31, 0x80,
  0x96, 0xc0, 0x94, 0x49, 0x3e, 0x23, 0x06, 0x08, 0x00, 0x82, 0x60, 0x40,
  0x8d, 0x42, 0x19, 0x4c, 0x4a, 0x30, 0x62, 0x80, 0x00, 0x20, 0x08, 0x06,
  0x14, 0x29, 0x98, 0xc1, 0xa4, 0x04, 0x96, 0x58, 0xf2, 0x19, 0x31, 0x40,
  0x00, 0x10, 0x04, 0x03, 0xca, 0x14, 0xd0, 0xc0, 0x4a, 0x82, 0x11, 0x03,
  0x04, 0x00, 0x41, 0x30, 0xa0, 0x4e, 0x21, 0x0d, 0xac, 0x24, 0x18, 0x31,
  0x38, 0x00, 0x10, 0x04, 0x03, 0x29, 0x15, 0xd8, 0xa0, 0x2b, 0x85, 0xd1,
  0x84, 0x20, 0xb0, 0x64, 0x0c, 0xe4, 0x63, 0x81, 0x20, 0x1f, 0x43, 0xca,
  0x40, 0x3e, 0x16, 0x10, 0xf2, 0xb1, 0xe3, 0x0c, 0xe4, 0x63, 0x81, 0x21,
  0x9f, 0x11, 0x03, 0x03, 0x00, 0x41, 0x30, 0x78, 0x64, 0x61, 0x15, 0x8a,
  0x11, 0x03, 0x03, 0x00, 0x41, 0x30, 0x78, 0x66, 0x81, 0x15, 0x88, 0x11,
  0x03, 0x03, 0x00, 0x41, 0x30, 0x78, 0x68, 0xa1, 0x15, 0x86, 0x11, 0x03,
  0x03, 0x00, 0x41, 0x30, 0x78, 0x6a, 0x81, 0x0e, 0x86, 0x11, 0x03, 0x03,
  0x00, 0x41, 0x30, 0x78, 0x6c, 0xa1, 0x0e, 0x86, 0x11, 0x03, 0x03, 0x00,
  0x41, 0x30, 0x78, 0x6e, 0xc1, 0x0e, 0x06, 0x1b, 0xe0, 0x40, 0x3e, 0x36,
  0xc4, 0x81, 0x7c, 0x6c, 0x90, 0x03, 0xf9, 0x8c, 0x18, 0x18, 0x00, 0x08,
  0x82, 0xc1, 0xb3, 0x0b, 0x79, 0x30, 0x8c, 0x18, 0x18, 0x00, 0x08, 0x82,
  0xc1, 0xc3, 0x0b, 0x7a, 0x30, 0x8c, 0x18, 0x18, 0x00, 0x08, 0x82, 0xc1,
  0xd3, 0x0b, 0x7b, 0x30, 0xd8, 0x70, 0x07, 0xf2, 0xb1, 0x01, 0x0f, 0xe4,
  0x63, 0x43, 0x1e, 0xc8, 0xc7, 0x86, 0x3d, 0x80, 0x8f, 0x0d, 0x7c, 0x00,
  0x1f, 0x1b, 0xfa, 0x00, 0x3e, 0x96, 0xfc, 0x81, 0x7c, 0x2c, 0x01, 0x05,
  0xf9, 0x58, 0x12, 0x0a, 0xf2, 0xb1, 0x61, 0x14, 0xe0, 0x63, 0x03, 0x29,
  0xc0, 0xc7, 0x86, 0x52, 0x80, 0x8f, 0x25, 0x03, 0x7d, 0x2c, 0x19, 0xe8,
  0x63, 0xc9, 0x40, 0x9f, 0x11, 0x03, 0x03, 0x00, 0x41, 0x30, 0x78, 0xda,
  0x81, 0x15, 0x86, 0x11, 0x03, 0x03, 0x00, 0x41, 0x30, 0x78, 0xdc, 0xa1,
  0x15, 0x86, 0x11, 0x03, 0x03, 0x00, 0x41, 0x30, 0x78, 0xde, 0xc1, 0x15,
  0x06, 0x1b, 0x5a, 0x41, 0x3e, 0x36, 0xb8, 0x82, 0x7c, 0x6c, 0x78, 0x05,
  0xf9, 0x8c, 0x18, 0x18, 0x00, 0x08, 0x82, 0xc1, 0x33, 0x0f, 0xb1, 0x30,
  0x8c, 0x18, 0x18, 0x00, 0x08, 0x82, 0xc1, 0x43, 0x0f, 0xb2, 0x30, 0x8c,
  0x18, 0x18, 0x00, 0x08, 0x82, 0xc1, 0x53, 0x0f, 0xb3, 0x30, 0x8c, 0x26,
  0xb0, 0x01, 0x60, 0x81, 0x29, 0xc8, 0xc7, 0x04, 0x53, 0x90, 0x8f, 0x0d,
  0xa6, 0x20, 0x9f, 0x11, 0x03, 0x03, 0x00, 0x41, 0x30, 0x78, 0xf4, 0xe1,
  0x17, 0x86, 0x11, 0x03, 0x03, 0x00, 0x41, 0x30, 0x78, 0xf6, 0x01, 0x1c,
  0x86, 0x11, 0x03, 0x03, 0x00, 0x41, 0x30, 0x78, 0xf8, 0x21, 0x1c, 0x86,
  0x11, 0x83, 0x04, 0x00, 0x41, 0x30, 0x40, 0xfe, 0xc1, 0x17, 0xf0, 0x01,
  0x1f, 0xda, 0x41, 0x19, 0x31, 0x48, 0x00, 0x10, 0x04, 0x03, 0xe4, 0x1f,
  0x7c, 0x01, 0x1f, 0xf0, 0xa1, 0x1c, 0x92, 0x11, 0x83, 0x04, 0x00, 0x41,
  0x30, 0x40, 0xfe, 0xc1, 0x17, 0xf0, 0x01, 0x1f, 0xd8, 0x01, 0x19, 0x31,
  0x48, 0x00, 0x10, 0x04, 0x03, 0xe4, 0x1f, 0x7c, 0x01, 0x1f, 0xf0, 0xe1,
  0x1d, 0x52, 0x61, 0xc4, 0x20, 0x01, 0x40, 0x10, 0x0c, 0x90, 0x7f, 0xf0,
  0x85, 0x7c, 0xc0, 0x87, 0x76, 0x18, 0x46, 0x0c, 0x12, 0x00, 0x04, 0xc1,
  0x00, 0xf9, 0x07, 0x5f, 0xc8, 0x07, 0x7c, 0x28, 0x07, 0x61, 0xc4, 0x20,
  0x01, 0x40, 0x10, 0x0c, 0x90, 0x7f, 0xf0, 0x85, 0x7c, 0xc0, 0x07, 0x76,
  0x08, 0x46, 0x0c, 0x12, 0x00, 0x04, 0xc1, 0x00, 0xf9, 0x07, 0x5f, 0xc8,
  0x07, 0x7c, 0x78, 0x87, 0x54, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xfa, 0x61, 0x52, 0x1d, 0xc6, 0xa7, 0x8b, 0xa9, 0x46, 0x43, 0x17, 0xa0,
  0xa7, 0x59, 0xe2, 0xe4, 0x17, 0x00, 0x01, 0x00, 0x29, 0x40, 0x10, 0x00,
  0x78, 0x01, 0xed, 0x57, 0x3d, 0x68, 0x14, 0x41, 0x14, 0x7e, 0x3b, 0x33,
  0xfb, 0x73, 0x7b, 0x93, 0xbd, 0x1c, 0x49, 0x4c, 0x50, 0x43, 0x04, 0xc1,
  0xc6, 0x26, 0x8d, 0x10, 0x50, 0xf3, 0xe3, 0x4f, 0x10, 0x52, 0x1c, 0x08,
  0x11, 0x3c, 0x8e, 0xe3, 0x3c, 0xb4, 0xb1, 0x10, 0x6b, 0x8b, 0x75, 0x93,
  0x08, 0x51, 0x92, 0x22, 0x44, 0x23, 0x36, 0x82, 0x5d, 0x10, 0x44, 0xd2,
  0x59, 0x08, 0x7b, 0x67, 0x10, 0xb9, 0xc2, 0x42, 0x53, 0x58, 0x8b, 0xd8,
  0xd9, 0xa4, 0x0c, 0x22, 0x59, 0xbf, 0xb7, 0x77, 0x7b, 0x6e, 0x42, 0x62,
  0x95, 0xc2, 0xe0, 0x7d, 0xf0, 0xde, 0xb7, 0xdf, 0xdc, 0x9b, 0x79, 0x73,
  0xb3, 0x73, 0xc7, 0x7b, 0xe3, 0xdd, 0x14, 0xa3, 0x3e, 0x3b, 0x18, 0x30,
  0x8f, 0x9f, 0xbe, 0xfc, 0xe5, 0x8a, 0x4b, 0x64, 0xe2, 0xd9, 0x80, 0x31,
  0x33, 0x9e, 0x75, 0xb1, 0x27, 0x6a, 0xe4, 0xd8, 0x13, 0x21, 0xa4, 0x8d,
  0x2c, 0x6c, 0x00, 0xc6, 0x18, 0x67, 0xd7, 0x02, 0xcf, 0x27, 0x0a, 0x46,
  0x61, 0x63, 0xfc, 0xb4, 0x1b, 0x47, 0x60, 0x67, 0x60, 0xa7, 0x60, 0x8c,
  0xd6, 0xd2, 0x31, 0x14, 0xac, 0x39, 0xff, 0x0f, 0x33, 0x04, 0xbb, 0x5d,
  0x90, 0x30, 0x8e, 0x49, 0x7f, 0xe6, 0xb0, 0x03, 0x7a, 0xca, 0xb5, 0x73,
  0xa0, 0x4b, 0x30, 0x7a, 0x9b, 0x5d, 0x39, 0xcf, 0x7c, 0x6f, 0xfe, 0xc7,
  0x59, 0xe6, 0x47, 0x8b, 0xb7, 0xf6, 0xdc, 0xd7, 0x61, 0x41, 0xfa, 0x5c,
  0x12, 0x24, 0xef, 0x89, 0xf1, 0x71, 0xaf, 0x80, 0x5d, 0x48, 0xde, 0xef,
  0xcd, 0xd6, 0xe1, 0x27, 0xef, 0xb2, 0x0e, 0xdb, 0x6f, 0x7a, 0x04, 0x30,
  0xef, 0x05, 0x9e, 0x63, 0x19, 0x32, 0x68, 0xbf, 0x80, 0xff, 0x10, 0x9a,
  0x1d, 0xc0, 0x67, 0xc1, 0x77, 0x92, 0x7f, 0x62, 0xe9, 0x03, 0xe3, 0xbb,
  0xcd, 0xb8, 0xcd, 0x8e, 0x82, 0x1a, 0xdb, 0x52, 0x37, 0x6d, 0xb1, 0x4a,
  0x34, 0xe6, 0x6e, 0x59, 0x2c, 0x5b, 0x1a, 0x77, 0x7c, 0xcb, 0xb2, 0x77,
  0x69, 0x38, 0x2b, 0x47, 0x65, 0xc7, 0x16, 0xe5, 0x9c, 0xc2, 0x7c, 0x4c,
  0x82, 0x2e, 0x41, 0x97, 0x52, 0xba, 0x08, 0x5d, 0x4c, 0xe9, 0x0a, 0x74,
  0x25, 0xa5, 0xab, 0xd0, 0xd5, 0x44, 0x27, 0xeb, 0xe3, 0x3a, 0x20, 0x9f,
  0x23, 0xef, 0xf0, 0x50, 0x6b, 0x6c, 0x69, 0x00, 0x31, 0x31, 0x9a, 0x3a,
  0x0f, 0x9d, 0x61, 0xd9, 0xd2, 0x3d, 0xac, 0xe3, 0x3f, 0x86, 0x94, 0xc6,
  0x1e, 0x33, 0x7d, 0x4e, 0x59, 0xd8, 0x6e, 0x79, 0xe8, 0x38, 0x6d, 0x29,
  0x5c, 0x38, 0xe8, 0x12, 0x74, 0x29, 0xa5, 0x8b, 0xd0, 0xc5, 0x94, 0xae,
  0x40, 0x57, 0x52, 0xba, 0x0a, 0x5d, 0x4d, 0x74, 0xb2, 0xfe, 0x50, 0x9c,
  0x4f, 0xc8, 0xbf, 0xdd, 0xc7, 0x7f, 0x05, 0x9d, 0x3d, 0x1e, 0x0c, 0x3a,
  0x7b, 0x3c, 0x18, 0x1c, 0x86, 0x3d, 0x76, 0xd0, 0x41, 0x07, 0x1d, 0x74,
  0xb0, 0x3f, 0x7c, 0xf5, 0x24, 0xf4, 0xdd, 0xed, 0x50, 0xca, 0xd9, 0x30,
  0x90, 0x73, 0x21, 0xc9, 0xf7, 0x75, 0x4b, 0xfe, 0x0a, 0xd1, 0x01, 0x35,
  0xc8, 0xd0, 0x0d, 0x33, 0xca, 0x3f, 0xe4, 0x0a, 0x54, 0xc9, 0xa5, 0xf0,
  0x9d, 0x5c, 0x0e, 0x23, 0xf9, 0x38, 0x7c, 0x55, 0x10, 0xb4, 0x3c, 0x4c,
  0x6b, 0x91, 0x9c, 0x09, 0x69, 0x33, 0xa2, 0xd7, 0xd9, 0xd9, 0x70, 0x26,
  0x3b, 0x17, 0x1a, 0x94, 0x69, 0x18, 0x46, 0x57, 0xc3, 0xef, 0xdd, 0x9e,
  0xbf, 0x4f, 0x8b, 0x35, 0xca, 0x05, 0x9b, 0x82, 0x2b, 0xd8, 0xfc, 0xe4,
  0xba, 0xca, 0xd7, 0xd7, 0x75, 0xfe, 0xc1, 0x3a, 0x8f, 0x47, 0x72, 0x21,
  0xec, 0x7f, 0xf3, 0x79, 0x24, 0xe2, 0x7c, 0x9f, 0x9e, 0x4e, 0x44, 0xc2,
  0xf1, 0x89, 0xae, 0x8d, 0x45, 0x72, 0x3e, 0xa4, 0x60, 0x65, 0xe2, 0x6e,
  0x6e, 0xb1, 0xa6, 0xc8, 0xf5, 0x1c, 0xd2, 0x1e, 0x91, 0xe7, 0x99, 0xc2,
  0xd5, 0x19, 0xa1, 0xb5, 0x21, 0x3c, 0x6d, 0x29, 0x57, 0xbb, 0x4a, 0x6b,
  0xa1, 0x3c, 0x6d, 0x1b, 0xde, 0x86, 0xdd, 0x8f, 0x1e, 0x04, 0x6c, 0x82,
  0x2d, 0xb0, 0x05, 0xb6, 0x05, 0xc6, 0x8f, 0x61, 0x1c, 0x6c, 0x82, 0x2d,
  0xb0, 0x05, 0xb6, 0x0b, 0x9e, 0x6f, 0x16, 0x5c, 0xdf, 0x2a, 0x68, 0x5f,
  0x38, 0xde, 0x86, 0x56, 0x82, 0x22, 0xcf, 0xf3, 0xe8, 0xc4, 0xc9, 0xd1,
  0xc8, 0x75, 0x9b, 0xac, 0x91, 0x13, 0x6c, 0x4f, 0x21, 0x76, 0x0a, 0xb1,
  0x53, 0xda, 0x77, 0x28, 0xd8, 0xb0, 0xed, 0x6e, 0x95, 0x01, 0x9b, 0x60,
  0x9b, 0x75, 0xae, 0x21, 0x4d, 0xd6, 0x60, 0x17, 0x6c, 0xb1, 0x9e, 0x76,
  0x7d, 0x7b, 0xda, 0xf3, 0xdd, 0xe9, 0x5e, 0x5f, 0x6a, 0x47, 0x67, 0xb2,
  0xf8, 0x0e, 0x39, 0xed, 0xa9, 0x3e, 0xc7, 0xe3, 0x9c, 0x9c, 0x5b, 0x15,
  0x1c, 0x3f, 0xc3, 0xb9, 0x71, 0x2e, 0x71, 0xae, 0xb5, 0xe7, 0x17, 0xe2,
  0xdc, 0xcc, 0x8e, 0x13, 0x33, 0xe7, 0x34, 0x91, 0x5f, 0x4d, 0x75, 0xfb,
  0x2e, 0xc7, 0x0a, 0xc1, 0x75, 0xf6, 0x8e, 0x3a, 0x1d, 0x35, 0xed, 0x8e,
  0x9a, 0x98, 0x68, 0xa6, 0x76, 0x94, 0xc9, 0x40, 0xc1, 0x4c, 0x34, 0xcc,
  0x8e, 0xc1, 0x63, 0x86, 0x50, 0xdc, 0x43, 0xb4, 0x5b, 0xeb, 0xb8, 0x4c,
  0x6f, 0x36, 0x11, 0x15, 0x76, 0x6d, 0x38, 0x3b, 0xe7, 0x72, 0xef, 0x61,
  0xa8, 0x38, 0x30, 0xdd, 0x96, 0xc7, 0xf8, 0xda, 0xea, 0xf7, 0x46, 0x60,
  0x5c, 0xc3, 0x1b, 0x71, 0x17, 0xdd, 0x5c, 0xd6, 0x42, 0x57, 0xc8, 0x3d,
  0x8b, 0x11, 0xaf, 0xd0, 0x84, 0xc2, 0x28, 0xe3, 0xe7, 0x8d, 0xab, 0x83,
  0x1f, 0x56, 0x17, 0x5e, 0x4e, 0x5e, 0xec, 0x7f, 0xb1, 0x7a, 0xfd, 0xdb,
  0xf7, 0xdf, 0x57, 0x76, 0xe4, 0x0f, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x04, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x92, 0x30, 0x00, 0x00, 0x00, 0xf0, 0xff, 0x00,
  0x00, 0x00, 0x00, 0x74, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x03, 0x00, 0x08, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x02, 0x04, 0x02,
  0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x88, 0x00, 0x00,
  0x78, 0x01, 0x4d, 0xcc, 0xbb, 0x0d, 0x80, 0x30, 0x0c, 0x06, 0xe1, 0x9f,
  0x47, 0x7a, 0xca, 0x54, 0xcc, 0x40, 0xc9, 0x10, 0x94, 0xec, 0x93, 0xd1,
  0xcd, 0x5d, 0x11, 0x89, 0x93, 0x3e, 0xd9, 0x92, 0xa3, 0x2c, 0x49, 0x56,
  0x74, 0xb8, 0xbf, 0x38, 0x61, 0x0d, 0x17, 0xbc, 0xbb, 0x3f, 0xf0, 0xcd,
  0x0d, 0x73, 0x9f, 0x15, 0x39, 0x67, 0xdb, 0x8f, 0x1d, 0xd8, 0xe1, 0x5f,
  0x56, 0x35, 0x86, 0xd3, 0x5a, 0x92, 0x0f, 0xb3, 0xbf, 0x08, 0x6d, 0x00,
  0x78, 0x62, 0x6f, 0x70, 0x01, 0x00, 0x00, 0x00, 0x7e, 0x02, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00
};
