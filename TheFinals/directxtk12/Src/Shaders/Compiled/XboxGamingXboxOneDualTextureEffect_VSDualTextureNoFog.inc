#if 0
;
; Input signature:
;
; Name                 Index   Mask Register SysValue  Format   Used
; -------------------- ----- ------ -------- -------- ------- ------
; SV_Position              0   xyzw        0     NONE   float   xyzw
; TEXCOORD                 0   xy          1     NONE   float   xy  
; TEXCOORD                 1   xy          2     NONE   float   xy  
;
;
; Output signature:
;
; Name                 Index   Mask Register SysValue  Format   Used
; -------------------- ----- ------ -------- -------- ------- ------
; COLOR                    0   xyzw        0     NONE   float   xyzw
; TEXCOORD                 0   xy          1     NONE   float   xy  
; TEXCOORD                 1     zw        1     NONE   float     zw
; SV_Position              0   xyzw        2      POS   float   xyzw
;
; shader debug name: C:\Users\marcu\Downloads\DirectXTK12-main\DirectXTK12-main\Src/Shaders/Compiled\XboxGamingXboxOneDualTextureEffect_VSDualTextureNoFog.pdb
; shader hash: ce75157c3747c5c073a934616b2098af
;
; Pipeline Runtime Information: 
;
;PSVRuntimeInfo:
; Vertex Shader
; OutputPositionPresent=1
; MinimumExpectedWaveLaneCount: 0
; MaximumExpectedWaveLaneCount: 4294967295
; UsesViewID: false
; SigInputElements: 3
; SigOutputElements: 4
; SigPatchConstOrPrimElements: 0
; SigInputVectors: 3
; SigOutputVectors[0]: 3
; SigOutputVectors[1]: 0
; SigOutputVectors[2]: 0
; SigOutputVectors[3]: 0
; EntryFunctionName: VSDualTextureNoFog
;
;
; Input signature:
;
; Name                 Index             InterpMode DynIdx
; -------------------- ----- ---------------------- ------
; SV_Position              0                              
; TEXCOORD                 0                              
; TEXCOORD                 1                              
;
; Output signature:
;
; Name                 Index             InterpMode DynIdx
; -------------------- ----- ---------------------- ------
; COLOR                    0                 linear       
; TEXCOORD                 0                 linear       
; TEXCOORD                 1                 linear       
; SV_Position              0          noperspective       
;
; Buffer Definitions:
;
; cbuffer 
; {
;
;   [112 x i8] (type annotation not present)
;
; }
;
;
; Resource Bindings:
;
; Name                                 Type  Format         Dim      ID      HLSL Bind  Count
; ------------------------------ ---------- ------- ----------- ------- -------------- ------
;                                   cbuffer      NA          NA     CB0            cb0     1
;
;
; ViewId state:
;
; Number of inputs: 10, outputs: 12
; Outputs dependent on ViewId: {  }
; Inputs contributing to computation of Outputs:
;   output 4 depends on inputs: { 4 }
;   output 5 depends on inputs: { 5 }
;   output 6 depends on inputs: { 8 }
;   output 7 depends on inputs: { 9 }
;   output 8 depends on inputs: { 0, 1, 2, 3 }
;   output 9 depends on inputs: { 0, 1, 2, 3 }
;   output 10 depends on inputs: { 0, 1, 2, 3 }
;   output 11 depends on inputs: { 0, 1, 2, 3 }
;
target datalayout = "e-m:e-p:32:32-i1:32-i8:32-i16:32-i32:32-i64:64-f16:32-f32:32-f64:64-n8:16:32:64"
target triple = "dxil-ms-xb1"

%dx.types.Handle = type { i8* }
%dx.types.CBufRet.f32 = type { float, float, float, float }
%hostlayout.Parameters = type { <4 x float>, <3 x float>, <4 x float>, [4 x <4 x float>] }

define void @VSDualTextureNoFog() {
  %1 = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 2, i32 0, i32 0, i1 false)  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %2 = call float @dx.op.loadInput.f32(i32 4, i32 2, i32 0, i8 0, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %3 = call float @dx.op.loadInput.f32(i32 4, i32 2, i32 0, i8 1, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %4 = call float @dx.op.loadInput.f32(i32 4, i32 1, i32 0, i8 0, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %5 = call float @dx.op.loadInput.f32(i32 4, i32 1, i32 0, i8 1, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %6 = call float @dx.op.loadInput.f32(i32 4, i32 0, i32 0, i8 0, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %7 = call float @dx.op.loadInput.f32(i32 4, i32 0, i32 0, i8 1, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %8 = call float @dx.op.loadInput.f32(i32 4, i32 0, i32 0, i8 2, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %9 = call float @dx.op.loadInput.f32(i32 4, i32 0, i32 0, i8 3, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %10 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 3)  ; CBufferLoadLegacy(handle,regIndex)
  %11 = extractvalue %dx.types.CBufRet.f32 %10, 0
  %12 = extractvalue %dx.types.CBufRet.f32 %10, 1
  %13 = extractvalue %dx.types.CBufRet.f32 %10, 2
  %14 = extractvalue %dx.types.CBufRet.f32 %10, 3
  %15 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 4)  ; CBufferLoadLegacy(handle,regIndex)
  %16 = extractvalue %dx.types.CBufRet.f32 %15, 0
  %17 = extractvalue %dx.types.CBufRet.f32 %15, 1
  %18 = extractvalue %dx.types.CBufRet.f32 %15, 2
  %19 = extractvalue %dx.types.CBufRet.f32 %15, 3
  %20 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 5)  ; CBufferLoadLegacy(handle,regIndex)
  %21 = extractvalue %dx.types.CBufRet.f32 %20, 0
  %22 = extractvalue %dx.types.CBufRet.f32 %20, 1
  %23 = extractvalue %dx.types.CBufRet.f32 %20, 2
  %24 = extractvalue %dx.types.CBufRet.f32 %20, 3
  %25 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 6)  ; CBufferLoadLegacy(handle,regIndex)
  %26 = extractvalue %dx.types.CBufRet.f32 %25, 0
  %27 = extractvalue %dx.types.CBufRet.f32 %25, 1
  %28 = extractvalue %dx.types.CBufRet.f32 %25, 2
  %29 = extractvalue %dx.types.CBufRet.f32 %25, 3
  %30 = fmul fast float %11, %6
  %31 = call float @dx.op.tertiary.f32(i32 46, float %7, float %12, float %30)  ; FMad(a,b,c)
  %32 = call float @dx.op.tertiary.f32(i32 46, float %8, float %13, float %31)  ; FMad(a,b,c)
  %33 = call float @dx.op.tertiary.f32(i32 46, float %9, float %14, float %32)  ; FMad(a,b,c)
  %34 = fmul fast float %16, %6
  %35 = call float @dx.op.tertiary.f32(i32 46, float %7, float %17, float %34)  ; FMad(a,b,c)
  %36 = call float @dx.op.tertiary.f32(i32 46, float %8, float %18, float %35)  ; FMad(a,b,c)
  %37 = call float @dx.op.tertiary.f32(i32 46, float %9, float %19, float %36)  ; FMad(a,b,c)
  %38 = fmul fast float %21, %6
  %39 = call float @dx.op.tertiary.f32(i32 46, float %7, float %22, float %38)  ; FMad(a,b,c)
  %40 = call float @dx.op.tertiary.f32(i32 46, float %8, float %23, float %39)  ; FMad(a,b,c)
  %41 = call float @dx.op.tertiary.f32(i32 46, float %9, float %24, float %40)  ; FMad(a,b,c)
  %42 = fmul fast float %26, %6
  %43 = call float @dx.op.tertiary.f32(i32 46, float %7, float %27, float %42)  ; FMad(a,b,c)
  %44 = call float @dx.op.tertiary.f32(i32 46, float %8, float %28, float %43)  ; FMad(a,b,c)
  %45 = call float @dx.op.tertiary.f32(i32 46, float %9, float %29, float %44)  ; FMad(a,b,c)
  %46 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 0)  ; CBufferLoadLegacy(handle,regIndex)
  %47 = extractvalue %dx.types.CBufRet.f32 %46, 0
  %48 = extractvalue %dx.types.CBufRet.f32 %46, 1
  %49 = extractvalue %dx.types.CBufRet.f32 %46, 2
  %50 = extractvalue %dx.types.CBufRet.f32 %46, 3
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 0, float %47)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 1, float %48)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 2, float %49)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 3, float %50)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 1, i32 0, i8 0, float %4)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 1, i32 0, i8 1, float %5)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 2, i32 0, i8 0, float %2)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 2, i32 0, i8 1, float %3)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 3, i32 0, i8 0, float %33)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 3, i32 0, i8 1, float %37)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 3, i32 0, i8 2, float %41)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 3, i32 0, i8 3, float %45)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  ret void
}

; Function Attrs: nounwind readnone
declare float @dx.op.loadInput.f32(i32, i32, i32, i8, i32) #0

; Function Attrs: nounwind
declare void @dx.op.storeOutput.f32(i32, i32, i32, i8, float) #1

; Function Attrs: nounwind readonly
declare %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32, %dx.types.Handle, i32) #2

; Function Attrs: nounwind readnone
declare float @dx.op.tertiary.f32(i32, float, float, float) #0

; Function Attrs: nounwind readonly
declare %dx.types.Handle @dx.op.createHandle(i32, i8, i32, i32, i1) #2

attributes #0 = { nounwind readnone }
attributes #1 = { nounwind }
attributes #2 = { nounwind readonly }

!xbox.compiler.options = !{!0}
!llvm.ident = !{!1}
!dx.version = !{!2}
!dx.valver = !{!3}
!dx.shaderModel = !{!4}
!dx.resources = !{!5}
!dx.viewIdState = !{!8}
!dx.entryPoints = !{!9}

!0 = !{!"__XBOX_PER_THREAD_SCRATCH_SIZE_LIMIT_IN_BYTES", !"0"}
!1 = !{!"dxcxbox 2410.2410.11116.10741"}
!2 = !{i32 1, i32 0}
!3 = !{i32 1, i32 8}
!4 = !{!"vs", i32 6, i32 0}
!5 = !{null, null, !6, null}
!6 = !{!7}
!7 = !{i32 0, %hostlayout.Parameters* undef, !"", i32 0, i32 0, i32 1, i32 112, null}
!8 = !{[12 x i32] [i32 10, i32 12, i32 3840, i32 3840, i32 3840, i32 3840, i32 16, i32 32, i32 0, i32 0, i32 64, i32 128]}
!9 = !{void ()* @VSDualTextureNoFog, !"VSDualTextureNoFog", !10, !5, null}
!10 = !{!11, !19, null}
!11 = !{!12, !15, !17}
!12 = !{i32 0, !"SV_Position", i8 9, i8 0, !13, i8 0, i32 1, i8 4, i32 0, i8 0, !14}
!13 = !{i32 0}
!14 = !{i32 3, i32 15}
!15 = !{i32 1, !"TEXCOORD", i8 9, i8 0, !13, i8 0, i32 1, i8 2, i32 1, i8 0, !16}
!16 = !{i32 3, i32 3}
!17 = !{i32 2, !"TEXCOORD", i8 9, i8 0, !18, i8 0, i32 1, i8 2, i32 2, i8 0, !16}
!18 = !{i32 1}
!19 = !{!20, !21, !22, !23}
!20 = !{i32 0, !"COLOR", i8 9, i8 0, !13, i8 2, i32 1, i8 4, i32 0, i8 0, !14}
!21 = !{i32 1, !"TEXCOORD", i8 9, i8 0, !13, i8 2, i32 1, i8 2, i32 1, i8 0, !16}
!22 = !{i32 2, !"TEXCOORD", i8 9, i8 0, !18, i8 2, i32 1, i8 2, i32 1, i8 2, !16}
!23 = !{i32 3, !"SV_Position", i8 9, i8 3, !13, i8 4, i32 1, i8 4, i32 2, i8 0, !14}

;
; DUMPING SHADER HARDWARE INSTRUCTIONS 
;
// Shader Type               : (VS)
// Shader Hw Stage           : (VS)

// Shader Instructions:
shader main
  asic(CI)
  type(VS)
  s_swappc_b64  s[0:1], s[0:1]
  s_or_b32      s1, s8, 0x00100000 // wrscc
  s_mov_b32     s0, s7
  s_mov_b32     s2, -1
  s_mov_b32     s3, 0x00024fac
  s_buffer_load_dwordx4  s[16:19], s[0:3], 0x00
  s_buffer_load_dwordx16  s[0:15], s[0:3], 0x0c
  s_waitcnt     vmcnt(0) & lgkmcnt(0)
  v_mul_legacy_f32  v0, s0, v4
  v_mul_legacy_f32  v1, s4, v4
  v_mul_legacy_f32  v2, s8, v4
  v_mul_legacy_f32  v3, s12, v4
  v_mac_legacy_f32  v0, s1, v5
  v_mac_legacy_f32  v1, s5, v5
  v_mac_legacy_f32  v2, s9, v5
  v_mac_legacy_f32  v3, s13, v5
  v_mac_legacy_f32  v0, s2, v6
  v_mac_legacy_f32  v1, s6, v6
  v_mac_legacy_f32  v2, s10, v6
  v_mac_legacy_f32  v3, s14, v6
  v_mac_legacy_f32  v0, s3, v7
  v_mac_legacy_f32  v1, s7, v7
  v_mac_legacy_f32  v2, s11, v7
  v_mac_legacy_f32  v3, s15, v7
  exp           pos0, v0, v1, v2, v3 done
  v_mov_b32     v4, s16
  v_mov_b32     v5, s17
  v_mov_b32     v6, s18
  v_mov_b32     v7, s19
  exp           param0, v4, v5, v6, v7
  exp           param1, v8, v9, v12, v13
  s_endpgm      
end


NumVGPR=14,NumSGPR=22,LDS=0,Scratch=0,Occpancy=10

// Shader Type               : (VS)
// Shader Hw Stage           : (ES)

// Shader Instructions:
shader main
  asic(CI)
  type(VS)
  s_swappc_b64  s[0:1], s[0:1]
  s_or_b32      s13, s8, 0x00100000 // wrscc
  s_mov_b32     s12, s7
  s_mov_b32     s14, -1
  s_mov_b32     s15, 0x00024fac
  s_buffer_load_dwordx4  s[4:7], s[12:15], 0x00
  s_buffer_load_dwordx16  s[12:27], s[12:15], 0x0c
  s_mov_b32     s1, 0
  s_load_dwordx4  s[0:3], s[0:1], 0x08
  s_waitcnt     lgkmcnt(0)
  v_mov_b32     v0, s4
  s_waitcnt     vmcnt(0)
  v_mul_legacy_f32  v1, s12, v4
  v_mac_legacy_f32  v1, s13, v5
  v_mac_legacy_f32  v1, s14, v6
  v_mac_legacy_f32  v1, s15, v7
  buffer_store_dword  v1, v0, s[0:3], s9 offset:32 glc slc
  v_mul_legacy_f32  v1, s16, v4
  v_mac_legacy_f32  v1, s17, v5
  v_mac_legacy_f32  v1, s18, v6
  v_mac_legacy_f32  v1, s19, v7
  buffer_store_dword  v1, v0, s[0:3], s9 offset:36 glc slc
  v_mul_legacy_f32  v1, s20, v4
  v_mac_legacy_f32  v1, s21, v5
  v_mac_legacy_f32  v1, s22, v6
  v_mac_legacy_f32  v1, s23, v7
  buffer_store_dword  v1, v0, s[0:3], s9 offset:40 glc slc
  v_mul_legacy_f32  v1, s24, v4
  v_mac_legacy_f32  v1, s25, v5
  v_mac_legacy_f32  v1, s26, v6
  v_mac_legacy_f32  v1, s27, v7
  buffer_store_dword  v1, v0, s[0:3], s9 offset:44 glc slc
  buffer_store_dword  v0, v0, s[0:3], s9 glc slc
  v_mov_b32     v0, s5
  buffer_store_dword  v0, v0, s[0:3], s9 offset:4 glc slc
  v_mov_b32     v0, s6
  buffer_store_dword  v0, v0, s[0:3], s9 offset:8 glc slc
  v_mov_b32     v0, s7
  buffer_store_dword  v0, v0, s[0:3], s9 offset:12 glc slc
  buffer_store_dword  v8, v0, s[0:3], s9 offset:16 glc slc
  buffer_store_dword  v9, v0, s[0:3], s9 offset:20 glc slc
  buffer_store_dword  v12, v0, s[0:3], s9 offset:24 glc slc
  buffer_store_dword  v13, v0, s[0:3], s9 offset:28 glc slc
  s_endpgm      
end


NumVGPR=14,NumSGPR=30,LDS=0,Scratch=0,Occpancy=10

// Shader Type               : (VS)
// Shader Hw Stage           : (LS)

// Shader Instructions:
shader main
  asic(CI)
  type(VS)
  s_swappc_b64  s[0:1], s[0:1]
  s_or_b32      s1, s8, 0x00100000 // wrscc
  s_mov_b32     s0, s7
  s_mov_b32     s2, -1
  s_mov_b32     s3, 0x00024fac
  s_buffer_load_dwordx4  s[16:19], s[0:3], 0x00
  s_buffer_load_dwordx16  s[0:15], s[0:3], 0x0c
  s_mov_b32     m0, -1
  s_waitcnt     vmcnt(0) & lgkmcnt(0)
  v_mul_legacy_f32  v0, s0, v4
  v_mac_legacy_f32  v0, s1, v5
  v_mac_legacy_f32  v0, s2, v6
  v_mad_legacy_f32  v2, v7, s3, v0
  v_mul_legacy_f32  v0, s4, v4
  v_mac_legacy_f32  v0, s5, v5
  v_mac_legacy_f32  v0, s6, v6
  v_mad_legacy_f32  v3, v7, s7, v0
  v_mul_legacy_f32  v0, s8, v4
  v_mul_legacy_f32  v4, s12, v4
  v_mac_legacy_f32  v0, s9, v5
  v_mac_legacy_f32  v4, s13, v5
  v_mul_lo_i32  v5, v1, 48
  v_mac_legacy_f32  v0, s10, v6
  v_mad_legacy_f32  v1, v6, s14, v4
  v_mac_legacy_f32  v0, s11, v7
  v_mac_legacy_f32  v1, s15, v7
  ds_write2_b64  v5, v[2:3], v[0:1] offset0:4 offset1:5
  v_mov_b32     v0, s18
  v_mov_b32     v1, s19
  v_mov_b32     v2, s16
  v_mov_b32     v3, s17
  ds_write2_b64  v5, v[2:3], v[0:1] offset1:1
  ds_write2_b64  v5, v[8:9], v[12:13] offset0:2 offset1:3
  s_endpgm      
end


NumVGPR=14,NumSGPR=22,LDS=0,Scratch=0,Occpancy=10


#endif

const unsigned char DualTextureEffect_VSDualTextureNoFog[] = {
  0x44, 0x58, 0x42, 0x43, 0x62, 0x36, 0x2d, 0x10, 0x4b, 0xd2, 0x48, 0xbd,
  0xed, 0xf5, 0xf9, 0x89, 0xb2, 0xaa, 0x7d, 0xb1, 0x01, 0x00, 0x00, 0x00,
  0xa8, 0x14, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00,
  0x50, 0x00, 0x00, 0x00, 0xd8, 0x00, 0x00, 0x00, 0x84, 0x01, 0x00, 0x00,
  0xe4, 0x02, 0x00, 0x00, 0xb8, 0x03, 0x00, 0x00, 0x50, 0x04, 0x00, 0x00,
  0x6c, 0x04, 0x00, 0x00, 0x53, 0x46, 0x49, 0x30, 0x08, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x49, 0x53, 0x47, 0x31,
  0x80, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x68, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x0f, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x74, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x03, 0x03, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x74, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x03, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x53, 0x56, 0x5f, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x00,
  0x54, 0x45, 0x58, 0x43, 0x4f, 0x4f, 0x52, 0x44, 0x00, 0x00, 0x00, 0x00,
  0x4f, 0x53, 0x47, 0x31, 0xa4, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00,
  0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x88, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x8e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x03, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x8e, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0c, 0x03, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x97, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x43, 0x4f, 0x4c, 0x4f, 0x52, 0x00, 0x54, 0x45, 0x58, 0x43, 0x4f, 0x4f,
  0x52, 0x44, 0x00, 0x53, 0x56, 0x5f, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69,
  0x6f, 0x6e, 0x00, 0x00, 0x50, 0x53, 0x56, 0x30, 0x58, 0x01, 0x00, 0x00,
  0x34, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xff, 0xff, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x03, 0x04, 0x00, 0x03,
  0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x37, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x18, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x4c, 0x00, 0x00, 0x00, 0x00, 0x53, 0x56, 0x5f,
  0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x00, 0x54, 0x45, 0x58,
  0x43, 0x4f, 0x4f, 0x52, 0x44, 0x00, 0x54, 0x45, 0x58, 0x43, 0x4f, 0x4f,
  0x52, 0x44, 0x00, 0x43, 0x4f, 0x4c, 0x4f, 0x52, 0x00, 0x54, 0x45, 0x58,
  0x43, 0x4f, 0x4f, 0x52, 0x44, 0x00, 0x54, 0x45, 0x58, 0x43, 0x4f, 0x4f,
  0x52, 0x44, 0x00, 0x56, 0x53, 0x44, 0x75, 0x61, 0x6c, 0x54, 0x65, 0x78,
  0x74, 0x75, 0x72, 0x65, 0x4e, 0x6f, 0x46, 0x6f, 0x67, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x10, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x44, 0x00, 0x03, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x42, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x16, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x02, 0x42, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x1f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x44, 0x00, 0x03, 0x02, 0x00, 0x00, 0x25, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x42, 0x00, 0x03, 0x02, 0x00, 0x00,
  0x2e, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x01, 0x62, 0x00,
  0x03, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x02, 0x44, 0x03, 0x03, 0x04, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00,
  0x00, 0x0f, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00,
  0x10, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x52, 0x54, 0x53, 0x30,
  0xcc, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00,
  0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xcc, 0x00, 0x00, 0x00,
  0x1d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00,
  0x54, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00,
  0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00,
  0x8c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00,
  0xa8, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xc4, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x5c, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00,
  0x78, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff,
  0x01, 0x00, 0x00, 0x00, 0x94, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xff, 0xff, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0xb0, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x49, 0x4c, 0x44, 0x4e, 0x90, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x89, 0x00, 0x43, 0x3a, 0x5c, 0x55, 0x73, 0x65, 0x72, 0x73,
  0x5c, 0x6d, 0x61, 0x72, 0x63, 0x75, 0x5c, 0x44, 0x6f, 0x77, 0x6e, 0x6c,
  0x6f, 0x61, 0x64, 0x73, 0x5c, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x58,
  0x54, 0x4b, 0x31, 0x32, 0x2d, 0x6d, 0x61, 0x69, 0x6e, 0x5c, 0x44, 0x69,
  0x72, 0x65, 0x63, 0x74, 0x58, 0x54, 0x4b, 0x31, 0x32, 0x2d, 0x6d, 0x61,
  0x69, 0x6e, 0x5c, 0x53, 0x72, 0x63, 0x2f, 0x53, 0x68, 0x61, 0x64, 0x65,
  0x72, 0x73, 0x2f, 0x43, 0x6f, 0x6d, 0x70, 0x69, 0x6c, 0x65, 0x64, 0x5c,
  0x58, 0x62, 0x6f, 0x78, 0x47, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x58, 0x62,
  0x6f, 0x78, 0x4f, 0x6e, 0x65, 0x44, 0x75, 0x61, 0x6c, 0x54, 0x65, 0x78,
  0x74, 0x75, 0x72, 0x65, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x5f, 0x56,
  0x53, 0x44, 0x75, 0x61, 0x6c, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65,
  0x4e, 0x6f, 0x46, 0x6f, 0x67, 0x2e, 0x70, 0x64, 0x62, 0x00, 0x00, 0x00,
  0x48, 0x41, 0x53, 0x48, 0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xce, 0x75, 0x15, 0x7c, 0x37, 0x47, 0xc5, 0xc0, 0x73, 0xa9, 0x34, 0x61,
  0x6b, 0x20, 0x98, 0xaf, 0x44, 0x58, 0x49, 0x4c, 0x34, 0x10, 0x00, 0x00,
  0x60, 0x00, 0x01, 0x00, 0x0d, 0x04, 0x00, 0x00, 0x44, 0x58, 0x49, 0x4c,
  0x00, 0x01, 0x00, 0x00, 0x94, 0x00, 0x00, 0x00, 0x84, 0x08, 0x00, 0x00,
  0x58, 0x44, 0x41, 0x54, 0x08, 0x00, 0x00, 0x00, 0x24, 0x00, 0x00, 0x00,
  0x07, 0x00, 0x00, 0x00, 0x84, 0x00, 0x00, 0x00, 0x9c, 0x08, 0x00, 0x00,
  0x10, 0x00, 0x00, 0x00, 0x20, 0x09, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x30, 0x09, 0x00, 0x00, 0xb5, 0x01, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xe8, 0x0a, 0x00, 0x00, 0xeb, 0x01, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xd4, 0x0c, 0x00, 0x00, 0xcb, 0x01, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0xa0, 0x0e, 0x00, 0x00, 0x20, 0x01, 0x00, 0x00,
  0x06, 0x00, 0x00, 0x00, 0xc0, 0x0f, 0x00, 0x00, 0x5f, 0x00, 0x00, 0x00,
  0x08, 0x00, 0x00, 0x00, 0x20, 0x10, 0x00, 0x00, 0x11, 0x00, 0x00, 0x00,
  0x60, 0x00, 0x01, 0x00, 0x27, 0x02, 0x00, 0x00, 0x44, 0x58, 0x49, 0x4c,
  0x00, 0x01, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x84, 0x08, 0x00, 0x00,
  0x42, 0x43, 0xc0, 0xde, 0x21, 0x0c, 0x00, 0x00, 0x1e, 0x02, 0x00, 0x00,
  0x0b, 0x82, 0x20, 0x00, 0x02, 0x00, 0x00, 0x00, 0x13, 0x00, 0x00, 0x00,
  0x07, 0x81, 0x23, 0x91, 0x41, 0xc8, 0x04, 0x49, 0x06, 0x10, 0x32, 0x39,
  0x92, 0x01, 0x84, 0x0c, 0x25, 0x05, 0x08, 0x19, 0x1e, 0x04, 0x8b, 0x62,
  0x80, 0x14, 0x45, 0x02, 0x42, 0x92, 0x0b, 0x42, 0xa4, 0x10, 0x32, 0x14,
  0x38, 0x08, 0x18, 0x4b, 0x0a, 0x32, 0x52, 0x88, 0x48, 0x90, 0x14, 0x20,
  0x43, 0x46, 0x88, 0xa5, 0x00, 0x19, 0x32, 0x42, 0xe4, 0x48, 0x0e, 0x90,
  0x91, 0x22, 0xc4, 0x50, 0x41, 0x51, 0x81, 0x8c, 0xe1, 0x83, 0xe5, 0x8a,
  0x04, 0x29, 0x46, 0x06, 0x51, 0x18, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00,
  0x1b, 0x8c, 0xe0, 0xff, 0xff, 0xff, 0xff, 0x07, 0x40, 0x02, 0xa8, 0x0d,
  0x84, 0xf0, 0xff, 0xff, 0xff, 0xff, 0x03, 0x20, 0x6d, 0x30, 0x86, 0xff,
  0xff, 0xff, 0xff, 0x1f, 0x00, 0x09, 0xa8, 0x00, 0x49, 0x18, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x13, 0x82, 0x60, 0x42, 0x20, 0x4c, 0x08, 0x06,
  0x00, 0x00, 0x00, 0x00, 0x89, 0x20, 0x00, 0x00, 0x25, 0x00, 0x00, 0x00,
  0x32, 0x22, 0x48, 0x09, 0x20, 0x64, 0x85, 0x04, 0x93, 0x22, 0xa4, 0x84,
  0x04, 0x93, 0x22, 0xe3, 0x84, 0xa1, 0x90, 0x14, 0x12, 0x4c, 0x8a, 0x8c,
  0x0b, 0x84, 0xa4, 0x4c, 0x10, 0x6c, 0x23, 0x00, 0x25, 0x00, 0x14, 0x66,
  0x00, 0xe6, 0x08, 0xc0, 0x60, 0x8e, 0x00, 0x29, 0xc6, 0x20, 0x84, 0x14,
  0x42, 0xa6, 0x18, 0x80, 0x10, 0x52, 0x06, 0xa1, 0xa3, 0x86, 0xcb, 0x9f,
  0xb0, 0x87, 0x90, 0x7c, 0x6e, 0xa3, 0x8a, 0x95, 0x98, 0xfc, 0xe2, 0xb6,
  0x11, 0x31, 0xc6, 0x18, 0x54, 0xee, 0x19, 0x2e, 0x7f, 0xc2, 0x1e, 0x42,
  0xf2, 0x43, 0xa0, 0x19, 0x16, 0x02, 0x05, 0xab, 0x10, 0x8a, 0x30, 0x42,
  0xad, 0x14, 0x83, 0x8c, 0x31, 0xe8, 0xcd, 0x11, 0x04, 0xc5, 0x60, 0xa4,
  0x10, 0x12, 0x49, 0x0e, 0x04, 0x0c, 0x23, 0x10, 0xc3, 0x30, 0xc2, 0x30,
  0x24, 0x41, 0xbd, 0xea, 0x70, 0xa4, 0x69, 0x01, 0x30, 0x87, 0x9a, 0xfc,
  0x14, 0x88, 0x00, 0x86, 0x98, 0x88, 0x48, 0x42, 0x44, 0xb5, 0xf5, 0x12,
  0x4e, 0x06, 0x02, 0x00, 0x13, 0x16, 0x72, 0xc0, 0x87, 0x74, 0x60, 0x87,
  0x36, 0x68, 0x87, 0x79, 0x68, 0x03, 0x7c, 0x10, 0x87, 0x38, 0xd8, 0xf0,
  0x0a, 0xe5, 0xd0, 0x06, 0xed, 0xa0, 0x07, 0xe5, 0xd0, 0x06, 0xf0, 0xa0,
  0x07, 0x73, 0x20, 0x07, 0x7a, 0x30, 0x07, 0x72, 0xd0, 0x06, 0xe9, 0x10,
  0x07, 0x7a, 0x30, 0x07, 0x72, 0xd0, 0x06, 0xe9, 0x80, 0x07, 0x7a, 0x30,
  0x07, 0x72, 0xd0, 0x06, 0xe9, 0x10, 0x07, 0x76, 0xa0, 0x07, 0x73, 0x20,
  0x07, 0x6d, 0x90, 0x0e, 0x73, 0x20, 0x07, 0x7a, 0x30, 0x07, 0x72, 0xd0,
  0x06, 0xe9, 0x60, 0x07, 0x74, 0xa0, 0x07, 0x76, 0x40, 0x07, 0x6d, 0x60,
  0x0e, 0x71, 0x60, 0x07, 0x7a, 0x30, 0x07, 0x72, 0xd0, 0x06, 0xe6, 0x30,
  0x07, 0x72, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x60, 0x0e, 0x76, 0x40,
  0x07, 0x7a, 0x60, 0x07, 0x74, 0xd0, 0x06, 0xee, 0x80, 0x07, 0x7a, 0x10,
  0x07, 0x76, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x7a, 0x60, 0x07, 0x74, 0x30,
  0xe4, 0x09, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x60, 0xc8, 0x63, 0x00, 0x01, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0xc0, 0x90, 0x07, 0x01, 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x80, 0x21, 0x4f, 0x03, 0x04, 0xc0, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x43, 0x9e, 0x07, 0x08, 0x80, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x86, 0x3c, 0x12, 0x10, 0x00, 0x03, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x64, 0x81, 0x00, 0x00, 0x00, 0x00,
  0x10, 0x00, 0x00, 0x00, 0x32, 0x1e, 0x98, 0x14, 0x19, 0x11, 0x4c, 0x90,
  0x8c, 0x09, 0x26, 0x47, 0xc6, 0x04, 0x43, 0x22, 0x25, 0x30, 0x02, 0x50,
  0x10, 0xc5, 0x50, 0xe0, 0x01, 0x65, 0x50, 0x1e, 0x45, 0x40, 0xa5, 0x24,
  0x46, 0x00, 0x0a, 0xa1, 0x08, 0xca, 0x80, 0xf2, 0x0c, 0x00, 0xe9, 0xb1,
  0x18, 0x85, 0x01, 0xf1, 0x01, 0xc4, 0x07, 0x10, 0x1f, 0x40, 0x7c, 0x80,
  0xc0, 0x00, 0x00, 0x40, 0x01, 0x24, 0x00, 0x00, 0x79, 0x18, 0x00, 0x00,
  0x7b, 0x00, 0x00, 0x00, 0x1a, 0x03, 0x4c, 0x90, 0x46, 0x02, 0x13, 0xc4,
  0x36, 0xf8, 0xfa, 0xc2, 0x12, 0x7a, 0xc2, 0xfa, 0x82, 0x2a, 0x92, 0xfa,
  0xa2, 0x42, 0x92, 0x2a, 0x0a, 0x22, 0xfa, 0x9a, 0x1a, 0x92, 0x0a, 0xa2,
  0x1a, 0x42, 0xfa, 0x9a, 0x4a, 0xd2, 0x2a, 0xfa, 0x62, 0x4a, 0x6a, 0x4a,
  0xa2, 0xfa, 0x4a, 0x72, 0xfa, 0x12, 0xca, 0xa2, 0x2a, 0x9a, 0x62, 0x00,
  0xb3, 0x41, 0x08, 0x04, 0x76, 0x64, 0x78, 0x63, 0x78, 0x62, 0x6f, 0x78,
  0x20, 0x32, 0x34, 0x31, 0x30, 0x2e, 0x32, 0x34, 0x31, 0x30, 0x2e, 0x31,
  0x31, 0x31, 0x31, 0x36, 0x2e, 0x31, 0x30, 0x37, 0x34, 0x31, 0x1b, 0x02,
  0x62, 0x82, 0x40, 0x18, 0x13, 0x04, 0xe2, 0xd8, 0x20, 0x18, 0xc7, 0x04,
  0x81, 0x40, 0x36, 0x08, 0x46, 0x42, 0xc1, 0x6e, 0x6e, 0x82, 0x40, 0x24,
  0x1b, 0x86, 0x85, 0x39, 0x26, 0x08, 0xd9, 0x44, 0x60, 0x82, 0x40, 0x28,
  0x1b, 0x90, 0xc3, 0x79, 0x8e, 0xc3, 0x80, 0x80, 0x0d, 0x41, 0xb4, 0x81,
  0x00, 0x00, 0x09, 0x98, 0x20, 0x68, 0xd4, 0x86, 0x80, 0x9a, 0x20, 0x08,
  0x00, 0x25, 0xab, 0x29, 0xa2, 0xba, 0x30, 0x36, 0xaa, 0x32, 0x3c, 0xba,
  0x3a, 0xb9, 0x32, 0xa7, 0x37, 0xa3, 0xb7, 0x33, 0x2e, 0x53, 0x56, 0x5f,
  0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x13, 0x84, 0xc2, 0x99,
  0x20, 0x14, 0xcf, 0x86, 0xe0, 0x98, 0x20, 0x14, 0xd0, 0x04, 0x81, 0x58,
  0x26, 0x08, 0x04, 0xb3, 0x41, 0xe8, 0xbc, 0x0d, 0xcb, 0x81, 0x65, 0xda,
  0xa6, 0x19, 0xdc, 0xa1, 0x7d, 0x44, 0xa8, 0x8a, 0xb0, 0x86, 0x9e, 0x9e,
  0xa4, 0x88, 0x26, 0x08, 0x45, 0xb4, 0x41, 0xe8, 0xba, 0x0d, 0x8b, 0x11,
  0x06, 0x99, 0xb6, 0x69, 0x86, 0x18, 0x18, 0xda, 0x18, 0x4c, 0x10, 0x88,
  0x66, 0x43, 0x60, 0x6c, 0x58, 0xca, 0x20, 0x0c, 0x32, 0xcd, 0x0c, 0x34,
  0x43, 0x0c, 0xca, 0x40, 0x1b, 0x83, 0x0d, 0x03, 0x18, 0x90, 0xc1, 0x19,
  0xb0, 0x18, 0x7a, 0x62, 0x7a, 0x92, 0xda, 0xb0, 0x1c, 0x69, 0x90, 0x69,
  0x9b, 0x18, 0x18, 0xdc, 0xa1, 0x7d, 0x1b, 0x16, 0x23, 0x0c, 0x32, 0x6d,
  0x13, 0x03, 0x43, 0x0c, 0x0c, 0x6d, 0x0c, 0x36, 0x2c, 0x65, 0x10, 0x06,
  0x99, 0x66, 0x06, 0x62, 0x60, 0x88, 0x81, 0x21, 0x06, 0x63, 0x30, 0x41,
  0x28, 0xa4, 0x0d, 0x4b, 0x87, 0x65, 0x6d, 0xb0, 0x71, 0x06, 0x57, 0x06,
  0xda, 0xb7, 0x81, 0x50, 0x83, 0x35, 0x60, 0x03, 0x37, 0xd8, 0x30, 0xa0,
  0xc1, 0x1b, 0x00, 0x1b, 0x0a, 0xeb, 0x82, 0x83, 0x09, 0x68, 0x85, 0x27,
  0xf6, 0x86, 0xe7, 0x32, 0xf6, 0xd6, 0x06, 0x97, 0xc6, 0x56, 0x26, 0xe7,
  0xf2, 0x06, 0x47, 0x97, 0xf6, 0xe6, 0x36, 0x37, 0x25, 0x10, 0xaa, 0xb0,
  0xb1, 0xd9, 0xb5, 0xb9, 0xa4, 0x91, 0x95, 0xb9, 0xd1, 0x4d, 0x09, 0x88,
  0x2a, 0x64, 0x78, 0x2e, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x53,
  0x82, 0xa3, 0x09, 0x19, 0x9e, 0x8b, 0x5d, 0x18, 0x9b, 0x5d, 0x99, 0xdc,
  0x94, 0x20, 0xa9, 0x43, 0x86, 0xe7, 0x32, 0x87, 0x16, 0x46, 0x56, 0x26,
  0xd7, 0xf4, 0x46, 0x56, 0xc6, 0x36, 0x25, 0x60, 0xca, 0x90, 0xe1, 0xb9,
  0xc8, 0x95, 0xcd, 0xbd, 0xd5, 0xc9, 0x8d, 0x95, 0xcd, 0x4d, 0x09, 0xa4,
  0x3a, 0x64, 0x78, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x49, 0x64, 0x53, 0x74,
  0x61, 0x74, 0x65, 0x53, 0x02, 0xaa, 0x0e, 0x19, 0x9e, 0x4b, 0x99, 0x1b,
  0x9d, 0x5c, 0x1e, 0xd4, 0x5b, 0x9a, 0x1b, 0xdd, 0xdc, 0x94, 0x00, 0x0e,
  0x00, 0x00, 0x00, 0x00, 0x79, 0x18, 0x00, 0x00, 0x4c, 0x00, 0x00, 0x00,
  0x33, 0x08, 0x80, 0x1c, 0xc4, 0xe1, 0x1c, 0x66, 0x14, 0x01, 0x3d, 0x88,
  0x43, 0x38, 0x84, 0xc3, 0x8c, 0x42, 0x80, 0x07, 0x79, 0x78, 0x07, 0x73,
  0x98, 0x71, 0x0c, 0xe6, 0x00, 0x0f, 0xed, 0x10, 0x0e, 0xf4, 0x80, 0x0e,
  0x33, 0x0c, 0x42, 0x1e, 0xc2, 0xc1, 0x1d, 0xce, 0xa1, 0x1c, 0x66, 0x30,
  0x05, 0x3d, 0x88, 0x43, 0x38, 0x84, 0x83, 0x1b, 0xcc, 0x03, 0x3d, 0xc8,
  0x43, 0x3d, 0x8c, 0x03, 0x3d, 0xcc, 0x78, 0x8c, 0x74, 0x70, 0x07, 0x7b,
  0x08, 0x07, 0x79, 0x48, 0x87, 0x70, 0x70, 0x07, 0x7a, 0x70, 0x03, 0x76,
  0x78, 0x87, 0x70, 0x20, 0x87, 0x19, 0xcc, 0x11, 0x0e, 0xec, 0x90, 0x0e,
  0xe1, 0x30, 0x0f, 0x6e, 0x30, 0x0f, 0xe3, 0xf0, 0x0e, 0xf0, 0x50, 0x0e,
  0x33, 0x10, 0xc4, 0x1d, 0xde, 0x21, 0x1c, 0xd8, 0x21, 0x1d, 0xc2, 0x61,
  0x1e, 0x66, 0x30, 0x89, 0x3b, 0xbc, 0x83, 0x3b, 0xd0, 0x43, 0x39, 0xb4,
  0x03, 0x3c, 0xbc, 0x83, 0x3c, 0x84, 0x03, 0x3b, 0xcc, 0xf0, 0x14, 0x76,
  0x60, 0x07, 0x7b, 0x68, 0x07, 0x37, 0x68, 0x87, 0x72, 0x68, 0x07, 0x37,
  0x80, 0x87, 0x70, 0x90, 0x87, 0x70, 0x60, 0x07, 0x76, 0x28, 0x07, 0x76,
  0xf8, 0x05, 0x76, 0x78, 0x87, 0x77, 0x80, 0x87, 0x5f, 0x08, 0x87, 0x71,
  0x18, 0x87, 0x72, 0x98, 0x87, 0x79, 0x98, 0x81, 0x2c, 0xee, 0xf0, 0x0e,
  0xee, 0xe0, 0x0e, 0xf5, 0xc0, 0x0e, 0xec, 0x30, 0x03, 0x62, 0xc8, 0xa1,
  0x1c, 0xe4, 0xa1, 0x1c, 0xcc, 0xa1, 0x1c, 0xe4, 0xa1, 0x1c, 0xdc, 0x61,
  0x1c, 0xca, 0x21, 0x1c, 0xc4, 0x81, 0x1d, 0xca, 0x61, 0x06, 0xd6, 0x90,
  0x43, 0x39, 0xc8, 0x43, 0x39, 0x98, 0x43, 0x39, 0xc8, 0x43, 0x39, 0xb8,
  0xc3, 0x38, 0x94, 0x43, 0x38, 0x88, 0x03, 0x3b, 0x94, 0xc3, 0x2f, 0xbc,
  0x83, 0x3c, 0xfc, 0x82, 0x3b, 0xd4, 0x03, 0x3b, 0xb0, 0xc3, 0x0c, 0xc4,
  0x21, 0x07, 0x7c, 0x70, 0x03, 0x7a, 0x28, 0x87, 0x76, 0x80, 0x87, 0x19,
  0xd1, 0x43, 0x0e, 0xf8, 0xe0, 0x06, 0xe4, 0x20, 0x0e, 0xe7, 0xe0, 0x06,
  0xf6, 0x10, 0x0e, 0xf2, 0xc0, 0x0e, 0xe1, 0x90, 0x0f, 0xef, 0x50, 0x0f,
  0xf4, 0x00, 0x00, 0x00, 0x71, 0x20, 0x00, 0x00, 0x1b, 0x00, 0x00, 0x00,
  0x06, 0x20, 0xbd, 0x6c, 0x47, 0x01, 0x4b, 0x4b, 0x5c, 0x13, 0x15, 0x11,
  0xa7, 0xf3, 0x39, 0x86, 0x0d, 0x6c, 0xc3, 0xe5, 0x3b, 0x8f, 0x2f, 0x04,
  0x54, 0x51, 0x10, 0x51, 0xe9, 0x00, 0x43, 0x49, 0x18, 0x80, 0x80, 0xf9,
  0xc5, 0x6d, 0x5b, 0x81, 0x34, 0x5c, 0xbe, 0xf3, 0xf8, 0x42, 0x44, 0x00,
  0x13, 0x11, 0x02, 0xcd, 0xb0, 0x10, 0x16, 0x30, 0x0d, 0x97, 0xef, 0x3c,
  0xfe, 0xe2, 0x00, 0x83, 0xd8, 0x3c, 0xd4, 0xe4, 0x17, 0xb7, 0x6d, 0x02,
  0xd5, 0x70, 0xf9, 0xce, 0xe3, 0x4b, 0x93, 0x13, 0x11, 0x28, 0x35, 0x3d,
  0xd4, 0xe4, 0x17, 0xb7, 0x6d, 0x04, 0xd2, 0x70, 0xf9, 0xce, 0xe3, 0x4f,
  0x44, 0x34, 0x21, 0x40, 0x84, 0xf9, 0xc5, 0x6d, 0x03, 0x00, 0x00, 0x00,
  0x61, 0x20, 0x00, 0x00, 0x9e, 0x00, 0x00, 0x00, 0x13, 0x04, 0x41, 0x2c,
  0x10, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x44, 0x4a, 0xa1, 0xb8,
  0x0a, 0x61, 0x06, 0xa0, 0xec, 0x4a, 0x8e, 0x4a, 0x09, 0x50, 0x1c, 0x01,
  0x00, 0x00, 0x00, 0x00, 0x23, 0x06, 0x09, 0x00, 0x82, 0x60, 0x20, 0x61,
  0x03, 0x63, 0x59, 0xc1, 0x88, 0x41, 0x02, 0x80, 0x20, 0x18, 0x18, 0xdd,
  0x11, 0x5d, 0x8f, 0x31, 0x62, 0x90, 0x00, 0x20, 0x08, 0x06, 0x86, 0x87,
  0x48, 0x18, 0x71, 0x8c, 0x18, 0x24, 0x00, 0x08, 0x82, 0x81, 0xf1, 0x25,
  0x5a, 0x16, 0x21, 0x23, 0x06, 0x09, 0x00, 0x82, 0x60, 0x60, 0x80, 0x81,
  0xb2, 0x69, 0x46, 0x32, 0x62, 0x90, 0x00, 0x20, 0x08, 0x06, 0x46, 0x18,
  0x2c, 0xdb, 0x36, 0x29, 0x23, 0x06, 0x09, 0x00, 0x82, 0x60, 0x60, 0x88,
  0x01, 0xc3, 0x71, 0xc8, 0x32, 0x62, 0x90, 0x00, 0x20, 0x08, 0x06, 0xc6,
  0x18, 0x34, 0x5d, 0x37, 0x31, 0x23, 0x06, 0x09, 0x00, 0x82, 0x60, 0x60,
  0x90, 0x81, 0xe3, 0x79, 0x53, 0x33, 0x62, 0x70, 0x00, 0x20, 0x08, 0x06,
  0xcd, 0x18, 0x34, 0xc9, 0x36, 0x9a, 0x10, 0x00, 0xa3, 0x09, 0x42, 0x30,
  0x9a, 0x30, 0x08, 0xa3, 0x09, 0xc4, 0x30, 0x62, 0x70, 0x00, 0x20, 0x08,
  0x06, 0x0d, 0x1a, 0x48, 0x0e, 0x35, 0x9a, 0x10, 0x00, 0xa3, 0x09, 0x42,
  0x30, 0x9a, 0x30, 0x08, 0xa3, 0x09, 0xc4, 0x30, 0x62, 0x70, 0x00, 0x20,
  0x08, 0x06, 0x4d, 0x1b, 0x5c, 0xd3, 0x36, 0x9a, 0x10, 0x00, 0xa3, 0x09,
  0x42, 0x30, 0x9a, 0x30, 0x08, 0xa3, 0x09, 0xc4, 0x30, 0x62, 0x70, 0x00,
  0x20, 0x08, 0x06, 0x8d, 0x1c, 0x70, 0x18, 0x1b, 0x8c, 0x26, 0x04, 0xc0,
  0x68, 0x82, 0x10, 0x8c, 0x26, 0x0c, 0xc2, 0x68, 0x02, 0x31, 0xd8, 0x84,
  0xc9, 0x67, 0xc4, 0x00, 0x01, 0x40, 0x10, 0x0c, 0x9e, 0x3b, 0x28, 0x03,
  0x6c, 0x0a, 0x46, 0x0c, 0x10, 0x00, 0x04, 0xc1, 0xe0, 0xc1, 0x03, 0x33,
  0xc0, 0xa6, 0x60, 0xc4, 0x00, 0x01, 0x40, 0x10, 0x0c, 0x9e, 0x3c, 0x38,
  0x03, 0x6c, 0x0a, 0x4c, 0xe2, 0xe4, 0x33, 0x62, 0x80, 0x00, 0x20, 0x08,
  0x06, 0xcf, 0x1e, 0xa4, 0x01, 0x27, 0x05, 0x23, 0x06, 0x08, 0x00, 0x82,
  0x60, 0xf0, 0xf0, 0x81, 0x1a, 0x70, 0x52, 0x30, 0x62, 0x80, 0x00, 0x20,
  0x08, 0x06, 0x4f, 0x1f, 0xac, 0x01, 0x27, 0x05, 0x16, 0x81, 0x81, 0x7c,
  0x46, 0x0c, 0x10, 0x00, 0x04, 0xc1, 0xe0, 0xf9, 0x83, 0x36, 0x00, 0x83,
  0x28, 0x18, 0x31, 0x40, 0x00, 0x10, 0x04, 0x83, 0x07, 0x14, 0xdc, 0x00,
  0x0c, 0xa2, 0x60, 0xc4, 0x00, 0x01, 0x40, 0x10, 0x0c, 0x9e, 0x50, 0x78,
  0x03, 0x30, 0x88, 0x02, 0x83, 0xc8, 0x40, 0x3e, 0x23, 0x06, 0x08, 0x00,
  0x82, 0x60, 0xf0, 0x8c, 0x42, 0x1c, 0x90, 0x01, 0x14, 0x8c, 0x18, 0x20,
  0x00, 0x08, 0x82, 0xc1, 0x43, 0x0a, 0x72, 0x40, 0x06, 0x50, 0x30, 0x62,
  0x80, 0x00, 0x20, 0x08, 0x06, 0x4f, 0x29, 0xcc, 0x01, 0x19, 0x40, 0xc1,
  0x88, 0xc1, 0x01, 0x80, 0x20, 0x18, 0x34, 0xa7, 0x10, 0x07, 0x6d, 0x30,
  0x0a, 0xa3, 0x09, 0x01, 0x30, 0x9a, 0x20, 0x04, 0xa3, 0x09, 0x83, 0x30,
  0x9a, 0x40, 0x0c, 0x23, 0x06, 0x09, 0x00, 0x82, 0x60, 0x80, 0xb4, 0x82,
  0x1e, 0xa0, 0x02, 0x2a, 0x80, 0x02, 0x31, 0x62, 0x90, 0x00, 0x20, 0x08,
  0x06, 0x48, 0x2b, 0xe8, 0x01, 0x2a, 0xa0, 0x02, 0x1d, 0x0c, 0x23, 0x06,
  0x09, 0x00, 0x82, 0x60, 0x80, 0xb4, 0x82, 0x1e, 0xa0, 0x02, 0x2a, 0xf8,
  0x81, 0x30, 0x62, 0x90, 0x00, 0x20, 0x08, 0x06, 0x48, 0x2b, 0xe8, 0x01,
  0x2a, 0xa0, 0x42, 0x1f, 0x04, 0x23, 0x06, 0x09, 0x00, 0x82, 0x60, 0x80,
  0xb4, 0x82, 0x1e, 0xa4, 0x02, 0x2a, 0x80, 0xc2, 0x1b, 0x8c, 0x18, 0x24,
  0x00, 0x08, 0x82, 0x01, 0xd2, 0x0a, 0x7a, 0x90, 0x0a, 0xa8, 0x40, 0x07,
  0x6e, 0x30, 0x62, 0x90, 0x00, 0x20, 0x08, 0x06, 0x48, 0x2b, 0xe8, 0x81,
  0x28, 0xa0, 0x02, 0x28, 0xc4, 0xc1, 0x88, 0x41, 0x02, 0x80, 0x20, 0x18,
  0x20, 0xad, 0xa0, 0x07, 0xa2, 0x80, 0x0a, 0x74, 0x00, 0x07, 0x23, 0x06,
  0x09, 0x00, 0x82, 0x60, 0x80, 0xb4, 0x82, 0x1e, 0x90, 0x02, 0x2a, 0x80,
  0x82, 0x34, 0x62, 0x90, 0x00, 0x20, 0x08, 0x06, 0x48, 0x2b, 0xe8, 0x01,
  0x29, 0xa0, 0x02, 0x1d, 0x38, 0x23, 0x06, 0x09, 0x00, 0x82, 0x60, 0x80,
  0xb4, 0x82, 0x1e, 0x90, 0x02, 0x2a, 0xf8, 0x81, 0x32, 0x62, 0x90, 0x00,
  0x20, 0x08, 0x06, 0x48, 0x2b, 0xe8, 0x01, 0x29, 0xa0, 0x42, 0x1f, 0x18,
  0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xce, 0x75, 0x15, 0x7c,
  0x37, 0x47, 0xc5, 0xc0, 0x73, 0xa9, 0x34, 0x61, 0x6b, 0x20, 0x98, 0xaf,
  0x17, 0x00, 0x01, 0x00, 0x20, 0x08, 0x16, 0x00, 0x78, 0x01, 0xed, 0x98,
  0x3b, 0x4b, 0x04, 0x31, 0x14, 0x85, 0x6f, 0x32, 0xd9, 0x4c, 0x76, 0x8c,
  0xd9, 0xf5, 0x59, 0xd8, 0xa8, 0x60, 0x25, 0x16, 0x16, 0x82, 0x95, 0x8f,
  0x42, 0xb0, 0xf4, 0x37, 0x58, 0xdb, 0x08, 0x62, 0x27, 0xcb, 0xaa, 0x20,
  0x2b, 0x58, 0x2a, 0x58, 0x88, 0x95, 0x8d, 0x0f, 0xf0, 0x0f, 0xc8, 0xae,
  0x0f, 0xec, 0x7c, 0xfc, 0x1b, 0x11, 0x2c, 0xd6, 0x7b, 0x42, 0x46, 0xd9,
  0x61, 0x6d, 0x15, 0x24, 0x1f, 0x9c, 0x93, 0xe4, 0xb2, 0x9b, 0x99, 0xe4,
  0x32, 0xcd, 0x31, 0xc3, 0xe4, 0xa9, 0x64, 0x7b, 0x6f, 0x18, 0x3f, 0xda,
  0xa7, 0x47, 0x27, 0x86, 0xa8, 0x84, 0x05, 0xa3, 0x60, 0xcc, 0xfa, 0x20,
  0x9c, 0xe8, 0x6c, 0x08, 0x4e, 0x94, 0xc1, 0x02, 0x8e, 0x15, 0xb6, 0xa1,
  0x45, 0x58, 0x40, 0xc0, 0xa8, 0x3e, 0xcf, 0x5a, 0xc0, 0xac, 0x88, 0x66,
  0x61, 0xdb, 0xb0, 0x75, 0x07, 0x12, 0xd6, 0x85, 0x04, 0x56, 0x00, 0xcf,
  0xc9, 0x55, 0x64, 0xbf, 0xd1, 0x98, 0xe3, 0x61, 0x89, 0x45, 0x97, 0x17,
  0x93, 0xfe, 0x3d, 0x9e, 0x9f, 0x9e, 0x50, 0xc3, 0x9a, 0xdf, 0xed, 0x7f,
  0x91, 0xf7, 0x09, 0x1c, 0xc2, 0x0a, 0xe4, 0xf7, 0xaa, 0x42, 0x1f, 0xd1,
  0x03, 0x30, 0x15, 0xd6, 0x79, 0x2f, 0x6f, 0x59, 0xdd, 0xee, 0x13, 0xb4,
  0x19, 0x8c, 0xdd, 0x40, 0x7f, 0x34, 0xad, 0x4c, 0x6b, 0xb1, 0x5b, 0xd5,
  0xf2, 0xa1, 0xca, 0xcb, 0x5f, 0x07, 0x67, 0xcc, 0xcf, 0xa5, 0xc5, 0x4f,
  0xa7, 0xf8, 0xdf, 0xe0, 0x0e, 0xfa, 0x59, 0x00, 0xf3, 0xfc, 0x3b, 0x06,
  0xfc, 0x79, 0x47, 0x22, 0x91, 0x48, 0x24, 0x12, 0x89, 0x44, 0x22, 0x91,
  0x48, 0x24, 0x12, 0x89, 0xfc, 0x3d, 0xe3, 0xf5, 0xa6, 0x69, 0x8b, 0x06,
  0x51, 0x95, 0xd2, 0xa4, 0xde, 0xbc, 0x4b, 0x76, 0x9a, 0xed, 0x64, 0xb7,
  0x79, 0xb5, 0x22, 0x89, 0x44, 0xe3, 0xde, 0x0a, 0x7a, 0x58, 0xa7, 0x83,
  0x16, 0x19, 0x72, 0xca, 0x48, 0x67, 0x8c, 0x72, 0xd6, 0x68, 0x27, 0x32,
  0xb2, 0xa5, 0x4c, 0xda, 0x72, 0xa6, 0x6c, 0x6f, 0xa6, 0xad, 0xb4, 0x64,
  0xe1, 0x99, 0x55, 0xd6, 0xf1, 0x2c, 0x71, 0x64, 0x53, 0x27, 0x6d, 0x8f,
  0x53, 0xb6, 0xe2, 0xb4, 0x7d, 0x35, 0xf4, 0x4e, 0x42, 0x26, 0x55, 0x69,
  0x6a, 0x7d, 0x32, 0xab, 0xf5, 0x4b, 0x5b, 0x1b, 0x90, 0xae, 0x56, 0x91,
  0xf4, 0xae, 0x4a, 0x3a, 0x1d, 0xe5, 0xd1, 0x94, 0x6d, 0x2f, 0xd1, 0x76,
  0xcb, 0x47, 0x64, 0x85, 0x38, 0xc9, 0x07, 0x5c, 0x85, 0xda, 0x08, 0x4c,
  0xf8, 0xa4, 0x72, 0x1a, 0x06, 0x50, 0x13, 0xc2, 0xa7, 0x30, 0xdf, 0x35,
  0xfe, 0x9f, 0x14, 0x3e, 0x69, 0xed, 0xa8, 0x25, 0xc2, 0xa7, 0x57, 0xdf,
  0x35, 0x96, 0x92, 0x29, 0x9e, 0xf5, 0x15, 0xaf, 0xfa, 0x4c, 0x47, 0xa5,
  0xec, 0x1d, 0x91, 0xab, 0xe7, 0x26, 0x64, 0x79, 0x13, 0xac, 0x32, 0x4b,
  0x84, 0xd4, 0x14, 0xbf, 0x56, 0x21, 0x19, 0x7b, 0xd9, 0x1c, 0xda, 0x9a,
  0x5d, 0x7e, 0xbc, 0xdd, 0x38, 0x9f, 0x59, 0x5d, 0x1b, 0x3b, 0xbe, 0xfe,
  0x04, 0x9b, 0xa9, 0x3b, 0xba, 0x00, 0x00, 0x00, 0x17, 0x00, 0x01, 0x00,
  0x10, 0x84, 0x16, 0x00, 0x78, 0x01, 0xed, 0x98, 0x3f, 0x4b, 0x1c, 0x51,
  0x14, 0xc5, 0xef, 0x7b, 0x33, 0xce, 0xce, 0x2e, 0x6f, 0xd6, 0x89, 0x71,
  0xfd, 0x97, 0x10, 0x36, 0x28, 0x46, 0xc4, 0x42, 0x48, 0xc0, 0x34, 0xc6,
  0x29, 0x04, 0x4b, 0xdb, 0xb4, 0xd6, 0x69, 0x16, 0x24, 0x4d, 0x08, 0xc9,
  0x6e, 0xb4, 0x08, 0x64, 0xd1, 0x4a, 0xb0, 0x10, 0x6b, 0x03, 0x01, 0xcb,
  0x74, 0xb3, 0x9b, 0x88, 0x5d, 0xf0, 0x33, 0x58, 0xfa, 0x1d, 0x52, 0xac,
  0xe7, 0xcc, 0xbe, 0x89, 0xcc, 0x20, 0x98, 0x26, 0x29, 0x92, 0xf7, 0x83,
  0x7b, 0xee, 0x9d, 0xc3, 0xec, 0xbb, 0x6f, 0xe6, 0xcd, 0x36, 0x77, 0x77,
  0x42, 0x32, 0x66, 0xb7, 0x17, 0x9f, 0x32, 0xff, 0x1c, 0x1c, 0x1f, 0x1c,
  0x85, 0x22, 0x23, 0xbc, 0x00, 0x9a, 0x02, 0x5a, 0xe3, 0x54, 0x91, 0xa6,
  0xbd, 0xbf, 0x46, 0xb1, 0xd4, 0x11, 0x8f, 0x10, 0x24, 0xa1, 0x58, 0x14,
  0x45, 0xda, 0x2f, 0x10, 0x6b, 0xac, 0xca, 0xa0, 0x8d, 0x70, 0x59, 0xbb,
  0x74, 0x01, 0x0f, 0x61, 0x6c, 0xdc, 0x05, 0xf7, 0xc8, 0x5e, 0xc3, 0x7e,
  0x45, 0x3e, 0x3d, 0xf9, 0xba, 0x8a, 0xb4, 0x8e, 0x90, 0x1f, 0x6f, 0xd6,
  0x0a, 0xfb, 0xa8, 0x75, 0xe6, 0xb1, 0xb7, 0x7f, 0x8b, 0xfc, 0x9c, 0xc8,
  0x15, 0xa5, 0x84, 0x4f, 0x01, 0x2f, 0x1b, 0x54, 0x91, 0x80, 0x02, 0x4e,
  0xec, 0x75, 0x7e, 0x96, 0x7d, 0xc4, 0x6d, 0xef, 0x93, 0x0c, 0x00, 0xf3,
  0x6d, 0xf0, 0xdc, 0x02, 0xd9, 0x5c, 0x0e, 0xd4, 0x4e, 0x1c, 0xe8, 0xb3,
  0x18, 0x97, 0x7f, 0x9d, 0xe1, 0x1e, 0x86, 0x04, 0xca, 0x3e, 0x85, 0xce,
  0xbf, 0xe4, 0xff, 0x03, 0xbe, 0x83, 0x31, 0x44, 0x4e, 0x7e, 0xee, 0xe4,
  0x77, 0xff, 0x57, 0x0e, 0x87, 0xc3, 0xe1, 0x70, 0x38, 0x1c, 0x0e, 0x87,
  0xc3, 0xe1, 0x70, 0x38, 0x1c, 0x7f, 0x94, 0xc7, 0xed, 0x34, 0x1c, 0x44,
  0x1f, 0x45, 0x62, 0xa9, 0x78, 0xdd, 0xf4, 0x9b, 0xb7, 0x97, 0x0e, 0xbc,
  0xfd, 0xf4, 0xcb, 0xa6, 0x16, 0x89, 0x3e, 0x7c, 0x37, 0x51, 0x70, 0xd6,
  0xf6, 0x3a, 0x69, 0xa8, 0xda, 0xfd, 0xf7, 0xd2, 0xed, 0xf9, 0x5a, 0xde,
  0xb5, 0x46, 0xbb, 0x3d, 0x13, 0xea, 0x7a, 0x54, 0xd3, 0xa6, 0x6e, 0xb4,
  0x19, 0xad, 0x6b, 0xd3, 0x4c, 0x5a, 0x97, 0xa2, 0x92, 0x6a, 0x0c, 0xff,
  0x1e, 0xfc, 0x31, 0xf8, 0xf7, 0xe1, 0xcf, 0x59, 0x7f, 0x1c, 0x7e, 0x03,
  0xfe, 0x04, 0xfc, 0x49, 0xf8, 0x0b, 0xd6, 0x9f, 0x82, 0x3f, 0x0d, 0x7f,
  0x06, 0xfe, 0x03, 0xf8, 0x4b, 0xd6, 0x17, 0x66, 0x49, 0xaa, 0x23, 0xe8,
  0xe7, 0xdb, 0x3a, 0x40, 0x1d, 0xda, 0xba, 0x82, 0xda, 0xd8, 0x3a, 0x66,
  0x0e, 0xd1, 0x83, 0xb9, 0x8a, 0x35, 0x99, 0x4d, 0x52, 0x7d, 0xc8, 0x1c,
  0x61, 0x2d, 0xe9, 0xf4, 0xb2, 0xb1, 0x5b, 0x69, 0xd0, 0x36, 0x4d, 0x29,
  0x79, 0x53, 0x94, 0x92, 0x97, 0x0d, 0xd7, 0x4a, 0xde, 0x0c, 0x45, 0x71,
  0xfa, 0x23, 0xcb, 0x14, 0x42, 0x4f, 0xa9, 0x6c, 0x02, 0x74, 0xe3, 0xe1,
  0x77, 0x5a, 0x65, 0x53, 0xde, 0x82, 0xe7, 0xa9, 0x6c, 0x72, 0x76, 0xe3,
  0x21, 0x7c, 0x5d, 0x61, 0xaf, 0x5f, 0xa3, 0x5d, 0x4e, 0xd2, 0x7c, 0xbf,
  0x02, 0x2d, 0x8c, 0x7b, 0x33, 0x9e, 0xdb, 0xf9, 0xf0, 0x1c, 0x02, 0x0f,
  0x88, 0xed, 0x65, 0x7b, 0x11, 0xde, 0xed, 0xdb, 0xa9, 0xdc, 0xc5, 0xeb,
  0xc6, 0xdb, 0x95, 0x8d, 0xf3, 0xfe, 0xf6, 0xe7, 0x67, 0x5b, 0xaf, 0x9a,
  0x87, 0xa7, 0xd7, 0xfb, 0x2e, 0x51, 0x33, 0x00, 0x17, 0x00, 0x01, 0x00,
  0x00, 0x20, 0x16, 0x00, 0x78, 0x01, 0xed, 0x98, 0x3f, 0x4b, 0xc3, 0x40,
  0x18, 0xc6, 0xdf, 0xf7, 0x72, 0x49, 0xce, 0x18, 0x63, 0xac, 0x7f, 0x06,
  0x51, 0xa8, 0xe8, 0xe8, 0x50, 0x41, 0xd0, 0x45, 0xeb, 0x50, 0x70, 0xf4,
  0x33, 0x38, 0xbb, 0x08, 0xea, 0x26, 0xa1, 0xda, 0xc5, 0x41, 0x70, 0x10,
  0xc1, 0x41, 0xdc, 0x05, 0x41, 0xdc, 0x25, 0x5a, 0xc5, 0xd5, 0x41, 0x44,
  0xf1, 0x43, 0x38, 0x3a, 0x29, 0xd4, 0xf7, 0xbd, 0x5c, 0xac, 0x0d, 0xba,
  0x2a, 0xc8, 0xfd, 0xe0, 0x79, 0xae, 0xf7, 0x90, 0xde, 0x25, 0x97, 0x4c,
  0x4f, 0x79, 0x08, 0x34, 0xe7, 0x2f, 0x49, 0xc2, 0xe3, 0x5b, 0xeb, 0xf8,
  0xe0, 0x48, 0x01, 0xb8, 0x3c, 0xf9, 0xc2, 0xea, 0x00, 0x3b, 0xc0, 0xc5,
  0x20, 0x3b, 0x40, 0xc0, 0x66, 0x88, 0x48, 0x66, 0x19, 0x58, 0x60, 0x33,
  0x20, 0x1b, 0xd4, 0xe7, 0x49, 0x55, 0xfe, 0x55, 0xc4, 0x27, 0xf1, 0x72,
  0x66, 0xc9, 0x0e, 0x04, 0xdb, 0x17, 0x1c, 0xb6, 0x1f, 0xe0, 0x7d, 0x72,
  0x15, 0xb9, 0x58, 0xdf, 0x9f, 0xa3, 0xa1, 0x46, 0x82, 0xe0, 0x69, 0xbc,
  0xba, 0x77, 0xfd, 0xca, 0x73, 0xcd, 0x94, 0x9a, 0xa4, 0x7b, 0xfb, 0x5f,
  0xe4, 0xef, 0x89, 0x39, 0x65, 0x2b, 0x90, 0x9f, 0xeb, 0x88, 0x39, 0x74,
  0x8f, 0x8d, 0xa8, 0x99, 0x79, 0xfe, 0x2e, 0xaf, 0x48, 0xdf, 0x9d, 0x27,
  0xd3, 0x22, 0x78, 0xfc, 0x0e, 0x7e, 0x4f, 0x1e, 0x2c, 0x55, 0x3c, 0x6c,
  0xc4, 0x9e, 0xb8, 0x89, 0x69, 0xfa, 0xeb, 0x64, 0xf7, 0x90, 0xe1, 0xa1,
  0x79, 0x0a, 0x51, 0xfc, 0xa2, 0xfe, 0x37, 0x7c, 0x06, 0x25, 0x52, 0x8e,
  0x64, 0x23, 0xf8, 0x34, 0x42, 0x12, 0x53, 0x61, 0xb3, 0x58, 0x2c, 0x16,
  0x8b, 0xc5, 0x62, 0xb1, 0x58, 0x2c, 0x16, 0x8b, 0xc5, 0x62, 0xf9, 0x2b,
  0xc6, 0xea, 0xa9, 0x6a, 0xe1, 0x0e, 0x40, 0x0c, 0xbe, 0x53, 0x4f, 0x9b,
  0xce, 0x76, 0xda, 0x72, 0x1a, 0xe9, 0xe9, 0x92, 0x00, 0xc0, 0x9d, 0xeb,
  0x10, 0xe1, 0xa6, 0xe9, 0xbc, 0xa7, 0xab, 0xb0, 0x7b, 0x09, 0x0a, 0x22,
  0x0c, 0x20, 0x14, 0x21, 0x09, 0xea, 0xf7, 0xbe, 0x0f, 0x52, 0x52, 0xe6,
  0x52, 0xe6, 0x51, 0xe6, 0x70, 0xd6, 0x0b, 0x52, 0x51, 0x16, 0x2a, 0x15,
  0x75, 0x51, 0xde, 0x13, 0xa8, 0xd0, 0x85, 0xc7, 0x7b, 0x5c, 0x46, 0x08,
  0xe8, 0x1a, 0xa4, 0x6b, 0xbc, 0xd1, 0x58, 0x76, 0x47, 0x10, 0xf6, 0x46,
  0x22, 0x94, 0xee, 0xec, 0xb3, 0x4b, 0x5b, 0x95, 0x04, 0x24, 0xfd, 0x42,
  0x24, 0xb1, 0x90, 0x49, 0x9f, 0xf0, 0x12, 0xc0, 0x2c, 0x17, 0x0e, 0x8d,
  0x8a, 0x9b, 0x94, 0xad, 0x4b, 0x5d, 0x9d, 0x99, 0x9a, 0x29, 0x47, 0x17,
  0x5f, 0x85, 0x6c, 0x98, 0x0d, 0xb9, 0x99, 0x69, 0x57, 0x2f, 0x9c, 0x21,
  0xea, 0x76, 0xa6, 0x9d, 0xd1, 0xff, 0x04, 0xea, 0x06, 0xb6, 0x23, 0x73,
  0x50, 0xb7, 0x5a, 0xed, 0x8c, 0x24, 0x85, 0xcf, 0x7b, 0x7d, 0xd6, 0xae,
  0x74, 0x6b, 0xf4, 0xf0, 0xdc, 0xac, 0x76, 0x54, 0xb1, 0x9a, 0x07, 0xd3,
  0xf1, 0x4d, 0x90, 0xba, 0x48, 0xa8, 0x5b, 0xa2, 0xac, 0x87, 0x95, 0xa6,
  0x31, 0xbb, 0xdb, 0x18, 0xdc, 0x9c, 0x59, 0xbc, 0xbd, 0x5a, 0x3b, 0x99,
  0x5e, 0x5e, 0x29, 0x1f, 0x9e, 0x7d, 0x00, 0x9e, 0x1b, 0x43, 0x7a, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x03, 0x00, 0x03, 0x01,
  0x08, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x03, 0x01, 0x04, 0x03, 0x04, 0x02, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x05, 0x05, 0x08, 0x02, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x01, 0x06, 0x07,
  0x04, 0x02, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x02, 0x07, 0x08, 0x00, 0x04, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0xcc, 0x00, 0x00, 0x78, 0x01, 0x6d, 0xcc,
  0xb1, 0x11, 0x40, 0x40, 0x10, 0x46, 0xe1, 0x1f, 0xa3, 0x07, 0x89, 0xae,
  0x2e, 0x54, 0x84, 0x50, 0x11, 0x42, 0x45, 0x08, 0x15, 0x21, 0xd4, 0x13,
  0xef, 0x05, 0x9b, 0x79, 0x33, 0xdf, 0xdc, 0xba, 0x9d, 0xd3, 0x25, 0x19,
  0x31, 0xc1, 0x1e, 0xcc, 0x30, 0xef, 0x1b, 0xcc, 0x79, 0x85, 0x39, 0xef,
  0x30, 0xe7, 0x13, 0x3d, 0xec, 0x86, 0xff, 0x5c, 0x60, 0xce, 0xd5, 0x4b,
  0x7e, 0x6f, 0x18, 0xf0, 0xb7, 0x3b, 0x60, 0xce, 0xb2, 0xda, 0x5d, 0xa8,
  0x77, 0x32, 0x77, 0x9e, 0x49, 0xf2, 0x01, 0x2b, 0xfe, 0x15, 0xf2, 0x00,
  0x78, 0x62, 0x6f, 0x70, 0x01, 0x00, 0x00, 0x00, 0x7e, 0x02, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00
};
