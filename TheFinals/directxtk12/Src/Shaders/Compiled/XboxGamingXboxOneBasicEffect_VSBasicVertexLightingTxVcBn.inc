#if 0
;
; Input signature:
;
; Name                 Index   Mask Register SysValue  Format   Used
; -------------------- ----- ------ -------- -------- ------- ------
; SV_Position              0   xyzw        0     NONE   float   xyzw
; NORMAL                   0   xyz         1     NONE   float   xyz 
; TEXCOORD                 0   xy          2     NONE   float   xy  
; COLOR                    0   xyzw        3     NONE   float   xyzw
;
;
; Output signature:
;
; Name                 Index   Mask Register SysValue  Format   Used
; -------------------- ----- ------ -------- -------- ------- ------
; COLOR                    0   xyzw        0     NONE   float   xyzw
; COLOR                    1   xyzw        1     NONE   float   xyzw
; TEXCOORD                 0   xy          2     NONE   float   xy  
; SV_Position              0   xyzw        3      POS   float   xyzw
;
; shader debug name: C:\Users\marcu\Downloads\DirectXTK12-main\DirectXTK12-main\Src/Shaders/Compiled\XboxGamingXboxOneBasicEffect_VSBasicVertexLightingTxVcBn.pdb
; shader hash: 5f0b80357bb167cffededc5782fc451a
;
; Pipeline Runtime Information: 
;
;PSVRuntimeInfo:
; Vertex Shader
; OutputPositionPresent=1
; MinimumExpectedWaveLaneCount: 0
; MaximumExpectedWaveLaneCount: 4294967295
; UsesViewID: false
; SigInputElements: 4
; SigOutputElements: 4
; SigPatchConstOrPrimElements: 0
; SigInputVectors: 4
; SigOutputVectors[0]: 4
; SigOutputVectors[1]: 0
; SigOutputVectors[2]: 0
; SigOutputVectors[3]: 0
; EntryFunctionName: VSBasicVertexLightingTxVcBn
;
;
; Input signature:
;
; Name                 Index             InterpMode DynIdx
; -------------------- ----- ---------------------- ------
; SV_Position              0                              
; NORMAL                   0                              
; TEXCOORD                 0                              
; COLOR                    0                              
;
; Output signature:
;
; Name                 Index             InterpMode DynIdx
; -------------------- ----- ---------------------- ------
; COLOR                    0                 linear       
; COLOR                    1                 linear       
; TEXCOORD                 0                 linear       
; SV_Position              0          noperspective       
;
; Buffer Definitions:
;
; cbuffer 
; {
;
;   [416 x i8] (type annotation not present)
;
; }
;
;
; Resource Bindings:
;
; Name                                 Type  Format         Dim      ID      HLSL Bind  Count
; ------------------------------ ---------- ------- ----------- ------- -------------- ------
;                                   cbuffer      NA          NA     CB0            cb0     1
;
;
; ViewId state:
;
; Number of inputs: 16, outputs: 16
; Outputs dependent on ViewId: {  }
; Inputs contributing to computation of Outputs:
;   output 0 depends on inputs: { 4, 5, 6, 12 }
;   output 1 depends on inputs: { 4, 5, 6, 13 }
;   output 2 depends on inputs: { 4, 5, 6, 14 }
;   output 3 depends on inputs: { 15 }
;   output 4 depends on inputs: { 0, 1, 2, 3, 4, 5, 6 }
;   output 5 depends on inputs: { 0, 1, 2, 3, 4, 5, 6 }
;   output 6 depends on inputs: { 0, 1, 2, 3, 4, 5, 6 }
;   output 7 depends on inputs: { 0, 1, 2, 3 }
;   output 8 depends on inputs: { 8 }
;   output 9 depends on inputs: { 9 }
;   output 12 depends on inputs: { 0, 1, 2, 3 }
;   output 13 depends on inputs: { 0, 1, 2, 3 }
;   output 14 depends on inputs: { 0, 1, 2, 3 }
;   output 15 depends on inputs: { 0, 1, 2, 3 }
;
target datalayout = "e-m:e-p:32:32-i1:32-i8:32-i16:32-i32:32-i64:64-f16:32-f32:32-f64:64-n8:16:32:64"
target triple = "dxil-ms-xb1"

%dx.types.Handle = type { i8* }
%dx.types.CBufRet.f32 = type { float, float, float, float }
%hostlayout.Parameters = type { <4 x float>, <3 x float>, <3 x float>, float, [3 x <3 x float>], [3 x <3 x float>], [3 x <3 x float>], <3 x float>, <3 x float>, <4 x float>, [4 x <4 x float>], [3 x <3 x float>], [4 x <4 x float>] }

define void @VSBasicVertexLightingTxVcBn() {
  %1 = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 2, i32 0, i32 0, i1 false)  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %2 = call float @dx.op.loadInput.f32(i32 4, i32 3, i32 0, i8 0, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %3 = call float @dx.op.loadInput.f32(i32 4, i32 3, i32 0, i8 1, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %4 = call float @dx.op.loadInput.f32(i32 4, i32 3, i32 0, i8 2, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %5 = call float @dx.op.loadInput.f32(i32 4, i32 3, i32 0, i8 3, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %6 = call float @dx.op.loadInput.f32(i32 4, i32 2, i32 0, i8 0, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %7 = call float @dx.op.loadInput.f32(i32 4, i32 2, i32 0, i8 1, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %8 = call float @dx.op.loadInput.f32(i32 4, i32 1, i32 0, i8 0, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %9 = call float @dx.op.loadInput.f32(i32 4, i32 1, i32 0, i8 1, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %10 = call float @dx.op.loadInput.f32(i32 4, i32 1, i32 0, i8 2, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %11 = call float @dx.op.loadInput.f32(i32 4, i32 0, i32 0, i8 0, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %12 = call float @dx.op.loadInput.f32(i32 4, i32 0, i32 0, i8 1, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %13 = call float @dx.op.loadInput.f32(i32 4, i32 0, i32 0, i8 2, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %14 = call float @dx.op.loadInput.f32(i32 4, i32 0, i32 0, i8 3, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %15 = fmul fast float %8, 2.000000e+00
  %16 = fmul fast float %9, 2.000000e+00
  %17 = fmul fast float %10, 2.000000e+00
  %18 = fadd fast float %15, -1.000000e+00
  %19 = fadd fast float %16, -1.000000e+00
  %20 = fadd fast float %17, -1.000000e+00
  %21 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 15)  ; CBufferLoadLegacy(handle,regIndex)
  %22 = extractvalue %dx.types.CBufRet.f32 %21, 0
  %23 = extractvalue %dx.types.CBufRet.f32 %21, 1
  %24 = extractvalue %dx.types.CBufRet.f32 %21, 2
  %25 = extractvalue %dx.types.CBufRet.f32 %21, 3
  %26 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 16)  ; CBufferLoadLegacy(handle,regIndex)
  %27 = extractvalue %dx.types.CBufRet.f32 %26, 0
  %28 = extractvalue %dx.types.CBufRet.f32 %26, 1
  %29 = extractvalue %dx.types.CBufRet.f32 %26, 2
  %30 = extractvalue %dx.types.CBufRet.f32 %26, 3
  %31 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 17)  ; CBufferLoadLegacy(handle,regIndex)
  %32 = extractvalue %dx.types.CBufRet.f32 %31, 0
  %33 = extractvalue %dx.types.CBufRet.f32 %31, 1
  %34 = extractvalue %dx.types.CBufRet.f32 %31, 2
  %35 = extractvalue %dx.types.CBufRet.f32 %31, 3
  %36 = fmul fast float %22, %11
  %37 = call float @dx.op.tertiary.f32(i32 46, float %12, float %23, float %36)  ; FMad(a,b,c)
  %38 = call float @dx.op.tertiary.f32(i32 46, float %13, float %24, float %37)  ; FMad(a,b,c)
  %39 = call float @dx.op.tertiary.f32(i32 46, float %14, float %25, float %38)  ; FMad(a,b,c)
  %40 = fmul fast float %27, %11
  %41 = call float @dx.op.tertiary.f32(i32 46, float %12, float %28, float %40)  ; FMad(a,b,c)
  %42 = call float @dx.op.tertiary.f32(i32 46, float %13, float %29, float %41)  ; FMad(a,b,c)
  %43 = call float @dx.op.tertiary.f32(i32 46, float %14, float %30, float %42)  ; FMad(a,b,c)
  %44 = fmul fast float %32, %11
  %45 = call float @dx.op.tertiary.f32(i32 46, float %12, float %33, float %44)  ; FMad(a,b,c)
  %46 = call float @dx.op.tertiary.f32(i32 46, float %13, float %34, float %45)  ; FMad(a,b,c)
  %47 = call float @dx.op.tertiary.f32(i32 46, float %14, float %35, float %46)  ; FMad(a,b,c)
  %48 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 12)  ; CBufferLoadLegacy(handle,regIndex)
  %49 = extractvalue %dx.types.CBufRet.f32 %48, 0
  %50 = extractvalue %dx.types.CBufRet.f32 %48, 1
  %51 = extractvalue %dx.types.CBufRet.f32 %48, 2
  %52 = fsub fast float %49, %39
  %53 = fsub fast float %50, %43
  %54 = fsub fast float %51, %47
  %55 = call float @dx.op.dot3.f32(i32 55, float %52, float %53, float %54, float %52, float %53, float %54)  ; Dot3(ax,ay,az,bx,by,bz)
  %56 = call float @dx.op.unary.f32(i32 25, float %55)  ; Rsqrt(value)
  %57 = fmul fast float %52, %56
  %58 = fmul fast float %53, %56
  %59 = fmul fast float %54, %56
  %60 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 19)  ; CBufferLoadLegacy(handle,regIndex)
  %61 = extractvalue %dx.types.CBufRet.f32 %60, 0
  %62 = extractvalue %dx.types.CBufRet.f32 %60, 1
  %63 = extractvalue %dx.types.CBufRet.f32 %60, 2
  %64 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 20)  ; CBufferLoadLegacy(handle,regIndex)
  %65 = extractvalue %dx.types.CBufRet.f32 %64, 0
  %66 = extractvalue %dx.types.CBufRet.f32 %64, 1
  %67 = extractvalue %dx.types.CBufRet.f32 %64, 2
  %68 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 21)  ; CBufferLoadLegacy(handle,regIndex)
  %69 = extractvalue %dx.types.CBufRet.f32 %68, 0
  %70 = extractvalue %dx.types.CBufRet.f32 %68, 1
  %71 = extractvalue %dx.types.CBufRet.f32 %68, 2
  %72 = fmul fast float %61, %18
  %73 = call float @dx.op.tertiary.f32(i32 46, float %19, float %62, float %72)  ; FMad(a,b,c)
  %74 = call float @dx.op.tertiary.f32(i32 46, float %20, float %63, float %73)  ; FMad(a,b,c)
  %75 = fmul fast float %65, %18
  %76 = call float @dx.op.tertiary.f32(i32 46, float %19, float %66, float %75)  ; FMad(a,b,c)
  %77 = call float @dx.op.tertiary.f32(i32 46, float %20, float %67, float %76)  ; FMad(a,b,c)
  %78 = fmul fast float %69, %18
  %79 = call float @dx.op.tertiary.f32(i32 46, float %19, float %70, float %78)  ; FMad(a,b,c)
  %80 = call float @dx.op.tertiary.f32(i32 46, float %20, float %71, float %79)  ; FMad(a,b,c)
  %81 = call float @dx.op.dot3.f32(i32 55, float %74, float %77, float %80, float %74, float %77, float %80)  ; Dot3(ax,ay,az,bx,by,bz)
  %82 = call float @dx.op.unary.f32(i32 25, float %81)  ; Rsqrt(value)
  %83 = fmul fast float %82, %74
  %84 = fmul fast float %82, %77
  %85 = fmul fast float %82, %80
  %86 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 3)  ; CBufferLoadLegacy(handle,regIndex)
  %87 = extractvalue %dx.types.CBufRet.f32 %86, 0
  %88 = extractvalue %dx.types.CBufRet.f32 %86, 1
  %89 = extractvalue %dx.types.CBufRet.f32 %86, 2
  %90 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 6)  ; CBufferLoadLegacy(handle,regIndex)
  %91 = extractvalue %dx.types.CBufRet.f32 %90, 0
  %92 = extractvalue %dx.types.CBufRet.f32 %90, 1
  %93 = extractvalue %dx.types.CBufRet.f32 %90, 2
  %94 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 9)  ; CBufferLoadLegacy(handle,regIndex)
  %95 = extractvalue %dx.types.CBufRet.f32 %94, 0
  %96 = extractvalue %dx.types.CBufRet.f32 %94, 1
  %97 = extractvalue %dx.types.CBufRet.f32 %94, 2
  %98 = fsub fast float %57, %87
  %99 = fsub fast float %58, %88
  %100 = fsub fast float %59, %89
  %101 = call float @dx.op.dot3.f32(i32 55, float %98, float %99, float %100, float %98, float %99, float %100)  ; Dot3(ax,ay,az,bx,by,bz)
  %102 = call float @dx.op.unary.f32(i32 25, float %101)  ; Rsqrt(value)
  %103 = fmul fast float %102, %99
  %104 = fmul fast float %102, %100
  %105 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 4)  ; CBufferLoadLegacy(handle,regIndex)
  %106 = extractvalue %dx.types.CBufRet.f32 %105, 0
  %107 = extractvalue %dx.types.CBufRet.f32 %105, 1
  %108 = extractvalue %dx.types.CBufRet.f32 %105, 2
  %109 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 7)  ; CBufferLoadLegacy(handle,regIndex)
  %110 = extractvalue %dx.types.CBufRet.f32 %109, 0
  %111 = extractvalue %dx.types.CBufRet.f32 %109, 1
  %112 = extractvalue %dx.types.CBufRet.f32 %109, 2
  %113 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 10)  ; CBufferLoadLegacy(handle,regIndex)
  %114 = extractvalue %dx.types.CBufRet.f32 %113, 0
  %115 = extractvalue %dx.types.CBufRet.f32 %113, 1
  %116 = extractvalue %dx.types.CBufRet.f32 %113, 2
  %117 = fsub fast float %57, %106
  %118 = fsub fast float %58, %107
  %119 = fsub fast float %59, %108
  %120 = call float @dx.op.dot3.f32(i32 55, float %117, float %118, float %119, float %117, float %118, float %119)  ; Dot3(ax,ay,az,bx,by,bz)
  %121 = call float @dx.op.unary.f32(i32 25, float %120)  ; Rsqrt(value)
  %122 = fmul fast float %121, %118
  %123 = fmul fast float %121, %119
  %124 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 5)  ; CBufferLoadLegacy(handle,regIndex)
  %125 = extractvalue %dx.types.CBufRet.f32 %124, 0
  %126 = extractvalue %dx.types.CBufRet.f32 %124, 1
  %127 = extractvalue %dx.types.CBufRet.f32 %124, 2
  %128 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 8)  ; CBufferLoadLegacy(handle,regIndex)
  %129 = extractvalue %dx.types.CBufRet.f32 %128, 0
  %130 = extractvalue %dx.types.CBufRet.f32 %128, 1
  %131 = extractvalue %dx.types.CBufRet.f32 %128, 2
  %132 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 11)  ; CBufferLoadLegacy(handle,regIndex)
  %133 = extractvalue %dx.types.CBufRet.f32 %132, 0
  %134 = extractvalue %dx.types.CBufRet.f32 %132, 1
  %135 = extractvalue %dx.types.CBufRet.f32 %132, 2
  %136 = fsub fast float %57, %125
  %137 = fsub fast float %58, %126
  %138 = fsub fast float %59, %127
  %139 = call float @dx.op.dot3.f32(i32 55, float %136, float %137, float %138, float %136, float %137, float %138)  ; Dot3(ax,ay,az,bx,by,bz)
  %140 = call float @dx.op.unary.f32(i32 25, float %139)  ; Rsqrt(value)
  %141 = fmul fast float %140, %137
  %142 = fmul fast float %140, %138
  %143 = fsub fast float -0.000000e+00, %88
  %144 = fsub fast float -0.000000e+00, %89
  %145 = fsub fast float -0.000000e+00, %107
  %146 = fsub fast float -0.000000e+00, %108
  %147 = fsub fast float -0.000000e+00, %126
  %148 = fsub fast float -0.000000e+00, %127
  %149 = fmul fast float %83, %87
  %150 = fsub fast float -0.000000e+00, %149
  %151 = call float @dx.op.tertiary.f32(i32 46, float %143, float %84, float %150)  ; FMad(a,b,c)
  %152 = call float @dx.op.tertiary.f32(i32 46, float %144, float %85, float %151)  ; FMad(a,b,c)
  %153 = fmul fast float %83, %106
  %154 = fsub fast float -0.000000e+00, %153
  %155 = call float @dx.op.tertiary.f32(i32 46, float %145, float %84, float %154)  ; FMad(a,b,c)
  %156 = call float @dx.op.tertiary.f32(i32 46, float %146, float %85, float %155)  ; FMad(a,b,c)
  %157 = fmul fast float %83, %125
  %158 = fsub fast float -0.000000e+00, %157
  %159 = call float @dx.op.tertiary.f32(i32 46, float %147, float %84, float %158)  ; FMad(a,b,c)
  %160 = call float @dx.op.tertiary.f32(i32 46, float %148, float %85, float %159)  ; FMad(a,b,c)
  %161 = fmul fast float %98, %83
  %162 = fmul fast float %161, %102
  %163 = call float @dx.op.tertiary.f32(i32 46, float %103, float %84, float %162)  ; FMad(a,b,c)
  %164 = call float @dx.op.tertiary.f32(i32 46, float %104, float %85, float %163)  ; FMad(a,b,c)
  %165 = fmul fast float %117, %83
  %166 = fmul fast float %165, %121
  %167 = call float @dx.op.tertiary.f32(i32 46, float %122, float %84, float %166)  ; FMad(a,b,c)
  %168 = call float @dx.op.tertiary.f32(i32 46, float %123, float %85, float %167)  ; FMad(a,b,c)
  %169 = fmul fast float %136, %83
  %170 = fmul fast float %169, %140
  %171 = call float @dx.op.tertiary.f32(i32 46, float %141, float %84, float %170)  ; FMad(a,b,c)
  %172 = call float @dx.op.tertiary.f32(i32 46, float %142, float %85, float %171)  ; FMad(a,b,c)
  %173 = fcmp fast olt float %152, 0.000000e+00
  %174 = fcmp fast olt float %156, 0.000000e+00
  %175 = fcmp fast olt float %160, 0.000000e+00
  %176 = select i1 %173, float 0.000000e+00, float 1.000000e+00
  %177 = select i1 %174, float 0.000000e+00, float 1.000000e+00
  %178 = select i1 %175, float 0.000000e+00, float 1.000000e+00
  %179 = fmul fast float %176, %152
  %180 = fmul fast float %177, %156
  %181 = fmul fast float %178, %160
  %182 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 2)  ; CBufferLoadLegacy(handle,regIndex)
  %183 = extractvalue %dx.types.CBufRet.f32 %182, 3
  %184 = call float @dx.op.binary.f32(i32 35, float %164, float 0.000000e+00)  ; FMax(a,b)
  %185 = call float @dx.op.binary.f32(i32 35, float %168, float 0.000000e+00)  ; FMax(a,b)
  %186 = call float @dx.op.binary.f32(i32 35, float %172, float 0.000000e+00)  ; FMax(a,b)
  %187 = fmul fast float %184, %176
  %188 = fmul fast float %185, %177
  %189 = fmul fast float %186, %178
  %190 = call float @dx.op.unary.f32(i32 23, float %187)  ; Log(value)
  %191 = call float @dx.op.unary.f32(i32 23, float %188)  ; Log(value)
  %192 = call float @dx.op.unary.f32(i32 23, float %189)  ; Log(value)
  %193 = fmul fast float %190, %183
  %194 = fmul fast float %191, %183
  %195 = fmul fast float %192, %183
  %196 = call float @dx.op.unary.f32(i32 21, float %193)  ; Exp(value)
  %197 = call float @dx.op.unary.f32(i32 21, float %194)  ; Exp(value)
  %198 = call float @dx.op.unary.f32(i32 21, float %195)  ; Exp(value)
  %199 = fmul fast float %196, %152
  %200 = fmul fast float %197, %156
  %201 = fmul fast float %198, %160
  %202 = fmul fast float %179, %91
  %203 = call float @dx.op.tertiary.f32(i32 46, float %180, float %110, float %202)  ; FMad(a,b,c)
  %204 = call float @dx.op.tertiary.f32(i32 46, float %181, float %129, float %203)  ; FMad(a,b,c)
  %205 = fmul fast float %179, %92
  %206 = call float @dx.op.tertiary.f32(i32 46, float %180, float %111, float %205)  ; FMad(a,b,c)
  %207 = call float @dx.op.tertiary.f32(i32 46, float %181, float %130, float %206)  ; FMad(a,b,c)
  %208 = fmul fast float %179, %93
  %209 = call float @dx.op.tertiary.f32(i32 46, float %180, float %112, float %208)  ; FMad(a,b,c)
  %210 = call float @dx.op.tertiary.f32(i32 46, float %181, float %131, float %209)  ; FMad(a,b,c)
  %211 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 0)  ; CBufferLoadLegacy(handle,regIndex)
  %212 = extractvalue %dx.types.CBufRet.f32 %211, 0
  %213 = extractvalue %dx.types.CBufRet.f32 %211, 1
  %214 = extractvalue %dx.types.CBufRet.f32 %211, 2
  %215 = fmul fast float %212, %204
  %216 = fmul fast float %213, %207
  %217 = fmul fast float %214, %210
  %218 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 1)  ; CBufferLoadLegacy(handle,regIndex)
  %219 = extractvalue %dx.types.CBufRet.f32 %218, 0
  %220 = extractvalue %dx.types.CBufRet.f32 %218, 1
  %221 = extractvalue %dx.types.CBufRet.f32 %218, 2
  %222 = fadd fast float %215, %219
  %223 = fadd fast float %216, %220
  %224 = fadd fast float %217, %221
  %225 = fmul fast float %199, %95
  %226 = call float @dx.op.tertiary.f32(i32 46, float %200, float %114, float %225)  ; FMad(a,b,c)
  %227 = call float @dx.op.tertiary.f32(i32 46, float %201, float %133, float %226)  ; FMad(a,b,c)
  %228 = fmul fast float %199, %96
  %229 = call float @dx.op.tertiary.f32(i32 46, float %200, float %115, float %228)  ; FMad(a,b,c)
  %230 = call float @dx.op.tertiary.f32(i32 46, float %201, float %134, float %229)  ; FMad(a,b,c)
  %231 = fmul fast float %199, %97
  %232 = call float @dx.op.tertiary.f32(i32 46, float %200, float %116, float %231)  ; FMad(a,b,c)
  %233 = call float @dx.op.tertiary.f32(i32 46, float %201, float %135, float %232)  ; FMad(a,b,c)
  %234 = extractvalue %dx.types.CBufRet.f32 %182, 0
  %235 = extractvalue %dx.types.CBufRet.f32 %182, 1
  %236 = extractvalue %dx.types.CBufRet.f32 %182, 2
  %237 = fmul fast float %234, %227
  %238 = fmul fast float %235, %230
  %239 = fmul fast float %236, %233
  %240 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 22)  ; CBufferLoadLegacy(handle,regIndex)
  %241 = extractvalue %dx.types.CBufRet.f32 %240, 0
  %242 = extractvalue %dx.types.CBufRet.f32 %240, 1
  %243 = extractvalue %dx.types.CBufRet.f32 %240, 2
  %244 = extractvalue %dx.types.CBufRet.f32 %240, 3
  %245 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 23)  ; CBufferLoadLegacy(handle,regIndex)
  %246 = extractvalue %dx.types.CBufRet.f32 %245, 0
  %247 = extractvalue %dx.types.CBufRet.f32 %245, 1
  %248 = extractvalue %dx.types.CBufRet.f32 %245, 2
  %249 = extractvalue %dx.types.CBufRet.f32 %245, 3
  %250 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 24)  ; CBufferLoadLegacy(handle,regIndex)
  %251 = extractvalue %dx.types.CBufRet.f32 %250, 0
  %252 = extractvalue %dx.types.CBufRet.f32 %250, 1
  %253 = extractvalue %dx.types.CBufRet.f32 %250, 2
  %254 = extractvalue %dx.types.CBufRet.f32 %250, 3
  %255 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 25)  ; CBufferLoadLegacy(handle,regIndex)
  %256 = extractvalue %dx.types.CBufRet.f32 %255, 0
  %257 = extractvalue %dx.types.CBufRet.f32 %255, 1
  %258 = extractvalue %dx.types.CBufRet.f32 %255, 2
  %259 = extractvalue %dx.types.CBufRet.f32 %255, 3
  %260 = fmul fast float %241, %11
  %261 = call float @dx.op.tertiary.f32(i32 46, float %12, float %242, float %260)  ; FMad(a,b,c)
  %262 = call float @dx.op.tertiary.f32(i32 46, float %13, float %243, float %261)  ; FMad(a,b,c)
  %263 = call float @dx.op.tertiary.f32(i32 46, float %14, float %244, float %262)  ; FMad(a,b,c)
  %264 = fmul fast float %246, %11
  %265 = call float @dx.op.tertiary.f32(i32 46, float %12, float %247, float %264)  ; FMad(a,b,c)
  %266 = call float @dx.op.tertiary.f32(i32 46, float %13, float %248, float %265)  ; FMad(a,b,c)
  %267 = call float @dx.op.tertiary.f32(i32 46, float %14, float %249, float %266)  ; FMad(a,b,c)
  %268 = fmul fast float %251, %11
  %269 = call float @dx.op.tertiary.f32(i32 46, float %12, float %252, float %268)  ; FMad(a,b,c)
  %270 = call float @dx.op.tertiary.f32(i32 46, float %13, float %253, float %269)  ; FMad(a,b,c)
  %271 = call float @dx.op.tertiary.f32(i32 46, float %14, float %254, float %270)  ; FMad(a,b,c)
  %272 = fmul fast float %256, %11
  %273 = call float @dx.op.tertiary.f32(i32 46, float %12, float %257, float %272)  ; FMad(a,b,c)
  %274 = call float @dx.op.tertiary.f32(i32 46, float %13, float %258, float %273)  ; FMad(a,b,c)
  %275 = call float @dx.op.tertiary.f32(i32 46, float %14, float %259, float %274)  ; FMad(a,b,c)
  %276 = extractvalue %dx.types.CBufRet.f32 %211, 3
  %277 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 14)  ; CBufferLoadLegacy(handle,regIndex)
  %278 = extractvalue %dx.types.CBufRet.f32 %277, 0
  %279 = extractvalue %dx.types.CBufRet.f32 %277, 1
  %280 = extractvalue %dx.types.CBufRet.f32 %277, 2
  %281 = extractvalue %dx.types.CBufRet.f32 %277, 3
  %282 = call float @dx.op.dot4.f32(i32 56, float %11, float %12, float %13, float %14, float %278, float %279, float %280, float %281)  ; Dot4(ax,ay,az,aw,bx,by,bz,bw)
  %283 = call float @dx.op.unary.f32(i32 7, float %282)  ; Saturate(value)
  %284 = fmul fast float %222, %2
  %285 = fmul fast float %223, %3
  %286 = fmul fast float %224, %4
  %287 = fmul fast float %276, %5
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 0, float %284)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 1, float %285)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 2, float %286)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 3, float %287)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 1, i32 0, i8 0, float %237)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 1, i32 0, i8 1, float %238)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 1, i32 0, i8 2, float %239)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 1, i32 0, i8 3, float %283)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 2, i32 0, i8 0, float %6)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 2, i32 0, i8 1, float %7)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 3, i32 0, i8 0, float %263)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 3, i32 0, i8 1, float %267)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 3, i32 0, i8 2, float %271)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 3, i32 0, i8 3, float %275)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  ret void
}

; Function Attrs: nounwind readnone
declare float @dx.op.loadInput.f32(i32, i32, i32, i8, i32) #0

; Function Attrs: nounwind
declare void @dx.op.storeOutput.f32(i32, i32, i32, i8, float) #1

; Function Attrs: nounwind readnone
declare float @dx.op.dot3.f32(i32, float, float, float, float, float, float) #0

; Function Attrs: nounwind readnone
declare float @dx.op.unary.f32(i32, float) #0

; Function Attrs: nounwind readnone
declare float @dx.op.binary.f32(i32, float, float) #0

; Function Attrs: nounwind readnone
declare float @dx.op.dot4.f32(i32, float, float, float, float, float, float, float, float) #0

; Function Attrs: nounwind readonly
declare %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32, %dx.types.Handle, i32) #2

; Function Attrs: nounwind readnone
declare float @dx.op.tertiary.f32(i32, float, float, float) #0

; Function Attrs: nounwind readonly
declare %dx.types.Handle @dx.op.createHandle(i32, i8, i32, i32, i1) #2

attributes #0 = { nounwind readnone }
attributes #1 = { nounwind }
attributes #2 = { nounwind readonly }

!xbox.compiler.options = !{!0}
!llvm.ident = !{!1}
!dx.version = !{!2}
!dx.valver = !{!3}
!dx.shaderModel = !{!4}
!dx.resources = !{!5}
!dx.viewIdState = !{!8}
!dx.entryPoints = !{!9}

!0 = !{!"__XBOX_PER_THREAD_SCRATCH_SIZE_LIMIT_IN_BYTES", !"0"}
!1 = !{!"dxcxbox 2410.2410.11116.10741"}
!2 = !{i32 1, i32 0}
!3 = !{i32 1, i32 8}
!4 = !{!"vs", i32 6, i32 0}
!5 = !{null, null, !6, null}
!6 = !{!7}
!7 = !{i32 0, %hostlayout.Parameters* undef, !"", i32 0, i32 0, i32 1, i32 416, null}
!8 = !{[18 x i32] [i32 16, i32 16, i32 61680, i32 61680, i32 61680, i32 61680, i32 119, i32 119, i32 119, i32 0, i32 256, i32 512, i32 0, i32 0, i32 1, i32 2, i32 4, i32 8]}
!9 = !{void ()* @VSBasicVertexLightingTxVcBn, !"VSBasicVertexLightingTxVcBn", !10, !5, null}
!10 = !{!11, !20, null}
!11 = !{!12, !15, !17, !19}
!12 = !{i32 0, !"SV_Position", i8 9, i8 0, !13, i8 0, i32 1, i8 4, i32 0, i8 0, !14}
!13 = !{i32 0}
!14 = !{i32 3, i32 15}
!15 = !{i32 1, !"NORMAL", i8 9, i8 0, !13, i8 0, i32 1, i8 3, i32 1, i8 0, !16}
!16 = !{i32 3, i32 7}
!17 = !{i32 2, !"TEXCOORD", i8 9, i8 0, !13, i8 0, i32 1, i8 2, i32 2, i8 0, !18}
!18 = !{i32 3, i32 3}
!19 = !{i32 3, !"COLOR", i8 9, i8 0, !13, i8 0, i32 1, i8 4, i32 3, i8 0, !14}
!20 = !{!21, !22, !24, !25}
!21 = !{i32 0, !"COLOR", i8 9, i8 0, !13, i8 2, i32 1, i8 4, i32 0, i8 0, !14}
!22 = !{i32 1, !"COLOR", i8 9, i8 0, !23, i8 2, i32 1, i8 4, i32 1, i8 0, !14}
!23 = !{i32 1}
!24 = !{i32 2, !"TEXCOORD", i8 9, i8 0, !13, i8 2, i32 1, i8 2, i32 2, i8 0, !18}
!25 = !{i32 3, !"SV_Position", i8 9, i8 3, !13, i8 4, i32 1, i8 4, i32 3, i8 0, !14}

;
; DUMPING SHADER HARDWARE INSTRUCTIONS 
;
// Shader Type               : (VS)
// Shader Hw Stage           : (VS)

// Shader Instructions:
shader main
  asic(CI)
  type(VS)
  s_swappc_b64  s[0:1], s[0:1]
  s_or_b32      s85, s4, 0x00100000 // wrscc
  s_mov_b32     s84, s3
  s_mov_b32     s86, -1
  s_mov_b32     s87, 0x00024fac
  s_buffer_load_dwordx16  s[4:19], s[84:87], 0x00
  s_buffer_load_dwordx16  s[68:83], s[84:87], 0x10
  s_buffer_load_dwordx16  s[36:51], s[84:87], 0x20
  s_buffer_load_dwordx4  s[0:3], s[84:87], 0x30
  s_buffer_load_dwordx16  s[20:35], s[84:87], 0x38
  s_buffer_load_dwordx16  s[52:67], s[84:87], 0x4c
  s_waitcnt     vmcnt(0)
  v_mad_f32     v0, v8, 2.0, -1.0
  v_mad_f32     v1, v9, 2.0, -1.0
  v_mad_f32     v2, v10, 2.0, -1.0
  s_waitcnt     lgkmcnt(0)
  v_mul_legacy_f32  v8, s28, v4
  v_mul_legacy_f32  v3, s24, v4
  v_mac_legacy_f32  v8, s29, v5
  v_mac_legacy_f32  v3, s25, v5
  v_mac_legacy_f32  v8, s30, v6
  v_mul_legacy_f32  v9, s32, v4
  v_mul_legacy_f32  v14, s56, v0
  v_mul_legacy_f32  v11, s52, v0
  v_mac_legacy_f32  v3, s26, v6
  v_mac_legacy_f32  v8, s31, v7
  v_mac_legacy_f32  v9, s33, v5
  v_mac_legacy_f32  v14, s57, v1
  v_mac_legacy_f32  v3, s27, v7
  v_mac_legacy_f32  v9, s34, v6
  v_mac_legacy_f32  v11, s53, v1
  v_mul_legacy_f32  v0, s60, v0
  v_sub_f32     v8, s1, v8
  v_mac_legacy_f32  v14, s58, v2
  v_mac_legacy_f32  v0, s61, v1
  v_mac_legacy_f32  v9, s35, v7
  v_sub_f32     v3, s0, v3
  v_mul_legacy_f32  v10, v8, v8
  v_mac_legacy_f32  v11, s54, v2
  v_mul_legacy_f32  v1, v14, v14
  v_sub_f32     v9, s2, v9
  v_mac_legacy_f32  v10, v3, v3
  v_mac_legacy_f32  v0, s62, v2
  v_mac_legacy_f32  v1, v11, v11
  v_mac_legacy_f32  v10, v9, v9
  v_mac_legacy_f32  v1, v0, v0
  v_rsq_f32     v10, v10
  v_rsq_f32     v1, v1
  v_mad_legacy_f32  v22, v8, v10, -s69
  v_mul_legacy_f32  v2, v1, v11
  v_mul_legacy_f32  v11, v1, v14
  v_mad_legacy_f32  v14, v8, v10, -s17
  v_mul_legacy_f32  v0, v1, v0
  v_mad_legacy_f32  v1, v3, v10, -s16
  v_mul_legacy_f32  v20, v14, v14
  v_mac_legacy_f32  v20, v1, v1
  v_mad_legacy_f32  v15, v9, v10, -s18
  v_mac_legacy_f32  v20, v15, v15
  v_mad_legacy_f32  v21, v3, v10, -s68
  v_mul_legacy_f32  v24, v22, v22
  v_mad_legacy_f32  v8, v8, v10, -s73
  v_rsq_f32     v20, v20
  v_mad_legacy_f32  v23, v9, v10, -s70
  v_mac_legacy_f32  v24, v21, v21
  v_mad_legacy_f32  v3, v3, v10, -s72
  v_mad_legacy_f32  v9, v9, v10, -s74
  v_mul_legacy_f32  v10, v8, v8
  v_mac_legacy_f32  v24, v23, v23
  v_mac_legacy_f32  v10, v3, v3
  v_rsq_f32     v24, v24
  v_mac_legacy_f32  v10, v9, v9
  v_rsq_f32     v10, v10
  v_mul_legacy_f32  v1, v1, v2
  v_mul_legacy_f32  v25, s16, v2
  v_mul_legacy_f32  v14, v20, v14
  v_mul_legacy_f32  v1, v1, v20
  v_mad_legacy_f32  v25, -s17, v11, -v25
  v_mul_legacy_f32  v26, s68, v2
  v_mac_legacy_f32  v1, v14, v11
  v_mul_legacy_f32  v14, v21, v2
  v_mul_legacy_f32  v27, s72, v2
  v_mul_legacy_f32  v2, v3, v2
  v_mad_legacy_f32  v26, -s69, v11, -v26
  v_mul_legacy_f32  v15, v20, v15
  v_mac_legacy_f32  v25, v0, -s18
  v_mul_legacy_f32  v22, v24, v22
  v_mul_legacy_f32  v14, v14, v24
  v_mad_legacy_f32  v27, -s73, v11, -v27
  v_mac_legacy_f32  v1, v15, v0
  v_mac_legacy_f32  v26, v0, -s70
  v_mul_legacy_f32  v23, v24, v23
  v_mac_legacy_f32  v14, v22, v11
  v_mul_legacy_f32  v8, v10, v8
  v_mul_legacy_f32  v2, v2, v10
  v_cmp_gt_f32  vcc, 0, v25
  v_mac_legacy_f32  v14, v23, v0
  v_mac_legacy_f32  v27, v0, -s74
  v_mac_legacy_f32  v2, v8, v11
  v_mul_legacy_f32  v9, v10, v9
  v_cndmask_b32  v8, 1.0, 0, vcc
  v_max_f32     v1, 0, v1
  v_cmp_gt_f32  s[0:1], 0, v26
  v_mad_legacy_f32  v0, v9, v0, v2
  v_mul_legacy_f32  v1, v1, v8
  v_cmp_gt_f32  s[2:3], 0, v27
  v_cndmask_b32  v9, 1.0, 0, s[0:1]
  v_max_f32     v14, 0, v14
  v_log_f32     v1, v1
  v_cndmask_b32  v10, 1.0, 0, s[2:3]
  v_max_f32     v0, 0, v0
  v_mul_legacy_f32  v11, v8, v25
  v_mul_legacy_f32  v8, v14, v9
  v_mul_legacy_f32  v0, v0, v10
  v_log_f32     v8, v8
  v_log_f32     v0, v0
  v_mul_legacy_f32  v1, s15, v1
  v_exp_f32     v1, v1
  v_mul_legacy_f32  v8, s15, v8
  v_mul_legacy_f32  v0, s15, v0
  v_exp_f32     v8, v8
  v_exp_f32     v0, v0
  v_mul_legacy_f32  v15, v9, v26
  v_mul_legacy_f32  v9, s76, v11
  v_mul_legacy_f32  v20, v10, v27
  v_mul_legacy_f32  v10, s77, v11
  v_mul_legacy_f32  v11, s78, v11
  v_mul_legacy_f32  v1, v1, v25
  v_mac_legacy_f32  v9, s80, v15
  v_mac_legacy_f32  v10, s81, v15
  v_mac_legacy_f32  v11, s82, v15
  v_mul_legacy_f32  v8, v8, v26
  v_mul_legacy_f32  v14, s40, v1
  v_mul_legacy_f32  v15, s41, v1
  v_mul_legacy_f32  v1, s42, v1
  v_mac_legacy_f32  v9, s36, v20
  v_mac_legacy_f32  v10, s37, v20
  v_mac_legacy_f32  v11, s38, v20
  v_mul_legacy_f32  v0, v0, v27
  v_mac_legacy_f32  v14, s44, v8
  v_mac_legacy_f32  v15, s45, v8
  v_mac_legacy_f32  v1, s46, v8
  v_mul_legacy_f32  v9, s4, v9
  v_mul_legacy_f32  v10, s5, v10
  v_mul_legacy_f32  v11, s6, v11
  v_mac_legacy_f32  v15, s49, v0
  v_mac_legacy_f32  v14, s48, v0
  v_mad_legacy_f32  v0, v0, s50, v1
  v_mul_legacy_f32  v1, s12, v14
  v_add_f32     v9, s8, v9
  v_add_f32     v10, s9, v10
  v_add_f32     v11, s10, v11
  v_mul_legacy_f32  v8, s13, v15
  v_mul_legacy_f32  v0, s14, v0
  s_buffer_load_dwordx8  s[8:15], s[84:87], 0x5c
  s_buffer_load_dwordx4  s[0:3], s[84:87], 0x64
  v_mul_legacy_f32  v14, s64, v4
  v_mac_legacy_f32  v14, s65, v5
  v_mac_legacy_f32  v14, s66, v6
  s_waitcnt     lgkmcnt(0)
  v_mul_legacy_f32  v15, s8, v4
  v_mul_legacy_f32  v20, s12, v4
  v_mul_legacy_f32  v21, s0, v4
  v_mac_legacy_f32  v15, s9, v5
  v_mac_legacy_f32  v20, s13, v5
  v_mac_legacy_f32  v21, s1, v5
  v_mac_legacy_f32  v15, s10, v6
  v_mac_legacy_f32  v20, s14, v6
  v_mac_legacy_f32  v21, s2, v6
  v_mac_legacy_f32  v14, s67, v7
  v_mac_legacy_f32  v15, s11, v7
  v_mac_legacy_f32  v20, s15, v7
  v_mac_legacy_f32  v21, s3, v7
  v_mul_legacy_f32  v5, s21, v5
  exp           pos0, v14, v15, v20, v21 done
  v_mul_legacy_f32  v7, s23, v7
  v_mad_legacy_f32  v4, v4, s20, v5
  v_mad_legacy_f32  v5, v6, s22, v7
  v_add_f32     v4, v4, v5 clamp
  v_mul_legacy_f32  v5, v9, v16
  v_mov_b32     v2, 1.0
  v_mov_b32     v3, 0
  v_mul_legacy_f32  v6, v10, v17
  v_mul_legacy_f32  v7, v11, v18
  v_mul_legacy_f32  v9, s7, v19
  exp           param0, v5, v6, v7, v9
  exp           param1, v1, v8, v0, v4
  exp           param2, v12, v13, v3, v2
  s_endpgm      
end


NumVGPR=28,NumSGPR=90,LDS=0,Scratch=0,Occpancy=5

// Shader Type               : (VS)
// Shader Hw Stage           : (ES)

// Shader Instructions:
shader main
  asic(CI)
  type(VS)
  s_swappc_b64  s[0:1], s[0:1]
  s_or_b32      s89, s4, 0x00100000 // wrscc
  s_mov_b32     s88, s3
  s_mov_b32     s90, -1
  s_mov_b32     s91, 0x00024fac
  s_buffer_load_dwordx16  s[8:23], s[88:91], 0x00
  s_buffer_load_dwordx16  s[72:87], s[88:91], 0x10
  s_buffer_load_dwordx16  s[40:55], s[88:91], 0x20
  s_buffer_load_dwordx4  s[56:59], s[88:91], 0x30
  s_buffer_load_dwordx16  s[24:39], s[88:91], 0x38
  s_waitcnt     vmcnt(0)
  v_mad_f32     v0, v8, 2.0, -1.0
  v_mad_f32     v1, v9, 2.0, -1.0
  v_mad_f32     v2, v10, 2.0, -1.0
  s_mov_b32     s1, 0
  s_waitcnt     lgkmcnt(0)
  v_mul_legacy_f32  v3, s28, v4
  v_mul_legacy_f32  v8, s32, v4
  v_mul_legacy_f32  v9, s36, v4
  v_mac_legacy_f32  v3, s29, v5
  v_mac_legacy_f32  v8, s33, v5
  v_mac_legacy_f32  v9, s37, v5
  v_mac_legacy_f32  v3, s30, v6
  v_mac_legacy_f32  v8, s34, v6
  v_mac_legacy_f32  v9, s38, v6
  v_mac_legacy_f32  v3, s31, v7
  v_mac_legacy_f32  v8, s35, v7
  v_mac_legacy_f32  v9, s39, v7
  v_sub_f32     v8, s57, v8
  v_sub_f32     v3, s56, v3
  v_sub_f32     v9, s58, v9
  s_buffer_load_dwordx16  s[56:71], s[88:91], 0x4c
  v_mul_legacy_f32  v10, v8, v8
  v_mac_legacy_f32  v10, v3, v3
  v_mac_legacy_f32  v10, v9, v9
  v_rsq_f32     v10, v10
  s_waitcnt     lgkmcnt(0)
  v_mul_legacy_f32  v14, s60, v0
  v_mul_legacy_f32  v11, s56, v0
  v_mac_legacy_f32  v14, s61, v1
  v_mac_legacy_f32  v11, s57, v1
  v_mul_legacy_f32  v0, s64, v0
  v_mac_legacy_f32  v14, s62, v2
  v_mac_legacy_f32  v0, s65, v1
  v_mac_legacy_f32  v11, s58, v2
  v_mul_legacy_f32  v1, v14, v14
  v_mac_legacy_f32  v0, s66, v2
  v_mac_legacy_f32  v1, v11, v11
  v_mac_legacy_f32  v1, v0, v0
  v_rsq_f32     v1, v1
  v_mad_legacy_f32  v22, v8, v10, -s73
  v_mad_legacy_f32  v15, v9, v10, -s22
  v_mad_legacy_f32  v23, v9, v10, -s74
  v_mul_legacy_f32  v2, v1, v11
  v_mul_legacy_f32  v11, v1, v14
  v_mad_legacy_f32  v14, v8, v10, -s21
  v_mul_legacy_f32  v0, v1, v0
  v_mad_legacy_f32  v1, v3, v10, -s20
  v_mul_legacy_f32  v20, v14, v14
  v_mac_legacy_f32  v20, v1, v1
  v_mad_legacy_f32  v8, v8, v10, -s77
  v_mac_legacy_f32  v20, v15, v15
  v_mad_legacy_f32  v21, v3, v10, -s72
  v_mul_legacy_f32  v24, v22, v22
  v_mad_legacy_f32  v3, v3, v10, -s76
  v_mad_legacy_f32  v9, v9, v10, -s78
  v_mul_legacy_f32  v10, v8, v8
  v_rsq_f32     v20, v20
  v_mac_legacy_f32  v24, v21, v21
  v_mac_legacy_f32  v10, v3, v3
  v_mac_legacy_f32  v24, v23, v23
  v_mac_legacy_f32  v10, v9, v9
  v_rsq_f32     v24, v24
  v_rsq_f32     v10, v10
  v_mul_legacy_f32  v1, v1, v2
  v_mul_legacy_f32  v25, s20, v2
  v_mul_legacy_f32  v14, v20, v14
  v_mul_legacy_f32  v1, v1, v20
  v_mad_legacy_f32  v25, -s21, v11, -v25
  v_mul_legacy_f32  v26, s72, v2
  v_mul_legacy_f32  v27, s76, v2
  v_mac_legacy_f32  v1, v14, v11
  v_mul_legacy_f32  v14, v21, v2
  v_mul_legacy_f32  v2, v3, v2
  v_mad_legacy_f32  v26, -s73, v11, -v26
  v_mul_legacy_f32  v15, v20, v15
  v_mac_legacy_f32  v25, v0, -s22
  v_mul_legacy_f32  v22, v24, v22
  v_mul_legacy_f32  v14, v14, v24
  v_mul_legacy_f32  v8, v10, v8
  v_mul_legacy_f32  v2, v2, v10
  v_mad_legacy_f32  v27, -s77, v11, -v27
  v_mac_legacy_f32  v1, v15, v0
  v_mac_legacy_f32  v26, v0, -s74
  v_mul_legacy_f32  v23, v24, v23
  v_mac_legacy_f32  v14, v22, v11
  v_mul_legacy_f32  v9, v10, v9
  v_mac_legacy_f32  v2, v8, v11
  v_cmp_gt_f32  vcc, 0, v25
  v_mac_legacy_f32  v14, v23, v0
  v_mac_legacy_f32  v27, v0, -s78
  v_mad_legacy_f32  v0, v9, v0, v2
  v_cmp_gt_f32  s[2:3], 0, v26
  v_cndmask_b32  v2, 1.0, 0, vcc
  v_max_f32     v1, 0, v1
  v_cndmask_b32  v3, 1.0, 0, s[2:3]
  v_mul_legacy_f32  v1, v1, v2
  v_cmp_gt_f32  s[4:5], 0, v27
  v_max_f32     v14, 0, v14
  v_log_f32     v1, v1
  v_cndmask_b32  v8, 1.0, 0, s[4:5]
  v_max_f32     v0, 0, v0
  v_mul_legacy_f32  v9, v2, v25
  v_mul_legacy_f32  v2, v14, v3
  v_mul_legacy_f32  v0, v0, v8
  v_log_f32     v2, v2
  v_log_f32     v0, v0
  v_mul_legacy_f32  v1, s19, v1
  v_exp_f32     v1, v1
  v_mul_legacy_f32  v2, s19, v2
  v_mul_legacy_f32  v0, s19, v0
  v_exp_f32     v2, v2
  v_exp_f32     v0, v0
  v_mul_legacy_f32  v10, v3, v26
  v_mul_legacy_f32  v3, s80, v9
  v_mul_legacy_f32  v11, v8, v27
  v_mul_legacy_f32  v8, s81, v9
  v_mul_legacy_f32  v9, s82, v9
  v_mac_legacy_f32  v3, s84, v10
  v_mac_legacy_f32  v8, s85, v10
  v_mac_legacy_f32  v9, s86, v10
  v_mul_legacy_f32  v1, v1, v25
  v_mac_legacy_f32  v3, s40, v11
  v_mac_legacy_f32  v8, s41, v11
  v_mac_legacy_f32  v9, s42, v11
  v_mul_legacy_f32  v2, v2, v26
  v_mul_legacy_f32  v10, s44, v1
  v_mul_legacy_f32  v11, s45, v1
  v_mul_legacy_f32  v1, s46, v1
  v_mul_legacy_f32  v0, v0, v27
  v_mac_legacy_f32  v10, s48, v2
  v_mac_legacy_f32  v11, s49, v2
  v_mac_legacy_f32  v1, s50, v2
  v_mul_legacy_f32  v3, s8, v3
  v_mul_legacy_f32  v8, s9, v8
  v_mul_legacy_f32  v9, s10, v9
  v_mac_legacy_f32  v11, s53, v0
  v_mac_legacy_f32  v10, s52, v0
  v_mad_legacy_f32  v0, v0, s54, v1
  v_add_f32     v3, s12, v3
  v_mul_legacy_f32  v1, s16, v10
  v_add_f32     v8, s13, v8
  v_add_f32     v9, s14, v9
  v_mul_legacy_f32  v2, s17, v11
  v_mul_legacy_f32  v0, s18, v0
  s_buffer_load_dwordx8  s[12:19], s[88:91], 0x5c
  s_buffer_load_dwordx4  s[20:23], s[88:91], 0x64
  v_mul_legacy_f32  v10, s68, v4
  v_mac_legacy_f32  v10, s69, v5
  s_load_dwordx4  s[0:3], s[0:1], 0x08
  s_waitcnt     lgkmcnt(0)
  v_mul_legacy_f32  v11, s12, v4
  v_mul_legacy_f32  v14, s16, v4
  v_mul_legacy_f32  v15, s20, v4
  v_mac_legacy_f32  v11, s13, v5
  v_mac_legacy_f32  v14, s17, v5
  v_mac_legacy_f32  v15, s21, v5
  v_mac_legacy_f32  v10, s70, v6
  v_mac_legacy_f32  v11, s14, v6
  v_mac_legacy_f32  v14, s18, v6
  v_mac_legacy_f32  v15, s22, v6
  v_mul_legacy_f32  v5, s25, v5
  v_mac_legacy_f32  v10, s71, v7
  v_mac_legacy_f32  v11, s15, v7
  v_mac_legacy_f32  v14, s19, v7
  v_mac_legacy_f32  v15, s23, v7
  v_mul_legacy_f32  v7, s27, v7
  v_mad_legacy_f32  v4, v4, s24, v5
  v_mad_legacy_f32  v5, v6, s26, v7
  v_add_f32     v4, v4, v5 clamp
  v_mul_legacy_f32  v3, v3, v16
  v_mul_legacy_f32  v5, v8, v17
  v_mul_legacy_f32  v6, v9, v18
  v_mul_legacy_f32  v7, s11, v19
  buffer_store_dword  v10, v0, s[0:3], s7 offset:48 glc slc
  buffer_store_dword  v11, v0, s[0:3], s7 offset:52 glc slc
  buffer_store_dword  v14, v0, s[0:3], s7 offset:56 glc slc
  buffer_store_dword  v15, v0, s[0:3], s7 offset:60 glc slc
  buffer_store_dword  v3, v0, s[0:3], s7 glc slc
  buffer_store_dword  v5, v0, s[0:3], s7 offset:4 glc slc
  buffer_store_dword  v6, v0, s[0:3], s7 offset:8 glc slc
  buffer_store_dword  v7, v0, s[0:3], s7 offset:12 glc slc
  buffer_store_dword  v1, v0, s[0:3], s7 offset:16 glc slc
  buffer_store_dword  v2, v0, s[0:3], s7 offset:20 glc slc
  buffer_store_dword  v0, v0, s[0:3], s7 offset:24 glc slc
  buffer_store_dword  v4, v0, s[0:3], s7 offset:28 glc slc
  buffer_store_dword  v12, v0, s[0:3], s7 offset:32 glc slc
  buffer_store_dword  v13, v0, s[0:3], s7 offset:36 glc slc
  s_endpgm      
end


NumVGPR=28,NumSGPR=94,LDS=0,Scratch=0,Occpancy=5

// Shader Type               : (VS)
// Shader Hw Stage           : (LS)

// Shader Instructions:
shader main
  asic(CI)
  type(VS)
  s_swappc_b64  s[0:1], s[0:1]
  s_or_b32      s85, s4, 0x00100000 // wrscc
  s_mov_b32     s84, s3
  s_mov_b32     s86, -1
  s_mov_b32     s87, 0x00024fac
  s_buffer_load_dwordx16  s[4:19], s[84:87], 0x00
  s_buffer_load_dwordx16  s[68:83], s[84:87], 0x10
  s_buffer_load_dwordx16  s[36:51], s[84:87], 0x20
  s_buffer_load_dwordx4  s[0:3], s[84:87], 0x30
  s_buffer_load_dwordx16  s[20:35], s[84:87], 0x38
  s_buffer_load_dwordx16  s[52:67], s[84:87], 0x4c
  s_waitcnt     vmcnt(0)
  v_mad_f32     v2, v9, 2.0, -1.0
  v_mad_f32     v0, v8, 2.0, -1.0
  v_mad_f32     v3, v10, 2.0, -1.0
  s_waitcnt     lgkmcnt(0)
  v_mul_legacy_f32  v9, s28, v4
  v_mul_legacy_f32  v8, s24, v4
  v_mac_legacy_f32  v9, s29, v5
  v_mac_legacy_f32  v8, s25, v5
  v_mac_legacy_f32  v9, s30, v6
  v_mul_legacy_f32  v10, s32, v4
  v_mul_legacy_f32  v15, s56, v0
  v_mul_legacy_f32  v14, s52, v0
  v_mac_legacy_f32  v8, s26, v6
  v_mac_legacy_f32  v9, s31, v7
  v_mac_legacy_f32  v10, s33, v5
  v_mac_legacy_f32  v15, s57, v2
  v_mac_legacy_f32  v8, s27, v7
  v_mac_legacy_f32  v10, s34, v6
  v_mac_legacy_f32  v14, s53, v2
  v_mul_legacy_f32  v0, s60, v0
  v_sub_f32     v9, s1, v9
  v_mac_legacy_f32  v15, s58, v3
  v_mac_legacy_f32  v0, s61, v2
  v_mac_legacy_f32  v10, s35, v7
  v_sub_f32     v8, s0, v8
  v_mul_legacy_f32  v11, v9, v9
  v_mac_legacy_f32  v14, s54, v3
  v_mul_legacy_f32  v2, v15, v15
  v_sub_f32     v10, s2, v10
  v_mac_legacy_f32  v11, v8, v8
  v_mac_legacy_f32  v0, s62, v3
  v_mac_legacy_f32  v2, v14, v14
  v_mac_legacy_f32  v11, v10, v10
  v_mac_legacy_f32  v2, v0, v0
  v_rsq_f32     v11, v11
  v_rsq_f32     v2, v2
  s_mov_b32     m0, -1
  v_mad_legacy_f32  v23, v9, v11, -s69
  v_mul_legacy_f32  v3, v2, v14
  v_mul_legacy_f32  v14, v2, v15
  v_mad_legacy_f32  v15, v9, v11, -s17
  v_mul_legacy_f32  v0, v2, v0
  v_mad_legacy_f32  v2, v8, v11, -s16
  v_mul_legacy_f32  v21, v15, v15
  v_mac_legacy_f32  v21, v2, v2
  v_mad_legacy_f32  v20, v10, v11, -s18
  v_mad_legacy_f32  v9, v9, v11, -s73
  v_mac_legacy_f32  v21, v20, v20
  v_mad_legacy_f32  v22, v8, v11, -s68
  v_mul_legacy_f32  v25, v23, v23
  v_mad_legacy_f32  v24, v10, v11, -s70
  v_mad_legacy_f32  v8, v8, v11, -s72
  v_mad_legacy_f32  v10, v10, v11, -s74
  v_mul_legacy_f32  v11, v9, v9
  v_rsq_f32     v21, v21
  v_mac_legacy_f32  v25, v22, v22
  v_mac_legacy_f32  v11, v8, v8
  v_mac_legacy_f32  v25, v24, v24
  v_mac_legacy_f32  v11, v10, v10
  v_rsq_f32     v25, v25
  v_rsq_f32     v11, v11
  v_mul_legacy_f32  v2, v2, v3
  v_mul_legacy_f32  v26, s16, v3
  v_mul_legacy_f32  v15, v21, v15
  v_mul_legacy_f32  v2, v2, v21
  v_mad_legacy_f32  v26, -s17, v14, -v26
  v_mul_legacy_f32  v27, s68, v3
  v_mul_legacy_f32  v28, s72, v3
  v_mac_legacy_f32  v2, v15, v14
  v_mul_legacy_f32  v15, v22, v3
  v_mul_legacy_f32  v3, v8, v3
  v_mad_legacy_f32  v27, -s69, v14, -v27
  v_mul_legacy_f32  v20, v21, v20
  v_mac_legacy_f32  v26, v0, -s18
  v_mul_legacy_f32  v23, v25, v23
  v_mul_legacy_f32  v15, v15, v25
  v_mul_legacy_f32  v9, v11, v9
  v_mul_legacy_f32  v3, v3, v11
  v_mad_legacy_f32  v28, -s73, v14, -v28
  v_mac_legacy_f32  v2, v20, v0
  v_mac_legacy_f32  v27, v0, -s70
  v_mul_legacy_f32  v24, v25, v24
  v_mac_legacy_f32  v15, v23, v14
  v_mul_legacy_f32  v10, v11, v10
  v_mac_legacy_f32  v3, v9, v14
  v_cmp_gt_f32  vcc, 0, v26
  v_mac_legacy_f32  v15, v24, v0
  v_mac_legacy_f32  v28, v0, -s74
  v_mad_legacy_f32  v0, v10, v0, v3
  v_cmp_gt_f32  s[0:1], 0, v27
  v_cndmask_b32  v3, 1.0, 0, vcc
  v_max_f32     v2, 0, v2
  v_mul_legacy_f32  v2, v2, v3
  v_cmp_gt_f32  s[2:3], 0, v28
  v_cndmask_b32  v8, 1.0, 0, s[0:1]
  v_max_f32     v15, 0, v15
  v_log_f32     v2, v2
  v_cndmask_b32  v9, 1.0, 0, s[2:3]
  v_max_f32     v0, 0, v0
  v_mul_legacy_f32  v10, v3, v26
  v_mul_legacy_f32  v3, v15, v8
  v_mul_legacy_f32  v0, v0, v9
  v_log_f32     v3, v3
  v_log_f32     v0, v0
  v_mul_legacy_f32  v2, s15, v2
  v_mul_legacy_f32  v11, v8, v27
  v_mul_legacy_f32  v8, s76, v10
  v_mul_legacy_f32  v3, s15, v3
  v_exp_f32     v2, v2
  v_mul_legacy_f32  v14, v9, v28
  v_mul_legacy_f32  v9, s77, v10
  v_mac_legacy_f32  v8, s80, v11
  v_mul_legacy_f32  v0, s15, v0
  v_exp_f32     v3, v3
  v_mac_legacy_f32  v8, s36, v14
  v_mac_legacy_f32  v9, s81, v11
  v_mul_legacy_f32  v10, s78, v10
  v_exp_f32     v0, v0
  v_mac_legacy_f32  v10, s82, v11
  v_mul_legacy_f32  v8, s4, v8
  v_mac_legacy_f32  v9, s37, v14
  v_add_f32     v20, s8, v8
  v_mul_legacy_f32  v8, s5, v9
  v_mac_legacy_f32  v10, s38, v14
  v_mul_legacy_f32  v2, v2, v26
  v_add_f32     v21, s9, v8
  v_mul_legacy_f32  v8, s6, v10
  v_add_f32     v22, s10, v8
  v_mul_legacy_f32  v3, v3, v27
  v_mul_legacy_f32  v8, s40, v2
  v_mul_legacy_f32  v9, s41, v2
  v_mul_legacy_f32  v2, s42, v2
  v_mul_legacy_f32  v0, v0, v28
  v_mac_legacy_f32  v8, s44, v3
  v_mac_legacy_f32  v9, s45, v3
  v_mac_legacy_f32  v2, s46, v3
  v_mac_legacy_f32  v9, s49, v0
  v_mac_legacy_f32  v8, s48, v0
  v_mad_legacy_f32  v0, v0, s50, v2
  v_mul_legacy_f32  v2, s12, v8
  v_mul_legacy_f32  v8, s14, v0
  v_mul_legacy_f32  v3, s13, v9
  s_buffer_load_dwordx8  s[8:15], s[84:87], 0x5c
  v_mul_legacy_f32  v0, s64, v4
  v_mac_legacy_f32  v0, s65, v5
  v_mac_legacy_f32  v0, s66, v6
  s_buffer_load_dwordx4  s[0:3], s[84:87], 0x64
  v_mad_legacy_f32  v10, v7, s67, v0
  s_waitcnt     lgkmcnt(0)
  v_mul_legacy_f32  v0, s8, v4
  v_mac_legacy_f32  v0, s9, v5
  v_mac_legacy_f32  v0, s10, v6
  v_mad_legacy_f32  v11, v7, s11, v0
  v_mul_legacy_f32  v0, s12, v4
  v_mac_legacy_f32  v0, s13, v5
  v_mac_legacy_f32  v0, s14, v6
  v_mad_legacy_f32  v14, v7, s15, v0
  v_mul_legacy_f32  v0, s0, v4
  v_mac_legacy_f32  v0, s1, v5
  v_mac_legacy_f32  v0, s2, v6
  v_mad_legacy_f32  v15, v7, s3, v0
  v_mul_legacy_f32  v0, s21, v5
  v_mul_legacy_f32  v5, s23, v7
  v_mac_legacy_f32  v0, s20, v4
  v_mad_legacy_f32  v4, v6, s22, v5
  v_add_f32     v9, v0, v4 clamp
  v_mul_legacy_f32  v4, v20, v16
  v_mul_legacy_f32  v5, v21, v17
  v_mul_legacy_f32  v6, v22, v18
  v_mul_legacy_f32  v7, s7, v19
  v_lshlrev_b32  v0, 6, v1
  ds_write2_b64  v0, v[10:11], v[14:15] offset0:6 offset1:7
  ds_write2_b64  v0, v[4:5], v[6:7] offset1:1
  ds_write2_b64  v0, v[2:3], v[8:9] offset0:2 offset1:3
  ds_write_b64  v0, v[12:13] offset:32
  s_endpgm      
end


NumVGPR=29,NumSGPR=90,LDS=0,Scratch=0,Occpancy=5


#endif

const unsigned char BasicEffect_VSBasicVertexLightingTxVcBn[] = {
  0x44, 0x58, 0x42, 0x43, 0xf7, 0x0e, 0x06, 0x24, 0x81, 0x31, 0x5d, 0xea,
  0x27, 0xf0, 0xac, 0x2e, 0x24, 0x55, 0x20, 0xda, 0x01, 0x00, 0x00, 0x00,
  0xd4, 0x22, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00,
  0x50, 0x00, 0x00, 0x00, 0x04, 0x01, 0x00, 0x00, 0xb0, 0x01, 0x00, 0x00,
  0x38, 0x03, 0x00, 0x00, 0xbc, 0x03, 0x00, 0x00, 0x58, 0x04, 0x00, 0x00,
  0x74, 0x04, 0x00, 0x00, 0x53, 0x46, 0x49, 0x30, 0x08, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x49, 0x53, 0x47, 0x31,
  0xac, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x88, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x0f, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x94, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x07, 0x07, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x9b, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x03, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xa4, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x0f, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x53, 0x56, 0x5f, 0x50,
  0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x00, 0x4e, 0x4f, 0x52, 0x4d,
  0x41, 0x4c, 0x00, 0x54, 0x45, 0x58, 0x43, 0x4f, 0x4f, 0x52, 0x44, 0x00,
  0x43, 0x4f, 0x4c, 0x4f, 0x52, 0x00, 0x00, 0x00, 0x4f, 0x53, 0x47, 0x31,
  0xa4, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x88, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x88, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x8e, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x03, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x97, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x43, 0x4f, 0x4c, 0x4f,
  0x52, 0x00, 0x54, 0x45, 0x58, 0x43, 0x4f, 0x4f, 0x52, 0x44, 0x00, 0x53,
  0x56, 0x5f, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x00, 0x00,
  0x50, 0x53, 0x56, 0x30, 0x80, 0x01, 0x00, 0x00, 0x34, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff,
  0x01, 0x00, 0x00, 0x00, 0x04, 0x04, 0x00, 0x04, 0x04, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x38, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x54, 0x00, 0x00, 0x00, 0x00, 0x53, 0x56, 0x5f, 0x50, 0x6f, 0x73, 0x69,
  0x74, 0x69, 0x6f, 0x6e, 0x00, 0x4e, 0x4f, 0x52, 0x4d, 0x41, 0x4c, 0x00,
  0x54, 0x45, 0x58, 0x43, 0x4f, 0x4f, 0x52, 0x44, 0x00, 0x43, 0x4f, 0x4c,
  0x4f, 0x52, 0x00, 0x43, 0x4f, 0x4c, 0x4f, 0x52, 0x00, 0x43, 0x4f, 0x4c,
  0x4f, 0x52, 0x00, 0x54, 0x45, 0x58, 0x43, 0x4f, 0x4f, 0x52, 0x44, 0x00,
  0x56, 0x53, 0x42, 0x61, 0x73, 0x69, 0x63, 0x56, 0x65, 0x72, 0x74, 0x65,
  0x78, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x54, 0x78, 0x56,
  0x63, 0x42, 0x6e, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x44, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x0d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x43, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x02, 0x42, 0x00, 0x03, 0x00, 0x00, 0x00, 0x1d, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x03, 0x44, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x23, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x44, 0x00,
  0x03, 0x02, 0x00, 0x00, 0x29, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x01, 0x01, 0x44, 0x00, 0x03, 0x02, 0x00, 0x00, 0x2f, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x02, 0x42, 0x00, 0x03, 0x02, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x03, 0x44, 0x03,
  0x03, 0x04, 0x00, 0x00, 0xf0, 0xf0, 0x00, 0x00, 0xf0, 0xf0, 0x00, 0x00,
  0xf0, 0xf0, 0x00, 0x00, 0xf0, 0xf0, 0x00, 0x00, 0x77, 0x00, 0x00, 0x00,
  0x77, 0x00, 0x00, 0x00, 0x77, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x04, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x52, 0x54, 0x53, 0x30,
  0x7c, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7c, 0x00, 0x00, 0x00,
  0x1d, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x3c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00,
  0x44, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00,
  0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x4c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xff, 0xff, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x68, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x49, 0x4c, 0x44, 0x4e,
  0x94, 0x00, 0x00, 0x00, 0x00, 0x00, 0x8c, 0x00, 0x43, 0x3a, 0x5c, 0x55,
  0x73, 0x65, 0x72, 0x73, 0x5c, 0x6d, 0x61, 0x72, 0x63, 0x75, 0x5c, 0x44,
  0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x73, 0x5c, 0x44, 0x69, 0x72,
  0x65, 0x63, 0x74, 0x58, 0x54, 0x4b, 0x31, 0x32, 0x2d, 0x6d, 0x61, 0x69,
  0x6e, 0x5c, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x58, 0x54, 0x4b, 0x31,
  0x32, 0x2d, 0x6d, 0x61, 0x69, 0x6e, 0x5c, 0x53, 0x72, 0x63, 0x2f, 0x53,
  0x68, 0x61, 0x64, 0x65, 0x72, 0x73, 0x2f, 0x43, 0x6f, 0x6d, 0x70, 0x69,
  0x6c, 0x65, 0x64, 0x5c, 0x58, 0x62, 0x6f, 0x78, 0x47, 0x61, 0x6d, 0x69,
  0x6e, 0x67, 0x58, 0x62, 0x6f, 0x78, 0x4f, 0x6e, 0x65, 0x42, 0x61, 0x73,
  0x69, 0x63, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x5f, 0x56, 0x53, 0x42,
  0x61, 0x73, 0x69, 0x63, 0x56, 0x65, 0x72, 0x74, 0x65, 0x78, 0x4c, 0x69,
  0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x54, 0x78, 0x56, 0x63, 0x42, 0x6e,
  0x2e, 0x70, 0x64, 0x62, 0x00, 0x00, 0x00, 0x00, 0x48, 0x41, 0x53, 0x48,
  0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5f, 0x0b, 0x80, 0x35,
  0x7b, 0xb1, 0x67, 0xcf, 0xfe, 0xde, 0xdc, 0x57, 0x82, 0xfc, 0x45, 0x1a,
  0x44, 0x58, 0x49, 0x4c, 0x58, 0x1e, 0x00, 0x00, 0x60, 0x00, 0x01, 0x00,
  0x96, 0x07, 0x00, 0x00, 0x44, 0x58, 0x49, 0x4c, 0x00, 0x01, 0x00, 0x00,
  0x94, 0x00, 0x00, 0x00, 0x74, 0x10, 0x00, 0x00, 0x58, 0x44, 0x41, 0x54,
  0x08, 0x00, 0x00, 0x00, 0x24, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00,
  0x84, 0x00, 0x00, 0x00, 0x8c, 0x10, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00,
  0x10, 0x11, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x20, 0x11, 0x00, 0x00, 0xf8, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x18, 0x15, 0x00, 0x00, 0x2f, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x48, 0x19, 0x00, 0x00, 0xfd, 0x03, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x48, 0x1d, 0x00, 0x00, 0xb0, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00,
  0xf8, 0x1d, 0x00, 0x00, 0x4a, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00,
  0x44, 0x1e, 0x00, 0x00, 0x11, 0x00, 0x00, 0x00, 0x60, 0x00, 0x01, 0x00,
  0x23, 0x04, 0x00, 0x00, 0x44, 0x58, 0x49, 0x4c, 0x00, 0x01, 0x00, 0x00,
  0x10, 0x00, 0x00, 0x00, 0x74, 0x10, 0x00, 0x00, 0x42, 0x43, 0xc0, 0xde,
  0x21, 0x0c, 0x00, 0x00, 0x1a, 0x04, 0x00, 0x00, 0x0b, 0x82, 0x20, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x13, 0x00, 0x00, 0x00, 0x07, 0x81, 0x23, 0x91,
  0x41, 0xc8, 0x04, 0x49, 0x06, 0x10, 0x32, 0x39, 0x92, 0x01, 0x84, 0x0c,
  0x25, 0x05, 0x08, 0x19, 0x1e, 0x04, 0x8b, 0x62, 0x80, 0x18, 0x45, 0x02,
  0x42, 0x92, 0x0b, 0x42, 0xc4, 0x10, 0x32, 0x14, 0x38, 0x08, 0x18, 0x4b,
  0x0a, 0x32, 0x62, 0x88, 0x48, 0x90, 0x14, 0x20, 0x43, 0x46, 0x88, 0xa5,
  0x00, 0x19, 0x32, 0x42, 0xe4, 0x48, 0x0e, 0x90, 0x11, 0x23, 0xc4, 0x50,
  0x41, 0x51, 0x81, 0x8c, 0xe1, 0x83, 0xe5, 0x8a, 0x04, 0x31, 0x46, 0x06,
  0x51, 0x18, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x1b, 0x8c, 0xe0, 0xff,
  0xff, 0xff, 0xff, 0x07, 0x40, 0x02, 0xa8, 0x0d, 0x84, 0xf0, 0xff, 0xff,
  0xff, 0xff, 0x03, 0x20, 0x6d, 0x30, 0x86, 0xff, 0xff, 0xff, 0xff, 0x1f,
  0x00, 0x09, 0xa8, 0x00, 0x49, 0x18, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x13, 0x82, 0x60, 0x42, 0x20, 0x4c, 0x08, 0x06, 0x00, 0x00, 0x00, 0x00,
  0x89, 0x20, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x32, 0x22, 0x88, 0x09,
  0x20, 0x64, 0x85, 0x04, 0x13, 0x23, 0xa4, 0x84, 0x04, 0x13, 0x23, 0xe3,
  0x84, 0xa1, 0x90, 0x14, 0x12, 0x4c, 0x8c, 0x8c, 0x0b, 0x84, 0xc4, 0x4c,
  0x10, 0x90, 0xc1, 0x08, 0x40, 0x09, 0x00, 0x0a, 0x66, 0x00, 0xe6, 0x08,
  0xc0, 0x60, 0x8e, 0x00, 0x29, 0xc6, 0x40, 0x10, 0x44, 0x41, 0x90, 0x51,
  0x0c, 0x80, 0x20, 0x88, 0x62, 0x20, 0xa4, 0x20, 0x03, 0x31, 0x0c, 0xc3,
  0x30, 0x0c, 0xa4, 0x94, 0x61, 0x20, 0x06, 0x62, 0x0a, 0x31, 0x10, 0xc3,
  0x40, 0x4e, 0x51, 0x06, 0x62, 0x18, 0x86, 0x61, 0x18, 0x86, 0x81, 0xa0,
  0xa3, 0x86, 0xcb, 0x9f, 0xb0, 0x87, 0x90, 0x7c, 0x6e, 0xa3, 0x8a, 0x95,
  0x98, 0xfc, 0xe2, 0xb6, 0x11, 0x31, 0x0c, 0xc3, 0x40, 0xc5, 0x3d, 0xc3,
  0xe5, 0x4f, 0xd8, 0x43, 0x48, 0x7e, 0x08, 0x34, 0xc3, 0x42, 0xa0, 0x60,
  0x2a, 0x84, 0x44, 0x50, 0x04, 0x55, 0xa5, 0x18, 0x88, 0x61, 0x18, 0xe8,
  0x9a, 0x23, 0x08, 0x8a, 0x41, 0x11, 0x05, 0x41, 0x64, 0xa4, 0x0d, 0x04,
  0x0c, 0x23, 0x10, 0xc3, 0x30, 0xc2, 0x30, 0xe4, 0x80, 0x97, 0x04, 0xdd,
  0x55, 0x87, 0x23, 0x4d, 0x0b, 0x80, 0x39, 0xd4, 0xe4, 0xa7, 0x40, 0x04,
  0x30, 0xc4, 0x44, 0x44, 0x12, 0x6a, 0x3a, 0xcf, 0x1b, 0xbe, 0xef, 0xf3,
  0xbc, 0x0e, 0xfc, 0x40, 0x0a, 0x53, 0x82, 0x00, 0x13, 0x16, 0x72, 0xc0,
  0x87, 0x74, 0x60, 0x87, 0x36, 0x68, 0x87, 0x79, 0x68, 0x03, 0x7c, 0x10,
  0x87, 0x38, 0xd8, 0xf0, 0x0a, 0xe5, 0xd0, 0x06, 0xed, 0xa0, 0x07, 0xe5,
  0xd0, 0x06, 0xf0, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x7a, 0x30, 0x07, 0x72,
  0xd0, 0x06, 0xe9, 0x10, 0x07, 0x7a, 0x30, 0x07, 0x72, 0xd0, 0x06, 0xe9,
  0x80, 0x07, 0x7a, 0x30, 0x07, 0x72, 0xd0, 0x06, 0xe9, 0x10, 0x07, 0x76,
  0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x90, 0x0e, 0x73, 0x20, 0x07, 0x7a,
  0x30, 0x07, 0x72, 0xd0, 0x06, 0xe9, 0x60, 0x07, 0x74, 0xa0, 0x07, 0x76,
  0x40, 0x07, 0x6d, 0x60, 0x0e, 0x71, 0x60, 0x07, 0x7a, 0x30, 0x07, 0x72,
  0xd0, 0x06, 0xe6, 0x30, 0x07, 0x72, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d,
  0x60, 0x0e, 0x76, 0x40, 0x07, 0x7a, 0x60, 0x07, 0x74, 0xd0, 0x06, 0xee,
  0x80, 0x07, 0x7a, 0x10, 0x07, 0x76, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x7a,
  0x60, 0x07, 0x74, 0x30, 0xe4, 0x09, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x60, 0xc8, 0x63, 0x00, 0x01, 0x10, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x90, 0x07, 0x01, 0x02, 0x40, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x21, 0x8f, 0x02, 0x04, 0x40,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x43, 0x1e, 0x06, 0x08,
  0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x86, 0x3c, 0x0e,
  0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x79,
  0x20, 0x20, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18,
  0xf2, 0x54, 0x40, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x30, 0xe4, 0xb9, 0x80, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x60, 0xc8, 0xa3, 0x01, 0x01, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x40, 0x16, 0x08, 0x00, 0x00, 0x00, 0x13, 0x00, 0x00, 0x00,
  0x32, 0x1e, 0x98, 0x14, 0x19, 0x11, 0x4c, 0x90, 0x8c, 0x09, 0x26, 0x47,
  0xc6, 0x04, 0x43, 0x22, 0x4a, 0x60, 0x04, 0xa0, 0x20, 0x8a, 0xa1, 0x80,
  0x0d, 0xca, 0xa0, 0x3c, 0xca, 0xa1, 0x08, 0xa8, 0x28, 0x89, 0x11, 0x80,
  0x42, 0x28, 0x83, 0x22, 0x20, 0x71, 0x06, 0x80, 0xc6, 0xb1, 0x24, 0x08,
  0x82, 0x4f, 0x3e, 0x80, 0x4f, 0x3e, 0x80, 0x4f, 0x3e, 0x80, 0x4f, 0x3e,
  0xb8, 0x87, 0x7b, 0xb8, 0x07, 0x00, 0x44, 0x40, 0x08, 0x00, 0x02, 0x81,
  0x40, 0x00, 0x00, 0x00, 0x79, 0x18, 0x00, 0x00, 0x83, 0x00, 0x00, 0x00,
  0x1a, 0x03, 0x4c, 0x90, 0x46, 0x02, 0x13, 0xc4, 0x36, 0xf8, 0xfa, 0xc2,
  0x12, 0x7a, 0xc2, 0xfa, 0x82, 0x2a, 0x92, 0xfa, 0xa2, 0x42, 0x92, 0x2a,
  0x0a, 0x22, 0xfa, 0x9a, 0x1a, 0x92, 0x0a, 0xa2, 0x1a, 0x42, 0xfa, 0x9a,
  0x4a, 0xd2, 0x2a, 0xfa, 0x62, 0x4a, 0x6a, 0x4a, 0xa2, 0xfa, 0x4a, 0x72,
  0xfa, 0x12, 0xca, 0xa2, 0x2a, 0x9a, 0x62, 0x00, 0xb3, 0x41, 0x08, 0x04,
  0x76, 0x64, 0x78, 0x63, 0x78, 0x62, 0x6f, 0x78, 0x20, 0x32, 0x34, 0x31,
  0x30, 0x2e, 0x32, 0x34, 0x31, 0x30, 0x2e, 0x31, 0x31, 0x31, 0x31, 0x36,
  0x2e, 0x31, 0x30, 0x37, 0x34, 0x31, 0x1b, 0x02, 0x62, 0x82, 0x40, 0x28,
  0x13, 0x04, 0x62, 0xd9, 0x20, 0x18, 0xc7, 0x04, 0x81, 0x60, 0x36, 0x08,
  0x46, 0x42, 0xc1, 0x6e, 0x6e, 0x82, 0x40, 0x34, 0x1b, 0x86, 0x85, 0x39,
  0x26, 0x08, 0x62, 0x80, 0x11, 0x98, 0x20, 0x10, 0xce, 0x06, 0xe4, 0x70,
  0x9e, 0xe3, 0x30, 0x20, 0x60, 0x43, 0x10, 0x6d, 0x20, 0x00, 0x40, 0x02,
  0x26, 0x08, 0x63, 0x90, 0x6d, 0x08, 0xa8, 0x09, 0x82, 0x00, 0x70, 0xb3,
  0x9a, 0x12, 0x0a, 0x9b, 0x4b, 0x1b, 0xb3, 0x2a, 0x93, 0xa3, 0x2b, 0xc3,
  0x63, 0x4a, 0x3b, 0x43, 0xa3, 0x4b, 0x73, 0x3b, 0xa3, 0xc2, 0xb3, 0x1a,
  0x13, 0x72, 0xe3, 0x32, 0x65, 0xf5, 0x05, 0xf5, 0x36, 0x97, 0x46, 0x97,
  0xf6, 0xe6, 0x36, 0x41, 0x28, 0xa6, 0x09, 0x42, 0x41, 0x6d, 0x08, 0x8e,
  0x09, 0x42, 0x51, 0x4d, 0x10, 0x88, 0x67, 0x82, 0x40, 0x40, 0x1b, 0x84,
  0xce, 0xdb, 0xb0, 0x1c, 0x58, 0xa6, 0x6d, 0x9a, 0xc1, 0x1d, 0xda, 0x47,
  0xc3, 0xe9, 0x49, 0xaa, 0x29, 0x88, 0x69, 0x82, 0x50, 0x58, 0x13, 0x04,
  0x22, 0xda, 0x20, 0x74, 0x63, 0xb0, 0x61, 0x31, 0xc2, 0x20, 0xd3, 0x36,
  0xcd, 0x10, 0x03, 0x43, 0x23, 0x83, 0x09, 0x02, 0x21, 0x11, 0xa1, 0x2a,
  0xc2, 0x1a, 0x7a, 0x7a, 0x92, 0x22, 0x9a, 0x20, 0x14, 0xd7, 0x06, 0xa1,
  0xeb, 0x36, 0x2c, 0x66, 0x70, 0x06, 0x99, 0xb6, 0x69, 0x06, 0x1a, 0x98,
  0x81, 0x96, 0x06, 0x2c, 0x86, 0x9e, 0x98, 0x9e, 0xa4, 0x36, 0x2c, 0xdd,
  0x1a, 0x64, 0xda, 0xa6, 0x19, 0x5c, 0xa7, 0x7d, 0x1b, 0x08, 0x30, 0x28,
  0x03, 0x35, 0x60, 0x83, 0x0d, 0xcb, 0xb1, 0x06, 0x99, 0xb6, 0xa1, 0x81,
  0xc1, 0x1d, 0xda, 0xb7, 0x21, 0x30, 0x36, 0x2c, 0xc6, 0x1a, 0x64, 0xda,
  0x1b, 0xa0, 0x81, 0xc1, 0x19, 0xda, 0xb7, 0x61, 0x31, 0x83, 0x33, 0xc8,
  0xb4, 0x0d, 0x0d, 0x0c, 0x34, 0x30, 0x03, 0x2d, 0x0d, 0x36, 0x2c, 0x1d,
  0x96, 0x89, 0xc1, 0xc6, 0x19, 0x5c, 0xa7, 0x7d, 0x1b, 0x08, 0x37, 0x80,
  0x83, 0x38, 0x90, 0x83, 0x0d, 0x43, 0x1b, 0xcc, 0x01, 0xb0, 0xa1, 0xb0,
  0x2e, 0x3a, 0x98, 0x80, 0x56, 0x78, 0x62, 0x6f, 0x78, 0x2e, 0x63, 0x6f,
  0x6d, 0x70, 0x69, 0x6c, 0x65, 0x72, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x6f,
  0x6e, 0x73, 0x53, 0x02, 0xa1, 0x0a, 0x1b, 0x9b, 0x5d, 0x9b, 0x4b, 0x1a,
  0x59, 0x99, 0x1b, 0xdd, 0x94, 0x80, 0xa8, 0x42, 0x86, 0xe7, 0x62, 0x57,
  0x26, 0x37, 0x97, 0xf6, 0xe6, 0x36, 0x25, 0x38, 0x9a, 0x90, 0xe1, 0xb9,
  0xd8, 0x85, 0xb1, 0xd9, 0x95, 0xc9, 0x4d, 0x09, 0x92, 0x3a, 0x64, 0x78,
  0x2e, 0x73, 0x68, 0x61, 0x64, 0x65, 0x72, 0x4d, 0x6f, 0x64, 0x65, 0x6c,
  0x53, 0x02, 0xa6, 0x0c, 0x19, 0x9e, 0x8b, 0x5c, 0xd9, 0xdc, 0x5b, 0x9d,
  0xdc, 0x58, 0xd9, 0xdc, 0x94, 0x40, 0xaa, 0x43, 0x86, 0xe7, 0x62, 0x97,
  0x56, 0x76, 0x97, 0x44, 0x36, 0x45, 0x17, 0x46, 0x57, 0x36, 0x25, 0xa0,
  0xea, 0x90, 0xe1, 0xb9, 0x94, 0xb9, 0xd1, 0xc9, 0xe5, 0x41, 0xbd, 0xa5,
  0xb9, 0xd1, 0xcd, 0x4d, 0x09, 0xe8, 0x00, 0x00, 0x79, 0x18, 0x00, 0x00,
  0x50, 0x00, 0x00, 0x00, 0x33, 0x08, 0x80, 0x1c, 0xc4, 0xe1, 0x1c, 0x66,
  0x14, 0x01, 0x3d, 0x88, 0x43, 0x38, 0x84, 0xc3, 0x8c, 0x42, 0x80, 0x07,
  0x79, 0x78, 0x07, 0x73, 0x98, 0x71, 0x0c, 0xe6, 0x00, 0x0f, 0xed, 0x10,
  0x0e, 0xf4, 0x80, 0x0e, 0x33, 0x0c, 0x42, 0x1e, 0xc2, 0xc1, 0x1d, 0xce,
  0xa1, 0x1c, 0x66, 0x30, 0x05, 0x3d, 0x88, 0x43, 0x38, 0x84, 0x83, 0x1b,
  0xcc, 0x03, 0x3d, 0xc8, 0x43, 0x3d, 0x8c, 0x03, 0x3d, 0xcc, 0x78, 0x8c,
  0x74, 0x70, 0x07, 0x7b, 0x08, 0x07, 0x79, 0x48, 0x87, 0x70, 0x70, 0x07,
  0x7a, 0x70, 0x03, 0x76, 0x78, 0x87, 0x70, 0x20, 0x87, 0x19, 0xcc, 0x11,
  0x0e, 0xec, 0x90, 0x0e, 0xe1, 0x30, 0x0f, 0x6e, 0x30, 0x0f, 0xe3, 0xf0,
  0x0e, 0xf0, 0x50, 0x0e, 0x33, 0x10, 0xc4, 0x1d, 0xde, 0x21, 0x1c, 0xd8,
  0x21, 0x1d, 0xc2, 0x61, 0x1e, 0x66, 0x30, 0x89, 0x3b, 0xbc, 0x83, 0x3b,
  0xd0, 0x43, 0x39, 0xb4, 0x03, 0x3c, 0xbc, 0x83, 0x3c, 0x84, 0x03, 0x3b,
  0xcc, 0xf0, 0x14, 0x76, 0x60, 0x07, 0x7b, 0x68, 0x07, 0x37, 0x68, 0x87,
  0x72, 0x68, 0x07, 0x37, 0x80, 0x87, 0x70, 0x90, 0x87, 0x70, 0x60, 0x07,
  0x76, 0x28, 0x07, 0x76, 0xf8, 0x05, 0x76, 0x78, 0x87, 0x77, 0x80, 0x87,
  0x5f, 0x08, 0x87, 0x71, 0x18, 0x87, 0x72, 0x98, 0x87, 0x79, 0x98, 0x81,
  0x2c, 0xee, 0xf0, 0x0e, 0xee, 0xe0, 0x0e, 0xf5, 0xc0, 0x0e, 0xec, 0x30,
  0x03, 0x62, 0xc8, 0xa1, 0x1c, 0xe4, 0xa1, 0x1c, 0xcc, 0xa1, 0x1c, 0xe4,
  0xa1, 0x1c, 0xdc, 0x61, 0x1c, 0xca, 0x21, 0x1c, 0xc4, 0x81, 0x1d, 0xca,
  0x61, 0x06, 0xd6, 0x90, 0x43, 0x39, 0xc8, 0x43, 0x39, 0x98, 0x43, 0x39,
  0xc8, 0x43, 0x39, 0xb8, 0xc3, 0x38, 0x94, 0x43, 0x38, 0x88, 0x03, 0x3b,
  0x94, 0xc3, 0x2f, 0xbc, 0x83, 0x3c, 0xfc, 0x82, 0x3b, 0xd4, 0x03, 0x3b,
  0xb0, 0xc3, 0x0c, 0xc4, 0x21, 0x07, 0x7c, 0x70, 0x03, 0x7a, 0x28, 0x87,
  0x76, 0x80, 0x87, 0x19, 0xca, 0xc3, 0x0e, 0xec, 0x60, 0x0f, 0xed, 0xe0,
  0x06, 0xec, 0xf0, 0x0e, 0xef, 0x00, 0x0f, 0x33, 0x22, 0x88, 0x1c, 0xf0,
  0xc1, 0x0d, 0xc8, 0x41, 0x1c, 0xce, 0xc1, 0x0d, 0xec, 0x21, 0x1c, 0xe4,
  0x81, 0x1d, 0xc2, 0x21, 0x1f, 0xde, 0xa1, 0x1e, 0xe8, 0x01, 0x00, 0x00,
  0x71, 0x20, 0x00, 0x00, 0x2a, 0x00, 0x00, 0x00, 0x06, 0xb0, 0xbd, 0xec,
  0x06, 0x48, 0x88, 0xf0, 0x12, 0xd1, 0x44, 0x5c, 0x25, 0x62, 0x1c, 0x13,
  0xd2, 0x18, 0xed, 0xf5, 0x0a, 0x5b, 0x63, 0x05, 0xd0, 0x70, 0xf9, 0xce,
  0xe3, 0x07, 0x48, 0x03, 0x44, 0x98, 0x5f, 0xdc, 0xb6, 0x1d, 0x6c, 0xc3,
  0xe5, 0x3b, 0x8f, 0x2f, 0x04, 0x54, 0x51, 0x10, 0x51, 0xe9, 0x00, 0x43,
  0x49, 0x18, 0x80, 0x80, 0xf9, 0xc5, 0x6d, 0x5b, 0x82, 0x34, 0x5c, 0xbe,
  0xf3, 0xf8, 0x42, 0x44, 0x00, 0x13, 0x11, 0x02, 0xcd, 0xb0, 0x10, 0x36,
  0xe0, 0x0c, 0x97, 0xef, 0x3c, 0xfe, 0xe0, 0x4c, 0xb7, 0x5f, 0xdc, 0xb6,
  0x19, 0x38, 0xc3, 0xe5, 0x3b, 0x8f, 0x3f, 0x38, 0x13, 0xee, 0x17, 0xb7,
  0x6d, 0x01, 0xd3, 0x70, 0xf9, 0xce, 0xe3, 0x2f, 0x0e, 0x30, 0x88, 0xcd,
  0x43, 0x4d, 0x7e, 0x71, 0xdb, 0x26, 0x50, 0x0d, 0x97, 0xef, 0x3c, 0xbe,
  0x34, 0x39, 0x11, 0x81, 0x52, 0xd3, 0x43, 0x4d, 0x7e, 0x71, 0xdb, 0x86,
  0x20, 0x0d, 0x97, 0xef, 0x3c, 0xfe, 0x44, 0x44, 0x13, 0x02, 0x44, 0x98,
  0x5f, 0xdc, 0xb6, 0x11, 0x3c, 0xc3, 0xe5, 0x3b, 0x8f, 0x4f, 0x35, 0x40,
  0x84, 0xf9, 0xc5, 0x6d, 0x03, 0x00, 0x00, 0x00, 0x61, 0x20, 0x00, 0x00,
  0x64, 0x02, 0x00, 0x00, 0x13, 0x04, 0x41, 0x2c, 0x10, 0x00, 0x00, 0x00,
  0x13, 0x00, 0x00, 0x00, 0x94, 0x8d, 0x00, 0x50, 0x51, 0x02, 0x44, 0x14,
  0x5c, 0x71, 0x14, 0x4c, 0x71, 0x95, 0x5d, 0x29, 0x14, 0xc2, 0x0c, 0x40,
  0xc9, 0x94, 0x5b, 0xa9, 0x94, 0x4b, 0x19, 0x95, 0x5c, 0x81, 0x94, 0x48,
  0x61, 0x94, 0x49, 0xa1, 0x94, 0x44, 0x51, 0x94, 0x45, 0xb1, 0xd0, 0x30,
  0x46, 0x00, 0x82, 0x20, 0x88, 0x7f, 0x63, 0x04, 0x20, 0x08, 0x82, 0xf8,
  0x2f, 0x8c, 0x11, 0x80, 0x20, 0x08, 0x82, 0x60, 0x30, 0x02, 0x30, 0x46,
  0x00, 0x82, 0x20, 0x08, 0x82, 0x02, 0x00, 0x00, 0x23, 0x06, 0x09, 0x00,
  0x82, 0x60, 0xa0, 0xbd, 0xc1, 0x13, 0x06, 0x6d, 0xd0, 0x06, 0xde, 0x88,
  0x41, 0x02, 0x80, 0x20, 0x18, 0x18, 0x78, 0x70, 0xa9, 0x81, 0x1b, 0x94,
  0x81, 0x35, 0x62, 0x90, 0x00, 0x20, 0x08, 0x06, 0x46, 0x1e, 0x60, 0x6b,
  0xf0, 0x06, 0xdf, 0x35, 0x62, 0x90, 0x00, 0x20, 0x08, 0x06, 0x86, 0x1e,
  0x64, 0x6c, 0x00, 0x07, 0x64, 0x80, 0x8d, 0x18, 0x24, 0x00, 0x08, 0x82,
  0x81, 0xb1, 0x07, 0x5a, 0x1b, 0xc4, 0x81, 0x19, 0x64, 0x23, 0x06, 0x09,
  0x00, 0x82, 0x60, 0x60, 0xf0, 0xc1, 0xb6, 0x06, 0x72, 0x90, 0x06, 0xda,
  0x88, 0x41, 0x02, 0x80, 0x20, 0x18, 0x18, 0x7d, 0xc0, 0xb1, 0xc1, 0x1c,
  0x8c, 0xc1, 0x36, 0x62, 0x90, 0x00, 0x20, 0x08, 0x06, 0x86, 0x1f, 0x74,
  0x75, 0x40, 0x07, 0x6b, 0xc0, 0x8d, 0x18, 0x24, 0x00, 0x08, 0x82, 0x81,
  0xf1, 0x07, 0x9e, 0x1d, 0xd4, 0x41, 0x19, 0x74, 0x23, 0x06, 0x09, 0x00,
  0x82, 0x60, 0x60, 0x80, 0xc2, 0x77, 0x07, 0x76, 0xa0, 0x06, 0xde, 0x88,
  0x41, 0x02, 0x80, 0x20, 0x18, 0x18, 0xa1, 0x00, 0x06, 0x77, 0x70, 0x07,
  0x6e, 0xf0, 0x8d, 0x18, 0x24, 0x00, 0x08, 0x82, 0x81, 0x21, 0x0a, 0x61,
  0x80, 0x07, 0x78, 0x80, 0x06, 0x60, 0x30, 0x62, 0x90, 0x00, 0x20, 0x08,
  0x06, 0xc6, 0x28, 0x88, 0x41, 0x1e, 0xe4, 0x41, 0x1b, 0x84, 0xc1, 0x88,
  0x41, 0x02, 0x80, 0x20, 0x18, 0x18, 0xa4, 0x30, 0x06, 0x7a, 0xa0, 0x07,
  0x6f, 0x20, 0x06, 0x76, 0x44, 0xf2, 0xb1, 0x43, 0x92, 0x8f, 0x1d, 0x93,
  0x7c, 0x6c, 0xa8, 0xe0, 0x63, 0x83, 0x05, 0x1f, 0x1b, 0x2e, 0xf8, 0x8c,
  0x18, 0x1c, 0x00, 0x08, 0x82, 0x41, 0x55, 0x0a, 0x6c, 0x40, 0xf1, 0xc1,
  0x68, 0x42, 0x00, 0x8c, 0x26, 0x08, 0xc1, 0x68, 0xc2, 0x20, 0x8c, 0x26,
  0x10, 0xc3, 0x88, 0xc1, 0x01, 0x80, 0x20, 0x18, 0x54, 0xaa, 0x10, 0x07,
  0xd9, 0x19, 0x8c, 0x26, 0x04, 0xc0, 0x68, 0x82, 0x10, 0x8c, 0x26, 0x0c,
  0xc2, 0x68, 0x02, 0x31, 0x8c, 0x18, 0x1c, 0x00, 0x08, 0x82, 0x41, 0xf5,
  0x0a, 0x76, 0xe0, 0xad, 0xc1, 0x68, 0x42, 0x00, 0x8c, 0x26, 0x08, 0xc1,
  0x68, 0xc2, 0x20, 0x8c, 0x26, 0x10, 0x83, 0x39, 0x99, 0x7c, 0x46, 0x0c,
  0x10, 0x00, 0x04, 0xc1, 0xe0, 0xa2, 0x85, 0x3e, 0xc8, 0x9c, 0x60, 0xc4,
  0x00, 0x01, 0x40, 0x10, 0x0c, 0xae, 0x5a, 0xf0, 0x83, 0xcc, 0x09, 0x46,
  0x0c, 0x10, 0x00, 0x04, 0xc1, 0xe0, 0xb2, 0x85, 0x3f, 0xc8, 0x9c, 0xc0,
  0x9a, 0x4e, 0x3e, 0x23, 0x06, 0x08, 0x00, 0x82, 0x60, 0x70, 0xe1, 0x42,
  0x28, 0x74, 0x4d, 0x30, 0x62, 0x80, 0x00, 0x20, 0x08, 0x06, 0x57, 0x2e,
  0x88, 0x42, 0xd7, 0x04, 0x23, 0x06, 0x08, 0x00, 0x82, 0x60, 0x70, 0xe9,
  0xc2, 0x28, 0x74, 0x4d, 0x60, 0x4c, 0x18, 0xc8, 0x67, 0xc4, 0x00, 0x01,
  0x40, 0x10, 0x0c, 0x2e, 0x5e, 0x28, 0x85, 0x30, 0x60, 0x82, 0x11, 0x03,
  0x04, 0x00, 0x41, 0x30, 0xb8, 0x7a, 0xc1, 0x14, 0xc2, 0x80, 0x09, 0x46,
  0x0c, 0x10, 0x00, 0x04, 0xc1, 0xe0, 0xf2, 0x85, 0x53, 0x08, 0x03, 0x26,
  0x18, 0x31, 0x38, 0x00, 0x10, 0x04, 0x83, 0x0a, 0x1c, 0x4e, 0xe1, 0x0d,
  0xf6, 0x60, 0x34, 0x21, 0x00, 0x46, 0x13, 0x84, 0x60, 0x34, 0x61, 0x10,
  0x6c, 0x68, 0xe2, 0x63, 0x83, 0x12, 0x1f, 0x1b, 0x8e, 0xf8, 0x8c, 0x18,
  0x2c, 0x00, 0x08, 0x82, 0x81, 0xb2, 0x0e, 0xa9, 0x30, 0x08, 0xc1, 0x20,
  0x04, 0x23, 0x06, 0x06, 0x00, 0x82, 0x60, 0xc0, 0xac, 0xc3, 0x2a, 0x04,
  0x56, 0x04, 0xf2, 0xb1, 0x42, 0x90, 0x8f, 0x15, 0x83, 0x7c, 0x46, 0x0c,
  0x0e, 0x00, 0x04, 0xc1, 0xa0, 0x62, 0x87, 0x59, 0xd8, 0x03, 0x53, 0x18,
  0x4d, 0x08, 0x80, 0xd1, 0x04, 0x21, 0x18, 0x4d, 0x18, 0x84, 0x11, 0x83,
  0x03, 0x00, 0x41, 0x30, 0xa8, 0xe0, 0xe1, 0x16, 0xfe, 0x20, 0x15, 0x46,
  0x13, 0x02, 0x60, 0x34, 0x41, 0x08, 0x46, 0x13, 0x06, 0x61, 0xc4, 0xe0,
  0x00, 0x40, 0x10, 0x0c, 0x2a, 0x7a, 0xd8, 0x85, 0x51, 0xa8, 0x85, 0xd1,
  0x84, 0x00, 0x18, 0x4d, 0x10, 0x82, 0xd1, 0x84, 0x41, 0xb0, 0xc5, 0x0e,
  0xe4, 0x33, 0x62, 0x80, 0x00, 0x20, 0x08, 0x06, 0x17, 0x3e, 0x84, 0x83,
  0x1d, 0x2c, 0xc1, 0x88, 0x01, 0x02, 0x80, 0x20, 0x18, 0x5c, 0xf9, 0x20,
  0x0e, 0x76, 0xb0, 0x04, 0xa6, 0xe4, 0x81, 0x7c, 0x46, 0x0c, 0x10, 0x00,
  0x04, 0xc1, 0xe0, 0xda, 0x07, 0x72, 0xc8, 0x03, 0x25, 0x18, 0x31, 0x40,
  0x00, 0x10, 0x04, 0x83, 0x8b, 0x1f, 0xca, 0x21, 0x0f, 0x94, 0xc0, 0x12,
  0x3e, 0x90, 0xcf, 0x88, 0x01, 0x02, 0x80, 0x20, 0x18, 0x5c, 0xfe, 0x70,
  0x0e, 0x7c, 0x90, 0x04, 0x23, 0x06, 0x08, 0x00, 0x82, 0x60, 0x70, 0xfd,
  0x03, 0x3a, 0xf0, 0x41, 0x12, 0x8c, 0x18, 0x2c, 0x00, 0x08, 0x82, 0x81,
  0x52, 0x12, 0xe3, 0x70, 0x10, 0xc1, 0x41, 0x04, 0x23, 0x06, 0x06, 0x00,
  0x82, 0x60, 0xc0, 0x94, 0x44, 0x39, 0x04, 0x16, 0x24, 0xf2, 0x31, 0xe1,
  0x90, 0x8f, 0x0d, 0x85, 0x7c, 0x46, 0x0c, 0x0e, 0x00, 0x04, 0xc1, 0xa0,
  0x32, 0x89, 0x76, 0xa8, 0x05, 0x7f, 0x18, 0x4d, 0x08, 0x80, 0xd1, 0x04,
  0x21, 0x18, 0x4d, 0x18, 0x84, 0x11, 0x83, 0x03, 0x00, 0x41, 0x30, 0xa8,
  0x54, 0x22, 0x1e, 0x72, 0x81, 0x24, 0x46, 0x13, 0x02, 0x60, 0x34, 0x41,
  0x08, 0x46, 0x13, 0x06, 0x61, 0xc4, 0xe0, 0x00, 0x40, 0x10, 0x0c, 0x2a,
  0x97, 0xa8, 0x87, 0x5e, 0x30, 0x87, 0xd1, 0x84, 0x00, 0x18, 0x4d, 0x10,
  0x82, 0xd1, 0x84, 0x41, 0xb0, 0x34, 0x58, 0xe2, 0x63, 0x69, 0xb0, 0xc4,
  0xc7, 0xd2, 0x60, 0x89, 0xcf, 0x88, 0xc1, 0x02, 0x80, 0x20, 0x18, 0x28,
  0x39, 0x71, 0x0f, 0x83, 0x10, 0x0c, 0x42, 0x30, 0x62, 0x60, 0x00, 0x20,
  0x08, 0x06, 0x4c, 0x4e, 0xe4, 0x43, 0x60, 0x01, 0x21, 0x1f, 0x13, 0x08,
  0xf9, 0x8c, 0x18, 0x1c, 0x00, 0x08, 0x82, 0x41, 0x95, 0x13, 0x20, 0x81,
  0x0e, 0xfe, 0x30, 0x9a, 0x10, 0x00, 0xa3, 0x09, 0x42, 0x30, 0x9a, 0x30,
  0x08, 0x23, 0x06, 0x07, 0x00, 0x82, 0x60, 0x50, 0xf5, 0x04, 0x49, 0xb0,
  0xc3, 0x4c, 0x8c, 0x26, 0x04, 0xc0, 0x68, 0x82, 0x10, 0x8c, 0x26, 0x0c,
  0xc2, 0x88, 0xc1, 0x01, 0x80, 0x20, 0x18, 0x54, 0x61, 0x81, 0x12, 0xf0,
  0x80, 0x0f, 0xa3, 0x09, 0x01, 0x30, 0x9a, 0x20, 0x04, 0xa3, 0x09, 0x83,
  0x60, 0x7c, 0xb0, 0xc4, 0xc7, 0xf8, 0x60, 0x89, 0x8f, 0xf1, 0xc1, 0x12,
  0x9f, 0x11, 0x83, 0x05, 0x00, 0x41, 0x30, 0x50, 0xd8, 0x42, 0x25, 0x06,
  0x21, 0x18, 0x84, 0x60, 0xc4, 0xc0, 0x00, 0x40, 0x10, 0x0c, 0x18, 0xb6,
  0x60, 0x89, 0xc0, 0x02, 0x42, 0x3e, 0x26, 0x10, 0xf2, 0x19, 0x31, 0x38,
  0x00, 0x10, 0x04, 0x83, 0x8a, 0x2d, 0x66, 0x62, 0x1f, 0x64, 0x62, 0x34,
  0x21, 0x00, 0x46, 0x13, 0x84, 0x60, 0x34, 0x61, 0x10, 0x46, 0x0c, 0x0e,
  0x00, 0x04, 0xc1, 0xa0, 0x82, 0x8b, 0x9b, 0xf8, 0x87, 0xb5, 0x18, 0x4d,
  0x08, 0x80, 0xd1, 0x04, 0x21, 0x18, 0x4d, 0x18, 0x84, 0x11, 0x83, 0x03,
  0x00, 0x41, 0x30, 0xa8, 0xe8, 0x62, 0x27, 0x46, 0x42, 0x25, 0x46, 0x13,
  0x02, 0x60, 0x34, 0x41, 0x08, 0x46, 0x13, 0x06, 0xc1, 0x5e, 0x61, 0x89,
  0x8f, 0xbd, 0xc2, 0x12, 0x1f, 0x7b, 0x85, 0x25, 0x3e, 0x23, 0x06, 0x0b,
  0x00, 0x82, 0x60, 0xa0, 0xfc, 0x45, 0x4f, 0x0c, 0x42, 0x30, 0x08, 0xc1,
  0x88, 0x81, 0x01, 0x80, 0x20, 0x18, 0x30, 0x7f, 0xf1, 0x13, 0x81, 0x05,
  0x84, 0x7c, 0x4c, 0x20, 0xe4, 0x63, 0x2f, 0x71, 0x07, 0xf1, 0x31, 0x98,
  0xb8, 0x83, 0xf8, 0x58, 0x4c, 0x98, 0x41, 0x7c, 0x4c, 0x26, 0xcc, 0x20,
  0x3e, 0x36, 0x13, 0x55, 0x7c, 0x8c, 0x26, 0xaa, 0xf8, 0x98, 0x28, 0xf8,
  0x81, 0x7c, 0xcc, 0x26, 0x82, 0xf8, 0x8c, 0x18, 0x20, 0x00, 0x08, 0x82,
  0xc1, 0x65, 0x1a, 0x6f, 0x81, 0x8c, 0x42, 0x30, 0x62, 0x80, 0x00, 0x20,
  0x08, 0x06, 0xd7, 0x69, 0xc0, 0x05, 0x32, 0x0a, 0x81, 0x99, 0xc2, 0x1b,
  0xc8, 0xc7, 0x74, 0x22, 0x88, 0xcf, 0x88, 0x01, 0x02, 0x80, 0x20, 0x18,
  0x5c, 0xaa, 0x31, 0x17, 0xca, 0x29, 0x04, 0x23, 0x06, 0x08, 0x00, 0x82,
  0x60, 0x70, 0xad, 0x06, 0x5d, 0x28, 0xa7, 0x10, 0x98, 0x2a, 0x80, 0x81,
  0x7c, 0xcc, 0x27, 0x82, 0xf8, 0x8c, 0x18, 0x20, 0x00, 0x08, 0x82, 0xc1,
  0xe5, 0x1a, 0x77, 0xc1, 0xac, 0x42, 0x30, 0x62, 0x80, 0x00, 0x20, 0x08,
  0x06, 0xd7, 0x6b, 0xe0, 0x05, 0xb3, 0x0a, 0x81, 0xfd, 0x81, 0x2b, 0xc8,
  0xc7, 0x02, 0x3e, 0x90, 0xcf, 0x88, 0x01, 0x02, 0x80, 0x20, 0x18, 0x5c,
  0xb2, 0xb1, 0x17, 0x7c, 0xf0, 0x0a, 0xc1, 0x88, 0x01, 0x02, 0x80, 0x20,
  0x18, 0x5c, 0xb3, 0xc1, 0x17, 0x7c, 0xf0, 0x0a, 0x81, 0xc1, 0x81, 0x2c,
  0xc8, 0xc7, 0x82, 0x36, 0x90, 0xcf, 0x88, 0x01, 0x02, 0x80, 0x20, 0x18,
  0x5c, 0xb6, 0xf1, 0x17, 0x6d, 0x30, 0x0b, 0xc1, 0x88, 0x01, 0x02, 0x80,
  0x20, 0x18, 0x5c, 0xb7, 0x01, 0x1a, 0x6d, 0x30, 0x0b, 0x81, 0x85, 0x81,
  0x2d, 0xc8, 0xc7, 0x02, 0x4f, 0x3e, 0x23, 0x06, 0x08, 0x00, 0x82, 0x60,
  0x70, 0xe9, 0xc6, 0x68, 0x78, 0xb7, 0x10, 0x8c, 0x18, 0x20, 0x00, 0x08,
  0x82, 0xc1, 0xb5, 0x1b, 0xa4, 0xe1, 0xdd, 0x42, 0x30, 0x1c, 0x51, 0xb9,
  0x05, 0xf1, 0x0d, 0x47, 0x48, 0x6f, 0x41, 0x7c, 0xc3, 0x11, 0x0f, 0x5c,
  0x10, 0xdf, 0x74, 0x43, 0x5c, 0xd0, 0xc5, 0x30, 0xdd, 0x20, 0x17, 0x75,
  0x31, 0x4c, 0x37, 0xcc, 0x85, 0x5d, 0x0c, 0x36, 0x6c, 0xf2, 0xb1, 0x01,
  0x93, 0x8f, 0x0d, 0x95, 0x7c, 0x46, 0x0c, 0x0e, 0x00, 0x04, 0xc1, 0xa0,
  0x32, 0x8f, 0xd6, 0xa8, 0x8b, 0xdd, 0x18, 0x4d, 0x08, 0x86, 0x11, 0x83,
  0x03, 0x00, 0x41, 0x30, 0x70, 0xd4, 0xe3, 0x34, 0xa8, 0xbc, 0x18, 0x31,
  0x38, 0x00, 0x10, 0x04, 0x03, 0x67, 0x3d, 0x50, 0x23, 0xd2, 0x8b, 0x11,
  0x83, 0x03, 0x00, 0x41, 0x30, 0x70, 0xd8, 0x23, 0x35, 0x9c, 0xbd, 0xb0,
  0x61, 0x91, 0x8f, 0x0d, 0x8b, 0x7c, 0x6c, 0x58, 0xe4, 0x33, 0x62, 0x60,
  0x00, 0x20, 0x08, 0x06, 0x4c, 0x7c, 0xb8, 0xc6, 0x30, 0x62, 0x60, 0x00,
  0x20, 0x08, 0x06, 0x8c, 0x7c, 0xbc, 0xc6, 0x30, 0x62, 0x60, 0x00, 0x20,
  0x08, 0x06, 0xcc, 0x7c, 0xc0, 0xc6, 0x60, 0x83, 0x22, 0x1f, 0x1b, 0x16,
  0xf9, 0xd8, 0xc0, 0xc8, 0x67, 0xc4, 0xc0, 0x00, 0x40, 0x10, 0x0c, 0x98,
  0xfb, 0xa8, 0x8d, 0x61, 0xc4, 0xc0, 0x00, 0x40, 0x10, 0x0c, 0x18, 0xfc,
  0xb0, 0x8d, 0x61, 0xc4, 0xc0, 0x00, 0x40, 0x10, 0x0c, 0x98, 0xfc, 0xb8,
  0x8d, 0xc1, 0x86, 0x37, 0x90, 0x8f, 0x0d, 0x6c, 0x20, 0x1f, 0x1b, 0xd2,
  0x40, 0x3e, 0x76, 0xbd, 0x83, 0x7c, 0x46, 0x0c, 0x10, 0x00, 0x04, 0xc1,
  0xe0, 0xd2, 0x8f, 0xf1, 0xb8, 0x7a, 0x21, 0x18, 0x31, 0x40, 0x00, 0x10,
  0x04, 0x83, 0x6b, 0x3f, 0xc8, 0xe3, 0x5a, 0x85, 0xc0, 0xb4, 0x78, 0x90,
  0xcf, 0x88, 0x01, 0x02, 0x80, 0x20, 0x18, 0x5c, 0xfd, 0x61, 0x1e, 0xda,
  0x2f, 0x04, 0x23, 0x06, 0x08, 0x00, 0x82, 0x60, 0x70, 0xf9, 0xc7, 0x79,
  0x68, 0xad, 0x10, 0x58, 0x37, 0x0f, 0xf2, 0x19, 0x31, 0x40, 0x00, 0x10,
  0x04, 0x83, 0x0b, 0x44, 0xd2, 0xa3, 0x0b, 0x87, 0x60, 0xc4, 0x00, 0x01,
  0x40, 0x10, 0x0c, 0xae, 0x10, 0x51, 0x8f, 0xee, 0x15, 0x82, 0x11, 0x83,
  0x03, 0x00, 0x41, 0x30, 0xa8, 0x46, 0x44, 0x3d, 0x64, 0xe3, 0x3f, 0x46,
  0x13, 0x02, 0x60, 0x34, 0x41, 0x08, 0x46, 0x13, 0x06, 0xc1, 0x86, 0x45,
  0x3e, 0x36, 0x24, 0xf2, 0xb1, 0xe1, 0x90, 0xcf, 0x88, 0xc1, 0x01, 0x80,
  0x20, 0x18, 0x54, 0x2a, 0x12, 0x1f, 0xb9, 0x71, 0x22, 0xa3, 0x09, 0x01,
  0x30, 0x9a, 0x20, 0x04, 0xa3, 0x09, 0x83, 0x60, 0xc7, 0x00, 0x1f, 0x3b,
  0x06, 0xf8, 0xd8, 0x31, 0xc0, 0xc7, 0x34, 0x91, 0x90, 0xcf, 0x88, 0x01,
  0x02, 0x80, 0x20, 0x18, 0x5c, 0x31, 0xa2, 0x1f, 0x1a, 0x3c, 0x04, 0x23,
  0x06, 0x08, 0x00, 0x82, 0x60, 0x70, 0xc9, 0xc8, 0x7e, 0x68, 0xbe, 0x10,
  0x58, 0x47, 0x12, 0xf2, 0x19, 0x31, 0x40, 0x00, 0x10, 0x04, 0x83, 0x8b,
  0x46, 0xfa, 0xa3, 0x93, 0x87, 0x60, 0xc4, 0x00, 0x01, 0x40, 0x10, 0x0c,
  0xae, 0x1a, 0xf1, 0x8f, 0x0e, 0x1c, 0x02, 0x03, 0x03, 0x93, 0x90, 0xcf,
  0x88, 0x01, 0x02, 0x80, 0x20, 0x18, 0x5c, 0x37, 0x02, 0x22, 0x60, 0x40,
  0x0f, 0xc1, 0x88, 0x01, 0x02, 0x80, 0x20, 0x18, 0x5c, 0x38, 0x12, 0x22,
  0x60, 0x20, 0x0e, 0xc1, 0x68, 0x02, 0x1d, 0x00, 0xa3, 0x09, 0x75, 0x10,
  0x8c, 0x26, 0xd8, 0x81, 0x60, 0x83, 0x22, 0x1f, 0x1b, 0x10, 0xf9, 0xd8,
  0x60, 0xc8, 0x67, 0xc4, 0xe0, 0x00, 0x40, 0x10, 0x0c, 0x2a, 0x30, 0x39,
  0x91, 0xf7, 0xa8, 0x8f, 0xd1, 0x84, 0x00, 0x18, 0x4d, 0x10, 0x82, 0xd1,
  0x84, 0x41, 0x18, 0x4d, 0x20, 0x86, 0x11, 0x83, 0x03, 0x00, 0x41, 0x30,
  0xa8, 0xca, 0x84, 0x45, 0xe8, 0xa3, 0x44, 0x46, 0x13, 0x02, 0x60, 0x34,
  0x41, 0x08, 0x46, 0x13, 0x06, 0x61, 0x34, 0x81, 0x18, 0x46, 0x0c, 0x0e,
  0x00, 0x04, 0xc1, 0xa0, 0x52, 0x93, 0x18, 0xc9, 0x8f, 0x19, 0x19, 0x4d,
  0x08, 0x80, 0xd1, 0x04, 0x21, 0x18, 0x4d, 0x18, 0x84, 0xd1, 0x04, 0x62,
  0x18, 0x31, 0x38, 0x00, 0x10, 0x04, 0x83, 0xea, 0x4d, 0x6c, 0xc4, 0x3f,
  0x64, 0x64, 0x34, 0x21, 0x00, 0x46, 0x13, 0x84, 0x60, 0x34, 0x61, 0x10,
  0x46, 0x13, 0x88, 0xc1, 0xa6, 0xfc, 0x90, 0xcf, 0x88, 0x01, 0x02, 0x80,
  0x20, 0x18, 0x5c, 0x74, 0xd2, 0x23, 0xf9, 0x31, 0x05, 0x23, 0x06, 0x08,
  0x00, 0x82, 0x60, 0x70, 0xd5, 0x89, 0x8f, 0xe4, 0xc7, 0x14, 0x8c, 0x18,
  0x20, 0x00, 0x08, 0x82, 0xc1, 0x65, 0x27, 0x3f, 0x92, 0x1f, 0x53, 0x60,
  0x52, 0x7f, 0xc8, 0x67, 0xc4, 0x00, 0x01, 0x40, 0x10, 0x0c, 0x2e, 0x3c,
  0x09, 0x93, 0xfe, 0x90, 0x82, 0x11, 0x03, 0x04, 0x00, 0x41, 0x30, 0xb8,
  0xf2, 0x44, 0x4c, 0xfa, 0x43, 0x0a, 0x46, 0x0c, 0x10, 0x00, 0x04, 0xc1,
  0xe0, 0xd2, 0x93, 0x31, 0xe9, 0x0f, 0x29, 0xb0, 0x28, 0x44, 0xe4, 0x33,
  0x62, 0x80, 0x00, 0x20, 0x08, 0x06, 0x17, 0x9f, 0x94, 0x49, 0x88, 0x44,
  0xc1, 0x88, 0x01, 0x02, 0x80, 0x20, 0x18, 0x5c, 0x7d, 0x62, 0x26, 0x21,
  0x12, 0x05, 0x23, 0x06, 0x08, 0x00, 0x82, 0x60, 0x70, 0xf9, 0xc9, 0x99,
  0x84, 0x48, 0x14, 0x18, 0x54, 0x22, 0xf2, 0x19, 0x31, 0x40, 0x00, 0x10,
  0x04, 0x83, 0x0b, 0x54, 0xd2, 0xa4, 0x44, 0xa0, 0x60, 0xc4, 0x00, 0x01,
  0x40, 0x10, 0x0c, 0xae, 0x50, 0x51, 0x93, 0x12, 0x81, 0x82, 0x11, 0x03,
  0x04, 0x00, 0x41, 0x30, 0xb8, 0x44, 0x65, 0x4d, 0x4a, 0x04, 0x0a, 0x46,
  0x13, 0x42, 0x61, 0x18, 0x31, 0x38, 0x00, 0x10, 0x04, 0x83, 0xaa, 0x54,
  0xd8, 0x84, 0x46, 0xde, 0x64, 0x34, 0x21, 0x00, 0x46, 0x13, 0x84, 0x60,
  0x34, 0x61, 0x10, 0x46, 0x13, 0x88, 0x61, 0xc4, 0xa0, 0x01, 0x40, 0x10,
  0x0c, 0xa0, 0x55, 0xa9, 0x93, 0x17, 0x71, 0x91, 0x16, 0x61, 0x11, 0x62,
  0x10, 0x82, 0x11, 0x03, 0x03, 0x00, 0x41, 0x30, 0x60, 0x5c, 0x25, 0x54,
  0x02, 0xf3, 0x03, 0x1d, 0x91, 0x8f, 0xf9, 0x81, 0x8e, 0xc8, 0xc7, 0xfc,
  0x40, 0x47, 0xe4, 0x63, 0x8b, 0x8e, 0xc8, 0x67, 0xc4, 0x20, 0x01, 0x40,
  0x10, 0x0c, 0x90, 0x5a, 0xb1, 0x13, 0x56, 0x61, 0x95, 0x51, 0x21, 0x46,
  0x0c, 0x12, 0x00, 0x04, 0xc1, 0x00, 0xa9, 0x15, 0x3b, 0x61, 0x15, 0x56,
  0xe1, 0x93, 0x61, 0xc4, 0x20, 0x01, 0x40, 0x10, 0x0c, 0x90, 0x5a, 0xb1,
  0x13, 0x56, 0x61, 0x15, 0x50, 0x11, 0x46, 0x0c, 0x12, 0x00, 0x04, 0xc1,
  0x00, 0xa9, 0x15, 0x3b, 0x61, 0x15, 0x56, 0x09, 0x95, 0x60, 0xc4, 0x20,
  0x01, 0x40, 0x10, 0x0c, 0x90, 0x5a, 0xb1, 0x93, 0x56, 0x61, 0x95, 0x51,
  0x99, 0x83, 0x11, 0x83, 0x04, 0x00, 0x41, 0x30, 0x40, 0x6a, 0xc5, 0x4e,
  0x5a, 0x85, 0x55, 0xf8, 0x44, 0x0e, 0x46, 0x0c, 0x12, 0x00, 0x04, 0xc1,
  0x00, 0xa9, 0x15, 0x3b, 0x69, 0x15, 0x56, 0x01, 0x95, 0x38, 0x18, 0x31,
  0x48, 0x00, 0x10, 0x04, 0x03, 0xa4, 0x56, 0xec, 0xa4, 0x55, 0x58, 0x25,
  0x54, 0x8a, 0x11, 0x83, 0x04, 0x00, 0x41, 0x30, 0x40, 0x6a, 0xc5, 0x4e,
  0x4a, 0x85, 0x55, 0x46, 0x45, 0x47, 0x46, 0x0c, 0x12, 0x00, 0x04, 0xc1,
  0x00, 0xa9, 0x15, 0x3b, 0x29, 0x15, 0x56, 0xe1, 0x93, 0x1c, 0x19, 0x31,
  0x48, 0x00, 0x10, 0x04, 0x03, 0xa4, 0x56, 0xec, 0x04, 0x55, 0x58, 0x65,
  0x54, 0xb2, 0x11, 0x83, 0x04, 0x00, 0x41, 0x30, 0x40, 0x6a, 0xc5, 0x4e,
  0x50, 0x85, 0x55, 0xf8, 0xa4, 0x1a, 0x31, 0x48, 0x00, 0x10, 0x04, 0x03,
  0xa4, 0x56, 0xec, 0x04, 0x55, 0x58, 0x05, 0x54, 0xa2, 0x11, 0x83, 0x04,
  0x00, 0x41, 0x30, 0x40, 0x6a, 0xc5, 0x4e, 0x50, 0x85, 0x55, 0x42, 0xa5,
  0x41, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5f, 0x0b, 0x80, 0x35,
  0x7b, 0xb1, 0x67, 0xcf, 0xfe, 0xde, 0xdc, 0x57, 0x82, 0xfc, 0x45, 0x1a,
  0x17, 0x00, 0x01, 0x00, 0x20, 0xc4, 0x18, 0x00, 0x78, 0x01, 0xed, 0x99,
  0xcd, 0x6f, 0x1b, 0x45, 0x14, 0xc0, 0xdf, 0xcc, 0x8e, 0x37, 0xe3, 0xf5,
  0xcb, 0xf3, 0x64, 0xb3, 0xbb, 0x4e, 0xdd, 0xcd, 0xc6, 0x49, 0x9b, 0x68,
  0x63, 0x92, 0xc6, 0x69, 0x93, 0xb4, 0xa0, 0xb6, 0x84, 0xd2, 0xf2, 0x95,
  0x42, 0x00, 0xc9, 0x42, 0x20, 0x22, 0x50, 0xc5, 0x87, 0xc4, 0xa1, 0xea,
  0xb1, 0x12, 0xc8, 0xac, 0x7b, 0xa0, 0x1c, 0x82, 0x38, 0x71, 0xe3, 0x82,
  0x14, 0x09, 0x90, 0xb8, 0xf0, 0x0f, 0xa4, 0x50, 0xf7, 0x8a, 0x82, 0x22,
  0x04, 0x02, 0x21, 0xce, 0x70, 0xed, 0xa9, 0x07, 0x44, 0x78, 0xb3, 0xd8,
  0x05, 0xd2, 0x9c, 0x41, 0xa0, 0xfd, 0x49, 0xef, 0xbd, 0x99, 0xf7, 0x46,
  0xb3, 0x6f, 0xde, 0x1b, 0x5f, 0xc6, 0xb7, 0xc6, 0x20, 0xe7, 0xf9, 0xb9,
  0xcb, 0x3b, 0xd6, 0x7e, 0x44, 0x3f, 0x5c, 0xda, 0x34, 0x00, 0x25, 0x3b,
  0x61, 0x94, 0x55, 0xcc, 0x95, 0xc0, 0x6a, 0x80, 0x97, 0xfb, 0xeb, 0x07,
  0x71, 0x4b, 0xcc, 0xf2, 0x02, 0x8b, 0x65, 0xd5, 0xaa, 0x3e, 0xc2, 0x2a,
  0x80, 0xb3, 0x2c, 0x0f, 0xb2, 0xdc, 0x83, 0x66, 0xf9, 0x98, 0xe5, 0x43,
  0x16, 0x4b, 0xc5, 0xaa, 0x3e, 0x36, 0x76, 0x10, 0x83, 0x7c, 0xfe, 0x8a,
  0xc3, 0x62, 0xbf, 0x25, 0x59, 0xf6, 0x53, 0xfa, 0xfe, 0x9d, 0xd3, 0x6c,
  0xce, 0xb3, 0xc0, 0xa3, 0xef, 0x7f, 0x72, 0xc6, 0xda, 0xbe, 0x0f, 0xae,
  0x67, 0x97, 0x0e, 0xcc, 0xeb, 0xbf, 0xcc, 0xa0, 0x4f, 0x96, 0xab, 0xb6,
  0x30, 0xfb, 0x18, 0xd4, 0xe8, 0xe7, 0x9a, 0xd5, 0x7f, 0xd6, 0xd3, 0xf4,
  0xfb, 0x3a, 0xe8, 0xe5, 0x17, 0x2c, 0xfd, 0xfe, 0xdd, 0xc3, 0x1e, 0x63,
  0xed, 0x41, 0xd8, 0xfd, 0x5c, 0x58, 0x6f, 0xb9, 0xe2, 0x7a, 0xc3, 0x95,
  0x3d, 0xe3, 0x3a, 0xd5, 0x45, 0x76, 0xfd, 0xa3, 0xd8, 0x63, 0xbb, 0x2c,
  0x16, 0x57, 0xfc, 0x71, 0x0a, 0x57, 0x1e, 0x74, 0x3b, 0xfe, 0xbf, 0xd8,
  0x1a, 0x10, 0x8b, 0xc5, 0xf6, 0xc4, 0xca, 0x00, 0xb4, 0xaa, 0xa0, 0xa0,
  0xa0, 0xa0, 0xa0, 0xa0, 0xa0, 0xa0, 0xa0, 0xa0, 0xa0, 0xa0, 0xa0, 0xa0,
  0xa0, 0xe0, 0xdf, 0x66, 0x32, 0xdb, 0x56, 0x7b, 0xed, 0x77, 0x01, 0x0c,
  0x38, 0xce, 0x37, 0xdb, 0x5f, 0x3a, 0xdf, 0x6e, 0xef, 0x39, 0xdf, 0x6d,
  0x7f, 0xb6, 0x2e, 0x01, 0xda, 0xb2, 0x67, 0xda, 0x53, 0xbd, 0x46, 0xdb,
  0xef, 0xb5, 0xda, 0xd9, 0xcd, 0x53, 0x6d, 0xaf, 0x77, 0xb1, 0x5d, 0xef,
  0x5d, 0xa9, 0x6e, 0xde, 0x00, 0xb8, 0xb6, 0xab, 0x7f, 0xf9, 0xca, 0x11,
  0x6c, 0xcb, 0x6c, 0x25, 0x5b, 0x8f, 0xed, 0xdb, 0xb0, 0x79, 0x23, 0xd6,
  0x86, 0xc6, 0xb4, 0x4b, 0xe3, 0x9e, 0xc1, 0x43, 0x9e, 0x8b, 0x09, 0x1a,
  0x6c, 0x68, 0x9f, 0x4e, 0x41, 0x4c, 0x4b, 0x10, 0x51, 0x1d, 0x5d, 0x9c,
  0x20, 0x83, 0x93, 0x9e, 0x8f, 0xf7, 0xcb, 0x18, 0x0f, 0x93, 0x8b, 0x53,
  0xe8, 0xe3, 0xb2, 0x8c, 0xf0, 0x34, 0x00, 0x09, 0x63, 0xf4, 0x03, 0x2a,
  0xc6, 0x33, 0x12, 0xf0, 0x08, 0xf9, 0x08, 0xae, 0xab, 0xf5, 0x48, 0x40,
  0x2b, 0x2a, 0x42, 0x1a, 0x97, 0x24, 0x7d, 0x5f, 0x3b, 0x43, 0x01, 0x9e,
  0x55, 0x80, 0x95, 0x9a, 0xc4, 0xf2, 0x68, 0x80, 0x20, 0x24, 0x7a, 0x1b,
  0x41, 0x47, 0x6c, 0xc8, 0x4e, 0x04, 0xd9, 0xae, 0x0e, 0xa3, 0xae, 0xa8,
  0x29, 0x12, 0xe3, 0x11, 0x51, 0x3e, 0x7f, 0x24, 0x13, 0x82, 0xf7, 0xe6,
  0xb1, 0x13, 0x9e, 0xcb, 0x68, 0x3c, 0x25, 0xe1, 0xa4, 0x58, 0xe5, 0x79,
  0x39, 0x7c, 0x22, 0xab, 0x4e, 0xa4, 0x18, 0xe6, 0x31, 0xbf, 0x1b, 0xcd,
  0xb7, 0x48, 0xf3, 0x58, 0x87, 0x33, 0xdd, 0x60, 0x23, 0xed, 0xd4, 0x78,
  0x5c, 0x0e, 0xeb, 0xdd, 0xf0, 0xbe, 0x16, 0x3a, 0x3c, 0x76, 0xc2, 0xa9,
  0x6e, 0x39, 0xf7, 0x35, 0xbb, 0x36, 0xaf, 0xda, 0x02, 0xfb, 0x39, 0x9f,
  0xb1, 0x8d, 0x56, 0xc7, 0xe6, 0x92, 0xe7, 0x51, 0x92, 0x64, 0xd4, 0x71,
  0x0a, 0xc6, 0x63, 0x12, 0xb3, 0x92, 0x0e, 0xf1, 0xfa, 0x91, 0xe8, 0xb5,
  0xad, 0xf3, 0x6a, 0x89, 0x88, 0x73, 0x0e, 0x4b, 0x31, 0x3d, 0xa6, 0x56,
  0xc8, 0x29, 0x29, 0xaa, 0x73, 0xec, 0x42, 0xf4, 0xc6, 0x56, 0x30, 0x91,
  0xf0, 0x3a, 0xdc, 0x85, 0x69, 0x58, 0x1d, 0x9b, 0x9f, 0x23, 0x5a, 0x8c,
  0xe9, 0x30, 0xc7, 0x1e, 0x8f, 0x2e, 0x6f, 0x55, 0xf9, 0x7c, 0x75, 0x1b,
  0x7b, 0x8f, 0x63, 0x0b, 0xc7, 0x28, 0xaa, 0xc5, 0xe8, 0x8d, 0x18, 0x92,
  0xa1, 0xa2, 0xec, 0xb8, 0x7e, 0xab, 0x26, 0xb8, 0x8e, 0x36, 0xfe, 0x01,
  0xac, 0xea, 0x9a, 0x42, 0x6f, 0xd4, 0xe7, 0x33, 0xc0, 0xee, 0x6d, 0xf8,
  0x54, 0x64, 0x52, 0x36, 0x00, 0xf4, 0xd7, 0xd9, 0x92, 0x7d, 0x9b, 0xe3,
  0xbc, 0x85, 0xa7, 0xc4, 0x08, 0xd7, 0xd1, 0xfa, 0x56, 0x24, 0x94, 0xf3,
  0x75, 0x5c, 0x99, 0x38, 0x6e, 0x88, 0x75, 0xd9, 0xf1, 0xf2, 0x39, 0x9f,
  0x10, 0xa0, 0xa1, 0x4f, 0x70, 0xfd, 0x46, 0x0d, 0x41, 0x08, 0xa4, 0xd7,
  0x4d, 0x07, 0xd6, 0xa1, 0x53, 0x95, 0x92, 0xc4, 0x9a, 0xec, 0x54, 0x8d,
  0xa1, 0x2a, 0xf7, 0x4b, 0xaf, 0xb1, 0x7f, 0x0d, 0x3a, 0xe5, 0xe5, 0x84,
  0x2e, 0x46, 0x3e, 0x79, 0x27, 0x53, 0x7a, 0x32, 0x0a, 0xe8, 0xa9, 0x28,
  0x22, 0x71, 0x42, 0xd2, 0xd3, 0x89, 0x8f, 0xcf, 0x24, 0x01, 0x3e, 0x9b,
  0x44, 0xa8, 0x97, 0x0d, 0xa5, 0x32, 0xa6, 0x59, 0x99, 0x50, 0x93, 0xf7,
  0x39, 0x9a, 0xfa, 0x38, 0x9d, 0x06, 0x38, 0x93, 0x46, 0x08, 0x27, 0x81,
  0xe6, 0x4c, 0x8c, 0xf3, 0x26, 0xc1, 0x63, 0x46, 0xa2, 0xf2, 0x7d, 0x2a,
  0x05, 0x01, 0xb9, 0xbc, 0xcf, 0x22, 0x24, 0xd8, 0x82, 0x18, 0x6d, 0xfe,
  0xf0, 0xaa, 0x52, 0x18, 0x4b, 0xd2, 0xbe, 0xef, 0x96, 0x83, 0xc0, 0xf5,
  0xa2, 0xc8, 0x1d, 0x4e, 0x0c, 0xf7, 0x19, 0xe8, 0xc5, 0xf6, 0xad, 0x9b,
  0xaf, 0xf0, 0x5d, 0x5d, 0xd5, 0x31, 0x3d, 0xe4, 0xc5, 0x78, 0x0e, 0x63,
  0xb4, 0x77, 0x52, 0xeb, 0x84, 0x50, 0xa7, 0x04, 0xba, 0x49, 0x65, 0x2f,
  0xc1, 0x61, 0x2f, 0x45, 0xe1, 0x35, 0xd1, 0xe3, 0xdb, 0x49, 0x98, 0xa2,
  0xc4, 0x26, 0x3e, 0x4c, 0x31, 0x56, 0x28, 0xc1, 0x2a, 0xa5, 0xe8, 0x50,
  0x13, 0x43, 0xcf, 0xa3, 0x1d, 0x0d, 0x77, 0xa8, 0x1a, 0x84, 0x35, 0x22,
  0x52, 0xfc, 0x6d, 0x35, 0x1b, 0xa8, 0x12, 0x5b, 0x77, 0x3e, 0x56, 0x4a,
  0xbb, 0xbb, 0xaa, 0xc2, 0xf5, 0x9b, 0xf4, 0xe8, 0xb6, 0x54, 0x9d, 0x4c,
  0xba, 0x1d, 0xef, 0x08, 0x52, 0x65, 0x9a, 0x68, 0x68, 0xc6, 0xa7, 0xaa,
  0x84, 0x3b, 0x25, 0x77, 0xa8, 0x3c, 0xc1, 0x56, 0x68, 0x50, 0x0b, 0x6c,
  0x71, 0x98, 0x7f, 0x2a, 0xd0, 0xbd, 0x11, 0x72, 0x27, 0xf6, 0x3f, 0xfc,
  0x1a, 0xab, 0xf6, 0xf9, 0xea, 0x56, 0x49, 0xc7, 0xc6, 0xee, 0x3e, 0xf9,
  0x5b, 0x9f, 0x10, 0xf9, 0x3f, 0x03, 0x2d, 0xab, 0x2c, 0xd6, 0x27, 0x45,
  0xfe, 0x1a, 0x7b, 0xd7, 0x67, 0xbb, 0x0d, 0xca, 0xbe, 0x50, 0xfe, 0xed,
  0xef, 0x82, 0x9c, 0xab, 0xfd, 0x77, 0xe8, 0xa3, 0x2c, 0xdc, 0x7f, 0xfe,
  0x6c, 0xbe, 0x2e, 0xdf, 0x47, 0xf5, 0x5f, 0x75, 0x5f, 0xaa, 0x64, 0xcb,
  0x6f, 0x7e, 0xfe, 0xfa, 0xce, 0x6f, 0x3f, 0xfd, 0xf8, 0xdc, 0xb5, 0x5f,
  0x2f, 0xd4, 0x7f, 0x07, 0x6e, 0x5f, 0xb6, 0xa1, 0x17, 0x00, 0x01, 0x00,
  0x10, 0x40, 0x19, 0x00, 0x78, 0x01, 0xed, 0x99, 0xcf, 0x6f, 0xdc, 0x44,
  0x14, 0xc7, 0x67, 0xc6, 0xb3, 0x63, 0xaf, 0xf3, 0xf2, 0xd6, 0xf1, 0x8e,
  0xbd, 0xf9, 0xe1, 0x24, 0x9b, 0x36, 0x0d, 0x69, 0x69, 0xda, 0x4d, 0x9a,
  0x4d, 0xd3, 0x28, 0x2d, 0x26, 0x6a, 0xf9, 0xa1, 0x14, 0x02, 0x15, 0x14,
  0x2d, 0x22, 0x20, 0x55, 0x08, 0x24, 0x24, 0x50, 0xee, 0xa0, 0xc5, 0xdb,
  0x0b, 0x08, 0xe5, 0xca, 0x05, 0x81, 0x04, 0x52, 0x38, 0x20, 0x71, 0xe1,
  0x1f, 0x48, 0x4a, 0x23, 0xf5, 0x04, 0x02, 0xe5, 0x84, 0x4a, 0x85, 0xb8,
  0x72, 0xe1, 0x80, 0x2a, 0x71, 0x41, 0x84, 0xf7, 0x9c, 0x4d, 0x41, 0x69,
  0x24, 0x6e, 0x20, 0x90, 0x3f, 0xd2, 0x7b, 0x5f, 0xcf, 0xbc, 0xd9, 0xd9,
  0x37, 0x9e, 0xf1, 0xe5, 0x4d, 0x3a, 0x20, 0x72, 0xa6, 0x9e, 0xec, 0xbf,
  0xcb, 0xfa, 0x09, 0xde, 0xbe, 0xb6, 0x1e, 0x08, 0x51, 0xe2, 0x06, 0xa1,
  0xd8, 0x11, 0x6b, 0x96, 0xbd, 0x10, 0x77, 0xfa, 0xd9, 0xff, 0x19, 0x67,
  0x12, 0xb2, 0x17, 0xc9, 0x98, 0x94, 0x5d, 0x17, 0xc9, 0x4e, 0x88, 0x0b,
  0x64, 0x0f, 0x91, 0xdd, 0x87, 0x4f, 0xf6, 0x29, 0xd9, 0x07, 0x64, 0x4c,
  0x0f, 0xbb, 0x2e, 0x65, 0x32, 0xec, 0xda, 0xdf, 0xa1, 0xc9, 0xf8, 0xbf,
  0x1c, 0xb2, 0x83, 0xfc, 0xbc, 0xfc, 0xf1, 0x22, 0xc9, 0x45, 0x32, 0xf1,
  0xeb, 0xd2, 0xad, 0xf3, 0xac, 0xfb, 0x2c, 0x35, 0xaf, 0x1d, 0x9a, 0xd7,
  0x7f, 0x99, 0xfd, 0x7d, 0x62, 0xbe, 0x3a, 0xe4, 0x85, 0xf0, 0xbb, 0x62,
  0x16, 0xbb, 0xfb, 0xb8, 0xdf, 0x5e, 0xef, 0xb6, 0xf7, 0xf7, 0xf2, 0x06,
  0x59, 0x77, 0xff, 0xee, 0x63, 0x97, 0x60, 0x3d, 0x0c, 0x9e, 0xcf, 0x88,
  0x95, 0x86, 0x91, 0xef, 0xd4, 0x8d, 0xda, 0x0e, 0x8c, 0x53, 0x99, 0xa6,
  0xae, 0x7f, 0x94, 0xbd, 0x1c, 0xf6, 0x30, 0x72, 0x6f, 0x15, 0x46, 0x75,
  0x4f, 0xb2, 0x73, 0xd8, 0x29, 0xf9, 0xff, 0xc1, 0xef, 0xe0, 0xaf, 0xdf,
  0x0e, 0xb7, 0xf7, 0xa1, 0xcf, 0x3b, 0xb7, 0x82, 0x82, 0x82, 0x82, 0x82,
  0x82, 0x82, 0x82, 0x82, 0x82, 0x82, 0x82, 0x82, 0x82, 0x82, 0x82, 0x7f,
  0x95, 0xb1, 0x6c, 0x53, 0xef, 0xb6, 0xde, 0xe5, 0x4a, 0x85, 0xe3, 0x7c,
  0xb7, 0xf9, 0xa5, 0x73, 0x7b, 0x73, 0xd7, 0xf9, 0x7e, 0xf3, 0xf3, 0x15,
  0x25, 0x44, 0x4b, 0x6f, 0x07, 0xad, 0xf1, 0xed, 0x7a, 0xcb, 0x6e, 0x37,
  0x5a, 0x1f, 0xde, 0x9c, 0x6f, 0xc1, 0xf6, 0x5a, 0x65, 0x7d, 0x4b, 0x88,
  0xeb, 0x3b, 0xde, 0x4f, 0x5f, 0x3b, 0x92, 0xb4, 0x4c, 0xaa, 0x48, 0x7d,
  0xd2, 0xcc, 0xe9, 0x6c, 0xbe, 0x2d, 0xd6, 0xb7, 0x12, 0xcf, 0x60, 0xdd,
  0x0b, 0x70, 0xdc, 0x0b, 0x71, 0xd8, 0x37, 0x30, 0xe6, 0x07, 0x70, 0xcc,
  0x0f, 0x61, 0x04, 0x0c, 0x1c, 0x81, 0x00, 0x26, 0x20, 0x84, 0x51, 0x34,
  0x70, 0x14, 0x03, 0x78, 0x00, 0x43, 0x38, 0x17, 0x04, 0xde, 0xbc, 0x31,
  0xde, 0x42, 0x18, 0x7a, 0x97, 0x5b, 0xc9, 0xb6, 0xd7, 0x67, 0xd1, 0x71,
  0x2d, 0x94, 0xab, 0x16, 0xfc, 0x55, 0xdb, 0xe6, 0x39, 0x17, 0x45, 0x82,
  0xf3, 0x22, 0xc6, 0xf3, 0x2a, 0x81, 0x73, 0x2a, 0x86, 0x54, 0x08, 0xbc,
  0xa0, 0x13, 0x78, 0x58, 0x09, 0x58, 0xd0, 0x31, 0xe0, 0xb0, 0xc2, 0x25,
  0x2d, 0xa0, 0xa7, 0xa6, 0x40, 0x48, 0x05, 0x72, 0x55, 0xb5, 0x63, 0x91,
  0xed, 0x78, 0xd1, 0x44, 0xa7, 0x42, 0x5a, 0x8e, 0x9e, 0xcf, 0x6a, 0xb9,
  0x9e, 0xe8, 0xc8, 0x9a, 0x46, 0x39, 0x1c, 0x23, 0x52, 0xdb, 0x8b, 0xae,
  0x66, 0x52, 0x0a, 0x94, 0xf4, 0xec, 0x44, 0x57, 0x32, 0x1c, 0x9e, 0x44,
  0xe9, 0x4c, 0x82, 0x97, 0xc7, 0xe6, 0x3a, 0x95, 0xd1, 0x49, 0x88, 0xf2,
  0xd8, 0x91, 0x4e, 0x3c, 0xd5, 0x40, 0x27, 0x7f, 0x9e, 0xe9, 0x94, 0x49,
  0xcb, 0xd1, 0x42, 0x87, 0x73, 0xb5, 0xab, 0x93, 0xed, 0xe8, 0xc1, 0x06,
  0x70, 0xce, 0xb5, 0xd3, 0x8d, 0x3c, 0xef, 0xfe, 0xd5, 0x46, 0x9b, 0x73,
  0x97, 0x25, 0x85, 0x56, 0xcf, 0xa0, 0x1d, 0x4e, 0x50, 0x1e, 0x57, 0x38,
  0x40, 0xbf, 0x8b, 0xe2, 0x57, 0x36, 0x1e, 0xd3, 0xb3, 0x78, 0x59, 0xcf,
  0x21, 0x52, 0xbe, 0x51, 0x29, 0x41, 0xa7, 0xa4, 0x71, 0x90, 0x62, 0x8f,
  0xc7, 0xaf, 0x6d, 0xd8, 0xd1, 0x11, 0x1a, 0x07, 0x3b, 0x62, 0x4a, 0xa4,
  0xfd, 0x53, 0x27, 0x11, 0xa7, 0x13, 0xf4, 0xfb, 0x02, 0x54, 0x91, 0xc6,
  0x21, 0x1a, 0xf3, 0x44, 0xfc, 0xc6, 0x46, 0x85, 0xd6, 0x38, 0xc8, 0x63,
  0xde, 0xa7, 0x31, 0xa7, 0x4f, 0x61, 0x5c, 0x4b, 0xc0, 0xaf, 0x86, 0xe8,
  0xd5, 0x34, 0x64, 0x33, 0xde, 0x5b, 0x35, 0x99, 0xc0, 0x10, 0xc7, 0x3f,
  0xe2, 0x52, 0x31, 0xe5, 0x2a, 0x7d, 0xad, 0x84, 0xf7, 0x6d, 0x36, 0xab,
  0xb8, 0xd6, 0xbc, 0xf3, 0x8b, 0xf8, 0x4c, 0x66, 0x4a, 0xd5, 0x9d, 0xfc,
  0xb9, 0x2c, 0x38, 0x4f, 0xcd, 0xf1, 0x39, 0x25, 0xb2, 0x24, 0xa9, 0xcb,
  0x15, 0xd5, 0xf6, 0xf2, 0x58, 0x9f, 0xc8, 0x84, 0xa8, 0xab, 0x33, 0x21,
  0xa2, 0xab, 0x91, 0x9a, 0xa8, 0x56, 0x74, 0x5b, 0xac, 0x88, 0x76, 0x55,
  0x29, 0x94, 0xcb, 0xaa, 0x5d, 0xd5, 0x1a, 0xab, 0xb4, 0x1f, 0x6a, 0x99,
  0xfa, 0x97, 0x45, 0xdb, 0x69, 0x5a, 0x7c, 0x2a, 0x34, 0xe8, 0x9d, 0x8d,
  0xf1, 0xe9, 0x30, 0xc0, 0x2b, 0x61, 0x88, 0xcf, 0x58, 0x03, 0xcf, 0xda,
  0x00, 0xae, 0xda, 0x10, 0xe4, 0x19, 0x85, 0x93, 0xb1, 0x81, 0xe3, 0x71,
  0x00, 0x27, 0xe2, 0x10, 0x54, 0x53, 0xe3, 0x49, 0x65, 0x71, 0x4a, 0xc5,
  0x78, 0x8a, 0xe6, 0x14, 0x67, 0x05, 0x36, 0xb4, 0x85, 0x69, 0xda, 0xd7,
  0x19, 0xad, 0xc0, 0x33, 0x06, 0xcb, 0x41, 0x80, 0x3e, 0xcd, 0xd3, 0x14,
  0x31, 0xcc, 0x0a, 0x0b, 0xbc, 0x26, 0xf1, 0xba, 0xd6, 0x60, 0x8c, 0x09,
  0xac, 0xc2, 0xde, 0x20, 0x30, 0x18, 0x86, 0xa6, 0x2f, 0xd6, 0x18, 0x52,
  0x2e, 0x2f, 0xb4, 0x6e, 0xdd, 0x7c, 0xb9, 0xf5, 0xde, 0xcd, 0x8b, 0x9e,
  0xc5, 0x4b, 0xbe, 0x05, 0x4f, 0x66, 0x37, 0xf8, 0x1c, 0x81, 0x17, 0x63,
  0xe0, 0x25, 0x68, 0xbd, 0x11, 0xec, 0xf5, 0x63, 0xe8, 0xf3, 0x13, 0x88,
  0xfc, 0x11, 0x78, 0x04, 0x2c, 0x20, 0xc4, 0x74, 0x32, 0x13, 0xf2, 0x23,
  0x30, 0xe0, 0xfb, 0xf8, 0x28, 0x5a, 0xa8, 0x60, 0x0c, 0x55, 0x4c, 0xa0,
  0x86, 0x23, 0x30, 0x84, 0x48, 0xef, 0x28, 0xdb, 0xd1, 0xd3, 0x56, 0x97,
  0x48, 0x4d, 0x33, 0xd1, 0xda, 0x33, 0x3b, 0xba, 0x47, 0x09, 0x67, 0x8c,
  0xd6, 0x7b, 0xd4, 0xc7, 0xf2, 0x31, 0xc0, 0x9e, 0x09, 0xc4, 0x46, 0xba,
  0xf6, 0xa3, 0xf0, 0x53, 0x77, 0x96, 0xb5, 0x27, 0x75, 0xe7, 0x59, 0x31,
  0x75, 0x17, 0x59, 0x2b, 0xa9, 0x2b, 0x58, 0x9d, 0xd4, 0xd5, 0xac, 0xa5,
  0xd4, 0xf5, 0x58, 0x4d, 0xea, 0x02, 0xab, 0x9b, 0xba, 0x01, 0xab, 0x4c,
  0x5d, 0xcb, 0xaa, 0x52, 0xb7, 0x9f, 0x55, 0xa4, 0x6e, 0xc2, 0xaa, 0x53,
  0xb7, 0xce, 0x0a, 0xa9, 0x3b, 0xce, 0xda, 0x4b, 0xf3, 0x89, 0xce, 0x56,
  0xc4, 0xdf, 0xf3, 0x81, 0x62, 0x72, 0x7e, 0xed, 0x70, 0xa0, 0x2f, 0x2f,
  0x41, 0x1f, 0xe8, 0xcb, 0xeb, 0x94, 0x07, 0xfa, 0x06, 0xd9, 0x29, 0x87,
  0x63, 0x74, 0x86, 0xf6, 0xe0, 0x3e, 0x29, 0xf3, 0x5b, 0x89, 0x06, 0x3b,
  0x86, 0xfb, 0x94, 0xcc, 0x2b, 0xc1, 0xf7, 0xfa, 0xe8, 0x8c, 0x09, 0xa1,
  0xf3, 0x1a, 0xf0, 0xbd, 0xdf, 0xee, 0x73, 0xb7, 0x5b, 0x03, 0x1f, 0x27,
  0xe3, 0xfb, 0x07, 0xd9, 0xbd, 0x51, 0xe0, 0x79, 0x74, 0xb7, 0xa2, 0xfc,
  0x52, 0x4f, 0xd6, 0x7c, 0xf3, 0x8b, 0x57, 0xbf, 0xf9, 0xfd, 0x87, 0x3b,
  0xcf, 0x5d, 0xff, 0xed, 0xd2, 0xe0, 0x1f, 0x99, 0x39, 0xcf, 0x20, 0x00,
  0x17, 0x00, 0x01, 0x00, 0x00, 0xd0, 0x18, 0x00, 0x78, 0x01, 0xed, 0x99,
  0xdf, 0x6b, 0x1c, 0x55, 0x14, 0xc7, 0xcf, 0xdc, 0xb9, 0xb9, 0x7b, 0x67,
  0xf6, 0xf4, 0xec, 0xcd, 0x74, 0x76, 0x26, 0xd9, 0xcc, 0xfe, 0x48, 0xda,
  0x84, 0x64, 0x6d, 0x9a, 0x1f, 0x26, 0x69, 0x22, 0x6d, 0x4d, 0x6b, 0x2b,
  0x6a, 0xaa, 0xab, 0xc2, 0x22, 0x88, 0x41, 0x14, 0x45, 0x10, 0x95, 0xe2,
  0xab, 0xb2, 0xee, 0x96, 0x62, 0x7d, 0x88, 0xbe, 0xf5, 0x45, 0x9f, 0x84,
  0x50, 0x11, 0x7c, 0xd0, 0x3f, 0xc0, 0xc4, 0x76, 0x7d, 0x15, 0x4b, 0x10,
  0xa5, 0x22, 0x7d, 0xf7, 0x55, 0x7c, 0x2c, 0xc6, 0x73, 0x27, 0x9b, 0x18,
  0xd2, 0xf8, 0x5a, 0x50, 0xe6, 0x03, 0xe7, 0x9c, 0xb9, 0xdf, 0x7b, 0x67,
  0xe6, 0xcc, 0xb9, 0x33, 0x2f, 0x67, 0x6e, 0x0f, 0x40, 0xca, 0xa7, 0x53,
  0x37, 0xae, 0xdb, 0xf8, 0x39, 0xfd, 0xfa, 0xea, 0x9a, 0x01, 0xe8, 0xb3,
  0x83, 0x7d, 0x5c, 0x0e, 0xad, 0x07, 0x78, 0xab, 0xb7, 0x7e, 0xff, 0x7c,
  0x99, 0xed, 0x45, 0x36, 0xcb, 0xb2, 0x75, 0x3d, 0x1c, 0xeb, 0x00, 0xce,
  0xb2, 0x3d, 0xca, 0x76, 0x1f, 0x1e, 0xdb, 0x0d, 0xb6, 0xcf, 0xd8, 0x2c,
  0x79, 0xeb, 0x7a, 0x68, 0xeb, 0xf6, 0x21, 0xad, 0xfb, 0x17, 0x5c, 0x36,
  0x7b, 0x2f, 0xc1, 0x76, 0x90, 0xc7, 0xbe, 0xfe, 0xe4, 0x34, 0x87, 0x0b,
  0x6c, 0xf0, 0xf6, 0xdd, 0x2f, 0xce, 0xb0, 0xd9, 0x71, 0xca, 0xb7, 0x8d,
  0x57, 0x0e, 0xcd, 0xeb, 0xbf, 0xcc, 0xee, 0x3e, 0x59, 0xae, 0xda, 0xc2,
  0x1c, 0x60, 0xb7, 0x46, 0x7f, 0xc6, 0xd6, 0xff, 0x53, 0xd7, 0xa4, 0xb7,
  0xaf, 0xbb, 0x7b, 0xf9, 0x1d, 0x5b, 0x6f, 0xff, 0xee, 0x63, 0x9b, 0xb1,
  0xf1, 0x30, 0xec, 0xf5, 0x14, 0x34, 0xa6, 0x95, 0x73, 0xad, 0xa6, 0x44,
  0xd7, 0x28, 0xb7, 0x30, 0xc3, 0xd2, 0x03, 0x65, 0x27, 0x87, 0x1d, 0x94,
  0xb3, 0xf3, 0x14, 0x4a, 0xf4, 0x9e, 0xdc, 0x3d, 0xa4, 0x28, 0xff, 0x43,
  0x6c, 0x0d, 0x88, 0x6d, 0x17, 0x3b, 0xb6, 0xd8, 0x6a, 0xf0, 0xe7, 0x9d,
  0xb2, 0xff, 0x5b, 0xcd, 0xc8, 0xc8, 0xc8, 0xc8, 0xc8, 0xc8, 0xc8, 0xc8,
  0xc8, 0xc8, 0xc8, 0xc8, 0xc8, 0xc8, 0xc8, 0x78, 0xe0, 0x0c, 0xb7, 0x37,
  0xe4, 0x76, 0xf3, 0x23, 0xdb, 0xad, 0x70, 0xdd, 0x9f, 0x36, 0x6e, 0xba,
  0x3f, 0x6f, 0x6c, 0xbb, 0xbf, 0x6c, 0x7c, 0xd5, 0x10, 0x00, 0x4d, 0xd1,
  0x35, 0xcd, 0x91, 0x6e, 0xad, 0x19, 0x74, 0xa7, 0x9b, 0xed, 0x5b, 0x8b,
  0x4d, 0xbf, 0x7b, 0xa9, 0x59, 0xea, 0x5e, 0x2e, 0xac, 0x6d, 0x0a, 0xb8,
  0xb2, 0xe5, 0xfd, 0xfe, 0x83, 0x0b, 0x1c, 0x35, 0x47, 0x97, 0xa3, 0xcf,
  0xf1, 0x03, 0x58, 0xdb, 0x4c, 0x74, 0x40, 0x03, 0xda, 0x50, 0xd9, 0x0f,
  0x70, 0xd0, 0x37, 0x58, 0xc1, 0x00, 0x6b, 0x3a, 0xa4, 0x45, 0xa8, 0xd0,
  0x1c, 0x24, 0x54, 0x42, 0x83, 0x55, 0x0a, 0x70, 0xd8, 0x0f, 0x71, 0x49,
  0x56, 0x70, 0x88, 0x0c, 0x8e, 0x60, 0x88, 0xf3, 0x32, 0xc1, 0xd3, 0x00,
  0xe4, 0x04, 0x81, 0x7e, 0x44, 0x55, 0xf0, 0x8c, 0x04, 0x3c, 0x46, 0x21,
  0x82, 0x31, 0xda, 0x3b, 0x1a, 0xd1, 0x82, 0x4a, 0xb0, 0x50, 0x95, 0x24,
  0xc2, 0x50, 0xeb, 0xfe, 0x08, 0xcf, 0x2a, 0x40, 0x2a, 0x4b, 0xf4, 0x8b,
  0x11, 0x82, 0x23, 0x31, 0xbf, 0x1a, 0xb5, 0xc4, 0xaa, 0x6c, 0xdd, 0x74,
  0xef, 0x6d, 0xc4, 0xd0, 0xde, 0xf2, 0xe2, 0xa8, 0x23, 0xca, 0x8a, 0x44,
  0x35, 0xa1, 0x42, 0x3a, 0x7e, 0xbc, 0x2d, 0x1c, 0x20, 0xc1, 0xc7, 0x3a,
  0x3e, 0xdf, 0x2e, 0x54, 0xeb, 0x24, 0xfa, 0xea, 0x18, 0xf2, 0xd8, 0x8f,
  0x9f, 0x6a, 0x7b, 0x1c, 0xbd, 0x78, 0xac, 0x13, 0x4e, 0xd4, 0x31, 0xe2,
  0x63, 0x1d, 0x07, 0x9d, 0x78, 0x6a, 0x96, 0x06, 0xf8, 0xd8, 0x8f, 0x4b,
  0x1d, 0x9d, 0x6a, 0x23, 0x1d, 0x3f, 0x1d, 0xd7, 0x3b, 0x36, 0xa7, 0xe2,
  0x6a, 0xbd, 0x15, 0x4d, 0xce, 0xa2, 0xcd, 0x67, 0x60, 0x66, 0x36, 0xcd,
  0x65, 0x70, 0x75, 0xb6, 0x95, 0xe6, 0x92, 0x93, 0x64, 0xd4, 0x1c, 0x15,
  0xab, 0x15, 0x12, 0x0f, 0x49, 0x2a, 0xf1, 0x79, 0xfd, 0xc9, 0x9b, 0xeb,
  0x17, 0xd4, 0x02, 0x3d, 0xa1, 0x16, 0xa9, 0xc0, 0xb9, 0x47, 0xb9, 0x0a,
  0xe9, 0x9c, 0xa2, 0x21, 0x9e, 0xbb, 0x98, 0xbc, 0xb3, 0x5e, 0x9c, 0x18,
  0xe7, 0x75, 0xb8, 0x05, 0xa3, 0xb0, 0x3c, 0x38, 0x75, 0x92, 0x0a, 0x0f,
  0x57, 0x28, 0x7f, 0x34, 0x20, 0x37, 0x56, 0x94, 0xf0, 0x9a, 0x27, 0x93,
  0x77, 0xd7, 0x43, 0x7e, 0xd6, 0x21, 0xbb, 0xe6, 0x63, 0x5e, 0x33, 0x33,
  0x4d, 0x71, 0xb9, 0x82, 0xf9, 0x62, 0x48, 0x5e, 0x59, 0x61, 0x7b, 0x4e,
  0xbf, 0x3f, 0xe0, 0x54, 0x30, 0xb1, 0xf3, 0xd7, 0x6d, 0xeb, 0x89, 0x73,
  0x75, 0x48, 0x02, 0xe8, 0xdb, 0xed, 0x05, 0x61, 0x7b, 0xb8, 0x5b, 0x7f,
  0xc0, 0x97, 0x4e, 0x5b, 0xca, 0x9a, 0xcd, 0x4f, 0x58, 0x7d, 0x91, 0x7d,
  0xaa, 0x3b, 0xd0, 0xae, 0x54, 0x6a, 0xa2, 0x21, 0x5b, 0x5e, 0x3a, 0xe6,
  0x8a, 0x00, 0xd4, 0xdc, 0xf9, 0x90, 0x0a, 0xfd, 0x8a, 0xe0, 0x28, 0x90,
  0xdb, 0x50, 0x2d, 0x68, 0x40, 0xab, 0x20, 0x25, 0xe9, 0x53, 0x11, 0x5d,
  0x0a, 0x0d, 0x15, 0x14, 0xd7, 0x78, 0x85, 0xcf, 0x59, 0x4a, 0xe8, 0xe9,
  0x30, 0xa0, 0x67, 0x23, 0x83, 0x05, 0xde, 0x47, 0x77, 0x45, 0xb5, 0x8e,
  0x27, 0x06, 0x9f, 0x8b, 0x02, 0x7c, 0x26, 0x0c, 0x09, 0x56, 0xa0, 0xf5,
  0x7c, 0x14, 0xa2, 0x34, 0x86, 0x46, 0x93, 0x00, 0xb5, 0x19, 0x57, 0x7d,
  0x81, 0xa1, 0xb1, 0x24, 0x44, 0x31, 0x2f, 0xc9, 0x33, 0x75, 0xa5, 0xf8,
  0x7a, 0xbe, 0x39, 0xa1, 0xdc, 0x53, 0x8a, 0xc6, 0xa5, 0xa1, 0x09, 0x19,
  0x50, 0x9d, 0xef, 0x05, 0x4b, 0x40, 0x27, 0x94, 0xc1, 0x49, 0x15, 0xe0,
  0x49, 0x25, 0x71, 0x06, 0x02, 0x9c, 0x06, 0x83, 0xf6, 0xf9, 0xe0, 0x75,
  0x2d, 0xd1, 0x48, 0x22, 0x30, 0x74, 0x24, 0x50, 0xf4, 0x52, 0xf3, 0xfb,
  0x5b, 0xcb, 0x1a, 0xe8, 0x9c, 0x0f, 0x78, 0x1e, 0x01, 0x5f, 0xe3, 0x77,
  0xd7, 0xee, 0x59, 0xee, 0x1a, 0x48, 0xfb, 0x7e, 0x6a, 0x9e, 0xf3, 0x78,
  0xce, 0xe7, 0xb9, 0xbc, 0xd5, 0x63, 0x90, 0xc8, 0xda, 0x11, 0xd6, 0x88,
  0x35, 0xb2, 0x5a, 0x15, 0x24, 0x17, 0x85, 0x1c, 0xd6, 0x04, 0x6b, 0xf6,
  0xfd, 0xc9, 0xe5, 0x40, 0x16, 0x7d, 0xa0, 0x98, 0x7c, 0x0a, 0x35, 0xa0,
  0x64, 0x4d, 0x4d, 0x86, 0xd2, 0xd3, 0x6a, 0x0b, 0x3c, 0x01, 0xe1, 0xb0,
  0xa6, 0xe2, 0x31, 0x9f, 0xa2, 0x51, 0xa4, 0xdc, 0x18, 0xd1, 0x87, 0x02,
  0xe6, 0x54, 0x6e, 0xf1, 0x0e, 0xf8, 0x04, 0xe0, 0x70, 0x94, 0x0a, 0x84,
  0xcb, 0x51, 0x68, 0xa8, 0xc1, 0xdc, 0x1d, 0xe0, 0xec, 0x01, 0x3a, 0x9b,
  0x45, 0x1b, 0x76, 0xda, 0xa7, 0x7b, 0xa4, 0xbd, 0xc3, 0x03, 0x5a, 0xc9,
  0x3a, 0xe1, 0xda, 0xb9, 0xbd, 0x96, 0xa2, 0xd5, 0x1c, 0x27, 0xfd, 0x4b,
  0x30, 0x6d, 0x9d, 0xc5, 0x6a, 0xc2, 0x49, 0x3b, 0xb3, 0x7b, 0x5a, 0xda,
  0x95, 0x95, 0xbc, 0xfb, 0x87, 0xb4, 0x23, 0xaf, 0xf6, 0x7a, 0xd2, 0xc7,
  0xd9, 0xec, 0xbf, 0x02, 0x27, 0xed, 0xf4, 0xef, 0x5c, 0x47, 0xf6, 0x3a,
  0xbc, 0x2f, 0xe7, 0xdb, 0xf3, 0xef, 0x7d, 0xf3, 0xc6, 0x8f, 0x7f, 0xdd,
  0xfd, 0xed, 0x85, 0x2b, 0xf7, 0x2e, 0x96, 0xfe, 0x06, 0x57, 0x67, 0xbb,
  0x5b, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x01, 0x02, 0x03, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x05, 0x03,
  0x08, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x03, 0x01, 0x06, 0x05, 0x04, 0x02, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x7c, 0x00, 0x00, 0x78, 0x01, 0x63, 0x64,
  0x60, 0x60, 0x60, 0x06, 0x62, 0x09, 0x20, 0x06, 0x81, 0x1a, 0x20, 0x96,
  0x05, 0x62, 0x26, 0x20, 0x06, 0x01, 0x1b, 0x10, 0x01, 0x04, 0xac, 0x40,
  0xec, 0x02, 0xc4, 0x20, 0x00, 0x62, 0x27, 0x00, 0x31, 0x0c, 0x80, 0xcc,
  0xf0, 0x01, 0x62, 0x10, 0x00, 0xb1, 0x61, 0xe0, 0x3f, 0x10, 0x80, 0xf8,
  0x19, 0x40, 0x0c, 0xb2, 0x03, 0x55, 0xee, 0xff, 0x7f, 0x00, 0x33, 0x03,
  0x0a, 0x55, 0x00, 0x00, 0x78, 0x62, 0x6f, 0x70, 0x01, 0x00, 0x00, 0x00,
  0x7e, 0x02, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00
};
