#if 0
;
; Input signature:
;
; Name                 Index   Mask Register SysValue  Format   Used
; -------------------- ----- ------ -------- -------- ------- ------
; SV_Position              0   xyzw        0     NONE   float   xyzw
; NORMAL                   0   xyz         1     NONE   float   xyz 
; TEXCOORD                 0   xy          2     NONE   float   xy  
; InstMatrix               0   xyzw        3     NONE   float   xyzw
; InstMatrix               1   xyzw        4     NONE   float   xyzw
; InstMatrix               2   xyzw        5     NONE   float   xyzw
;
;
; Output signature:
;
; Name                 Index   Mask Register SysValue  Format   Used
; -------------------- ----- ------ -------- -------- ------- ------
; TEXCOORD                 0   xy          0     NONE   float   xy  
; TEXCOORD                 1   xyzw        1     NONE   float   xyzw
; TEXCOORD                 2   xyz         2     NONE   float   xyz 
; COLOR                    0   xyzw        3     NONE   float   xyzw
; SV_Position              0   xyzw        4      POS   float   xyzw
;
; shader debug name: C:\Users\marcu\Downloads\DirectXTK12-main\DirectXTK12-main\Src/Shaders/Compiled\XboxGamingXboxOnePBREffect_VSConstantBnInst.pdb
; shader hash: 21dd5d3e637add46de711f8a8e337c98
;
; Pipeline Runtime Information: 
;
;PSVRuntimeInfo:
; Vertex Shader
; OutputPositionPresent=1
; MinimumExpectedWaveLaneCount: 0
; MaximumExpectedWaveLaneCount: 4294967295
; UsesViewID: false
; SigInputElements: 4
; SigOutputElements: 5
; SigPatchConstOrPrimElements: 0
; SigInputVectors: 6
; SigOutputVectors[0]: 5
; SigOutputVectors[1]: 0
; SigOutputVectors[2]: 0
; SigOutputVectors[3]: 0
; EntryFunctionName: VSConstantBnInst
;
;
; Input signature:
;
; Name                 Index             InterpMode DynIdx
; -------------------- ----- ---------------------- ------
; SV_Position              0                              
; NORMAL                   0                              
; TEXCOORD                 0                              
; InstMatrix               0                              
;
; Output signature:
;
; Name                 Index             InterpMode DynIdx
; -------------------- ----- ---------------------- ------
; TEXCOORD                 0                 linear       
; TEXCOORD                 1                 linear       
; TEXCOORD                 2                 linear       
; COLOR                    0                 linear       
; SV_Position              0          noperspective       
;
; Buffer Definitions:
;
; cbuffer 
; {
;
;   [388 x i8] (type annotation not present)
;
; }
;
;
; Resource Bindings:
;
; Name                                 Type  Format         Dim      ID      HLSL Bind  Count
; ------------------------------ ---------- ------- ----------- ------- -------------- ------
;                                   cbuffer      NA          NA     CB0            cb0     1
;
;
; ViewId state:
;
; Number of inputs: 24, outputs: 20
; Outputs dependent on ViewId: {  }
; Inputs contributing to computation of Outputs:
;   output 0 depends on inputs: { 8 }
;   output 1 depends on inputs: { 9 }
;   output 4 depends on inputs: { 0, 1, 2, 3, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23 }
;   output 5 depends on inputs: { 0, 1, 2, 3, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23 }
;   output 6 depends on inputs: { 0, 1, 2, 3, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23 }
;   output 8 depends on inputs: { 4, 5, 6, 12, 13, 14, 16, 17, 18, 20, 21, 22 }
;   output 9 depends on inputs: { 4, 5, 6, 12, 13, 14, 16, 17, 18, 20, 21, 22 }
;   output 10 depends on inputs: { 4, 5, 6, 12, 13, 14, 16, 17, 18, 20, 21, 22 }
;   output 16 depends on inputs: { 0, 1, 2, 3, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23 }
;   output 17 depends on inputs: { 0, 1, 2, 3, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23 }
;   output 18 depends on inputs: { 0, 1, 2, 3, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23 }
;   output 19 depends on inputs: { 0, 1, 2, 3, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23 }
;
target datalayout = "e-m:e-p:32:32-i1:32-i8:32-i16:32-i32:32-i64:64-f16:32-f32:32-f64:64-n8:16:32:64"
target triple = "dxil-ms-xb1"

%dx.types.Handle = type { i8* }
%dx.types.CBufRet.f32 = type { float, float, float, float }
%hostlayout.Constants = type { <3 x float>, [4 x <4 x float>], [3 x <3 x float>], [4 x <4 x float>], [4 x <4 x float>], [3 x <3 x float>], [3 x <3 x float>], <3 x float>, float, float, float, i32, float, float }

define void @VSConstantBnInst() {
  %1 = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 2, i32 0, i32 0, i1 false)  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %2 = call float @dx.op.loadInput.f32(i32 4, i32 2, i32 0, i8 0, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %3 = call float @dx.op.loadInput.f32(i32 4, i32 2, i32 0, i8 1, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %4 = call float @dx.op.loadInput.f32(i32 4, i32 1, i32 0, i8 0, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %5 = call float @dx.op.loadInput.f32(i32 4, i32 1, i32 0, i8 1, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %6 = call float @dx.op.loadInput.f32(i32 4, i32 1, i32 0, i8 2, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %7 = call float @dx.op.loadInput.f32(i32 4, i32 0, i32 0, i8 0, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %8 = call float @dx.op.loadInput.f32(i32 4, i32 0, i32 0, i8 1, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %9 = call float @dx.op.loadInput.f32(i32 4, i32 0, i32 0, i8 2, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %10 = call float @dx.op.loadInput.f32(i32 4, i32 0, i32 0, i8 3, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %11 = call float @dx.op.loadInput.f32(i32 4, i32 3, i32 0, i8 0, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %12 = call float @dx.op.loadInput.f32(i32 4, i32 3, i32 0, i8 1, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %13 = call float @dx.op.loadInput.f32(i32 4, i32 3, i32 0, i8 2, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %14 = call float @dx.op.loadInput.f32(i32 4, i32 3, i32 0, i8 3, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %15 = call float @dx.op.loadInput.f32(i32 4, i32 3, i32 1, i8 0, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %16 = call float @dx.op.loadInput.f32(i32 4, i32 3, i32 1, i8 1, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %17 = call float @dx.op.loadInput.f32(i32 4, i32 3, i32 1, i8 2, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %18 = call float @dx.op.loadInput.f32(i32 4, i32 3, i32 1, i8 3, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %19 = call float @dx.op.loadInput.f32(i32 4, i32 3, i32 2, i8 0, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %20 = call float @dx.op.loadInput.f32(i32 4, i32 3, i32 2, i8 1, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %21 = call float @dx.op.loadInput.f32(i32 4, i32 3, i32 2, i8 2, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %22 = call float @dx.op.loadInput.f32(i32 4, i32 3, i32 2, i8 3, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %23 = fmul fast float %4, 2.000000e+00
  %24 = fmul fast float %5, 2.000000e+00
  %25 = fmul fast float %6, 2.000000e+00
  %26 = fadd fast float %23, -1.000000e+00
  %27 = fadd fast float %24, -1.000000e+00
  %28 = fadd fast float %25, -1.000000e+00
  %29 = fmul fast float %11, %7
  %30 = call float @dx.op.tertiary.f32(i32 46, float %8, float %12, float %29)  ; FMad(a,b,c)
  %31 = call float @dx.op.tertiary.f32(i32 46, float %9, float %13, float %30)  ; FMad(a,b,c)
  %32 = call float @dx.op.tertiary.f32(i32 46, float %10, float %14, float %31)  ; FMad(a,b,c)
  %33 = fmul fast float %15, %7
  %34 = call float @dx.op.tertiary.f32(i32 46, float %8, float %16, float %33)  ; FMad(a,b,c)
  %35 = call float @dx.op.tertiary.f32(i32 46, float %9, float %17, float %34)  ; FMad(a,b,c)
  %36 = call float @dx.op.tertiary.f32(i32 46, float %10, float %18, float %35)  ; FMad(a,b,c)
  %37 = fmul fast float %19, %7
  %38 = call float @dx.op.tertiary.f32(i32 46, float %8, float %20, float %37)  ; FMad(a,b,c)
  %39 = call float @dx.op.tertiary.f32(i32 46, float %9, float %21, float %38)  ; FMad(a,b,c)
  %40 = call float @dx.op.tertiary.f32(i32 46, float %10, float %22, float %39)  ; FMad(a,b,c)
  %41 = fmul fast float %11, %26
  %42 = call float @dx.op.tertiary.f32(i32 46, float %27, float %12, float %41)  ; FMad(a,b,c)
  %43 = call float @dx.op.tertiary.f32(i32 46, float %28, float %13, float %42)  ; FMad(a,b,c)
  %44 = fmul fast float %15, %26
  %45 = call float @dx.op.tertiary.f32(i32 46, float %27, float %16, float %44)  ; FMad(a,b,c)
  %46 = call float @dx.op.tertiary.f32(i32 46, float %28, float %17, float %45)  ; FMad(a,b,c)
  %47 = fmul fast float %19, %26
  %48 = call float @dx.op.tertiary.f32(i32 46, float %27, float %20, float %47)  ; FMad(a,b,c)
  %49 = call float @dx.op.tertiary.f32(i32 46, float %28, float %21, float %48)  ; FMad(a,b,c)
  %50 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 8)  ; CBufferLoadLegacy(handle,regIndex)
  %51 = extractvalue %dx.types.CBufRet.f32 %50, 0
  %52 = extractvalue %dx.types.CBufRet.f32 %50, 1
  %53 = extractvalue %dx.types.CBufRet.f32 %50, 2
  %54 = extractvalue %dx.types.CBufRet.f32 %50, 3
  %55 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 9)  ; CBufferLoadLegacy(handle,regIndex)
  %56 = extractvalue %dx.types.CBufRet.f32 %55, 0
  %57 = extractvalue %dx.types.CBufRet.f32 %55, 1
  %58 = extractvalue %dx.types.CBufRet.f32 %55, 2
  %59 = extractvalue %dx.types.CBufRet.f32 %55, 3
  %60 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 10)  ; CBufferLoadLegacy(handle,regIndex)
  %61 = extractvalue %dx.types.CBufRet.f32 %60, 0
  %62 = extractvalue %dx.types.CBufRet.f32 %60, 1
  %63 = extractvalue %dx.types.CBufRet.f32 %60, 2
  %64 = extractvalue %dx.types.CBufRet.f32 %60, 3
  %65 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 11)  ; CBufferLoadLegacy(handle,regIndex)
  %66 = extractvalue %dx.types.CBufRet.f32 %65, 0
  %67 = extractvalue %dx.types.CBufRet.f32 %65, 1
  %68 = extractvalue %dx.types.CBufRet.f32 %65, 2
  %69 = extractvalue %dx.types.CBufRet.f32 %65, 3
  %70 = fmul fast float %51, %32
  %71 = call float @dx.op.tertiary.f32(i32 46, float %36, float %52, float %70)  ; FMad(a,b,c)
  %72 = call float @dx.op.tertiary.f32(i32 46, float %40, float %53, float %71)  ; FMad(a,b,c)
  %73 = call float @dx.op.tertiary.f32(i32 46, float %10, float %54, float %72)  ; FMad(a,b,c)
  %74 = fmul fast float %56, %32
  %75 = call float @dx.op.tertiary.f32(i32 46, float %36, float %57, float %74)  ; FMad(a,b,c)
  %76 = call float @dx.op.tertiary.f32(i32 46, float %40, float %58, float %75)  ; FMad(a,b,c)
  %77 = call float @dx.op.tertiary.f32(i32 46, float %10, float %59, float %76)  ; FMad(a,b,c)
  %78 = fmul fast float %61, %32
  %79 = call float @dx.op.tertiary.f32(i32 46, float %36, float %62, float %78)  ; FMad(a,b,c)
  %80 = call float @dx.op.tertiary.f32(i32 46, float %40, float %63, float %79)  ; FMad(a,b,c)
  %81 = call float @dx.op.tertiary.f32(i32 46, float %10, float %64, float %80)  ; FMad(a,b,c)
  %82 = fmul fast float %66, %32
  %83 = call float @dx.op.tertiary.f32(i32 46, float %36, float %67, float %82)  ; FMad(a,b,c)
  %84 = call float @dx.op.tertiary.f32(i32 46, float %40, float %68, float %83)  ; FMad(a,b,c)
  %85 = call float @dx.op.tertiary.f32(i32 46, float %10, float %69, float %84)  ; FMad(a,b,c)
  %86 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 1)  ; CBufferLoadLegacy(handle,regIndex)
  %87 = extractvalue %dx.types.CBufRet.f32 %86, 0
  %88 = extractvalue %dx.types.CBufRet.f32 %86, 1
  %89 = extractvalue %dx.types.CBufRet.f32 %86, 2
  %90 = extractvalue %dx.types.CBufRet.f32 %86, 3
  %91 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 2)  ; CBufferLoadLegacy(handle,regIndex)
  %92 = extractvalue %dx.types.CBufRet.f32 %91, 0
  %93 = extractvalue %dx.types.CBufRet.f32 %91, 1
  %94 = extractvalue %dx.types.CBufRet.f32 %91, 2
  %95 = extractvalue %dx.types.CBufRet.f32 %91, 3
  %96 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 3)  ; CBufferLoadLegacy(handle,regIndex)
  %97 = extractvalue %dx.types.CBufRet.f32 %96, 0
  %98 = extractvalue %dx.types.CBufRet.f32 %96, 1
  %99 = extractvalue %dx.types.CBufRet.f32 %96, 2
  %100 = extractvalue %dx.types.CBufRet.f32 %96, 3
  %101 = fmul fast float %87, %32
  %102 = call float @dx.op.tertiary.f32(i32 46, float %36, float %88, float %101)  ; FMad(a,b,c)
  %103 = call float @dx.op.tertiary.f32(i32 46, float %40, float %89, float %102)  ; FMad(a,b,c)
  %104 = call float @dx.op.tertiary.f32(i32 46, float %10, float %90, float %103)  ; FMad(a,b,c)
  %105 = fmul fast float %92, %32
  %106 = call float @dx.op.tertiary.f32(i32 46, float %36, float %93, float %105)  ; FMad(a,b,c)
  %107 = call float @dx.op.tertiary.f32(i32 46, float %40, float %94, float %106)  ; FMad(a,b,c)
  %108 = call float @dx.op.tertiary.f32(i32 46, float %10, float %95, float %107)  ; FMad(a,b,c)
  %109 = fmul fast float %97, %32
  %110 = call float @dx.op.tertiary.f32(i32 46, float %36, float %98, float %109)  ; FMad(a,b,c)
  %111 = call float @dx.op.tertiary.f32(i32 46, float %40, float %99, float %110)  ; FMad(a,b,c)
  %112 = call float @dx.op.tertiary.f32(i32 46, float %10, float %100, float %111)  ; FMad(a,b,c)
  %113 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 5)  ; CBufferLoadLegacy(handle,regIndex)
  %114 = extractvalue %dx.types.CBufRet.f32 %113, 0
  %115 = extractvalue %dx.types.CBufRet.f32 %113, 1
  %116 = extractvalue %dx.types.CBufRet.f32 %113, 2
  %117 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 6)  ; CBufferLoadLegacy(handle,regIndex)
  %118 = extractvalue %dx.types.CBufRet.f32 %117, 0
  %119 = extractvalue %dx.types.CBufRet.f32 %117, 1
  %120 = extractvalue %dx.types.CBufRet.f32 %117, 2
  %121 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 7)  ; CBufferLoadLegacy(handle,regIndex)
  %122 = extractvalue %dx.types.CBufRet.f32 %121, 0
  %123 = extractvalue %dx.types.CBufRet.f32 %121, 1
  %124 = extractvalue %dx.types.CBufRet.f32 %121, 2
  %125 = fmul fast float %114, %43
  %126 = call float @dx.op.tertiary.f32(i32 46, float %46, float %115, float %125)  ; FMad(a,b,c)
  %127 = call float @dx.op.tertiary.f32(i32 46, float %49, float %116, float %126)  ; FMad(a,b,c)
  %128 = fmul fast float %118, %43
  %129 = call float @dx.op.tertiary.f32(i32 46, float %46, float %119, float %128)  ; FMad(a,b,c)
  %130 = call float @dx.op.tertiary.f32(i32 46, float %49, float %120, float %129)  ; FMad(a,b,c)
  %131 = fmul fast float %122, %43
  %132 = call float @dx.op.tertiary.f32(i32 46, float %46, float %123, float %131)  ; FMad(a,b,c)
  %133 = call float @dx.op.tertiary.f32(i32 46, float %49, float %124, float %132)  ; FMad(a,b,c)
  %134 = call float @dx.op.dot3.f32(i32 55, float %127, float %130, float %133, float %127, float %130, float %133)  ; Dot3(ax,ay,az,bx,by,bz)
  %135 = call float @dx.op.unary.f32(i32 25, float %134)  ; Rsqrt(value)
  %136 = fmul fast float %135, %127
  %137 = fmul fast float %135, %130
  %138 = fmul fast float %135, %133
  %139 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 22)  ; CBufferLoadLegacy(handle,regIndex)
  %140 = extractvalue %dx.types.CBufRet.f32 %139, 0
  %141 = extractvalue %dx.types.CBufRet.f32 %139, 1
  %142 = extractvalue %dx.types.CBufRet.f32 %139, 2
  %143 = extractvalue %dx.types.CBufRet.f32 %139, 3
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 0, float %2)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 1, float %3)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 1, i32 0, i8 0, float %104)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 1, i32 0, i8 1, float %108)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 1, i32 0, i8 2, float %112)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 1, i32 0, i8 3, float 1.000000e+00)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 2, i32 0, i8 0, float %136)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 2, i32 0, i8 1, float %137)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 2, i32 0, i8 2, float %138)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 3, i32 0, i8 0, float %140)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 3, i32 0, i8 1, float %141)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 3, i32 0, i8 2, float %142)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 3, i32 0, i8 3, float %143)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 4, i32 0, i8 0, float %73)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 4, i32 0, i8 1, float %77)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 4, i32 0, i8 2, float %81)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 4, i32 0, i8 3, float %85)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  ret void
}

; Function Attrs: nounwind readnone
declare float @dx.op.loadInput.f32(i32, i32, i32, i8, i32) #0

; Function Attrs: nounwind
declare void @dx.op.storeOutput.f32(i32, i32, i32, i8, float) #1

; Function Attrs: nounwind readnone
declare float @dx.op.dot3.f32(i32, float, float, float, float, float, float) #0

; Function Attrs: nounwind readnone
declare float @dx.op.unary.f32(i32, float) #0

; Function Attrs: nounwind readonly
declare %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32, %dx.types.Handle, i32) #2

; Function Attrs: nounwind readnone
declare float @dx.op.tertiary.f32(i32, float, float, float) #0

; Function Attrs: nounwind readonly
declare %dx.types.Handle @dx.op.createHandle(i32, i8, i32, i32, i1) #2

attributes #0 = { nounwind readnone }
attributes #1 = { nounwind }
attributes #2 = { nounwind readonly }

!xbox.compiler.options = !{!0}
!llvm.ident = !{!1}
!dx.version = !{!2}
!dx.valver = !{!3}
!dx.shaderModel = !{!4}
!dx.resources = !{!5}
!dx.viewIdState = !{!8}
!dx.entryPoints = !{!9}

!0 = !{!"__XBOX_PER_THREAD_SCRATCH_SIZE_LIMIT_IN_BYTES", !"0"}
!1 = !{!"dxcxbox 2410.2410.11116.10741"}
!2 = !{i32 1, i32 0}
!3 = !{i32 1, i32 8}
!4 = !{!"vs", i32 6, i32 0}
!5 = !{null, null, !6, null}
!6 = !{!7}
!7 = !{i32 0, %hostlayout.Constants* undef, !"", i32 0, i32 0, i32 1, i32 388, null}
!8 = !{[26 x i32] [i32 24, i32 20, i32 983152, i32 983152, i32 983152, i32 983152, i32 1792, i32 1792, i32 1792, i32 0, i32 1, i32 2, i32 0, i32 0, i32 984944, i32 984944, i32 984944, i32 983152, i32 984944, i32 984944, i32 984944, i32 983152, i32 984944, i32 984944, i32 984944, i32 983152]}
!9 = !{void ()* @VSConstantBnInst, !"VSConstantBnInst", !10, !5, null}
!10 = !{!11, !21, null}
!11 = !{!12, !15, !17, !19}
!12 = !{i32 0, !"SV_Position", i8 9, i8 0, !13, i8 0, i32 1, i8 4, i32 0, i8 0, !14}
!13 = !{i32 0}
!14 = !{i32 3, i32 15}
!15 = !{i32 1, !"NORMAL", i8 9, i8 0, !13, i8 0, i32 1, i8 3, i32 1, i8 0, !16}
!16 = !{i32 3, i32 7}
!17 = !{i32 2, !"TEXCOORD", i8 9, i8 0, !13, i8 0, i32 1, i8 2, i32 2, i8 0, !18}
!18 = !{i32 3, i32 3}
!19 = !{i32 3, !"InstMatrix", i8 9, i8 0, !20, i8 0, i32 3, i8 4, i32 3, i8 0, !14}
!20 = !{i32 0, i32 1, i32 2}
!21 = !{!22, !23, !25, !27, !28}
!22 = !{i32 0, !"TEXCOORD", i8 9, i8 0, !13, i8 2, i32 1, i8 2, i32 0, i8 0, !18}
!23 = !{i32 1, !"TEXCOORD", i8 9, i8 0, !24, i8 2, i32 1, i8 4, i32 1, i8 0, !14}
!24 = !{i32 1}
!25 = !{i32 2, !"TEXCOORD", i8 9, i8 0, !26, i8 2, i32 1, i8 3, i32 2, i8 0, !16}
!26 = !{i32 2}
!27 = !{i32 3, !"COLOR", i8 9, i8 0, !13, i8 2, i32 1, i8 4, i32 3, i8 0, !14}
!28 = !{i32 4, !"SV_Position", i8 9, i8 3, !13, i8 4, i32 1, i8 4, i32 4, i8 0, !14}

;
; DUMPING SHADER HARDWARE INSTRUCTIONS 
;
// Shader Type               : (VS)
// Shader Hw Stage           : (VS)

// Shader Instructions:
shader main
  asic(CI)
  type(VS)
  s_swappc_b64  s[0:1], s[0:1]
  s_or_b32      s33, s12, 0x00100000 // wrscc
  s_mov_b32     s32, s11
  s_mov_b32     s34, -1
  s_mov_b32     s35, 0x00024fac
  s_buffer_load_dwordx8  s[16:23], s[32:35], 0x04
  s_buffer_load_dwordx4  s[36:39], s[32:35], 0x0c
  s_buffer_load_dwordx16  s[0:15], s[32:35], 0x14
  s_buffer_load_dwordx8  s[24:31], s[32:35], 0x24
  s_buffer_load_dwordx4  s[40:43], s[32:35], 0x2c
  s_waitcnt     vmcnt(0)
  v_mul_legacy_f32  v3, v16, v4
  v_mad_f32     v0, v8, 2.0, -1.0
  v_mul_legacy_f32  v8, v20, v4
  v_mul_legacy_f32  v4, v24, v4
  v_mac_legacy_f32  v3, v5, v17
  v_mac_legacy_f32  v8, v5, v21
  v_mac_legacy_f32  v4, v5, v25
  v_mac_legacy_f32  v3, v6, v18
  v_mac_legacy_f32  v8, v6, v22
  v_mac_legacy_f32  v4, v6, v26
  v_mad_f32     v1, v9, 2.0, -1.0
  v_mul_legacy_f32  v5, v16, v0
  v_mul_legacy_f32  v6, v20, v0
  v_mul_legacy_f32  v0, v24, v0
  v_mac_legacy_f32  v3, v7, v19
  v_mad_f32     v2, v10, 2.0, -1.0
  v_mac_legacy_f32  v5, v1, v17
  v_mac_legacy_f32  v6, v1, v21
  v_mac_legacy_f32  v0, v1, v25
  v_mac_legacy_f32  v8, v7, v23
  s_waitcnt     lgkmcnt(0)
  v_mul_legacy_f32  v1, s12, v3
  v_mul_legacy_f32  v9, s28, v3
  v_mul_legacy_f32  v10, s40, v3
  v_mul_legacy_f32  v11, s16, v3
  v_mul_legacy_f32  v14, s20, v3
  v_mac_legacy_f32  v5, v2, v18
  v_mac_legacy_f32  v6, v2, v22
  v_mac_legacy_f32  v0, v2, v26
  v_mul_legacy_f32  v2, s24, v3
  v_mul_legacy_f32  v3, s36, v3
  v_mac_legacy_f32  v4, v7, v27
  v_mac_legacy_f32  v1, s13, v8
  v_mac_legacy_f32  v2, s25, v8
  v_mac_legacy_f32  v9, s29, v8
  v_mac_legacy_f32  v10, s41, v8
  v_mac_legacy_f32  v11, s17, v8
  v_mac_legacy_f32  v14, s21, v8
  v_mac_legacy_f32  v3, s37, v8
  v_mac_legacy_f32  v1, s14, v4
  v_mac_legacy_f32  v2, s26, v4
  v_mac_legacy_f32  v9, s30, v4
  v_mac_legacy_f32  v10, s42, v4
  v_mac_legacy_f32  v11, s18, v4
  v_mac_legacy_f32  v14, s22, v4
  v_mac_legacy_f32  v3, s38, v4
  v_mac_legacy_f32  v1, s15, v7
  v_mac_legacy_f32  v2, s27, v7
  v_mac_legacy_f32  v9, s31, v7
  v_mac_legacy_f32  v10, s43, v7
  v_mac_legacy_f32  v11, s19, v7
  v_mac_legacy_f32  v14, s23, v7
  v_mac_legacy_f32  v3, s39, v7
  v_mul_legacy_f32  v7, s4, v5
  v_mul_legacy_f32  v4, s0, v5
  v_mac_legacy_f32  v7, s5, v6
  v_mul_legacy_f32  v5, s8, v5
  v_mac_legacy_f32  v4, s1, v6
  v_mac_legacy_f32  v7, s6, v0
  v_mac_legacy_f32  v5, s9, v6
  v_mac_legacy_f32  v4, s2, v0
  v_mad_legacy_f32  v0, v0, s10, v5
  v_mul_legacy_f32  v5, v7, v7
  v_mac_legacy_f32  v5, v4, v4
  v_mac_legacy_f32  v5, v0, v0
  s_buffer_load_dwordx4  s[0:3], s[32:35], 0x58
  v_rsq_f32     v5, v5
  exp           pos0, v1, v2, v9, v10 done
  s_waitcnt     expcnt(0)
  v_mov_b32     v1, 0
  v_mov_b32     v2, 1.0
  v_mul_legacy_f32  v6, v5, v7
  v_mul_legacy_f32  v4, v5, v4
  v_mul_legacy_f32  v0, v5, v0
  s_waitcnt     lgkmcnt(0)
  v_mov_b32     v5, s0
  v_mov_b32     v7, s1
  v_mov_b32     v8, s2
  v_mov_b32     v15, s3
  exp           param0, v12, v13, v1, v2
  exp           param1, v11, v14, v3, v2
  exp           param2, v4, v6, v0, v2
  exp           param3, v5, v7, v8, v15
  s_endpgm      
end


NumVGPR=28,NumSGPR=46,LDS=0,Scratch=0,Occpancy=9

// Shader Type               : (VS)
// Shader Hw Stage           : (ES)

// Shader Instructions:
shader main
  asic(CI)
  type(VS)
  s_swappc_b64  s[0:1], s[0:1]
  s_or_b32      s41, s12, 0x00100000 // wrscc
  s_mov_b32     s40, s11
  s_mov_b32     s42, -1
  s_mov_b32     s43, 0x00024fac
  s_buffer_load_dwordx8  s[4:11], s[40:43], 0x04
  s_buffer_load_dwordx4  s[44:47], s[40:43], 0x0c
  s_buffer_load_dwordx16  s[16:31], s[40:43], 0x14
  s_buffer_load_dwordx8  s[32:39], s[40:43], 0x24
  s_buffer_load_dwordx4  s[48:51], s[40:43], 0x2c
  s_waitcnt     vmcnt(0)
  v_mul_legacy_f32  v3, v16, v4
  v_mad_f32     v0, v8, 2.0, -1.0
  v_mul_legacy_f32  v8, v20, v4
  v_mul_legacy_f32  v4, v24, v4
  v_mac_legacy_f32  v3, v5, v17
  v_mac_legacy_f32  v8, v5, v21
  v_mac_legacy_f32  v4, v5, v25
  v_mac_legacy_f32  v3, v6, v18
  v_mac_legacy_f32  v8, v6, v22
  v_mac_legacy_f32  v4, v6, v26
  v_mad_f32     v1, v9, 2.0, -1.0
  v_mul_legacy_f32  v5, v16, v0
  v_mul_legacy_f32  v6, v20, v0
  v_mul_legacy_f32  v0, v24, v0
  v_mac_legacy_f32  v3, v7, v19
  v_mad_f32     v2, v10, 2.0, -1.0
  v_mac_legacy_f32  v5, v1, v17
  v_mac_legacy_f32  v6, v1, v21
  v_mac_legacy_f32  v0, v1, v25
  v_mac_legacy_f32  v8, v7, v23
  s_waitcnt     lgkmcnt(0)
  v_mul_legacy_f32  v1, s28, v3
  v_mul_legacy_f32  v9, s36, v3
  v_mul_legacy_f32  v10, s48, v3
  v_mul_legacy_f32  v11, s4, v3
  v_mul_legacy_f32  v14, s8, v3
  v_mac_legacy_f32  v5, v2, v18
  v_mac_legacy_f32  v6, v2, v22
  v_mac_legacy_f32  v0, v2, v26
  v_mul_legacy_f32  v2, s32, v3
  v_mul_legacy_f32  v3, s44, v3
  v_mac_legacy_f32  v4, v7, v27
  v_mac_legacy_f32  v1, s29, v8
  v_mac_legacy_f32  v2, s33, v8
  v_mac_legacy_f32  v9, s37, v8
  v_mac_legacy_f32  v10, s49, v8
  v_mac_legacy_f32  v11, s5, v8
  v_mac_legacy_f32  v14, s9, v8
  v_mac_legacy_f32  v3, s45, v8
  v_mac_legacy_f32  v1, s30, v4
  v_mac_legacy_f32  v2, s34, v4
  v_mac_legacy_f32  v9, s38, v4
  v_mac_legacy_f32  v10, s50, v4
  v_mac_legacy_f32  v11, s6, v4
  v_mac_legacy_f32  v14, s10, v4
  v_mac_legacy_f32  v3, s46, v4
  v_mac_legacy_f32  v11, s7, v7
  v_mac_legacy_f32  v1, s31, v7
  v_mac_legacy_f32  v2, s35, v7
  v_mac_legacy_f32  v9, s39, v7
  v_mac_legacy_f32  v10, s51, v7
  v_mac_legacy_f32  v14, s11, v7
  v_mac_legacy_f32  v3, s47, v7
  v_mul_legacy_f32  v7, s20, v5
  v_mul_legacy_f32  v4, s16, v5
  v_mac_legacy_f32  v7, s21, v6
  v_mul_legacy_f32  v5, s24, v5
  v_mac_legacy_f32  v4, s17, v6
  v_mac_legacy_f32  v7, s22, v0
  v_mac_legacy_f32  v5, s25, v6
  v_mac_legacy_f32  v4, s18, v0
  v_mad_legacy_f32  v0, v0, s26, v5
  v_mul_legacy_f32  v5, v7, v7
  s_mov_b32     s1, 0
  v_mac_legacy_f32  v5, v4, v4
  v_mac_legacy_f32  v5, v0, v0
  s_buffer_load_dwordx4  s[4:7], s[40:43], 0x58
  s_load_dwordx4  s[0:3], s[0:1], 0x08
  v_rsq_f32     v5, v5
  s_waitcnt     lgkmcnt(0)
  v_mov_b32     v8, s6
  v_mul_legacy_f32  v6, v5, v7
  buffer_store_dword  v1, v0, s[0:3], s15 offset:64 glc slc
  buffer_store_dword  v2, v0, s[0:3], s15 offset:68 glc slc
  buffer_store_dword  v9, v0, s[0:3], s15 offset:72 glc slc
  buffer_store_dword  v10, v0, s[0:3], s15 offset:76 glc slc
  buffer_store_dword  v12, v0, s[0:3], s15 glc slc
  buffer_store_dword  v13, v0, s[0:3], s15 offset:4 glc slc
  buffer_store_dword  v11, v0, s[0:3], s15 offset:16 glc slc
  buffer_store_dword  v14, v0, s[0:3], s15 offset:20 glc slc
  buffer_store_dword  v3, v0, s[0:3], s15 offset:24 glc slc
  v_mul_legacy_f32  v4, v5, v4
  v_mul_legacy_f32  v0, v5, v0
  v_mov_b32     v1, 1.0
  v_mov_b32     v5, s4
  v_mov_b32     v7, s5
  v_mov_b32     v15, s7
  buffer_store_dword  v1, v0, s[0:3], s15 offset:28 glc slc
  buffer_store_dword  v4, v0, s[0:3], s15 offset:32 glc slc
  buffer_store_dword  v6, v0, s[0:3], s15 offset:36 glc slc
  buffer_store_dword  v0, v0, s[0:3], s15 offset:40 glc slc
  buffer_store_dword  v5, v0, s[0:3], s15 offset:48 glc slc
  buffer_store_dword  v7, v0, s[0:3], s15 offset:52 glc slc
  buffer_store_dword  v8, v0, s[0:3], s15 offset:56 glc slc
  buffer_store_dword  v15, v0, s[0:3], s15 offset:60 glc slc
  s_endpgm      
end


NumVGPR=28,NumSGPR=54,LDS=0,Scratch=0,Occpancy=9

// Shader Type               : (VS)
// Shader Hw Stage           : (LS)

// Shader Instructions:
shader main
  asic(CI)
  type(VS)
  s_swappc_b64  s[0:1], s[0:1]
  s_waitcnt     vmcnt(0)
  v_mad_f32     v0, v8, 2.0, -1.0
  v_mul_legacy_f32  v8, v16, v4
  v_mac_legacy_f32  v8, v5, v17
  v_mac_legacy_f32  v8, v6, v18
  v_mad_f32     v3, v10, 2.0, -1.0
  v_mad_legacy_f32  v10, v7, v19, v8
  v_mul_legacy_f32  v8, v20, v4
  v_mul_legacy_f32  v4, v24, v4
  v_mac_legacy_f32  v4, v5, v25
  s_or_b32      s33, s12, 0x00100000 // wrscc
  s_mov_b32     s32, s11
  s_mov_b32     s34, -1
  s_mov_b32     s35, 0x00024fac
  v_mac_legacy_f32  v8, v5, v21
  s_buffer_load_dwordx8  s[16:23], s[32:35], 0x04
  s_buffer_load_dwordx4  s[36:39], s[32:35], 0x0c
  s_buffer_load_dwordx16  s[0:15], s[32:35], 0x14
  v_mac_legacy_f32  v4, v6, v26
  v_mac_legacy_f32  v8, v6, v22
  v_mad_legacy_f32  v6, v7, v27, v4
  v_mad_f32     v2, v9, 2.0, -1.0
  v_mul_legacy_f32  v4, v16, v0
  v_mac_legacy_f32  v4, v2, v17
  v_mad_legacy_f32  v14, v3, v18, v4
  v_mul_legacy_f32  v4, v20, v0
  v_mul_legacy_f32  v0, v24, v0
  s_buffer_load_dwordx8  s[24:31], s[32:35], 0x24
  v_mac_legacy_f32  v0, v2, v25
  v_mad_legacy_f32  v11, v7, v23, v8
  v_mad_legacy_f32  v16, v3, v26, v0
  s_buffer_load_dwordx4  s[40:43], s[32:35], 0x2c
  s_waitcnt     lgkmcnt(0)
  v_mul_legacy_f32  v0, s12, v10
  v_mac_legacy_f32  v0, s13, v11
  v_mac_legacy_f32  v0, s14, v6
  v_mac_legacy_f32  v4, v2, v21
  v_mad_legacy_f32  v2, v7, s15, v0
  v_mul_legacy_f32  v0, s24, v10
  v_mac_legacy_f32  v0, s25, v11
  v_mac_legacy_f32  v0, s26, v6
  v_mad_legacy_f32  v15, v3, v22, v4
  v_mad_legacy_f32  v3, v7, s27, v0
  v_mul_legacy_f32  v0, s28, v10
  v_mac_legacy_f32  v0, s29, v11
  v_mac_legacy_f32  v0, s30, v6
  v_mad_legacy_f32  v4, v7, s31, v0
  v_mul_legacy_f32  v0, s40, v10
  v_mac_legacy_f32  v0, s41, v11
  v_mac_legacy_f32  v0, s42, v6
  v_mad_legacy_f32  v5, v7, s43, v0
  v_mul_legacy_f32  v0, s16, v10
  v_mac_legacy_f32  v0, s17, v11
  v_mac_legacy_f32  v0, s18, v6
  v_mad_legacy_f32  v8, v7, s19, v0
  v_mul_legacy_f32  v0, s20, v10
  v_mac_legacy_f32  v0, s21, v11
  v_mac_legacy_f32  v0, s22, v6
  v_mad_legacy_f32  v9, v7, s23, v0
  v_mul_legacy_f32  v0, s36, v10
  v_mac_legacy_f32  v0, s37, v11
  v_mac_legacy_f32  v0, s38, v6
  v_mac_legacy_f32  v0, s39, v7
  v_mul_legacy_f32  v7, s4, v14
  v_mul_legacy_f32  v6, s0, v14
  v_mac_legacy_f32  v7, s5, v15
  v_mac_legacy_f32  v6, s1, v15
  v_mul_legacy_f32  v10, s8, v14
  v_mac_legacy_f32  v7, s6, v16
  v_mac_legacy_f32  v10, s9, v15
  v_mac_legacy_f32  v6, s2, v16
  v_mul_legacy_f32  v11, v7, v7
  v_mac_legacy_f32  v10, s10, v16
  v_mac_legacy_f32  v11, v6, v6
  v_mac_legacy_f32  v11, v10, v10
  v_rsq_f32     v11, v11
  s_buffer_load_dwordx4  s[0:3], s[32:35], 0x58
  s_movk_i32    s4, 0x0050
  s_mov_b32     m0, -1
  v_mul_legacy_f32  v6, v11, v6
  v_mul_legacy_f32  v7, v11, v7
  v_mul_legacy_f32  v10, v11, v10
  v_mul_lo_i32  v11, v1, s4
  v_mov_b32     v1, 1.0
  ds_write2_b64  v11, v[2:3], v[4:5] offset0:8 offset1:9
  ds_write2_b64  v11, v[12:13], v[0:1] offset1:3
  ds_write_b32  v11, v10 offset:40
  ds_write2_b64  v11, v[8:9], v[6:7] offset0:2 offset1:4
  s_waitcnt     lgkmcnt(0)
  v_mov_b32     v0, s2
  v_mov_b32     v1, s3
  v_mov_b32     v2, s0
  v_mov_b32     v3, s1
  ds_write2_b64  v11, v[2:3], v[0:1] offset0:6 offset1:7
  s_endpgm      
end


NumVGPR=28,NumSGPR=46,LDS=0,Scratch=0,Occpancy=9


#endif

const unsigned char PBREffect_VSConstantBnInst[] = {
  0x44, 0x58, 0x42, 0x43, 0x9e, 0x39, 0xe4, 0x0f, 0xb0, 0x3b, 0xe2, 0xf7,
  0x5c, 0x03, 0xdb, 0x8b, 0xe1, 0xb8, 0x63, 0x53, 0x01, 0x00, 0x00, 0x00,
  0x98, 0x1f, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00,
  0x50, 0x00, 0x00, 0x00, 0x48, 0x01, 0x00, 0x00, 0x14, 0x02, 0x00, 0x00,
  0xdc, 0x03, 0x00, 0x00, 0x64, 0x05, 0x00, 0x00, 0xf0, 0x05, 0x00, 0x00,
  0x0c, 0x06, 0x00, 0x00, 0x53, 0x46, 0x49, 0x30, 0x08, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x49, 0x53, 0x47, 0x31,
  0xf0, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xc8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x0f, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xd4, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x07, 0x07, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xdb, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x03, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xe4, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x0f, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xe4, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x0f, 0x0f, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe4, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x05, 0x00, 0x00, 0x00, 0x0f, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x53, 0x56, 0x5f, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x00,
  0x4e, 0x4f, 0x52, 0x4d, 0x41, 0x4c, 0x00, 0x54, 0x45, 0x58, 0x43, 0x4f,
  0x4f, 0x52, 0x44, 0x00, 0x49, 0x6e, 0x73, 0x74, 0x4d, 0x61, 0x74, 0x72,
  0x69, 0x78, 0x00, 0x00, 0x4f, 0x53, 0x47, 0x31, 0xc4, 0x00, 0x00, 0x00,
  0x05, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xa8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x0c, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xa8, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xa8, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x07, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xb1, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb7, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x04, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x54, 0x45, 0x58, 0x43, 0x4f, 0x4f, 0x52, 0x44, 0x00, 0x43, 0x4f, 0x4c,
  0x4f, 0x52, 0x00, 0x53, 0x56, 0x5f, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69,
  0x6f, 0x6e, 0x00, 0x00, 0x50, 0x53, 0x56, 0x30, 0xc0, 0x01, 0x00, 0x00,
  0x34, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xff, 0xff, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x04, 0x05, 0x00, 0x06,
  0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x49, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x18, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x5c, 0x00, 0x00, 0x00, 0x00, 0x53, 0x56, 0x5f,
  0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x00, 0x4e, 0x4f, 0x52,
  0x4d, 0x41, 0x4c, 0x00, 0x54, 0x45, 0x58, 0x43, 0x4f, 0x4f, 0x52, 0x44,
  0x00, 0x49, 0x6e, 0x73, 0x74, 0x4d, 0x61, 0x74, 0x72, 0x69, 0x78, 0x00,
  0x54, 0x45, 0x58, 0x43, 0x4f, 0x4f, 0x52, 0x44, 0x00, 0x54, 0x45, 0x58,
  0x43, 0x4f, 0x4f, 0x52, 0x44, 0x00, 0x54, 0x45, 0x58, 0x43, 0x4f, 0x4f,
  0x52, 0x44, 0x00, 0x43, 0x4f, 0x4c, 0x4f, 0x52, 0x00, 0x56, 0x53, 0x43,
  0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x42, 0x6e, 0x49, 0x6e, 0x73,
  0x74, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x10, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x44, 0x00, 0x03, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x43, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x02, 0x42, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x03, 0x03, 0x44, 0x00, 0x03, 0x00, 0x00, 0x00, 0x28, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x42, 0x00, 0x03, 0x02, 0x00, 0x00,
  0x31, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x01, 0x44, 0x00,
  0x03, 0x02, 0x00, 0x00, 0x3a, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x01, 0x02, 0x43, 0x00, 0x03, 0x02, 0x00, 0x00, 0x43, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x03, 0x44, 0x00, 0x03, 0x02, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x04, 0x44, 0x03,
  0x03, 0x04, 0x00, 0x00, 0x70, 0x00, 0x0f, 0x00, 0x70, 0x00, 0x0f, 0x00,
  0x70, 0x00, 0x0f, 0x00, 0x70, 0x00, 0x0f, 0x00, 0x00, 0x07, 0x00, 0x00,
  0x00, 0x07, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x70, 0x07, 0x0f, 0x00, 0x70, 0x07, 0x0f, 0x00,
  0x70, 0x07, 0x0f, 0x00, 0x70, 0x00, 0x0f, 0x00, 0x70, 0x07, 0x0f, 0x00,
  0x70, 0x07, 0x0f, 0x00, 0x70, 0x07, 0x0f, 0x00, 0x70, 0x00, 0x0f, 0x00,
  0x70, 0x07, 0x0f, 0x00, 0x70, 0x07, 0x0f, 0x00, 0x70, 0x07, 0x0f, 0x00,
  0x70, 0x00, 0x0f, 0x00, 0x52, 0x54, 0x53, 0x30, 0x80, 0x01, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x80, 0x01, 0x00, 0x00, 0x1d, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x90, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xac, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc8, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe4, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1c, 0x01, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x01, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x54, 0x01, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x01, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x78, 0x01, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x98, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xff, 0xff, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0xb4, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00,
  0xd0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff,
  0x01, 0x00, 0x00, 0x00, 0xec, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xff, 0xff, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x08, 0x01, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00,
  0x24, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff,
  0x01, 0x00, 0x00, 0x00, 0x40, 0x01, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xff, 0xff, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x5c, 0x01, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x49, 0x4c, 0x44, 0x4e, 0x84, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0x00,
  0x43, 0x3a, 0x5c, 0x55, 0x73, 0x65, 0x72, 0x73, 0x5c, 0x6d, 0x61, 0x72,
  0x63, 0x75, 0x5c, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x73,
  0x5c, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x58, 0x54, 0x4b, 0x31, 0x32,
  0x2d, 0x6d, 0x61, 0x69, 0x6e, 0x5c, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74,
  0x58, 0x54, 0x4b, 0x31, 0x32, 0x2d, 0x6d, 0x61, 0x69, 0x6e, 0x5c, 0x53,
  0x72, 0x63, 0x2f, 0x53, 0x68, 0x61, 0x64, 0x65, 0x72, 0x73, 0x2f, 0x43,
  0x6f, 0x6d, 0x70, 0x69, 0x6c, 0x65, 0x64, 0x5c, 0x58, 0x62, 0x6f, 0x78,
  0x47, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x58, 0x62, 0x6f, 0x78, 0x4f, 0x6e,
  0x65, 0x50, 0x42, 0x52, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x5f, 0x56,
  0x53, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x42, 0x6e, 0x49,
  0x6e, 0x73, 0x74, 0x2e, 0x70, 0x64, 0x62, 0x00, 0x48, 0x41, 0x53, 0x48,
  0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x21, 0xdd, 0x5d, 0x3e,
  0x63, 0x7a, 0xdd, 0x46, 0xde, 0x71, 0x1f, 0x8a, 0x8e, 0x33, 0x7c, 0x98,
  0x44, 0x58, 0x49, 0x4c, 0x84, 0x19, 0x00, 0x00, 0x60, 0x00, 0x01, 0x00,
  0x61, 0x06, 0x00, 0x00, 0x44, 0x58, 0x49, 0x4c, 0x00, 0x01, 0x00, 0x00,
  0x94, 0x00, 0x00, 0x00, 0x14, 0x0d, 0x00, 0x00, 0x58, 0x44, 0x41, 0x54,
  0x08, 0x00, 0x00, 0x00, 0x24, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00,
  0x84, 0x00, 0x00, 0x00, 0x2c, 0x0d, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00,
  0xb0, 0x0d, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xc0, 0x0d, 0x00, 0x00, 0xd6, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x98, 0x10, 0x00, 0x00, 0x15, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xb0, 0x13, 0x00, 0x00, 0xf1, 0x02, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0xa4, 0x16, 0x00, 0x00, 0x38, 0x02, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00,
  0xdc, 0x18, 0x00, 0x00, 0x91, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00,
  0x70, 0x19, 0x00, 0x00, 0x11, 0x00, 0x00, 0x00, 0x60, 0x00, 0x01, 0x00,
  0x4b, 0x03, 0x00, 0x00, 0x44, 0x58, 0x49, 0x4c, 0x00, 0x01, 0x00, 0x00,
  0x10, 0x00, 0x00, 0x00, 0x14, 0x0d, 0x00, 0x00, 0x42, 0x43, 0xc0, 0xde,
  0x21, 0x0c, 0x00, 0x00, 0x42, 0x03, 0x00, 0x00, 0x0b, 0x82, 0x20, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x13, 0x00, 0x00, 0x00, 0x07, 0x81, 0x23, 0x91,
  0x41, 0xc8, 0x04, 0x49, 0x06, 0x10, 0x32, 0x39, 0x92, 0x01, 0x84, 0x0c,
  0x25, 0x05, 0x08, 0x19, 0x1e, 0x04, 0x8b, 0x62, 0x80, 0x18, 0x45, 0x02,
  0x42, 0x92, 0x0b, 0x42, 0xc4, 0x10, 0x32, 0x14, 0x38, 0x08, 0x18, 0x4b,
  0x0a, 0x32, 0x62, 0x88, 0x48, 0x90, 0x14, 0x20, 0x43, 0x46, 0x88, 0xa5,
  0x00, 0x19, 0x32, 0x42, 0xe4, 0x48, 0x0e, 0x90, 0x11, 0x23, 0xc4, 0x50,
  0x41, 0x51, 0x81, 0x8c, 0xe1, 0x83, 0xe5, 0x8a, 0x04, 0x31, 0x46, 0x06,
  0x51, 0x18, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x1b, 0x8c, 0xe0, 0xff,
  0xff, 0xff, 0xff, 0x07, 0x40, 0x02, 0xa8, 0x0d, 0x84, 0xf0, 0xff, 0xff,
  0xff, 0xff, 0x03, 0x20, 0x6d, 0x30, 0x86, 0xff, 0xff, 0xff, 0xff, 0x1f,
  0x00, 0x09, 0xa8, 0x00, 0x49, 0x18, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x13, 0x82, 0x60, 0x42, 0x20, 0x4c, 0x08, 0x06, 0x00, 0x00, 0x00, 0x00,
  0x89, 0x20, 0x00, 0x00, 0x2d, 0x00, 0x00, 0x00, 0x32, 0x22, 0x88, 0x09,
  0x20, 0x64, 0x85, 0x04, 0x13, 0x23, 0xa4, 0x84, 0x04, 0x13, 0x23, 0xe3,
  0x84, 0xa1, 0x90, 0x14, 0x12, 0x4c, 0x8c, 0x8c, 0x0b, 0x84, 0xc4, 0x4c,
  0x10, 0x80, 0xc1, 0x08, 0x40, 0x09, 0x00, 0x0a, 0x66, 0x00, 0xe6, 0x08,
  0xc0, 0x60, 0x8e, 0x00, 0x29, 0xc6, 0x40, 0x10, 0x44, 0x41, 0x90, 0x51,
  0x0c, 0x80, 0x20, 0x88, 0x62, 0x20, 0xa4, 0x20, 0x03, 0x31, 0x0c, 0xc3,
  0x30, 0x0c, 0xa4, 0x94, 0x61, 0x20, 0x06, 0x62, 0x8e, 0x1a, 0x2e, 0x7f,
  0xc2, 0x1e, 0x42, 0xf2, 0xb9, 0x8d, 0x2a, 0x56, 0x62, 0xf2, 0x8b, 0xdb,
  0x46, 0xc4, 0x30, 0x0c, 0x03, 0x15, 0xf7, 0x0c, 0x97, 0x3f, 0x61, 0x0f,
  0x21, 0xf9, 0x21, 0xd0, 0x0c, 0x0b, 0x81, 0x82, 0xa7, 0x10, 0x0e, 0x01,
  0x11, 0x14, 0x95, 0x62, 0x20, 0x86, 0x61, 0xa0, 0x69, 0x8e, 0x20, 0x28,
  0x06, 0x44, 0x14, 0x04, 0x51, 0x91, 0x35, 0x10, 0x30, 0x8c, 0x30, 0x0c,
  0xc3, 0x08, 0xc4, 0x90, 0x04, 0x5a, 0x0e, 0x64, 0x47, 0x1d, 0x8e, 0x34,
  0x2d, 0x00, 0xe6, 0x50, 0x93, 0xcf, 0x39, 0x8d, 0x34, 0x01, 0xcd, 0x24,
  0x21, 0x27, 0xdb, 0xb8, 0x6d, 0xe3, 0xb8, 0x6c, 0x18, 0x06, 0x62, 0x18,
  0xa8, 0x4b, 0x0d, 0x02, 0x00, 0x00, 0x00, 0x00, 0x13, 0x16, 0x72, 0xc0,
  0x87, 0x74, 0x60, 0x87, 0x36, 0x68, 0x87, 0x79, 0x68, 0x03, 0x7c, 0x10,
  0x87, 0x38, 0xd8, 0xf0, 0x0a, 0xe5, 0xd0, 0x06, 0xed, 0xa0, 0x07, 0xe5,
  0xd0, 0x06, 0xf0, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x7a, 0x30, 0x07, 0x72,
  0xd0, 0x06, 0xe9, 0x10, 0x07, 0x7a, 0x30, 0x07, 0x72, 0xd0, 0x06, 0xe9,
  0x80, 0x07, 0x7a, 0x30, 0x07, 0x72, 0xd0, 0x06, 0xe9, 0x10, 0x07, 0x76,
  0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x90, 0x0e, 0x73, 0x20, 0x07, 0x7a,
  0x30, 0x07, 0x72, 0xd0, 0x06, 0xe9, 0x60, 0x07, 0x74, 0xa0, 0x07, 0x76,
  0x40, 0x07, 0x6d, 0x60, 0x0e, 0x71, 0x60, 0x07, 0x7a, 0x30, 0x07, 0x72,
  0xd0, 0x06, 0xe6, 0x30, 0x07, 0x72, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d,
  0x60, 0x0e, 0x76, 0x40, 0x07, 0x7a, 0x60, 0x07, 0x74, 0xd0, 0x06, 0xee,
  0x80, 0x07, 0x7a, 0x10, 0x07, 0x76, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x7a,
  0x60, 0x07, 0x74, 0x30, 0xe4, 0x09, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x60, 0xc8, 0x63, 0x00, 0x01, 0x10, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x90, 0x07, 0x01, 0x02, 0x40, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x21, 0x8f, 0x02, 0x04, 0x40,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x43, 0x1e, 0x06, 0x08,
  0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x86, 0x3c, 0x11,
  0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x79,
  0x26, 0x20, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18,
  0xf2, 0x58, 0x40, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x90, 0x05, 0x02, 0x00, 0x1c, 0x00, 0x00, 0x00, 0x32, 0x1e, 0x98, 0x14,
  0x19, 0x11, 0x4c, 0x90, 0x8c, 0x09, 0x26, 0x47, 0xc6, 0x04, 0x43, 0x22,
  0x4a, 0x60, 0x04, 0xa0, 0x20, 0x8a, 0xa1, 0x10, 0x0d, 0xca, 0xa0, 0x3c,
  0xca, 0xa1, 0x08, 0x0a, 0x81, 0x8a, 0x92, 0x18, 0x01, 0x28, 0x84, 0x32,
  0x28, 0x02, 0xf2, 0x66, 0x00, 0xe8, 0x1b, 0x4b, 0xc3, 0x28, 0x78, 0x04,
  0x3d, 0x78, 0x04, 0x3d, 0x78, 0x04, 0x3d, 0x78, 0x04, 0x3d, 0x10, 0x0f,
  0x40, 0x3c, 0x00, 0xf1, 0x00, 0x08, 0x04, 0x00, 0x80, 0xf7, 0xd0, 0x83,
  0xf7, 0xd0, 0x83, 0xf7, 0xd0, 0x83, 0x47, 0xd0, 0x83, 0xf7, 0xd0, 0x83,
  0xf7, 0xd0, 0x83, 0xf7, 0xd0, 0x83, 0x47, 0xd0, 0x83, 0xf7, 0xd0, 0x83,
  0xf7, 0xd0, 0x83, 0xf7, 0xd0, 0x83, 0x47, 0xd0, 0x03, 0x00, 0x00, 0x00,
  0x79, 0x18, 0x00, 0x00, 0x8a, 0x00, 0x00, 0x00, 0x1a, 0x03, 0x4c, 0x90,
  0x46, 0x02, 0x13, 0xc4, 0x36, 0xf8, 0xfa, 0xc2, 0x12, 0x7a, 0xc2, 0xfa,
  0x82, 0x2a, 0x92, 0xfa, 0xa2, 0x42, 0x92, 0x2a, 0x0a, 0x22, 0xfa, 0x9a,
  0x1a, 0x92, 0x0a, 0xa2, 0x1a, 0x42, 0xfa, 0x9a, 0x4a, 0xd2, 0x2a, 0xfa,
  0x62, 0x4a, 0x6a, 0x4a, 0xa2, 0xfa, 0x4a, 0x72, 0xfa, 0x12, 0xca, 0xa2,
  0x2a, 0x9a, 0x62, 0x00, 0xb3, 0x41, 0x08, 0x04, 0x76, 0x64, 0x78, 0x63,
  0x78, 0x62, 0x6f, 0x78, 0x20, 0x32, 0x34, 0x31, 0x30, 0x2e, 0x32, 0x34,
  0x31, 0x30, 0x2e, 0x31, 0x31, 0x31, 0x31, 0x36, 0x2e, 0x31, 0x30, 0x37,
  0x34, 0x31, 0x1b, 0x02, 0x62, 0x82, 0x40, 0x20, 0x13, 0x04, 0x22, 0xd9,
  0x20, 0x18, 0xc7, 0x04, 0x81, 0x50, 0x36, 0x08, 0x46, 0x42, 0xc1, 0x6e,
  0x6e, 0x82, 0x40, 0x2c, 0x1b, 0x86, 0x85, 0x39, 0x26, 0x08, 0xde, 0x45,
  0x60, 0x82, 0x40, 0x30, 0x1b, 0x90, 0xc3, 0x79, 0x8e, 0xc3, 0x80, 0x80,
  0x0d, 0x41, 0xb4, 0x81, 0x00, 0x00, 0x09, 0x98, 0x20, 0x7c, 0xd8, 0x86,
  0x80, 0x9a, 0x20, 0x08, 0x00, 0x21, 0xab, 0xa9, 0xa1, 0x37, 0xb7, 0x39,
  0xba, 0x30, 0x37, 0x3a, 0x21, 0xb7, 0x24, 0xb7, 0x39, 0x3a, 0x2e, 0x53,
  0x56, 0x5f, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x13, 0x84,
  0x42, 0x9a, 0x20, 0x14, 0xd3, 0x86, 0xe0, 0x98, 0x20, 0x14, 0xd4, 0x04,
  0x81, 0x68, 0x26, 0x08, 0x84, 0xb3, 0x41, 0xe8, 0xbc, 0x0d, 0xcb, 0x81,
  0x65, 0xda, 0xa6, 0x19, 0xdc, 0xa1, 0x7d, 0x34, 0x9c, 0x9e, 0xa4, 0x9a,
  0x82, 0x98, 0x26, 0x08, 0x45, 0x35, 0x41, 0x20, 0x9e, 0x0d, 0x42, 0x37,
  0x06, 0x1b, 0x16, 0x23, 0x0c, 0x32, 0x6d, 0xd3, 0x0c, 0x31, 0x30, 0x34,
  0x32, 0x98, 0x20, 0x10, 0x10, 0x11, 0xaa, 0x22, 0xac, 0xa1, 0xa7, 0x27,
  0x29, 0xa2, 0x09, 0x42, 0x61, 0x6d, 0x10, 0xba, 0x6e, 0xc3, 0x62, 0x06,
  0x67, 0x90, 0x69, 0x9b, 0x66, 0xa0, 0x81, 0x19, 0x68, 0x69, 0x40, 0x25,
  0xc9, 0x6d, 0x8e, 0xae, 0x29, 0x8c, 0x4e, 0x2e, 0x0d, 0x6f, 0xc3, 0x70,
  0x18, 0x66, 0xb0, 0x61, 0xe9, 0xd6, 0x20, 0xd3, 0xd8, 0x40, 0xeb, 0xb8,
  0x4e, 0xfb, 0x36, 0x10, 0x60, 0x50, 0x06, 0x6a, 0xd0, 0x06, 0x1b, 0x96,
  0xe3, 0x0c, 0x32, 0x6d, 0x43, 0x03, 0x03, 0x0d, 0x0e, 0x2d, 0x0d, 0x36,
  0x04, 0xc6, 0x86, 0xc5, 0x38, 0x83, 0x4c, 0x83, 0x03, 0x34, 0x30, 0x38,
  0x43, 0xfb, 0x36, 0x04, 0x66, 0xb0, 0x61, 0x31, 0x83, 0x33, 0xc8, 0x34,
  0x39, 0x40, 0x03, 0x43, 0x0c, 0xcc, 0x40, 0x23, 0x03, 0x16, 0x43, 0x4f,
  0x4c, 0x4f, 0x52, 0x1b, 0x96, 0x8e, 0x0e, 0x32, 0x6d, 0x43, 0x03, 0x83,
  0xeb, 0xb4, 0x6f, 0x82, 0x40, 0x44, 0x1b, 0x16, 0x3b, 0xc0, 0x32, 0x31,
  0xd8, 0x38, 0x83, 0xb3, 0x03, 0xed, 0xdb, 0x50, 0xbc, 0x41, 0x1c, 0xcc,
  0x41, 0x1d, 0xdc, 0xc1, 0x86, 0xc1, 0x0d, 0xf0, 0x00, 0xd8, 0x50, 0x58,
  0x57, 0x1e, 0x4c, 0x40, 0x2b, 0x3c, 0xb1, 0x37, 0x3c, 0x97, 0xb1, 0xb7,
  0x36, 0xb8, 0x34, 0xb6, 0x32, 0x39, 0x97, 0x37, 0x38, 0xba, 0xb4, 0x37,
  0xb7, 0xb9, 0x29, 0x81, 0x50, 0x85, 0x8d, 0xcd, 0xae, 0xcd, 0x25, 0x8d,
  0xac, 0xcc, 0x8d, 0x6e, 0x4a, 0x40, 0x54, 0x21, 0xc3, 0x73, 0xb1, 0x2b,
  0x93, 0x9b, 0x4b, 0x7b, 0x73, 0x9b, 0x12, 0x1c, 0x4d, 0xc8, 0xf0, 0x5c,
  0xec, 0xc2, 0xd8, 0xec, 0xca, 0xe4, 0xa6, 0x04, 0x49, 0x1d, 0x32, 0x3c,
  0x97, 0x39, 0xb4, 0x30, 0xb2, 0x32, 0xb9, 0xa6, 0x37, 0xb2, 0x32, 0xb6,
  0x29, 0x01, 0x53, 0x86, 0x0c, 0xcf, 0x45, 0xae, 0x6c, 0xee, 0xad, 0x4e,
  0x6e, 0xac, 0x6c, 0x6e, 0x4a, 0x20, 0xd5, 0x21, 0xc3, 0x73, 0xb1, 0x4b,
  0x2b, 0xbb, 0x4b, 0x22, 0x9b, 0xa2, 0x0b, 0xa3, 0x2b, 0x9b, 0x12, 0x50,
  0x75, 0xc8, 0xf0, 0x5c, 0xca, 0xdc, 0xe8, 0xe4, 0xf2, 0xa0, 0xde, 0xd2,
  0xdc, 0xe8, 0xe6, 0xa6, 0x04, 0x79, 0x00, 0x00, 0x79, 0x18, 0x00, 0x00,
  0x4c, 0x00, 0x00, 0x00, 0x33, 0x08, 0x80, 0x1c, 0xc4, 0xe1, 0x1c, 0x66,
  0x14, 0x01, 0x3d, 0x88, 0x43, 0x38, 0x84, 0xc3, 0x8c, 0x42, 0x80, 0x07,
  0x79, 0x78, 0x07, 0x73, 0x98, 0x71, 0x0c, 0xe6, 0x00, 0x0f, 0xed, 0x10,
  0x0e, 0xf4, 0x80, 0x0e, 0x33, 0x0c, 0x42, 0x1e, 0xc2, 0xc1, 0x1d, 0xce,
  0xa1, 0x1c, 0x66, 0x30, 0x05, 0x3d, 0x88, 0x43, 0x38, 0x84, 0x83, 0x1b,
  0xcc, 0x03, 0x3d, 0xc8, 0x43, 0x3d, 0x8c, 0x03, 0x3d, 0xcc, 0x78, 0x8c,
  0x74, 0x70, 0x07, 0x7b, 0x08, 0x07, 0x79, 0x48, 0x87, 0x70, 0x70, 0x07,
  0x7a, 0x70, 0x03, 0x76, 0x78, 0x87, 0x70, 0x20, 0x87, 0x19, 0xcc, 0x11,
  0x0e, 0xec, 0x90, 0x0e, 0xe1, 0x30, 0x0f, 0x6e, 0x30, 0x0f, 0xe3, 0xf0,
  0x0e, 0xf0, 0x50, 0x0e, 0x33, 0x10, 0xc4, 0x1d, 0xde, 0x21, 0x1c, 0xd8,
  0x21, 0x1d, 0xc2, 0x61, 0x1e, 0x66, 0x30, 0x89, 0x3b, 0xbc, 0x83, 0x3b,
  0xd0, 0x43, 0x39, 0xb4, 0x03, 0x3c, 0xbc, 0x83, 0x3c, 0x84, 0x03, 0x3b,
  0xcc, 0xf0, 0x14, 0x76, 0x60, 0x07, 0x7b, 0x68, 0x07, 0x37, 0x68, 0x87,
  0x72, 0x68, 0x07, 0x37, 0x80, 0x87, 0x70, 0x90, 0x87, 0x70, 0x60, 0x07,
  0x76, 0x28, 0x07, 0x76, 0xf8, 0x05, 0x76, 0x78, 0x87, 0x77, 0x80, 0x87,
  0x5f, 0x08, 0x87, 0x71, 0x18, 0x87, 0x72, 0x98, 0x87, 0x79, 0x98, 0x81,
  0x2c, 0xee, 0xf0, 0x0e, 0xee, 0xe0, 0x0e, 0xf5, 0xc0, 0x0e, 0xec, 0x30,
  0x03, 0x62, 0xc8, 0xa1, 0x1c, 0xe4, 0xa1, 0x1c, 0xcc, 0xa1, 0x1c, 0xe4,
  0xa1, 0x1c, 0xdc, 0x61, 0x1c, 0xca, 0x21, 0x1c, 0xc4, 0x81, 0x1d, 0xca,
  0x61, 0x06, 0xd6, 0x90, 0x43, 0x39, 0xc8, 0x43, 0x39, 0x98, 0x43, 0x39,
  0xc8, 0x43, 0x39, 0xb8, 0xc3, 0x38, 0x94, 0x43, 0x38, 0x88, 0x03, 0x3b,
  0x94, 0xc3, 0x2f, 0xbc, 0x83, 0x3c, 0xfc, 0x82, 0x3b, 0xd4, 0x03, 0x3b,
  0xb0, 0xc3, 0x0c, 0xc4, 0x21, 0x07, 0x7c, 0x70, 0x03, 0x7a, 0x28, 0x87,
  0x76, 0x80, 0x87, 0x19, 0xd1, 0x43, 0x0e, 0xf8, 0xe0, 0x06, 0xe4, 0x20,
  0x0e, 0xe7, 0xe0, 0x06, 0xf6, 0x10, 0x0e, 0xf2, 0xc0, 0x0e, 0xe1, 0x90,
  0x0f, 0xef, 0x50, 0x0f, 0xf4, 0x00, 0x00, 0x00, 0x71, 0x20, 0x00, 0x00,
  0x21, 0x00, 0x00, 0x00, 0x06, 0x00, 0xbd, 0x2c, 0xe7, 0x34, 0xd2, 0x04,
  0x34, 0xd3, 0xd6, 0x88, 0x8d, 0x34, 0x59, 0xc1, 0x36, 0x5c, 0xbe, 0xf3,
  0xf8, 0x42, 0x40, 0x15, 0x05, 0x11, 0x95, 0x0e, 0x30, 0x94, 0x84, 0x01,
  0x08, 0x98, 0x5f, 0xdc, 0xb6, 0x1d, 0x48, 0xc3, 0xe5, 0x3b, 0x8f, 0x2f,
  0x44, 0x04, 0x30, 0x11, 0x21, 0xd0, 0x0c, 0x0b, 0x61, 0x03, 0xce, 0x70,
  0xf9, 0xce, 0xe3, 0x0f, 0xce, 0x74, 0xfb, 0xc5, 0x6d, 0x5b, 0xc0, 0x34,
  0x5c, 0xbe, 0xf3, 0xf8, 0x8b, 0x03, 0x0c, 0x62, 0xf3, 0x50, 0x93, 0x5f,
  0xdc, 0xb6, 0x09, 0x54, 0xc3, 0xe5, 0x3b, 0x8f, 0x2f, 0x4d, 0x4e, 0x44,
  0xa0, 0xd4, 0xf4, 0x50, 0x93, 0x5f, 0xdc, 0xb6, 0x19, 0x48, 0xc3, 0xe5,
  0x3b, 0x8f, 0x3f, 0x11, 0xd1, 0x84, 0x00, 0x11, 0xe6, 0x17, 0xb7, 0x6d,
  0x04, 0xcf, 0x70, 0xf9, 0xce, 0xe3, 0x53, 0x0d, 0x10, 0x61, 0x7e, 0x71,
  0xdb, 0x00, 0x00, 0x00, 0x61, 0x20, 0x00, 0x00, 0x93, 0x01, 0x00, 0x00,
  0x13, 0x04, 0x41, 0x2c, 0x10, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00,
  0x54, 0x8d, 0x00, 0x50, 0x51, 0x02, 0x44, 0x14, 0x4b, 0x71, 0xcd, 0x00,
  0x94, 0x42, 0xd9, 0x95, 0x5c, 0x49, 0x14, 0x45, 0x59, 0x94, 0x5b, 0xc9,
  0xd0, 0x30, 0x46, 0x00, 0x82, 0x20, 0x88, 0x7f, 0x63, 0x04, 0x20, 0x08,
  0x82, 0xf8, 0x2f, 0x8c, 0x11, 0x80, 0x20, 0x08, 0x82, 0x60, 0x00, 0x00,
  0x23, 0x06, 0x09, 0x00, 0x82, 0x60, 0x60, 0x89, 0x41, 0x32, 0x81, 0x01,
  0x18, 0x40, 0x23, 0x06, 0x09, 0x00, 0x82, 0x60, 0x60, 0xa4, 0x41, 0xa6,
  0x85, 0xc1, 0xd5, 0x8c, 0x18, 0x24, 0x00, 0x08, 0x82, 0x81, 0xa1, 0x06,
  0xda, 0x26, 0x06, 0x91, 0x33, 0x62, 0x90, 0x00, 0x20, 0x08, 0x06, 0xc6,
  0x1a, 0x6c, 0x64, 0x30, 0x06, 0xd9, 0x33, 0x62, 0x90, 0x00, 0x20, 0x08,
  0x06, 0x06, 0x1b, 0x70, 0x65, 0x40, 0x06, 0x13, 0x34, 0x62, 0x90, 0x00,
  0x20, 0x08, 0x06, 0x46, 0x1b, 0x74, 0x66, 0x50, 0x06, 0x58, 0x34, 0x62,
  0x90, 0x00, 0x20, 0x08, 0x06, 0x86, 0x1b, 0x78, 0x66, 0x60, 0x06, 0x9c,
  0x34, 0x62, 0x90, 0x00, 0x20, 0x08, 0x06, 0xc6, 0x1b, 0x7c, 0x67, 0x70,
  0x06, 0xd6, 0x34, 0x62, 0x90, 0x00, 0x20, 0x08, 0x06, 0x06, 0x1c, 0x80,
  0x01, 0x1a, 0xa0, 0xc1, 0x46, 0x8d, 0x18, 0x24, 0x00, 0x08, 0x82, 0x81,
  0x11, 0x07, 0x61, 0x90, 0x06, 0x69, 0xd0, 0x55, 0x23, 0x06, 0x09, 0x00,
  0x82, 0x60, 0x60, 0xc8, 0x81, 0x18, 0x98, 0x81, 0x1a, 0x80, 0x81, 0x35,
  0x62, 0x90, 0x00, 0x20, 0x08, 0x06, 0xc6, 0x1c, 0x8c, 0xc1, 0x19, 0xac,
  0x81, 0x76, 0x8d, 0x18, 0x24, 0x00, 0x08, 0x82, 0x81, 0x41, 0x07, 0x64,
  0x80, 0x06, 0x6c, 0xf0, 0x61, 0x23, 0x06, 0x09, 0x00, 0x82, 0x60, 0x60,
  0xd4, 0x41, 0x19, 0xa4, 0x41, 0x1b, 0x84, 0x41, 0x36, 0x62, 0x90, 0x00,
  0x20, 0x08, 0x06, 0x86, 0x1d, 0x98, 0x81, 0x1a, 0xbc, 0x01, 0x19, 0x68,
  0x23, 0x06, 0x09, 0x00, 0x82, 0x60, 0x60, 0xdc, 0xc1, 0x19, 0xac, 0x01,
  0x1c, 0x78, 0xdb, 0x88, 0x41, 0x02, 0x80, 0x20, 0x18, 0x18, 0x78, 0x80,
  0x06, 0x6c, 0x10, 0x07, 0x63, 0xc0, 0x8d, 0x18, 0x24, 0x00, 0x08, 0x82,
  0x81, 0x91, 0x07, 0x69, 0xd0, 0x06, 0x72, 0x50, 0x06, 0xdd, 0x88, 0x41,
  0x02, 0x80, 0x20, 0x18, 0x18, 0x7a, 0xa0, 0x06, 0x6e, 0xb0, 0x06, 0x68,
  0xe0, 0x8d, 0x18, 0x24, 0x00, 0x08, 0x82, 0x81, 0xb1, 0x07, 0x6b, 0xf0,
  0x06, 0x6c, 0x20, 0x06, 0xdf, 0x88, 0x41, 0x02, 0x80, 0x20, 0x18, 0x18,
  0x7c, 0xc0, 0x06, 0x70, 0xd0, 0x06, 0x67, 0x00, 0x06, 0x23, 0x06, 0x09,
  0x00, 0x82, 0x60, 0x60, 0xf4, 0x41, 0x1b, 0xc4, 0x81, 0x1b, 0xa4, 0x41,
  0x18, 0xd8, 0x74, 0xc9, 0xc7, 0x26, 0x4c, 0x3e, 0x36, 0x65, 0xf2, 0xb1,
  0x61, 0x83, 0x8f, 0x0d, 0x1c, 0x7c, 0x6c, 0xe8, 0xe0, 0x63, 0x92, 0x25,
  0x9f, 0x11, 0x03, 0x04, 0x00, 0x41, 0x30, 0x98, 0x40, 0x41, 0x0d, 0x2c,
  0x29, 0x18, 0x31, 0x40, 0x00, 0x10, 0x04, 0x83, 0x29, 0x14, 0xd6, 0xc0,
  0x92, 0x82, 0x11, 0x03, 0x04, 0x00, 0x41, 0x30, 0x98, 0x44, 0x81, 0x0d,
  0x2c, 0x29, 0x30, 0x49, 0x93, 0xcf, 0x88, 0x01, 0x02, 0x80, 0x20, 0x18,
  0x4c, 0xa4, 0xe0, 0x06, 0x9a, 0x14, 0x8c, 0x18, 0x20, 0x00, 0x08, 0x82,
  0xc1, 0x54, 0x0a, 0x6f, 0xa0, 0x49, 0xc1, 0x88, 0x01, 0x02, 0x80, 0x20,
  0x18, 0x4c, 0xa6, 0x00, 0x07, 0x9a, 0x14, 0x98, 0xe4, 0xc9, 0x67, 0xc4,
  0x00, 0x01, 0x40, 0x10, 0x0c, 0x26, 0x54, 0x90, 0x03, 0x4f, 0x0a, 0x46,
  0x0c, 0x10, 0x00, 0x04, 0xc1, 0x60, 0x4a, 0x85, 0x39, 0xf0, 0xa4, 0x60,
  0xc4, 0x00, 0x01, 0x40, 0x10, 0x0c, 0x26, 0x55, 0xa0, 0x03, 0x4f, 0x0a,
  0xcc, 0x7b, 0xe4, 0x33, 0x62, 0x80, 0x00, 0x20, 0x08, 0x06, 0x13, 0x2b,
  0xd8, 0xc1, 0xe3, 0x05, 0x23, 0x06, 0x08, 0x00, 0x82, 0x60, 0x30, 0xb5,
  0xc2, 0x1d, 0x3c, 0x5e, 0x60, 0x9d, 0x24, 0x9f, 0x11, 0x03, 0x04, 0x00,
  0x41, 0x30, 0x98, 0x5e, 0x21, 0x0f, 0xa4, 0x2e, 0x18, 0x31, 0x40, 0x00,
  0x10, 0x04, 0x83, 0x09, 0x16, 0xf4, 0x40, 0xea, 0x02, 0xe3, 0x2a, 0xf9,
  0x8c, 0x18, 0x20, 0x00, 0x08, 0x82, 0xc1, 0x24, 0x0b, 0x7c, 0x50, 0x71,
  0xc1, 0x88, 0x01, 0x02, 0x80, 0x20, 0x18, 0x4c, 0xb3, 0xd0, 0x07, 0x15,
  0x17, 0x8c, 0x18, 0x1c, 0x00, 0x08, 0x82, 0x41, 0x54, 0x0b, 0x7b, 0x10,
  0x07, 0xb0, 0x30, 0x9a, 0x10, 0x00, 0xa3, 0x09, 0x42, 0x30, 0x9a, 0x30,
  0x08, 0xa3, 0x09, 0xc4, 0x30, 0x62, 0x70, 0x00, 0x20, 0x08, 0x06, 0x91,
  0x2e, 0x80, 0x82, 0x1d, 0xf8, 0xc1, 0x68, 0x42, 0x00, 0x8c, 0x26, 0x08,
  0xc1, 0x68, 0xc2, 0x20, 0x8c, 0x26, 0x10, 0xc3, 0x88, 0xc1, 0x01, 0x80,
  0x20, 0x18, 0x44, 0xbf, 0x50, 0x0a, 0x7b, 0x20, 0x0a, 0xa3, 0x09, 0x01,
  0x30, 0x9a, 0x20, 0x04, 0xa3, 0x09, 0x83, 0x30, 0x9a, 0x40, 0x0c, 0x23,
  0x06, 0x07, 0x00, 0x82, 0x60, 0x10, 0x91, 0x83, 0x2a, 0x80, 0x82, 0x29,
  0x8c, 0x26, 0x04, 0xc0, 0x68, 0x82, 0x10, 0x8c, 0x26, 0x0c, 0xc2, 0x68,
  0x02, 0x31, 0xd8, 0x64, 0x06, 0xf2, 0x19, 0x31, 0x40, 0x00, 0x10, 0x04,
  0x83, 0x29, 0x1d, 0x66, 0x61, 0x0c, 0xa6, 0x60, 0xc4, 0x00, 0x01, 0x40,
  0x10, 0x0c, 0x26, 0x75, 0xa0, 0x05, 0x30, 0x98, 0x82, 0x11, 0x03, 0x04,
  0x00, 0x41, 0x30, 0x98, 0xd6, 0xa1, 0x16, 0xfe, 0x60, 0x0a, 0x4c, 0x52,
  0x03, 0xf9, 0x8c, 0x18, 0x20, 0x00, 0x08, 0x82, 0xc1, 0xd4, 0x0e, 0xb7,
  0x70, 0x06, 0x52, 0x30, 0x62, 0x80, 0x00, 0x20, 0x08, 0x06, 0x93, 0x3b,
  0xe0, 0x02, 0x19, 0x48, 0xc1, 0x88, 0x01, 0x02, 0x80, 0x20, 0x18, 0x4c,
  0xef, 0x90, 0x0b, 0xa3, 0x20, 0x05, 0x16, 0xb9, 0x81, 0x7c, 0x46, 0x0c,
  0x10, 0x00, 0x04, 0xc1, 0x60, 0x8a, 0x87, 0x5d, 0x58, 0x83, 0x28, 0x18,
  0x31, 0x40, 0x00, 0x10, 0x04, 0x83, 0x49, 0x1e, 0x78, 0x01, 0x0d, 0xa2,
  0x60, 0xc4, 0x00, 0x01, 0x40, 0x10, 0x0c, 0xa6, 0x79, 0xe8, 0x85, 0x53,
  0x88, 0x02, 0x83, 0xe4, 0x40, 0x3e, 0x23, 0x06, 0x08, 0x00, 0x82, 0x60,
  0x30, 0xd5, 0xc3, 0x2f, 0xbc, 0x01, 0x14, 0x8c, 0x18, 0x20, 0x00, 0x08,
  0x82, 0xc1, 0x64, 0x0f, 0xe0, 0xc0, 0x06, 0x50, 0x30, 0x62, 0x80, 0x00,
  0x20, 0x08, 0x06, 0xd3, 0x3d, 0x84, 0xc3, 0x2a, 0x40, 0xc1, 0x88, 0xc1,
  0x01, 0x80, 0x20, 0x18, 0x44, 0xf9, 0xf0, 0x0b, 0xb5, 0x60, 0x0f, 0xa3,
  0x09, 0x01, 0x30, 0x9a, 0x20, 0x04, 0xa3, 0x09, 0x83, 0x30, 0x9a, 0x40,
  0x0c, 0x23, 0x06, 0x07, 0x00, 0x82, 0x60, 0x10, 0xf9, 0x03, 0x39, 0xe8,
  0xc2, 0x3c, 0x8c, 0x26, 0x04, 0xc0, 0x68, 0x82, 0x10, 0x8c, 0x26, 0x0c,
  0xc2, 0x68, 0x02, 0x31, 0x8c, 0x18, 0x1c, 0x00, 0x08, 0x82, 0x41, 0x34,
  0x12, 0xe9, 0xf0, 0x0b, 0xfb, 0x30, 0x9a, 0x10, 0x00, 0xa3, 0x09, 0x42,
  0x30, 0x9a, 0x30, 0x08, 0xa3, 0x09, 0xc4, 0x60, 0x4e, 0x29, 0xc8, 0x67,
  0xc4, 0x00, 0x01, 0x40, 0x10, 0x0c, 0x26, 0x94, 0x90, 0x07, 0x51, 0x70,
  0x82, 0x11, 0x03, 0x04, 0x00, 0x41, 0x30, 0x98, 0x52, 0x62, 0x1e, 0xfe,
  0xc0, 0x09, 0x46, 0x0c, 0x10, 0x00, 0x04, 0xc1, 0x60, 0x52, 0x09, 0x7a,
  0xf0, 0x05, 0x27, 0xb0, 0x26, 0x15, 0xe4, 0x33, 0x62, 0x80, 0x00, 0x20,
  0x08, 0x06, 0x13, 0x4b, 0xd8, 0x83, 0x29, 0x34, 0xc1, 0x88, 0x01, 0x02,
  0x80, 0x20, 0x18, 0x4c, 0x2d, 0x71, 0x0f, 0xa3, 0xd0, 0x04, 0x23, 0x06,
  0x08, 0x00, 0x82, 0x60, 0x30, 0xb9, 0x04, 0x3e, 0x88, 0x43, 0x13, 0x18,
  0xd3, 0x0a, 0xf2, 0x19, 0x31, 0x40, 0x00, 0x10, 0x04, 0x83, 0x09, 0x26,
  0xf4, 0x41, 0x15, 0x98, 0x60, 0xc4, 0x00, 0x01, 0x40, 0x10, 0x0c, 0xa6,
  0x98, 0xd8, 0x87, 0x53, 0x60, 0x82, 0x11, 0x03, 0x04, 0x00, 0x41, 0x30,
  0x98, 0x64, 0x82, 0x1f, 0xcc, 0x81, 0x09, 0x46, 0x0c, 0x0e, 0x00, 0x04,
  0xc1, 0x20, 0xa2, 0x09, 0x7d, 0x80, 0x87, 0x7d, 0x18, 0x4d, 0x08, 0x80,
  0xd1, 0x04, 0x21, 0x18, 0x4d, 0x18, 0x84, 0x11, 0x83, 0x03, 0x00, 0x41,
  0x30, 0x88, 0x70, 0xc2, 0x1f, 0xe8, 0x41, 0x26, 0x46, 0x13, 0x02, 0x60,
  0x34, 0x41, 0x08, 0x46, 0x13, 0x06, 0x61, 0xc4, 0xe0, 0x00, 0x40, 0x10,
  0x0c, 0x22, 0x9e, 0x10, 0x09, 0x7c, 0x90, 0x89, 0xd1, 0x84, 0x00, 0x18,
  0x4d, 0x10, 0x82, 0xd1, 0x84, 0x41, 0xb0, 0x45, 0x16, 0xe4, 0x33, 0x62,
  0x80, 0x00, 0x20, 0x08, 0x06, 0x13, 0x58, 0xa8, 0x04, 0x2c, 0x2c, 0xc1,
  0x88, 0x01, 0x02, 0x80, 0x20, 0x18, 0x4c, 0x61, 0xb1, 0x12, 0xae, 0xb0,
  0x04, 0xa6, 0xd4, 0x82, 0x7c, 0x46, 0x0c, 0x10, 0x00, 0x04, 0xc1, 0x60,
  0x1a, 0x8b, 0x96, 0x98, 0x05, 0x25, 0x18, 0x31, 0x40, 0x00, 0x10, 0x04,
  0x83, 0x89, 0x2c, 0x5c, 0x22, 0x16, 0x94, 0xc0, 0x12, 0x5c, 0x90, 0xcf,
  0x88, 0x01, 0x02, 0x80, 0x20, 0x18, 0x4c, 0x66, 0x01, 0x13, 0xb6, 0x90,
  0x04, 0x23, 0x06, 0x08, 0x00, 0x82, 0x60, 0x30, 0x9d, 0x45, 0x4c, 0xd0,
  0x42, 0x12, 0x8c, 0x18, 0x2c, 0x00, 0x08, 0x82, 0x81, 0xb2, 0x16, 0x2a,
  0x71, 0x10, 0xc1, 0x41, 0x04, 0x23, 0x06, 0x06, 0x00, 0x82, 0x60, 0xc0,
  0xac, 0x85, 0x4a, 0x04, 0x16, 0x24, 0xf2, 0x31, 0xe1, 0x90, 0x8f, 0x0d,
  0x85, 0x7c, 0x46, 0x0c, 0x0e, 0x00, 0x04, 0xc1, 0x20, 0x72, 0x0b, 0x9a,
  0x50, 0x09, 0x9c, 0x18, 0x4d, 0x08, 0x80, 0xd1, 0x04, 0x21, 0x18, 0x4d,
  0x18, 0x84, 0xd1, 0x04, 0x62, 0x18, 0x31, 0x48, 0x00, 0x10, 0x04, 0x03,
  0xc4, 0x2e, 0x74, 0xe2, 0x2d, 0xde, 0xa2, 0x2c, 0x5c, 0x62, 0xc4, 0x20,
  0x01, 0x40, 0x10, 0x0c, 0x10, 0xbb, 0xd0, 0x89, 0xb7, 0x78, 0x0b, 0x9f,
  0x68, 0x89, 0x11, 0x83, 0x04, 0x00, 0x41, 0x30, 0x40, 0xec, 0x42, 0x27,
  0xe0, 0xe2, 0x2d, 0xca, 0x02, 0x0d, 0x46, 0x0c, 0x12, 0x00, 0x04, 0xc1,
  0x00, 0xb1, 0x0b, 0x9d, 0x80, 0x8b, 0xb7, 0xf0, 0x09, 0x32, 0x18, 0x31,
  0x48, 0x00, 0x10, 0x04, 0x03, 0xc4, 0x2e, 0x74, 0x02, 0x2e, 0xde, 0x42,
  0x2c, 0xc0, 0x60, 0xc4, 0x20, 0x01, 0x40, 0x10, 0x0c, 0x10, 0xbb, 0xd0,
  0x09, 0xb8, 0x78, 0x8b, 0xb1, 0x90, 0x89, 0x11, 0x83, 0x04, 0x00, 0x41,
  0x30, 0x40, 0xec, 0x42, 0x27, 0xd0, 0xe2, 0x2d, 0xca, 0x02, 0x19, 0x31,
  0x48, 0x00, 0x10, 0x04, 0x03, 0xc4, 0x2e, 0x74, 0x02, 0x2d, 0xde, 0xc2,
  0x27, 0x8e, 0x11, 0x83, 0x04, 0x00, 0x41, 0x30, 0x40, 0xec, 0x42, 0x27,
  0xd0, 0xe2, 0x2d, 0xc4, 0xc2, 0x18, 0x31, 0x48, 0x00, 0x10, 0x04, 0x03,
  0xc4, 0x2e, 0x74, 0x62, 0x2d, 0xde, 0xa2, 0x2c, 0x88, 0x11, 0x83, 0x04,
  0x00, 0x41, 0x30, 0x40, 0xec, 0x42, 0x27, 0xd6, 0xe2, 0x2d, 0x7c, 0x62,
  0x18, 0x31, 0x48, 0x00, 0x10, 0x04, 0x03, 0xc4, 0x2e, 0x74, 0x62, 0x2d,
  0xde, 0x42, 0x2c, 0x84, 0x11, 0x83, 0x04, 0x00, 0x41, 0x30, 0x40, 0xec,
  0x42, 0x27, 0xd6, 0xe2, 0x2d, 0xc6, 0x22, 0x18, 0x31, 0x48, 0x00, 0x10,
  0x04, 0x03, 0xc4, 0x2e, 0x74, 0xe2, 0x2c, 0xde, 0xa2, 0x2c, 0x4e, 0x61,
  0xc4, 0x20, 0x01, 0x40, 0x10, 0x0c, 0x10, 0xbb, 0xd0, 0x89, 0xb3, 0x78,
  0x0b, 0x9f, 0x18, 0x85, 0x11, 0x83, 0x04, 0x00, 0x41, 0x30, 0x40, 0xec,
  0x42, 0x27, 0xce, 0xe2, 0x2d, 0xc4, 0xe2, 0x0f, 0x46, 0x0c, 0x12, 0x00,
  0x04, 0xc1, 0x00, 0xb1, 0x0b, 0x9d, 0x38, 0x8b, 0xb7, 0x18, 0x8b, 0x3d,
  0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x21, 0xdd, 0x5d, 0x3e,
  0x63, 0x7a, 0xdd, 0x46, 0xde, 0x71, 0x1f, 0x8a, 0x8e, 0x33, 0x7c, 0x98,
  0x17, 0x00, 0x01, 0x00, 0x20, 0x80, 0x17, 0x00, 0x78, 0x01, 0xed, 0x98,
  0x3d, 0x4c, 0x14, 0x51, 0x10, 0xc7, 0xe7, 0xbd, 0xdd, 0x7d, 0xf7, 0x76,
  0x6f, 0xee, 0xed, 0xf3, 0x5c, 0x8e, 0x03, 0x4f, 0x70, 0x03, 0x88, 0x08,
  0x08, 0x04, 0xd1, 0x8a, 0x8f, 0xc2, 0x98, 0x68, 0x43, 0x61, 0x63, 0x43,
  0x65, 0x42, 0x8d, 0xb1, 0x33, 0xe6, 0x3c, 0x6d, 0x34, 0x84, 0x68, 0x62,
  0x2c, 0x6c, 0x4c, 0x0c, 0x36, 0x16, 0x76, 0xf6, 0x87, 0x1c, 0x8d, 0x85,
  0x86, 0x84, 0xd8, 0x62, 0x6b, 0x68, 0xad, 0xe8, 0x70, 0x66, 0xb9, 0xe3,
  0x10, 0xaf, 0xd6, 0x68, 0xde, 0x2f, 0x99, 0x99, 0xb7, 0x73, 0xf3, 0x6e,
  0xdf, 0xcc, 0xdb, 0xea, 0x5f, 0xeb, 0x86, 0x8c, 0xaf, 0x9b, 0xb7, 0xbe,
  0x73, 0xdc, 0xab, 0xbd, 0xbe, 0x32, 0x56, 0x00, 0x08, 0xf8, 0x81, 0xf0,
  0xd9, 0x11, 0x2b, 0x09, 0x7b, 0x80, 0x4a, 0xb3, 0x3e, 0x64, 0xd7, 0xa4,
  0x42, 0x76, 0x89, 0x8c, 0x59, 0x60, 0xd7, 0x44, 0x90, 0x2d, 0x2f, 0x2f,
  0xcf, 0x91, 0xcd, 0xd3, 0xf2, 0x37, 0xf8, 0x3f, 0x6e, 0x92, 0xdd, 0x20,
  0x63, 0xb8, 0xbe, 0x85, 0x62, 0xd7, 0x81, 0xd6, 0xb9, 0x8e, 0xc3, 0x67,
  0xe4, 0xbd, 0xb2, 0x19, 0x8f, 0x33, 0xbb, 0x7d, 0x6f, 0x96, 0xc2, 0x35,
  0x32, 0x18, 0x59, 0x5d, 0x9f, 0x6b, 0x46, 0xce, 0xc1, 0x87, 0xb1, 0x7c,
  0xc7, 0x73, 0xfd, 0xcb, 0xb4, 0xee, 0x89, 0x79, 0x77, 0x72, 0x18, 0x04,
  0xcf, 0x88, 0x29, 0x97, 0xd8, 0x03, 0xe4, 0xd9, 0x11, 0x0b, 0xcd, 0xe7,
  0xd6, 0x5d, 0x7e, 0x24, 0xeb, 0xb0, 0x3d, 0xe3, 0x80, 0xe0, 0xd8, 0x09,
  0xbe, 0x37, 0x05, 0x8b, 0x93, 0x4a, 0x3c, 0x39, 0xa7, 0xe4, 0x96, 0x55,
  0x5e, 0x3c, 0xa5, 0xfc, 0xc5, 0x29, 0x15, 0x3c, 0x9f, 0xa2, 0x9f, 0xfe,
  0x08, 0xfc, 0x3d, 0xb4, 0xbe, 0x1f, 0x25, 0x0e, 0xbb, 0x50, 0xf2, 0xb0,
  0x73, 0xe5, 0x79, 0x1c, 0xfe, 0x7b, 0x78, 0x06, 0x7d, 0x64, 0x0c, 0xcf,
  0x82, 0x9f, 0x5b, 0x58, 0x76, 0x0e, 0x87, 0xc3, 0xe1, 0x70, 0x38, 0x1c,
  0x0e, 0x87, 0xc3, 0xe1, 0x70, 0x38, 0x1c, 0x7f, 0x9b, 0xb4, 0x56, 0xc7,
  0x83, 0xf4, 0x29, 0xab, 0x15, 0x79, 0xef, 0x4d, 0x7d, 0xd3, 0x5b, 0xaf,
  0x1f, 0x78, 0x6f, 0xeb, 0xef, 0x17, 0x25, 0xf8, 0xe9, 0xa7, 0x06, 0xa6,
  0x2f, 0x1a, 0x49, 0x0a, 0x5b, 0x83, 0xe9, 0xe7, 0xc6, 0x58, 0xfa, 0xb2,
  0xb1, 0x12, 0xaf, 0x6d, 0xd8, 0x50, 0x19, 0x80, 0xc7, 0x3b, 0x7a, 0xef,
  0x8b, 0x97, 0x84, 0xd6, 0x94, 0x43, 0x6d, 0x82, 0x01, 0x85, 0xc1, 0xa8,
  0xc5, 0x60, 0x5a, 0xa3, 0x1a, 0x52, 0xa8, 0xc6, 0x2d, 0xaa, 0x19, 0x8d,
  0x82, 0xea, 0x42, 0xaa, 0xb3, 0x22, 0x32, 0x89, 0x40, 0x53, 0x16, 0x60,
  0x72, 0xc3, 0x0a, 0x25, 0xe5, 0x23, 0xca, 0x8b, 0x81, 0x08, 0xc5, 0x28,
  0xa2, 0x98, 0x06, 0xcc, 0x4d, 0x58, 0x7c, 0x08, 0x6b, 0x1b, 0xa8, 0xa4,
  0xa9, 0xa8, 0xa2, 0xb9, 0xa0, 0x12, 0x63, 0x55, 0xc9, 0x24, 0xaa, 0x62,
  0xe4, 0x50, 0x84, 0x72, 0x1c, 0x51, 0xce, 0x00, 0x96, 0x95, 0x6f, 0x06,
  0x95, 0x32, 0xb9, 0xab, 0x1a, 0x0b, 0x56, 0x62, 0x8f, 0xf5, 0xf1, 0xac,
  0x2d, 0xe2, 0x88, 0x4d, 0xf0, 0x94, 0x2d, 0x61, 0x97, 0xad, 0xe0, 0x90,
  0x55, 0x68, 0xb4, 0xc4, 0x5e, 0xed, 0x63, 0x9f, 0x2e, 0xe2, 0x45, 0x9d,
  0x60, 0x51, 0x97, 0xb0, 0xa4, 0x2b, 0x78, 0x5e, 0x2b, 0x8c, 0x8d, 0xc4,
  0x33, 0xc6, 0xc7, 0x7e, 0x53, 0xc4, 0x51, 0x93, 0xe0, 0x69, 0x53, 0xc2,
  0x6e, 0x53, 0xc1, 0x61, 0xa3, 0xd0, 0x8f, 0x8c, 0x81, 0x88, 0x7a, 0x42,
  0x83, 0x3a, 0x8a, 0x8c, 0x40, 0xea, 0x09, 0x0c, 0x86, 0x48, 0x67, 0x00,
  0x8d, 0x00, 0xb5, 0x1d, 0xe8, 0x4a, 0xfc, 0x5c, 0x1c, 0x19, 0x3f, 0x8c,
  0x10, 0x44, 0x84, 0xb7, 0xd3, 0x5a, 0x23, 0x58, 0x8a, 0xaa, 0xdb, 0x1a,
  0xf6, 0x85, 0x0c, 0xa3, 0x98, 0xe6, 0x54, 0x93, 0xb2, 0xfa, 0x43, 0xfa,
  0xd5, 0x20, 0x46, 0x13, 0xf0, 0x8c, 0xa8, 0x77, 0xee, 0x0f, 0x64, 0x54,
  0x15, 0xd2, 0x54, 0xa5, 0xb4, 0x55, 0x4f, 0xf6, 0x55, 0x63, 0x09, 0xfb,
  0x58, 0x10, 0xb2, 0x9f, 0x62, 0xde, 0x78, 0x72, 0x82, 0xa2, 0xaf, 0x40,
  0xce, 0x53, 0x0c, 0x72, 0x3a, 0x06, 0x78, 0xb4, 0xd1, 0xc5, 0x77, 0x75,
  0x42, 0x28, 0xcc, 0xf4, 0xa5, 0x13, 0xb9, 0x5e, 0x76, 0x22, 0xd3, 0xde,
  0x26, 0xd9, 0x31, 0xbd, 0x54, 0x23, 0x44, 0xa6, 0x4c, 0xb5, 0x73, 0x12,
  0x40, 0x8a, 0x4c, 0xe5, 0x6d, 0xe7, 0x68, 0x9b, 0x27, 0x32, 0x45, 0xaf,
  0x9d, 0xa3, 0x6d, 0xbe, 0xc8, 0xf1, 0xb2, 0x9d, 0xa3, 0x6d, 0x81, 0xd0,
  0xbc, 0x6c, 0xe7, 0xc8, 0x94, 0xc8, 0xd4, 0xea, 0x76, 0x8e, 0xde, 0x9b,
  0x13, 0x11, 0x2f, 0x7f, 0xa9, 0xd3, 0x32, 0xcf, 0x67, 0x3f, 0x92, 0xb0,
  0xb9, 0x2e, 0x94, 0x85, 0x5f, 0x72, 0xac, 0x22, 0x6a, 0x3f, 0x53, 0x4d,
  0x8f, 0x72, 0x2d, 0x2e, 0x37, 0xb5, 0xf1, 0x41, 0x32, 0x7e, 0xa3, 0x80,
  0xac, 0x5f, 0xe8, 0x21, 0xf3, 0x9b, 0x8a, 0x64, 0xba, 0xbb, 0x34, 0x77,
  0xe7, 0xfe, 0xee, 0xf5, 0x6f, 0x77, 0xfb, 0x57, 0x9f, 0x4d, 0x3f, 0x78,
  0xf5, 0x13, 0x7a, 0xad, 0x69, 0x0f, 0x00, 0x00, 0x17, 0x00, 0x01, 0x00,
  0x10, 0x08, 0x18, 0x00, 0x78, 0x01, 0xed, 0x98, 0x31, 0x6b, 0x14, 0x41,
  0x14, 0xc7, 0x67, 0x66, 0x67, 0x67, 0x67, 0xe7, 0x5e, 0x66, 0xc6, 0x63,
  0x3d, 0x4f, 0x39, 0x63, 0x62, 0x12, 0xe3, 0x61, 0xa2, 0x17, 0x63, 0xd4,
  0x42, 0xe3, 0x14, 0x22, 0x0a, 0x42, 0x5a, 0x9b, 0x54, 0x42, 0xea, 0x08,
  0x16, 0x22, 0x72, 0x9e, 0x5a, 0x28, 0x22, 0x8a, 0x8d, 0x68, 0x61, 0x67,
  0x21, 0xc6, 0x8f, 0x20, 0x97, 0x78, 0x29, 0xb4, 0x11, 0x24, 0xbd, 0x62,
  0x6b, 0xeb, 0x17, 0x88, 0xef, 0x6d, 0xee, 0xcc, 0x19, 0x03, 0x76, 0x8a,
  0xb2, 0x3f, 0xf8, 0xbf, 0xff, 0xee, 0xdb, 0x99, 0xdd, 0xd9, 0x37, 0x53,
  0x3d, 0x5d, 0x65, 0x39, 0x4b, 0xf1, 0xe3, 0x71, 0xf2, 0xaf, 0xad, 0xe7,
  0xc7, 0x27, 0x06, 0x18, 0x8b, 0xe9, 0x06, 0x11, 0x14, 0x90, 0xc5, 0x8c,
  0x22, 0x63, 0x2f, 0x76, 0x51, 0x64, 0x2c, 0xa5, 0xd0, 0xa5, 0x86, 0x3a,
  0x8e, 0x22, 0x02, 0x85, 0x2e, 0x1c, 0xb5, 0xb0, 0xb0, 0x30, 0x8b, 0x3a,
  0x83, 0x97, 0xbf, 0x40, 0xef, 0xb8, 0x80, 0x3a, 0x8f, 0x22, 0x68, 0x7c,
  0x8f, 0x04, 0xb5, 0xa3, 0xab, 0xdf, 0x11, 0xa1, 0x68, 0x6e, 0x6f, 0xad,
  0xfd, 0x34, 0x9e, 0xdd, 0x39, 0x8d, 0x76, 0x16, 0xc5, 0x26, 0xaf, 0xbe,
  0x9b, 0x25, 0xef, 0xb1, 0xba, 0x56, 0xda, 0x76, 0x5d, 0xff, 0x32, 0xbd,
  0x7d, 0x22, 0xf4, 0x36, 0x05, 0x91, 0x14, 0x90, 0x6b, 0x15, 0x8a, 0x8c,
  0x95, 0x28, 0x20, 0xef, 0xbb, 0xf7, 0xbd, 0xbd, 0x5c, 0x41, 0xf5, 0xef,
  0x47, 0x3f, 0xeb, 0x08, 0xf9, 0x76, 0xa8, 0x5c, 0x73, 0x0d, 0xc5, 0xef,
  0x0e, 0x29, 0xb1, 0xea, 0x55, 0xe4, 0xa6, 0x94, 0x9c, 0x9b, 0x52, 0xf1,
  0xa3, 0x29, 0x7c, 0xf4, 0x47, 0xa0, 0xb3, 0x4b, 0xeb, 0x20, 0x14, 0xdf,
  0xf8, 0x0b, 0x25, 0x36, 0x8a, 0xa1, 0x22, 0x3a, 0x2d, 0x88, 0xec, 0x55,
  0xe2, 0xff, 0x84, 0x6a, 0x30, 0x88, 0xea, 0xd1, 0xff, 0xb7, 0x74, 0x44,
  0xfa, 0x8e, 0x49, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41,
  0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0xc1, 0xdf, 0x61, 0xb8, 0xd5, 0x86,
  0xf5, 0xfa, 0x3d, 0xc6, 0x3c, 0x2b, 0x45, 0x2f, 0xdb, 0x6f, 0xa3, 0x57,
  0xed, 0xf5, 0x68, 0xa9, 0xfd, 0x7a, 0x4e, 0x30, 0x59, 0xef, 0x74, 0xa0,
  0xfe, 0xa4, 0x93, 0xd5, 0xf5, 0xea, 0x68, 0xfd, 0x63, 0x67, 0xa2, 0xfe,
  0xb4, 0xb3, 0xe8, 0x1e, 0x2c, 0xfb, 0x54, 0x59, 0xc6, 0x6e, 0xaf, 0xe9,
  0xaf, 0x1f, 0xa2, 0x2c, 0xf5, 0xb6, 0x9a, 0x6a, 0x1b, 0x8f, 0x28, 0x88,
  0x0f, 0x79, 0x88, 0xa7, 0x35, 0xa8, 0x31, 0x05, 0x6a, 0xd2, 0x83, 0x9a,
  0xd1, 0xc0, 0x71, 0x5c, 0x8a, 0xe3, 0x3c, 0x37, 0x36, 0xe3, 0x60, 0xab,
  0x9c, 0xd9, 0x64, 0x5c, 0x81, 0xc0, 0xbc, 0xc1, 0x3c, 0x1f, 0x31, 0xc0,
  0x0f, 0x01, 0xf0, 0x69, 0x06, 0xc9, 0x11, 0x0f, 0x37, 0xd9, 0x83, 0xe5,
  0x9a, 0x12, 0x76, 0x54, 0x95, 0x6d, 0x43, 0x65, 0x56, 0xaa, 0x8a, 0xd5,
  0xaa, 0x66, 0xc5, 0x98, 0x01, 0x31, 0x09, 0x20, 0x66, 0x18, 0x0c, 0x29,
  0x69, 0x27, 0x94, 0xb2, 0xc9, 0x09, 0x0d, 0x7b, 0xbd, 0x80, 0x61, 0x2f,
  0x61, 0xcc, 0x97, 0x61, 0xca, 0x67, 0x10, 0xfb, 0x0a, 0xa4, 0xbe, 0x06,
  0x93, 0x5e, 0xc1, 0xa0, 0x16, 0xb0, 0x5f, 0x4b, 0x38, 0xa0, 0xcb, 0x70,
  0x54, 0x67, 0xa0, 0x74, 0x05, 0x8c, 0xae, 0xc1, 0x61, 0xad, 0x20, 0xb1,
  0x15, 0xd8, 0x67, 0x05, 0x8c, 0x58, 0x09, 0xe3, 0xb6, 0x0c, 0xd3, 0x36,
  0x83, 0x92, 0xad, 0xc1, 0x11, 0xab, 0x20, 0x33, 0xd6, 0x7a, 0xa3, 0xed,
  0x4e, 0xb0, 0x50, 0x35, 0xc6, 0xee, 0x00, 0x0d, 0x15, 0x66, 0x61, 0x37,
  0x18, 0x28, 0x33, 0x0d, 0x8c, 0xb5, 0xd6, 0xd8, 0x4c, 0x26, 0x13, 0x67,
  0x6c, 0x2b, 0xba, 0xd5, 0x96, 0xa9, 0x01, 0xc6, 0x0d, 0x5c, 0xaa, 0xdf,
  0xee, 0x68, 0xde, 0x5a, 0x89, 0xe7, 0x4d, 0x93, 0xfe, 0x43, 0x09, 0xdf,
  0x8c, 0x1d, 0xd8, 0x10, 0x16, 0xbf, 0x30, 0x1e, 0xdc, 0x59, 0x72, 0x11,
  0xdc, 0x79, 0xf2, 0x34, 0xb8, 0x8b, 0xe4, 0x26, 0x38, 0x46, 0x0e, 0xc1,
  0x49, 0xf2, 0x81, 0xe0, 0x3c, 0x79, 0x29, 0xb8, 0x8c, 0xdc, 0x06, 0x57,
  0x25, 0x8f, 0x82, 0x8b, 0xa9, 0xce, 0x58, 0xbf, 0x6f, 0x42, 0x34, 0xa5,
  0x30, 0xcd, 0x58, 0xd8, 0x66, 0x22, 0x06, 0x9b, 0x35, 0x7a, 0x8e, 0xef,
  0x1f, 0x22, 0x97, 0xc1, 0x8d, 0x92, 0xab, 0xe0, 0x0e, 0x92, 0xb3, 0xe0,
  0x1a, 0xe4, 0x71, 0x70, 0xc7, 0xc8, 0x93, 0xe0, 0x4e, 0x92, 0xeb, 0xe0,
  0x4e, 0x91, 0x3b, 0xfc, 0x3e, 0xbb, 0xb5, 0xbc, 0x93, 0xce, 0xc2, 0x96,
  0x46, 0xe4, 0x6e, 0x0a, 0x5b, 0x72, 0x79, 0x1b, 0x7b, 0x4b, 0xce, 0x53,
  0xd8, 0x92, 0xdb, 0x43, 0x81, 0xe7, 0x3d, 0xc0, 0x06, 0x05, 0x62, 0x0f,
  0x8e, 0xe1, 0x3c, 0xef, 0x90, 0x6d, 0xe6, 0x04, 0x63, 0x82, 0x53, 0x17,
  0xad, 0x2f, 0x87, 0xd3, 0x22, 0x9e, 0x77, 0x16, 0x37, 0x73, 0x38, 0x4d,
  0x72, 0xea, 0x56, 0xf7, 0xe5, 0x70, 0x5a, 0xcc, 0x35, 0x5d, 0x6e, 0xe6,
  0x50, 0x8a, 0xe7, 0x5d, 0xf3, 0xcd, 0x1c, 0x7e, 0x37, 0xe1, 0x86, 0x2e,
  0x7f, 0x1a, 0xa7, 0x45, 0x89, 0xd6, 0xfe, 0xa3, 0x95, 0x4e, 0xe3, 0x52,
  0x31, 0xf0, 0x53, 0x8e, 0xba, 0x99, 0x5a, 0xe6, 0xdd, 0xdb, 0x1f, 0xb9,
  0x1e, 0x6f, 0xba, 0x3d, 0xfa, 0x51, 0x14, 0x7d, 0x91, 0xe7, 0x1d, 0xf2,
  0x8d, 0xba, 0xc9, 0x6e, 0x67, 0x74, 0xf8, 0xd3, 0xfc, 0xec, 0xe5, 0xeb,
  0x9f, 0xce, 0x7d, 0xbe, 0xb2, 0xef, 0xfe, 0xc3, 0xe9, 0x1b, 0x4f, 0xbf,
  0x03, 0x3c, 0x8e, 0x86, 0x43, 0x00, 0x00, 0x00, 0x17, 0x00, 0x01, 0x00,
  0x00, 0xb4, 0x17, 0x00, 0x78, 0x01, 0xed, 0x98, 0x3d, 0x68, 0x14, 0x41,
  0x14, 0xc7, 0xdf, 0x7c, 0xec, 0xdc, 0xee, 0xed, 0xdc, 0xdc, 0x7a, 0xec,
  0x9d, 0xc9, 0x71, 0x5e, 0x6e, 0xf3, 0xad, 0x49, 0x4c, 0x42, 0x8c, 0xb1,
  0x31, 0xb1, 0x10, 0x41, 0x11, 0x92, 0x4e, 0x9b, 0x54, 0x42, 0xb0, 0x8c,
  0x68, 0xa5, 0x72, 0x9e, 0x36, 0x8a, 0x04, 0x05, 0xb1, 0xb0, 0x51, 0x44,
  0x1b, 0x0b, 0x0b, 0x0b, 0x0b, 0xab, 0x8b, 0xb9, 0x80, 0x58, 0x68, 0x93,
  0x42, 0x14, 0x8c, 0x7d, 0x3a, 0xb1, 0x12, 0x11, 0xe2, 0x7b, 0x9b, 0xdb,
  0xe4, 0x12, 0x53, 0x2b, 0xca, 0xfc, 0xe0, 0xff, 0x66, 0xe7, 0x3f, 0x6f,
  0x66, 0x77, 0x66, 0xa7, 0x7a, 0x2f, 0xf7, 0x42, 0xcc, 0x8f, 0xde, 0x67,
  0xaf, 0xa8, 0x5d, 0xab, 0x3d, 0x3c, 0x3c, 0x98, 0x01, 0x70, 0xa8, 0xd3,
  0xc2, 0x7c, 0x48, 0x11, 0x60, 0xa6, 0x99, 0xef, 0x51, 0x68, 0x52, 0x42,
  0x1d, 0x44, 0x11, 0xc7, 0x28, 0x34, 0x61, 0xa8, 0xb9, 0xb9, 0xb9, 0x49,
  0xd4, 0x14, 0x3e, 0xfe, 0x46, 0x1a, 0x75, 0x0a, 0x75, 0x12, 0x45, 0x50,
  0x7e, 0x82, 0xa2, 0xd0, 0xc2, 0xce, 0xef, 0x69, 0x45, 0xa0, 0x68, 0x2e,
  0x47, 0xed, 0xe4, 0xbb, 0xa8, 0x1e, 0xc5, 0xe6, 0x38, 0x0a, 0xae, 0x34,
  0x1e, 0x4d, 0x16, 0x2f, 0xbe, 0xa1, 0x7e, 0x4c, 0xe5, 0x6b, 0x6a, 0xd7,
  0xef, 0xfa, 0x97, 0x49, 0xfe, 0x13, 0xf1, 0xb9, 0xf5, 0x40, 0x9b, 0x24,
  0x67, 0x74, 0xba, 0x40, 0x11, 0xc0, 0xa7, 0x80, 0x5c, 0x6a, 0xf6, 0x93,
  0x7f, 0xf9, 0x1a, 0xb5, 0xcb, 0xf4, 0x98, 0x75, 0x84, 0xda, 0xdd, 0xa0,
  0xff, 0xa6, 0x60, 0x7a, 0x44, 0xb1, 0x9b, 0x15, 0xc5, 0x97, 0x03, 0x25,
  0xb2, 0xa3, 0x4a, 0x4e, 0x8f, 0x2a, 0xe7, 0xee, 0x28, 0x0e, 0xfd, 0x11,
  0xe8, 0xae, 0x24, 0xf7, 0x47, 0xb1, 0x8d, 0x5d, 0x28, 0xbe, 0xb1, 0x73,
  0x25, 0xe8, 0xb6, 0x20, 0x52, 0x52, 0xfc, 0x6f, 0xa1, 0x33, 0x28, 0xa3,
  0x12, 0x92, 0xdd, 0xd2, 0x69, 0x24, 0x57, 0x64, 0x86, 0x82, 0xc5, 0x62,
  0xb1, 0x58, 0x2c, 0x16, 0x8b, 0xc5, 0x62, 0xb1, 0x58, 0x2c, 0x16, 0xcb,
  0xdf, 0x22, 0xaa, 0xd5, 0xe7, 0xb3, 0x0b, 0x8b, 0x00, 0x37, 0x56, 0xdc,
  0xb5, 0xf7, 0x22, 0xf0, 0x02, 0xe3, 0x74, 0x05, 0x5a, 0xf5, 0x04, 0x5a,
  0xa0, 0x97, 0x46, 0x2f, 0x0d, 0xb5, 0x95, 0x54, 0x5f, 0xa7, 0x0c, 0x71,
  0xac, 0xcd, 0x73, 0x8d, 0x33, 0xe6, 0x6a, 0xbd, 0x1e, 0xdd, 0x02, 0x08,
  0xc0, 0x17, 0x8f, 0xeb, 0x4b, 0xe2, 0x49, 0x7d, 0x5d, 0x3c, 0xad, 0x3f,
  0x9f, 0xe6, 0xe0, 0x0c, 0x04, 0x5a, 0x46, 0x6f, 0x1b, 0x3a, 0xba, 0xd7,
  0x08, 0x23, 0x58, 0x56, 0xe3, 0xae, 0x56, 0x43, 0xb8, 0x1e, 0xad, 0x31,
  0x91, 0x93, 0x1c, 0xd7, 0xf4, 0xe8, 0x3d, 0xcc, 0x35, 0xbc, 0xcb, 0xd5,
  0x06, 0x7d, 0xd1, 0x93, 0x93, 0x21, 0xf6, 0xdb, 0x18, 0x98, 0xee, 0xe8,
  0x5d, 0x83, 0x8f, 0x81, 0xf6, 0x29, 0x7f, 0xb8, 0x53, 0x06, 0x34, 0x3e,
  0xce, 0xe5, 0x60, 0x74, 0xbf, 0x71, 0x0d, 0x16, 0x16, 0x75, 0x08, 0x26,
  0x53, 0x00, 0x6d, 0x34, 0x68, 0x3e, 0xe0, 0x6a, 0x4e, 0x79, 0x1d, 0x20,
  0xdb, 0xd0, 0x6f, 0x47, 0xbf, 0x88, 0x7e, 0x96, 0xe6, 0x0c, 0xe5, 0xa4,
  0xa0, 0xb1, 0x09, 0x90, 0x25, 0x1c, 0xdb, 0x87, 0x63, 0x65, 0x1c, 0x93,
  0xe4, 0x4d, 0x81, 0xec, 0x47, 0x6f, 0x3f, 0x7a, 0x07, 0xd0, 0x73, 0xc8,
  0x3b, 0x03, 0x32, 0x40, 0x6f, 0x0f, 0x7a, 0x39, 0xf4, 0x5c, 0xf2, 0xfa,
  0x40, 0x86, 0xe8, 0xe5, 0xd1, 0x2b, 0xa0, 0xe7, 0x91, 0x37, 0x0c, 0xb2,
  0x1b, 0xbd, 0x1e, 0xf4, 0x7a, 0xd1, 0xeb, 0x33, 0xb8, 0x66, 0xc9, 0x18,
  0x28, 0x69, 0xe3, 0x94, 0x8d, 0x66, 0x65, 0xad, 0xdd, 0x52, 0x68, 0x54,
  0xc5, 0x68, 0xaf, 0x1c, 0x6a, 0x5e, 0xd1, 0x3a, 0x95, 0x2d, 0x98, 0x74,
  0x25, 0xd4, 0x2a, 0x53, 0xd0, 0xe9, 0x7c, 0x41, 0xfb, 0xb3, 0x85, 0xea,
  0xd9, 0xa8, 0xd6, 0x98, 0x01, 0xf9, 0x62, 0x49, 0xfc, 0xac, 0xfb, 0x19,
  0x6d, 0xfc, 0xac, 0x31, 0x7e, 0x3e, 0x34, 0x3e, 0x7c, 0x58, 0x61, 0x1e,
  0xc0, 0x37, 0xce, 0xab, 0xae, 0x77, 0xe4, 0x93, 0xcf, 0x25, 0x80, 0xc0,
  0x56, 0x03, 0xf4, 0xc3, 0xa1, 0x8f, 0x7e, 0x1a, 0x80, 0x4b, 0xec, 0xbb,
  0x0a, 0xe8, 0x3c, 0x38, 0x87, 0xaa, 0xc0, 0x5c, 0x34, 0xab, 0x8c, 0xab,
  0xaa, 0x4a, 0xe1, 0x58, 0x5c, 0x82, 0xbb, 0xbe, 0x98, 0xa7, 0x66, 0xa3,
  0x2c, 0xb7, 0x49, 0x40, 0x61, 0x87, 0x57, 0xa4, 0xc0, 0xe2, 0x7a, 0xdd,
  0x08, 0x05, 0xa2, 0x88, 0x39, 0x8c, 0xc5, 0xd5, 0xac, 0x2d, 0x0f, 0xd7,
  0xe5, 0x8c, 0x2a, 0x5e, 0x2d, 0x1e, 0x4e, 0x13, 0x2c, 0xae, 0x02, 0x6e,
  0x79, 0x38, 0x4d, 0xb2, 0x14, 0x3d, 0x6e, 0x79, 0x38, 0xcd, 0x61, 0x2e,
  0x3d, 0x6e, 0x79, 0x28, 0x45, 0x9b, 0x6d, 0xf5, 0xf0, 0xbd, 0x29, 0x46,
  0x15, 0xeb, 0xed, 0x79, 0x2e, 0xf7, 0xe9, 0xdb, 0x37, 0xcb, 0xde, 0x94,
  0xe7, 0xf1, 0xcc, 0x36, 0x8f, 0xb6, 0xed, 0xca, 0xb8, 0xd2, 0xba, 0xe9,
  0x25, 0x9c, 0x6f, 0xd6, 0xd3, 0xbb, 0x51, 0xf4, 0x46, 0x16, 0x57, 0xb3,
  0x01, 0xda, 0x51, 0xb2, 0x59, 0xc5, 0x8c, 0x56, 0x67, 0x27, 0xcf, 0x5d,
  0x5e, 0x3d, 0xf1, 0xe5, 0x42, 0xc7, 0xed, 0x3b, 0x63, 0x57, 0x1f, 0xfc,
  0x02, 0x87, 0x84, 0x7c, 0xc7, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x0a, 0x00, 0x00, 0x00, 0x03, 0x00, 0x03, 0x00, 0x08, 0x02, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x04, 0x02, 0x08, 0x02, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x05, 0x04,
  0x08, 0x02, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x06, 0x06, 0x08, 0x02, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x07, 0x08, 0x08, 0x02, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x08, 0x0a,
  0x08, 0x02, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x03, 0x01, 0x09, 0x0c, 0x04, 0x02, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x03, 0x01, 0x0a, 0x0e, 0x04, 0x02, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x02, 0x0b, 0x10,
  0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x02, 0x0d, 0x12, 0x00, 0x04, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x01, 0x00, 0x78, 0x01, 0x4d, 0x8c,
  0xbb, 0x09, 0x42, 0x51, 0x10, 0x05, 0xd7, 0x1f, 0x88, 0x15, 0x18, 0x68,
  0x66, 0x11, 0x86, 0x16, 0x61, 0xf8, 0x8a, 0x30, 0x34, 0xb4, 0x04, 0x43,
  0x8b, 0x30, 0xb4, 0x08, 0x43, 0x8b, 0x30, 0xb4, 0x07, 0x9d, 0xc1, 0x3d,
  0xf0, 0x06, 0xce, 0xe7, 0xde, 0x03, 0x3b, 0xa9, 0xaa, 0x15, 0x5a, 0x23,
  0xb9, 0xf0, 0xb1, 0xb5, 0x34, 0x57, 0xad, 0xb9, 0x6b, 0xcd, 0x53, 0x6b,
  0xde, 0x5a, 0xf0, 0x60, 0xb3, 0x19, 0xf5, 0xfd, 0xa8, 0x1f, 0xe9, 0x53,
  0x0b, 0x9c, 0xba, 0x13, 0x75, 0xc6, 0xcc, 0x1b, 0x12, 0x7b, 0xf8, 0x82,
  0xef, 0x07, 0x12, 0xbb, 0x92, 0x6c, 0x2f, 0x24, 0xf6, 0xdc, 0xcf, 0xf6,
  0x41, 0x62, 0x9f, 0x21, 0xc9, 0xb6, 0xd4, 0xc0, 0x98, 0x23, 0xc9, 0xb6,
  0xd3, 0xc0, 0x58, 0x20, 0xc9, 0x76, 0xc0, 0xbc, 0x65, 0x0f, 0xd9, 0x06,
  0x2c, 0x9b, 0x12, 0x37, 0x53, 0xfe, 0x7f, 0x55, 0x3f, 0x81, 0x42, 0x29,
  0x20, 0x00, 0x00, 0x00, 0x78, 0x62, 0x6f, 0x70, 0x01, 0x00, 0x00, 0x00,
  0x7e, 0x02, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00
};
