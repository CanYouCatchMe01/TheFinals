#if 0
;
; Input signature:
;
; Name                 Index   Mask Register SysValue  Format   Used
; -------------------- ----- ------ -------- -------- ------- ------
; SV_Position              0   xyzw        0     NONE   float   xyzw
; TEXCOORD                 0   xy          1     NONE   float   xy  
; TEXCOORD                 1   xy          2     NONE   float   xy  
; COLOR                    0   xyzw        3     NONE   float   xyzw
;
;
; Output signature:
;
; Name                 Index   Mask Register SysValue  Format   Used
; -------------------- ----- ------ -------- -------- ------- ------
; COLOR                    0   xyzw        0     NONE   float   xyzw
; COLOR                    1   xyzw        1     NONE   float   xyzw
; TEXCOORD                 0   xy          2     NONE   float   xy  
; TEXCOORD                 1     zw        2     NONE   float     zw
; SV_Position              0   xyzw        3      POS   float   xyzw
;
; shader debug name: C:\Users\marcu\Downloads\DirectXTK12-main\DirectXTK12-main\Src/Shaders/Compiled\XboxGamingXboxOneDualTextureEffect_VSDualTextureVc.pdb
; shader hash: 903b56510fd08a5b2320087f547772a1
;
; Pipeline Runtime Information: 
;
;PSVRuntimeInfo:
; Vertex Shader
; OutputPositionPresent=1
; MinimumExpectedWaveLaneCount: 0
; MaximumExpectedWaveLaneCount: 4294967295
; UsesViewID: false
; SigInputElements: 4
; SigOutputElements: 5
; SigPatchConstOrPrimElements: 0
; SigInputVectors: 4
; SigOutputVectors[0]: 4
; SigOutputVectors[1]: 0
; SigOutputVectors[2]: 0
; SigOutputVectors[3]: 0
; EntryFunctionName: VSDualTextureVc
;
;
; Input signature:
;
; Name                 Index             InterpMode DynIdx
; -------------------- ----- ---------------------- ------
; SV_Position              0                              
; TEXCOORD                 0                              
; TEXCOORD                 1                              
; COLOR                    0                              
;
; Output signature:
;
; Name                 Index             InterpMode DynIdx
; -------------------- ----- ---------------------- ------
; COLOR                    0                 linear       
; COLOR                    1                 linear       
; TEXCOORD                 0                 linear       
; TEXCOORD                 1                 linear       
; SV_Position              0          noperspective       
;
; Buffer Definitions:
;
; cbuffer 
; {
;
;   [112 x i8] (type annotation not present)
;
; }
;
;
; Resource Bindings:
;
; Name                                 Type  Format         Dim      ID      HLSL Bind  Count
; ------------------------------ ---------- ------- ----------- ------- -------------- ------
;                                   cbuffer      NA          NA     CB0            cb0     1
;
;
; ViewId state:
;
; Number of inputs: 16, outputs: 16
; Outputs dependent on ViewId: {  }
; Inputs contributing to computation of Outputs:
;   output 0 depends on inputs: { 12 }
;   output 1 depends on inputs: { 13 }
;   output 2 depends on inputs: { 14 }
;   output 3 depends on inputs: { 15 }
;   output 7 depends on inputs: { 0, 1, 2, 3 }
;   output 8 depends on inputs: { 4 }
;   output 9 depends on inputs: { 5 }
;   output 10 depends on inputs: { 8 }
;   output 11 depends on inputs: { 9 }
;   output 12 depends on inputs: { 0, 1, 2, 3 }
;   output 13 depends on inputs: { 0, 1, 2, 3 }
;   output 14 depends on inputs: { 0, 1, 2, 3 }
;   output 15 depends on inputs: { 0, 1, 2, 3 }
;
target datalayout = "e-m:e-p:32:32-i1:32-i8:32-i16:32-i32:32-i64:64-f16:32-f32:32-f64:64-n8:16:32:64"
target triple = "dxil-ms-xb1"

%dx.types.Handle = type { i8* }
%dx.types.CBufRet.f32 = type { float, float, float, float }
%hostlayout.Parameters = type { <4 x float>, <3 x float>, <4 x float>, [4 x <4 x float>] }

define void @VSDualTextureVc() {
  %1 = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 2, i32 0, i32 0, i1 false)  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %2 = call float @dx.op.loadInput.f32(i32 4, i32 3, i32 0, i8 0, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %3 = call float @dx.op.loadInput.f32(i32 4, i32 3, i32 0, i8 1, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %4 = call float @dx.op.loadInput.f32(i32 4, i32 3, i32 0, i8 2, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %5 = call float @dx.op.loadInput.f32(i32 4, i32 3, i32 0, i8 3, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %6 = call float @dx.op.loadInput.f32(i32 4, i32 2, i32 0, i8 0, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %7 = call float @dx.op.loadInput.f32(i32 4, i32 2, i32 0, i8 1, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %8 = call float @dx.op.loadInput.f32(i32 4, i32 1, i32 0, i8 0, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %9 = call float @dx.op.loadInput.f32(i32 4, i32 1, i32 0, i8 1, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %10 = call float @dx.op.loadInput.f32(i32 4, i32 0, i32 0, i8 0, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %11 = call float @dx.op.loadInput.f32(i32 4, i32 0, i32 0, i8 1, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %12 = call float @dx.op.loadInput.f32(i32 4, i32 0, i32 0, i8 2, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %13 = call float @dx.op.loadInput.f32(i32 4, i32 0, i32 0, i8 3, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %14 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 3)  ; CBufferLoadLegacy(handle,regIndex)
  %15 = extractvalue %dx.types.CBufRet.f32 %14, 0
  %16 = extractvalue %dx.types.CBufRet.f32 %14, 1
  %17 = extractvalue %dx.types.CBufRet.f32 %14, 2
  %18 = extractvalue %dx.types.CBufRet.f32 %14, 3
  %19 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 4)  ; CBufferLoadLegacy(handle,regIndex)
  %20 = extractvalue %dx.types.CBufRet.f32 %19, 0
  %21 = extractvalue %dx.types.CBufRet.f32 %19, 1
  %22 = extractvalue %dx.types.CBufRet.f32 %19, 2
  %23 = extractvalue %dx.types.CBufRet.f32 %19, 3
  %24 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 5)  ; CBufferLoadLegacy(handle,regIndex)
  %25 = extractvalue %dx.types.CBufRet.f32 %24, 0
  %26 = extractvalue %dx.types.CBufRet.f32 %24, 1
  %27 = extractvalue %dx.types.CBufRet.f32 %24, 2
  %28 = extractvalue %dx.types.CBufRet.f32 %24, 3
  %29 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 6)  ; CBufferLoadLegacy(handle,regIndex)
  %30 = extractvalue %dx.types.CBufRet.f32 %29, 0
  %31 = extractvalue %dx.types.CBufRet.f32 %29, 1
  %32 = extractvalue %dx.types.CBufRet.f32 %29, 2
  %33 = extractvalue %dx.types.CBufRet.f32 %29, 3
  %34 = fmul fast float %15, %10
  %35 = call float @dx.op.tertiary.f32(i32 46, float %11, float %16, float %34)  ; FMad(a,b,c)
  %36 = call float @dx.op.tertiary.f32(i32 46, float %12, float %17, float %35)  ; FMad(a,b,c)
  %37 = call float @dx.op.tertiary.f32(i32 46, float %13, float %18, float %36)  ; FMad(a,b,c)
  %38 = fmul fast float %20, %10
  %39 = call float @dx.op.tertiary.f32(i32 46, float %11, float %21, float %38)  ; FMad(a,b,c)
  %40 = call float @dx.op.tertiary.f32(i32 46, float %12, float %22, float %39)  ; FMad(a,b,c)
  %41 = call float @dx.op.tertiary.f32(i32 46, float %13, float %23, float %40)  ; FMad(a,b,c)
  %42 = fmul fast float %25, %10
  %43 = call float @dx.op.tertiary.f32(i32 46, float %11, float %26, float %42)  ; FMad(a,b,c)
  %44 = call float @dx.op.tertiary.f32(i32 46, float %12, float %27, float %43)  ; FMad(a,b,c)
  %45 = call float @dx.op.tertiary.f32(i32 46, float %13, float %28, float %44)  ; FMad(a,b,c)
  %46 = fmul fast float %30, %10
  %47 = call float @dx.op.tertiary.f32(i32 46, float %11, float %31, float %46)  ; FMad(a,b,c)
  %48 = call float @dx.op.tertiary.f32(i32 46, float %12, float %32, float %47)  ; FMad(a,b,c)
  %49 = call float @dx.op.tertiary.f32(i32 46, float %13, float %33, float %48)  ; FMad(a,b,c)
  %50 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 0)  ; CBufferLoadLegacy(handle,regIndex)
  %51 = extractvalue %dx.types.CBufRet.f32 %50, 0
  %52 = extractvalue %dx.types.CBufRet.f32 %50, 1
  %53 = extractvalue %dx.types.CBufRet.f32 %50, 2
  %54 = extractvalue %dx.types.CBufRet.f32 %50, 3
  %55 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 2)  ; CBufferLoadLegacy(handle,regIndex)
  %56 = extractvalue %dx.types.CBufRet.f32 %55, 0
  %57 = extractvalue %dx.types.CBufRet.f32 %55, 1
  %58 = extractvalue %dx.types.CBufRet.f32 %55, 2
  %59 = extractvalue %dx.types.CBufRet.f32 %55, 3
  %60 = call float @dx.op.dot4.f32(i32 56, float %10, float %11, float %12, float %13, float %56, float %57, float %58, float %59)  ; Dot4(ax,ay,az,aw,bx,by,bz,bw)
  %61 = call float @dx.op.unary.f32(i32 7, float %60)  ; Saturate(value)
  %62 = fmul fast float %51, %2
  %63 = fmul fast float %52, %3
  %64 = fmul fast float %53, %4
  %65 = fmul fast float %54, %5
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 0, float %62)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 1, float %63)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 2, float %64)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 3, float %65)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 1, i32 0, i8 0, float 0.000000e+00)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 1, i32 0, i8 1, float 0.000000e+00)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 1, i32 0, i8 2, float 0.000000e+00)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 1, i32 0, i8 3, float %61)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 2, i32 0, i8 0, float %8)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 2, i32 0, i8 1, float %9)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 3, i32 0, i8 0, float %6)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 3, i32 0, i8 1, float %7)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 4, i32 0, i8 0, float %37)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 4, i32 0, i8 1, float %41)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 4, i32 0, i8 2, float %45)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 4, i32 0, i8 3, float %49)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  ret void
}

; Function Attrs: nounwind readnone
declare float @dx.op.loadInput.f32(i32, i32, i32, i8, i32) #0

; Function Attrs: nounwind
declare void @dx.op.storeOutput.f32(i32, i32, i32, i8, float) #1

; Function Attrs: nounwind readnone
declare float @dx.op.unary.f32(i32, float) #0

; Function Attrs: nounwind readnone
declare float @dx.op.dot4.f32(i32, float, float, float, float, float, float, float, float) #0

; Function Attrs: nounwind readonly
declare %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32, %dx.types.Handle, i32) #2

; Function Attrs: nounwind readnone
declare float @dx.op.tertiary.f32(i32, float, float, float) #0

; Function Attrs: nounwind readonly
declare %dx.types.Handle @dx.op.createHandle(i32, i8, i32, i32, i1) #2

attributes #0 = { nounwind readnone }
attributes #1 = { nounwind }
attributes #2 = { nounwind readonly }

!xbox.compiler.options = !{!0}
!llvm.ident = !{!1}
!dx.version = !{!2}
!dx.valver = !{!3}
!dx.shaderModel = !{!4}
!dx.resources = !{!5}
!dx.viewIdState = !{!8}
!dx.entryPoints = !{!9}

!0 = !{!"__XBOX_PER_THREAD_SCRATCH_SIZE_LIMIT_IN_BYTES", !"0"}
!1 = !{!"dxcxbox 2410.2410.11116.10741"}
!2 = !{i32 1, i32 0}
!3 = !{i32 1, i32 8}
!4 = !{!"vs", i32 6, i32 0}
!5 = !{null, null, !6, null}
!6 = !{!7}
!7 = !{i32 0, %hostlayout.Parameters* undef, !"", i32 0, i32 0, i32 1, i32 112, null}
!8 = !{[18 x i32] [i32 16, i32 16, i32 61568, i32 61568, i32 61568, i32 61568, i32 256, i32 512, i32 0, i32 0, i32 1024, i32 2048, i32 0, i32 0, i32 1, i32 2, i32 4, i32 8]}
!9 = !{void ()* @VSDualTextureVc, !"VSDualTextureVc", !10, !5, null}
!10 = !{!11, !20, null}
!11 = !{!12, !15, !17, !19}
!12 = !{i32 0, !"SV_Position", i8 9, i8 0, !13, i8 0, i32 1, i8 4, i32 0, i8 0, !14}
!13 = !{i32 0}
!14 = !{i32 3, i32 15}
!15 = !{i32 1, !"TEXCOORD", i8 9, i8 0, !13, i8 0, i32 1, i8 2, i32 1, i8 0, !16}
!16 = !{i32 3, i32 3}
!17 = !{i32 2, !"TEXCOORD", i8 9, i8 0, !18, i8 0, i32 1, i8 2, i32 2, i8 0, !16}
!18 = !{i32 1}
!19 = !{i32 3, !"COLOR", i8 9, i8 0, !13, i8 0, i32 1, i8 4, i32 3, i8 0, !14}
!20 = !{!21, !22, !23, !24, !25}
!21 = !{i32 0, !"COLOR", i8 9, i8 0, !13, i8 2, i32 1, i8 4, i32 0, i8 0, !14}
!22 = !{i32 1, !"COLOR", i8 9, i8 0, !18, i8 2, i32 1, i8 4, i32 1, i8 0, !14}
!23 = !{i32 2, !"TEXCOORD", i8 9, i8 0, !13, i8 2, i32 1, i8 2, i32 2, i8 0, !16}
!24 = !{i32 3, !"TEXCOORD", i8 9, i8 0, !18, i8 2, i32 1, i8 2, i32 2, i8 2, !16}
!25 = !{i32 4, !"SV_Position", i8 9, i8 3, !13, i8 4, i32 1, i8 4, i32 3, i8 0, !14}

;
; DUMPING SHADER HARDWARE INSTRUCTIONS 
;
// Shader Type               : (VS)
// Shader Hw Stage           : (VS)

// Shader Instructions:
shader main
  asic(CI)
  type(VS)
  s_swappc_b64  s[0:1], s[0:1]
  s_or_b32      s1, s8, 0x00100000 // wrscc
  s_mov_b32     s0, s7
  s_mov_b32     s2, -1
  s_mov_b32     s3, 0x00024fac
  s_buffer_load_dwordx4  s[4:7], s[0:3], 0x18
  v_mov_b32     v0, 0
  s_waitcnt     vmcnt(0) & lgkmcnt(0)
  v_mul_legacy_f32  v1, s4, v4
  v_mac_legacy_f32  v1, s5, v5
  v_mac_legacy_f32  v1, s6, v6
  v_mac_legacy_f32  v1, s7, v7
  s_buffer_load_dwordx4  s[16:19], s[0:3], 0x00
  s_buffer_load_dwordx16  s[0:15], s[0:3], 0x08
  s_waitcnt     lgkmcnt(0)
  v_mul_legacy_f32  v2, s4, v4
  v_mul_legacy_f32  v3, s8, v4
  v_mul_legacy_f32  v10, s12, v4
  v_mac_legacy_f32  v2, s5, v5
  v_mac_legacy_f32  v3, s9, v5
  v_mac_legacy_f32  v10, s13, v5
  v_mac_legacy_f32  v2, s6, v6
  v_mac_legacy_f32  v3, s10, v6
  v_mac_legacy_f32  v10, s14, v6
  v_mac_legacy_f32  v2, s7, v7
  v_mac_legacy_f32  v3, s11, v7
  v_mac_legacy_f32  v10, s15, v7
  exp           pos0, v2, v3, v10, v1 done
  s_waitcnt     expcnt(0)
  v_mul_legacy_f32  v1, s1, v5
  v_mul_legacy_f32  v2, s3, v7
  v_mac_legacy_f32  v1, s0, v4
  v_mac_legacy_f32  v2, s2, v6
  v_add_f32     v1, v1, v2 clamp
  v_mul_legacy_f32  v2, s16, v16
  v_mul_legacy_f32  v3, s17, v17
  v_mul_legacy_f32  v4, s18, v18
  v_mul_legacy_f32  v5, s19, v19
  exp           param0, v2, v3, v4, v5
  exp           param1, v0, v0, v0, v1
  exp           param2, v8, v9, v12, v13
  s_endpgm      
end


NumVGPR=20,NumSGPR=22,LDS=0,Scratch=0,Occpancy=10

// Shader Type               : (VS)
// Shader Hw Stage           : (ES)

// Shader Instructions:
shader main
  asic(CI)
  type(VS)
  s_swappc_b64  s[0:1], s[0:1]
  s_mov_b32     s4, s7
  s_or_b32      s5, s8, 0x00100000 // wrscc
  s_mov_b32     s6, -1
  s_mov_b32     s7, 0x00024fac
  s_buffer_load_dwordx4  s[12:15], s[4:7], 0x18
  s_mov_b32     s1, 0
  s_load_dwordx4  s[0:3], s[0:1], 0x08
  s_waitcnt     vmcnt(0) & lgkmcnt(0)
  v_mul_legacy_f32  v0, s12, v4
  v_mac_legacy_f32  v0, s13, v5
  v_mac_legacy_f32  v0, s14, v6
  v_mac_legacy_f32  v0, s15, v7
  s_buffer_load_dwordx16  s[12:27], s[4:7], 0x08
  s_buffer_load_dwordx4  s[4:7], s[4:7], 0x00
  s_waitcnt     lgkmcnt(0)
  v_mul_legacy_f32  v1, s16, v4
  v_mul_legacy_f32  v3, s20, v4
  v_mac_legacy_f32  v1, s17, v5
  v_mac_legacy_f32  v3, s21, v5
  v_mac_legacy_f32  v1, s18, v6
  v_mac_legacy_f32  v3, s22, v6
  v_mac_legacy_f32  v1, s19, v7
  v_mac_legacy_f32  v3, s23, v7
  buffer_store_dword  v1, v0, s[0:3], s9 offset:48 glc slc
  buffer_store_dword  v3, v0, s[0:3], s9 offset:52 glc slc
  v_mul_legacy_f32  v1, s24, v4
  v_mac_legacy_f32  v1, s25, v5
  v_mac_legacy_f32  v1, s26, v6
  v_mac_legacy_f32  v1, s27, v7
  v_mul_legacy_f32  v2, s4, v16
  buffer_store_dword  v1, v0, s[0:3], s9 offset:56 glc slc
  buffer_store_dword  v0, v0, s[0:3], s9 offset:60 glc slc
  buffer_store_dword  v2, v0, s[0:3], s9 glc slc
  v_mul_legacy_f32  v0, s5, v17
  buffer_store_dword  v0, v0, s[0:3], s9 offset:4 glc slc
  v_mul_legacy_f32  v0, s6, v18
  buffer_store_dword  v0, v0, s[0:3], s9 offset:8 glc slc
  v_mul_legacy_f32  v0, s7, v19
  v_mul_legacy_f32  v1, s15, v7
  buffer_store_dword  v0, v0, s[0:3], s9 offset:12 glc slc
  v_mul_legacy_f32  v0, s13, v5
  v_mac_legacy_f32  v0, s12, v4
  v_mac_legacy_f32  v1, s14, v6
  v_add_f32     v0, v0, v1 clamp
  v_mov_b32     v1, 0
  buffer_store_dword  v1, v0, s[0:3], s9 offset:16 glc slc
  buffer_store_dword  v1, v0, s[0:3], s9 offset:20 glc slc
  buffer_store_dword  v1, v0, s[0:3], s9 offset:24 glc slc
  buffer_store_dword  v0, v0, s[0:3], s9 offset:28 glc slc
  buffer_store_dword  v8, v0, s[0:3], s9 offset:32 glc slc
  buffer_store_dword  v9, v0, s[0:3], s9 offset:36 glc slc
  buffer_store_dword  v12, v0, s[0:3], s9 offset:40 glc slc
  buffer_store_dword  v13, v0, s[0:3], s9 offset:44 glc slc
  s_endpgm      
end


NumVGPR=20,NumSGPR=30,LDS=0,Scratch=0,Occpancy=10

// Shader Type               : (VS)
// Shader Hw Stage           : (LS)

// Shader Instructions:
shader main
  asic(CI)
  type(VS)
  s_swappc_b64  s[0:1], s[0:1]
  s_or_b32      s21, s8, 0x00100000 // wrscc
  s_mov_b32     s20, s7
  s_mov_b32     s22, -1
  s_mov_b32     s23, 0x00024fac
  s_buffer_load_dwordx4  s[16:19], s[20:23], 0x00
  s_buffer_load_dwordx16  s[0:15], s[20:23], 0x08
  s_buffer_load_dwordx4  s[20:23], s[20:23], 0x18
  s_mov_b32     m0, -1
  s_waitcnt     vmcnt(0) & lgkmcnt(0)
  v_mul_legacy_f32  v14, s18, v18
  v_mul_legacy_f32  v0, s4, v4
  v_mac_legacy_f32  v0, s5, v5
  v_mac_legacy_f32  v0, s6, v6
  v_mad_legacy_f32  v2, v7, s7, v0
  v_mul_legacy_f32  v0, s8, v4
  v_mac_legacy_f32  v0, s9, v5
  v_mac_legacy_f32  v0, s10, v6
  v_mad_legacy_f32  v3, v7, s11, v0
  v_mul_legacy_f32  v0, s12, v4
  v_mac_legacy_f32  v0, s13, v5
  v_mac_legacy_f32  v0, s14, v6
  v_mad_legacy_f32  v10, v7, s15, v0
  v_mul_legacy_f32  v0, s20, v4
  v_mac_legacy_f32  v0, s21, v5
  v_mac_legacy_f32  v0, s22, v6
  v_mad_legacy_f32  v11, v7, s23, v0
  v_mul_legacy_f32  v0, s1, v5
  v_mul_legacy_f32  v5, s3, v7
  v_mac_legacy_f32  v0, s0, v4
  v_mad_legacy_f32  v4, v6, s2, v5
  v_lshlrev_b32  v7, 6, v1
  v_mul_legacy_f32  v5, s16, v16
  v_mul_legacy_f32  v6, s17, v17
  v_mul_legacy_f32  v15, s19, v19
  ds_write2_b64  v7, v[2:3], v[10:11] offset0:6 offset1:7
  v_add_f32     v4, v0, v4 clamp
  ds_write2_b64  v7, v[5:6], v[14:15] offset1:1
  v_mov_b32     v0, 0
  v_mov_b32     v1, 0
  v_mov_b32     v3, 0
  ds_write2_b64  v7, v[0:1], v[3:4] offset0:2 offset1:3
  ds_write2_b64  v7, v[8:9], v[12:13] offset0:4 offset1:5
  s_endpgm      
end


NumVGPR=20,NumSGPR=26,LDS=0,Scratch=0,Occpancy=10


#endif

const unsigned char DualTextureEffect_VSDualTextureVc[] = {
  0x44, 0x58, 0x42, 0x43, 0x56, 0xb7, 0xf0, 0x87, 0xae, 0x6e, 0xb5, 0x3c,
  0xa0, 0xa1, 0x99, 0xc5, 0x9e, 0xad, 0x89, 0xa8, 0x01, 0x00, 0x00, 0x00,
  0xf0, 0x16, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00,
  0x50, 0x00, 0x00, 0x00, 0xfc, 0x00, 0x00, 0x00, 0xc8, 0x01, 0x00, 0x00,
  0x60, 0x03, 0x00, 0x00, 0x34, 0x04, 0x00, 0x00, 0xc8, 0x04, 0x00, 0x00,
  0xe4, 0x04, 0x00, 0x00, 0x53, 0x46, 0x49, 0x30, 0x08, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x49, 0x53, 0x47, 0x31,
  0xa4, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x88, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x0f, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x94, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x03, 0x03, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x94, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x03, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x9d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x0f, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x53, 0x56, 0x5f, 0x50,
  0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x00, 0x54, 0x45, 0x58, 0x43,
  0x4f, 0x4f, 0x52, 0x44, 0x00, 0x43, 0x4f, 0x4c, 0x4f, 0x52, 0x00, 0x00,
  0x4f, 0x53, 0x47, 0x31, 0xc4, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00,
  0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xa8, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xa8, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xae, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x03, 0x0c, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xae, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x0c, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xb7, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x43, 0x4f, 0x4c, 0x4f,
  0x52, 0x00, 0x54, 0x45, 0x58, 0x43, 0x4f, 0x4f, 0x52, 0x44, 0x00, 0x53,
  0x56, 0x5f, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x00, 0x00,
  0x50, 0x53, 0x56, 0x30, 0x90, 0x01, 0x00, 0x00, 0x34, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff,
  0x01, 0x00, 0x00, 0x00, 0x04, 0x05, 0x00, 0x04, 0x04, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x43, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x54, 0x00, 0x00, 0x00, 0x00, 0x53, 0x56, 0x5f, 0x50, 0x6f, 0x73, 0x69,
  0x74, 0x69, 0x6f, 0x6e, 0x00, 0x54, 0x45, 0x58, 0x43, 0x4f, 0x4f, 0x52,
  0x44, 0x00, 0x54, 0x45, 0x58, 0x43, 0x4f, 0x4f, 0x52, 0x44, 0x00, 0x43,
  0x4f, 0x4c, 0x4f, 0x52, 0x00, 0x43, 0x4f, 0x4c, 0x4f, 0x52, 0x00, 0x43,
  0x4f, 0x4c, 0x4f, 0x52, 0x00, 0x54, 0x45, 0x58, 0x43, 0x4f, 0x4f, 0x52,
  0x44, 0x00, 0x54, 0x45, 0x58, 0x43, 0x4f, 0x4f, 0x52, 0x44, 0x00, 0x56,
  0x53, 0x44, 0x75, 0x61, 0x6c, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65,
  0x56, 0x63, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x44, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x0d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x42, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x16, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x01, 0x02, 0x42, 0x00, 0x03, 0x00, 0x00, 0x00, 0x1f, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x03, 0x44, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x25, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x44, 0x00,
  0x03, 0x02, 0x00, 0x00, 0x2b, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x01, 0x01, 0x44, 0x00, 0x03, 0x02, 0x00, 0x00, 0x31, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x02, 0x42, 0x00, 0x03, 0x02, 0x00, 0x00,
  0x3a, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x02, 0x62, 0x00,
  0x03, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x03, 0x44, 0x03, 0x03, 0x04, 0x00, 0x00, 0x80, 0xf0, 0x00, 0x00,
  0x80, 0xf0, 0x00, 0x00, 0x80, 0xf0, 0x00, 0x00, 0x80, 0xf0, 0x00, 0x00,
  0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00,
  0x52, 0x54, 0x53, 0x30, 0xcc, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x05, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xcc, 0x00, 0x00, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x05, 0x00, 0x00, 0x00, 0x54, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x05, 0x00, 0x00, 0x00, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x05, 0x00, 0x00, 0x00, 0x8c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x05, 0x00, 0x00, 0x00, 0xa8, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xc4, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x5c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff,
  0x01, 0x00, 0x00, 0x00, 0x78, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xff, 0xff, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x94, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00,
  0xb0, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x49, 0x4c, 0x44, 0x4e,
  0x8c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x86, 0x00, 0x43, 0x3a, 0x5c, 0x55,
  0x73, 0x65, 0x72, 0x73, 0x5c, 0x6d, 0x61, 0x72, 0x63, 0x75, 0x5c, 0x44,
  0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x73, 0x5c, 0x44, 0x69, 0x72,
  0x65, 0x63, 0x74, 0x58, 0x54, 0x4b, 0x31, 0x32, 0x2d, 0x6d, 0x61, 0x69,
  0x6e, 0x5c, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x58, 0x54, 0x4b, 0x31,
  0x32, 0x2d, 0x6d, 0x61, 0x69, 0x6e, 0x5c, 0x53, 0x72, 0x63, 0x2f, 0x53,
  0x68, 0x61, 0x64, 0x65, 0x72, 0x73, 0x2f, 0x43, 0x6f, 0x6d, 0x70, 0x69,
  0x6c, 0x65, 0x64, 0x5c, 0x58, 0x62, 0x6f, 0x78, 0x47, 0x61, 0x6d, 0x69,
  0x6e, 0x67, 0x58, 0x62, 0x6f, 0x78, 0x4f, 0x6e, 0x65, 0x44, 0x75, 0x61,
  0x6c, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x45, 0x66, 0x66, 0x65,
  0x63, 0x74, 0x5f, 0x56, 0x53, 0x44, 0x75, 0x61, 0x6c, 0x54, 0x65, 0x78,
  0x74, 0x75, 0x72, 0x65, 0x56, 0x63, 0x2e, 0x70, 0x64, 0x62, 0x00, 0x00,
  0x48, 0x41, 0x53, 0x48, 0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x90, 0x3b, 0x56, 0x51, 0x0f, 0xd0, 0x8a, 0x5b, 0x23, 0x20, 0x08, 0x7f,
  0x54, 0x77, 0x72, 0xa1, 0x44, 0x58, 0x49, 0x4c, 0x04, 0x12, 0x00, 0x00,
  0x60, 0x00, 0x01, 0x00, 0x81, 0x04, 0x00, 0x00, 0x44, 0x58, 0x49, 0x4c,
  0x00, 0x01, 0x00, 0x00, 0x94, 0x00, 0x00, 0x00, 0xb8, 0x09, 0x00, 0x00,
  0x58, 0x44, 0x41, 0x54, 0x08, 0x00, 0x00, 0x00, 0x24, 0x00, 0x00, 0x00,
  0x07, 0x00, 0x00, 0x00, 0x84, 0x00, 0x00, 0x00, 0xd0, 0x09, 0x00, 0x00,
  0x10, 0x00, 0x00, 0x00, 0x54, 0x0a, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x64, 0x0a, 0x00, 0x00, 0xee, 0x01, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x54, 0x0c, 0x00, 0x00, 0x21, 0x02, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x78, 0x0e, 0x00, 0x00, 0xf7, 0x01, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x70, 0x10, 0x00, 0x00, 0x20, 0x01, 0x00, 0x00,
  0x06, 0x00, 0x00, 0x00, 0x90, 0x11, 0x00, 0x00, 0x5f, 0x00, 0x00, 0x00,
  0x08, 0x00, 0x00, 0x00, 0xf0, 0x11, 0x00, 0x00, 0x11, 0x00, 0x00, 0x00,
  0x60, 0x00, 0x01, 0x00, 0x74, 0x02, 0x00, 0x00, 0x44, 0x58, 0x49, 0x4c,
  0x00, 0x01, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0xb8, 0x09, 0x00, 0x00,
  0x42, 0x43, 0xc0, 0xde, 0x21, 0x0c, 0x00, 0x00, 0x6b, 0x02, 0x00, 0x00,
  0x0b, 0x82, 0x20, 0x00, 0x02, 0x00, 0x00, 0x00, 0x13, 0x00, 0x00, 0x00,
  0x07, 0x81, 0x23, 0x91, 0x41, 0xc8, 0x04, 0x49, 0x06, 0x10, 0x32, 0x39,
  0x92, 0x01, 0x84, 0x0c, 0x25, 0x05, 0x08, 0x19, 0x1e, 0x04, 0x8b, 0x62,
  0x80, 0x14, 0x45, 0x02, 0x42, 0x92, 0x0b, 0x42, 0xa4, 0x10, 0x32, 0x14,
  0x38, 0x08, 0x18, 0x4b, 0x0a, 0x32, 0x52, 0x88, 0x48, 0x90, 0x14, 0x20,
  0x43, 0x46, 0x88, 0xa5, 0x00, 0x19, 0x32, 0x42, 0xe4, 0x48, 0x0e, 0x90,
  0x91, 0x22, 0xc4, 0x50, 0x41, 0x51, 0x81, 0x8c, 0xe1, 0x83, 0xe5, 0x8a,
  0x04, 0x29, 0x46, 0x06, 0x51, 0x18, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00,
  0x1b, 0x8c, 0xe0, 0xff, 0xff, 0xff, 0xff, 0x07, 0x40, 0x02, 0xa8, 0x0d,
  0x84, 0xf0, 0xff, 0xff, 0xff, 0xff, 0x03, 0x20, 0x6d, 0x30, 0x86, 0xff,
  0xff, 0xff, 0xff, 0x1f, 0x00, 0x09, 0xa8, 0x00, 0x49, 0x18, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x13, 0x82, 0x60, 0x42, 0x20, 0x4c, 0x08, 0x06,
  0x00, 0x00, 0x00, 0x00, 0x89, 0x20, 0x00, 0x00, 0x29, 0x00, 0x00, 0x00,
  0x32, 0x22, 0x48, 0x09, 0x20, 0x64, 0x85, 0x04, 0x93, 0x22, 0xa4, 0x84,
  0x04, 0x93, 0x22, 0xe3, 0x84, 0xa1, 0x90, 0x14, 0x12, 0x4c, 0x8a, 0x8c,
  0x0b, 0x84, 0xa4, 0x4c, 0x10, 0x7c, 0x23, 0x00, 0x25, 0x00, 0x14, 0x66,
  0x00, 0xe6, 0x08, 0xc0, 0x60, 0x8e, 0x00, 0x29, 0xc6, 0x20, 0x84, 0x14,
  0x42, 0xa6, 0x18, 0x80, 0x10, 0x52, 0x06, 0xa1, 0x32, 0x0c, 0x32, 0x48,
  0x15, 0x65, 0x90, 0x31, 0xc6, 0x18, 0x63, 0x0c, 0x62, 0x47, 0x0d, 0x97,
  0x3f, 0x61, 0x0f, 0x21, 0xf9, 0xdc, 0x46, 0x15, 0x2b, 0x31, 0xf9, 0xc5,
  0x6d, 0x23, 0x62, 0x8c, 0x31, 0xa8, 0xdc, 0x33, 0x5c, 0xfe, 0x84, 0x3d,
  0x84, 0xe4, 0x87, 0x40, 0x33, 0x2c, 0x04, 0x0a, 0x5e, 0x21, 0x1c, 0x81,
  0x84, 0x62, 0x29, 0x06, 0x19, 0x63, 0xd0, 0x9c, 0x23, 0x08, 0x8a, 0x01,
  0x49, 0x21, 0xa4, 0x92, 0x1d, 0x08, 0x18, 0x46, 0x20, 0x86, 0x61, 0x84,
  0x61, 0x48, 0x82, 0x7c, 0xd5, 0xe1, 0x48, 0xd3, 0x02, 0x60, 0x0e, 0x35,
  0xf9, 0x29, 0x10, 0x01, 0x0c, 0x31, 0x11, 0x91, 0x84, 0x88, 0xac, 0xf3,
  0x26, 0x9e, 0x12, 0x04, 0x00, 0x00, 0x00, 0x00, 0x13, 0x16, 0x72, 0xc0,
  0x87, 0x74, 0x60, 0x87, 0x36, 0x68, 0x87, 0x79, 0x68, 0x03, 0x7c, 0x10,
  0x87, 0x38, 0xd8, 0xf0, 0x0a, 0xe5, 0xd0, 0x06, 0xed, 0xa0, 0x07, 0xe5,
  0xd0, 0x06, 0xf0, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x7a, 0x30, 0x07, 0x72,
  0xd0, 0x06, 0xe9, 0x10, 0x07, 0x7a, 0x30, 0x07, 0x72, 0xd0, 0x06, 0xe9,
  0x80, 0x07, 0x7a, 0x30, 0x07, 0x72, 0xd0, 0x06, 0xe9, 0x10, 0x07, 0x76,
  0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x90, 0x0e, 0x73, 0x20, 0x07, 0x7a,
  0x30, 0x07, 0x72, 0xd0, 0x06, 0xe9, 0x60, 0x07, 0x74, 0xa0, 0x07, 0x76,
  0x40, 0x07, 0x6d, 0x60, 0x0e, 0x71, 0x60, 0x07, 0x7a, 0x30, 0x07, 0x72,
  0xd0, 0x06, 0xe6, 0x30, 0x07, 0x72, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d,
  0x60, 0x0e, 0x76, 0x40, 0x07, 0x7a, 0x60, 0x07, 0x74, 0xd0, 0x06, 0xee,
  0x80, 0x07, 0x7a, 0x10, 0x07, 0x76, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x7a,
  0x60, 0x07, 0x74, 0x30, 0xe4, 0x09, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x60, 0xc8, 0x63, 0x00, 0x01, 0x10, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x90, 0x07, 0x01, 0x02, 0x40, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x21, 0x8f, 0x02, 0x04, 0x40,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x43, 0x1e, 0x06, 0x08,
  0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x86, 0x3c, 0x11,
  0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x79,
  0x26, 0x20, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18,
  0xf2, 0x58, 0x40, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x90, 0x05, 0x02, 0x00, 0x13, 0x00, 0x00, 0x00, 0x32, 0x1e, 0x98, 0x14,
  0x19, 0x11, 0x4c, 0x90, 0x8c, 0x09, 0x26, 0x47, 0xc6, 0x04, 0x43, 0x22,
  0x25, 0x30, 0x02, 0x50, 0x10, 0xc5, 0x50, 0xe0, 0x01, 0x65, 0x50, 0x1e,
  0x45, 0x50, 0x08, 0x54, 0x4a, 0x62, 0x04, 0xa0, 0x10, 0x8a, 0xa0, 0x0c,
  0xa8, 0xcf, 0x00, 0x90, 0x1f, 0x4b, 0x82, 0x20, 0x90, 0xe4, 0x03, 0x90,
  0xe4, 0x03, 0x90, 0xe4, 0x03, 0x90, 0xe4, 0x03, 0x10, 0x01, 0x21, 0x00,
  0x00, 0xc1, 0x00, 0x04, 0x05, 0x00, 0x08, 0x04, 0x02, 0x01, 0x00, 0x00,
  0x79, 0x18, 0x00, 0x00, 0x82, 0x00, 0x00, 0x00, 0x1a, 0x03, 0x4c, 0x90,
  0x46, 0x02, 0x13, 0xc4, 0x36, 0xf8, 0xfa, 0xc2, 0x12, 0x7a, 0xc2, 0xfa,
  0x82, 0x2a, 0x92, 0xfa, 0xa2, 0x42, 0x92, 0x2a, 0x0a, 0x22, 0xfa, 0x9a,
  0x1a, 0x92, 0x0a, 0xa2, 0x1a, 0x42, 0xfa, 0x9a, 0x4a, 0xd2, 0x2a, 0xfa,
  0x62, 0x4a, 0x6a, 0x4a, 0xa2, 0xfa, 0x4a, 0x72, 0xfa, 0x12, 0xca, 0xa2,
  0x2a, 0x9a, 0x62, 0x00, 0xb3, 0x41, 0x08, 0x04, 0x76, 0x64, 0x78, 0x63,
  0x78, 0x62, 0x6f, 0x78, 0x20, 0x32, 0x34, 0x31, 0x30, 0x2e, 0x32, 0x34,
  0x31, 0x30, 0x2e, 0x31, 0x31, 0x31, 0x31, 0x36, 0x2e, 0x31, 0x30, 0x37,
  0x34, 0x31, 0x1b, 0x02, 0x62, 0x82, 0x40, 0x20, 0x13, 0x04, 0x22, 0xd9,
  0x20, 0x18, 0xc7, 0x04, 0x81, 0x50, 0x36, 0x08, 0x46, 0x42, 0xc1, 0x6e,
  0x6e, 0x82, 0x40, 0x2c, 0x1b, 0x86, 0x85, 0x39, 0x26, 0x08, 0x9d, 0x45,
  0x60, 0x82, 0x40, 0x30, 0x1b, 0x90, 0xc3, 0x79, 0x8e, 0xc3, 0x80, 0x80,
  0x0d, 0x41, 0xb4, 0x81, 0x00, 0x00, 0x09, 0x98, 0x20, 0x78, 0xd7, 0x86,
  0x80, 0x9a, 0x20, 0x08, 0x00, 0x1f, 0xab, 0x29, 0xa2, 0xba, 0x30, 0x36,
  0xaa, 0x32, 0x3c, 0xba, 0x3a, 0xb9, 0x32, 0xab, 0x31, 0x2e, 0x53, 0x56,
  0x5f, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x13, 0x84, 0x22,
  0x9a, 0x20, 0x14, 0xd2, 0x86, 0xe0, 0x98, 0x20, 0x14, 0xd3, 0x04, 0x81,
  0x68, 0x26, 0x08, 0x84, 0xb3, 0x41, 0xe8, 0xbc, 0x0d, 0xcb, 0x81, 0x65,
  0xda, 0xa6, 0x19, 0xdc, 0xa1, 0x7d, 0x44, 0xa8, 0x8a, 0xb0, 0x86, 0x9e,
  0x9e, 0xa4, 0x88, 0x26, 0x08, 0x05, 0xb5, 0x41, 0xe8, 0xba, 0x0d, 0x8b,
  0x11, 0x06, 0x99, 0xb6, 0x69, 0x86, 0x18, 0x18, 0xda, 0x18, 0x4c, 0x10,
  0x88, 0x67, 0x43, 0x60, 0x6c, 0x58, 0xca, 0x20, 0x0c, 0x32, 0xcd, 0x0c,
  0x34, 0x43, 0x0c, 0xca, 0x40, 0x1b, 0x03, 0x16, 0x43, 0x4f, 0x4c, 0x4f,
  0x52, 0x1b, 0x96, 0x0e, 0x0d, 0x32, 0x6d, 0xd3, 0x0c, 0xae, 0xd3, 0xbe,
  0x0d, 0x04, 0x18, 0x90, 0xc1, 0x19, 0xa4, 0xc1, 0x86, 0xe5, 0x40, 0x83,
  0x4c, 0xdb, 0xc4, 0xc0, 0xe0, 0x0e, 0xed, 0xdb, 0xb0, 0x18, 0x68, 0x90,
  0x69, 0x66, 0x20, 0x06, 0x06, 0x67, 0x68, 0xdf, 0x86, 0xa5, 0x0c, 0xc2,
  0x20, 0xd3, 0x36, 0x31, 0x30, 0xc4, 0xa0, 0x0c, 0xb4, 0x31, 0xd8, 0xb0,
  0x74, 0x61, 0x90, 0x69, 0x66, 0x20, 0x06, 0x86, 0x18, 0x94, 0x81, 0x18,
  0x8c, 0xc1, 0x04, 0x81, 0x80, 0x26, 0x08, 0x45, 0xb5, 0x61, 0x79, 0x03,
  0x2c, 0x83, 0x83, 0x8d, 0x33, 0xb8, 0x4e, 0xfb, 0x36, 0x14, 0x6b, 0xc0,
  0x06, 0x6d, 0xe0, 0x06, 0x71, 0xb0, 0x61, 0x50, 0x03, 0x39, 0x00, 0x36,
  0x14, 0xd6, 0x35, 0x07, 0x13, 0xd0, 0x0a, 0x4f, 0xec, 0x0d, 0xcf, 0x65,
  0xec, 0xad, 0x0d, 0x2e, 0x8d, 0xad, 0x4c, 0xce, 0xe5, 0x0d, 0x8e, 0x2e,
  0xed, 0xcd, 0x6d, 0x6e, 0x4a, 0x20, 0x54, 0x61, 0x63, 0xb3, 0x6b, 0x73,
  0x49, 0x23, 0x2b, 0x73, 0xa3, 0x9b, 0x12, 0x10, 0x55, 0xc8, 0xf0, 0x5c,
  0xec, 0xca, 0xe4, 0xe6, 0xd2, 0xde, 0xdc, 0xa6, 0x04, 0x47, 0x13, 0x32,
  0x3c, 0x17, 0xbb, 0x30, 0x36, 0xbb, 0x32, 0xb9, 0x29, 0x41, 0x52, 0x87,
  0x0c, 0xcf, 0x65, 0x0e, 0x2d, 0x8c, 0xac, 0x4c, 0xae, 0xe9, 0x8d, 0xac,
  0x8c, 0x6d, 0x4a, 0xc0, 0x94, 0x21, 0xc3, 0x73, 0x91, 0x2b, 0x9b, 0x7b,
  0xab, 0x93, 0x1b, 0x2b, 0x9b, 0x9b, 0x12, 0x48, 0x75, 0xc8, 0xf0, 0x5c,
  0xec, 0xd2, 0xca, 0xee, 0x92, 0xc8, 0xa6, 0xe8, 0xc2, 0xe8, 0xca, 0xa6,
  0x04, 0x54, 0x1d, 0x32, 0x3c, 0x97, 0x32, 0x37, 0x3a, 0xb9, 0x3c, 0xa8,
  0xb7, 0x34, 0x37, 0xba, 0xb9, 0x29, 0xc1, 0x1c, 0x00, 0x00, 0x00, 0x00,
  0x79, 0x18, 0x00, 0x00, 0x4c, 0x00, 0x00, 0x00, 0x33, 0x08, 0x80, 0x1c,
  0xc4, 0xe1, 0x1c, 0x66, 0x14, 0x01, 0x3d, 0x88, 0x43, 0x38, 0x84, 0xc3,
  0x8c, 0x42, 0x80, 0x07, 0x79, 0x78, 0x07, 0x73, 0x98, 0x71, 0x0c, 0xe6,
  0x00, 0x0f, 0xed, 0x10, 0x0e, 0xf4, 0x80, 0x0e, 0x33, 0x0c, 0x42, 0x1e,
  0xc2, 0xc1, 0x1d, 0xce, 0xa1, 0x1c, 0x66, 0x30, 0x05, 0x3d, 0x88, 0x43,
  0x38, 0x84, 0x83, 0x1b, 0xcc, 0x03, 0x3d, 0xc8, 0x43, 0x3d, 0x8c, 0x03,
  0x3d, 0xcc, 0x78, 0x8c, 0x74, 0x70, 0x07, 0x7b, 0x08, 0x07, 0x79, 0x48,
  0x87, 0x70, 0x70, 0x07, 0x7a, 0x70, 0x03, 0x76, 0x78, 0x87, 0x70, 0x20,
  0x87, 0x19, 0xcc, 0x11, 0x0e, 0xec, 0x90, 0x0e, 0xe1, 0x30, 0x0f, 0x6e,
  0x30, 0x0f, 0xe3, 0xf0, 0x0e, 0xf0, 0x50, 0x0e, 0x33, 0x10, 0xc4, 0x1d,
  0xde, 0x21, 0x1c, 0xd8, 0x21, 0x1d, 0xc2, 0x61, 0x1e, 0x66, 0x30, 0x89,
  0x3b, 0xbc, 0x83, 0x3b, 0xd0, 0x43, 0x39, 0xb4, 0x03, 0x3c, 0xbc, 0x83,
  0x3c, 0x84, 0x03, 0x3b, 0xcc, 0xf0, 0x14, 0x76, 0x60, 0x07, 0x7b, 0x68,
  0x07, 0x37, 0x68, 0x87, 0x72, 0x68, 0x07, 0x37, 0x80, 0x87, 0x70, 0x90,
  0x87, 0x70, 0x60, 0x07, 0x76, 0x28, 0x07, 0x76, 0xf8, 0x05, 0x76, 0x78,
  0x87, 0x77, 0x80, 0x87, 0x5f, 0x08, 0x87, 0x71, 0x18, 0x87, 0x72, 0x98,
  0x87, 0x79, 0x98, 0x81, 0x2c, 0xee, 0xf0, 0x0e, 0xee, 0xe0, 0x0e, 0xf5,
  0xc0, 0x0e, 0xec, 0x30, 0x03, 0x62, 0xc8, 0xa1, 0x1c, 0xe4, 0xa1, 0x1c,
  0xcc, 0xa1, 0x1c, 0xe4, 0xa1, 0x1c, 0xdc, 0x61, 0x1c, 0xca, 0x21, 0x1c,
  0xc4, 0x81, 0x1d, 0xca, 0x61, 0x06, 0xd6, 0x90, 0x43, 0x39, 0xc8, 0x43,
  0x39, 0x98, 0x43, 0x39, 0xc8, 0x43, 0x39, 0xb8, 0xc3, 0x38, 0x94, 0x43,
  0x38, 0x88, 0x03, 0x3b, 0x94, 0xc3, 0x2f, 0xbc, 0x83, 0x3c, 0xfc, 0x82,
  0x3b, 0xd4, 0x03, 0x3b, 0xb0, 0xc3, 0x0c, 0xc4, 0x21, 0x07, 0x7c, 0x70,
  0x03, 0x7a, 0x28, 0x87, 0x76, 0x80, 0x87, 0x19, 0xd1, 0x43, 0x0e, 0xf8,
  0xe0, 0x06, 0xe4, 0x20, 0x0e, 0xe7, 0xe0, 0x06, 0xf6, 0x10, 0x0e, 0xf2,
  0xc0, 0x0e, 0xe1, 0x90, 0x0f, 0xef, 0x50, 0x0f, 0xf4, 0x00, 0x00, 0x00,
  0x71, 0x20, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0x06, 0xf0, 0xbc, 0x6c,
  0x47, 0x01, 0x4b, 0x4b, 0x5c, 0x13, 0x15, 0x11, 0xaf, 0x60, 0x05, 0xdb,
  0x70, 0xf9, 0xce, 0xe3, 0x0b, 0x01, 0x55, 0x14, 0x44, 0x54, 0x3a, 0xc0,
  0x50, 0x12, 0x06, 0x20, 0x60, 0x7e, 0x71, 0xdb, 0x76, 0x20, 0x0d, 0x97,
  0xef, 0x3c, 0xbe, 0x10, 0x11, 0xc0, 0x44, 0x84, 0x40, 0x33, 0x2c, 0x84,
  0x11, 0x38, 0xc3, 0xe5, 0x3b, 0x8f, 0x3f, 0x38, 0x13, 0xee, 0x17, 0xb7,
  0x6d, 0x01, 0xd3, 0x70, 0xf9, 0xce, 0xe3, 0x2f, 0x0e, 0x30, 0x88, 0xcd,
  0x43, 0x4d, 0x7e, 0x71, 0xdb, 0x26, 0x50, 0x0d, 0x97, 0xef, 0x3c, 0xbe,
  0x34, 0x39, 0x11, 0x81, 0x52, 0xd3, 0x43, 0x4d, 0x7e, 0x71, 0xdb, 0x66,
  0x20, 0x0d, 0x97, 0xef, 0x3c, 0xfe, 0x44, 0x44, 0x13, 0x02, 0x44, 0x98,
  0x5f, 0xdc, 0xb6, 0x0d, 0x3c, 0xc3, 0xe5, 0x3b, 0x8f, 0x4f, 0x35, 0x40,
  0x84, 0xf9, 0xc5, 0x6d, 0x03, 0x00, 0x00, 0x00, 0x61, 0x20, 0x00, 0x00,
  0xd1, 0x00, 0x00, 0x00, 0x13, 0x04, 0x41, 0x2c, 0x10, 0x00, 0x00, 0x00,
  0x06, 0x00, 0x00, 0x00, 0x54, 0x47, 0x00, 0x88, 0x94, 0xc2, 0x0c, 0x40,
  0x71, 0x95, 0x5d, 0xc9, 0x15, 0x5c, 0x39, 0x50, 0x29, 0x01, 0x1a, 0x23,
  0x00, 0x00, 0x00, 0x00, 0x23, 0x06, 0x09, 0x00, 0x82, 0x60, 0x60, 0x6d,
  0x85, 0x93, 0x65, 0xca, 0x88, 0x41, 0x02, 0x80, 0x20, 0x18, 0x18, 0x62,
  0x30, 0x59, 0x5a, 0x94, 0x8c, 0x18, 0x24, 0x00, 0x08, 0x82, 0x81, 0x31,
  0x06, 0xd4, 0xb5, 0x11, 0xca, 0x88, 0x41, 0x02, 0x80, 0x20, 0x18, 0x18,
  0x64, 0x50, 0x61, 0x5c, 0xb4, 0x8c, 0x18, 0x24, 0x00, 0x08, 0x82, 0x81,
  0x51, 0x06, 0x56, 0xd6, 0x45, 0xcc, 0x88, 0x41, 0x02, 0x80, 0x20, 0x18,
  0x18, 0x66, 0x70, 0x61, 0x5e, 0xd5, 0x8c, 0x18, 0x24, 0x00, 0x08, 0x82,
  0x81, 0x71, 0x06, 0x58, 0xf6, 0x21, 0xce, 0x88, 0x41, 0x02, 0x80, 0x20,
  0x18, 0x18, 0x68, 0x90, 0x85, 0x01, 0x18, 0x5c, 0xcf, 0x88, 0x41, 0x02,
  0x80, 0x20, 0x18, 0x18, 0x69, 0xa0, 0x89, 0x41, 0x18, 0x28, 0xd0, 0x88,
  0x41, 0x02, 0x80, 0x20, 0x18, 0x18, 0x6a, 0xb0, 0x89, 0x81, 0x18, 0x64,
  0xd1, 0x88, 0x41, 0x02, 0x80, 0x20, 0x18, 0x18, 0x6b, 0xc0, 0x8d, 0xc1,
  0x18, 0x30, 0xd2, 0x88, 0x41, 0x02, 0x80, 0x20, 0x18, 0x18, 0x6c, 0xd0,
  0x91, 0x01, 0x19, 0x64, 0xd3, 0x88, 0x41, 0x02, 0x80, 0x20, 0x18, 0x18,
  0x6d, 0xe0, 0x95, 0x41, 0x19, 0x64, 0xd4, 0x88, 0xc1, 0x01, 0x80, 0x20,
  0x18, 0x44, 0x6a, 0x30, 0x35, 0x62, 0x30, 0x9a, 0x10, 0x00, 0xa3, 0x09,
  0x42, 0x30, 0x9a, 0x30, 0x08, 0xa3, 0x09, 0xc4, 0x30, 0x62, 0x70, 0x00,
  0x20, 0x08, 0x06, 0xd1, 0x1b, 0x60, 0x12, 0x19, 0x8c, 0x26, 0x04, 0xc0,
  0x68, 0x82, 0x10, 0x8c, 0x26, 0x0c, 0xc2, 0x68, 0x02, 0x31, 0x8c, 0x18,
  0x1c, 0x00, 0x08, 0x82, 0x41, 0x44, 0x07, 0xdd, 0x05, 0x06, 0xa3, 0x09,
  0x01, 0x30, 0x9a, 0x20, 0x04, 0xa3, 0x09, 0x83, 0x30, 0x9a, 0x40, 0x0c,
  0x23, 0x06, 0x07, 0x00, 0x82, 0x60, 0x10, 0xe5, 0x81, 0x18, 0x70, 0x73,
  0x30, 0x9a, 0x10, 0x00, 0xa3, 0x09, 0x42, 0x30, 0x9a, 0x30, 0x08, 0xa3,
  0x09, 0xc4, 0x60, 0x13, 0x26, 0x9f, 0x11, 0x03, 0x04, 0x00, 0x41, 0x30,
  0x98, 0xfc, 0x20, 0x0d, 0xb0, 0x29, 0x18, 0x31, 0x40, 0x00, 0x10, 0x04,
  0x83, 0xe9, 0x0f, 0xd4, 0x00, 0x9b, 0x82, 0x11, 0x03, 0x04, 0x00, 0x41,
  0x30, 0x98, 0x40, 0x61, 0x0d, 0xb0, 0x29, 0x30, 0x89, 0x93, 0xcf, 0x88,
  0x01, 0x02, 0x80, 0x20, 0x18, 0x4c, 0xa2, 0xd0, 0x06, 0x9c, 0x14, 0x8c,
  0x18, 0x20, 0x00, 0x08, 0x82, 0xc1, 0x34, 0x0a, 0x6e, 0xc0, 0x49, 0xc1,
  0x88, 0x01, 0x02, 0x80, 0x20, 0x18, 0x4c, 0xa4, 0xf0, 0x06, 0x9c, 0x14,
  0x58, 0x04, 0x06, 0xf2, 0x19, 0x31, 0x40, 0x00, 0x10, 0x04, 0x83, 0xc9,
  0x14, 0xe2, 0x00, 0x0c, 0xa2, 0x60, 0xc4, 0x00, 0x01, 0x40, 0x10, 0x0c,
  0xa6, 0x53, 0x90, 0x03, 0x30, 0x88, 0x82, 0x11, 0x03, 0x04, 0x00, 0x41,
  0x30, 0x98, 0x50, 0x61, 0x0e, 0xc0, 0x20, 0x0a, 0x0c, 0x22, 0x03, 0xf9,
  0x8c, 0x18, 0x20, 0x00, 0x08, 0x82, 0xc1, 0xa4, 0x0a, 0x75, 0x40, 0x06,
  0x50, 0x30, 0x62, 0x80, 0x00, 0x20, 0x08, 0x06, 0xd3, 0x2a, 0xd8, 0x01,
  0x19, 0x40, 0xc1, 0x88, 0x01, 0x02, 0x80, 0x20, 0x18, 0x4c, 0xac, 0x70,
  0x07, 0x64, 0x00, 0x05, 0x23, 0x06, 0x07, 0x00, 0x82, 0x60, 0x10, 0xb9,
  0xc2, 0x1d, 0xc4, 0x81, 0x2a, 0x8c, 0x26, 0x04, 0xc0, 0x68, 0x82, 0x10,
  0x8c, 0x26, 0x0c, 0xc2, 0x68, 0x02, 0x31, 0x8c, 0x18, 0x1c, 0x00, 0x08,
  0x82, 0x41, 0x34, 0x0b, 0x7c, 0x60, 0x07, 0xa9, 0x30, 0x9a, 0x10, 0x00,
  0xa3, 0x09, 0x42, 0x30, 0x9a, 0x30, 0x08, 0xa3, 0x09, 0xc4, 0x30, 0x62,
  0xd0, 0x00, 0x20, 0x08, 0x06, 0x4c, 0x2e, 0xfc, 0x81, 0x1c, 0xc4, 0x01,
  0x1c, 0xbc, 0x01, 0x31, 0x08, 0xc1, 0x88, 0x81, 0x01, 0x80, 0x20, 0x18,
  0x28, 0xbb, 0xf0, 0x07, 0x81, 0x2d, 0x7c, 0x20, 0x1f, 0x5b, 0xf8, 0x40,
  0x3e, 0xb6, 0xf0, 0x81, 0x7c, 0x6c, 0xe1, 0x03, 0xf9, 0x8c, 0x18, 0x24,
  0x00, 0x08, 0x82, 0x01, 0x12, 0x0e, 0xaa, 0xa0, 0x0b, 0xba, 0x10, 0x0b,
  0xc4, 0x88, 0x41, 0x02, 0x80, 0x20, 0x18, 0x20, 0xe1, 0xa0, 0x0a, 0xba,
  0xa0, 0x0b, 0xa3, 0x30, 0x8c, 0x18, 0x24, 0x00, 0x08, 0x82, 0x01, 0x12,
  0x0e, 0xaa, 0xa0, 0x0b, 0xba, 0xf0, 0x0a, 0xc2, 0x88, 0x41, 0x02, 0x80,
  0x20, 0x18, 0x20, 0xe1, 0xa0, 0x0a, 0xba, 0xa0, 0x0b, 0xae, 0x10, 0x8c,
  0x18, 0x24, 0x00, 0x08, 0x82, 0x01, 0x12, 0x0e, 0xaa, 0xb0, 0x0b, 0xba,
  0x10, 0x0b, 0xa2, 0x30, 0x62, 0x90, 0x00, 0x20, 0x08, 0x06, 0x48, 0x38,
  0xa8, 0xc2, 0x2e, 0xe8, 0xc2, 0x28, 0x88, 0xc2, 0x88, 0x41, 0x02, 0x80,
  0x20, 0x18, 0x20, 0xe1, 0xa0, 0x0a, 0xbb, 0xa0, 0x0b, 0xaf, 0x20, 0x0a,
  0x23, 0x06, 0x09, 0x00, 0x82, 0x60, 0x80, 0x84, 0x83, 0x2a, 0xec, 0x82,
  0x2e, 0xb8, 0x42, 0x31, 0x62, 0x90, 0x00, 0x20, 0x08, 0x06, 0x48, 0x38,
  0xa8, 0x02, 0x2d, 0xe8, 0x42, 0x2c, 0xe8, 0xc1, 0x88, 0x41, 0x02, 0x80,
  0x20, 0x18, 0x20, 0xe1, 0xa0, 0x0a, 0xb4, 0xa0, 0x0b, 0xa3, 0x90, 0x07,
  0x23, 0x06, 0x09, 0x00, 0x82, 0x60, 0x80, 0x84, 0x83, 0x2a, 0xd8, 0x82,
  0x2e, 0xc4, 0x02, 0x1f, 0x8c, 0x18, 0x24, 0x00, 0x08, 0x82, 0x01, 0x12,
  0x0e, 0xaa, 0x60, 0x0b, 0xba, 0x30, 0x0a, 0x7b, 0x30, 0x62, 0x90, 0x00,
  0x20, 0x08, 0x06, 0x48, 0x38, 0xa8, 0xc2, 0x2c, 0xe8, 0x42, 0x2c, 0x74,
  0x23, 0x06, 0x09, 0x00, 0x82, 0x60, 0x80, 0x84, 0x83, 0x2a, 0xcc, 0x82,
  0x2e, 0x8c, 0x42, 0x36, 0x62, 0x90, 0x00, 0x20, 0x08, 0x06, 0x48, 0x38,
  0xa8, 0xc2, 0x2c, 0xe8, 0xc2, 0x2b, 0x54, 0x23, 0x06, 0x09, 0x00, 0x82,
  0x60, 0x80, 0x84, 0x83, 0x2a, 0xcc, 0x82, 0x2e, 0xb8, 0x42, 0x84, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x90, 0x3b, 0x56, 0x51, 0x0f, 0xd0, 0x8a, 0x5b,
  0x23, 0x20, 0x08, 0x7f, 0x54, 0x77, 0x72, 0xa1, 0x17, 0x00, 0x01, 0x00,
  0x20, 0x38, 0x16, 0x00, 0x78, 0x01, 0xed, 0x98, 0xb1, 0x4e, 0x15, 0x41,
  0x14, 0x86, 0xcf, 0x99, 0x9d, 0x3b, 0x77, 0xee, 0x32, 0xcc, 0xae, 0xb8,
  0x12, 0xa1, 0x11, 0x84, 0x50, 0x58, 0x28, 0x1a, 0x0b, 0x13, 0x23, 0x5a,
  0x58, 0x90, 0x10, 0x42, 0x48, 0x88, 0x8d, 0x16, 0x86, 0x27, 0x20, 0x36,
  0x76, 0x70, 0x81, 0x86, 0x18, 0x8c, 0x36, 0x3e, 0x80, 0xa5, 0x89, 0xcf,
  0x70, 0xaf, 0x82, 0xbd, 0xc4, 0xf0, 0x18, 0xd6, 0xc4, 0xc2, 0xe4, 0x7a,
  0xfe, 0x61, 0x56, 0x60, 0x43, 0x0d, 0x89, 0xce, 0x97, 0x9c, 0xff, 0xec,
  0x9e, 0x9d, 0xd9, 0x9d, 0x99, 0xb3, 0xd5, 0xff, 0x60, 0x94, 0x02, 0x1f,
  0x0e, 0x17, 0xde, 0x22, 0xbb, 0xa3, 0xc5, 0x77, 0x07, 0x1d, 0xa2, 0x16,
  0x6e, 0x04, 0x0d, 0x11, 0xd6, 0x2a, 0x28, 0xd1, 0xe1, 0x35, 0x28, 0x51,
  0x0e, 0x89, 0xe0, 0x51, 0x7c, 0x0d, 0x3d, 0x81, 0x44, 0x18, 0x42, 0xdd,
  0x39, 0x89, 0xc7, 0xb8, 0x6a, 0x62, 0x25, 0xc6, 0x63, 0x34, 0xc9, 0x20,
  0xe7, 0x50, 0xaf, 0xe7, 0x34, 0x18, 0x8b, 0x6f, 0xa9, 0x98, 0x4f, 0x73,
  0x6b, 0xf5, 0xd3, 0x23, 0x49, 0x4f, 0x25, 0x68, 0xe6, 0xf7, 0x58, 0x58,
  0xc7, 0xdc, 0xcb, 0x23, 0xd4, 0xe8, 0xde, 0xed, 0x79, 0x59, 0xdb, 0xbf,
  0x45, 0xdd, 0x27, 0xf0, 0x0d, 0xd2, 0x00, 0x67, 0x04, 0xee, 0xc7, 0x3e,
  0x1a, 0x88, 0xf0, 0x22, 0xde, 0xd7, 0xbd, 0xfc, 0x22, 0xd1, 0x3c, 0xcb,
  0x9a, 0x81, 0x80, 0x7c, 0x1e, 0xe8, 0x8f, 0xa1, 0xa5, 0x59, 0xc3, 0xdb,
  0xa5, 0x51, 0xfb, 0xa5, 0xc9, 0x8a, 0xbb, 0x52, 0xba, 0x50, 0xf0, 0x3f,
  0xd4, 0xfb, 0x32, 0x7c, 0xbc, 0x0b, 0xa3, 0xea, 0x9d, 0xff, 0x1f, 0xe0,
  0x0c, 0x46, 0x24, 0x00, 0x7a, 0x82, 0xa8, 0x71, 0x90, 0x44, 0x22, 0x91,
  0x48, 0x24, 0x12, 0x89, 0x44, 0x22, 0x91, 0x48, 0x24, 0x12, 0x89, 0xcb,
  0x66, 0xb2, 0xdb, 0xb3, 0x03, 0xde, 0x21, 0x2a, 0xa9, 0x9d, 0x75, 0x7b,
  0x5f, 0xb3, 0xad, 0xde, 0x20, 0xdb, 0xee, 0x7d, 0x5e, 0x52, 0x74, 0x9d,
  0xb7, 0xf6, 0xba, 0x8a, 0xd6, 0xd7, 0x68, 0xb7, 0xaf, 0xad, 0xf2, 0xad,
  0x5c, 0x39, 0xe3, 0x94, 0x6b, 0x7b, 0xe5, 0x88, 0x77, 0xf6, 0x2c, 0xd3,
  0xfe, 0x46, 0x78, 0xa6, 0xbd, 0xb5, 0xc6, 0x3b, 0x5b, 0xc9, 0x18, 0xed,
  0x3a, 0xb9, 0x71, 0xc3, 0x79, 0x25, 0x63, 0xb5, 0xcb, 0x45, 0xbd, 0xab,
  0x64, 0x8e, 0x76, 0x43, 0xde, 0xb8, 0xc2, 0x57, 0xee, 0xbb, 0xa5, 0x5f,
  0x2a, 0xcb, 0xb9, 0x28, 0x76, 0xfb, 0x9c, 0x2b, 0x9f, 0x79, 0xed, 0xc9,
  0x2a, 0x79, 0xb3, 0x76, 0x6c, 0xcd, 0x0f, 0x6e, 0x29, 0x2a, 0x27, 0xb4,
  0xbf, 0x72, 0xd3, 0xf8, 0x91, 0x69, 0xeb, 0xaf, 0xce, 0xe4, 0xbe, 0x50,
  0x98, 0xa3, 0x5b, 0x37, 0x24, 0xcb, 0xaa, 0xf9, 0x8e, 0x64, 0xdb, 0x71,
  0xc3, 0x44, 0x9b, 0xfd, 0x60, 0xa9, 0x35, 0x4c, 0xb4, 0x12, 0xd2, 0xa8,
  0x05, 0xff, 0x93, 0xe1, 0xd8, 0xd0, 0x2c, 0x04, 0xa0, 0xc6, 0x1c, 0x5c,
  0x9b, 0x93, 0x9a, 0xcc, 0x53, 0x1c, 0x9c, 0xd9, 0x33, 0xb5, 0x8c, 0x83,
  0xdb, 0x75, 0x52, 0x93, 0xd0, 0xaa, 0x8d, 0x6f, 0xfd, 0xb5, 0x63, 0xe1,
  0x7e, 0x69, 0xdd, 0x16, 0x3d, 0x63, 0xd1, 0x06, 0x7e, 0x46, 0xef, 0x6f,
  0x5a, 0xa2, 0x23, 0xc1, 0xc1, 0x3d, 0x22, 0xc2, 0x68, 0x1d, 0x9d, 0xb4,
  0xf7, 0x0f, 0x9f, 0x2d, 0x17, 0x07, 0x6f, 0x9e, 0x4f, 0x4d, 0xd8, 0x8d,
  0x95, 0xd7, 0xaf, 0x3e, 0xfe, 0x01, 0x6a, 0x99, 0x40, 0x43, 0x00, 0x00,
  0x17, 0x00, 0x01, 0x00, 0x10, 0xc4, 0x16, 0x00, 0x78, 0x01, 0xed, 0x98,
  0x31, 0x6b, 0x14, 0x41, 0x14, 0xc7, 0xdf, 0xcc, 0xee, 0xce, 0xcd, 0x1e,
  0x93, 0xb9, 0x35, 0x5e, 0xe2, 0x25, 0x8a, 0x9c, 0x7a, 0x48, 0x10, 0x8b,
  0x13, 0x04, 0x05, 0x8d, 0x6e, 0x21, 0x76, 0x12, 0x04, 0xb1, 0xb1, 0xb1,
  0xb3, 0x3d, 0x6c, 0xb4, 0xca, 0x6d, 0x54, 0xa2, 0x88, 0xa0, 0xa5, 0xad,
  0xbd, 0x60, 0x61, 0x61, 0xb7, 0x89, 0x39, 0x3f, 0x40, 0xf0, 0x13, 0x58,
  0xe6, 0x13, 0xd8, 0xc9, 0xf9, 0xfe, 0xb3, 0xb3, 0xc6, 0x5b, 0x02, 0xda,
  0x68, 0x11, 0xe6, 0x07, 0xef, 0xfd, 0x77, 0xde, 0xbe, 0xdd, 0x7d, 0xbb,
  0x73, 0xd7, 0xfc, 0xbf, 0x2c, 0x92, 0xe3, 0xe3, 0x58, 0xfc, 0x80, 0x9a,
  0xef, 0xb7, 0x5e, 0xef, 0xa6, 0x44, 0x09, 0x16, 0x8c, 0x44, 0x62, 0x46,
  0x5d, 0x64, 0xa2, 0xfb, 0xbe, 0xbf, 0x8d, 0xe4, 0xc1, 0xa9, 0x93, 0x1c,
  0x20, 0x47, 0xf2, 0x08, 0x24, 0x2a, 0xae, 0x71, 0x5c, 0xc7, 0x51, 0x13,
  0xcd, 0xb1, 0xec, 0xa3, 0x49, 0xcc, 0x91, 0xf9, 0xf8, 0x13, 0x98, 0x11,
  0xcf, 0xaa, 0x67, 0xfd, 0x9d, 0x73, 0x0f, 0x3e, 0xad, 0xb2, 0xdc, 0xe0,
  0xe0, 0xe3, 0x4b, 0x33, 0x73, 0x4c, 0x3e, 0xdc, 0xe4, 0xd9, 0x0e, 0x17,
  0xf5, 0x3e, 0x81, 0x95, 0x6a, 0x03, 0x66, 0xc0, 0x77, 0x05, 0x6f, 0x17,
  0x90, 0x89, 0x14, 0x12, 0xb3, 0xe7, 0xd7, 0xf5, 0x5e, 0x6e, 0x73, 0x1c,
  0x70, 0xb9, 0x63, 0xca, 0x40, 0x0f, 0x02, 0xf7, 0x57, 0xb4, 0x36, 0x54,
  0xe2, 0x69, 0xa6, 0xe4, 0x24, 0x53, 0x51, 0xe7, 0x02, 0x97, 0xfe, 0x2b,
  0xd5, 0x0c, 0x15, 0x4a, 0x54, 0x6f, 0xa1, 0xa4, 0xff, 0x75, 0x44, 0x11,
  0xf2, 0xa1, 0x07, 0xdf, 0x60, 0x9e, 0xa3, 0x06, 0xeb, 0x9a, 0xbf, 0xfd,
  0x5f, 0x05, 0x02, 0x81, 0x40, 0x20, 0x10, 0x08, 0x04, 0x02, 0x81, 0x40,
  0x20, 0x10, 0x08, 0xfc, 0x53, 0x4e, 0x15, 0x65, 0x2b, 0x7a, 0x56, 0xea,
  0x69, 0xf2, 0x02, 0x6e, 0xc5, 0xe7, 0x68, 0xb3, 0x9c, 0x46, 0xcf, 0xcb,
  0xf7, 0x6b, 0x92, 0x7a, 0xc9, 0xe6, 0x4e, 0x11, 0x6d, 0x94, 0x5a, 0x14,
  0xdb, 0x23, 0x7a, 0xb5, 0x65, 0x34, 0xd9, 0xb9, 0x36, 0x19, 0x6b, 0xc8,
  0x74, 0x2c, 0x19, 0x9d, 0xa8, 0x09, 0x25, 0x4f, 0x76, 0xc6, 0x7c, 0x2e,
  0xd3, 0xd2, 0x76, 0xb5, 0xb2, 0x47, 0xda, 0xd2, 0x2c, 0xb4, 0x95, 0x99,
  0x37, 0xd2, 0x2c, 0x1a, 0x65, 0x8e, 0x5a, 0x69, 0x8e, 0x59, 0x65, 0x86,
  0xf9, 0xe8, 0x1b, 0x89, 0x3c, 0xbd, 0x08, 0x8d, 0xf2, 0xb4, 0xc7, 0xfd,
  0x4b, 0xdc, 0xbb, 0xcc, 0x7d, 0xc7, 0xb9, 0x27, 0xee, 0xc7, 0xf6, 0xb2,
  0xef, 0xb9, 0x0a, 0xa5, 0x3c, 0x25, 0xa8, 0xcc, 0xd3, 0xe4, 0x34, 0xd9,
  0xd8, 0xd7, 0xd4, 0x80, 0xac, 0xf6, 0xc7, 0xad, 0xb3, 0x64, 0x3b, 0x56,
  0x5a, 0xe3, 0xd7, 0x3c, 0x9b, 0xe5, 0x19, 0x79, 0x3e, 0x69, 0x48, 0xab,
  0xaf, 0x14, 0x49, 0x2a, 0xa4, 0x5c, 0xcf, 0x70, 0x9e, 0xef, 0xdb, 0xf5,
  0xda, 0xf3, 0x7a, 0x02, 0xca, 0xd7, 0xf5, 0xa1, 0x3a, 0x4f, 0x07, 0xd0,
  0x34, 0x4f, 0x57, 0xa0, 0x26, 0x4f, 0xcf, 0x43, 0xe7, 0x78, 0x0e, 0xda,
  0xd8, 0x72, 0xb6, 0x5d, 0xc3, 0xa8, 0x5b, 0x42, 0x6a, 0xd4, 0x7a, 0x48,
  0x8d, 0x9a, 0xf3, 0x80, 0x1a, 0x35, 0xe7, 0xc5, 0x0a, 0xe7, 0x91, 0x0d,
  0x91, 0x00, 0x6a, 0x42, 0x38, 0x07, 0x69, 0xbf, 0xc6, 0xd7, 0x49, 0xe1,
  0x5c, 0xe2, 0x99, 0x5a, 0x24, 0x9c, 0xf3, 0xb6, 0x5f, 0xe3, 0x88, 0x65,
  0x0b, 0xcf, 0xfa, 0x65, 0x0d, 0xc3, 0x89, 0x8b, 0xe3, 0x16, 0xe7, 0x19,
  0xbb, 0xd8, 0xf1, 0xd8, 0xfb, 0xcb, 0x03, 0x0e, 0x7e, 0x41, 0x1e, 0xaf,
  0xf2, 0xeb, 0xd0, 0x1d, 0x7b, 0x57, 0xef, 0xcd, 0x95, 0xbb, 0xb7, 0x3b,
  0xbb, 0x2f, 0xef, 0x9d, 0xe9, 0xeb, 0xf1, 0x9d, 0x47, 0x0f, 0xdf, 0xfd,
  0x04, 0x87, 0xc5, 0x5b, 0xbb, 0x00, 0x00, 0x00, 0x17, 0x00, 0x01, 0x00,
  0x00, 0x54, 0x16, 0x00, 0x78, 0x01, 0xed, 0x98, 0x3d, 0x6b, 0x14, 0x51,
  0x18, 0x85, 0xdf, 0xfb, 0x31, 0x77, 0x66, 0xc7, 0xf1, 0xee, 0x26, 0xd9,
  0x89, 0x22, 0x7e, 0x44, 0x0d, 0xb6, 0x26, 0x60, 0x21, 0x88, 0xc6, 0xc2,
  0x56, 0xa2, 0x10, 0xd3, 0xf8, 0x27, 0x82, 0x8d, 0x56, 0x71, 0x44, 0x90,
  0x10, 0x04, 0x03, 0x8a, 0x36, 0x36, 0xc1, 0xd2, 0xfc, 0x86, 0x89, 0x49,
  0x3a, 0xab, 0x90, 0xce, 0xce, 0xda, 0xca, 0xca, 0x4a, 0x58, 0xcf, 0x99,
  0x99, 0xdd, 0xac, 0x63, 0x6c, 0x53, 0x84, 0xfb, 0xc0, 0x79, 0xef, 0xbd,
  0x67, 0x67, 0xb8, 0x5f, 0xb3, 0xcd, 0x59, 0x9a, 0x96, 0x8a, 0xaf, 0xc9,
  0xc7, 0xcf, 0x6c, 0xb3, 0x5f, 0xf7, 0xdf, 0xec, 0x77, 0x44, 0x22, 0x0e,
  0xc6, 0x58, 0xe9, 0xb3, 0x8a, 0xfc, 0xcc, 0x59, 0x45, 0x52, 0x96, 0x06,
  0xfe, 0x74, 0x0e, 0x22, 0x77, 0x59, 0x1a, 0x14, 0x8b, 0x14, 0x77, 0xa0,
  0x05, 0xf6, 0xda, 0xc4, 0xd0, 0x85, 0x46, 0x6d, 0x0c, 0xcb, 0x18, 0x96,
  0xe5, 0x3f, 0x70, 0x9e, 0xa1, 0xda, 0x6c, 0x2c, 0xbf, 0xbd, 0x8d, 0xe6,
  0x1e, 0x84, 0xfe, 0xd4, 0x02, 0x84, 0xf5, 0xd4, 0xfc, 0xf8, 0xf4, 0x68,
  0xd4, 0x3f, 0x29, 0x0c, 0xef, 0x89, 0x7c, 0x67, 0x69, 0xa1, 0x59, 0xc0,
  0x83, 0xe6, 0x1e, 0x1d, 0x0b, 0x78, 0xd6, 0x8c, 0x87, 0x77, 0xf9, 0x05,
  0x3a, 0xea, 0x3c, 0xc9, 0x00, 0xb0, 0x3d, 0x0a, 0xde, 0x93, 0x93, 0xc5,
  0x39, 0xa7, 0x5e, 0xf6, 0x9c, 0xde, 0xeb, 0x39, 0xd3, 0x9d, 0x87, 0x75,
  0xac, 0xd4, 0x6b, 0xa8, 0x71, 0xaa, 0xde, 0x85, 0xd3, 0xcd, 0xce, 0x4d,
  0xfb, 0xcb, 0x3a, 0x99, 0xf0, 0x0c, 0x26, 0xa1, 0x21, 0x1c, 0x13, 0x9e,
  0x46, 0x0f, 0x22, 0xe3, 0xff, 0xd5, 0x40, 0x20, 0x10, 0x08, 0x04, 0x02,
  0x81, 0x40, 0x20, 0x10, 0x08, 0x04, 0x02, 0x81, 0x63, 0xe7, 0x72, 0x51,
  0x26, 0x83, 0x7c, 0x8d, 0x69, 0x45, 0x6c, 0xde, 0x95, 0x3b, 0xe6, 0x7d,
  0x39, 0x30, 0x1f, 0xca, 0xad, 0x45, 0x2d, 0x92, 0xaf, 0xed, 0x26, 0xb9,
  0xec, 0x9d, 0xcd, 0xd7, 0x77, 0x77, 0xcc, 0xef, 0x72, 0x45, 0x5e, 0x6f,
  0x4f, 0xce, 0x9e, 0xf7, 0x36, 0x11, 0x1f, 0xa5, 0x92, 0xb9, 0x4c, 0x32,
  0x2d, 0xc5, 0x41, 0xdc, 0x15, 0x9b, 0xc0, 0xeb, 0xc0, 0x4b, 0xe1, 0x19,
  0x7a, 0x67, 0xc4, 0x66, 0xf0, 0x4e, 0xc3, 0xf3, 0xf0, 0x52, 0x7a, 0x97,
  0xc4, 0xf6, 0xe1, 0xe5, 0xf0, 0xa6, 0xe1, 0x9d, 0xa2, 0x77, 0x5d, 0xac,
  0x4a, 0xc5, 0x1b, 0x9f, 0x7a, 0x49, 0x24, 0xb3, 0xf0, 0x5c, 0xd4, 0xb7,
  0xaf, 0xb4, 0xbf, 0xd1, 0x9b, 0x49, 0xfd, 0xc4, 0x95, 0xcc, 0x4f, 0x5d,
  0xbb, 0xe8, 0x5d, 0x7c, 0xf3, 0x5b, 0xac, 0x53, 0x4c, 0xe4, 0x0e, 0xa4,
  0x83, 0xb5, 0x29, 0x8c, 0x23, 0x2f, 0x85, 0x96, 0xd5, 0x42, 0x6b, 0xc8,
  0xad, 0x6a, 0x03, 0x4f, 0x8c, 0xd8, 0x08, 0x6d, 0x92, 0x61, 0x73, 0x2f,
  0xb6, 0xab, 0xb8, 0xad, 0x8e, 0xa6, 0x46, 0x54, 0xb9, 0x4c, 0xcb, 0xab,
  0x72, 0x55, 0x55, 0x65, 0x56, 0x73, 0x2c, 0x84, 0x9e, 0x52, 0x55, 0xa2,
  0x73, 0xe8, 0xe1, 0x3d, 0xad, 0xaa, 0xd4, 0xf6, 0x2f, 0xcf, 0xa8, 0x2a,
  0x09, 0x3b, 0xf4, 0x20, 0xab, 0x63, 0xce, 0x35, 0x8a, 0x7f, 0xb0, 0x6a,
  0xb1, 0x96, 0x69, 0xec, 0xbf, 0x91, 0x50, 0xd2, 0xe4, 0xc3, 0xb3, 0x50,
  0x07, 0x52, 0x4d, 0x32, 0xcb, 0xa7, 0x6d, 0x93, 0xb2, 0x6d, 0xdc, 0x5a,
  0x7e, 0xd8, 0xdd, 0x5f, 0x7f, 0x7c, 0x75, 0x26, 0x79, 0xbe, 0xf4, 0xf4,
  0xc9, 0xe6, 0x1f, 0x76, 0x03, 0x49, 0x6d, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x05, 0x00, 0x00, 0x00, 0x03, 0x00, 0x03, 0x01, 0x08, 0x02, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x03, 0x01, 0x04, 0x03, 0x04, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x05, 0x05,
  0x08, 0x02, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x03, 0x01, 0x06, 0x07, 0x04, 0x02, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x02, 0x07, 0x08, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0xcc, 0x00, 0x00, 0x78, 0x01, 0x6d, 0xcc, 0xb1, 0x11, 0x40, 0x40,
  0x10, 0x46, 0xe1, 0x1f, 0xa3, 0x07, 0x89, 0xae, 0x2e, 0x54, 0x84, 0x50,
  0x11, 0x42, 0x45, 0x08, 0x15, 0x21, 0xd4, 0x13, 0xef, 0x05, 0x9b, 0x79,
  0x33, 0xdf, 0xdc, 0xba, 0x9d, 0xd3, 0x25, 0x19, 0x31, 0xc1, 0x1e, 0xcc,
  0x30, 0xef, 0x1b, 0xcc, 0x79, 0x85, 0x39, 0xef, 0x30, 0xe7, 0x13, 0x3d,
  0xec, 0x86, 0xff, 0x5c, 0x60, 0xce, 0xd5, 0x4b, 0x7e, 0x6f, 0x18, 0xf0,
  0xb7, 0x3b, 0x60, 0xce, 0xb2, 0xda, 0x5d, 0xa8, 0x77, 0x32, 0x77, 0x9e,
  0x49, 0xf2, 0x01, 0x2b, 0xfe, 0x15, 0xf2, 0x00, 0x78, 0x62, 0x6f, 0x70,
  0x01, 0x00, 0x00, 0x00, 0x7e, 0x02, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x30, 0x00, 0x00, 0x00
};
